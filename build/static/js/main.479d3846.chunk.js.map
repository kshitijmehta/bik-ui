{"version":3,"sources":["appConstants/AxiosConstants.ts","appConstants/CountryCodes.ts","appConstants/SubProducts.ts","reducers/UserInformation.ts","appConstants/ApiServerConstants.ts","services/axiosBase.ts","services/axios.ts","services/Misc.ts","reducers/Login.ts","reducers/UserSettings.ts","reducers/Colour.ts","reducers/Size.ts","reducers/SubCategory.ts","reducers/Coupon.ts","reducers/Product.ts","reducers/ProductCount.ts","appConstants/ProductsConstants.ts","reducers/Cart.ts","reducers/Checkout.ts","reducers/UserLocation.ts","reducers/Order.ts","reducers/Shipper.ts","reducers/Shipment.ts","reducers/RelatedProducts.ts","reducers/TrendingProducts.ts","reducers/LatestProducts.ts","reducers/Search.ts","reducers/CustomerShippment.ts","reducers/index.ts","components/user/UserInformation.tsx","components/user/UserNav.tsx","components/user/UserSettings.tsx","components/user/Orders.tsx","components/user/UserContainer.tsx","components/login/login.tsx","components/footer/MainFooter.tsx","components/pilot/Navigation.tsx","components/pilot/SideCart.tsx","components/pilot/MobileNavigation.tsx","components/admin/AdminNav.tsx","components/admin/AdminProductList.tsx","components/shared/NotificationContainer.tsx","components/shared/PayPalContainer.tsx","components/shared/PayPalPayment.tsx","components/shared/CashOnDeliveryPayment.tsx","components/shared/QuickProductList.tsx","components/shared/LoadingProductArticle.tsx","components/shared/ScrollToTop.tsx","components/shared/ContactUs.tsx","components/admin/subComponents/colour/ColourList.tsx","components/admin/subComponents/colour/ProductColour.tsx","components/admin/subComponents/size/ProductSize.tsx","components/admin/subComponents/size/SizeList.tsx","components/admin/subComponents/subCategory/ProductSubCategory.tsx","components/admin/subComponents/subCategory/SubCategoryList.tsx","components/admin/subComponents/coupon/ProductCoupon.tsx","components/admin/subComponents/coupon/CouponList.tsx","components/admin/subComponents/product/ProductItem.tsx","components/admin/subComponents/product/ProductList.tsx","components/admin/subComponents/orders/OrderList.tsx","components/admin/subComponents/orders/OrderDetails.tsx","components/admin/subComponents/shippers/ShipperDetails.tsx","components/admin/subComponents/shippers/ShipperList.tsx","components/admin/subComponents/users/UserList.tsx","components/admin/subComponents/users/UserDetails.tsx","components/admin/MainContainer.tsx","components/customer/CustomerProductList.tsx","components/customer/CustomerContainer.tsx","components/customer/CustomerProductFilter.tsx","serviceWorker.ts","components/customer/ProductDetails/CustomerProductDetails.tsx","components/customer/ProductDetails/CustomerProductDetailsLoading.tsx","components/customer/ProductDetails/CustomerProductDetailsContainer.tsx","components/customer/Cart/CartDetails.tsx","components/customer/Cart/CartPrice.tsx","components/customer/Cart/CustomerCartContainer.tsx","components/customer/Checkout/CheckoutPrice.tsx","components/customer/Checkout/CheckoutContianer.tsx","components/customer/Home/SubBanner.tsx","components/customer/Home/Banner.tsx","components/customer/Home/trendingLatest/TrendingLatestProduct.tsx","components/customer/Home/trendingLatest/TrendingLatestContainer.tsx","components/customer/Home/HomePageContainer.tsx","index.tsx"],"names":["HttpRequest","HttpStatusCode","SubProducts","CountryCodes","Actions","SubCategories","AllowReturn","serverImagePath","apiServerHost","axios","create","baseURL","headers","api","url","makeRequest","method","GET","data","POST","config","a","defaults","window","localStorage","getItem","request","response","status","removeItem","location","href","message","getSubCategoryFromId","id","filterSubcategories","subCategories","categoryId","filter","subCategory","productCategoryId","Number","filterSize","sizes","size","indexOf","productCategory","calculateUserDiscount","discount","price","Math","ceil","toString","calculateUserDiscountPrice","getCurrencyIcon","currency","showINRUSD","userLocation","priceINR","priceUSD","createProductCountList","activeProducts","productCountList","forEach","product","subcategoryId","colourId","sizeId","name","sizeName","quantity","count","colourName","subcategoryName","countHighlightProducts","products","isTrending","trending","length","latest","initialState","isAdmin","allUsers","_isError","_isLoading","_isSuccess","setUser","user","type","SET_USER","loadingUser","LOADING_USER","errorUser","ERROR_USER","updateDiscount","emailAddress","UPDATE_USER_DISCOUNT","getUser","disptach","OK","loadingRegister","LOADING_REGISTER","errorRegister","ERROR_REGISTER","successRegister","SUCCESS_REGISTER","setUserSetting","userSettings","SET_USER_SETTINGS","loadingUserSettings","LOADING_USER_SETTINGS","errorUserSettings","ERROR_USER_SETTINGS","loadingColour","LOADING_COLOUR","errorColour","ERROR_COLOUR","getColour","dispatch","res","SET_COLOUR","loadingSize","LOADING_SIZE","successSize","SUCCESS_SIZE","errorSize","addUpdateSize","product_size","value","product_size_code","code","product_category","size_id","productCategoryIndex","productCategoryName","UPDATE_SIZE","getSize","SET_SIZE","loadingSubCategory","LOADING_SUBCATEGORY","successSubCategory","SUCCESS_SUBCATEGORY","errorSubCategory","ERROR_SUBCATEGORY","addUpdateSubCategory","product_name","product_desc","product_category_id","subcategory_id","subCategoryId","UPDATE_SUBCATEGORY","getSubCategory","SET_SUBCATEGORY","loadingCoupon","LOADING_COUPON","errorCoupon","ERROR_COUPON","setCoupon","SET_COUPON","updateCouponSuccess","UPDATE_COUPON_SUCCESS","deleteCouponSuccess","DELETE_COUPON_SUCCESS","updateCoupon","coupon","isDelete","coupon_code","coupon_value","coupon_id","couponId","loadingProduct","LOADING_PRODUCT","successProduct","SUCCESS_PRODUCT","errorProduct","ERROR_PRODUCT","setProducts","_hasMoreProducts","SET_PRODUCT","setDefaulState","SET_DEFAULT_PRODUCT","deleteProductSuccess","DELETE_PRODUCT_SUCCESS","setCustomerProducts","SET_CUSTOMER_PRODUCT","setProductHighlight","productId","SET_PRODUCT_HIGHLIGHT","singleData","addUpdateProduct","sizeColourQuantity","formData","FormData","productImageBlob","Array","from","element","index","append","colour","description","JSON","stringify","deletedImagePath","deletedProductDetailIds","getProduct","SET_SINGLE_PRODUCT","getCustomerProducts","offset","limit","startPrice","endPrice","searchText","freshData","_quantityUpdate","loadingCart","LOADING_CART","errorCart","ERROR_CART","updateCartSuccess","UPDATE_CART_SUCCESS","deleteCartProduct","DELETE_CART_PRODUCT","addUpdateCart","cart","isLoggedIn","newCart","totalPrice","productPrice","productQuantity","UPDATE_CART_LOGGED_OUT","product_detail_id","productDetailId","order_quantity","price_id","currencyType","orderdetail_id","cartId","delete_flag","result","productImage","productImagePath","productName","subcategory","getCart","ADD_CART_SUCCESS","deleteCartItem","DELETE_CART_PRODUCT_LOGGED_OUT","_isPaymentSucceess","_priceChanged","_isFetchCodCodeSuccess","loadingCheckout","LOADING_CHECKOUT","successCheckoutOrder","SUCCESS_CHECKOUT_ORDER","errorCheckout","ERROR_CHECKOUT","defaultCheckout","DEFAULT_CHECKOUT","successPayment","SUCCESS_PAYMENT","priceChanged","PRICE_CHANGED","getPayPalOrder","amount","displayAmount","orderId","PARTIAL_INFO","setUserLocation","SET_USER_LOCATION","loadingOrder","LOADING_ORDER","successOrder","_hasMoreOrders","SUCCESS_ORDER","adminSuccessOrder","ADMIN_SUCCESS_ORDER","errorOrder","ERROR_ORDER","customerReturn","orderDetailsId","CUSTOMER_RETURN","defaulOrderReturn","DEFAULT_ORDER_RETURN","_isOrderUpdate","getCustomerOrders","loadingShipper","LOADING_SHIPPER","errorShipper","ERROR_SHIPPER","updateShipperSuccess","UPDATE_SHIPPER_SUCCESS","deleteShipperSuccess","DELETE_SHIPPER_SUCCESS","getShippers","SET_SHIPPER","updateShipper","shipper","shipper_name","shipperName","shipper_link","trackingLink","shipper_id","shipperId","successShipment","SUCCESS_SHIPMENT","setSearch","SET_SEARCH","shippmentPrice","setShippingPrice","SET_SHIPPING_PRICE","reducers","state","action","DEFAULT_USER","SET_ALL_USER","map","toLowerCase","userLogin","LOADING_LOGIN","ERROR_LOGIN","SUCCESS_LOGIN","DEFAULT_STATE","SUCCESS_COLOUR","UPDATE_COLOUR_SUCCESS","originalState","updatedValue","updatedState","d","DEFAULT_COLOUR","ERROR_SIZE","SUCCESS_COUPON","orgState","updValue","updState","DEFAULT_COUPON","concat","productCount","LOADING_PRODUCT_COUNT","ERROR_PRODUCT_COUNT","SET_PRODUCT_COUNT","SUCCESS_CART","SET_CART","SET_LOGGED_CART","og","newProduct","originalStatelo","oglo","newProductlo","setItem","DEFAULT_CART","CART_GET_UPDATED_QUANTITY","CART_QUANTITY_FINE","checkout","LOADING_USER_LOCATION","customerOrders","SINGLE_DATA","singleOrder","updatedOrder","orderItems","order","orderDetailId","shipmentDetails","returnStatus","SUCCESS_SHIPPER","DEFAULT_SHIPPER","shipment","LOADING_SHIPMENT","ERROR_SHIPMENT","relatedProduct","SUCCESS_RELATED_PRODUCT","LOADING_RELATED_PRODUCT","ERROR_RELATED_PRODUCT","SET_RELATED_PRODUCT","trendingProduct","SUCCESS_TRENDING_PRODUCT","LOADING_TRENDING_PRODUCT","ERROR_TRENDING_PRODUCT","SET_TRENDING_PRODUCT","latestProduct","SUCCESS_LATEST_PRODUCT","LOADING_LATEST_PRODUCT","ERROR_LATEST_PRODUCT","SET_LATEST_PRODUCT","search","LOADING_SEARCH","ERROR_SEARCH","customerShippment","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunkMiddleware","UserInformation","props","useDispatch","userData","isLoading","userInformationFormik","useFormik","initialValues","firstName","lastName","mobile","dob","gender","country","default","countryCode","city","pincode","addressLineOne","addressLineTwo","addressLineThree","addressId","validationSchema","Yup","required","matches","onSubmit","enableReinitialize","handleSubmit","className","fromCart","uk-grid","getFieldProps","touched","errors","key","disabled","src","UserNav","uk-sticky","uk-icon","showPersonal","onClick","toggelDetails","showOrders","showSettings","UserSettings","userSettingFormik","currentPassword","newPassword","confirmPassword","oneOf","resetForm","Orders","history","useHistory","useState","hasMoreOrders","setHasMoreOrders","selectedReason","setSelectedReason","showOrderDetailIndex","setShowOrderDetailIndex","returnOrderDetailId","setReturnOrderDetailId","returnOrderNumber","setReturnOrderNumber","returnProductName","setReturnProductName","showReturnError","setShowReturnError","returnModalRef","useRef","returnButtonRef","orders","useSelector","shipperData","useEffect","current","getBoundingClientRect","top","that","setTimeout","click","getShipmentLink","trackingNumber","shipperInfo","target","checkReturnEligibilty","deliveryDate","differenceInDays","Date","getTime","returnOrder","reason","orderNumber","returnReason","userName","customerProductReturn","dataLength","next","hasMore","loader","style","textAlign","marginTop","endMessage","paymentDate","split","push","alt","paymentReturned","uk-toggle","shippingDate","uk-accordion","orderItem","ref","visibility","uk-modal","uk-close","checked","UserContainer","userTab","useParams","setShowSettings","setShowPersonal","setShowOrders","selected","UserLogin","isError","responseMessage","loginRedirect","setLoginRedirect","loginFormik","email","password","isRegistration","forgetPassword","when","is","then","values","registerationData","loginData","loginDetails","access_token","toggleLoginRegister","setFieldValue","parse","to","onChange","event","currentTarget","Iso","MainFooter","width","Navigation","cartCount","setCartCount","enteredSearchText","setEnteredSearchText","cartCountCssFlag","setCartCountCssFlag","Intl","DateTimeFormat","resolvedOptions","timeZone","getTimezoneOffset","error","searchProduct","navigateTo","categoryPath","subcategoryPath","preventDefault","logout","uk-navbar","uk-navbar-toggle-icon","Object","keys","e","uk-drop","uk-search-icon","placeholder","onKeyPress","uk-dropdown","minWidth","userId","cartData","SideCart","mainTotal","setMainTotal","userDiscountTotal","setUserDiscountTotal","totalAfterDiscount","setTotalAfterDiscount","discountedTotal","setDiscountedTotal","userCouponTotal","setUserCouponTotal","couponData","cartPrice","discountPrice","priceAfterDiscount","couponPrice","priceAfterCoupon","uk-offcanvas","uk-tooltip","MobileNavigation","uk-nav","title","AdminNav","subProductToggle","addEditToggle","selectedTab","setSelectedTab","isOnList","setIsOnList","PRODUCT","USERS","ORDERS","SUB_PRODUCT","SIZE","COLOUR","COUPONS","SHIPPER","AdminProductList","searchTerm","setSearchTerm","tabName","setTabName","productList","tableData","setTableData","stateData","columns","productColumns","productType","getAdminOrders","paymentMode","includes","defaultSortField","sortByColumn","defaultSortAsc","undefined","selectableRows","selectableRowsNoSelectAll","selectableRowsHighlight","selectableRowsVisibleOnly","expandableRows","expandOnRowClicked","expandableRowsComponent","ExpandableComponent","pagination","highlightOnHover","striped","pointerOnHover","dense","noTableHead","persistTableHead","progressPending","noHeader","subHeader","subHeaderComponent","color","searchPlaceholder","fixedHeader","fixedHeaderScrollHeight","direction","NotificationContainer","isSdkReady","paypal","this","addPaypalSdk","onButtonReady","actions","options","shippingPreference","purchase_units","currency_code","application_context","shipping_preference","capture","details","onSuccess","catch","err","catchError","onCancel","createOrder","createSubscription","onApprove","Button","Buttons","driver","React","ReactDOM","createOrderFn","queryParams","entries","join","script","document","createElement","async","onload","setState","onerror","Error","body","appendChild","Component","defaultProps","clientId","PayPalPayment","paypalPaymentLoadingRef","paypalModalRef","paypalPaymentMessage","setPaypalPaymentMessage","setPayPalOrderId","paymentErroredOut","setPaymentErroredOut","paymentSuccess","setPaymentSuccess","setIsCard","paypalOrderId","cartTotalPrice","paypalButton","close","go","didPriceChanged","togglePaymenModal","fundingType","successPaypalPayment","fundingSource","cartTotalWithShipping","cartOrderId","onError","console","log","render","tt","funding","innerWidth","scrollTo","behavior","setContainerIsCard","orderData","paymentData","paypalData","paypalResponse","quantityCount","isStandard","uk-spinner","CashOnDeliveryPayment","showOtpContainer","timeLeft","setTimeLeft","enteredOTP","setEnteredOTP","timer","setInterval","clearTimeout","resendOtpToCustomer","QuickProductList","uk-slider","uk-slider-item","uk-slidenav-previous","uk-slidenav-next","imagePaths","imageNames","addToCart","LoadingProductArticle","keyIndex","ScrollToTop","withRouter","unlisten","listen","ContactUs","colourActionStatus","colourQuickViewFormik","product_color_code","product_color","colour_id","isSubmitting","ColourList","selector","sortable","ProductColour","colourFormik","ProductSize","sizeFormik","sizeActionStatus","SizeList","sizeQuickViewFormik","ProductSubCategory","subCategoryFormik","moreThan","subCategoryActionStatus","SubCategoryList","subCategoryQuickViewFormik","ProductCoupon","couponFormik","couponActionStatus","CouponList","cell","row","confirm","couponQuickViewFormik","ProductItem","setSizeColourQuantity","selectedSizes","setSelectedSizes","sizeColourQuantityErrorMessage","setSizeColourQuantityErrorMessage","productItemFormik","sizeColourQuantityCombo","filteredKey","checkForProductCategory","updatedImageName","adminProductCombo","productDetailIdArray","some","item","productSize","productColour","productActionStatus","sizeArray","colourArray","quantityArray","editSizeColourQuantityCombo","sizeItem","filteredSubcategories","filteredProductSize","updatedSizeColourQuantityArray","field","currentItem","splice","cols","handleChange","onBlur","handleBlur","fill","isArray","newPDArray","reduceProductComboLength","availableSizes","addProductComboLength","htmlFor","multiple","files","currentNumberOfFile","currentFiles","filesArray","checkForMaxFileUpload","fileName","filePath","fileNames","path","imagePath","imageName","removeCurrentImage","getFileNameAndPath","call","file","i","URL","createObjectURL","img","removeImage","ProductList","marginLeft","productQuickViewFormik","highlight","setSubmitting","updateProductHighLight","OrderList","wrap","icon","orderLength","getIconForAdminOrder","whiteSpace","OrderDetails","adminShipmentData","setAdminShipmentData","orginalTrackingLink","setOrginalTrackingLink","shippers","shipmentStatus","tempShipmentData","tempTrackingLink","shipmentId","updateShipmentData","shipmentDataCopy","shipmentDataToUpdate","updatedShipmentData","updateOrderStatus","orderUpdate","sendTrackingEmail","isTrackingChanged","orginalTrackingLinkCopy","customerEmail","userDetails","customerName","payaplResponse","transactionId","payments","captures","getPaypalTransactionId","razorpayPaymentId","standardShipping","ShipperDetails","shipperActionStatus","shipperFormik","ShipperList","shipperQuickViewFormik","UserList","userActionStatus","userDiscountQuickViewFormik","updateUserDiscount","UserDetails","MainContainer","setIsOnAdd","setSubProductId","isOnAdd","subProductId","showSubProductComponent","CustomerProductList","hasMoreProducts","setHasMoreProducts","CustomerContainer","filterOn","setColourId","setSizeId","setSubCategoryId","setStartPrice","setEndPrice","setcategoryId","subCategoryQueryParam","setSubCategoryQueryParam","subCateId","activeProductCount","productKey","find","selectedSubCat","selectedColour","selectedSize","activeSubCat","activeColour","activeSize","getTotalProductCount","filterSelected","CustomerProductFilter","filterColourId","setFilterColourId","filterSizeId","setFilterSizeId","filterSubCategory","setFilterSubCategory","filterStartPrice","setFilterStartPrice","filterEndPrice","setFilterEndPrice","startPriceTimer","setStartPriceTimer","endPriceTimer","setEndPriceTimer","toggleAddingRemovingId","ids","newId","getFilteredProduct","updatedColourFilter","updatedSizeFilter","updatedSubCategory","flexBasis","getProductCount","Boolean","hostname","match","CustomerProductDetails","cartProductQuantity","relatedProducts","pINR","setPINR","pUSD","setPUSD","pQuantity","setPQuantity","pSize","setPSize","pSizeId","setPSizeId","pDetailId","setPDetailId","setSelectedSize","selectedQuantity","setSelectedQuantity","selectedProductDetailId","setSelectedProductDetailId","maxQuantity","setMaxQuantity","defaultProductDetail","productIndex","onChangeQuantity","toggleQuantity","isIncrement","maxQaun","checkForDefaultSize","sizeList","uk-slideshow","uk-lightbox","mainSlider","smallSlider","selectedIndex","maxQ","pdId","setSize","onBlurQuantity","CustomerProductDetailsLoading","uk-slideshow-item","uk-switcher","CustomerProductDetailsConstainer","queryProductId","setMainSlider","setSmallSlider","setCartProductQuantity","cartProductFlag","setCartProductFlag","tabIndex","cartProductCount","getRelatedProduct","CartDetails","setQuantity","enteredCoupon","setEnteredCoupon","quantityCheckMessage","setQuantityCheckMessage","couponStatus","deboucedId","setDeboucedId","quantityChanged","setQuantityChanged","quantityChangedProductId","setQuantityChangedProductId","orderQuantityCheckButtonRef","orderQuantityCheckModalRef","qt","checkForAvailableQuantity","cartItem","availableQuantity","updateCart","updateQantity","changedQuantity","chqty","newQuantity","updatedQuantity","checkCouponValidity","deleteCart","CartPrice","cartTotal","setCartTotal","total","CustomerCartContainer","Razorpay","CheckoutPrice","setCartTotalPrice","priceAfterShipping","setPriceAfterShipping","setQuantityCount","setCartOrderId","paymentMessage","setPaymentMessage","paymentError","setPaymentError","errorHappendAt","setErrorHappendAt","shippingCost","paymentLoadingRef","containerIsCard","ukSticky","setUkSicky","showCodContainer","setShowCodContainer","noAddressError","setNoAddressError","setDidPriceChanged","timeForShowPriceChange","setTimeForShowPriceChange","calculateShippingCost","shippingType","successRazorPay","razorpay_payment_id","razorpay_order_id","razorpay_signature","rzp1","on","source","step","metadata","open","otp","razorpayOrderId","razorpaySignature","razorpayData","receipt","proceedWithPayment","getCodOrder","successCod","codData","itemCount","reduce","accumulator","cost","CheckoutContainer","setPaymentMode","internationalShipping","setInternationalShipping","SubBanner","Banner","backgroundColor","uk-cover","TrendingLatestProducts","TrendingLatestContainer","latestProducts","trendingProducts","HomePageContainer","app","StrictMode","createBrowserHistory","exact","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.479d3846.chunk.js","sourcesContent":["enum HttpRequest {\r\n  GET = \"GET\",\r\n  POST = \"POST\",\r\n  DELETE = \"DELETE\",\r\n  PATCH = \"PATCH\"\r\n};\r\n\r\n\r\nenum HttpStatusCode {\r\n  OK = 200,\r\n  ACCEPTED = 202,\r\n  PARTIAL_INFO = 203,\r\n  BAD_REQUEST = 400,\r\n  NOT_FOUND = 404\r\n}\r\n\r\nexport { HttpRequest, HttpStatusCode };","const CountryCodes = [\r\n  {\r\n    \"name\": \"Afghanistan\",\r\n    \"Iso\": \"+93\",\r\n    \"countryCode\": \"AF\"\r\n  },\r\n  {\r\n    \"name\": \"Åland Islands\",\r\n    \"Iso\": \"+358\",\r\n    \"countryCode\": \"AX\"\r\n  },\r\n  {\r\n    \"name\": \"Albania\",\r\n    \"Iso\": \"+355\",\r\n    \"countryCode\": \"AL\"\r\n  },\r\n  {\r\n    \"name\": \"Algeria\",\r\n    \"Iso\": \"+213\",\r\n    \"countryCode\": \"DZ\"\r\n  },\r\n  {\r\n    \"name\": \"American Samoa\",\r\n    \"Iso\": \"+1684\",\r\n    \"countryCode\": \"AS\"\r\n  },\r\n  {\r\n    \"name\": \"Andorra\",\r\n    \"Iso\": \"+376\",\r\n    \"countryCode\": \"AD\"\r\n  },\r\n  {\r\n    \"name\": \"Angola\",\r\n    \"Iso\": \"+244\",\r\n    \"countryCode\": \"AO\"\r\n  },\r\n  {\r\n    \"name\": \"Anguilla\",\r\n    \"Iso\": \"+1264\",\r\n    \"countryCode\": \"AI\"\r\n  },\r\n  {\r\n    \"name\": \"Antarctica\",\r\n    \"Iso\": \"+672\",\r\n    \"countryCode\": \"AQ\"\r\n  },\r\n  {\r\n    \"name\": \"Antigua and Barbuda\",\r\n    \"Iso\": \"+1268\",\r\n    \"countryCode\": \"AG\"\r\n  },\r\n  {\r\n    \"name\": \"Argentina\",\r\n    \"Iso\": \"+54\",\r\n    \"countryCode\": \"AR\"\r\n  },\r\n  {\r\n    \"name\": \"Armenia\",\r\n    \"Iso\": \"+374\",\r\n    \"countryCode\": \"AM\"\r\n  },\r\n  {\r\n    \"name\": \"Aruba\",\r\n    \"Iso\": \"+297\",\r\n    \"countryCode\": \"AW\"\r\n  },\r\n  {\r\n    \"name\": \"Australia\",\r\n    \"Iso\": \"+61\",\r\n    \"countryCode\": \"AU\"\r\n  },\r\n  {\r\n    \"name\": \"Austria\",\r\n    \"Iso\": \"+43\",\r\n    \"countryCode\": \"AT\"\r\n  },\r\n  {\r\n    \"name\": \"Azerbaijan\",\r\n    \"Iso\": \"+994\",\r\n    \"countryCode\": \"AZ\"\r\n  },\r\n  {\r\n    \"name\": \"Bahamas\",\r\n    \"Iso\": \"+1242\",\r\n    \"countryCode\": \"BS\"\r\n  },\r\n  {\r\n    \"name\": \"Bahrain\",\r\n    \"Iso\": \"+973\",\r\n    \"countryCode\": \"BH\"\r\n  },\r\n  {\r\n    \"name\": \"Bangladesh\",\r\n    \"Iso\": \"+880\",\r\n    \"countryCode\": \"BD\"\r\n  },\r\n  {\r\n    \"name\": \"Barbados\",\r\n    \"Iso\": \"+1246\",\r\n    \"countryCode\": \"BB\"\r\n  },\r\n  {\r\n    \"name\": \"Belarus\",\r\n    \"Iso\": \"+375\",\r\n    \"countryCode\": \"BY\"\r\n  },\r\n  {\r\n    \"name\": \"Belgium\",\r\n    \"Iso\": \"+32\",\r\n    \"countryCode\": \"BE\"\r\n  },\r\n  {\r\n    \"name\": \"Belize\",\r\n    \"Iso\": \"+501\",\r\n    \"countryCode\": \"BZ\"\r\n  },\r\n  {\r\n    \"name\": \"Benin\",\r\n    \"Iso\": \"+229\",\r\n    \"countryCode\": \"BJ\"\r\n  },\r\n  {\r\n    \"name\": \"Bermuda\",\r\n    \"Iso\": \"+1441\",\r\n    \"countryCode\": \"BM\"\r\n  },\r\n  {\r\n    \"name\": \"Bhutan\",\r\n    \"Iso\": \"+975\",\r\n    \"countryCode\": \"BT\"\r\n  },\r\n  {\r\n    \"name\": \"Bolivia, Plurinational State of bolivia\",\r\n    \"Iso\": \"+591\",\r\n    \"countryCode\": \"BO\"\r\n  },\r\n  {\r\n    \"name\": \"Bosnia and Herzegovina\",\r\n    \"Iso\": \"+387\",\r\n    \"countryCode\": \"BA\"\r\n  },\r\n  {\r\n    \"name\": \"Botswana\",\r\n    \"Iso\": \"+267\",\r\n    \"countryCode\": \"BW\"\r\n  },\r\n  {\r\n    \"name\": \"Bouvet Island\",\r\n    \"Iso\": \"+47\",\r\n    \"countryCode\": \"BV\"\r\n  },\r\n  {\r\n    \"name\": \"Brazil\",\r\n    \"Iso\": \"+55\",\r\n    \"countryCode\": \"BR\"\r\n  },\r\n  {\r\n    \"name\": \"British Indian Ocean Territory\",\r\n    \"Iso\": \"+246\",\r\n    \"countryCode\": \"IO\"\r\n  },\r\n  {\r\n    \"name\": \"Brunei Darussalam\",\r\n    \"Iso\": \"+673\",\r\n    \"countryCode\": \"BN\"\r\n  },\r\n  {\r\n    \"name\": \"Bulgaria\",\r\n    \"Iso\": \"+359\",\r\n    \"countryCode\": \"BG\"\r\n  },\r\n  {\r\n    \"name\": \"Burkina Faso\",\r\n    \"Iso\": \"+226\",\r\n    \"countryCode\": \"BF\"\r\n  },\r\n  {\r\n    \"name\": \"Burundi\",\r\n    \"Iso\": \"+257\",\r\n    \"countryCode\": \"BI\"\r\n  },\r\n  {\r\n    \"name\": \"Cambodia\",\r\n    \"Iso\": \"+855\",\r\n    \"countryCode\": \"KH\"\r\n  },\r\n  {\r\n    \"name\": \"Cameroon\",\r\n    \"Iso\": \"+237\",\r\n    \"countryCode\": \"CM\"\r\n  },\r\n  {\r\n    \"name\": \"Canada\",\r\n    \"Iso\": \"+1\",\r\n    \"countryCode\": \"CA\"\r\n  },\r\n  {\r\n    \"name\": \"Cape Verde\",\r\n    \"Iso\": \"+238\",\r\n    \"countryCode\": \"CV\"\r\n  },\r\n  {\r\n    \"name\": \"Cayman Islands\",\r\n    \"Iso\": \"+ 345\",\r\n    \"countryCode\": \"KY\"\r\n  },\r\n  {\r\n    \"name\": \"Central African Republic\",\r\n    \"Iso\": \"+236\",\r\n    \"countryCode\": \"CF\"\r\n  },\r\n  {\r\n    \"name\": \"Chad\",\r\n    \"Iso\": \"+235\",\r\n    \"countryCode\": \"TD\"\r\n  },\r\n  {\r\n    \"name\": \"Chile\",\r\n    \"Iso\": \"+56\",\r\n    \"countryCode\": \"CL\"\r\n  },\r\n  {\r\n    \"name\": \"China\",\r\n    \"Iso\": \"+86\",\r\n    \"countryCode\": \"CN\"\r\n  },\r\n  {\r\n    \"name\": \"Christmas Island\",\r\n    \"Iso\": \"+61\",\r\n    \"countryCode\": \"CX\"\r\n  },\r\n  {\r\n    \"name\": \"Cocos (Keeling) Islands\",\r\n    \"Iso\": \"+61\",\r\n    \"countryCode\": \"CC\"\r\n  },\r\n  {\r\n    \"name\": \"Colombia\",\r\n    \"Iso\": \"+57\",\r\n    \"countryCode\": \"CO\"\r\n  },\r\n  {\r\n    \"name\": \"Comoros\",\r\n    \"Iso\": \"+269\",\r\n    \"countryCode\": \"KM\"\r\n  },\r\n  {\r\n    \"name\": \"Congo\",\r\n    \"Iso\": \"+242\",\r\n    \"countryCode\": \"CG\"\r\n  },\r\n  {\r\n    \"name\": \"Congo, The Democratic Republic of the Congo\",\r\n    \"Iso\": \"+243\",\r\n    \"countryCode\": \"CD\"\r\n  },\r\n  {\r\n    \"name\": \"Cook Islands\",\r\n    \"Iso\": \"+682\",\r\n    \"countryCode\": \"CK\"\r\n  },\r\n  {\r\n    \"name\": \"Costa Rica\",\r\n    \"Iso\": \"+506\",\r\n    \"countryCode\": \"CR\"\r\n  },\r\n  {\r\n    \"name\": \"Cote d'Ivoire\",\r\n    \"Iso\": \"+225\",\r\n    \"countryCode\": \"CI\"\r\n  },\r\n  {\r\n    \"name\": \"Croatia\",\r\n    \"Iso\": \"+385\",\r\n    \"countryCode\": \"HR\"\r\n  },\r\n  {\r\n    \"name\": \"Cuba\",\r\n    \"Iso\": \"+53\",\r\n    \"countryCode\": \"CU\"\r\n  },\r\n  {\r\n    \"name\": \"Cyprus\",\r\n    \"Iso\": \"+357\",\r\n    \"countryCode\": \"CY\"\r\n  },\r\n  {\r\n    \"name\": \"Czech Republic\",\r\n    \"Iso\": \"+420\",\r\n    \"countryCode\": \"CZ\"\r\n  },\r\n  {\r\n    \"name\": \"Denmark\",\r\n    \"Iso\": \"+45\",\r\n    \"countryCode\": \"DK\"\r\n  },\r\n  {\r\n    \"name\": \"Djibouti\",\r\n    \"Iso\": \"+253\",\r\n    \"countryCode\": \"DJ\"\r\n  },\r\n  {\r\n    \"name\": \"Dominica\",\r\n    \"Iso\": \"+1767\",\r\n    \"countryCode\": \"DM\"\r\n  },\r\n  {\r\n    \"name\": \"Dominican Republic\",\r\n    \"Iso\": \"+1849\",\r\n    \"countryCode\": \"DO\"\r\n  },\r\n  {\r\n    \"name\": \"Ecuador\",\r\n    \"Iso\": \"+593\",\r\n    \"countryCode\": \"EC\"\r\n  },\r\n  {\r\n    \"name\": \"Egypt\",\r\n    \"Iso\": \"+20\",\r\n    \"countryCode\": \"EG\"\r\n  },\r\n  {\r\n    \"name\": \"El Salvador\",\r\n    \"Iso\": \"+503\",\r\n    \"countryCode\": \"SV\"\r\n  },\r\n  {\r\n    \"name\": \"Equatorial Guinea\",\r\n    \"Iso\": \"+240\",\r\n    \"countryCode\": \"GQ\"\r\n  },\r\n  {\r\n    \"name\": \"Eritrea\",\r\n    \"Iso\": \"+291\",\r\n    \"countryCode\": \"ER\"\r\n  },\r\n  {\r\n    \"name\": \"Estonia\",\r\n    \"Iso\": \"+372\",\r\n    \"countryCode\": \"EE\"\r\n  },\r\n  {\r\n    \"name\": \"Ethiopia\",\r\n    \"Iso\": \"+251\",\r\n    \"countryCode\": \"ET\"\r\n  },\r\n  {\r\n    \"name\": \"Falkland Islands (Malvinas)\",\r\n    \"Iso\": \"+500\",\r\n    \"countryCode\": \"FK\"\r\n  },\r\n  {\r\n    \"name\": \"Faroe Islands\",\r\n    \"Iso\": \"+298\",\r\n    \"countryCode\": \"FO\"\r\n  },\r\n  {\r\n    \"name\": \"Fiji\",\r\n    \"Iso\": \"+679\",\r\n    \"countryCode\": \"FJ\"\r\n  },\r\n  {\r\n    \"name\": \"Finland\",\r\n    \"Iso\": \"+358\",\r\n    \"countryCode\": \"FI\"\r\n  },\r\n  {\r\n    \"name\": \"France\",\r\n    \"Iso\": \"+33\",\r\n    \"countryCode\": \"FR\"\r\n  },\r\n  {\r\n    \"name\": \"French Guiana\",\r\n    \"Iso\": \"+594\",\r\n    \"countryCode\": \"GF\"\r\n  },\r\n  {\r\n    \"name\": \"French Polynesia\",\r\n    \"Iso\": \"+689\",\r\n    \"countryCode\": \"PF\"\r\n  },\r\n  {\r\n    \"name\": \"French Southern Territories\",\r\n    \"Iso\": \"+262\",\r\n    \"countryCode\": \"TF\"\r\n  },\r\n  {\r\n    \"name\": \"Gabon\",\r\n    \"Iso\": \"+241\",\r\n    \"countryCode\": \"GA\"\r\n  },\r\n  {\r\n    \"name\": \"Gambia\",\r\n    \"Iso\": \"+220\",\r\n    \"countryCode\": \"GM\"\r\n  },\r\n  {\r\n    \"name\": \"Georgia\",\r\n    \"Iso\": \"+995\",\r\n    \"countryCode\": \"GE\"\r\n  },\r\n  {\r\n    \"name\": \"Germany\",\r\n    \"Iso\": \"+49\",\r\n    \"countryCode\": \"DE\"\r\n  },\r\n  {\r\n    \"name\": \"Ghana\",\r\n    \"Iso\": \"+233\",\r\n    \"countryCode\": \"GH\"\r\n  },\r\n  {\r\n    \"name\": \"Gibraltar\",\r\n    \"Iso\": \"+350\",\r\n    \"countryCode\": \"GI\"\r\n  },\r\n  {\r\n    \"name\": \"Greece\",\r\n    \"Iso\": \"+30\",\r\n    \"countryCode\": \"GR\"\r\n  },\r\n  {\r\n    \"name\": \"Greenland\",\r\n    \"Iso\": \"+299\",\r\n    \"countryCode\": \"GL\"\r\n  },\r\n  {\r\n    \"name\": \"Grenada\",\r\n    \"Iso\": \"+1473\",\r\n    \"countryCode\": \"GD\"\r\n  },\r\n  {\r\n    \"name\": \"Guadeloupe\",\r\n    \"Iso\": \"+590\",\r\n    \"countryCode\": \"GP\"\r\n  },\r\n  {\r\n    \"name\": \"Guam\",\r\n    \"Iso\": \"+1671\",\r\n    \"countryCode\": \"GU\"\r\n  },\r\n  {\r\n    \"name\": \"Guatemala\",\r\n    \"Iso\": \"+502\",\r\n    \"countryCode\": \"GT\"\r\n  },\r\n  {\r\n    \"name\": \"Guernsey\",\r\n    \"Iso\": \"+44\",\r\n    \"countryCode\": \"GG\"\r\n  },\r\n  {\r\n    \"name\": \"Guinea\",\r\n    \"Iso\": \"+224\",\r\n    \"countryCode\": \"GN\"\r\n  },\r\n  {\r\n    \"name\": \"Guinea-Bissau\",\r\n    \"Iso\": \"+245\",\r\n    \"countryCode\": \"GW\"\r\n  },\r\n  {\r\n    \"name\": \"Guyana\",\r\n    \"Iso\": \"+592\",\r\n    \"countryCode\": \"GY\"\r\n  },\r\n  {\r\n    \"name\": \"Haiti\",\r\n    \"Iso\": \"+509\",\r\n    \"countryCode\": \"HT\"\r\n  },\r\n  {\r\n    \"name\": \"Heard Island and Mcdonald Islands\",\r\n    \"Iso\": \"+0\",\r\n    \"countryCode\": \"HM\"\r\n  },\r\n  {\r\n    \"name\": \"Holy See (Vatican City State)\",\r\n    \"Iso\": \"+379\",\r\n    \"countryCode\": \"VA\"\r\n  },\r\n  {\r\n    \"name\": \"Honduras\",\r\n    \"Iso\": \"+504\",\r\n    \"countryCode\": \"HN\"\r\n  },\r\n  {\r\n    \"name\": \"Hong Kong\",\r\n    \"Iso\": \"+852\",\r\n    \"countryCode\": \"HK\"\r\n  },\r\n  {\r\n    \"name\": \"Hungary\",\r\n    \"Iso\": \"+36\",\r\n    \"countryCode\": \"HU\"\r\n  },\r\n  {\r\n    \"name\": \"Iceland\",\r\n    \"Iso\": \"+354\",\r\n    \"countryCode\": \"IS\"\r\n  },\r\n  {\r\n    \"name\": \"India\",\r\n    \"Iso\": \"+91\",\r\n    \"countryCode\": \"IN\",\r\n    \"default\" : true\r\n  },\r\n  {\r\n    \"name\": \"Indonesia\",\r\n    \"Iso\": \"+62\",\r\n    \"countryCode\": \"ID\"\r\n  },\r\n  {\r\n    \"name\": \"Iran, Islamic Republic of Persian Gulf\",\r\n    \"Iso\": \"+98\",\r\n    \"countryCode\": \"IR\"\r\n  },\r\n  {\r\n    \"name\": \"Iraq\",\r\n    \"Iso\": \"+964\",\r\n    \"countryCode\": \"IQ\"\r\n  },\r\n  {\r\n    \"name\": \"Ireland\",\r\n    \"Iso\": \"+353\",\r\n    \"countryCode\": \"IE\"\r\n  },\r\n  {\r\n    \"name\": \"Isle of Man\",\r\n    \"Iso\": \"+44\",\r\n    \"countryCode\": \"IM\"\r\n  },\r\n  {\r\n    \"name\": \"Israel\",\r\n    \"Iso\": \"+972\",\r\n    \"countryCode\": \"IL\"\r\n  },\r\n  {\r\n    \"name\": \"Italy\",\r\n    \"Iso\": \"+39\",\r\n    \"countryCode\": \"IT\"\r\n  },\r\n  {\r\n    \"name\": \"Jamaica\",\r\n    \"Iso\": \"+1876\",\r\n    \"countryCode\": \"JM\"\r\n  },\r\n  {\r\n    \"name\": \"Japan\",\r\n    \"Iso\": \"+81\",\r\n    \"countryCode\": \"JP\"\r\n  },\r\n  {\r\n    \"name\": \"Jersey\",\r\n    \"Iso\": \"+44\",\r\n    \"countryCode\": \"JE\"\r\n  },\r\n  {\r\n    \"name\": \"Jordan\",\r\n    \"Iso\": \"+962\",\r\n    \"countryCode\": \"JO\"\r\n  },\r\n  {\r\n    \"name\": \"Kazakhstan\",\r\n    \"Iso\": \"+7\",\r\n    \"countryCode\": \"KZ\"\r\n  },\r\n  {\r\n    \"name\": \"Kenya\",\r\n    \"Iso\": \"+254\",\r\n    \"countryCode\": \"KE\"\r\n  },\r\n  {\r\n    \"name\": \"Kiribati\",\r\n    \"Iso\": \"+686\",\r\n    \"countryCode\": \"KI\"\r\n  },\r\n  {\r\n    \"name\": \"Korea, Democratic People's Republic of Korea\",\r\n    \"Iso\": \"+850\",\r\n    \"countryCode\": \"KP\"\r\n  },\r\n  {\r\n    \"name\": \"Korea, Republic of South Korea\",\r\n    \"Iso\": \"+82\",\r\n    \"countryCode\": \"KR\"\r\n  },\r\n  {\r\n    \"name\": \"Kosovo\",\r\n    \"Iso\": \"+383\",\r\n    \"countryCode\": \"XK\"\r\n  },\r\n  {\r\n    \"name\": \"Kuwait\",\r\n    \"Iso\": \"+965\",\r\n    \"countryCode\": \"KW\"\r\n  },\r\n  {\r\n    \"name\": \"Kyrgyzstan\",\r\n    \"Iso\": \"+996\",\r\n    \"countryCode\": \"KG\"\r\n  },\r\n  {\r\n    \"name\": \"Laos\",\r\n    \"Iso\": \"+856\",\r\n    \"countryCode\": \"LA\"\r\n  },\r\n  {\r\n    \"name\": \"Latvia\",\r\n    \"Iso\": \"+371\",\r\n    \"countryCode\": \"LV\"\r\n  },\r\n  {\r\n    \"name\": \"Lebanon\",\r\n    \"Iso\": \"+961\",\r\n    \"countryCode\": \"LB\"\r\n  },\r\n  {\r\n    \"name\": \"Lesotho\",\r\n    \"Iso\": \"+266\",\r\n    \"countryCode\": \"LS\"\r\n  },\r\n  {\r\n    \"name\": \"Liberia\",\r\n    \"Iso\": \"+231\",\r\n    \"countryCode\": \"LR\"\r\n  },\r\n  {\r\n    \"name\": \"Libyan Arab Jamahiriya\",\r\n    \"Iso\": \"+218\",\r\n    \"countryCode\": \"LY\"\r\n  },\r\n  {\r\n    \"name\": \"Liechtenstein\",\r\n    \"Iso\": \"+423\",\r\n    \"countryCode\": \"LI\"\r\n  },\r\n  {\r\n    \"name\": \"Lithuania\",\r\n    \"Iso\": \"+370\",\r\n    \"countryCode\": \"LT\"\r\n  },\r\n  {\r\n    \"name\": \"Luxembourg\",\r\n    \"Iso\": \"+352\",\r\n    \"countryCode\": \"LU\"\r\n  },\r\n  {\r\n    \"name\": \"Macao\",\r\n    \"Iso\": \"+853\",\r\n    \"countryCode\": \"MO\"\r\n  },\r\n  {\r\n    \"name\": \"Macedonia\",\r\n    \"Iso\": \"+389\",\r\n    \"countryCode\": \"MK\"\r\n  },\r\n  {\r\n    \"name\": \"Madagascar\",\r\n    \"Iso\": \"+261\",\r\n    \"countryCode\": \"MG\"\r\n  },\r\n  {\r\n    \"name\": \"Malawi\",\r\n    \"Iso\": \"+265\",\r\n    \"countryCode\": \"MW\"\r\n  },\r\n  {\r\n    \"name\": \"Malaysia\",\r\n    \"Iso\": \"+60\",\r\n    \"countryCode\": \"MY\"\r\n  },\r\n  {\r\n    \"name\": \"Maldives\",\r\n    \"Iso\": \"+960\",\r\n    \"countryCode\": \"MV\"\r\n  },\r\n  {\r\n    \"name\": \"Mali\",\r\n    \"Iso\": \"+223\",\r\n    \"countryCode\": \"ML\"\r\n  },\r\n  {\r\n    \"name\": \"Malta\",\r\n    \"Iso\": \"+356\",\r\n    \"countryCode\": \"MT\"\r\n  },\r\n  {\r\n    \"name\": \"Marshall Islands\",\r\n    \"Iso\": \"+692\",\r\n    \"countryCode\": \"MH\"\r\n  },\r\n  {\r\n    \"name\": \"Martinique\",\r\n    \"Iso\": \"+596\",\r\n    \"countryCode\": \"MQ\"\r\n  },\r\n  {\r\n    \"name\": \"Mauritania\",\r\n    \"Iso\": \"+222\",\r\n    \"countryCode\": \"MR\"\r\n  },\r\n  {\r\n    \"name\": \"Mauritius\",\r\n    \"Iso\": \"+230\",\r\n    \"countryCode\": \"MU\"\r\n  },\r\n  {\r\n    \"name\": \"Mayotte\",\r\n    \"Iso\": \"+262\",\r\n    \"countryCode\": \"YT\"\r\n  },\r\n  {\r\n    \"name\": \"Mexico\",\r\n    \"Iso\": \"+52\",\r\n    \"countryCode\": \"MX\"\r\n  },\r\n  {\r\n    \"name\": \"Micronesia, Federated States of Micronesia\",\r\n    \"Iso\": \"+691\",\r\n    \"countryCode\": \"FM\"\r\n  },\r\n  {\r\n    \"name\": \"Moldova\",\r\n    \"Iso\": \"+373\",\r\n    \"countryCode\": \"MD\"\r\n  },\r\n  {\r\n    \"name\": \"Monaco\",\r\n    \"Iso\": \"+377\",\r\n    \"countryCode\": \"MC\"\r\n  },\r\n  {\r\n    \"name\": \"Mongolia\",\r\n    \"Iso\": \"+976\",\r\n    \"countryCode\": \"MN\"\r\n  },\r\n  {\r\n    \"name\": \"Montenegro\",\r\n    \"Iso\": \"+382\",\r\n    \"countryCode\": \"ME\"\r\n  },\r\n  {\r\n    \"name\": \"Montserrat\",\r\n    \"Iso\": \"+1664\",\r\n    \"countryCode\": \"MS\"\r\n  },\r\n  {\r\n    \"name\": \"Morocco\",\r\n    \"Iso\": \"+212\",\r\n    \"countryCode\": \"MA\"\r\n  },\r\n  {\r\n    \"name\": \"Mozambique\",\r\n    \"Iso\": \"+258\",\r\n    \"countryCode\": \"MZ\"\r\n  },\r\n  {\r\n    \"name\": \"Myanmar\",\r\n    \"Iso\": \"+95\",\r\n    \"countryCode\": \"MM\"\r\n  },\r\n  {\r\n    \"name\": \"Namibia\",\r\n    \"Iso\": \"+264\",\r\n    \"countryCode\": \"NA\"\r\n  },\r\n  {\r\n    \"name\": \"Nauru\",\r\n    \"Iso\": \"+674\",\r\n    \"countryCode\": \"NR\"\r\n  },\r\n  {\r\n    \"name\": \"Nepal\",\r\n    \"Iso\": \"+977\",\r\n    \"countryCode\": \"NP\"\r\n  },\r\n  {\r\n    \"name\": \"Netherlands\",\r\n    \"Iso\": \"+31\",\r\n    \"countryCode\": \"NL\"\r\n  },\r\n  {\r\n    \"name\": \"Netherlands Antilles\",\r\n    \"Iso\": \"+599\",\r\n    \"countryCode\": \"AN\"\r\n  },\r\n  {\r\n    \"name\": \"New Caledonia\",\r\n    \"Iso\": \"+687\",\r\n    \"countryCode\": \"NC\"\r\n  },\r\n  {\r\n    \"name\": \"New Zealand\",\r\n    \"Iso\": \"+64\",\r\n    \"countryCode\": \"NZ\"\r\n  },\r\n  {\r\n    \"name\": \"Nicaragua\",\r\n    \"Iso\": \"+505\",\r\n    \"countryCode\": \"NI\"\r\n  },\r\n  {\r\n    \"name\": \"Niger\",\r\n    \"Iso\": \"+227\",\r\n    \"countryCode\": \"NE\"\r\n  },\r\n  {\r\n    \"name\": \"Nigeria\",\r\n    \"Iso\": \"+234\",\r\n    \"countryCode\": \"NG\"\r\n  },\r\n  {\r\n    \"name\": \"Niue\",\r\n    \"Iso\": \"+683\",\r\n    \"countryCode\": \"NU\"\r\n  },\r\n  {\r\n    \"name\": \"Norfolk Island\",\r\n    \"Iso\": \"+672\",\r\n    \"countryCode\": \"NF\"\r\n  },\r\n  {\r\n    \"name\": \"Northern Mariana Islands\",\r\n    \"Iso\": \"+1670\",\r\n    \"countryCode\": \"MP\"\r\n  },\r\n  {\r\n    \"name\": \"Norway\",\r\n    \"Iso\": \"+47\",\r\n    \"countryCode\": \"NO\"\r\n  },\r\n  {\r\n    \"name\": \"Oman\",\r\n    \"Iso\": \"+968\",\r\n    \"countryCode\": \"OM\"\r\n  },\r\n  {\r\n    \"name\": \"Pakistan\",\r\n    \"Iso\": \"+92\",\r\n    \"countryCode\": \"PK\"\r\n  },\r\n  {\r\n    \"name\": \"Palau\",\r\n    \"Iso\": \"+680\",\r\n    \"countryCode\": \"PW\"\r\n  },\r\n  {\r\n    \"name\": \"Palestinian Territory, Occupied\",\r\n    \"Iso\": \"+970\",\r\n    \"countryCode\": \"PS\"\r\n  },\r\n  {\r\n    \"name\": \"Panama\",\r\n    \"Iso\": \"+507\",\r\n    \"countryCode\": \"PA\"\r\n  },\r\n  {\r\n    \"name\": \"Papua New Guinea\",\r\n    \"Iso\": \"+675\",\r\n    \"countryCode\": \"PG\"\r\n  },\r\n  {\r\n    \"name\": \"Paraguay\",\r\n    \"Iso\": \"+595\",\r\n    \"countryCode\": \"PY\"\r\n  },\r\n  {\r\n    \"name\": \"Peru\",\r\n    \"Iso\": \"+51\",\r\n    \"countryCode\": \"PE\"\r\n  },\r\n  {\r\n    \"name\": \"Philippines\",\r\n    \"Iso\": \"+63\",\r\n    \"countryCode\": \"PH\"\r\n  },\r\n  {\r\n    \"name\": \"Pitcairn\",\r\n    \"Iso\": \"+64\",\r\n    \"countryCode\": \"PN\"\r\n  },\r\n  {\r\n    \"name\": \"Poland\",\r\n    \"Iso\": \"+48\",\r\n    \"countryCode\": \"PL\"\r\n  },\r\n  {\r\n    \"name\": \"Portugal\",\r\n    \"Iso\": \"+351\",\r\n    \"countryCode\": \"PT\"\r\n  },\r\n  {\r\n    \"name\": \"Puerto Rico\",\r\n    \"Iso\": \"+1939\",\r\n    \"countryCode\": \"PR\"\r\n  },\r\n  {\r\n    \"name\": \"Qatar\",\r\n    \"Iso\": \"+974\",\r\n    \"countryCode\": \"QA\"\r\n  },\r\n  {\r\n    \"name\": \"Romania\",\r\n    \"Iso\": \"+40\",\r\n    \"countryCode\": \"RO\"\r\n  },\r\n  {\r\n    \"name\": \"Russia\",\r\n    \"Iso\": \"+7\",\r\n    \"countryCode\": \"RU\"\r\n  },\r\n  {\r\n    \"name\": \"Rwanda\",\r\n    \"Iso\": \"+250\",\r\n    \"countryCode\": \"RW\"\r\n  },\r\n  {\r\n    \"name\": \"Reunion\",\r\n    \"Iso\": \"+262\",\r\n    \"countryCode\": \"RE\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Barthelemy\",\r\n    \"Iso\": \"+590\",\r\n    \"countryCode\": \"BL\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Helena, Ascension and Tristan Da Cunha\",\r\n    \"Iso\": \"+290\",\r\n    \"countryCode\": \"SH\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Kitts and Nevis\",\r\n    \"Iso\": \"+1869\",\r\n    \"countryCode\": \"KN\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Lucia\",\r\n    \"Iso\": \"+1758\",\r\n    \"countryCode\": \"LC\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Martin\",\r\n    \"Iso\": \"+590\",\r\n    \"countryCode\": \"MF\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Pierre and Miquelon\",\r\n    \"Iso\": \"+508\",\r\n    \"countryCode\": \"PM\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Vincent and the Grenadines\",\r\n    \"Iso\": \"+1784\",\r\n    \"countryCode\": \"VC\"\r\n  },\r\n  {\r\n    \"name\": \"Samoa\",\r\n    \"Iso\": \"+685\",\r\n    \"countryCode\": \"WS\"\r\n  },\r\n  {\r\n    \"name\": \"San Marino\",\r\n    \"Iso\": \"+378\",\r\n    \"countryCode\": \"SM\"\r\n  },\r\n  {\r\n    \"name\": \"Sao Tome and Principe\",\r\n    \"Iso\": \"+239\",\r\n    \"countryCode\": \"ST\"\r\n  },\r\n  {\r\n    \"name\": \"Saudi Arabia\",\r\n    \"Iso\": \"+966\",\r\n    \"countryCode\": \"SA\"\r\n  },\r\n  {\r\n    \"name\": \"Senegal\",\r\n    \"Iso\": \"+221\",\r\n    \"countryCode\": \"SN\"\r\n  },\r\n  {\r\n    \"name\": \"Serbia\",\r\n    \"Iso\": \"+381\",\r\n    \"countryCode\": \"RS\"\r\n  },\r\n  {\r\n    \"name\": \"Seychelles\",\r\n    \"Iso\": \"+248\",\r\n    \"countryCode\": \"SC\"\r\n  },\r\n  {\r\n    \"name\": \"Sierra Leone\",\r\n    \"Iso\": \"+232\",\r\n    \"countryCode\": \"SL\"\r\n  },\r\n  {\r\n    \"name\": \"Singapore\",\r\n    \"Iso\": \"+65\",\r\n    \"countryCode\": \"SG\"\r\n  },\r\n  {\r\n    \"name\": \"Slovakia\",\r\n    \"Iso\": \"+421\",\r\n    \"countryCode\": \"SK\"\r\n  },\r\n  {\r\n    \"name\": \"Slovenia\",\r\n    \"Iso\": \"+386\",\r\n    \"countryCode\": \"SI\"\r\n  },\r\n  {\r\n    \"name\": \"Solomon Islands\",\r\n    \"Iso\": \"+677\",\r\n    \"countryCode\": \"SB\"\r\n  },\r\n  {\r\n    \"name\": \"Somalia\",\r\n    \"Iso\": \"+252\",\r\n    \"countryCode\": \"SO\"\r\n  },\r\n  {\r\n    \"name\": \"South Africa\",\r\n    \"Iso\": \"+27\",\r\n    \"countryCode\": \"ZA\"\r\n  },\r\n  {\r\n    \"name\": \"South Sudan\",\r\n    \"Iso\": \"+211\",\r\n    \"countryCode\": \"SS\"\r\n  },\r\n  {\r\n    \"name\": \"South Georgia and the South Sandwich Islands\",\r\n    \"Iso\": \"+500\",\r\n    \"countryCode\": \"GS\"\r\n  },\r\n  {\r\n    \"name\": \"Spain\",\r\n    \"Iso\": \"+34\",\r\n    \"countryCode\": \"ES\"\r\n  },\r\n  {\r\n    \"name\": \"Sri Lanka\",\r\n    \"Iso\": \"+94\",\r\n    \"countryCode\": \"LK\"\r\n  },\r\n  {\r\n    \"name\": \"Sudan\",\r\n    \"Iso\": \"+249\",\r\n    \"countryCode\": \"SD\"\r\n  },\r\n  {\r\n    \"name\": \"Suriname\",\r\n    \"Iso\": \"+597\",\r\n    \"countryCode\": \"SR\"\r\n  },\r\n  {\r\n    \"name\": \"Svalbard and Jan Mayen\",\r\n    \"Iso\": \"+47\",\r\n    \"countryCode\": \"SJ\"\r\n  },\r\n  {\r\n    \"name\": \"Swaziland\",\r\n    \"Iso\": \"+268\",\r\n    \"countryCode\": \"SZ\"\r\n  },\r\n  {\r\n    \"name\": \"Sweden\",\r\n    \"Iso\": \"+46\",\r\n    \"countryCode\": \"SE\"\r\n  },\r\n  {\r\n    \"name\": \"Switzerland\",\r\n    \"Iso\": \"+41\",\r\n    \"countryCode\": \"CH\"\r\n  },\r\n  {\r\n    \"name\": \"Syrian Arab Republic\",\r\n    \"Iso\": \"+963\",\r\n    \"countryCode\": \"SY\"\r\n  },\r\n  {\r\n    \"name\": \"Taiwan\",\r\n    \"Iso\": \"+886\",\r\n    \"countryCode\": \"TW\"\r\n  },\r\n  {\r\n    \"name\": \"Tajikistan\",\r\n    \"Iso\": \"+992\",\r\n    \"countryCode\": \"TJ\"\r\n  },\r\n  {\r\n    \"name\": \"Tanzania, United Republic of Tanzania\",\r\n    \"Iso\": \"+255\",\r\n    \"countryCode\": \"TZ\"\r\n  },\r\n  {\r\n    \"name\": \"Thailand\",\r\n    \"Iso\": \"+66\",\r\n    \"countryCode\": \"TH\"\r\n  },\r\n  {\r\n    \"name\": \"Timor-Leste\",\r\n    \"Iso\": \"+670\",\r\n    \"countryCode\": \"TL\"\r\n  },\r\n  {\r\n    \"name\": \"Togo\",\r\n    \"Iso\": \"+228\",\r\n    \"countryCode\": \"TG\"\r\n  },\r\n  {\r\n    \"name\": \"Tokelau\",\r\n    \"Iso\": \"+690\",\r\n    \"countryCode\": \"TK\"\r\n  },\r\n  {\r\n    \"name\": \"Tonga\",\r\n    \"Iso\": \"+676\",\r\n    \"countryCode\": \"TO\"\r\n  },\r\n  {\r\n    \"name\": \"Trinidad and Tobago\",\r\n    \"Iso\": \"+1868\",\r\n    \"countryCode\": \"TT\"\r\n  },\r\n  {\r\n    \"name\": \"Tunisia\",\r\n    \"Iso\": \"+216\",\r\n    \"countryCode\": \"TN\"\r\n  },\r\n  {\r\n    \"name\": \"Turkey\",\r\n    \"Iso\": \"+90\",\r\n    \"countryCode\": \"TR\"\r\n  },\r\n  {\r\n    \"name\": \"Turkmenistan\",\r\n    \"Iso\": \"+993\",\r\n    \"countryCode\": \"TM\"\r\n  },\r\n  {\r\n    \"name\": \"Turks and Caicos Islands\",\r\n    \"Iso\": \"+1649\",\r\n    \"countryCode\": \"TC\"\r\n  },\r\n  {\r\n    \"name\": \"Tuvalu\",\r\n    \"Iso\": \"+688\",\r\n    \"countryCode\": \"TV\"\r\n  },\r\n  {\r\n    \"name\": \"Uganda\",\r\n    \"Iso\": \"+256\",\r\n    \"countryCode\": \"UG\"\r\n  },\r\n  {\r\n    \"name\": \"Ukraine\",\r\n    \"Iso\": \"+380\",\r\n    \"countryCode\": \"UA\"\r\n  },\r\n  {\r\n    \"name\": \"United Arab Emirates\",\r\n    \"Iso\": \"+971\",\r\n    \"countryCode\": \"AE\"\r\n  },\r\n  {\r\n    \"name\": \"United Kingdom\",\r\n    \"Iso\": \"+44\",\r\n    \"countryCode\": \"GB\"\r\n  },\r\n  {\r\n    \"name\": \"United States\",\r\n    \"Iso\": \"+1\",\r\n    \"countryCode\": \"US\"\r\n  },\r\n  {\r\n    \"name\": \"Uruguay\",\r\n    \"Iso\": \"+598\",\r\n    \"countryCode\": \"UY\"\r\n  },\r\n  {\r\n    \"name\": \"Uzbekistan\",\r\n    \"Iso\": \"+998\",\r\n    \"countryCode\": \"UZ\"\r\n  },\r\n  {\r\n    \"name\": \"Vanuatu\",\r\n    \"Iso\": \"+678\",\r\n    \"countryCode\": \"VU\"\r\n  },\r\n  {\r\n    \"name\": \"Venezuela, Bolivarian Republic of Venezuela\",\r\n    \"Iso\": \"+58\",\r\n    \"countryCode\": \"VE\"\r\n  },\r\n  {\r\n    \"name\": \"Vietnam\",\r\n    \"Iso\": \"+84\",\r\n    \"countryCode\": \"VN\"\r\n  },\r\n  {\r\n    \"name\": \"Virgin Islands, British\",\r\n    \"Iso\": \"+1284\",\r\n    \"countryCode\": \"VG\"\r\n  },\r\n  {\r\n    \"name\": \"Virgin Islands, U.S.\",\r\n    \"Iso\": \"+1340\",\r\n    \"countryCode\": \"VI\"\r\n  },\r\n  {\r\n    \"name\": \"Wallis and Futuna\",\r\n    \"Iso\": \"+681\",\r\n    \"countryCode\": \"WF\"\r\n  },\r\n  {\r\n    \"name\": \"Yemen\",\r\n    \"Iso\": \"+967\",\r\n    \"countryCode\": \"YE\"\r\n  },\r\n  {\r\n    \"name\": \"Zambia\",\r\n    \"Iso\": \"+260\",\r\n    \"countryCode\": \"ZM\"\r\n  },\r\n  {\r\n    \"name\": \"Zimbabwe\",\r\n    \"Iso\": \"+263\",\r\n    \"countryCode\": \"ZW\"\r\n  }\r\n]\r\n\r\nexport {\r\n  CountryCodes\r\n}","enum SubProducts {\r\n  ORDERS= 1,\r\n  COLOUR= 2,\r\n  SIZE = 3,\r\n  SUB_PRODUCT = 4,\r\n  PRODUCT = 5,\r\n  COUPONS = 6,\r\n  USERS = 7,\r\n  SHIPPER = 8 \r\n}\r\n\r\nconst SubCategories: Record<string, number> = {\r\n  'Lingerie': 1,\r\n  'Footwear': 2,\r\n  'Bindi': 3,\r\n  'Home Essential': 4\r\n}\r\n\r\n/**\r\n * Allow return for \r\n * Footwear and HomeDecore\r\n */\r\nconst AllowReturn = ['2','3'];\r\n\r\nexport {\r\n  SubProducts,\r\n  SubCategories,\r\n  AllowReturn\r\n}","import { Action, Dispatch } from 'redux';\r\n\r\nimport { User } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n/* Interface */\r\nexport interface UserInformationAction extends Action {\r\n  readonly data?: User;\r\n  readonly allUsers?: User[];\r\n  readonly message?: string;\r\n};\r\n\r\n\r\nexport interface UserInformation {\r\n  readonly data?: User;\r\n  readonly allUsers?: User[];\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n};\r\n\r\n\r\n/* Initial State */\r\nconst initialState  = {\r\n  data: {\r\n    isAdmin: false,\r\n  },\r\n  allUsers :[],\r\n  _isError: false,\r\n  _isLoading: false,\r\n  _isSuccess: false,\r\n  message: ''\r\n} as UserInformation;\r\n\r\n\r\n/* Actions*/\r\n\r\nenum Actions {\r\n  SET_USER = \"SET_USER\",\r\n  LOADING_USER = \"LOADING_USER\",\r\n  ERROR_USER = \"ERROR_USER\",\r\n  SET_ALL_USER = 'SET_ALL_USER',\r\n  UPDATE_USER_DISCOUNT = 'UPDATE_USER_DISCOUNT',\r\n  DEFAULT_USER = 'DEFAULT_USER'\r\n}\r\n\r\nconst setUser = (user: User) => ({\r\n  type: Actions.SET_USER,\r\n  data: user\r\n});\r\n\r\nconst setAllUser = (user: User[]) => ({\r\n  type: Actions.SET_ALL_USER,\r\n  allUsers: user\r\n});\r\n\r\nconst loadingUser = () => ({\r\n  type: Actions.LOADING_USER\r\n});\r\n\r\nconst defaultUser = () => ({\r\n  type: Actions.DEFAULT_USER\r\n});\r\n\r\nconst errorUser = (message: string) => ({\r\n  type: Actions.ERROR_USER,\r\n  message\r\n});\r\n\r\nconst updateDiscount = (emailAddress:string, discount: string, message: string) => ({\r\n  type: Actions.UPDATE_USER_DISCOUNT,\r\n  data: {emailAddress, discount},\r\n  message\r\n});\r\n\r\n\r\n/* Reducer */\r\n\r\nconst userInformationReducer = (state = initialState, action: UserInformationAction): UserInformation => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_USER:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      };\r\n    case Actions.SET_USER:\r\n      return {\r\n        ...state,\r\n        data : action.data,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: true,\r\n        message: action.message\r\n      };\r\n    case Actions.DEFAULT_USER:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      };\r\n    case Actions.SET_ALL_USER:\r\n      return {\r\n        ...state,\r\n        allUsers : action.allUsers,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: true,\r\n        message: action.message\r\n      };\r\n    case Actions.UPDATE_USER_DISCOUNT:\r\n      return {\r\n        ...state,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: true,\r\n        message: action.message,\r\n        allUsers : state.allUsers?.map((user) => {\r\n          if(user.emailAddress?.toLowerCase() === action.data?.emailAddress){\r\n            return {...user, discount:action.data?.discount}\r\n          }\r\n          return user\r\n        }),\r\n      };\r\n    case Actions.ERROR_USER:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: true,\r\n        _isSuccess: true,\r\n        message: action.message\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/* Thunk */\r\n\r\nconst getUser = () =>  async (disptach: Dispatch<UserInformationAction>) => {\r\n  disptach(loadingUser());\r\n  \r\n  const response =  await api.get('/userinfo');\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(setUser(response.data.data as User));\r\n  } else {\r\n    disptach(errorUser('Some error occured, try again.'));\r\n  }\r\n};\r\n\r\nconst saveUser = (data: User) =>  async (disptach: Dispatch<UserInformationAction>) => {\r\n  disptach(loadingUser());\r\n  \r\n  const response =  await api.post('/userinfo', data);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data.data as User;\r\n    disptach(setUser({\r\n      ...data,\r\n      addressId : res\r\n    } as User));\r\n  } else {\r\n    disptach(errorUser('Some error occured, try again.'));\r\n  }\r\n};\r\n\r\nconst getAllUser = () =>  async (disptach: Dispatch<UserInformationAction>) => {\r\n  disptach(loadingUser());\r\n  \r\n  const response =  await api.get('/alluserinformation');\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(setAllUser(response.data.data as User[]));\r\n  } else {\r\n    disptach(errorUser('Some error occured, try again.'));\r\n  }\r\n};\r\n\r\nconst updateUserDiscount = (discount: string, email: string) =>  async (disptach: Dispatch<UserInformationAction>) => {\r\n  disptach(loadingUser());\r\n  \r\n  const response =  await api.post('/userdiscount', {\r\n    email,\r\n    discount\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(updateDiscount(email,discount, 'Discount Updated'));\r\n  } else {\r\n    disptach(errorUser('Some error occured, try again.'));\r\n  }\r\n};\r\n\r\nexport {\r\n  userInformationReducer,\r\n  getUser,\r\n  saveUser,\r\n  getAllUser,\r\n  setUser,\r\n  updateUserDiscount,\r\n  defaultUser\r\n};\r\n","const apiServerHost = 'https://api.basickart.com/';\r\n\r\nconst serverImagePath = apiServerHost + 'images/'\r\n\r\nexport {\r\n  apiServerHost,\r\n  serverImagePath\r\n}","import axios from 'axios';\r\n\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://basickart.com/v1',\r\n  headers: {\r\n    'Accept': 'application/json;charset=UTF-8',\r\n    'Authorization': ''\r\n  }\r\n});","import{ AxiosRequestConfig } from 'axios';\r\n\r\nimport { HttpRequest } from 'appConstants';\r\nimport axios from './axiosBase';\r\n\r\nconst setAuthToken = (): void => {\r\n  axios.defaults.headers['Authorization'] = 'Bearer ' + window.localStorage.getItem('biktoken');\r\n};\r\n\r\nconst api = {\r\n  get: (url: string) => {\r\n    return makeRequest({\r\n      method: HttpRequest.GET,\r\n      url\r\n    })\r\n  },\r\n\r\n  post: (url: string, data: object) => {\r\n    return makeRequest({\r\n      method: HttpRequest.POST,\r\n      url,\r\n      data\r\n    })\r\n  }\r\n};\r\n\r\nconst makeRequest = async (config: AxiosRequestConfig) => {\r\n  try {\r\n    setAuthToken();\r\n    const response = await axios.request(config);\r\n    return response;\r\n  } catch (error) {\r\n    if(error.response.status === 401 || error.response.status === 422 || error.response.status === 404){\r\n      window.localStorage.removeItem('biktoken')\r\n      window.location.href = '/login';\r\n      return {\r\n        message: error.response.data.message || 'Auth expired',\r\n        data: {}\r\n      }\r\n    }else {\r\n      return {\r\n        message: error.response.data.message || 'Default Api error',\r\n        status: error.response.status || 400,\r\n        data: {}\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport { api, setAuthToken };","import { ProductSubCategory, ActiveProductCount, ProductSubcategoryProperty, ProductItem, OrderItems } from \"types\";\r\nimport { SubCategory, Size } from \"reducers\";\r\n\r\nconst getSubCategoryFromId = (id: Number) => {\r\n  switch (id) {\r\n    case 1:\r\n      return \"Lingerie\";\r\n    case 2:\r\n      return \"Footwear\";\r\n    case 3:\r\n      return \"Bindi\";\r\n    case 4:\r\n      return \"Handicraft\";\r\n  }\r\n};\r\n\r\nconst filterSubcategories = (subCategories: SubCategory, categoryId = 0) => {\r\n  return (subCategories.data &&\r\n    subCategories.data.filter((subCategory) => {\r\n      return subCategory.productCategoryId === Number(categoryId)\r\n    })) || [];\r\n};\r\n\r\nconst filterSize = (sizes: Size, categoryId: number[]) => {\r\n  return (sizes.data &&\r\n    sizes.data.filter((size) => {\r\n      return  categoryId.indexOf((size.productCategory || 0)) > -1\r\n    })) || [];\r\n};\r\n\r\nconst calculateUserDiscount = (discount: string, price: string) => {\r\n  return Math.ceil(Number(price) - (Number(price) * (Number(discount) / 100))).toString();\r\n};\r\n\r\nconst calculateUserDiscountPrice = (discount: string, price: string) => {\r\n  return Math.ceil(Number(price) * (Number(discount)) / 100).toString();\r\n};\r\n\r\nconst getCurrencyIcon = (currency: string) => {\r\n  return currency === 'IN' ? '₹' : '$'\r\n};\r\n\r\nconst showINRUSD = (userLocation: string, price : {priceINR: string, priceUSD: string}) => {\r\n  return userLocation === 'IN' ? price.priceINR : price.priceUSD;\r\n}\r\n\r\nconst createProductCountList = (activeProducts: ActiveProductCount[]) => {\r\n  let productCountList = {} as ProductSubcategoryProperty;\r\n  activeProducts.forEach((product: ActiveProductCount) => {\r\n    if(!productCountList[product.subcategoryId]) {\r\n      productCountList[product.subcategoryId] = {\r\n        name: product.subcategoryName,\r\n        [product.colourId] : {\r\n          name: product.colourName,\r\n          [product.sizeId] : {\r\n            name: product.sizeName,\r\n            quantity: product.count\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      if(!productCountList[product.subcategoryId][product.colourId]) {\r\n        productCountList[product.subcategoryId][product.colourId] = {\r\n          name: product.colourName,\r\n          [product.sizeId] : {\r\n            name: product.sizeName,\r\n            quantity: product.count\r\n          }\r\n        }\r\n      } else {\r\n        productCountList[product.subcategoryId][product.colourId][product.sizeId] = {\r\n          name: product.sizeName,\r\n          quantity: product.count\r\n        }\r\n      }\r\n    }\r\n  });\r\n  return productCountList;\r\n};\r\n\r\nconst countHighlightProducts = (products: ProductItem[], isTrending: boolean) => {\r\n  if(isTrending){\r\n    return products.filter(({trending}) => trending).length;\r\n  } else {\r\n    return products.filter(({latest}) => latest).length;\r\n  }\r\n  \r\n};\r\n\r\nconst getIconForAdminOrder = (orderItems: OrderItems[]) => {\r\n  const orderLength = orderItems.length;\r\n  let icon = '';\r\n  for(var i = 0 ; i< orderLength; i++){\r\n    const shipmentDetails = orderItems[i].shipmentDetails;\r\n    if(shipmentDetails){\r\n      if(shipmentDetails.paymentReturned && shipmentDetails.paymentReturned.toLowerCase() === 'yes'){\r\n        icon = 'lifesaver';\r\n        break;\r\n      } else if(shipmentDetails.paymentReturned && shipmentDetails.paymentReturned.toLowerCase() === 'no'){\r\n        icon = 'warning';\r\n        break;\r\n      } else if(shipmentDetails.returnStatus && shipmentDetails.returnStatus.toLowerCase() === 'in progress'){\r\n        icon = 'history';\r\n        break;\r\n      } else if(shipmentDetails.returnStatus && shipmentDetails.returnStatus.toLowerCase() === 'accepted'){\r\n        icon = 'plus-circle';\r\n        break;\r\n      } else if(shipmentDetails.returnStatus && shipmentDetails.returnStatus.toLowerCase() === 'declined'){\r\n        icon = 'minus-circle';\r\n        break;\r\n      } else if(shipmentDetails.shipper){\r\n        icon = 'cart';\r\n        break;\r\n      } else if(shipmentDetails.deliveryDate){\r\n        icon = 'check';\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return icon;\r\n};\r\n\r\nconst getPaypalTransactionId = (payaplResponse: any) =>{\r\n  let transactionId = '';\r\n  if(payaplResponse.paymentData){\r\n    if(payaplResponse.paymentData.purchase_units){\r\n      if(payaplResponse.paymentData.purchase_units[0]){\r\n        if(payaplResponse.paymentData.purchase_units[0].payments){\r\n          if(payaplResponse.paymentData.purchase_units[0].payments.captures){\r\n            if(payaplResponse.paymentData.purchase_units[0].payments.captures[0]){\r\n              if(payaplResponse.paymentData.purchase_units[0].payments.captures[0].id){\r\n                transactionId = payaplResponse.paymentData.purchase_units[0].payments.captures[0].id;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return transactionId;\r\n}\r\n\r\nexport {\r\n  getSubCategoryFromId,\r\n  filterSubcategories,\r\n  filterSize,\r\n  calculateUserDiscount,\r\n  getCurrencyIcon,\r\n  calculateUserDiscountPrice,\r\n  createProductCountList,\r\n  showINRUSD,\r\n  countHighlightProducts,\r\n  getIconForAdminOrder,\r\n  getPaypalTransactionId\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { Login } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\ninterface UserLoginRegisterAction extends Action {\r\n  data?: string;\r\n}\r\n\r\ninterface UserLoginResponse {\r\n  message: string;\r\n  access_token?: string;\r\n};\r\n\r\nexport interface UserLoginRegister {\r\n  _isLoading: boolean;\r\n  _isError: boolean;\r\n  _isSuccess: boolean;\r\n  message?: string;\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading : false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: ''\r\n} as UserLoginRegister;\r\n\r\nenum Actions {\r\n  LOADING_LOGIN = 'LOADING_LOGIN',\r\n  ERROR_LOGIN = 'ERROR_LOGIN',\r\n  SUCCESS_LOGIN = 'SUCCESS_LOGIN',\r\n  LOADING_REGISTER = 'LOADING_REGISTER',\r\n  ERROR_REGISTER = 'ERROR_REGISTER',\r\n  SUCCESS_REGISTER = 'SUCCESS_REGISTER',\r\n  DEFAULT_STATE = 'DEFAULT_STATE'\r\n};\r\n\r\nconst loadingLogin = () => ({\r\n  type : Actions.LOADING_LOGIN\r\n});\r\n\r\nconst errorLogin = (message: string) => ({\r\n  type : Actions.ERROR_LOGIN,\r\n  data: message\r\n});\r\n\r\nconst successLogin = () => ({\r\n  type : Actions.SUCCESS_LOGIN\r\n});\r\n\r\nconst loadingRegister = () => ({\r\n  type : Actions.LOADING_REGISTER\r\n});\r\n\r\nconst errorRegister = (message: string) => ({\r\n  type : Actions.ERROR_REGISTER,\r\n  data: message\r\n});\r\n\r\nconst successRegister = (message: string) => ({\r\n  type : Actions.SUCCESS_REGISTER,\r\n  data: message\r\n});\r\n\r\nconst defaultLoginRegister = () => ({\r\n  type: Actions.DEFAULT_STATE\r\n})\r\n\r\n\r\nconst userLoginReducer = (state = initialState, action: UserLoginRegisterAction): UserLoginRegister  => {\r\n  \r\n  switch (action.type) {\r\n    case Actions.LOADING_LOGIN:\r\n    case Actions.LOADING_REGISTER:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      };\r\n    case Actions.ERROR_LOGIN:\r\n    case Actions.ERROR_REGISTER:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        message: action.data\r\n      };\r\n    case Actions.SUCCESS_LOGIN:\r\n    case Actions.SUCCESS_REGISTER:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess: true,\r\n        message: action.data\r\n      };\r\n    case Actions.DEFAULT_STATE:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nconst userLogin = (loginData: Login) =>  async (dispatch: Dispatch<Action>) => {\r\n  \r\n  dispatch(loadingLogin());\r\n  const response =  await api.post('/login', loginData);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as UserLoginResponse;\r\n    window.localStorage.setItem('biktoken', res.access_token || '');\r\n    dispatch(successLogin());\r\n  } else{\r\n    const res = response as UserLoginResponse;\r\n    dispatch(errorLogin(res.message));\r\n  }\r\n};\r\n\r\nconst userRegister = (registerationData: Login) => async (dispatch: Dispatch<Action>) => {\r\n  dispatch(loadingRegister());\r\n  const response = await api.post('/registration', registerationData);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as UserLoginResponse;\r\n    dispatch(successRegister(res.message));\r\n  } else{\r\n    const res = response as UserLoginResponse;\r\n    dispatch(errorRegister(res.message));\r\n  }\r\n}\r\n\r\nconst forgetPassword = (loginDetails: Login) => async (dispatch: Dispatch<Action>) => {\r\n  dispatch(loadingRegister());\r\n  const response = await api.post('/forgetpassword', loginDetails);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as UserLoginResponse;\r\n    dispatch(successRegister(res.message));\r\n  } else{\r\n    const res = response as UserLoginResponse;\r\n    dispatch(errorRegister(res.message));\r\n  }\r\n}\r\n\r\n\r\nexport {\r\n  userLogin,\r\n  userLoginReducer,\r\n  loadingLogin,\r\n  loadingRegister,\r\n  errorLogin,\r\n  errorRegister,\r\n  successLogin,\r\n  successRegister,\r\n  defaultLoginRegister,\r\n  userRegister,\r\n  forgetPassword\r\n}","import {Action, Dispatch} from 'redux';\r\n\r\nimport { UserSettings } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n/* Interface*/\r\nexport interface UserSettingsAction extends Action {\r\n  readonly data?: UserSettings;\r\n}\r\n\r\nexport interface UserSetting {\r\n  readonly data?: UserSettings;\r\n  _isLoading: boolean;\r\n  _isError: boolean;\r\n}\r\n\r\nconst initialState = {\r\n  data : {\r\n    emailAddress : '',\r\n  },\r\n  _isLoading: false,\r\n  _isError: false\r\n} as UserSetting\r\n\r\n/* Actions */\r\n\r\nenum Actions {\r\n  SET_USER_SETTINGS = \"SET_USER_SETTINGS\",\r\n  LOADING_USER_SETTINGS = \"LOADING_USER_SETTINGS\",\r\n  ERROR_USER_SETTINGS = \"ERROR_USER_SETTINGS\"\r\n}\r\n\r\nconst setUserSetting = (userSettings: UserSettings) => ({\r\n  type: Actions.SET_USER_SETTINGS,\r\n  data: userSettings\r\n});\r\n\r\nconst loadingUserSettings = () => ({\r\n  type: Actions.LOADING_USER_SETTINGS\r\n});\r\n\r\nconst errorUserSettings = () => ({\r\n  type: Actions.ERROR_USER_SETTINGS\r\n});\r\n\r\nconst userSettingsReducer = (state = initialState, action: UserSettingsAction) => {\r\n  switch(action.type) {\r\n    case Actions.SET_USER_SETTINGS:\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n        _isLoading: false,\r\n        _isError: false,\r\n      };\r\n    case Actions.LOADING_USER_SETTINGS:\r\n      return{\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false\r\n      };\r\n    case Actions.ERROR_USER_SETTINGS:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: true\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n/* Thunk */\r\n\r\nconst getUserSettings = () => async (disptach: Dispatch<UserSettingsAction>) => {\r\n  disptach(loadingUserSettings());\r\n  \r\n  const response =  await api.get('/passwordchange');\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(setUserSetting(response.data.data as UserSettings));\r\n  } else {\r\n    disptach(errorUserSettings());\r\n  }\r\n};\r\n\r\n\r\nconst saveUserSettings = (data: UserSettings) => async (disptach: Dispatch<UserSettingsAction>) => {\r\n  disptach(loadingUserSettings());\r\n  \r\n  const response =  await api.post('/passwordchange', data);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(setUserSetting({emailAddress : data.emailAddress, currentPassword: '', newPassword: ''} as UserSettings));\r\n  } else {\r\n    disptach(errorUserSettings());\r\n  }\r\n};\r\n\r\nexport {\r\n  userSettingsReducer,\r\n  getUserSettings,\r\n  saveUserSettings\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { ProductColor } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface ColourAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductColor[]\r\n}\r\n\r\nexport interface ColourResponse {\r\n  message?: string\r\n  data?: ProductColor[]\r\n}\r\n\r\nexport interface Colour {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductColor[];\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n  data: {}\r\n} as Colour;\r\n\r\nenum Actions {\r\n  LOADING_COLOUR = 'LOADING_COLOUR',\r\n  ERROR_COLOUR = 'ERROR_COLOUR',\r\n  SUCCESS_COLOUR = 'SUCCESS_COLOUR',\r\n  DEFAULT_COLOUR = 'DEFAULT_COLOUR',\r\n  SET_COLOUR = 'SET_COLOUR',\r\n  UPDATE_COLOUR_SUCCESS = 'UPDATE_COLOUR_SUCCESS'\r\n};\r\n\r\nconst loadingColour = () => ({\r\n  type: Actions.LOADING_COLOUR\r\n});\r\n\r\nconst successColour = (message: string) => ({\r\n  type: Actions.SUCCESS_COLOUR,\r\n  message\r\n});\r\n\r\nconst errorColour = (message: string) => ({\r\n  type: Actions.ERROR_COLOUR,\r\n  message\r\n});\r\n\r\nconst defaultColour = () => ({\r\n  type: Actions.DEFAULT_COLOUR\r\n});\r\n\r\nconst setColour = (data: ProductColor[]) => ({\r\n  type: Actions.SET_COLOUR,\r\n  data\r\n});\r\n\r\nconst updateColourSuccess = (data: ProductColor[], message: string) => ({\r\n  type: Actions.UPDATE_COLOUR_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst colourReducer = (state = initialState, action: ColourAction): Colour => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_COLOUR:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_COLOUR:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_COLOUR:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_COLOUR:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_COLOUR_SUCCESS:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.colourId != updatedValue[0].colourId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue\r\n        ]\r\n      }\r\n    case Actions.DEFAULT_COLOUR:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst saveColour = (colour: ProductColor) => async (dispatch: Dispatch<ColourAction>) => {\r\n  dispatch(loadingColour());\r\n  const response = await api.post('/productcolour',\r\n    {\r\n      product_color_code: colour.code,\r\n      product_color: colour.value,\r\n      colour_id: 0\r\n    });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ColourResponse\r\n    dispatch(successColour(res.message || ''));\r\n  } else {\r\n    const res = response as ColourResponse\r\n    dispatch(errorColour(res.message || ''));\r\n  }\r\n}\r\n\r\nconst getColour = () => async (dispatch: Dispatch<ColourAction>) => {\r\n  dispatch(loadingColour());\r\n\r\n  const response = await api.get('/productcolour');\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as ColourResponse;\r\n    dispatch(setColour(res.data || []));\r\n  } else {\r\n    const res = response as ColourResponse;\r\n    dispatch(errorColour(res.message || ''))\r\n  }\r\n}\r\n\r\nconst updateColour = (colour: ProductColor) => async (dispatch: Dispatch<ColourAction>) => {\r\n  dispatch(loadingColour());\r\n\r\n  const response = await api.post('/productcolour', {\r\n    product_color_code: colour.code,\r\n    product_color: colour.value,\r\n    colour_id: colour.colourId\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ColourResponse\r\n    dispatch(updateColourSuccess([colour], res.message || ''));\r\n  } else {\r\n    const res = response as ColourResponse\r\n    dispatch(errorColour(res.message || ''));\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  colourReducer,\r\n  saveColour,\r\n  defaultColour,\r\n  getColour,\r\n  updateColour\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { ProductSize } from 'types';\r\nimport { api, getSubCategoryFromId } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface SizeAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductSize[];\r\n}\r\n\r\ninterface SizeResponse {\r\n   message?: string;\r\n   data?: ProductSize[];\r\n}\r\n\r\nexport interface Size {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductSize[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_SIZE= 'LOADING_SIZE',\r\n  SUCCESS_SIZE= 'SUCCESS_SIZE',\r\n  ERROR_SIZE= 'ERROR_SIZE',\r\n  SET_SIZE= 'SET_SIZE',\r\n  UPDATE_SIZE= 'UPDATE_SIZE',\r\n}\r\n\r\nconst loadingSize= () => ({\r\n  type: Actions.LOADING_SIZE\r\n});\r\n\r\nconst successSize= (message: string) => ({\r\n  type: Actions.SUCCESS_SIZE,\r\n  message\r\n});\r\n\r\nconst errorSize= (message: string) => ({\r\n  type: Actions.SUCCESS_SIZE,\r\n  message\r\n});\r\n\r\nconst setSize= (data: ProductSize[]) => ({\r\n  type: Actions.SET_SIZE,\r\n  data\r\n});\r\n\r\nconst updateSize= (data: ProductSize[], message: string) => ({\r\n  type: Actions.UPDATE_SIZE,\r\n  data,\r\n  message\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as Size\r\n\r\n\r\nconst sizeReducer = (state= initialState, action: SizeAction): Size => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_SIZE:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_SIZE:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_SIZE:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_SIZE:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_SIZE:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.sizeId != updatedValue[0].sizeId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue,\r\n        ]\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/**Thunk */\r\n\r\nconst addUpdateSize = (size: ProductSize) => async (dispatch: Dispatch<SizeAction>) => {\r\n  dispatch(loadingSize());\r\n\r\n  const response = await api.post('/productsize',\r\n    {\r\n      product_size:size.value,\r\n      product_size_code: size.code,\r\n      product_category: Number(size.productCategory),\r\n      size_id: size.sizeId\r\n    });\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as SizeResponse;\r\n    if(size.sizeId != '0'){\r\n      const productCategoryIndex  = size.productCategory ? size.productCategory : 1;\r\n      dispatch(updateSize([{...size, productCategoryName: getSubCategoryFromId(Number(productCategoryIndex))}], res.message || ''));\r\n    } else{\r\n      dispatch(successSize(res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as SizeResponse;\r\n    dispatch(errorSize(res.message || ''));\r\n  }\r\n}\r\n\r\nconst getSize= () => async (dispatch: Dispatch<SizeAction>) => {\r\n  dispatch(loadingSize());\r\n\r\n  const response = await api.get('/productsize');\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as SizeResponse;\r\n    dispatch(setSize(res.data || []))\r\n  } else {\r\n    const res = response as SizeResponse;\r\n    dispatch(errorSize(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  addUpdateSize,\r\n  sizeReducer,\r\n  getSize\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { ProductSubCategory } from 'types';\r\nimport { api, getSubCategoryFromId } from 'services';\r\nimport { HttpStatusCode, SubCategories } from 'appConstants';\r\n\r\nexport interface SubCategoryAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductSubCategory[];\r\n}\r\n\r\ninterface SubCategoryResponse {\r\n  message?: string;\r\n  data?: ProductSubCategory[];\r\n}\r\n\r\nexport interface SubCategory {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductSubCategory[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_SUBCATEGORY= 'LOADING_SUBCATEGORY',\r\n  SUCCESS_SUBCATEGORY= 'SUCCESS_SUBCATEGORY',\r\n  ERROR_SUBCATEGORY= 'ERROR_SUBCATEGORY',\r\n  SET_SUBCATEGORY= 'SET_SUBCATEGORY',\r\n  UPDATE_SUBCATEGORY= 'UPDATE_SUBCATEGORY',\r\n}\r\n\r\nconst loadingSubCategory= () => ({\r\n  type: Actions.LOADING_SUBCATEGORY\r\n});\r\n\r\nconst successSubCategory= (message: string) => ({\r\n  type: Actions.SUCCESS_SUBCATEGORY,\r\n  message\r\n});\r\n\r\nconst errorSubCategory= (message: string) => ({\r\n  type: Actions.ERROR_SUBCATEGORY,\r\n  message\r\n});\r\n\r\nconst setSubCategory= (data: ProductSubCategory[]) => ({\r\n  type: Actions.SET_SUBCATEGORY,\r\n  data\r\n});\r\n\r\nconst updateSubCategory= (data: ProductSubCategory[], message: string) => ({\r\n  type: Actions.UPDATE_SUBCATEGORY,\r\n  data,\r\n  message\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as SubCategory\r\n\r\nconst subCategoryReducer = (state= initialState, action: SubCategoryAction): SubCategory => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_SUBCATEGORY:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_SUBCATEGORY:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_SUBCATEGORY:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_SUBCATEGORY:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_SUBCATEGORY:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.subCategoryId != updatedValue[0].subCategoryId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue,\r\n        ]\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/* Thunk */\r\n\r\nconst addUpdateSubCategory = (subCategory: ProductSubCategory) => async (dispatch: Dispatch<SubCategoryAction>) => {\r\n  dispatch(loadingSubCategory());\r\n\r\n  const response = await api.post('/productsubcategory',\r\n    {\r\n      product_name:subCategory.code,\r\n      product_desc: subCategory.value,\r\n      product_category_id: Number(subCategory.productCategoryId),\r\n      subcategory_id: subCategory.subCategoryId?.toString()\r\n    });\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as SubCategoryResponse;\r\n    if(subCategory.subCategoryId != '0'){\r\n      const productCategoryIndex  = subCategory.productCategoryId ? subCategory.productCategoryId : 1;\r\n      dispatch(updateSubCategory([{...subCategory, productCategoryName: getSubCategoryFromId(Number(productCategoryIndex))}], res.message || ''));\r\n    } else{\r\n      dispatch(successSubCategory(res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as SubCategoryResponse;\r\n    dispatch(errorSubCategory(res.message || ''));\r\n  }\r\n}\r\n\r\n\r\nconst getSubCategory= () => async (dispatch: Dispatch<SubCategoryAction>) => {\r\n  dispatch(loadingSubCategory());\r\n\r\n  const response = await api.get('/productsubcategory');\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as SubCategoryResponse;\r\n    dispatch(setSubCategory(res.data || []))\r\n  } else {\r\n    const res = response as SubCategoryResponse;\r\n    dispatch(errorSubCategory(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  subCategoryReducer,\r\n  getSubCategory,\r\n  addUpdateSubCategory\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { ProductCoupon } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface CouponAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductCoupon[]\r\n}\r\n\r\nexport interface CouponResponse {\r\n  message?: string\r\n  data?: ProductCoupon[]\r\n}\r\n\r\nexport interface Coupon {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductCoupon[];\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n  data: {}\r\n} as Coupon\r\n\r\nenum Actions {\r\n  LOADING_COUPON = 'LOADING_COUPON',\r\n  ERROR_COUPON = 'ERROR_COUPON',\r\n  SUCCESS_COUPON = 'SUCCESS_COUPON',\r\n  DEFAULT_COUPON = 'DEFAULT_COUPON',\r\n  SET_COUPON = 'SET_COUPON',\r\n  UPDATE_COUPON_SUCCESS = 'UPDATE_COUPON_SUCCESS',\r\n  DELETE_COUPON_SUCCESS = 'DELETE_COUPON_SUCCESS'\r\n}\r\n\r\nconst loadingCoupon = () => ({\r\n  type: Actions.LOADING_COUPON\r\n});\r\n\r\nconst successCoupon = (message: string) => ({\r\n  type: Actions.SUCCESS_COUPON,\r\n  message\r\n});\r\n\r\nconst errorCoupon = (message: string) => ({\r\n  type: Actions.ERROR_COUPON,\r\n  message\r\n});\r\n\r\nconst defaultCoupon = () => ({\r\n  type: Actions.DEFAULT_COUPON\r\n});\r\n\r\nconst setCoupon = (data: ProductCoupon[], message?: string) => ({\r\n  type: Actions.SET_COUPON,\r\n  data,\r\n  message\r\n});\r\n\r\nconst updateCouponSuccess = (data: ProductCoupon[], message: string) => ({\r\n  type: Actions.UPDATE_COUPON_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst deleteCouponSuccess = (data: ProductCoupon[], message: string) => ({\r\n  type: Actions.DELETE_COUPON_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst couponReducer = (state = initialState, action: CouponAction): Coupon => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_COUPON:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_COUPON:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_COUPON:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        message: action.message,\r\n        data: []\r\n      }\r\n    case Actions.SET_COUPON:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_COUPON_SUCCESS:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.couponId != updatedValue[0].couponId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue\r\n        ]\r\n      }\r\n    case Actions.DELETE_COUPON_SUCCESS:\r\n      const orgState = state.data || [];\r\n      const updValue = action.data || [];\r\n      const updState = orgState.filter(d => {\r\n        return d.couponId != updValue[0].couponId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updState\r\n        ]\r\n      }\r\n    case Actions.DEFAULT_COUPON:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst saveCoupon = (coupon: ProductCoupon) => async (dispatch: Dispatch<CouponAction>) => {\r\n  dispatch(loadingCoupon());\r\n  const response = await api.post('/productcoupon',\r\n    {\r\n      coupon_code: coupon.code,\r\n      coupon_value: coupon.value,\r\n      coupon_id: 0,\r\n      isDelete: false\r\n    });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CouponResponse\r\n    dispatch(successCoupon(res.message || ''));\r\n  } else {\r\n    const res = response as CouponResponse\r\n    dispatch(errorCoupon(res.message || ''));\r\n  }\r\n};\r\n\r\nconst getCoupon = () => async (dispatch: Dispatch<CouponAction>) => {\r\n  dispatch(loadingCoupon());\r\n\r\n  const response = await api.get('/productcoupon');\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as CouponResponse;\r\n    dispatch(setCoupon(res.data || []));\r\n  } else {\r\n    const res = response as CouponResponse;\r\n    dispatch(errorCoupon(res.message || ''))\r\n  }\r\n};\r\n\r\nconst updateCoupon = (coupon: ProductCoupon, isDelete= false) => async (dispatch: Dispatch<CouponAction>) => {\r\n  dispatch(loadingCoupon());\r\n\r\n  const response = await api.post('/productcoupon', {\r\n    coupon_code: coupon.code,\r\n    coupon_value: coupon.value,\r\n    coupon_id: coupon.couponId,\r\n    isDelete\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CouponResponse;\r\n    if(isDelete){\r\n      dispatch(deleteCouponSuccess([coupon], res.message || ''))\r\n    }else {\r\n      dispatch(updateCouponSuccess([coupon], res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as CouponResponse\r\n    dispatch(errorCoupon(res.message || ''));\r\n  }\r\n\r\n};\r\n\r\nconst validateCoupon = (coupon: string) => async(dispatch: Dispatch<CouponAction>) => {\r\n  dispatch(loadingCoupon());\r\n  const response = await api.get('/validatecoupon?couponCode='+coupon);\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data;\r\n    if(res.data){\r\n      dispatch(setCoupon([res.data], res.message || ''));\r\n    } else {\r\n      dispatch(errorCoupon(res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as CouponResponse\r\n    dispatch(errorCoupon(res.message || ''));\r\n  }\r\n};\r\n\r\nexport {\r\n  couponReducer,\r\n  saveCoupon,\r\n  defaultCoupon,\r\n  getCoupon,\r\n  updateCoupon,\r\n  validateCoupon\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { ProductItem, sizeColourQuantityComboObject } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode, pageSize } from 'appConstants';\r\nimport { boolean } from 'yup';\r\nimport { getUserLocation } from './UserLocation';\r\n\r\nexport interface ProductAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n  _hasMoreProducts?: boolean;\r\n  readonly singleData?: ProductItem;\r\n}\r\n\r\ninterface ProductResponse {\r\n  message?: string;\r\n  data?: ProductItem[];\r\n  readonly singleData?: ProductItem;\r\n}\r\n\r\nexport interface Product {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _hasMoreProducts?: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n  readonly singleData?: ProductItem;\r\n}\r\n\r\nenum Actions {\r\n  LOADING_PRODUCT = 'LOADING_PRODUCT',\r\n  SUCCESS_PRODUCT = 'SUCCESS_PRODUCT',\r\n  ERROR_PRODUCT = 'ERROR_PRODUCT',\r\n  SET_PRODUCT = 'SET_PRODUCT',\r\n  SET_CUSTOMER_PRODUCT = 'SET_CUSTOMER_PRODUCT',\r\n  UPDATE_PRODUCT = 'UPDATE_PRODUCT',\r\n  SET_SINGLE_PRODUCT = 'SET_SINGLE_PRODUCT',\r\n  SET_DEFAULT_PRODUCT = 'SET_DEFAULT_PRODUCT',\r\n  DELETE_PRODUCT_SUCCESS = 'DELETE_PRODUCT_SUCCESS',\r\n  SET_PRODUCT_HIGHLIGHT = 'SET_PRODUCT_HIGHLIGHT'\r\n}\r\n\r\nconst loadingProduct = () => ({\r\n  type: Actions.LOADING_PRODUCT\r\n});\r\n\r\nconst successProduct = (message: string) => ({\r\n  type: Actions.SUCCESS_PRODUCT,\r\n  message\r\n});\r\n\r\nconst errorProduct = (message: string) => ({\r\n  type: Actions.ERROR_PRODUCT,\r\n  message\r\n});\r\n\r\nconst setProducts = (data: ProductItem[], _hasMoreProducts: boolean) => ({\r\n  type: Actions.SET_PRODUCT,\r\n  data,\r\n  _hasMoreProducts\r\n});\r\n\r\nconst setSingleProducts = (singleData: ProductItem) => ({\r\n  type: Actions.SET_SINGLE_PRODUCT,\r\n  singleData\r\n});\r\n\r\nconst setDefaulState = () => ({\r\n  type: Actions.SET_DEFAULT_PRODUCT\r\n});\r\n\r\nconst deleteProductSuccess = (data: ProductItem[], message: string) => ({\r\n  type: Actions.DELETE_PRODUCT_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst setCustomerProducts = (data: ProductItem[], _hasMoreProducts: boolean) => ({\r\n  type: Actions.SET_CUSTOMER_PRODUCT,\r\n  data,\r\n  _hasMoreProducts\r\n});\r\n\r\nconst setProductHighlight = (trending: boolean, latest: boolean, productId: string, message: string)  => ({\r\n  type: Actions.SET_PRODUCT_HIGHLIGHT,\r\n  message,\r\n  singleData: {\r\n    trending,\r\n    latest,\r\n    productId\r\n  } as ProductItem\r\n})\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _hasMoreProducts: true,\r\n  message: '',\r\n  data: [],\r\n  singleData: {} as ProductItem\r\n} as Product\r\n\r\nconst productReducer = (state = initialState, action: ProductAction): Product => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.SUCCESS_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        data: action.data,\r\n        _hasMoreProducts: action._hasMoreProducts,\r\n      }\r\n    case Actions.SET_CUSTOMER_PRODUCT:\r\n      debugger\r\n        return {\r\n          ...state,\r\n          _isSuccess: false,\r\n          _isError: false,\r\n          _isLoading: false,\r\n          data: state.data?.concat(action.data || []),\r\n          _hasMoreProducts: action._hasMoreProducts\r\n        }\r\n    case Actions.SET_SINGLE_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        singleData: action.singleData\r\n      }\r\n    case Actions.DELETE_PRODUCT_SUCCESS:\r\n      const orgState = state.data || [];\r\n      const updValue = action.data || [];\r\n      const updState = orgState.filter(d => {\r\n        return d.productId != updValue[0].productId\r\n      });\r\n      return {\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        data: [\r\n          ...updState\r\n        ]\r\n      }\r\n    case Actions.SET_PRODUCT_HIGHLIGHT:\r\n      return {\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: state.data?.map((product) => {\r\n          if(product.productId.toString() === action.singleData?.productId.toString()){\r\n            return {...product, trending: action.singleData.trending, latest: action.singleData.latest}\r\n          }\r\n          return product\r\n        })\r\n      }\r\n    case Actions.SET_DEFAULT_PRODUCT:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/*Thunk */\r\n\r\nconst addUpdateProduct = (product: ProductItem, isDelete = 0, sizeColourQuantity: sizeColourQuantityComboObject[]) => async (dispatch: Dispatch<ProductAction>) => {\r\n  dispatch(loadingProduct());\r\n  var formData = new FormData();\r\n  if (product.productImageBlob) {\r\n    Array.from(product.productImageBlob).forEach((element, index) => {\r\n      formData.append(`product_image_${index}`, element);\r\n    });\r\n  }\r\n  formData.append('product_INR_price', product.priceINR);\r\n  formData.append('product_USD_price', product.priceUSD);\r\n  formData.append('product_size_code', product.size || '0');\r\n  formData.append('product_color_code', product.colour || '0');\r\n  formData.append('product_Qty', product.quantity || '0');\r\n  formData.append('product_name', product.name);\r\n  formData.append('product_desc', product.description || '');\r\n  formData.append('product_subcategory_id', (product.subCategory || '').toString());\r\n  formData.append('prod_id', product.productId);\r\n  formData.append('is_product_delete', isDelete.toString());\r\n  formData.append('deleted_image_paths', JSON.stringify(product.deletedImagePath));\r\n  formData.append('size_colour_quantity_combo',  JSON.stringify(sizeColourQuantity));\r\n  formData.append('deleted_product_detailIds',  JSON.stringify(product.deletedProductDetailIds));\r\n  const response = await api.post('/productinfo', formData);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ProductResponse;\r\n    if (product.productId != '0') {\r\n      if (isDelete) {\r\n        dispatch(deleteProductSuccess([product], res.message || ''))\r\n      } else {\r\n        dispatch(successProduct(res.message || ''));\r\n      }\r\n    } else {\r\n      dispatch(successProduct(res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as ProductResponse;\r\n    dispatch(errorProduct(res.message || ''));\r\n  }\r\n\r\n};\r\n\r\nconst getProducts = () => async (dispatch: Dispatch<ProductAction>) => {\r\n  dispatch(loadingProduct());\r\n  const response = await api.get('/productinfo');\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ProductResponse;\r\n    dispatch(setProducts(res.data || [], true))\r\n  } else {\r\n    const res = response as ProductResponse;\r\n    dispatch(errorProduct(res.message || ''));\r\n  }\r\n};\r\n\r\nconst getProduct = (productId: number) => async (dispatch: Dispatch<ProductAction>) => {\r\n  dispatch(loadingProduct());\r\n  const response = await api.get('/productinfo?productId=' + productId);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ProductResponse;\r\n    dispatch(setSingleProducts(res.singleData || {} as ProductItem))\r\n  } else {\r\n    const res = response as ProductResponse;\r\n    dispatch(errorProduct(res.message || ''));\r\n  }\r\n};\r\n\r\nconst getCustomerProducts = (\r\n  offset: number,\r\n  limit: number,\r\n  categoryId: number[],\r\n  subCategoryId: number[],\r\n  colourId: number[],\r\n  sizeId: number[],\r\n  startPrice: string,\r\n  endPrice: string,\r\n  currency: string,\r\n  searchText: string,\r\n  freshData = false) => async (dispatch: Dispatch<ProductAction>) => {\r\n    dispatch(loadingProduct());\r\n\r\n    const response = await api.get(\r\n      `/productlistcustomer?offset=${offset}&limit=${limit}&categorydId=${categoryId}&colourId=${colourId}&sizeId=${sizeId}&subCategoryId=${subCategoryId}&startPrice=${startPrice}&endPrice=${endPrice}&currency=${currency}&searchText=${searchText}`);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n      const res = response.data as ProductResponse;\r\n      const _hasMoreProducts = res.data && res.data.length === pageSize || false;\r\n      if(freshData){\r\n        dispatch(setProducts(res.data || [], _hasMoreProducts))\r\n      }else {\r\n        dispatch(setCustomerProducts(res.data || [], _hasMoreProducts))\r\n      }\r\n      \r\n    } else {\r\n      const res = response as ProductResponse;\r\n      dispatch(errorProduct(res.message || ''));\r\n    }\r\n  }\r\n\r\n  const updateProductHighLight = (highlight: string, productId: string) => async(dispatch: Dispatch<ProductAction>) => {\r\n    dispatch(loadingProduct());\r\n    const latest =  highlight === '2';\r\n    const trending = highlight === '1';\r\n    const response = await api.post('/producthighlight',{\r\n      latest,\r\n      trending,\r\n      productId\r\n    });\r\n\r\n    if(response.status === HttpStatusCode.OK){\r\n      const res = response.data as ProductResponse;\r\n      dispatch(setProductHighlight(trending,latest, productId, res.message || ''))\r\n    } else {\r\n      const res = response as ProductResponse;\r\n      dispatch(errorProduct(res.message || ''));\r\n    }\r\n  }\r\n\r\nexport {\r\n  addUpdateProduct,\r\n  productReducer,\r\n  getProducts,\r\n  getProduct,\r\n  setDefaulState,\r\n  getCustomerProducts,\r\n  updateProductHighLight,\r\n  errorProduct\r\n}\r\n","import { Dispatch, Action } from 'redux';\r\nimport { ActiveProductCount, ProductSubcategoryProperty } from 'types';\r\nimport { api, createProductCountList } from 'services';\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface ProductCountAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductSubcategoryProperty;\r\n};\r\n\r\nexport interface ProductCountResponse {\r\n  readonly message?: string;\r\n  readonly data?: ActiveProductCount[];\r\n};\r\n\r\nexport interface ProductCount {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductSubcategoryProperty;\r\n};\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n  data: {}\r\n} as ProductCount;\r\n\r\nenum Actions {\r\n  LOADING_PRODUCT_COUNT= 'LOADING_PRODUCT_COUNT',\r\n  ERROR_PRODUCT_COUNT= 'ERROR_PRODUCT_COUNT',\r\n  SET_PRODUCT_COUNT= 'SET_PRODUCT_COUNT',\r\n};\r\n\r\nconst loadingProductCount = () => ({\r\n  type: Actions.LOADING_PRODUCT_COUNT\r\n});\r\n\r\nconst errorProductCount = (message: string) => ({\r\n  type: Actions.ERROR_PRODUCT_COUNT,\r\n  message\r\n});\r\n\r\nconst setProductCount = (data: ProductSubcategoryProperty) => ({\r\n  type: Actions.SET_PRODUCT_COUNT,\r\n  data\r\n});\r\n\r\nconst productCountReducer = (state= initialState, action: ProductCountAction): ProductCount => {\r\n  switch(action.type) {\r\n    case Actions.LOADING_PRODUCT_COUNT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        message: ''\r\n      }\r\n    case Actions.ERROR_PRODUCT_COUNT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_PRODUCT_COUNT:\r\n      return {\r\n        ...state,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: true,\r\n        message: action.message,\r\n        data : action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n/** Thunk */\r\n\r\nconst getActiveProductCount = () => async(dispatch: Dispatch<ProductCountAction>) => {\r\n  dispatch(loadingProductCount());\r\n\r\n  const response = await api.get('/productcount');\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as ProductCountResponse;\r\n    dispatch(setProductCount(createProductCountList(res.data||[])));\r\n  } else {\r\n    const res = response as ProductCountResponse;\r\n    dispatch(errorProductCount(res.message || ''))\r\n  }\r\n};\r\n\r\nexport {\r\n  productCountReducer,\r\n  getActiveProductCount\r\n}","const pageSize = 25;\r\n\r\n\r\nexport {\r\n  pageSize\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { CustomerCart } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface CartAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: CustomerCart[]\r\n}\r\n\r\nexport interface CartResponse {\r\n  message?: string;\r\n  data?: CustomerCart;\r\n}\r\n\r\nexport interface CartResponseMulti {\r\n  message?: string;\r\n  data?: CustomerCart[];\r\n}\r\n\r\nexport interface Cart {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _quantityUpdate: boolean;\r\n  readonly message?: string;\r\n  readonly data?: CustomerCart[];\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  _quantityUpdate: false,\r\n  message: '',\r\n  data: []\r\n} as Cart;\r\n\r\nenum Actions {\r\n  LOADING_CART = 'LOADING_CART',\r\n  ERROR_CART = 'ERROR_CART',\r\n  SUCCESS_CART = 'SUCCESS_CART',\r\n  DEFAULT_CART = 'DEFAULT_CART',\r\n  SET_CART = 'SET_CART',\r\n  SET_LOGGED_CART = 'SET_LOGGED_CART',\r\n  UPDATE_CART_SUCCESS = 'UPDATE_CART_SUCCESS',\r\n  ADD_CART_SUCCESS = 'ADD_CART_SUCCESS',\r\n  UPDATE_CART_LOGGED_OUT = 'UPDATE_CART_LOGGED_OUT',\r\n  DELETE_CART_PRODUCT = 'DELETE_CART_PRODUCT',\r\n  CART_QUANTITY_FINE = 'CART_QUANTITY_FINE',\r\n  CART_GET_UPDATED_QUANTITY = 'CART_GET_UPDATED_QUANTITY',\r\n  DELETE_CART_PRODUCT_LOGGED_OUT = 'DELETE_CART_PRODUCT_LOGGED_OUT',\r\n};\r\n\r\nconst loadingCart = () => ({\r\n  type: Actions.LOADING_CART\r\n});\r\n\r\nconst successCart = (message: string) => ({\r\n  type: Actions.SUCCESS_CART,\r\n  message\r\n});\r\n\r\nconst errorCart = (message: string) => ({\r\n  type: Actions.ERROR_CART,\r\n  message\r\n});\r\n\r\nconst defaultCart = () => ({\r\n  type: Actions.DEFAULT_CART\r\n});\r\n\r\nconst setCart = (data: CustomerCart[]) => ({\r\n  type: Actions.SET_CART,\r\n  data\r\n});\r\n\r\nconst setLoggedCart = (data: CustomerCart[]) => ({\r\n  type: Actions.SET_LOGGED_CART,\r\n  data\r\n});\r\n\r\nconst updateCartSuccess = (data: CustomerCart[], message: string) => ({\r\n  type: Actions.UPDATE_CART_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst addCartSuccess = (data: CustomerCart[], message: string) => ({\r\n  type: Actions.ADD_CART_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst addCartSuccessLoggedOut = (data: CustomerCart[], message: string) => ({\r\n  type: Actions.UPDATE_CART_LOGGED_OUT,\r\n  data,\r\n  message\r\n});\r\n\r\nconst deleteCartProduct = (data: CustomerCart[], message: string) => ({\r\n  type: Actions.DELETE_CART_PRODUCT,\r\n  data,\r\n  message\r\n});\r\n\r\nconst cartQuantityFine = () => ({\r\n  type: Actions.CART_QUANTITY_FINE\r\n});\r\n\r\nconst cartGetUpdatedQuantity = () => ({\r\n  type: Actions.CART_GET_UPDATED_QUANTITY\r\n});\r\n\r\nconst deleteCartLoggedOut = (data: CustomerCart[]) =>({\r\n  type: Actions.DELETE_CART_PRODUCT_LOGGED_OUT,\r\n  data,\r\n})\r\n\r\nconst cartReducer = (state = initialState, action: CartAction): Cart => {\r\n  debugger;\r\n  switch (action.type) {\r\n    case Actions.LOADING_CART:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false,\r\n        _quantityUpdate: false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_CART:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_CART:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _quantityUpdate: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_CART:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.SET_LOGGED_CART:\r\n      debugger;\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_CART_SUCCESS:\r\n      const originalState = state.data || [];\r\n      let og = [];\r\n      let newProduct = true;\r\n      if (action.data && originalState.length === 0) {\r\n        og = [...action.data]\r\n      } else {\r\n        og = originalState.map((product) => {\r\n          if (action.data && product.cartId === action.data[0].cartId) {\r\n            product.productQuantity = action.data[0].productQuantity;\r\n            product.totalPrice = action.data[0].totalPrice;\r\n            product.cartId = action.data[0].cartId;\r\n            newProduct = false;\r\n            return product;\r\n          }\r\n          return product;\r\n        });\r\n        if (newProduct && action.data) {\r\n          og = [...og, ...action.data]\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: og\r\n      }\r\n    case Actions.UPDATE_CART_LOGGED_OUT:\r\n      const originalStatelo = state.data || [];\r\n      let oglo = [];\r\n      let newProductlo = true;\r\n      if (action.data && originalStatelo.length === 0) {\r\n        oglo = [...action.data]\r\n      } else {\r\n        oglo = originalStatelo.map((product) => {\r\n          if (action.data && product.cartId === action.data[0].cartId) {\r\n            product.productQuantity = (Number(action.data[0].productQuantity) + Number(product.productQuantity)).toString();\r\n            product.totalPrice = ((Number(product.productQuantity)) * Number(action.data[0].productPrice)).toString();\r\n            product.cartId = action.data[0].cartId;\r\n            newProductlo = false;\r\n            return product;\r\n          }\r\n          return product;\r\n        });\r\n        if (newProductlo && action.data) {\r\n          oglo = [...oglo, ...action.data]\r\n        }\r\n      }\r\n      localStorage.setItem(\"basicKart-loggedOutCart\", JSON.stringify(oglo));\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: oglo\r\n      }\r\n    case Actions.ADD_CART_SUCCESS:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.DELETE_CART_PRODUCT_LOGGED_OUT:\r\n      const res = state.data?.filter(({ cartId }) => action.data && cartId !== action.data[0].cartId)\r\n      localStorage.setItem(\"basicKart-loggedOutCart\", JSON.stringify(res));\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: res\r\n      }\r\n    case Actions.DELETE_CART_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: state.data?.filter(({ cartId }) => action.data && cartId !== action.data[0].cartId)\r\n      }\r\n    case Actions.DEFAULT_CART:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    case Actions.CART_GET_UPDATED_QUANTITY:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _quantityUpdate: true,\r\n        message: action.message\r\n      }\r\n    case Actions.CART_QUANTITY_FINE:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: true,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nconst addUpdateCart = (cart: CustomerCart, isLoggedIn?: boolean) =>\r\n  async (dispatch: Dispatch<CartAction>) => {\r\n    dispatch(loadingCart());\r\n    if (!isLoggedIn) {\r\n          // result.productImage = cart.productImage;\r\n          // result.productImagePath = cart.productImagePath;\r\n          // result.productName = cart.productName;\r\n          // result.subcategory = cart.subcategory;\r\n          // result.productId = cart.productId;\r\n          const newCart = {\r\n            ...cart,\r\n            totalPrice: (Number(cart.productPrice) * Number(cart.productQuantity)).toString(),\r\n          } as CustomerCart;\r\n          dispatch(addCartSuccessLoggedOut([newCart],''));\r\n    } else {\r\n      const response = await api.post('/cart',\r\n        {\r\n          product_detail_id: cart.productDetailId.toString(),\r\n          order_quantity: cart.productQuantity,\r\n          price_id: cart.currencyType,\r\n          orderdetail_id: cart.cartId.toString(),\r\n          delete_flag: false\r\n        });\r\n\r\n      if (response.status === HttpStatusCode.OK) {\r\n        const res = response.data as CartResponse;\r\n        if (cart.cartId != '0') {\r\n          const result = res.data || {} as CustomerCart;\r\n          if (cart.productQuantity === '0') {\r\n            dispatch(deleteCartProduct([cart], res.message || ''));\r\n          } else {\r\n            dispatch(updateCartSuccess([result], res.message || ''));\r\n          }\r\n        } else {\r\n          const result = res.data || {} as CustomerCart;\r\n          result.productImage = cart.productImage;\r\n          result.productImagePath = cart.productImagePath;\r\n          result.productName = cart.productName;\r\n          result.subcategory = cart.subcategory;\r\n          result.productId = cart.productId;\r\n          dispatch(updateCartSuccess([result], res.message || ''));\r\n        }\r\n      } else {\r\n        const res = response as CartResponse;\r\n        dispatch(errorCart(res.message || ''));\r\n      }\r\n    }\r\n  };\r\n\r\nconst getCart = () => async (dispatch: Dispatch<CartAction>) => {\r\n  dispatch(loadingCart());\r\n\r\n  const response = await api.get('/cart');\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CartResponseMulti;\r\n    dispatch(addCartSuccess(res.data || [], res.message || ''));\r\n  } else {\r\n    const res = response as CartResponse;\r\n    dispatch(errorCart(res.message || ''))\r\n  }\r\n};\r\n\r\nconst deleteCartItem = (cart: CustomerCart, isLoggedIn?: boolean) => async (dispatch: Dispatch<CartAction>) => {\r\n  dispatch(loadingCart());\r\n\r\n  if(!isLoggedIn){\r\n    dispatch(deleteCartLoggedOut([cart]));\r\n  }else {\r\n    const response = await api.post('/cart', {\r\n      orderdetail_id: cart.cartId,\r\n      product_detail_id: cart.productDetailId.toString(),\r\n      order_quantity: cart.productQuantity,\r\n      price_id: '1',\r\n      delete_flag: true\r\n    });\r\n    if (response.status === HttpStatusCode.OK) {\r\n      const res = response.data as CartResponse;\r\n      dispatch(deleteCartProduct([cart], res.message || ''));\r\n    } else {\r\n      const res = response as CartResponse;\r\n      dispatch(errorCart(res.message || ''))\r\n    }\r\n  }\r\n  \r\n};\r\n\r\nconst updateCartQuantity = (orderDetailId: string) => async (dispatch: Dispatch<CartAction>) => {\r\n  dispatch(loadingCart());\r\n  const response = await api.post('/updatecartquantity', { orderDetailId });\r\n  if (response.status === HttpStatusCode.OK) {\r\n    dispatch(cartQuantityFine());\r\n  } else if (response.status === HttpStatusCode.PARTIAL_INFO) {\r\n    dispatch(cartGetUpdatedQuantity());\r\n  } else {\r\n    const res = response as CartResponse;\r\n    dispatch(errorCart(res.message || ''))\r\n  }\r\n}\r\n\r\nexport {\r\n  cartReducer,\r\n  addUpdateCart,\r\n  getCart,\r\n  deleteCartItem,\r\n  updateCartQuantity,\r\n  setLoggedCart\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { CustomerCheckout, RazorpayPayment, PayPalPayment, CodPayment } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface CheckoutAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: CustomerCheckout;\r\n}\r\n\r\nexport interface CheckoutResponse {\r\n  message?: string\r\n  data?: CustomerCheckout;\r\n}\r\n\r\nexport interface Checkout {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _isPaymentSucceess: boolean;\r\n  readonly _priceChanged: boolean;\r\n  readonly _isFetchCodCodeSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: CustomerCheckout;\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  _isPaymentSucceess: false,\r\n  _priceChanged: false,\r\n  _isFetchCodCodeSuccess: false,\r\n  message: '',\r\n  data: {}\r\n} as Checkout;\r\n\r\nenum Actions {\r\n  LOADING_CHECKOUT = 'LOADING_CHECKOUT',\r\n  ERROR_CHECKOUT = 'ERROR_CHECKOUT',\r\n  SUCCESS_CHECKOUT_ORDER = 'SUCCESS_CHECKOUT_ORDER',\r\n  DEFAULT_CHECKOUT = 'DEFAULT_CHECKOUT',\r\n  SET_CHECKOUT = 'SET_CHECKOUT',\r\n  UPDATE_CHECKOUT_SUCCESS = 'UPDATE_CHECKOUT_SUCCESS',\r\n  SUCCESS_PAYMENT = 'SUCCESS_PAYMENT',\r\n  PRICE_CHANGED = 'PRICE_CHANGED',\r\n};\r\n\r\nconst loadingCheckout = () => ({\r\n  type: Actions.LOADING_CHECKOUT\r\n});\r\n\r\nconst successCheckoutOrder = (data: CustomerCheckout, message?: string) => ({\r\n  type: Actions.SUCCESS_CHECKOUT_ORDER,\r\n  data,\r\n  message\r\n});\r\n\r\nconst errorCheckout = (message: string) => ({\r\n  type: Actions.ERROR_CHECKOUT,\r\n  message\r\n});\r\n\r\nconst defaultCheckout = () => ({\r\n  type: Actions.DEFAULT_CHECKOUT\r\n});\r\n\r\nconst successPayment =(message:string) => ({\r\n  type: Actions.SUCCESS_PAYMENT,\r\n  message\r\n});\r\n\r\nconst priceChanged = (message:string) => ({\r\n  type: Actions.PRICE_CHANGED,\r\n  message\r\n});\r\n\r\nconst checkoutReducer = (state = initialState, action: CheckoutAction) : Checkout => {\r\n  switch(action.type){\r\n    case Actions.LOADING_CHECKOUT:\r\n      return{\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_CHECKOUT_ORDER:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: false,\r\n        _isFetchCodCodeSuccess: true,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.PRICE_CHANGED:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: true,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_CHECKOUT:\r\n      debugger\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: false,\r\n        _isFetchCodCodeSuccess: false,\r\n        message: action.message\r\n      }\r\n    case Actions.DEFAULT_CHECKOUT:\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: false,\r\n        _isFetchCodCodeSuccess: false,\r\n      }\r\n    case Actions.SUCCESS_PAYMENT:\r\n      return {\r\n        ...state,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isPaymentSucceess: true,\r\n        _priceChanged: false,\r\n        message: action.message\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Thunk\r\n\r\nconst getRazorPayOrder = (amount: string, orderId: number, couponId?: number) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/checkout',\r\n    {\r\n      amount,\r\n      displayAmount: amount,\r\n      orderId,\r\n      couponId\r\n    });\r\n    if (response.status === HttpStatusCode.OK) {\r\n      const res = response.data as CheckoutResponse;\r\n      dispatch(successCheckoutOrder(res.data || {} as CustomerCheckout, res.message || ''));\r\n    } else if(response.status === HttpStatusCode.PARTIAL_INFO){\r\n      const res = response.data as CheckoutResponse;\r\n      dispatch(priceChanged(res.message || ''));\r\n    } else {\r\n      const res = response as CheckoutResponse;\r\n      dispatch(errorCheckout(res.message || ''));\r\n    }\r\n};\r\n\r\nconst saveRazorPayOrder = (razorpayData: RazorpayPayment) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/payment/razorpay',razorpayData);\r\n    if (response.status === HttpStatusCode.OK) {\r\n      const res = response.data as CheckoutResponse\r\n      dispatch(successPayment(res.message || ''));\r\n    } else {\r\n      const res = response as CheckoutResponse\r\n      dispatch(errorCheckout(res.message || ''));\r\n    }\r\n};\r\n\r\nconst getPayPalOrder = (amount: string, displayAmount: string ,orderId: number, couponId?: number)  => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/paypalorder',\r\n  {\r\n    amount,\r\n    displayAmount,\r\n    orderId,\r\n    couponId\r\n  });\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CheckoutResponse\r\n    dispatch(successCheckoutOrder(res.data as CustomerCheckout, res.message || ''));\r\n  } else if(response.status === HttpStatusCode.PARTIAL_INFO){\r\n    const res = response.data as CheckoutResponse;\r\n    dispatch(priceChanged(res.message || ''));\r\n  } else {\r\n    const res = response as CheckoutResponse\r\n    dispatch(errorCheckout(res.message || ''));\r\n  }\r\n};\r\n\r\nconst savePayPalOrder = (paypalData: PayPalPayment) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/payment/paypal',paypalData);\r\n    if (response.status === HttpStatusCode.OK) {\r\n      const res = response.data as CheckoutResponse\r\n      dispatch(successPayment(res.message || ''));\r\n    } else {\r\n      const res = response as CheckoutResponse\r\n      dispatch(errorCheckout(res.message || ''));\r\n    }\r\n};\r\n\r\nconst getCodOrder = (amount: string, orderId: number, couponId?: number) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/payment/codorder',{\r\n    amount,\r\n    displayAmount: amount,\r\n    orderId,\r\n    couponId\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CheckoutResponse;\r\n    dispatch(successCheckoutOrder(res.data as CustomerCheckout, res.message || ''));\r\n  } else if(response.status === HttpStatusCode.PARTIAL_INFO){\r\n    const res = response.data as CheckoutResponse;\r\n    dispatch(priceChanged(res.message || ''));\r\n  } else {\r\n    const res = response as CheckoutResponse;\r\n    dispatch(errorCheckout(res.message || ''));\r\n  }\r\n};\r\n\r\nconst saveCodOrder = (codData: CodPayment) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/payment/codplaceorder',codData);\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CheckoutResponse\r\n    dispatch(successPayment(res.message || ''));\r\n  } else {\r\n    const res = response as CheckoutResponse\r\n    dispatch(errorCheckout(res.message || ''));\r\n  }\r\n};\r\n\r\nconst resendOTP = () => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.get('/payment/codresendotp');\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CheckoutResponse;\r\n    dispatch(successCheckoutOrder(res.data as CustomerCheckout, res.message || ''));\r\n  } else {\r\n    const res = response as CheckoutResponse;\r\n    dispatch(errorCheckout(res.message || ''));\r\n  }\r\n};\r\n\r\nexport{\r\n  getRazorPayOrder,\r\n  checkoutReducer,\r\n  saveRazorPayOrder,\r\n  errorCheckout,\r\n  getPayPalOrder,\r\n  savePayPalOrder,\r\n  getCodOrder,\r\n  saveCodOrder,\r\n  resendOTP,\r\n  defaultCheckout\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface UserLocationAction extends Action {\r\n  readonly data?: string;\r\n};\r\n\r\nexport interface UserLocation {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: string;\r\n};\r\n\r\nenum Actions{\r\n  LOADING_USER_LOCATION= 'LOADING_USER_LOCATION',\r\n  SET_USER_LOCATION= 'SET_USER_LOCATION',\r\n};\r\n\r\nconst loadingUserLocation = () => ({\r\n  type: Actions.LOADING_USER_LOCATION,\r\n});\r\n\r\nconst setUserLocation = (data: string) => ({\r\n  type: Actions.SET_USER_LOCATION,\r\n  data\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:''\r\n} as UserLocation\r\n\r\nconst userLocationReducer = (state= initialState, action: UserLocationAction): UserLocation => {\r\n  switch(action.type){\r\n    case Actions.LOADING_USER_LOCATION:\r\n      return{\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.SET_USER_LOCATION:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess: false,\r\n        data: action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n/** Thunk */\r\n\r\nconst getUserLocation = () => async (dispatch: Dispatch<UserLocationAction>) => {\r\n  dispatch(loadingUserLocation());\r\n  const defaultUserLocation = 'Asia/Calcutta';\r\n  try {\r\n    const userLocation = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n    if(userLocation && userLocation.toLowerCase() === defaultUserLocation.toLowerCase()){\r\n      dispatch(setUserLocation('IN'));\r\n    } else if (!userLocation && (new Date).getTimezoneOffset() === -330){\r\n      dispatch(setUserLocation('IN'));\r\n    } else {\r\n      dispatch(setUserLocation('USD'));\r\n    }\r\n  } catch (error) {\r\n    dispatch(setUserLocation('IN'));\r\n  }\r\n};\r\n\r\nexport {\r\n  userLocationReducer,\r\n  getUserLocation\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { Order, OrderItems, OrderUpdateAdmin } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode, pageSize } from 'appConstants';\r\n\r\nexport interface CustomerOrderAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: Order[];\r\n  readonly singleData?: Order;\r\n  readonly _hasMoreOrders?: boolean;\r\n};\r\n\r\ninterface CustomerOrderResponse {\r\n  message?: string;\r\n  data?: Order[];\r\n  singleData?: Order;\r\n  _hasMoreOrders?: boolean;\r\n};\r\n\r\nexport interface CustomerOrders {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _hasMoreOrders?: boolean;\r\n  readonly _isOrderUpdate?: boolean;\r\n  readonly message?: string;\r\n  readonly data?: Order[];\r\n  readonly singleData?: Order;\r\n};\r\n\r\nenum Actions{\r\n  LOADING_ORDER= 'LOADING_ORDER',\r\n  SUCCESS_ORDER= 'SUCCESS_ORDER',\r\n  ADMIN_SUCCESS_ORDER= 'ADMIN_SUCCESS_ORDER',\r\n  ERROR_ORDER= 'ERROR_ORDER',\r\n  SINGLE_DATA = 'SINGLE_DATA',\r\n  CUSTOMER_RETURN = 'CUSTOMER_RETURN',\r\n  DEFAULT_ORDER_RETURN = 'DEFAULT_ORDER_RETURN'\r\n};\r\n\r\nconst loadingOrder= () => ({\r\n  type: Actions.LOADING_ORDER\r\n});\r\n\r\nconst successOrder= (data: Order[], _hasMoreOrders: boolean) => ({\r\n  type: Actions.SUCCESS_ORDER,\r\n  data,\r\n  _hasMoreOrders\r\n});\r\n\r\nconst adminSuccessOrder= (data: Order[]) => ({\r\n  type: Actions.ADMIN_SUCCESS_ORDER,\r\n  data\r\n});\r\n\r\nconst errorOrder= (message: string) => ({\r\n  type: Actions.ERROR_ORDER,\r\n  message\r\n});\r\n\r\nconst singleOrder= (singleData: Order) => ({\r\n  type: Actions.SINGLE_DATA,\r\n  singleData\r\n});\r\n\r\nconst customerReturn = (orderDetailsId: number) => ({\r\n  type: Actions.CUSTOMER_RETURN,\r\n  singleData: {\r\n   orderId: orderDetailsId.toString()\r\n  } as Order\r\n});\r\n\r\nconst defaulOrderReturn = () => ({\r\n  type: Actions.DEFAULT_ORDER_RETURN\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _hasMoreOrders: false,\r\n  _isOrderUpdate: false,\r\n  message: '',\r\n  data:[],\r\n  singleData: {} as Order,\r\n} as CustomerOrders\r\n\r\nconst customerOrdersReducer = (state= initialState, action: CustomerOrderAction): CustomerOrders => {\r\n  switch(action.type){\r\n    case Actions.LOADING_ORDER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: true,\r\n        _hasMoreOrders: false,\r\n        _isOrderUpdate: false,\r\n      }\r\n    case Actions.SUCCESS_ORDER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isOrderUpdate: false,\r\n        message: action.message,\r\n        data: state.data?.concat(action.data || []),\r\n        _hasMoreOrders: action._hasMoreOrders\r\n      }\r\n    case Actions.ADMIN_SUCCESS_ORDER:\r\n    return {\r\n      ...state,\r\n      _isSuccess: true,\r\n      _isError: false,\r\n      _isLoading: false,\r\n      _isOrderUpdate: false,\r\n      message: action.message,\r\n      data: action.data\r\n    }\r\n    case Actions.SINGLE_DATA:\r\n      return{\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _hasMoreOrders: false,\r\n        _isOrderUpdate: false,\r\n        singleData: action.singleData\r\n      }\r\n    case Actions.ERROR_ORDER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        _hasMoreOrders: false,\r\n        _isOrderUpdate: false,\r\n      }\r\n    case Actions.DEFAULT_ORDER_RETURN:\r\n      return {\r\n        ...state,\r\n        _isOrderUpdate: false,\r\n      }\r\n    case Actions.CUSTOMER_RETURN:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isOrderUpdate: true,\r\n        message: action.message,\r\n        data: state.data?.map((singleOrder) => {\r\n          const updatedOrder = singleOrder.orderItems.map((order) => {\r\n            if(order.orderDetailId.toString() === action.singleData?.orderId.toString()){\r\n              return {...order, shipmentDetails: {...order.shipmentDetails, returnStatus: 'In Progress'}}\r\n            } else {\r\n              return order\r\n            }\r\n          })\r\n          return {\r\n            ...singleOrder,\r\n            orderItems : updatedOrder\r\n          }\r\n        }),\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n/** Thunk */\r\n\r\nconst getCustomerOrders = (offset: number, limit: number) => async(dispatch: Dispatch<CustomerOrderAction>) => {\r\n  dispatch(loadingOrder());\r\n  const response = await api.get('/getcustomerorders?limit='+limit+'&offset='+offset);\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as CustomerOrderResponse;\r\n    const _hasMoreOrders = res.data && res.data.length === pageSize || false;\r\n    dispatch(successOrder(res.data || [], _hasMoreOrders))\r\n  } else {\r\n    const res = response as CustomerOrderResponse;\r\n    dispatch(errorOrder(res.message || ''));\r\n  }\r\n}\r\n\r\nconst getAdminOrders = (userId=0) => async(dispatch: Dispatch<CustomerOrderAction>) => {\r\n  dispatch(loadingOrder());\r\n  const response = await api.get('/getadminorders?userId='+userId);\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as CustomerOrderResponse;\r\n    dispatch(adminSuccessOrder(res.data || []))\r\n  } else {\r\n    const res = response as CustomerOrderResponse;\r\n    dispatch(errorOrder(res.message || ''));\r\n  }\r\n};\r\n\r\nconst customerProductReturn = (orderDetailsId: number, returnReason: string,\r\n  orderNumber?: string, productName?: string, userName?: string) => async(dispatch: Dispatch<CustomerOrderAction>) => {\r\n  dispatch(loadingOrder());\r\n  const response = await api.post('/customerproductreturn',{\r\n    orderDetailsId,\r\n    returnReason,\r\n    orderNumber,\r\n    productName,\r\n    userName\r\n  });\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as CustomerOrderResponse;\r\n    dispatch(customerReturn(orderDetailsId))\r\n  } else {\r\n    const res = response as CustomerOrderResponse;\r\n    dispatch(errorOrder(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  getCustomerOrders,\r\n  customerOrdersReducer,\r\n  getAdminOrders,\r\n  singleOrder,\r\n  customerProductReturn,\r\n  defaulOrderReturn\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { OrderShipper, Order } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface ShipperAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: OrderShipper[]\r\n}\r\n\r\nexport interface ShipperResponse {\r\n  message?: string\r\n  data?: OrderShipper[]\r\n}\r\n\r\nexport interface Shipper {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: OrderShipper[];\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n  data: []\r\n} as Shipper\r\n\r\nenum Actions {\r\n  LOADING_SHIPPER = 'LOADING_SHIPPER',\r\n  ERROR_SHIPPER = 'ERROR_SHIPPER',\r\n  SUCCESS_SHIPPER = 'SUCCESS_SHIPPER',\r\n  DEFAULT_SHIPPER = 'DEFAULT_SHIPPER',\r\n  SET_SHIPPER = 'SET_SHIPPER',\r\n  UPDATE_SHIPPER_SUCCESS = 'UPDATE_SHIPPER_SUCCESS',\r\n  DELETE_SHIPPER_SUCCESS = 'DELETE_SHIPPER_SUCCESS'\r\n}\r\n\r\nconst loadingShipper = () => ({\r\n  type: Actions.LOADING_SHIPPER\r\n});\r\n\r\nconst successShipper = (message: string) => ({\r\n  type: Actions.SUCCESS_SHIPPER,\r\n  message\r\n});\r\n\r\nconst errorShipper = (message: string) => ({\r\n  type: Actions.ERROR_SHIPPER,\r\n  message\r\n});\r\n\r\nconst defaultShipper = () => ({\r\n  type: Actions.DEFAULT_SHIPPER\r\n});\r\n\r\nconst setShipper = (data: OrderShipper[]) => ({\r\n  type: Actions.SET_SHIPPER,\r\n  data\r\n});\r\n\r\nconst updateShipperSuccess = (data: OrderShipper[], message: string) => ({\r\n  type: Actions.UPDATE_SHIPPER_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst deleteShipperSuccess = (data: OrderShipper[], message: string) => ({\r\n  type: Actions.DELETE_SHIPPER_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst shipperReducer = (state = initialState, action: ShipperAction): Shipper => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_SHIPPER:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_SHIPPER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_SHIPPER:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_SHIPPER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_SHIPPER_SUCCESS:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.shipperId != updatedValue[0].shipperId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue\r\n        ]\r\n      }\r\n    case Actions.DELETE_SHIPPER_SUCCESS:\r\n      const orgState = state.data || [];\r\n      const updValue = action.data || [];\r\n      const updState = orgState.filter(d => {\r\n        return d.shipperId != updValue[0].shipperId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updState\r\n        ]\r\n      }\r\n    case Actions.DEFAULT_SHIPPER:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/** Thunk */\r\n\r\nconst saveShipper = (shipper: OrderShipper) => async (dispatch: Dispatch<ShipperAction>) => {\r\n  dispatch(loadingShipper());\r\n  const response = await api.post('/shipper',\r\n    {\r\n      shipper_name: shipper.shipperName,\r\n      shipper_link: shipper.trackingLink,\r\n      shipper_id: 0,\r\n      delete_flag: false\r\n    });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ShipperResponse\r\n    dispatch(successShipper(res.message || ''));\r\n  } else {\r\n    const res = response as ShipperResponse\r\n    dispatch(errorShipper(res.message || ''));\r\n  }\r\n}\r\n\r\nconst getShippers = () => async (dispatch: Dispatch<ShipperAction>) => {\r\n  dispatch(loadingShipper());\r\n\r\n  const response = await api.get('/shipper');\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as ShipperResponse;\r\n    dispatch(setShipper(res.data || []));\r\n  } else {\r\n    const res = response as ShipperResponse;\r\n    dispatch(errorShipper(res.message || ''))\r\n  }\r\n}\r\n\r\nconst updateShipper = (shipper: OrderShipper, delete_flag= false) => async (dispatch: Dispatch<ShipperAction>) => {\r\n  dispatch(loadingShipper());\r\n\r\n  const response = await api.post('/shipper', {\r\n    shipper_name: shipper.shipperName,\r\n    shipper_link: shipper.trackingLink,\r\n    shipper_id: shipper.shipperId,\r\n    delete_flag\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ShipperResponse;\r\n    if(delete_flag){\r\n      dispatch(deleteShipperSuccess([shipper], res.message || ''))\r\n    }else {\r\n      dispatch(updateShipperSuccess([shipper], res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as ShipperResponse\r\n    dispatch(errorShipper(res.message || ''));\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  shipperReducer,\r\n  saveShipper,\r\n  getShippers,\r\n  updateShipper\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { OrderUpdateAdmin } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode, pageSize } from 'appConstants';\r\n\r\nexport interface ShipmentAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: OrderUpdateAdmin;\r\n};\r\n\r\ninterface ShipmentResponse {\r\n  message?: string;\r\n  data?: OrderUpdateAdmin;\r\n};\r\n\r\nexport interface Shipment {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _hasMoreOrders?: boolean;\r\n  readonly message?: string;\r\n  readonly data?: OrderUpdateAdmin;\r\n};\r\n\r\nenum Actions{\r\n  LOADING_SHIPMENT= 'LOADING_SHIPMENT',\r\n  SUCCESS_SHIPMENT= 'SUCCESS_SHIPMENT',\r\n  ERROR_SHIPMENT= 'ERROR_SHIPMENT',\r\n};\r\n\r\nconst loadingShipment= (data: OrderUpdateAdmin) => ({\r\n  type: Actions.LOADING_SHIPMENT,\r\n  data\r\n});\r\n\r\nconst successShipment= (data: OrderUpdateAdmin, message: string) => ({\r\n  type: Actions.SUCCESS_SHIPMENT,\r\n  data,\r\n  message,\r\n});\r\n\r\nconst errorShipment= (message: string) => ({\r\n  type: Actions.ERROR_SHIPMENT,\r\n  message,\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _hasMoreOrders: false,\r\n  message: '',\r\n  data:{}\r\n} as Shipment\r\n\r\nconst shipmentReducer = (state= initialState, action: ShipmentAction): Shipment => {\r\n  switch(action.type){\r\n    case Actions.LOADING_SHIPMENT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: true,\r\n        data: action.data,\r\n      }\r\n    case Actions.SUCCESS_SHIPMENT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.ERROR_SHIPMENT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        message: action.message,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n/** Thunk */\r\n\r\nconst updateOrderAdmin = (orderUpdate: OrderUpdateAdmin, sendTrackingEmail: boolean) => async(dispatch: Dispatch<ShipmentAction>) => {\r\n  dispatch(loadingShipment(orderUpdate));\r\n  const response = await api.post('/shipment',{\r\n    deliveryDate: orderUpdate.deliveryDate,\r\n    orderDetailId: orderUpdate.orderDetailId,\r\n    paymentReturned: orderUpdate.paymentReturned?.toString(),\r\n    returnStatus: orderUpdate.returnStatus?.toString(),\r\n    shipmentId: orderUpdate.shipmentId,\r\n    shipper: orderUpdate.shipper?.toString(),\r\n    shippingDate: orderUpdate.shippingDate,\r\n    trackingNumber: orderUpdate.trackingNumber?.toString() || '',\r\n    customerEmail: orderUpdate.customerEmail,\r\n    orderNumber: orderUpdate.orderNumber,\r\n    customerName: orderUpdate.customerName,\r\n    sendTrackingEmail\r\n  } as OrderUpdateAdmin);\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as ShipmentResponse;\r\n    dispatch(successShipment(orderUpdate, res.message|| ''));\r\n  } else {\r\n    const res = response as ShipmentResponse;\r\n    dispatch(errorShipment(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  shipmentReducer,\r\n  updateOrderAdmin\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { ProductItem } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface RelatedProductAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\ninterface RelatedProductResponse {\r\n   message?: string;\r\n   data?: ProductItem[];\r\n}\r\n\r\nexport interface RelatedProduct {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_RELATED_PRODUCT= 'LOADING_RELATED_PRODUCT',\r\n  SUCCESS_RELATED_PRODUCT= 'SUCCESS_RELATED_PRODUCT',\r\n  ERROR_RELATED_PRODUCT= 'ERROR_RELATED_PRODUCT',\r\n  SET_RELATED_PRODUCT= 'SET_RELATED_PRODUCT',\r\n}\r\n\r\nconst loadingRelatedProduct= () => ({\r\n  type: Actions.LOADING_RELATED_PRODUCT\r\n});\r\n\r\nconst successRelatedProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_RELATED_PRODUCT,\r\n  message\r\n});\r\n\r\nconst errorRelatedProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_RELATED_PRODUCT,\r\n  message\r\n});\r\n\r\nconst setRelatedProduct= (data: ProductItem[]) => ({\r\n  type: Actions.SET_RELATED_PRODUCT,\r\n  data\r\n});\r\n\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as RelatedProduct\r\n\r\n\r\nconst relatedProductReducer = (state= initialState, action: RelatedProductAction): RelatedProduct => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_RELATED_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_RELATED_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_RELATED_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_RELATED_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/**Thunk */\r\n\r\n\r\nconst getRelatedProduct= (subcategoryId: number, productId: number) => async (dispatch: Dispatch<RelatedProductAction>) => {\r\n  dispatch(loadingRelatedProduct());\r\n\r\n  const response = await api.post('/relatedproducts',{\r\n    subcategoryId,\r\n    productId\r\n  });\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as RelatedProductResponse;\r\n    dispatch(setRelatedProduct(res.data || []))\r\n  } else {\r\n    const res = response as RelatedProductResponse;\r\n    dispatch(errorRelatedProduct(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  relatedProductReducer,\r\n  getRelatedProduct\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { ProductItem } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface TrendingProductAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\ninterface TrendingProductResponse {\r\n   message?: string;\r\n   data?: ProductItem[];\r\n}\r\n\r\nexport interface TrendingProduct {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_TRENDING_PRODUCT= 'LOADING_TRENDING_PRODUCT',\r\n  SUCCESS_TRENDING_PRODUCT= 'SUCCESS_TRENDING_PRODUCT',\r\n  ERROR_TRENDING_PRODUCT= 'ERROR_TRENDING_PRODUCT',\r\n  SET_TRENDING_PRODUCT= 'SET_TRENDING_PRODUCT',\r\n}\r\n\r\nconst loadingTrendingProduct= () => ({\r\n  type: Actions.LOADING_TRENDING_PRODUCT\r\n});\r\n\r\nconst successTrendingProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_TRENDING_PRODUCT,\r\n  message\r\n});\r\n\r\nconst errorTrendingProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_TRENDING_PRODUCT,\r\n  message\r\n});\r\n\r\nconst setTrendingProduct= (data: ProductItem[]) => ({\r\n  type: Actions.SET_TRENDING_PRODUCT,\r\n  data\r\n});\r\n\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as TrendingProduct\r\n\r\n\r\nconst trendingProductReducer = (state= initialState, action: TrendingProductAction): TrendingProduct => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_TRENDING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_TRENDING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_TRENDING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_TRENDING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/**Thunk */\r\n\r\n\r\nconst getTrendingProduct= () => async (dispatch: Dispatch<TrendingProductAction>) => {\r\n  dispatch(loadingTrendingProduct());\r\n\r\n  const response = await api.get('/trendinglatest?type=2');\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as TrendingProductResponse;\r\n    dispatch(setTrendingProduct(res.data || []))\r\n  } else {\r\n    const res = response as TrendingProductResponse;\r\n    dispatch(errorTrendingProduct(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  trendingProductReducer,\r\n  getTrendingProduct\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { ProductItem } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface LatestProductAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\ninterface LatestProductResponse {\r\n   message?: string;\r\n   data?: ProductItem[];\r\n}\r\n\r\nexport interface LatestProduct {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_LATEST_PRODUCT= 'LOADING_LATEST_PRODUCT',\r\n  SUCCESS_LATEST_PRODUCT= 'SUCCESS_LATEST_PRODUCT',\r\n  ERROR_LATEST_PRODUCT= 'ERROR_LATEST_PRODUCT',\r\n  SET_LATEST_PRODUCT= 'SET_LATEST_PRODUCT',\r\n}\r\n\r\nconst loadingLatestProduct= () => ({\r\n  type: Actions.LOADING_LATEST_PRODUCT\r\n});\r\n\r\nconst successLatestProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_LATEST_PRODUCT,\r\n  message\r\n});\r\n\r\nconst errorLatestProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_LATEST_PRODUCT,\r\n  message\r\n});\r\n\r\nconst setLatestProduct= (data: ProductItem[]) => ({\r\n  type: Actions.SET_LATEST_PRODUCT,\r\n  data\r\n});\r\n\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as LatestProduct\r\n\r\n\r\nconst latestProductReducer = (state= initialState, action: LatestProductAction): LatestProduct => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_LATEST_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_LATEST_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_LATEST_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_LATEST_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/**Thunk */\r\n\r\n\r\nconst getLatestProduct= () => async (dispatch: Dispatch<LatestProductAction>) => {\r\n  dispatch(loadingLatestProduct());\r\n\r\n  const response = await api.get('/trendinglatest?type=1');\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as LatestProductResponse;\r\n    dispatch(setLatestProduct(res.data || []))\r\n  } else {\r\n    const res = response as LatestProductResponse;\r\n    dispatch(errorLatestProduct(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  latestProductReducer,\r\n  getLatestProduct\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { Search as ProductSearch } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode, pageSize } from 'appConstants';\r\n\r\nexport interface SearchAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductSearch;\r\n};\r\n\r\ninterface SearchResponse {\r\n  message?: string;\r\n  data?: ProductSearch;\r\n};\r\n\r\nexport interface Search {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductSearch;\r\n};\r\n\r\nenum Actions{\r\n  LOADING_SEARCH= 'LOADING_SEARCH',\r\n  SET_SEARCH= 'SET_SEARCH',\r\n  ERROR_SEARCH= 'ERROR_SEARCH',\r\n};\r\n\r\nconst loadingSearch= (data: ProductSearch) => ({\r\n  type: Actions.LOADING_SEARCH,\r\n  data\r\n});\r\n\r\nconst setSearch= (data: ProductSearch) => ({\r\n  type: Actions.SET_SEARCH,\r\n  data,\r\n});\r\n\r\nconst errorSearch= (message: string) => ({\r\n  type: Actions.ERROR_SEARCH,\r\n  message,\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:{}\r\n} as Search\r\n\r\nconst searchReducer = (state= initialState, action: SearchAction): Search => {\r\n  switch(action.type){\r\n    case Actions.LOADING_SEARCH:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: true,\r\n        data: action.data,\r\n      }\r\n    case Actions.SET_SEARCH:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.ERROR_SEARCH:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        message: action.message,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n\r\n\r\nexport {\r\n  searchReducer,\r\n  setSearch\r\n}","import { Action } from \"redux\";\r\nimport { CustomerShippment as CustomerShippmentType } from \"types\";\r\n\r\nexport interface CustomerShippmentAction extends Action {\r\n  readonly data?: CustomerShippmentType\r\n}\r\n\r\nexport interface CustomerShippment {\r\n  readonly data?: CustomerShippmentType;\r\n}\r\n\r\nconst initialState = {\r\n  data: {\r\n    shippmentPrice: ''\r\n  }\r\n} as CustomerShippment;\r\n\r\nenum Actions {\r\n  SET_SHIPPING_PRICE = 'SET_SHIPPING_PRICE',\r\n}\r\n\r\nconst setShippingPrice = (data: CustomerShippmentType) => ({\r\n  type: Actions.SET_SHIPPING_PRICE,\r\n  data\r\n});\r\n\r\nconst customerShippmentReducer = (state = initialState, action: CustomerShippmentAction): CustomerShippment => {\r\n  switch(action.type){\r\n    case Actions.SET_SHIPPING_PRICE:\r\n      return{\r\n        ...state,\r\n        data:{\r\n          shippmentPrice: action.data?.shippmentPrice || ''\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport {\r\n  customerShippmentReducer,\r\n  setShippingPrice\r\n}","import { createStore, combineReducers, Store, applyMiddleware, compose, Action } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport { userInformationReducer, UserInformation, UserInformationAction } from './UserInformation';\r\nimport { userLoginReducer, UserLoginRegister } from './Login';\r\nimport { userSettingsReducer, UserSetting } from './UserSettings';\r\nimport { Colour, colourReducer, ColourAction } from './Colour';\r\nimport { sizeReducer, Size, SizeAction } from './Size';\r\nimport { SubCategory, subCategoryReducer, SubCategoryAction } from './SubCategory';\r\nimport { Coupon, couponReducer, CouponAction } from './Coupon';\r\nimport { Product, productReducer, ProductAction } from './Product';\r\nimport { ProductCount, productCountReducer, ProductCountAction } from './ProductCount';\r\nimport { Cart, cartReducer, CartAction } from './Cart';\r\nimport { Checkout, checkoutReducer, CheckoutAction } from './Checkout';\r\nimport { UserLocation, userLocationReducer, UserLocationAction } from './UserLocation';\r\nimport { CustomerOrders, customerOrdersReducer, CustomerOrderAction } from './Order';\r\nimport { Shipper, shipperReducer, ShipperAction } from './Shipper';\r\nimport { Shipment, shipmentReducer, ShipmentAction } from './Shipment';\r\nimport { relatedProductReducer, RelatedProduct, RelatedProductAction } from './RelatedProducts';\r\nimport { TrendingProduct, trendingProductReducer, TrendingProductAction } from './TrendingProducts';\r\nimport { LatestProduct, latestProductReducer, LatestProductAction } from './LatestProducts';\r\nimport { searchReducer, SearchAction, Search } from './Search';\r\nimport { CustomerShippment, customerShippmentReducer, CustomerShippmentAction } from './CustomerShippment';\r\n\r\n\r\nexport type AppState = {\r\n  user: UserInformation;\r\n  userLogin: UserLoginRegister;\r\n  userSettings: UserSetting;\r\n  colour: Colour;\r\n  size: Size;\r\n  subCategory: SubCategory;\r\n  coupon: Coupon;\r\n  product: Product;\r\n  productCount: ProductCount;\r\n  cart: Cart;\r\n  checkout: Checkout;\r\n  userLocation: UserLocation;\r\n  customerOrders: CustomerOrders;\r\n  shipper: Shipper;\r\n  shipment: Shipment;\r\n  relatedProduct: RelatedProduct;\r\n  trendingProduct: TrendingProduct;\r\n  latestProduct: LatestProduct;\r\n  search: Search;\r\n  customerShippment: CustomerShippment\r\n}\r\n\r\nconst reducers = {\r\n  user: userInformationReducer,\r\n  userLogin: userLoginReducer,\r\n  userSettings: userSettingsReducer,\r\n  colour: colourReducer,\r\n  size: sizeReducer,\r\n  subCategory: subCategoryReducer,\r\n  coupon: couponReducer,\r\n  product: productReducer,\r\n  productCount: productCountReducer,\r\n  cart: cartReducer,\r\n  checkout: checkoutReducer,\r\n  userLocation: userLocationReducer,\r\n  customerOrders: customerOrdersReducer,\r\n  shipper: shipperReducer,\r\n  shipment: shipmentReducer,\r\n  relatedProduct: relatedProductReducer,\r\n  trendingProduct: trendingProductReducer,\r\n  latestProduct: latestProductReducer,\r\n  search: searchReducer,\r\n  customerShippment: customerShippmentReducer,\r\n};\r\n\r\ninterface AppActions {\r\n  user: UserInformationAction;\r\n  colour: ColourAction;\r\n  size: SizeAction;\r\n  subcategory: SubCategoryAction;\r\n  coupon: CouponAction;\r\n  product: ProductAction;\r\n  productCount: ProductCountAction;\r\n  cart: CartAction;\r\n  checkout: CheckoutAction;\r\n  userLocation: UserLocationAction;\r\n  customerOrders: CustomerOrderAction;\r\n  shipper: ShipperAction;\r\n  shipment: ShipmentAction;\r\n  relatedProduct: RelatedProductAction;\r\n  trendingProduct: TrendingProductAction;\r\n  latestProduct: LatestProductAction;\r\n  search: SearchAction;\r\n  customerShippment: CustomerShippmentAction;\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: Function;\r\n    store: Store<AppState>;\r\n  }\r\n};\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore<AppState, Action<AppActions>, any, any>(\r\n  combineReducers(reducers), \r\n  composeEnhancers(applyMiddleware(thunkMiddleware)\r\n  ));\r\n\r\nexport { store };\r\nexport * from './UserInformation';\r\nexport * from './Login';\r\nexport * from './UserSettings';\r\nexport * from './Colour';\r\nexport * from './Size';\r\nexport * from './SubCategory';\r\nexport * from './Coupon';\r\nexport * from './Product';\r\nexport * from './ProductCount';\r\nexport * from './Cart';\r\nexport * from './Checkout';\r\nexport * from './UserLocation';\r\nexport * from './Order';\r\nexport * from './Shipper';\r\nexport * from './Shipment';\r\nexport * from './RelatedProducts';\r\nexport * from './TrendingProducts';\r\nexport * from './LatestProducts';\r\nexport * from './CustomerShippment';","import React from 'react';\r\nimport * as Yup from 'yup';\r\n\r\nimport { User } from 'types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { UserInformation as UserInfo, saveUser } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport { CountryCodes } from 'appConstants';\r\n\r\n\r\ninterface Props {\r\n  user?: UserInfo;\r\n  fromCart? : boolean\r\n};\r\n\r\n\r\nconst UserInformation: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const userData = props.user;\r\n  const isLoading = props.user?._isLoading;\r\n\r\n  const userInformationFormik = useFormik({\r\n    initialValues: {\r\n      firstName: userData?.data?.firstName || '',\r\n      lastName: userData?.data?.lastName || '',\r\n      mobile: userData?.data?.mobile || '',\r\n      dob: userData?.data?.dob || '',\r\n      gender: userData?.data?.gender || '',\r\n      country: userData?.data?.country || CountryCodes.filter(country => country.default)[0].countryCode,\r\n      state: userData?.data?.state || '',\r\n      city: userData?.data?.city || '',\r\n      pincode: userData?.data?.pincode || '',\r\n      addressLineOne: userData?.data?.addressLineOne || '',\r\n      addressLineTwo: userData?.data?.addressLineTwo || '',\r\n      addressLineThree: userData?.data?.addressLineThree || '',\r\n      addressId: userData?.data?.addressId || ''\r\n    },\r\n\r\n    validationSchema: Yup.object({\r\n      firstName: Yup.string().required('Required'),\r\n      mobile: Yup.string().required('Required').matches(/^((\\+)(\\d{1,4}[-]))(\\d{10}){1}?$/, 'Valid Format e.g., +91-9876543210'),\r\n      country: Yup.string().required('Required'),\r\n      state: Yup.string().required('Required'),\r\n      city: Yup.string().required('Required'),\r\n      pincode: Yup.string().required('Required'),\r\n      addressLineOne: Yup.string().required('Required')\r\n    }),\r\n\r\n    onSubmit: (value: User) => {\r\n      dispatch(saveUser({...value, discount: userData?.data?.discount}));\r\n    },\r\n\r\n    enableReinitialize: true\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={userInformationFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        {\r\n          !props.fromCart && <header className=\"uk-card-header\"><h1 className=\"uk-h2\">Personal Information</h1></header>\r\n        }\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Contact</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">First Name <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"firstName\"\r\n                        {...userInformationFormik.getFieldProps(\"firstName\")} />\r\n                      {\r\n                        userInformationFormik.touched.firstName && userInformationFormik.errors.firstName ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.firstName}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Last Name <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"lastName\"\r\n                        {...userInformationFormik.getFieldProps(\"lastName\")} />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Phone Number <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"tel\" id=\"mobile\"\r\n                        {...userInformationFormik.getFieldProps('mobile')} />\r\n                      {\r\n                        userInformationFormik.touched.mobile && userInformationFormik.errors.mobile ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.mobile}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Date of Birth</div>\r\n                      <input className=\"uk-input\" type=\"date\" id=\"dob\"\r\n                        {...userInformationFormik.getFieldProps('dob')} />\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Gender</div>\r\n                      <select className=\"uk-select\" id=\"gender\"\r\n                        {...userInformationFormik.getFieldProps('gender')}>\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"M\">Male</option>\r\n                        <option value=\"F\">Female</option>\r\n                        <option value=\"O\">Other</option>\r\n                      </select>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Address</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Country <span className=\"uk-text-danger\">*</span></div>\r\n                      <select className=\"uk-select\" id=\"country\"\r\n                        {...userInformationFormik.getFieldProps('country')}>\r\n                        {\r\n                          CountryCodes.map((country, index) => {\r\n                            return <option key={index} value={country.countryCode}>{country.name}</option>\r\n                          })\r\n                        }\r\n                      </select>\r\n                      {\r\n                        userInformationFormik.touched.country && userInformationFormik.errors.country ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.country}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">State <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"state\"\r\n                        {...userInformationFormik.getFieldProps('state')} />\r\n                      {\r\n                        userInformationFormik.touched.state && userInformationFormik.errors.state ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.state}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">City <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"city\"\r\n                        {...userInformationFormik.getFieldProps('city')} />\r\n                      {\r\n                        userInformationFormik.touched.city && userInformationFormik.errors.city ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.city}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">PIN code</div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"pincode\"\r\n                        {...userInformationFormik.getFieldProps('pincode')} />\r\n                      {\r\n                        userInformationFormik.touched.pincode && userInformationFormik.errors.pincode ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.pincode}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-1-1\">\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Flat, House no., Building, Company, Apartment  <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"addressLineOne\"\r\n                        {...userInformationFormik.getFieldProps('addressLineOne')} />\r\n                      {\r\n                        userInformationFormik.touched.addressLineOne && userInformationFormik.errors.addressLineOne ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.addressLineOne}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-1-1\">\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Area, Colony, Street, Sector, Village</div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"addressLineTwo\"\r\n                        {...userInformationFormik.getFieldProps('addressLineTwo')} />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-1-1\">\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Landmark</div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"addressLineThree\"\r\n                        {...userInformationFormik.getFieldProps('addressLineThree')} />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <button disabled={isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              isLoading &&\r\n              <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserInformation\r\n}\r\n","import React, { useState } from 'react';\r\n\r\ninterface Props {\r\n  toggelDetails: Function;\r\n  showSettings: boolean;\r\n  showPersonal: boolean;\r\n  showOrders: boolean;\r\n}\r\n\r\nconst UserNav: React.FunctionComponent<Props> = (props: Props)=> {\r\n\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-1-4@m tm-aside-column user-nave-sticky\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\" uk-sticky=\"offset: 50; bottom: true; width-element: true\">\r\n        <div className=\"uk-card-header\">\r\n          <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div>\r\n              <div className=\"uk-grid-small uk-flex-center\" uk-grid=\"true\">\r\n                <div>\r\n                  <a className=\"uk-button uk-button-default uk-button-small\"><span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: cog; ratio: .75;\"></span><span>Quick Links</span></a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <nav>\r\n            <ul className=\"uk-nav uk-nav-default tm-nav quick-links\">\r\n              <li className={props.showPersonal ? 'uk-active' : ''}>\r\n                <a onClick={(): void => {props.toggelDetails('personal')}}>Personal Information</a>\r\n              </li>\r\n              <li className={props.showOrders ? 'uk-active' : ''}>\r\n                <a onClick={(): void => {props.toggelDetails('orders')}}>Orders</a>\r\n              </li>\r\n              <li className={props.showSettings ? 'uk-active' : ''}>\r\n                <a onClick={(): void => {props.toggelDetails('settings')}}>Settings</a>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { UserNav };","import React from 'react';\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { UserSetting, saveUserSettings } from 'reducers';\r\nimport { useDispatch } from 'react-redux';\r\nimport { UserSettings as UserSettingType } from 'types';\r\n\r\n\r\ninterface Props {\r\n  user?: UserSetting;\r\n}\r\n\r\nconst UserSettings: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const user = props.user;\r\n  const isLoading = props.user?._isLoading;\r\n  const dispatch = useDispatch();\r\n  const userSettingFormik = useFormik({\r\n    initialValues: {\r\n      emailAddress: user?.data?.emailAddress || '',\r\n      currentPassword: '',\r\n      newPassword: '',\r\n      confirmPassword: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      emailAddress: Yup.string().required('Required'),\r\n      currentPassword: Yup.string().required('Required'),\r\n      newPassword: Yup.string().required('Required'),\r\n      confirmPassword: Yup.string().required('Required').oneOf([Yup.ref('newPassword'), ''], 'Password should match')\r\n    }),\r\n    onSubmit: (value: UserSettingType) => {\r\n      dispatch(saveUserSettings(value));\r\n      userSettingFormik.resetForm();\r\n    },\r\n\r\n    enableReinitialize: true\r\n  });\r\n\r\n\r\n  return (\r\n    <form onSubmit={userSettingFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <header className=\"uk-card-header\"><h1 className=\"uk-h2\">Settings</h1></header>\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Email</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Current Email</div>\r\n                      <input className=\"uk-input\" id=\"emailAddress\" type=\"email\" disabled\r\n                        {...userSettingFormik.getFieldProps('emailAddress')} />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Password</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Current Password</div>\r\n                      <input className=\"uk-input \" id=\"currentPassword\" type=\"password\"\r\n                        {...userSettingFormik.getFieldProps('currentPassword')} />\r\n                      {\r\n                        userSettingFormik.touched.currentPassword && userSettingFormik.errors.currentPassword ? (\r\n                          <span className=\"uk-text-danger\">{userSettingFormik.errors.currentPassword}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">New Password</div>\r\n                      <input className=\"uk-input \" type=\"password\"\r\n                        {...userSettingFormik.getFieldProps('newPassword')} />\r\n                      {\r\n                        userSettingFormik.touched.newPassword && userSettingFormik.errors.newPassword ? (\r\n                          <span className=\"uk-text-danger\">{userSettingFormik.errors.newPassword}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Confirm Password</div>\r\n                      <input className=\"uk-input \" type=\"password\"\r\n                        {...userSettingFormik.getFieldProps('confirmPassword')} />\r\n                      {\r\n                        userSettingFormik.touched.confirmPassword && userSettingFormik.errors.confirmPassword ? (\r\n                          <span className=\"uk-text-danger\">{userSettingFormik.errors.confirmPassword}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <button disabled={isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>update password</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserSettings\r\n}","import React, { useEffect, useState, useRef } from 'react';\r\nimport { CustomerOrders, getCustomerOrders, customerProductReturn, defaulOrderReturn } from 'reducers/Order';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, UserLocation, getShippers, UserInformation } from 'reducers';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { pageSize, serverImagePath, AllowReturn } from 'appConstants';\r\nimport { Order, OrderItems, OrderShipper } from 'types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getCurrencyIcon } from 'services';\r\n\r\nconst Orders: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [hasMoreOrders, setHasMoreOrders] = useState(false);\r\n  const [selectedReason, setSelectedReason] = useState('');\r\n  const [showOrderDetailIndex, setShowOrderDetailIndex] = useState<number[]>([]);\r\n  const [returnOrderDetailId, setReturnOrderDetailId] = useState('');\r\n  const [returnOrderNumber, setReturnOrderNumber] = useState('');\r\n  const [returnProductName, setReturnProductName] = useState('');\r\n  const [showReturnError, setShowReturnError] = useState(false);\r\n  const returnModalRef = useRef<HTMLDivElement>(null);\r\n  const returnButtonRef = useRef<HTMLButtonElement>(null);\r\n  const orders = useSelector<AppState, CustomerOrders>(state => state.customerOrders || []);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const shipperData = useSelector<AppState, OrderShipper[]>(state => state.shipper.data || []);\r\n  const userData = useSelector<AppState, UserInformation>(state => state.user);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCustomerOrders(orders.data?.length || 0, pageSize));\r\n    dispatch(getShippers());\r\n  }, [])\r\n  const fetchNextOrders = () => {\r\n    dispatch(getCustomerOrders(orders.data?.length || 0, pageSize));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (orders._isOrderUpdate && returnModalRef.current?.getBoundingClientRect().top !== 0) {\r\n      const that = returnButtonRef.current;\r\n      setTimeout(() => {\r\n        that?.click();\r\n      }, 1000);\r\n    }\r\n  }, [orders._isOrderUpdate])\r\n\r\n  useEffect(() => {\r\n    setHasMoreOrders(orders._hasMoreOrders || false);\r\n  }, [orders._hasMoreOrders]);\r\n\r\n\r\n  const toggleShowOrderDetails = (orderId: number) => {\r\n    if (showOrderDetailIndex.indexOf(orderId) > -1) {\r\n      setShowOrderDetailIndex(showOrderDetailIndex.filter((id) => id !== orderId))\r\n    } else {\r\n      setShowOrderDetailIndex([...showOrderDetailIndex, orderId]);\r\n    }\r\n  }\r\n\r\n  const getShipmentLink = (shipper?: string, trackingNumber?: string) => {\r\n    if (shipper && trackingNumber) {\r\n      const shipperInfo = shipperData.filter(({ shipperId }) => shipperId === shipper);\r\n      if (shipperInfo[0]) {\r\n        return <a target=\"_blank\" href={shipperInfo[0].trackingLink + trackingNumber}>Track Package</a>\r\n      }\r\n    }\r\n    return 'Order Recived'\r\n  }\r\n\r\n  const checkReturnEligibilty = (deliveryDate: string, categoryId: string) => {\r\n    if(AllowReturn.indexOf(categoryId.toString()) > -1 ){\r\n      const dateDifference = (new Date()).getTime() - (new Date(deliveryDate)).getTime();\r\n      const differenceInDays = dateDifference / (1000 * 3600 * 24);\r\n      return Math.ceil(differenceInDays) <= 30;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const returnOrder = (orderDetailId?: string, reason?: string,\r\n    orderNumber?: string, productName?: string) => {\r\n    if(selectedReason || reason){\r\n      setShowReturnError(false);\r\n      dispatch(customerProductReturn(Number(orderDetailId) || Number(returnOrderDetailId), \r\n        reason||selectedReason,orderNumber || returnOrderNumber,productName || returnProductName, userData.data?.firstName));\r\n    } else {\r\n      setShowReturnError(true);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card  uk-card-small tm-ignore-container\">\r\n        {\r\n          orders.data && orders.data.length === 0 ?\r\n            <div className=\"uk-card uk-card-default uk-grid-collapse uk-child-width-1-1@s uk-margin\" uk-grid=\"true\">\r\n              <div>\r\n                <div className=\"uk-card-body uk-nav-center\">\r\n                  <p>You haven't ordered anything. Start some shopping now !!</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            :\r\n            <InfiniteScroll\r\n              dataLength={orders.data && orders.data.length || 0}\r\n              next={fetchNextOrders}\r\n              hasMore={hasMoreOrders}\r\n              loader={\r\n                <div style={{ textAlign: \"center\", marginTop: \"10px\" }}>\r\n                  <h4>Loading...</h4>\r\n                </div>\r\n              }\r\n              endMessage={\r\n                <p style={{ textAlign: \"center\" }}>\r\n                  <b>That's all for now !</b>\r\n                </p>\r\n              }\r\n            >\r\n              {\r\n                orders && orders.data &&\r\n                orders.data.map((order: Order, index: number) => {\r\n                  return (\r\n                    <div key={index} className=\"uk-card uk-card-hover uk-card-default uk-width-1-1@m\">\r\n                      <div className=\"uk-card-header\">\r\n                        <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                          <div className=\"uk-width-expand\">\r\n                            <div className=\"uk-float-left\">\r\n                              <h3 className=\"uk-card-title uk-margin-remove-bottom\">#{order.orderNumber}</h3>\r\n                              <p className=\"uk-text-meta uk-margin-remove-top\"><time>Ordered on {order.paymentDate.split(' ')[0]}</time></p>\r\n                            </div>\r\n                            <p className=\"uk-text-normal uk-margin-remove-top uk-float-right\"><time>Amount Paid: {getCurrencyIcon(userLocation.data || 'IN')} {order.totalPrice}</time></p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {\r\n                        showOrderDetailIndex.indexOf(Number(order.orderId)) === -1 &&\r\n                        <div className=\"uk-card uk-grid-collapse uk-child-width-1-3@s uk-margin uk-margin-remove-top\" uk-grid=\"true\">\r\n                          <div className=\"uk-card-media-left\">\r\n                            <div className=\"tm-ratio tm-ratio-16-9\">\r\n                              <a className=\"tm-media-box\" onClick={() => history.push('/productDetails/' + order.orderItems[0].productId)}>\r\n                                <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + order.orderItems[0].productImage} alt={order.orderItems[0].productImage} /> </figure>\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"uk-card-body\">\r\n                              {/* <h3 className=\"uk-card-title\">Media Left</h3> */}\r\n                              <ul className=\"uk-list\">\r\n                                <li>Product : <a onClick={() => history.push('/productDetails/' + order.orderItems[0].productId)}>{order.orderItems[0].productName}</a></li>\r\n                                <li>Quantity: {order.orderItems[0].quantity}</li>\r\n                                <li>Price: {getCurrencyIcon(userLocation.data || 'IN')} {order.orderItems[0].productPrice}</li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"uk-card-body\">\r\n                              {\r\n                                (order.orderItems[0].shipmentDetails?.returnStatus ||\r\n                                  order.orderItems[0].shipmentDetails?.paymentReturned) ?\r\n                                  <ul className=\"uk-list\">\r\n                                    {\r\n                                      order.orderItems[0].shipmentDetails?.paymentReturned === 'Yes' ?\r\n                                        <li>Return Status: <span className=\"uk-label uk-label-success\">Retured</span></li>\r\n                                        : order.orderItems[0].shipmentDetails?.paymentReturned === 'No' ?\r\n                                        <li>Return Status: <span className=\"uk-label uk-label-danger\">Declined</span></li>\r\n                                        : <li>Return Status: <span className=\"uk-label uk-label-warning\">{order.orderItems[0].shipmentDetails?.returnStatus}</span></li>\r\n                                    }\r\n                                  </ul>\r\n                                  :\r\n                                  order.orderItems[0].shipmentDetails?.deliveryDate ?\r\n                                    <ul className=\"uk-list\">\r\n                                      <li>Status : <span className=\"uk-label uk-label-success\">Delivered</span></li>\r\n                                      <li>Delivery Date: <span>{order.orderItems[0].shipmentDetails?.deliveryDate}</span></li>\r\n                                      {\r\n                                        checkReturnEligibilty(order.orderItems[0].shipmentDetails?.deliveryDate, order.orderItems[0].categoryId) &&\r\n                                        <li><button className=\"uk-button uk-button-primary uk-button-small\" uk-toggle=\"target: #return-modal\" \r\n                                        onClick={() => {\r\n                                          setSelectedReason('');\r\n                                          dispatch(defaulOrderReturn());\r\n                                          setReturnOrderDetailId(order.orderItems[0].orderDetailId);\r\n                                          setReturnProductName(order.orderItems[0].productName);\r\n                                          setReturnOrderNumber(order.orderNumber);\r\n                                        }}>Return</button></li>\r\n                                      }\r\n                                    </ul>\r\n                                    :\r\n                                    <ul className=\"uk-list\">\r\n                                      <li>Status : {getShipmentLink(order.orderItems[0].shipmentDetails?.shipper, order.orderItems[0].shipmentDetails?.trackingNumber)}</li>\r\n                                      <li>Shipment Date: <span>{order.orderItems[0].shipmentDetails?.shippingDate ? order.orderItems[0].shipmentDetails?.shippingDate : 'Awaited'}</span></li>\r\n                                      <li>\r\n                                        <button className=\"uk-button uk-button-primary uk-button-small\" \r\n                                          disabled={orders._isLoading}\r\n                                          {...(order.orderItems[0].shipmentDetails?.shippingDate && 'uk-toggle=\"target: #return-modal\"')}\r\n                                          onClick={() => { \r\n                                            if(order.orderItems[0].shipmentDetails?.shippingDate){\r\n                                              setSelectedReason('');\r\n                                              dispatch(defaulOrderReturn())\r\n                                              setReturnOrderDetailId(order.orderItems[0].orderDetailId);\r\n                                              setReturnProductName(order.orderItems[0].productName);\r\n                                              setReturnOrderNumber(order.orderNumber);\r\n                                            } else {\r\n                                              setSelectedReason('Order Canceled before shipping');\r\n                                               setReturnOrderDetailId(order.orderItems[0].orderDetailId);\r\n                                               setReturnProductName(order.orderItems[0].productName);\r\n                                               setReturnOrderNumber(order.orderNumber);\r\n                                               returnOrder(order.orderItems[0].orderDetailId,\r\n                                                'Order Canceled before shipping',order.orderNumber,order.orderItems[0].productName);\r\n                                            }\r\n                                            \r\n                                        }}>\r\n                                          {\r\n                                                        orders._isLoading &&  <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n                                                      }\r\n                                          {order.orderItems[0].shipmentDetails?.shippingDate ? 'Return' : 'Cancel'}\r\n                                        </button></li>\r\n                                    </ul>\r\n                              }\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      }\r\n                      {\r\n                        order.orderItems.length > 1 &&\r\n                        <ul uk-accordion=\"true\">\r\n                          <li>\r\n                            <a\r\n                              className=\"uk-accordion-title uk-nav-center uk-padding-bottom\"\r\n                              onClick={() => toggleShowOrderDetails(Number(order.orderId))}>\r\n                              {showOrderDetailIndex.indexOf(Number(order.orderId)) === -1 ? \"View More\" : \"View Less\"}</a>\r\n                            <div className=\"uk-accordion-content\">\r\n                              {\r\n                                order.orderItems.map((orderItem: OrderItems, index: number) => {\r\n                                  return (\r\n                                    <div key={index} className=\"uk-card uk-grid-collapse uk-child-width-1-3@s uk-margin uk-margin-remove-top\" uk-grid=\"true\">\r\n                                      <div className=\"uk-card-media-left\">\r\n                                        <div className=\"tm-ratio tm-ratio-16-9\">\r\n                                          <a className=\"tm-media-box\" onClick={() => history.push('/productDetails/' + orderItem.productId)}>\r\n                                            <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + orderItem.productImage} alt={orderItem.productImage} /> </figure>\r\n                                          </a>\r\n                                        </div>\r\n                                      </div>\r\n                                      <div>\r\n                                        <div className=\"uk-card-body\">\r\n                                          <ul className=\"uk-list\">\r\n                                            <li>Product : <a onClick={() => history.push('/productDetails/' + orderItem.productId)}>{orderItem.productName}</a></li>\r\n                                            <li>Quantity: {orderItem.quantity}</li>\r\n                                            <li>Price: {getCurrencyIcon(userLocation.data || 'IN')} {orderItem.productPrice}</li>\r\n                                          </ul>\r\n                                        </div>\r\n                                      </div>\r\n                                      <div>\r\n                                        <div className=\"uk-card-body\">\r\n                                          {\r\n                                            (orderItem.shipmentDetails?.returnStatus ||\r\n                                              orderItem.shipmentDetails?.paymentReturned) ?\r\n                                              <ul className=\"uk-list\">\r\n                                                {\r\n                                                  orderItem.shipmentDetails?.paymentReturned === 'Yes' ?\r\n                                                    <li>Return Status: <span className=\"uk-label uk-label-success\">Retured</span></li>\r\n                                                    : orderItem.shipmentDetails?.paymentReturned === 'No' ?\r\n                                                    <li>Return Status: <span className=\"uk-label uk-label-danger\">Declined</span></li>\r\n                                                    : <li>Return Status: <span className=\"uk-label uk-label-warning\">{orderItem.shipmentDetails?.returnStatus}</span></li>\r\n                                                }\r\n                                              </ul>\r\n                                              :\r\n                                              orderItem.shipmentDetails?.deliveryDate ?\r\n                                                <ul className=\"uk-list\">\r\n                                                  <li>Status : <span className=\"uk-label uk-label-success\">Delivered</span></li>\r\n                                                  <li>Delivery Date: <span>{orderItem.shipmentDetails?.deliveryDate}</span></li>\r\n                                                  {\r\n                                                    checkReturnEligibilty(orderItem.shipmentDetails?.deliveryDate, order.orderItems[0].categoryId) &&\r\n                                                    <li><button className=\"uk-button uk-button-primary uk-button-small\" uk-toggle=\"target: #return-modal\"\r\n                                                    onClick={() => { \r\n                                                      setSelectedReason('');\r\n                                                      dispatch(defaulOrderReturn());\r\n                                                      setReturnOrderDetailId(orderItem.orderDetailId);\r\n                                                      setReturnProductName(orderItem.productName);\r\n                                                      setReturnOrderNumber(order.orderNumber);\r\n                                                    }}>Return</button></li>\r\n                                                  }\r\n                                                </ul>\r\n                                                :\r\n                                                <ul className=\"uk-list\">\r\n                                                  <li>Status : {getShipmentLink(orderItem.shipmentDetails?.shipper, orderItem.shipmentDetails?.trackingNumber)}</li>\r\n                                                  <li>Shipment Date: <span>{orderItem.shipmentDetails?.shippingDate ? orderItem.shipmentDetails?.shippingDate : 'Awaited'}</span></li>\r\n                                                  <li>\r\n                                                    <button className=\"uk-button uk-button-primary uk-button-small\"\r\n                                                    disabled={orders._isLoading}\r\n                                                    {...(orderItem.shipmentDetails?.shippingDate && 'uk-toggle=\"target: #return-modal\"')}\r\n                                                      onClick={() => {\r\n                                                        debugger\r\n                                                        if(orderItem.shipmentDetails?.shippingDate){\r\n                                                          setSelectedReason('');\r\n                                                          setReturnOrderDetailId(orderItem.orderDetailId);\r\n                                                          setReturnProductName(orderItem.productName);\r\n                                                          setReturnOrderNumber(order.orderNumber);\r\n                                                          dispatch(defaulOrderReturn())\r\n                                                        } else {\r\n                                                          setSelectedReason('Order Canceled before shipping');\r\n                                                          setReturnOrderDetailId(orderItem.orderDetailId);\r\n                                                          setReturnProductName(orderItem.productName);\r\n                                                          setReturnOrderNumber(order.orderNumber);\r\n                                                          returnOrder(orderItem.orderDetailId,'Order Canceled before shipping',\r\n                                                          order.orderNumber,orderItem.productName);\r\n                                                        }\r\n                                                      }\r\n                                                    }>\r\n                                                      {\r\n                                                        orders._isLoading &&  <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n                                                      }\r\n                                                    {orderItem.shipmentDetails?.shippingDate ? 'Return' : 'Cancel'}</button></li>\r\n                                                </ul>\r\n                                          }\r\n                                        </div>\r\n                                      </div>\r\n\r\n                                    </div>\r\n                                  )\r\n                                })\r\n                              }\r\n                            </div>\r\n                          </li>\r\n                        </ul>\r\n                      }\r\n\r\n                    </div>\r\n                  )\r\n                })\r\n\r\n              }\r\n            </InfiniteScroll>\r\n        }\r\n\r\n      </div>\r\n      <button ref={returnButtonRef} uk-toggle=\"target: #return-modal\" style={{ visibility: \"hidden\" }}></button>\r\n      <div id=\"return-modal\" uk-modal=\"true\">\r\n        <div className=\"uk-modal-dialog uk-modal-body\">\r\n          <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n          <h2 className=\"uk-modal-title\">Thank you for ordering!</h2>\r\n          <p>Please choose the correct reason for return. This information will help us to improve our site</p>\r\n          <div ref={returnModalRef} className=\"uk-form-stacked\">\r\n            <div className=\"uk-margin\">\r\n              <div className=\"uk-form-controls\">\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Defective product')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Defective product\" checked={selectedReason === 'Defective product'} /><span className=\"coupon-message\">Defective product</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Image shown did not match the actual product')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Image shown did not match the actual product\" checked={selectedReason === 'Image shown did not match the actual product'} /><span className=\"coupon-message\">Image shown did not match the actual product</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Quality Issues')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Quality Issues\" checked={selectedReason === 'Quality Issues'} /><span className=\"coupon-message\">Quality Issues</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('I changed my mind')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"I changed my mind\" checked={selectedReason === 'I changed my mind'} /><span className=\"coupon-message\">I changed my mind</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Size or fit issues')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Size or fit issues\" checked={selectedReason === 'Size or fit issues'} /><span className=\"coupon-message\">Size or fit issues</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Other')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Other\" checked={selectedReason === 'Other'} /><span className=\"coupon-message\">Other</span></label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <p><span className=\"uk-badge\">Note:</span> You confirm that the product is unused with the original tags intact.</p>\r\n          {\r\n            showReturnError && \r\n            <p className=\"uk-text-danger\">Please select one of the above reason.</p>\r\n          }\r\n          <p className=\"uk-text-right\">\r\n            {\r\n              !orders._isOrderUpdate ?\r\n                <button disabled={orders._isLoading}\r\n                  className=\"uk-button uk-button-primary\" type=\"button\" onClick={() => returnOrder()}>\r\n                  {\r\n                    orders._isLoading &&\r\n                    <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n                  }\r\n               Confirm Return</button>\r\n                :\r\n                <button disabled={orders._isOrderUpdate}\r\n                  className=\"uk-button uk-label-success\" type=\"button\" >\r\n                  <span uk-icon=\"icon:check\" />\r\n                Return Initaled.</button>\r\n            }\r\n\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  Orders\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { UserInformation, UserNav, UserSettings } from '.';\r\nimport { AppState, getUserSettings } from 'reducers';\r\nimport { Orders } from './Orders';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst UserContainer: React.FunctionComponent = () => {\r\n\r\n  /**\r\n   * Hooks\r\n   */\r\n  const { userTab } = useParams();\r\n  const [showSettings, setShowSettings] = useState(false);\r\n  const [showPersonal, setShowPersonal] = useState(false);\r\n  const [showOrders, setShowOrders] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const userData = useSelector((state: AppState) => state.user);\r\n\r\n  const userSettings = useSelector((state: AppState) => state.userSettings)\r\n  useEffect(() => {\r\n    dispatch(getUserSettings());\r\n    toggelDetails(userTab || '')\r\n  },[]);\r\n\r\n  useEffect(() => {\r\n    toggelDetails(userTab || '')\r\n  },[userTab])\r\n  /**\r\n   * Local Methods\r\n   */\r\n  const toggelDetails = (selected: string): void => {\r\n    if(selected === 'orders') {\r\n      setShowSettings(false);\r\n      setShowPersonal(false);\r\n      setShowOrders(true);\r\n    } else if(selected === 'settings') {\r\n      setShowSettings(true);\r\n      setShowPersonal(false);\r\n      setShowOrders(false);\r\n    } else {\r\n      setShowSettings(false);\r\n      setShowPersonal(true);\r\n      setShowOrders(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main>\r\n        <section className=\"uk-section uk-section-small\">\r\n          <div className=\"uk-container\">\r\n            <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n              <UserNav toggelDetails={toggelDetails}\r\n                showPersonal={showPersonal} \r\n                showSettings={showSettings} \r\n                showOrders={showOrders} />\r\n                {showPersonal && <UserInformation user={userData} />}\r\n                {showSettings &&  <UserSettings user={userSettings}/>}\r\n                {showOrders &&  <Orders/>}\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserContainer\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { Login, CustomerCart } from 'types'\r\nimport { CountryCodes } from 'appConstants';\r\nimport { useDispatch, useSelector, } from 'react-redux';\r\nimport { userLogin, AppState, defaultLoginRegister, userRegister, getUser, getCart, forgetPassword, addUpdateCart } from 'reducers';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst UserLogin: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector<AppState, boolean>(state => state.userLogin._isLoading);\r\n  const isError = useSelector<AppState, boolean>(state => state.userLogin._isError);\r\n  const _isSuccess = useSelector<AppState, boolean>(state => state.userLogin._isSuccess);\r\n  const responseMessage = useSelector<AppState, string | undefined>(state => state.userLogin.message);\r\n  const [loginRedirect, setLoginRedirect] = useState(false)\r\n\r\n  const loginFormik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n      mobile: '+91-',\r\n      isRegistration: false,\r\n      forgetPassword: false,\r\n      countryCode: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .required('Required')\r\n        .email('Invalid email address'),\r\n      password: Yup.string().when('forgetPassword',{\r\n        is: false,\r\n        then: Yup.string()\r\n        .required('Required')\r\n      }),\r\n      mobile: Yup.string().when('isRegistration', {\r\n        is: true,\r\n        then: Yup.string().required('Required')\r\n          .matches(/^((\\+)(\\d{1,4}[-]))(\\d{10}){1}?$/\r\n            , 'Valid Format e.g., +91-9876543210')\r\n      })\r\n    }),\r\n    onSubmit: (values: Login) => {\r\n      if (!loginFormik.values.isRegistration) {\r\n        if(loginFormik.values.forgetPassword){\r\n          dispatch(forgetPassword(values));\r\n        } else {\r\n          dispatch(userLogin({ email: values.email, password: values.password }));\r\n        }\r\n      } else {\r\n        dispatch(userRegister({ email: values.email, password: values.password, mobile: values.mobile }));\r\n      }\r\n    },\r\n  });\r\n\r\n  const onCountryChange = (event: React.FormEvent<HTMLSelectElement>): void => {\r\n    loginFormik.setFieldValue('mobile', event.currentTarget.value + '-')\r\n  };\r\n\r\n  const toggleLoginRegister = (isRegistration: boolean): void => {\r\n    loginFormik.resetForm();\r\n    loginFormik.setFieldValue('isRegistration', isRegistration);\r\n    loginFormik.setFieldValue('forgetPassword', false);\r\n    dispatch(defaultLoginRegister());\r\n  }\r\n\r\n  const onForgetPassword = () => {\r\n    loginFormik.setFieldValue('forgetPassword', true);\r\n  };\r\n\r\n  const addToDBCartAfterLogin = () => {\r\n    const cartData = JSON.parse(localStorage.getItem(\"basicKart-loggedOutCart\") || '[]');\r\n    cartData.forEach((cart: CustomerCart) => {\r\n      dispatch(addUpdateCart({\r\n        productDetailId: cart.productDetailId,\r\n        productQuantity: cart.productQuantity,\r\n        currencyType: cart.currencyType,\r\n        cartId: '0',\r\n        productImage: cart.productImage,\r\n        productImagePath: cart.productImagePath,\r\n        productName: cart.productName,\r\n        subcategory: cart.subcategory,\r\n        productPrice: '0',\r\n        productId: cart.productId,\r\n      },true))\r\n    });\r\n    localStorage.setItem('basicKart-loggedOutCart','[]');\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (loginFormik.values.isRegistration) {\r\n      loginFormik.setFieldValue('isRegistration', false);\r\n      loginFormik.setFieldValue('email', '');\r\n      loginFormik.setFieldValue('password', '');\r\n      loginFormik.touched.password = false;\r\n      loginFormik.touched.email = false;\r\n    } else {\r\n      if (_isSuccess) {\r\n        if(!loginFormik.values.forgetPassword){\r\n          setLoginRedirect(true);\r\n          dispatch(getUser());\r\n          dispatch(getCart());\r\n          addToDBCartAfterLogin();\r\n        }\r\n      }\r\n    }\r\n  }, [_isSuccess])\r\n\r\n  if (loginRedirect) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={loginFormik.handleSubmit} className=\"uk-form-stacked\">\r\n      <main>\r\n        <section className=\"uk-section uk-section-small\">\r\n          <div className=\"uk-container\">\r\n            <div className=\"uk-grid-medium justify-content-center \" uk-grid=\"true\">\r\n              <div className=\"uk-width-1-1 uk-width-1-3@m tm-aside-column user-nave-sticky\">\r\n                <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\" uk-sticky=\"offset: 80; bottom: true;\">\r\n                  <div className=\"uk-card-header\">\r\n                    <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                      <div>\r\n                        <div className=\"uk-grid-small uk-flex-center\" uk-grid=\"true\">\r\n                          <div>\r\n                            <a className={'uk-button uk-button-default uk-button-small ' + (!loginFormik.values.isRegistration ? 'login-register-active-button uk-active' : '')} onClick={(): void => toggleLoginRegister(false)}>\r\n                              <span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: sign-in; ratio: .75;\"></span>\r\n                              <span>Login</span>\r\n                            </a>\r\n                          </div>\r\n                          <div>\r\n                            <a className={'uk-button uk-button-default uk-button-small ' + (loginFormik.values.isRegistration ? 'login-register-active-button uk-active' : '')} onClick={(): void => toggleLoginRegister(true)}>\r\n                              <span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: pencil; ratio: .75;\"></span>\r\n                              <span>Register</span>\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    {\r\n                      isError &&\r\n                      <div className=\"login-error-message\">\r\n                        <span className=\"uk-notification-message-danger\"> {responseMessage} </span>\r\n                      </div>\r\n                    }\r\n                    {\r\n                      _isSuccess &&\r\n                      <div className=\"forget-password-message\">\r\n                        <span className=\"uk-notification-message-success\"> {responseMessage} </span>\r\n                      </div>\r\n                    }\r\n                    <nav>\r\n                      <ul className=\"uk-nav uk-nav-default tm-nav\">\r\n                        <li>\r\n                          <div className=\"uk-card-body\">\r\n                            <div className=\"uk-form-stacked\">\r\n                              <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n                                <fieldset className=\"uk-fieldset\">\r\n                                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                                    <div>\r\n                                      <label>\r\n                                        <div className=\"uk-form-label\">Email</div>\r\n                                        <input className=\"uk-input\" id=\"email\" type=\"text\"\r\n                                          {...loginFormik.getFieldProps('email')} />\r\n                                        {\r\n                                          loginFormik.touched.email && loginFormik.errors.email ? (\r\n                                            <span className=\"uk-text-danger\">{loginFormik.errors.email}</span>\r\n                                          ) : ''\r\n                                        }\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                </fieldset>\r\n                                {loginFormik.values.isRegistration &&\r\n                                  <fieldset className=\"uk-fieldset\">\r\n                                    <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                                      <div className=\"uk-width-1-3 uk-width-1-3@s\">\r\n                                        <label>\r\n                                          <div className=\"uk-form-label\">Country</div>\r\n                                          <select className=\"uk-select\" id=\"countryCode\"\r\n                                            onChange={onCountryChange}>\r\n                                            {\r\n                                              CountryCodes.map((country, index) => {\r\n                                                return <option key={index} value={country.Iso} selected={country.default}>{country.name}</option>\r\n                                              })\r\n                                            }\r\n                                          </select>\r\n                                        </label>\r\n                                      </div>\r\n                                      <div className=\"uk-width-expand\">\r\n                                        <label>\r\n                                          <div className=\"uk-form-label\">Mobile Number</div>\r\n                                          <input className=\"uk-input\" type=\"text\" id=\"mobile\"\r\n                                            {...loginFormik.getFieldProps('mobile')} />\r\n                                          {\r\n                                            loginFormik.touched.mobile && loginFormik.errors.mobile ? (\r\n                                              <span className=\"uk-text-danger\">{loginFormik.errors.mobile}</span>\r\n                                            ) : ''\r\n                                          }\r\n                                        </label>\r\n                                      </div>\r\n                                    </div>\r\n                                  </fieldset>\r\n                                }\r\n                                {\r\n                                  !loginFormik.values.forgetPassword &&\r\n                                  <fieldset className=\"uk-fieldset\">\r\n                                    <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                                      <div>\r\n                                        <label>\r\n                                          <div className=\"uk-form-label\">Password</div>\r\n                                          <input className=\"uk-input\" type=\"password\" id=\"password\"\r\n                                            {...loginFormik.getFieldProps('password')} />\r\n                                          {\r\n                                            loginFormik.touched.password && loginFormik.errors.password ? (\r\n                                              <span className=\"uk-text-danger\">{loginFormik.errors.password}</span>\r\n                                            ) : ''\r\n                                          }\r\n                                        </label>\r\n                                      </div>\r\n                                    </div>\r\n                                  </fieldset>\r\n                                }\r\n\r\n                              </div>\r\n                              {\r\n                                !loginFormik.values.isRegistration &&\r\n                                <div className=\"uk-text-right uk-margin-xsmall-top\">\r\n                                  <a className=\"uk-text-danger\" onClick={() => onForgetPassword()}> Forget Password ?</a>\r\n                                </div>\r\n                              }\r\n\r\n                              <div className=\"uk-card-footer uk-text-center top-border-none\">\r\n                                <button id=\"loginbtn\" disabled={isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                                  {\r\n                                    isLoading &&\r\n                                    <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                                  }\r\n                                  <span>Submit</span>\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </nav>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserLogin\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst MainFooter: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <footer>\r\n      <section className=\"uk-section uk-section-secondary uk-section-small uk-light\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1 uk-child-width-1-4@m\" uk-grid=\"true\">\r\n            <div>\r\n              <a className=\"uk-logo\" href=\"index.html\"><img src=\"/logo.png\" alt=\"Logo\" width=\"150\" /></a>\r\n              <p className=\"uk-text-small\"></p>\r\n              {/* <ul className=\"uk-iconnav\">\r\n                <li><a href=\"#\" title=\"Facebook\" uk-icon=\"facebook\"></a></li>\r\n                <li><a href=\"#\" title=\"Twitter\" uk-icon=\"twitter\"></a></li>\r\n                <li><a href=\"#\" title=\"YouTube\" uk-icon=\"youtube\"></a></li>\r\n                <li><a href=\"#\" title=\"Instagram\" uk-icon=\"instagram\"></a></li>\r\n              </ul> */}\r\n            </div>\r\n            <div>\r\n              <nav className=\"uk-grid-small uk-child-width-1-2\" uk-grid=\"true\">\r\n                <div>\r\n                  <ul className=\"uk-nav uk-nav-default\">\r\n                    <li><a onClick={() => history.push('/product/lingerie')}>Lingerie</a></li>\r\n                    <li><a onClick={() => history.push('/product/footwear')}>Footwear</a></li>\r\n                    <li><a onClick={() => history.push('/product/bindi')}>Bindi</a></li>\r\n                    <li><a href=\"#\">Home Essential</a></li>\r\n                  </ul>\r\n                </div>\r\n                <div>\r\n                  <ul className=\"uk-nav uk-nav-default\">\r\n                    <li><a href=\"#\">About</a></li>\r\n                    <li><a onClick={() => history.push('/contactus')}>Contacts</a></li>\r\n                  </ul>\r\n                </div>\r\n              </nav>\r\n            </div>\r\n            <div>\r\n              <ul className=\"uk-list uk-text-small\">\r\n                {/* <li>\r\n                  <a className=\"uk-link-muted\" href=\"#\"><span className=\"uk-margin-small-right\" uk-icon=\"receiver\"></span><span className=\"tm-pseudo\">8 800 799 99 99</span></a>\r\n                </li> */}\r\n                <li>\r\n                  <a className=\"uk-link-muted\" href=\"mailto:support@basickart.com\"><span className=\"uk-margin-small-right\" uk-icon=\"mail\"></span><span className=\"tm-pseudo\">support@basickart.com</span></a>\r\n                </li>\r\n                {/* <li>\r\n                  <div className=\"uk-text-muted\"><span className=\"uk-margin-small-right\" uk-icon=\"location\"></span><span>Sadar Bazar, Old Delhi</span></div>\r\n                </li>\r\n                <li>\r\n                  <div className=\"uk-text-muted\"><span className=\"uk-margin-small-right\" uk-icon=\"clock\"></span><span>Daily 10:00–21:00</span></div>\r\n                </li> */}\r\n              </ul>\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-margin uk-text-small uk-text-muted\">Technical partner KPWorks</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport {\r\n  MainFooter\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { getSubCategory, AppState, SubCategory, getActiveProductCount, Cart, getCart, getUser, getUserLocation, getCustomerProducts, UserLocation, setLoggedCart, defaultUser } from 'reducers';\r\nimport { SubCategories, pageSize } from 'appConstants';\r\nimport { filterSubcategories } from 'services';\r\nimport { ProductSubCategory, Search } from 'types';\r\nimport { SideCart } from '.';\r\nimport { setSearch } from 'reducers/Search';\r\n\r\n\r\n\r\nconst Navigation: React.FunctionComponent = () => {\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [cartCount, setCartCount] = useState(0);\r\n  const [enteredSearchText, setEnteredSearchText] = useState('');\r\n  const [cartCountCssFlag, setCartCountCssFlag] = useState(false);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  useEffect(() => {\r\n    dispatch(getSubCategory());\r\n    dispatch(getActiveProductCount());\r\n    if(localStorage.getItem(\"biktoken\")){\r\n      dispatch(getCart());\r\n      dispatch(getUser());\r\n    }\r\n    dispatch(getUserLocation());\r\n    if(localStorage.getItem(\"basicKart-loggedOutCart\")){\r\n      dispatch(setLoggedCart(JSON.parse(localStorage.getItem(\"basicKart-loggedOutCart\") || '[]')))\r\n    }\r\n  }, []);\r\n\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n  const search = useSelector<AppState, Search>(state => state.search.data || {} as Search);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n\r\n  useEffect(() => {\r\n    setCartCount(cart.data?.length || 0);\r\n    setCartCountCssFlag(true);\r\n    setTimeout(()=>{\r\n      setCartCountCssFlag(false);\r\n    },400)\r\n  },[cart.data])\r\n\r\n  const searchProduct = (searchText: string) => {\r\n    \r\n      if(searchText === ''){\r\n        setEnteredSearchText('');\r\n      }\r\n      if(\r\n        (search.categoryId && search.categoryId.length >0) ||\r\n        (search.colourId && search.colourId.length >0) ||\r\n        (search.sizeId && search.sizeId.length >0) ||\r\n        (search.subCategoryId && search.subCategoryId.length >0) ||\r\n         search.endPrice || search.startPrice || searchText\r\n      ){\r\n      dispatch(setSearch({\r\n        categoryId: search.categoryId || 0,\r\n        colourId: search.colourId || [],\r\n        currency: userLocation.data || 'IN',\r\n        endPrice: search.endPrice||'',\r\n        sizeId: search.sizeId || [],\r\n        startPrice: search.startPrice || '',\r\n        subCategoryId: search.subCategoryId || [],\r\n        searchText: searchText\r\n      }));\r\n      dispatch(getCustomerProducts(0, pageSize, search.categoryId || 0, search.subCategoryId || [], search.colourId || [], search.sizeId || [], search.startPrice || '', search.endPrice||'', userLocation.data || 'IN', searchText || '' , true));\r\n      history.push('/product/search')\r\n    }\r\n    \r\n  }\r\n  const navigateTo = (event: React.SyntheticEvent ,categoryPath: string, subcategoryPath?: string) => {\r\n    event.preventDefault();\r\n    history.push('/product/'+ categoryPath.toLowerCase() + (subcategoryPath ? '/'+ subcategoryPath.toLowerCase() : ''));\r\n  };\r\n  const getCategoryAndSubCategory = () => {\r\n    return Object.keys(SubCategories).map((key: string, index: number) => {\r\n      return (\r\n        <li key={index}>\r\n          <a onClick={(e) => navigateTo(e,key)}>{key}<span className=\"uk-margin-xsmall-left\" uk-icon=\"icon: chevron-down; ratio: .75;\"></span></a>\r\n          <div\r\n            className=\"uk-navbar-dropdown uk-margin-remove uk-padding-remove-vertical\"\r\n            uk-drop=\"pos: bottom-justify;delay-show: 125;delay-hide: 50;duration: 75;boundary: .tm-navbar-container;boundary-align: true;pos: bottom-justify;flip: x\"\r\n          >\r\n            <div className=\"uk-container uk-container-small uk-margin-top uk-margin-bottom\">\r\n              <ul className=\"uk-nav uk-nav-default uk-column-1-3\">\r\n                {\r\n                  filterSubcategories(subCategories, Number(SubCategories[key])).map((subcategory: ProductSubCategory, index: number) => {\r\n                    return <li key={index}><a onClick={(e) => navigateTo(e,key,subcategory.code)}>{subcategory.code}</a></li>\r\n                  })\r\n                }\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      )\r\n    });\r\n  };\r\n\r\n  const logout = () => {\r\n    dispatch(defaultUser());\r\n    window.localStorage.removeItem('biktoken');\r\n    history.push('/');\r\n  };\r\n  return (\r\n    <header>\r\n      <div className=\"uk-navbar-container tm-navbar-container\" uk-sticky=\"cls-active: tm-navbar-container-fixed\">\r\n        <div className=\"uk-container\" uk-navbar=\"true\">\r\n          <div className=\"uk-navbar-left\">\r\n            <button className=\"uk-navbar-toggle uk-hidden@m\" uk-toggle=\"target: #nav-offcanvas\" uk-navbar-toggle-icon=\"true\"></button>\r\n            <a className=\"uk-navbar-item uk-logo\" onClick={() => history.push('/')}><img src=\"/logo.png\" width=\"67\" alt=\"Logo\" /></a>\r\n            <nav className=\"uk-visible@m\">\r\n              <ul className=\"uk-navbar-nav\">\r\n                {\r\n                  getCategoryAndSubCategory()\r\n                }\r\n                <li><a href=\"#\">About</a></li>\r\n                <li><a onClick={()=> history.push('/contactus')}>Contact</a></li>\r\n                {\r\n                  userData.data?.isAdmin && \r\n                  <li><a onClick={()=>history.push('/admin')}>Admin</a></li>\r\n                }\r\n               \r\n              </ul>\r\n            </nav>\r\n          </div>\r\n          <div className=\"uk-navbar-right\">\r\n            <a className={`${enteredSearchText !== '' ? 'search-color uk-navbar-toggle tm-navbar-button' : 'uk-navbar-toggle tm-navbar-button'}`} href=\"#\" uk-search-icon=\"true\">\r\n            </a>\r\n            <div className=\"uk-navbar-dropdown uk-padding-small uk-margin-remove\" uk-drop=\"mode: click;cls-drop: uk-navbar-dropdown;boundary: .tm-navbar-container;boundary-align: true;pos: bottom-justify;flip: x\">\r\n              <div className=\"uk-container\">\r\n                <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-expand\">\r\n                    <div className=\"uk-search uk-search-navbar uk-width-1-1\">\r\n                      <input className=\"uk-search-input\" type=\"search\" placeholder=\"Search…\"\r\n                        value={enteredSearchText}\r\n                        onChange={(e) => setEnteredSearchText(e.currentTarget.value)}\r\n                        onKeyPress={(e)=> {e.key === 'Enter' &&  searchProduct(e.currentTarget.value)}} />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-width-auto\" onClick={()=>searchProduct('')}><a className=\"uk-navbar-dropdown-close\" uk-close=\"true\"></a></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <a className=\"uk-navbar-item uk-link-muted tm-navbar-button\"  uk-icon=\"user\"></a>\r\n            <div className=\"uk-padding-small uk-margin-remove\" uk-dropdown=\"pos: bottom-right; offset: -10; delay-hide: 200;\" style={{ minWidth: '150px' }}>\r\n              <ul className=\"uk-nav uk-dropdown-nav\">\r\n                <li>\r\n                  <a onClick={() => userData.data?.userId ?  history.push('/userinformation/orders') : history.push('/login')}>Orders</a>\r\n                </li>\r\n                <li><a onClick={()=> userData.data?.userId ? history.push('/userinformation/default') : history.push('/login')}>Personal</a></li>\r\n                <li><a onClick={()=> userData.data?.userId ? history.push('/userinformation/settings'): history.push('/login')}>Settings</a></li>\r\n                <li className=\"uk-nav-divider\"></li>\r\n                {\r\n                   userData.data?.userId ? \r\n                   <li><a onClick={()=> logout()}>Log out</a></li> :\r\n                   <li><a onClick={()=>history.push('/login')}>Login</a></li>\r\n                }\r\n                \r\n              </ul>\r\n            </div>\r\n            <a className=\"uk-navbar-item uk-link-muted tm-navbar-button\" href=\"#\" uk-toggle=\"target: #cart-offcanvas\">\r\n              <span uk-icon=\"cart\"></span>\r\n              {\r\n                cartCount > 0 &&\r\n                <span className={cartCountCssFlag ? \"uk-badge  cart-popup\" : \"uk-badge \"}>{cartCount}</span>\r\n              }\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <SideCart\r\n      cartData={cart.data || []}/>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport { Navigation };","import React, { useEffect, useState } from 'react';\r\nimport { CustomerCart, ProductCoupon } from 'types';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteCartItem, AppState, UserLocation } from 'reducers';\r\nimport { getCurrencyIcon, calculateUserDiscount, calculateUserDiscountPrice } from 'services';\r\n\r\ninterface Props {\r\n  cartData: CustomerCart[];\r\n}\r\n\r\nconst SideCart: React.FunctionComponent<Props> = (props: Props) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [mainTotal, setMainTotal] = useState(0);\r\n  const [userDiscountTotal, setUserDiscountTotal] = useState('0');\r\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState('0');\r\n  const [discountedTotal, setDiscountedTotal] = useState('0');\r\n  const [userCouponTotal, setUserCouponTotal] = useState('0');\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const couponData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const {\r\n    cartData\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    let cartPrice = 0;\r\n    cartData.forEach(({ totalPrice }) => {\r\n      cartPrice += Number(totalPrice)\r\n    });\r\n    setMainTotal(cartPrice);\r\n    if (couponData.length === 1) {\r\n      let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString());\r\n      let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString());\r\n      let couponPrice = calculateUserDiscountPrice(couponData[0].value, priceAfterDiscount.toString());\r\n      let priceAfterCoupon = calculateUserDiscount(couponData[0].value || '0', priceAfterDiscount.toString());\r\n      setDiscountedTotal(priceAfterDiscount);\r\n      setUserDiscountTotal(discountPrice);\r\n      setUserCouponTotal(couponPrice);\r\n      setTotalAfterDiscount(priceAfterCoupon);\r\n    } else {\r\n      let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString());\r\n      let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString());\r\n      setUserDiscountTotal(discountPrice);\r\n      setTotalAfterDiscount(priceAfterDiscount);\r\n    }\r\n    // setUserDiscountTotal(calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString()));\r\n    // setTotalAfterDiscount(calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString()))\r\n  }, [cartData, userData.data,couponData])\r\n\r\n  const deleteCart = (cartItem: CustomerCart) => {\r\n    dispatch(deleteCartItem(cartItem, false));\r\n  };\r\n\r\n  return (\r\n    <div id=\"cart-offcanvas\" uk-offcanvas=\"overlay: true; flip: true\">\r\n      <aside className=\"uk-offcanvas-bar uk-padding-remove\">\r\n        <div className=\"uk-card uk-card-default uk-card-small uk-height-1-1 uk-flex uk-flex-column tm-shadow-remove\">\r\n          <header className=\"uk-card-header uk-flex uk-flex-middle\">\r\n            <div className=\"uk-grid-small uk-flex-1\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand\"><div className=\"uk-h3\">Cart</div></div>\r\n              <button className=\"uk-offcanvas-close\" type=\"button\" uk-close=\"true\"></button>\r\n            </div>\r\n          </header>\r\n          <div className=\"uk-card-body cart-scroll-for-non-mobile\">\r\n            <ul className=\"uk-list uk-list-divider\">\r\n              {\r\n                cartData.map((cart: CustomerCart, index: number) => {\r\n                  return (\r\n                    <li key={index} className=\"uk-visible-toggle\">\r\n                      <article>\r\n                        <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                          <div className=\"uk-width-1-4\">\r\n                            <div className=\"tm-ratio tm-ratio-4-3\">\r\n                              <a className=\"tm-media-box\" onClick={() => history.push('/productDetails/' + cart.productId)}>\r\n                                <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + cart.productImagePath} alt={cart.productImage} /></figure>\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"uk-width-expand\">\r\n                            <div className=\"uk-text-meta uk-text-xsmall\">{cart.subcategory}</div>\r\n                            <a className=\"uk-link-heading uk-text-small\" onClick={() => history.push('/productDetails/' + cart.productId)}>{cart.productName}</a>\r\n                            <div className=\"uk-margin-xsmall uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                              <div className=\"uk-text-bolder uk-text-small\">{getCurrencyIcon(userLocation.data || 'IN')} {cart.totalPrice}</div>\r\n                              {/* <del className=\"uk-text-bolder uk-text-small uk-text-meta\">123</del> */}\r\n                              <div className=\"uk-text-meta uk-text-xsmall\">{cart.productQuantity} × {getCurrencyIcon(userLocation.data || 'IN')} {cart.productPrice}</div>\r\n                            </div>\r\n                          </div>\r\n                          {\r\n                            !userData.data?.userId && \r\n                            <div>\r\n                              <a className=\"uk-icon-link uk-text-danger uk-invisible-hover\"\r\n                              uk-icon=\"icon: close; ratio: .75\"\r\n                              uk-tooltip=\"Remove\"\r\n                              onClick={() => { deleteCart(cart)}}></a>\r\n                            </div>\r\n                          }\r\n                          \r\n                        </div>\r\n                      </article>\r\n                    </li>\r\n                  )\r\n                })\r\n              }\r\n              {\r\n                cartData.length === 0 &&\r\n                <li className=\"uk-visible-toggle\">\r\n                  <article>\r\n                    <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                      <div className=\"uk-width-1-4\">\r\n                        <div className=\"tm-ratio tm-ratio-4-3\">\r\n                          {/* <a className=\"tm-media-box\">\r\n                            <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + cart.productImagePath} alt={cart.productImage} /></figure>\r\n                          </a> */}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"uk-width-expand\">\r\n                        {/* <div className=\"uk-text-meta uk-text-xsmall\">{cart.subcategory}</div> */}\r\n                        <span className=\"uk-link-heading uk-text-small\" >Cart is empty.</span>\r\n                        <div className=\"uk-margin-xsmall uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                          <div className=\"uk-text-bolder uk-text-small\">Add in some good stuff !!</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </article>\r\n                </li>\r\n              }\r\n            </ul>\r\n          </div>\r\n          <footer className=\"uk-card-footer\">\r\n            {\r\n              (userData.data?.discount && userData.data?.discount !== '0' || couponData.length === 1) &&\r\n              <>\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-expand uk-text-muted uk-text-small\">Subtotal</div>\r\n                  <div className=\"uk-text-muted\">{getCurrencyIcon(userLocation.data || 'IN')} {mainTotal}</div>\r\n                </div>\r\n                {\r\n                  userData.data?.discount && userData.data?.discount !== '0' &&\r\n                  <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                    <div className=\"uk-width-expand uk-text-muted uk-text-small\">Discount ({userData.data?.discount}%)</div>\r\n                    <div className=\"uk-text-danger\">- {getCurrencyIcon(userLocation.data || 'IN')} {userDiscountTotal}</div>\r\n                  </div>\r\n                }\r\n              </>\r\n            }\r\n            {\r\n              couponData.length === 1 &&\r\n              <>\r\n                {\r\n                  userData.data?.discount && userData.data?.discount !== '0' &&\r\n                  <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                    <div className=\"uk-width-expand uk-text-muted\">Discounted Total</div>\r\n                    <div>{getCurrencyIcon(userLocation.data || 'IN')} {discountedTotal}</div>\r\n                  </div>\r\n                }\r\n\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-expand uk-text-muted\">Coupon ({couponData[0] && couponData[0].value}%)</div>\r\n                  <div className=\"uk-text-danger\">− {getCurrencyIcon(userLocation.data || 'IN')} {userCouponTotal}</div>\r\n                </div>\r\n              </>\r\n            }\r\n\r\n            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand uk-text-muted uk-h4\">Total</div>\r\n              <div className=\"uk-h4 uk-text-bolder\">{getCurrencyIcon(userLocation.data || 'IN')} {totalAfterDiscount}</div>\r\n            </div>\r\n            <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@m uk-margin-small\" uk-grid=\"true\">\r\n             <div></div>\r\n              <div >\r\n                <button className=\"uk-button  uk-button-primary uk-button-default uk-margin-small uk-width-1-1\"\r\n                  onClick={() => { userData.data?.userId ? history.push('/cart') :  history.push('/login')}}\r\n                  disabled={mainTotal === 0}\r\n                >\r\n                  Continue\r\n                </button>\r\n              </div>\r\n              {/* <div>\r\n                <button className=\"uk-button uk-button-primary uk-margin-small uk-width-1-1\"\r\n                  onClick={() => { history.push('/checkout') }}\r\n                  disabled={mainTotal === 0}>\r\n                  checkout\r\n                </button>\r\n              </div> */}\r\n            </div>\r\n          </footer>\r\n        </div>\r\n      </aside>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  SideCart\r\n}","import { SubCategories } from 'appConstants';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AppState, SubCategory } from 'reducers';\r\nimport { filterSubcategories } from 'services';\r\nimport { ProductSubCategory } from 'types';\r\n\r\nconst MobileNavigation: React.FunctionComponent = () => {\r\n\r\n  const history = useHistory();\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const navigateTo = (event: React.SyntheticEvent, categoryPath: string, subcategoryPath?: string) => {\r\n    event.preventDefault();\r\n    history.push('/product/' + categoryPath.toLowerCase() + (subcategoryPath ? '/' + subcategoryPath.toLowerCase() : ''));\r\n  }\r\n\r\n  const getCategoryAndSubCategory = () => {\r\n    return Object.keys(SubCategories).map((key: string, index: number) => {\r\n      return (\r\n        <li className=\"uk-parent\" key={index}>\r\n          <a onClick={(e) => e.preventDefault()}>{key}</a>\r\n          <ul className=\"uk-nav-sub uk-list-divider\">\r\n            {\r\n              filterSubcategories(subCategories, Number(SubCategories[key])).map((subcategory: ProductSubCategory, index: number) => {\r\n                return <li key={index}><a onClick={(e) => navigateTo(e, key, subcategory.code)}>{subcategory.code}</a></li>\r\n              })\r\n            }\r\n            <li className=\"uk-text-center\">\r\n                    <a onClick={(e) => navigateTo(e, key)} className=\"uk-link-muted uk-text-uppercase tm-link-to-all\"><span>entire ranage</span><span uk-icon=\"icon: chevron-right; ratio: .75;\"></span></a>\r\n                  </li>\r\n          </ul>\r\n        </li>\r\n      )\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div id=\"nav-offcanvas\" uk-offcanvas=\"overlay: true\">\r\n      <aside className=\"uk-offcanvas-bar uk-padding-remove\">\r\n        <div className=\"uk-card uk-card-default uk-card-small tm-shadow-remove\">\r\n          <header className=\"uk-card-header uk-flex uk-flex-middle\">\r\n            <div>\r\n              <a className=\"uk-link-muted uk-text-bold\" onClick={(e) => e.preventDefault()}>Basic Kart</a>\r\n              {/* <div className=\"uk-text-xsmall uk-text-muted\" style={{ marginTop: \"-2px\" }}>\r\n                <div>Basic Kart</div>\r\n              </div> */}\r\n            </div>\r\n          </header>\r\n          <nav className=\"uk-card-small uk-card-body\">\r\n            <ul className=\"uk-nav-default uk-nav-parent-icon uk-list-divider\" uk-nav=\"true\">\r\n              {/* <li className=\"uk-parent\">\r\n                <a href=\"#\">Bindi</a>\r\n                <ul className=\"uk-nav-sub uk-list-divider\">\r\n                  <li><a href=\"bindi-category.html\">Fancy</a></li>\r\n                  <li><a href=\"bindi-category.html\">Bridal</a></li>\r\n                  <li><a href=\"bindi-category.html\">Stone</a></li>\r\n                  <li><a href=\"bindi-category.html\">Round</a></li>\r\n                  <li><a href=\"bindi-category.html\">Square</a></li>\r\n                  <li className=\"uk-text-center\">\r\n                    <a className=\"uk-link-muted uk-text-uppercase tm-link-to-all\" href=\"bindi-category.html\"><span>entire ranage</span><span uk-icon=\"icon: chevron-right; ratio: .75;\"></span></a>\r\n                  </li>\r\n                </ul>\r\n              </li> */}\r\n              {getCategoryAndSubCategory()}\r\n              <li><a href=\"#\">About</a></li>\r\n              <li><a onClick={()=> history.push('/contactus')}>Contact</a></li>\r\n            </ul>\r\n          </nav>\r\n          <nav className=\"uk-card-body\">\r\n            <ul className=\"uk-iconnav uk-flex-center\">\r\n              <li><a href=\"#\" title=\"Facebook\" uk-icon=\"facebook\"></a></li>\r\n              <li><a href=\"#\" title=\"Twitter\" uk-icon=\"twitter\"></a></li>\r\n              <li><a href=\"#\" title=\"YouTube\" uk-icon=\"youtube\"></a></li>\r\n              <li><a href=\"#\" title=\"Instagram\" uk-icon=\"instagram\"></a></li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </aside>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  MobileNavigation\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { SubProducts } from 'appConstants';\r\n\r\ninterface Props{\r\n  subProductToggle: Function;\r\n  addEditToggle: Function;\r\n}\r\n\r\nconst AdminNav: React.FunctionComponent<Props> = (props: Props) => {\r\n  const { subProductToggle, addEditToggle } = props;\r\n  const history = useHistory();\r\n  const [selectedTab, setSelectedTab] = useState(1);\r\n  const [isOnList, setIsOnList] = useState(true);\r\n\r\n  const {product, productId} = useParams();\r\n\r\n  useEffect(() => {\r\n    if(product == 'product' && productId){\r\n      setSelectedTab(SubProducts.PRODUCT)\r\n    }\r\n  },[product, productId])\r\n\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-1-4@m tm-aside-column\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\" uk-sticky=\"offset: 90; bottom: true; media: @m;\">\r\n        <div className=\"uk-card-header\">\r\n          <div className=\"uk-grid-small uk-flex-center\" uk-grid=\"true\">\r\n            <div>\r\n              <a className={`${isOnList? 'uk-button uk-button-default uk-button-small uk-active' : 'uk-button uk-button-default uk-button-small'}`}\r\n              onClick={() => {addEditToggle(false);setIsOnList(true); history.push('/admin')}}>\r\n                <span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: cog; ratio: .75;\"></span>\r\n                <span>List</span>\r\n              </a>\r\n            </div>\r\n            <div>\r\n              <button className={`${!isOnList? 'uk-button uk-button-default uk-button-small uk-active' : 'uk-button uk-button-default uk-button-small'}`}\r\n               title=\"Add\"\r\n                onClick={() => {addEditToggle(true); ;setIsOnList(false)}}\r\n                disabled={selectedTab === SubProducts.USERS || selectedTab === SubProducts.ORDERS}\r\n                >\r\n                <span uk-icon=\"icon: sign-out; ratio: .75;\"></span>\r\n                <span>Add</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <nav>\r\n            <ul className=\"uk-nav uk-nav-default tm-nav\">\r\n              <li className={`${selectedTab === SubProducts.USERS ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.USERS);setIsOnList(true);addEditToggle(false);setSelectedTab(SubProducts.USERS)}}>Users</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.ORDERS ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.ORDERS);setIsOnList(true);addEditToggle(false);setSelectedTab(SubProducts.ORDERS)}}>Orders</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.PRODUCT ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.PRODUCT);setSelectedTab(SubProducts.PRODUCT)}}>Products</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.SUB_PRODUCT ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.SUB_PRODUCT);setSelectedTab(SubProducts.SUB_PRODUCT)}}>Sub-Category</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.SIZE ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.SIZE);setSelectedTab(SubProducts.SIZE)}}>Size</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.COLOUR ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.COLOUR);setSelectedTab(SubProducts.COLOUR)}}>Colour</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.COUPONS ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.COUPONS);setSelectedTab(SubProducts.COUPONS)}}>Coupons</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.SHIPPER ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.SHIPPER);setSelectedTab(SubProducts.SHIPPER)}}>Shipper</a>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  AdminNav\r\n}","import React, { useEffect, useState } from 'react';\r\nimport DataTable, { IDataTableColumn } from 'react-data-table-component';\r\nimport { getColour, getSize, getSubCategory, getCoupon, getProducts, getShippers, getAllUser, AppState } from 'reducers';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ProductColor, ProductSize, ProductCoupon, ProductSubCategory, Order, OrderShipper, User, ProductItem } from 'types';\r\nimport { SubProducts } from 'appConstants';\r\nimport { getAdminOrders } from 'reducers/Order';\r\nimport { countHighlightProducts } from 'services';\r\n\r\ninterface Props {\r\n  productType: number;\r\n  productColumns: IDataTableColumn[];\r\n  ExpandableComponent?: React.FunctionComponent<any>;\r\n  stateData: ProductColor[] | ProductSize[] | ProductCoupon[] | ProductSubCategory[] | Order[] | OrderShipper[] | User[];\r\n  searchPlaceholder: string;\r\n  expandableRows: boolean;\r\n  sortByColumn?: string;\r\n  defaultSortAsc?: boolean;\r\n}\r\n\r\nconst AdminProductList: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [tabName, setTabName] = useState('');\r\n  const productList = useSelector<AppState, ProductItem[]>(state => state.product.data || []);\r\n  const [tableData, setTableData] = useState<\r\n    ProductColor[] | ProductSize[] | ProductCoupon[] | ProductSubCategory[] | Order[] | OrderShipper[] | User[]\r\n  >([]);\r\n\r\n  let stateData: ProductColor[] | ProductSize[] | ProductCoupon[] | ProductSubCategory[] | Order[] | OrderShipper[] | User[] = [];\r\n  const columns = props.productColumns;\r\n\r\n  if (props.productType === SubProducts.COLOUR ||\r\n    props.productType === SubProducts.SIZE ||\r\n    props.productType === SubProducts.SUB_PRODUCT ||\r\n    props.productType === SubProducts.COUPONS ||\r\n    props.productType === SubProducts.PRODUCT ||\r\n    props.productType === SubProducts.ORDERS ||\r\n    props.productType === SubProducts.SHIPPER ||\r\n    props.productType === SubProducts.USERS) {\r\n    stateData = props.stateData\r\n  } else {\r\n    stateData = []\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.productType === SubProducts.COLOUR) {\r\n      dispatch(getColour());\r\n      setTabName('Colour');\r\n    } else if (props.productType === SubProducts.SIZE) {\r\n      dispatch(getSize());\r\n      setTabName('Size');\r\n    } else if (props.productType === SubProducts.SUB_PRODUCT) {\r\n      dispatch(getSubCategory());\r\n      setTabName('SubCategories');\r\n    } else if (props.productType === SubProducts.COUPONS) {\r\n      dispatch(getCoupon());\r\n      setTabName('Coupons');\r\n    } else if (props.productType === SubProducts.PRODUCT) {\r\n      dispatch(getProducts());\r\n      setTabName('Products');\r\n    } else if (props.productType === SubProducts.ORDERS) {\r\n      dispatch(getAdminOrders());\r\n      setTabName('Orders');\r\n    } else if (props.productType === SubProducts.SHIPPER) {\r\n      dispatch(getShippers());\r\n      setTabName('Shippers');\r\n    } else if (props.productType === SubProducts.USERS) {\r\n      dispatch(getAllUser());\r\n      setTabName('Users');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTableData(stateData || [])\r\n  }, [stateData]);\r\n\r\n  useEffect(() => {\r\n    if (stateData && stateData.length > 0) {\r\n      const data = (stateData as any[]).filter(({\r\n        value, code,\r\n        name, productCategoryName,\r\n        orderNumber, shipperName,\r\n        emailAddress, mobile, paymentMode }) => {\r\n        return (value && value.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (code && code.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (name && name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (productCategoryName && productCategoryName.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (orderNumber && orderNumber.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (shipperName && shipperName.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (emailAddress && emailAddress.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (mobile && mobile.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (paymentMode && paymentMode.toLowerCase().includes(searchTerm.toLowerCase()));\r\n      })\r\n      setTableData(data)\r\n    }\r\n  }, [searchTerm]);\r\n\r\n\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n\r\n            <div className=\"asd\">\r\n              <DataTable\r\n                title={tabName}\r\n                columns={columns}\r\n                data={tableData}\r\n                defaultSortField={props.sortByColumn || \"code\"}\r\n                defaultSortAsc={props.defaultSortAsc !== undefined ? props.defaultSortAsc : true}\r\n                selectableRows={false}\r\n                selectableRowsNoSelectAll={false}\r\n                selectableRowsHighlight={true}\r\n                selectableRowsVisibleOnly={false}\r\n                expandableRows={props.expandableRows}\r\n                expandOnRowClicked={false}\r\n                expandableRowsComponent={props.ExpandableComponent && <props.ExpandableComponent />}\r\n                pagination={true}\r\n                highlightOnHover={true}\r\n                striped={true}\r\n                pointerOnHover={false}\r\n                dense={false}\r\n                noTableHead={false}\r\n                persistTableHead={true}\r\n                progressPending={false}\r\n                noHeader={false}\r\n                subHeader={true}\r\n                subHeaderComponent={\r\n                  (\r\n                    <div className=\"uk-grid-medium uk-child-width-1-1 uk-width-1-1\" uk-grid=\"true\">\r\n                      <div className={`${props.productType === SubProducts.ORDERS ? 'uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s' : 'uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s'}`} uk-grid=\"true\">\r\n                        {\r\n                          props.productType === SubProducts.ORDERS &&\r\n                          <>\r\n                            <div>\r\n                              <label>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: cart;\" /> : Shipped</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: check;\" /> : Delivered</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: plus-circle;\" /> : Return Accepted</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: lifesaver;\" /> : Payment Returned</span>\r\n\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"orange\" }} uk-icon=\"icon: history;\" /> : Return In Progress</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"red\" }} uk-icon=\"icon: minus-circle;\" /> : Return Declined</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"red\" }} uk-icon=\"icon: warning;\" /> : Payment Declined</span>\r\n                              </label>\r\n                            </div>\r\n                          </>\r\n                        }\r\n\r\n                        {\r\n                          props.expandableRows &&\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\"><span><span uk-icon=\"chevron-right\"></span>: Click in table for quick actions</span></div>\r\n                              {\r\n                                props.productType === SubProducts.PRODUCT &&\r\n                                <>\r\n                                  <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: bolt;\" /> : Trending ({countHighlightProducts(productList,true)})</span>\r\n                                  <span className=\"uk-form-label\"><span style={{ color: \"orange\" }} uk-icon=\"icon: star;\" /> : Latest ({countHighlightProducts(productList,false)})</span>\r\n                                </>\r\n                              }\r\n                            </label>\r\n                          </div>\r\n                        }\r\n                        {\r\n                          (!props.expandableRows && props.productType !== SubProducts.ORDERS) &&\r\n                          <div></div>\r\n                        }\r\n                        <div>\r\n                          <input className=\"uk-input uk-form-width-medium uk-form-small uk-float-right\" value={searchTerm} onChange={event => setSearchTerm(event.target.value)} type=\"text\" placeholder={props.searchPlaceholder} />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    // <div className=\"admin-search-header\">\r\n                    //   {\r\n                    //     props.expandableRows &&\r\n                    //     <div className=\"\">\r\n                    //       <div className=\"\">\r\n                    //         <span>Click <span uk-icon=\"chevron-right\"></span> in table for quick actions</span>\r\n                    //       </div>\r\n                    //     </div>\r\n                    //   }\r\n                    //   <div className=\"uk-float-right\">\r\n                    //     <input className=\"uk-input uk-form-width-medium uk-form-small\" value={searchTerm} onChange={event => setSearchTerm(event.target.value)} type=\"text\" placeholder={props.searchPlaceholder} />\r\n                    //   </div>\r\n                    //   <div>\r\n                    //     <div className=\"\"><span style={{ color: \"green\" }} uk-icon=\"icon: bolt;\" /> : Trending</div>\r\n\r\n\r\n                    //   </div>\r\n\r\n                    //   <div className=\"\">\r\n\r\n                    //     <span style={{ color: \"orange\" }} uk-icon=\"icon: star;\" /> : Latest\r\n                    //           </div>\r\n                    // </div>\r\n                  )\r\n                }\r\n                fixedHeader={true}\r\n                fixedHeaderScrollHeight=\"800px\"\r\n                direction={\"ltr\"}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport {\r\n  AdminProductList\r\n}","import React from 'react';\r\n\r\ninterface Props {\r\n  _isError: boolean,\r\n  _isSuccess: boolean,\r\n  message?: string\r\n}\r\n\r\nconst NotificationContainer : React.FunctionComponent<Props> = (props: Props) => {\r\n  const { \r\n    _isError,\r\n    _isSuccess,\r\n    message\r\n  } = props;\r\n  return (\r\n    <>\r\n    {\r\n      _isError &&\r\n      <div className=\"login-error-message\">\r\n        <span className=\"uk-notification-message-danger\"> {message} </span>\r\n      </div>\r\n    }\r\n    {\r\n      _isSuccess &&\r\n      <div className=\"login-error-message\">\r\n        <span className=\"uk-notification-message-success\"> {message} </span>\r\n      </div>\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\nexport {\r\n  NotificationContainer\r\n}","import React from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { PayPalButtonProps, PayPalButtonState } from 'types';\r\n\r\ndeclare global {\r\n  interface Window { paypal: any }\r\n}\r\n\r\nclass PayPalButton extends React.Component<PayPalButtonProps, PayPalButtonState> {\r\n  static propTypes = {\r\n      amount: PropTypes.oneOfType([\r\n          PropTypes.number,\r\n          PropTypes.string,\r\n      ]),\r\n      currency: PropTypes.oneOfType([\r\n          PropTypes.number,\r\n          PropTypes.string,\r\n      ]),\r\n      shippingPreference: PropTypes.string,\r\n      onSuccess: PropTypes.func,\r\n      catchError: PropTypes.func,\r\n      onError: PropTypes.func,\r\n      createOrder: PropTypes.func,\r\n      createSubscription: PropTypes.func,\r\n      onApprove: PropTypes.func,\r\n      onCancel: PropTypes.func,\r\n      style: PropTypes.object,\r\n      options: PropTypes.shape({\r\n          clientId: PropTypes.string,\r\n          merchantId: PropTypes.string,\r\n          currency: PropTypes.oneOfType([\r\n              PropTypes.number,\r\n              PropTypes.string,\r\n          ]),\r\n          intent: PropTypes.string,\r\n          commit: PropTypes.oneOfType([\r\n              PropTypes.bool,\r\n              PropTypes.string\r\n          ]),\r\n          vault: PropTypes.oneOfType([\r\n              PropTypes.bool,\r\n              PropTypes.string\r\n          ]),\r\n          component: PropTypes.string,\r\n          disableFunding: PropTypes.string,\r\n          disableCard: PropTypes.string,\r\n          integrationDate: PropTypes.string,\r\n          locale: PropTypes.string,\r\n          buyerCountry: PropTypes.string,\r\n          debug: PropTypes.oneOfType([\r\n              PropTypes.bool,\r\n              PropTypes.string\r\n          ])\r\n      }),\r\n      onButtonReady: PropTypes.func,\r\n  }\r\n\r\n  static defaultProps = {\r\n      style: {},\r\n      options: {\r\n          clientId: \"sb\",\r\n          currency: \"USD\"\r\n      },\r\n      shippingPreference: \"GET_FROM_FILE\",\r\n  }\r\n\r\n  constructor(props: PayPalButtonProps) {\r\n      super(props);\r\n\r\n      this.state = {\r\n          isSdkReady: false,\r\n      };\r\n  }\r\n\r\n  componentDidMount() {\r\n      if (\r\n          typeof window !== \"undefined\" &&\r\n          window !== undefined &&\r\n          window.paypal === undefined\r\n      ) {\r\n          this.addPaypalSdk();\r\n      }\r\n      else if (\r\n          typeof window !== \"undefined\" &&\r\n          window !== undefined &&\r\n          window.paypal !== undefined &&\r\n          this.props.onButtonReady\r\n      ) {\r\n          this.props.onButtonReady();\r\n      }\r\n  }\r\n\r\n  createOrder(data: any, actions: any) {\r\n\r\n      const { currency, options, amount, shippingPreference } = this.props;\r\n\r\n      return actions.order.create({\r\n        purchase_units: [\r\n          {\r\n            amount: {\r\n              currency_code: currency\r\n                ? currency\r\n                : options && options.currency\r\n                ? options.currency\r\n                : \"USD\",\r\n              value: amount && amount.toString()\r\n            }\r\n          }\r\n        ],\r\n        application_context: {\r\n          shipping_preference: shippingPreference\r\n        }\r\n      });\r\n  }\r\n\r\n  onApprove(data: any, actions: any) {\r\n      return actions.order\r\n          .capture()\r\n          .then((details: any) => {\r\n              if (this.props.onSuccess) {\r\n                  return this.props.onSuccess(details, data);\r\n              }\r\n          })\r\n          .catch((err: any) => {\r\n              if (this.props.catchError) {\r\n                  return this.props.catchError(err);\r\n              }\r\n          });\r\n  }\r\n\r\n  onCancel(error:any){\r\n    if(this.props.onCancel){\r\n      this.props.onCancel(error);\r\n    }\r\n\r\n  }\r\n  render() {\r\n      const {\r\n          amount,\r\n          onSuccess,\r\n          createOrder,\r\n          createSubscription,\r\n          onApprove,\r\n          style,\r\n          onCancel,\r\n      } = this.props;\r\n      const { isSdkReady } = this.state;\r\n\r\n      if (\r\n          !isSdkReady &&\r\n          (typeof window === \"undefined\" || window.paypal === undefined)\r\n      ) {\r\n          return null;\r\n      }\r\n\r\n      const Button = window.paypal.Buttons.driver(\"react\", {\r\n          React,\r\n          ReactDOM,\r\n      });\r\n\r\n      const createOrderFn =\r\n          amount && !createOrder\r\n              ? (data: any, actions: any) => this.createOrder(data, actions)\r\n              : (data: any, actions: any) => createOrder && createOrder(data, actions);\r\n\r\n      return (\r\n          <Button\r\n              {...this.props}\r\n              createOrder={createSubscription ? undefined : createOrderFn}\r\n              createSubscription={createSubscription}\r\n              onCancel={\r\n                onCancel ? (error:any) => onCancel(error) : \r\n                (error:any) => this.onCancel(error)}\r\n              onApprove={\r\n                  onSuccess\r\n                      ? (data: any, actions: any) => this.onApprove(data, actions)\r\n                      : (data: any, actions: any) => onApprove && onApprove(data, actions)\r\n              }\r\n              style={style}\r\n          />\r\n      );\r\n  }\r\n\r\n  private addPaypalSdk() {\r\n      const { options, onButtonReady } = this.props;\r\n      const queryParams: string[] = [];\r\n\r\n      // replacing camelCase with dashes\r\n     if(options){\r\n      for (const [key, value] of Object.entries(options)) {\r\n        const name = key.split(/(?=[A-Z])/).join(\"-\").toLowerCase();\r\n        queryParams.push(`${name}=${value}`);\r\n      }\r\n      //   Object.keys(options).forEach(k => {\r\n      //     const name = k.split(/(?=[A-Z])/).join(\"-\").toLowerCase();\r\n      //     queryParams.push(`${name}=${options[k]}`);\r\n      // });\r\n     }\r\n\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?${queryParams.join(\"&\")}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n          this.setState({ isSdkReady: true });\r\n\r\n          if (onButtonReady) {\r\n              onButtonReady();\r\n          }\r\n      };\r\n      script.onerror = () => {\r\n          throw new Error(\"Paypal SDK could not be loaded.\");\r\n      };\r\n  \r\n      document.body.appendChild(script);\r\n  }\r\n}\r\nexport {\r\n  PayPalButton\r\n}","import React, { useEffect, useRef, useState, Dispatch, SetStateAction } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getPayPalOrder, AppState, savePayPalOrder, getCart, defaultCheckout } from 'reducers';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ProductCoupon } from 'types';\r\ndeclare global {\r\n  interface Window { paypal: any,paypalOrderId:any, didPriceChanged: boolean, paypalButton: any }\r\n}\r\n\r\ninterface Props {\r\n  cartTotalPrice: string;\r\n  cartTotalWithShipping: string;\r\n  quantityCount: number;\r\n  isStandard: boolean;\r\n  paymentMode: string;\r\n  setContainerIsCard: Dispatch<SetStateAction<boolean>>;\r\n  cartOrderId:number;\r\n}\r\nconst PayPalPayment : React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const paypalPaymentLoadingRef = useRef<HTMLButtonElement>(null);\r\n  const paypalModalRef = useRef<HTMLDivElement>(null)\r\n  const checkout = useSelector((state: AppState) => state.checkout);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const couponData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);\r\n  const [paypalPaymentMessage, setPaypalPaymentMessage] = useState(\"Please don't close this window while we process your payment.\");\r\n  const [paypalOrderId, setPayPalOrderId] = useState('');\r\n  const [paymentErroredOut, setPaymentErroredOut] = useState(false);\r\n  const [paymentSuccess, setPaymentSuccess] = useState(false);\r\n  const [isCard, setIsCard] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    if(props.paymentMode === 'paypal' && checkout.data && checkout.data.orderId){\r\n      setPayPalOrderId(checkout.data.orderId);\r\n      window.paypalOrderId = checkout.data.orderId\r\n    }\r\n  },[checkout.data]);\r\n\r\n  useEffect(() => {\r\n    if(props.cartTotalPrice !== '0'){\r\n      if (window.paypalButton) {\r\n        window.paypalButton.close();\r\n        delete window.paypalButton;\r\n        setTimeout(()=>{\r\n          history.go(0)\r\n        })\r\n      }\r\n      window.paypalButton = window.paypal.Buttons({\r\n        createOrder: function () {\r\n          if(!window.paypalOrderId){\r\n            if(!window.didPriceChanged){\r\n              togglePaymenModal('c');\r\n            }\r\n            return false;\r\n          } else {\r\n            paypalPaymentLoadingRef.current?.click();\r\n            return window.paypalOrderId;\r\n          }\r\n        },\r\n        onCancel: function (err:any) {\r\n          fundingType('credit');\r\n          window.paypalOrderId = '';\r\n        },\r\n        onApprove:function(data:any,actions:any) {\r\n          togglePaymenModal('b');\r\n          return actions.order.capture().then(function(details:any)  {\r\n            successPaypalPayment(data,details);\r\n           });\r\n        },\r\n        onClick: async function (d: any) {\r\n          window.paypalOrderId = '';\r\n          fundingType(d.fundingSource);\r\n          togglePaymenModal('d');\r\n          await dispatch(getPayPalOrder(props.cartTotalPrice.toString(), props.cartTotalWithShipping.toString(),props.cartOrderId,couponData && couponData[0] && couponData[0].couponId))\r\n        },\r\n        onError: function(data: any){\r\n          console.log('error')\r\n          console.log(data)\r\n        }\r\n      });\r\n      window.paypalButton.render('#paypal-button-container')\r\n    }\r\n    \r\n  },[props.cartTotalPrice,props.cartTotalWithShipping]);\r\n\r\n  useEffect(()=> {\r\n    if(checkout._priceChanged && props.paymentMode === 'paypal') {\r\n      window.didPriceChanged= true;\r\n      setPaypalPaymentMessage(checkout.message || '');\r\n      setTimeout(() => {\r\n        window.didPriceChanged = false;\r\n        history.go(0);\r\n        togglePaymenModal('e');\r\n      },5000);\r\n    }\r\n  },[checkout._priceChanged]);\r\n\r\n  const togglePaymenModal = (tt?:string) => {\r\n    paypalPaymentLoadingRef.current?.click();\r\n  };\r\n\r\n  const fundingType = (funding: string) => {\r\n    console.log(funding)\r\n    if(funding === 'card'){\r\n      setIsCard(true);\r\n      if(window.innerWidth > 959){\r\n        window.scrollTo({\r\n          top: 150,\r\n          behavior: 'smooth'\r\n        })\r\n      }\r\n      props.setContainerIsCard(true);\r\n\r\n    }else {\r\n      if(window.innerWidth > 959){\r\n        window.scrollTo(0,0);\r\n      }\r\n      setTimeout(()=>{\r\n        setIsCard(false);\r\n      props.setContainerIsCard(false)\r\n      },\r\n      1000)\r\n    }\r\n      setPaypalPaymentMessage(\"Please don't close this window while we process your payment.\");\r\n      setPaymentErroredOut(false);\r\n      setPaymentSuccess(false);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if(checkout._isPaymentSucceess){\r\n      setPaymentErroredOut(false);\r\n      setPaymentSuccess(true);\r\n      setPaypalPaymentMessage(checkout.message || \"\");\r\n      setTimeout(() => {\r\n        dispatch(defaultCheckout());\r\n        togglePaymenModal('f');\r\n        history.push('userinformation/orders');\r\n      }, 5000);\r\n    } else if(!checkout._isPaymentSucceess && checkout._isError) {\r\n      setPaymentErroredOut(true);\r\n      setPaymentSuccess(false);\r\n      setPaypalPaymentMessage(checkout.message || \"\");\r\n    }\r\n  },[checkout._isPaymentSucceess,checkout._isError])\r\n  const successPaypalPayment = (orderData: string, paymentData: string) => {\r\n\r\n    dispatch(savePayPalOrder({\r\n      paypalResponse: {\r\n        orderData,\r\n        paymentData\r\n      },\r\n      orderId: props.cartOrderId,\r\n      addressId: userData.data && userData.data.addressId || '',\r\n      quantity: props.quantityCount,\r\n      couponId: couponData && couponData[0] && couponData[0].couponId,\r\n      isStandard: props.isStandard\r\n    }))\r\n  };\r\n\r\n  return(\r\n    <>\r\n      <div id=\"paypal-button-container\"></div>\r\n      <button ref={paypalPaymentLoadingRef} id=\"payment-loading\" uk-toggle=\"target: #paypal-div\" type=\"button\">order</button>\r\n      <div id=\"paypal-div\" uk-modal=\"true; esc-close: false; bg-close: false\">\r\n        <div className=\"uk-modal-dialog uk-modal-body uk-margin-auto-vertical\">\r\n        {\r\n          (paymentSuccess || paymentErroredOut)  &&  <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n        }\r\n        <div ref={paypalModalRef} className=\"uk-modal-body uk-nav-center\">\r\n          <p>{paypalPaymentMessage}</p>\r\n            {\r\n              !paymentSuccess && !paymentErroredOut && <div  uk-spinner=\"true\"></div>\r\n            }\r\n            {\r\n              paymentSuccess && !paymentErroredOut && \r\n              <>\r\n              <span className=\"uk-label uk-label-success\">Redirecting to Orders <div  uk-spinner=\"true\"></div></span>\r\n              </>\r\n            }\r\n            {\r\n              paymentErroredOut && <span className=\"uk-label uk-label-danger\">Payment Failed</span> \r\n            } \r\n        </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport {\r\n  PayPalPayment\r\n}","import React, { useState, useEffect, Dispatch, SetStateAction } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppState, resendOTP } from 'reducers';\r\n\r\ninterface Props{\r\n  showOtpContainer: boolean;\r\n  setEnteredOTP: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\n\r\nconst CashOnDeliveryPayment: React.FunctionComponent<Props> = (props: Props) => {\r\n  const {\r\n    showOtpContainer\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n  const [timeLeft, setTimeLeft] = useState(30);\r\n  const [enteredOTP, setEnteredOTP] = useState('');\r\n  const checkout = useSelector((state: AppState) => state.checkout);\r\n\r\n  useEffect(()=> {\r\n    if(showOtpContainer){\r\n      const timer = setInterval(() => {\r\n        if(timeLeft > 0) {\r\n          setTimeLeft(timeLeft - 1);\r\n        }\r\n      },1000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  });\r\n\r\n  const resendOtpToCustomer = () => {\r\n    dispatch(resendOTP());\r\n    setTimeLeft(30)\r\n  };\r\n  return (\r\n    <section className=\"uk-card-body\">\r\n      <div className=\"uk-grid-small  uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n        <div className=\"uk-width-expand\">\r\n          <div className=\"uk-text-small\">Enter OTP</div>\r\n          {\r\n            timeLeft > 0 && !checkout._isError &&\r\n            <div className=\"uk-text-meta uk-text-small uk-text-danger\">Retry in {timeLeft}sec</div>\r\n          }\r\n        </div>\r\n        <div className=\"uk-text-right\">\r\n          <input \r\n            className=\"uk-input\"\r\n            type=\"text\"\r\n            value={enteredOTP}\r\n            onChange={(e) => {setEnteredOTP(e.currentTarget.value); props.setEnteredOTP(e.currentTarget.value)}}/>\r\n          {\r\n             timeLeft === 0 && !checkout._isError &&\r\n             <a \r\n            className=\"uk-text-meta uk-text-small uk-text-success uk-link-muted\"\r\n            onClick={()=> resendOtpToCustomer()}>Resend OTP</a>\r\n          }\r\n        </div>\r\n      </div>\r\n      {\r\n        checkout._isError && \r\n      <div className=\"uk-text-meta uk-text-small uk-text-danger\">{checkout.message}</div>\r\n      }\r\n      {\r\n        checkout._isFetchCodCodeSuccess && \r\n        <div className=\"login-error-message\">\r\n        <span className=\"uk-notification-message-success uk-text-meta uk-text-small uk-text-success\"> {checkout.message} </span>\r\n      </div>\r\n      }\r\n      \r\n    </section>\r\n  )\r\n}\r\n\r\nexport {\r\n  CashOnDeliveryPayment\r\n}","import React from 'react';\r\nimport { ProductItem, CustomerCart } from 'types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { getCurrencyIcon, calculateUserDiscount, showINRUSD } from 'services';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, UserLocation, Cart, addUpdateCart } from 'reducers';\r\n\r\ninterface Props {\r\n  productList: ProductItem[]\r\n}\r\n\r\nconst QuickProductList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n\r\n  const addToCart = (product: ProductItem)=> {\r\n    if(!userData.data?.userId){\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: product.productDetailId,\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: showINRUSD(userLocation.data || 'IN', product),\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, false))\r\n    } else {\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: '0',\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: '0',\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, true))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <div uk-slider=\"finite: true\">\r\n        <div className=\"uk-grid-small uk-flex-middle uk-margin-bottom\" uk-grid=\"true\">\r\n          <h2 className=\"uk-width-expand uk-text-center uk-text-left@s\">Related Products</h2>\r\n          <div className=\"uk-visible@s\">\r\n            <a className=\"tm-slidenav\" href=\"#\" uk-slider-item=\"previous\" uk-slidenav-previous=\"true\"></a>\r\n            <a className=\"tm-slidenav\" href=\"#\" uk-slider-item=\"next\" uk-slidenav-next=\"true\"></a>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n          <div className=\"uk-position-relative\">\r\n            <div className=\"uk-slider-container\">\r\n              <div className=\"uk-slider-items uk-grid-collapse uk-child-width-custom tm-products-grid\">\r\n                {\r\n                  props.productList.map((product, index) => {\r\n                    return (\r\n                      <article key={index} className=\"tm-product-card\">\r\n                        <div className=\"tm-product-card-media\">\r\n                          <div className=\"tm-ratio tm-ratio-4-3\">\r\n                            <a className=\"tm-media-box\" onClick={() => {window.scrollTo({top:0, behavior:'smooth'}); history.push('/productDetails/' + product.productId)}}>\r\n                              <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + product.imagePaths} alt={product.imageNames} /></figure>\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"tm-product-card-body\">\r\n                          <div className=\"tm-product-card-info\">\r\n                            <div className=\"uk-text-meta uk-margin-xsmall-bottom\">{product.productCategoryName}</div>\r\n                            <h3 className=\"tm-product-card-title\"><a className=\"uk-link-heading\" onClick={() => history.push('/productDetails/' + product.productId)}>{product.name}</a></h3>\r\n                          </div>\r\n                          <div className=\"tm-product-card-shop\">\r\n                            <div className=\"tm-product-card-prices\">\r\n                              {\r\n                                userData.data?.discount && userData.data?.discount !== '0' &&\r\n                                <del className=\"uk-text-meta\">{getCurrencyIcon(userLocation.data || 'IN')} {showINRUSD(userLocation.data || 'IN', product)}</del>\r\n                              }\r\n                              <div className=\"tm-product-card-price\">\r\n                                {getCurrencyIcon(userLocation.data || 'IN')} {calculateUserDiscount(userData.data?.discount || '0', showINRUSD(userLocation.data || 'IN', product))}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"tm-product-card-add\">\r\n                              <button className=\"uk-button uk-button-primary tm-product-card-add-button tm-shine js-add-to-cart\">\r\n                                {\r\n                                  cart._isLoading && <span uk-spinner=\"true\"></span>\r\n                                }\r\n                                {\r\n                                  !cart._isLoading && (\r\n                                    <>\r\n                                      <span className=\"tm-product-card-add-button-icon\" uk-icon=\"cart\" onClick={() => addToCart(product)}></span>\r\n                                      <span className=\"tm-product-card-add-button-text\">add to cart</span>\r\n                                    </>\r\n                                  )\r\n                                }\r\n\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </article>\r\n                    )\r\n                  })\r\n                }\r\n\r\n              </div>\r\n            </div>\r\n            <ul className=\"uk-slider-nav uk-dotnav uk-flex-center uk-margin-top uk-hidden@s\"></ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </section>\r\n  )\r\n}\r\n\r\nexport {\r\n  QuickProductList\r\n}","import React from 'react';\r\n\r\ninterface Props{\r\n  keyIndex: number\r\n}\r\nconst LoadingProductArticle: React.FunctionComponent<Props> = (props: Props) => {\r\n  return (\r\n    <article key={props.keyIndex} className=\"tm-product-card\">\r\n      <div className=\"tm-product-card-media\">\r\n        <div className=\"tm-ratio tm-ratio-4-3\">\r\n          <a className=\"tm-media-box\">\r\n            <figure className=\"tm-media-box-wrap\">\r\n              <div className=\"ph-item\">\r\n                <div className=\"ph-picture\"></div>\r\n              </div>\r\n            </figure>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div className=\"tm-product-card-body\">\r\n        <div className=\"tm-product-card-info\">\r\n          <div className=\"uk-text-meta uk-margin-xsmall-bottom\">\r\n            <div className=\"ph-item\">\r\n              <div>\r\n                <div className=\"ph-row\">\r\n                  <div className=\"ph-col-4\"></div>\r\n                  <div className=\"ph-col-8 empty\"></div>\r\n                  <div className=\"ph-col-6\"></div>\r\n                  <div className=\"ph-col-6 empty\"></div>\r\n\r\n                  <div className=\"ph-col-12 empty\"></div>\r\n                </div>\r\n              </div>\r\n              <div className=\"ph-col-1\">\r\n                <div className=\"ph-avatar\"></div>\r\n              </div>\r\n            </div></div>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport {\r\n  LoadingProductArticle\r\n}","import React, { useEffect } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\n\r\nconst ScrollToTopComponent: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    }\r\n  }, []);\r\n\r\n  return (null);\r\n}\r\n\r\nconst ScrollToTop = withRouter(ScrollToTopComponent);\r\n\r\nexport {\r\n  ScrollToTop\r\n} ","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst ContactUs: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a onClick={()=>history.push('/')}>Home</a></li>\r\n                <li><span>Contacts</span></li>\r\n              </ul>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom\">Contacts</h1>\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n                <section className=\"uk-width-1-1 uk-width-expand@m\">\r\n                  <article className=\"uk-card uk-card-default uk-card-small uk-card-body uk-article tm-ignore-container\">\r\n                    <div className=\"uk-child-width-1-1 uk-child-width-1-2@s uk-margin-top\" uk-grid=\"true\">\r\n                      <section>\r\n                        <h3>Store</h3>\r\n                        <ul className=\"uk-list\">\r\n                          {/* <li>\r\n                            <a className=\"uk-link-heading\" href=\"#\"><span className=\"uk-margin-small-right\" uk-icon=\"receiver\"></span><span className=\"tm-pseudo\">8 800 799 99 99</span></a>\r\n                          </li>\r\n                          <li>\r\n                            <a className=\"uk-link-heading\" href=\"#\"><span className=\"uk-margin-small-right\" uk-icon=\"mail\"></span><span className=\"tm-pseudo\">example@example.com</span></a>\r\n                          </li> */}\r\n                          <li>\r\n                            <div><span className=\"uk-margin-small-right\" uk-icon=\"location\"></span><span>Karol Bagh Market, Delhi</span></div>\r\n                          </li>\r\n                          <li>\r\n                            <div><span className=\"uk-margin-small-right\" uk-icon=\"clock\"></span><span>Daily 10:00–20:00</span></div>\r\n                          </li>\r\n                        </ul>\r\n                      </section>\r\n                      <section>\r\n                        <h3>Feedback</h3>\r\n                        <dl className=\"uk-description-list\">\r\n                          <dt>Support</dt>\r\n                          <dd><a className=\"uk-link-muted\" href=\"mailto:support@basickart.com\">support@basickart.com</a></dd>\r\n                        </dl>\r\n                      </section>\r\n                      {/* <section className=\"uk-width-1-1\">\r\n                        <h2 className=\"uk-text-center\">Contact Us</h2>\r\n                        <form>\r\n                          <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label uk-form-label-required\">Name</div>\r\n                                <input className=\"uk-input\" type=\"text\" required />\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label uk-form-label-required\">Email</div>\r\n                                <input className=\"uk-input\" type=\"email\" required />\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Topic</div>\r\n                                <select className=\"uk-select\">\r\n                                  <option>Customer service</option>\r\n                                  <option>Tech support</option>\r\n                                  <option>Other</option>\r\n                                </select>\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Message</div>\r\n                                <textarea className=\"uk-textarea\"></textarea>\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"uk-text-center\"><button className=\"uk-button uk-button-primary\">Send</button></div>\r\n                          </div>\r\n                        </form>\r\n                      </section> */}\r\n                    </div>\r\n                  </article>\r\n                </section>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  ContactUs\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductColor } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateColour, Colour } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { code, value, colourId }: ProductColor = data;\r\n  const colourActionStatus = useSelector<AppState, Colour>(state => state.colour);\r\n\r\n  const colourQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      code,\r\n      value,\r\n      colourId\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (value: ProductColor) => {\r\n      dispatch(updateColour(value))\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={colourQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Colour Code</div>\r\n              <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                {...colourQuickViewFormik.getFieldProps('code')} />\r\n              {\r\n                colourQuickViewFormik.touched.code && colourQuickViewFormik.errors.code ? (\r\n                  <span className=\"uk-text-danger\">{colourQuickViewFormik.errors.code}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Colour Name</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...colourQuickViewFormik.getFieldProps('value')} />\r\n              {\r\n                colourQuickViewFormik.touched.value && colourQuickViewFormik.errors.value ? (\r\n                  <span className=\"uk-text-danger\">{colourQuickViewFormik.errors.value}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Colour Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  colourActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n        {colourQuickViewFormik.isSubmitting && <NotificationContainer {...colourActionStatus}/>}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst ColourList: React.FunctionComponent = () => {\r\n\r\n  const stateData = useSelector<AppState, ProductColor[]>(state => state.colour.data || []);  \r\n  const productColumns = [\r\n    {\r\n      name: 'ColourId',\r\n      selector: 'colourId',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Colour Code',\r\n      selector: 'code',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Colour Value',\r\n      selector: 'value',\r\n      sortable: true,\r\n    },\r\n  ]\r\n\r\n  return(\r\n    <AdminProductList \r\n      productColumns={productColumns} \r\n      productType={SubProducts.COLOUR} \r\n      ExpandableComponent= {ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Colour Value\"\r\n      expandableRows = {true}/>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport {\r\n  ColourList,\r\n  ExpandableComponent\r\n}","import React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, Colour, saveColour } from 'reducers';\r\nimport { ProductColor } from 'types';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst ProductColour: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const colourFormik = useFormik({\r\n    initialValues: {\r\n      code: '',\r\n      value: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (values: ProductColor) => {\r\n      dispatch(saveColour(values));\r\n    }\r\n  });\r\n  const colourActionStatus = useSelector<AppState, Colour>(state => state.colour);\r\n  useEffect(() => {\r\n    if (colourActionStatus._isSuccess) {\r\n      colourFormik.resetForm();\r\n    }\r\n  }, [colourActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={colourFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Colour</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Colour Code</div>\r\n                      <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                        {...colourFormik.getFieldProps('code')} />\r\n                      {\r\n                        colourFormik.touched.code && colourFormik.errors.code ? (\r\n                          <span className=\"uk-text-danger\">{colourFormik.errors.code}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Colour Name</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...colourFormik.getFieldProps('value')} />\r\n                      {\r\n                        colourFormik.touched.value && colourFormik.errors.value ? (\r\n                          <span className=\"uk-text-danger\">{colourFormik.errors.value}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...colourActionStatus}/>\r\n          <button disabled={colourActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              colourActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductColour\r\n}","import React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, addUpdateSize , Size } from 'reducers';\r\nimport { ProductSize as ProductSizeType } from 'types';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\n\r\nconst ProductSize: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const sizeFormik = useFormik({\r\n    initialValues: {\r\n      code: '',\r\n      value: '',\r\n      productCategory: 1,\r\n      sizeId: '0'\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required'),\r\n      productCategory: Yup.number().required('Required')\r\n    }),\r\n    onSubmit: (values: ProductSizeType) => {\r\n      dispatch(addUpdateSize (values));\r\n    }\r\n  });\r\n  const sizeActionStatus = useSelector<AppState, Size>(state => state.size);\r\n  useEffect(() => {\r\n    if (sizeActionStatus._isSuccess) {\r\n      sizeFormik.resetForm();\r\n    }\r\n  }, [sizeActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={sizeFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Size</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n                <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Product Category</div>\r\n                      <select className=\"uk-select\" id=\"productCategory\"\r\n                        {...sizeFormik.getFieldProps('productCategory')}>\r\n                          <option key='1' value={1}>Lingerie</option>\r\n                          <option key='2' value={2}>Footwear</option>\r\n                          <option key='3' value={3}>Bindi</option>\r\n                          <option key='4' value={4}>Handicraft</option>\r\n                        </select>\r\n                      {\r\n                        sizeFormik.touched.productCategory && sizeFormik.errors.productCategory ? (\r\n                          <span className=\"uk-text-danger\">{sizeFormik.errors.productCategory}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Size Code</div>\r\n                      <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                        {...sizeFormik.getFieldProps('code')} />\r\n                      {\r\n                        sizeFormik.touched.code && sizeFormik.errors.code ? (\r\n                          <span className=\"uk-text-danger\">{sizeFormik.errors.code}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Size Value</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...sizeFormik.getFieldProps('value')} />\r\n                      {\r\n                        sizeFormik.touched.value && sizeFormik.errors.value ? (\r\n                          <span className=\"uk-text-danger\">{sizeFormik.errors.value}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...sizeActionStatus}/>\r\n          <button disabled={sizeActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              sizeActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductSize\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductSize } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateColour, Colour, addUpdateSize, Size } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst SizeList: React.FunctionComponent = () => {\r\n\r\n  const stateData = useSelector<AppState, ProductSize[]>(state => state.size.data || []);\r\n  const productColumns = [\r\n    {\r\n      name: 'SizeId',\r\n      selector: 'sizeId',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Product Category',\r\n      selector: 'productCategoryName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Size Code',\r\n      selector: 'code',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Size Value',\r\n      selector: 'value',\r\n      sortable: true,\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.SIZE}\r\n      ExpandableComponent={ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Size Value\"\r\n      expandableRows={true} />\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { code, value, sizeId, productCategory }: ProductSize = data;\r\n  const sizeActionStatus = useSelector<AppState, Size>(state => state.size);\r\n\r\n  const sizeQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      code,\r\n      value,\r\n      sizeId,\r\n      productCategory,\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required'),\r\n      productCategory: Yup.number().required('Required')\r\n    }),\r\n    onSubmit: (value: ProductSize) => {\r\n      dispatch(addUpdateSize(value))\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={sizeQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Product Category</div>\r\n              <select className=\"uk-select\" id=\"productCategory\"\r\n                {...sizeQuickViewFormik.getFieldProps('productCategory')}>\r\n                <option key='1' value={1}>Lingerie</option>\r\n                <option key='2' value={2}>Footwear</option>\r\n                <option key='3' value={3}>Bindi</option>\r\n                <option key='4' value={4}>Handicraft</option>\r\n              </select>\r\n              {\r\n                sizeQuickViewFormik.touched.productCategory && sizeQuickViewFormik.errors.productCategory ? (\r\n                  <span className=\"uk-text-danger\">{sizeQuickViewFormik.errors.productCategory}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Size Code</div>\r\n              <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                {...sizeQuickViewFormik.getFieldProps('code')} />\r\n              {\r\n                sizeQuickViewFormik.touched.code && sizeQuickViewFormik.errors.code ? (\r\n                  <span className=\"uk-text-danger\">{sizeQuickViewFormik.errors.code}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Size Value</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...sizeQuickViewFormik.getFieldProps('value')} />\r\n              {\r\n                sizeQuickViewFormik.touched.value && sizeQuickViewFormik.errors.value ? (\r\n                  <span className=\"uk-text-danger\">{sizeQuickViewFormik.errors.value}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Size Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  sizeActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n          {sizeQuickViewFormik.isSubmitting && <NotificationContainer {...sizeActionStatus} />}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  SizeList,\r\n  ExpandableComponent\r\n}","import React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, addUpdateSize, Size, addUpdateSubCategory, SubCategory } from 'reducers';\r\nimport { ProductSubCategory as ProductSubCategoryType } from 'types';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\n\r\nconst ProductSubCategory: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const subCategoryFormik = useFormik({\r\n    initialValues: {\r\n      code: '',\r\n      value: '',\r\n      productCategoryId: 0,\r\n      subCategoryId: '0'\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required'),\r\n      productCategoryId: Yup.number().required('Required').moreThan(0, 'Required')\r\n    }),\r\n    onSubmit: (values: ProductSubCategoryType) => {\r\n      dispatch(addUpdateSubCategory(values));\r\n    }\r\n  });\r\n  const subCategoryActionStatus = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  useEffect(() => {\r\n    if (subCategoryActionStatus._isSuccess) {\r\n      subCategoryFormik.resetForm();\r\n    }\r\n  }, [subCategoryActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={subCategoryFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">SubCategory</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Product Category</div>\r\n                      <select className=\"uk-select\" id=\"productCategoryId\"\r\n                        {...subCategoryFormik.getFieldProps('productCategoryId')}>\r\n                        <option key='0' value={0}>Select</option>\r\n                        <option key='1' value={1}>Lingerie</option>\r\n                        <option key='2' value={2}>Footwear</option>\r\n                        <option key='3' value={3}>Bindi</option>\r\n                        <option key='4' value={4}>Handicraft</option>\r\n                      </select>\r\n                      {\r\n                        subCategoryFormik.touched.productCategoryId && subCategoryFormik.errors.productCategoryId ? (\r\n                          <span className=\"uk-text-danger\">{subCategoryFormik.errors.productCategoryId}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">SubCategory Name</div>\r\n                      <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                        {...subCategoryFormik.getFieldProps('code')} />\r\n                      {\r\n                        subCategoryFormik.touched.code && subCategoryFormik.errors.code ? (\r\n                          <span className=\"uk-text-danger\">{subCategoryFormik.errors.code}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">SubCategory Description</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...subCategoryFormik.getFieldProps('value')} />\r\n                      {\r\n                        subCategoryFormik.touched.value && subCategoryFormik.errors.value ? (\r\n                          <span className=\"uk-text-danger\">{subCategoryFormik.errors.value}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...subCategoryActionStatus} />\r\n          <button disabled={subCategoryActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              subCategoryActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductSubCategory\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductSubCategory } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateColour, Colour, addUpdateSize, Size, SubCategory, addUpdateSubCategory } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst SubCategoryList: React.FunctionComponent = () => {\r\n\r\n  const stateData = useSelector<AppState, ProductSubCategory[]>(state => state.subCategory.data || []);\r\n  const productColumns = [\r\n    {\r\n      name: 'SubCategoryId',\r\n      selector: 'subCategoryId',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Product Category',\r\n      selector: 'productCategoryName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Product CategoryID',\r\n      selector: 'productCategoryId',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Subcategory',\r\n      selector: 'code',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Subcategory Description',\r\n      selector: 'value',\r\n      sortable: true,\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.SUB_PRODUCT}\r\n      ExpandableComponent={ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Subcategory Value\"\r\n      expandableRows={true} />\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { code, value, subCategoryId, productCategoryId }: ProductSubCategory = data;\r\n  const subCategoryActionStatus = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n\r\n  const subCategoryQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      code,\r\n      value,\r\n      subCategoryId,\r\n      productCategoryId\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required'),\r\n      productCategoryId: Yup.number().required('Required')\r\n    }),\r\n    onSubmit: (value: ProductSubCategory) => {\r\n      dispatch(addUpdateSubCategory(value))\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={subCategoryQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Product Category</div>\r\n              <select className=\"uk-select\" id=\"productCategoryId\"\r\n                {...subCategoryQuickViewFormik.getFieldProps('productCategoryId')}>\r\n                <option key='1' value={1}>Lingerie</option>\r\n                <option key='2' value={2}>Footwear</option>\r\n                <option key='3' value={3}>Bindi</option>\r\n                <option key='4' value={4}>Handicraft</option>\r\n              </select>\r\n              {\r\n                subCategoryQuickViewFormik.touched.productCategoryId && subCategoryQuickViewFormik.errors.productCategoryId ? (\r\n                  <span className=\"uk-text-danger\">{subCategoryQuickViewFormik.errors.productCategoryId}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">SubCategory Name</div>\r\n              <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                {...subCategoryQuickViewFormik.getFieldProps('code')} />\r\n              {\r\n                subCategoryQuickViewFormik.touched.code && subCategoryQuickViewFormik.errors.code ? (\r\n                  <span className=\"uk-text-danger\">{subCategoryQuickViewFormik.errors.code}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">SubCategory Description</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...subCategoryQuickViewFormik.getFieldProps('value')} />\r\n              {\r\n                subCategoryQuickViewFormik.touched.value && subCategoryQuickViewFormik.errors.value ? (\r\n                  <span className=\"uk-text-danger\">{subCategoryQuickViewFormik.errors.value}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">SubCategory Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  subCategoryActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n          {subCategoryQuickViewFormik.isSubmitting && <NotificationContainer {...subCategoryActionStatus} />}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  SubCategoryList,\r\n  ExpandableComponent\r\n}","import React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, Coupon, saveCoupon } from 'reducers';\r\nimport { ProductCoupon as ProductCouponType } from 'types';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst ProductCoupon: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const couponFormik = useFormik({\r\n    initialValues: {\r\n      code: '',\r\n      value: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (values: ProductCouponType) => {\r\n      dispatch(saveCoupon(values));\r\n    }\r\n  });\r\n  const couponActionStatus = useSelector<AppState, Coupon>(state => state.coupon);\r\n  useEffect(() => {\r\n    if (couponActionStatus._isSuccess) {\r\n      couponFormik.resetForm();\r\n    }\r\n  }, [couponActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={couponFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Coupon</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Coupon Code</div>\r\n                      <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                        {...couponFormik.getFieldProps('code')} />\r\n                      {\r\n                        couponFormik.touched.code && couponFormik.errors.code ? (\r\n                          <span className=\"uk-text-danger\">{couponFormik.errors.code}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Discount Percentage</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...couponFormik.getFieldProps('value')} />\r\n                      {\r\n                        couponFormik.touched.value && couponFormik.errors.value ? (\r\n                          <span className=\"uk-text-danger\">{couponFormik.errors.value}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...couponActionStatus}/>\r\n          <button disabled={couponActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              couponActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductCoupon\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductCoupon } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateCoupon, Coupon } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst CouponList: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const deleteCoupon = (couponId:  number, code:string, value:string) => {\r\n    const input = window.confirm('Sure want to delete?');\r\n    if(input)dispatch(updateCoupon({couponId,value,code},true));\r\n  } \r\n  const stateData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);  \r\n  const productColumns = [\r\n    {\r\n      name: 'CouponId',\r\n      selector: 'couponId',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Coupon Code',\r\n      selector: 'code',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Coupon Value',\r\n      selector: 'value',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Delete',\r\n      sortable: false,\r\n      cell: (row: { couponId: number, code: string, value: string }) => {\r\n        return  <button type=\"submit\" className=\"uk-button-small uk-button-danger\" onClick={() => deleteCoupon(row.couponId, row.value, row.code)}>\r\n                   <span>Delete</span>\r\n                </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return(\r\n    <AdminProductList \r\n      productColumns={productColumns} \r\n      productType={SubProducts.COUPONS} \r\n      ExpandableComponent= {ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Coupon Code\"\r\n      expandableRows = {true}/>\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { code, value, couponId }: ProductCoupon = data;\r\n  const couponActionStatus = useSelector<AppState, Coupon>(state => state.coupon);\r\n\r\n  const couponQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      code,\r\n      value,\r\n      couponId\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (value: ProductCoupon) => {\r\n      dispatch(updateCoupon(value));\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={couponQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Coupon Code</div>\r\n              <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                {...couponQuickViewFormik.getFieldProps('code')} />\r\n              {\r\n                couponQuickViewFormik.touched.code && couponQuickViewFormik.errors.code ? (\r\n                  <span className=\"uk-text-danger\">{couponQuickViewFormik.errors.code}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Discount Percentage</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...couponQuickViewFormik.getFieldProps('value')} />\r\n              {\r\n                couponQuickViewFormik.touched.value && couponQuickViewFormik.errors.value ? (\r\n                  <span className=\"uk-text-danger\">{couponQuickViewFormik.errors.value}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Coupon Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  couponActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n        {couponQuickViewFormik.isSubmitting && <NotificationContainer {...couponActionStatus}/>}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  CouponList,\r\n  ExpandableComponent\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport {\r\n  AppState, SubCategory, getSubCategory, getSize, getColour, Size,\r\n  Colour, Product, addUpdateProduct, setDefaulState, getProduct\r\n} from 'reducers';\r\nimport { ProductSubCategory, ProductSize, ProductItem as ProductItemType, sizeColourQuantityComboObject } from 'types';\r\nimport { serverImagePath, SubCategories } from 'appConstants';\r\nimport { filterSubcategories } from 'services';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst ProductItem: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [sizeColourQuantity, setSizeColourQuantity] = useState<sizeColourQuantityComboObject[]>([]);\r\n  const [selectedSizes, setSelectedSizes] = useState<Array<string>>([]);\r\n  const [sizeColourQuantityErrorMessage, setSizeColourQuantityErrorMessage] = useState('')\r\n\r\n  const {\r\n    name, description, productCategoryId,\r\n    subCategory, quantity, productDetailId,\r\n    priceINR, priceUSD, productId, productCategoryName,\r\n    sizeId, colourId, imageNames, imagePaths, size, colour, sizeColourQuantityCombo\r\n  } = useSelector<AppState, ProductItemType>(state => state.product.singleData || {} as ProductItemType)\r\n\r\n  const checkForProductCategory = (subCategory: string) => {\r\n    const filteredKey = Object.keys(SubCategories).filter((key) => key === subCategory);\r\n    if (filteredKey[0]) {\r\n      return Number(SubCategories[filteredKey[0]])\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  const productItemFormik = useFormik({\r\n    initialValues: {\r\n      name: name || '',\r\n      description: description || '',\r\n      productCategoryId: productCategoryId || productCategoryName ? checkForProductCategory(productCategoryName || '') : 0,\r\n      subCategory: subCategory || 0,\r\n      size: sizeId ? sizeId.toString() : '0',\r\n      colour: colourId ? colourId.toString() : '',\r\n      quantity: quantity || '',\r\n      priceINR: priceINR ? priceINR.split(',')[0] : '',\r\n      priceUSD: priceUSD ? priceUSD.split(',')[0] : '',\r\n      productImageBlob: null,\r\n      productId: productId || '0',\r\n      deletedImagePath: [],\r\n      updatedImageName: [],\r\n      code: '',\r\n      value: '',\r\n      imagePaths: imagePaths || '',\r\n      imageNames: imageNames || '',\r\n      adminProductCombo: sizeId ? sizeId.split(',').length : 1,\r\n      deletedProductDetailIds: [],\r\n      productDetailIdArray: productDetailId ? productDetailId.split(',') : [],\r\n    },\r\n    validationSchema: Yup.object({\r\n      name: Yup.string().required('Required'),\r\n      description: Yup.string().required('Required'),\r\n      productCategoryId: Yup.number().required('Required').moreThan(0, 'Required'),\r\n      subCategory: Yup.number().required('Required').moreThan(0, 'Required'),\r\n      //size: Yup.string().required('Required').matches(/[^0]/, 'Required'),\r\n      //colour: Yup.string().required('Required'),\r\n      // quantity: Yup.string().required('Required'),\r\n      priceINR: Yup.string().required('Required'),\r\n      priceUSD: Yup.string().required('Required'),\r\n      // productImageBlob: Yup.mixed().required('Required'),\r\n    }),\r\n    onSubmit: (values: ProductItemType) => {\r\n      if(sizeColourQuantity.length === 0  || sizeColourQuantity.some((item) => Object.keys(item).length < 3)){\r\n        setSizeColourQuantityErrorMessage('Please enter data for all the row(s)');\r\n        setTimeout(()=>{\r\n          setSizeColourQuantityErrorMessage('');\r\n        },3000);\r\n      }else {\r\n        dispatch(addUpdateProduct(values, 0, sizeColourQuantity));\r\n      }\r\n    },\r\n    enableReinitialize: true\r\n  });\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const productSize = useSelector<AppState, Size>(state => state.size);\r\n  const productColour = useSelector<AppState, Colour>(state => state.colour);\r\n  const productActionStatus = useSelector<AppState, Product>(state => state.product);\r\n  useEffect(() => {\r\n    dispatch(getSubCategory());\r\n    dispatch(getSize());\r\n    dispatch(getColour());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (productActionStatus._isSuccess) {\r\n      setTimeout(()=>{\r\n        dispatch(setDefaulState());\r\n      productItemFormik.resetForm();\r\n      setSizeColourQuantity([]);\r\n      history.push(\"/admin\");\r\n      },2000)\r\n    }\r\n  }, [productActionStatus._isSuccess]);\r\n\r\n  useEffect(() => {\r\n    if(sizeId && colourId && quantity && sizeId.length > 0){\r\n      const sizeArray = sizeId.split(',');\r\n      const colourArray = colourId.split(',');\r\n      const quantityArray = quantity.split(',');\r\n\r\n      const editSizeColourQuantityCombo : sizeColourQuantityComboObject[] = sizeArray.map((sizeItem, index) => {\r\n        return {\r\n          size: sizeItem,\r\n          colour: colourArray[index],\r\n          quantity: quantityArray[index]\r\n        }\r\n      });\r\n\r\n      setSizeColourQuantity(editSizeColourQuantityCombo);\r\n      setSelectedSizes(sizeArray);\r\n    }\r\n  },[sizeId, colourId, quantity])\r\n\r\n  const filteredSubcategories: ProductSubCategory[] = filterSubcategories(subCategories, productItemFormik.values.productCategoryId);\r\n\r\n  const filteredProductSize: ProductSize[] = (productSize.data &&\r\n    productSize.data.filter((size) => {\r\n      return size.productCategory === Number(productItemFormik.values.productCategoryId)\r\n    })) || [];\r\n\r\n  const checkForMaxFileUpload = (files: FileList | null) => {\r\n    let currentNumberOfFile = 0;\r\n    if (productItemFormik.values.productId !== '0' && productItemFormik.values.imagePaths) {\r\n      currentNumberOfFile += productItemFormik.values.imagePaths.split(', ').length;\r\n    }\r\n    if (files && Array.from(productItemFormik.values.productImageBlob || []).length + currentNumberOfFile !== 5) {\r\n      const currentFiles = Array.from(productItemFormik.values.productImageBlob || []);\r\n      let filesArray = Array.from(files);\r\n      filesArray.splice(5 - (currentFiles.length + currentNumberOfFile), filesArray.length - 1);\r\n      productItemFormik.setFieldValue(\"productImageBlob\", [...currentFiles, ...filesArray]);\r\n    }\r\n  };\r\n\r\n  const removeImage = (name: string) => {\r\n    const productImageBlob = Array.from(productItemFormik.values.productImageBlob || []);\r\n    productItemFormik.setFieldValue(\"productImageBlob\",\r\n      productImageBlob.filter((img: File) => {\r\n        return img.name != name\r\n      })\r\n    )\r\n  };\r\n\r\n  const removeCurrentImage = (name: string, path: string) => {\r\n    if (productItemFormik.values.deletedImagePath && productItemFormik.values.imagePaths && productItemFormik.values.imageNames) {\r\n      productItemFormik.setFieldValue(\"deletedImagePath\", [...productItemFormik.values.deletedImagePath, path]);\r\n      productItemFormik.setFieldValue(\"imagePaths\",\r\n        productItemFormik.values.imagePaths.split(',').filter((imagePath) => imagePath != path).join(',')\r\n      );\r\n      productItemFormik.setFieldValue(\"imageNames\",\r\n        productItemFormik.values.imageNames.split(',').filter((imageName) => imageName != name).join(',')\r\n      )\r\n    }\r\n  };\r\n\r\n  const getFileNameAndPath = (fileName?: string, filePath?: string) => {\r\n    if (fileName && filePath && fileName.length > 0 && filePath.length > 0) {\r\n      const fileNames = fileName.split(',');\r\n      const filePaths = filePath.split(',');\r\n\r\n      return filePaths.map((path: string, index: number) => {\r\n        return <div key={index} className=\"uk-inline product-uploader-container\">\r\n          <img key={index} src={serverImagePath + path} alt={fileNames[index]} />\r\n          <div className=\"uk-overlay-primary uk-position-cover\">\r\n            <div className=\"uk-position-center\">\r\n              <span uk-icon=\"icon: close\" onClick={() => removeCurrentImage(fileNames[index], path)} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      })\r\n    }\r\n  }\r\n\r\n  const addProductComboLength = () => {\r\n    const availableSizes = filteredProductSize.filter(({sizeId}) => selectedSizes.indexOf(sizeId?.toString() || '') === -1);\r\n    if(availableSizes.length > 0 && productItemFormik.values.adminProductCombo){\r\n      productItemFormik.setFieldValue('adminProductCombo', \r\n      productItemFormik.values.adminProductCombo + 1)\r\n    } else if(availableSizes.length === 0){\r\n      setSizeColourQuantityErrorMessage('No more sizes available');\r\n      setTimeout(()=>{\r\n        setSizeColourQuantityErrorMessage('');\r\n      },3000);\r\n    }\r\n  }\r\n\r\n  const reduceProductComboLength = (index: number) => {\r\n    if(productItemFormik.values.deletedProductDetailIds && productItemFormik.values.productDetailIdArray){\r\n      productItemFormik.setFieldValue('deletedProductDetailIds', \r\n      [...productItemFormik.values.deletedProductDetailIds,productItemFormik.values.productDetailIdArray[index]])\r\n    }\r\n    selectedSizes.splice(index,1);\r\n    sizeColourQuantity.splice(index,1);\r\n    const newPDArray = [...productItemFormik.values.productDetailIdArray];\r\n    newPDArray.splice(index,1)\r\n    productItemFormik.setFieldValue('productDetailIdArray', [...newPDArray]);\r\n    setSelectedSizes([...selectedSizes]);\r\n    setSizeColourQuantity([...sizeColourQuantity]);\r\n    if(productItemFormik.values.adminProductCombo && productItemFormik.values.adminProductCombo > 1) {\r\n      productItemFormik.setFieldValue('adminProductCombo', \r\n      productItemFormik.values.adminProductCombo - 1)\r\n    }\r\n  }\r\n\r\n  const updatedSizeColourQuantityArray = (index: number, field: string, value: string) => {\r\n    // let currentItem = productItemFormik.values.sizeColourQuantityCombo || [];\r\n    let currentItem  = [...sizeColourQuantity] as sizeColourQuantityComboObject[];\r\n    if(!currentItem[index]){\r\n      currentItem[index] = {} as sizeColourQuantityComboObject\r\n    }\r\n        if(field === 'size') {\r\n          if(currentItem[index].size){\r\n            selectedSizes.splice(selectedSizes.indexOf(value), 1);\r\n          }\r\n            currentItem[index].size = value;\r\n            setSelectedSizes([...selectedSizes, value]);\r\n        } else if (field === 'colour') {\r\n          currentItem[index].colour = value;\r\n          // currentItem.forEach((item) => item.colour = value);\r\n        } else if (field === 'quantity') {\r\n          currentItem[index].quantity = value;\r\n        }\r\n\r\n        if(currentItem.length> 1){\r\n          if(field === 'colour'){\r\n            currentItem.forEach((item) => item.colour = value);\r\n          } else {\r\n            currentItem.forEach((item) => item.colour = currentItem[0].colour);\r\n          }\r\n        }\r\n\r\n        if(productItemFormik.values.productDetailIdArray[index]){\r\n          currentItem[index].productDetailId  = productItemFormik.values.productDetailIdArray[index];\r\n        } else {\r\n          currentItem[index].productDetailId = '0'\r\n        }\r\n      setSizeColourQuantity(currentItem);\r\n  }\r\n\r\n// console.log(sizeColourQuantity)\r\n  // if(Object.keys(sizeColourQuantity).length > 0){console.log(sizeColourQuantity)}\r\n  return (\r\n    <form onSubmit={productItemFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Product</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Name</div>\r\n                      <input className=\"uk-input \" id=\"name\" type=\"input\"\r\n                        {...productItemFormik.getFieldProps('name')} />\r\n                      {\r\n                        productItemFormik.touched.name && productItemFormik.errors.name ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.name}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Description</div>\r\n                      <textarea className=\"uk-textarea\" id=\"description\" cols={30}\r\n                        {...productItemFormik.getFieldProps('description')} />\r\n                      {\r\n                        productItemFormik.touched.description && productItemFormik.errors.description ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.description}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Product Category</div>\r\n                      <select className=\"uk-select\" id=\"productCategoryId\"\r\n                        onChange={(e) => { productItemFormik.handleChange(e); productItemFormik.setFieldValue('subCategory', 0); setSizeColourQuantity([]); setSelectedSizes([]); productItemFormik.setFieldValue('adminProductCombo',1)}}\r\n                        onBlur={productItemFormik.handleBlur}\r\n                        value={productItemFormik.values.productCategoryId}\r\n                      >\r\n                        {/* {...productItemFormik.getFieldProps('productCategoryId')} */}\r\n                        <option key='0' value={0}>Select</option>\r\n                        <option key='1' value={1}>Lingerie</option>\r\n                        <option key='2' value={2}>Footwear</option>\r\n                        <option key='3' value={3}>Bindi</option>\r\n                        <option key='4' value={4}>Handicraft</option>\r\n                      </select>\r\n                      {\r\n                        productItemFormik.touched.productCategoryId && productItemFormik.errors.productCategoryId ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.productCategoryId}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">SubCategory</div>\r\n                      <select className=\"uk-select\" id=\"subCategory\"\r\n                        onChange={(e) => { productItemFormik.handleChange(e)}} // productItemFormik.setFieldValue('size', 0) \r\n                        onBlur={productItemFormik.handleBlur}\r\n                        value={productItemFormik.values.subCategory}>\r\n                        <option key='0' value={0}>Select</option>\r\n                        {\r\n                          filteredSubcategories.map((subCategory, index) => {\r\n                            return <option key={index} value={subCategory.subCategoryId}>{subCategory.code}</option>\r\n                          })\r\n                        }\r\n                      </select>\r\n                      {\r\n                        productItemFormik.touched.subCategory && productItemFormik.errors.subCategory ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.subCategory}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-placeholder uk-text-center\">\r\n                  {\r\n                    Array(productItemFormik.values.adminProductCombo).fill(1).map((value, index) => {\r\n                      return (\r\n                        <div key={index} className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\">Size</div>\r\n                              <select className=\"uk-select\" id=\"size\"  \r\n                              value = {sizeColourQuantity[index] ? sizeColourQuantity[index].size : 0}\r\n                              onChange={(e) => {updatedSizeColourQuantityArray(index, 'size', e.currentTarget.value)}}>\r\n                                {/* {...productItemFormik.getFieldProps('size')}> */}\r\n                                <option key='0' value={0}>Select</option>\r\n                                {\r\n                                  filteredProductSize.filter((size) => {\r\n                                    return size.sizeId && index === selectedSizes.indexOf(size.sizeId.toString()) ? true : size.sizeId && selectedSizes.indexOf(size.sizeId.toString()) === -1\r\n                                           \r\n                                  })\r\n                                    .map((size, index) => {\r\n                                    return <option key={index} value={size.sizeId} >{size.value}</option>\r\n                                  })\r\n                                }\r\n                              </select>\r\n                              {/* {\r\n                                productItemFormik.touched.size && productItemFormik.errors.size ? (\r\n                                  <span className=\"uk-text-danger\">{productItemFormik.errors.size}</span>\r\n                                ) : ''\r\n                              } */}\r\n                            </label>\r\n                          </div>\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\">Colour</div>\r\n                              <select className=\"uk-select\" id=\"colour\" \r\n                              value={sizeColourQuantity && sizeColourQuantity[0] && sizeColourQuantity[0].colour || '0'}\r\n                              onChange={(e) => {updatedSizeColourQuantityArray(index, 'colour', e.currentTarget.value)}}>\r\n                                {/* {...productItemFormik.getFieldProps('colour')}> */}\r\n                                <option key='0' value={0}>Select</option>\r\n                                {\r\n                                  Array.isArray(productColour.data) &&\r\n                                  productColour.data.map((colour, index) => {\r\n                                    return <option key={index} value={colour.colourId}>{colour.value}</option>\r\n                                  })\r\n                                }\r\n                              </select>\r\n                            </label>\r\n                          </div>\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\">Quantity</div>\r\n                              <input className=\"uk-input \" id=\"quantity\" type=\"number\"\r\n                              value ={sizeColourQuantity[index] ? sizeColourQuantity[index].quantity : ''}\r\n                              onChange={(e) => {updatedSizeColourQuantityArray(index, 'quantity', e.currentTarget.value)}}/>\r\n                                {/* {...productItemFormik.getFieldProps('quantity')} /> */}\r\n                              {/* {\r\n                                productItemFormik.touched.quantity && productItemFormik.errors.quantity ? (\r\n                                  <span className=\"uk-text-danger\">{productItemFormik.errors.quantity}</span>\r\n                                ) : ''\r\n                              } */}\r\n                            </label>\r\n                          </div>\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\"></div>\r\n                              <button disabled={productItemFormik.values.adminProductCombo === 1} className=\"uk-button uk-button-danger admin-add-more-combo\" onClick={() => reduceProductComboLength(index)}>Delete</button>\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    })\r\n                  }\r\n                  <div className=\"uk-nav-center admin-add-more-combo\">\r\n                  <span className=\"uk-text-danger \">{sizeColourQuantityErrorMessage}</span>\r\n                  </div>\r\n                  \r\n                  <button className=\"uk-button uk-button-primary\" disabled={sizeColourQuantity.length === 0 || sizeColourQuantity.length !== productItemFormik.values.adminProductCombo  } onClick={(e) => {e.preventDefault(); addProductComboLength()}}>Add More</button>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Price INR</div>\r\n                      <input className=\"uk-input \" id=\"priceINR\" type=\"input\"\r\n                        {...productItemFormik.getFieldProps('priceINR')} />\r\n                      {\r\n                        productItemFormik.touched.priceINR && productItemFormik.errors.priceINR ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.priceINR}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Price USD</div>\r\n                      <input className=\"uk-input \" id=\"priceUSD\" type=\"input\"\r\n                        {...productItemFormik.getFieldProps('priceUSD')} />\r\n                      {\r\n                        productItemFormik.touched.priceUSD && productItemFormik.errors.priceUSD ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.priceUSD}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                  <label id=\"product-upload\" htmlFor=\"productImageBlob\" className=\"uk-placeholder uk-text-center\">\r\n                    <span className=\"upload-icon-margin\" uk-icon=\"icon: cloud-upload; ratio: 1.25;\" />\r\n                     Click this banner to upload the images <input id=\"productImageBlob\" type=\"file\" multiple={true}\r\n                      onChange={(event) => { checkForMaxFileUpload(event.currentTarget.files) }} />\r\n                    {\r\n                      productItemFormik.touched.productImageBlob && productItemFormik.errors.productImageBlob ? (\r\n                        <span className=\"uk-text-danger\">{productItemFormik.errors.productImageBlob}</span>\r\n                      ) : ''\r\n                    }\r\n                  </label>\r\n                </div>\r\n              </fieldset>\r\n              {\r\n                 productItemFormik.values.productId !== '0' &&\r\n                 <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-form-label\">Current Images</div>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-5@s\" uk-grid=\"true\">\r\n\r\n                  {\r\n                    getFileNameAndPath(productItemFormik.values.imageNames, productItemFormik.values.imagePaths)\r\n                  }\r\n                  {/* {\r\n                      productItemFormik.values.imagePaths &&\r\n                      productItemFormik.values.imagePaths.split(',').map((path, i) => {\r\n                      return <div className=\"uk-inline product-uploader-container\">\r\n                      <img key={i} src={apiServerHost+path} alt={file.name} />\r\n                      <div className=\"uk-overlay-primary uk-position-cover\">\r\n                        <div className=\"uk-position-center\">\r\n                          <span uk-icon=\"icon: close\" onClick={() => removeImage(file.name)}/>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                     })\r\n                    [].map.call(productItemFormik.values.imagePaths, (file: any, i) => {\r\n                      return <div className=\"uk-inline product-uploader-container\">\r\n                        <img key={i} src={URL.createObjectURL(file)} alt={file.name} />\r\n                        <div className=\"uk-overlay-primary uk-position-cover\">\r\n                          <div className=\"uk-position-center\">\r\n                            <span uk-icon=\"icon: close\" onClick={() => removeImage(file.name)}/>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    }) */}\r\n\r\n                  {/* <img src={'http://127.0.0.1:5000/images/1c508610-eee5-4360-8f76-f0e70fa5ca92.png'} alt={\"a\"} /> */}\r\n                </div>\r\n              </fieldset>\r\n              }\r\n              \r\n              {\r\n                <fieldset className=\"uk-fieldset\">\r\n                  <div className=\"uk-form-label\">New Images</div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-5@s\" uk-grid=\"true\">\r\n                    {/* <div> */}\r\n                    {/* <label> */}\r\n                    {productItemFormik.values.productImageBlob &&\r\n                      [].map.call(productItemFormik.values.productImageBlob, (file: any, i) => {\r\n                        return <div className=\"uk-inline product-uploader-container\">\r\n                          <img key={i} src={URL.createObjectURL(file)} alt={file.name} />\r\n                          <div className=\"uk-overlay-primary uk-position-cover\">\r\n                            <div className=\"uk-position-center\">\r\n                              <span uk-icon=\"icon: close\" onClick={() => removeImage(file.name)} />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      })\r\n                    }\r\n                    {/* <img src={'http://127.0.0.1:5000/images/1c508610-eee5-4360-8f76-f0e70fa5ca92.png'} alt={\"a\"} /> */}\r\n                    {/* </label> */}\r\n                    {/* </div> */}\r\n                  </div>\r\n                </fieldset>\r\n              }\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...productActionStatus} />\r\n          <button disabled={productActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              productActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductItem\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductItem } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AppState, addUpdateProduct, Coupon, updateProductHighLight, Product, errorProduct, setDefaulState } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport { countHighlightProducts } from 'services';\r\n\r\ninterface Props {\r\n  addEditToggle: Function;\r\n}\r\n\r\nconst ProductList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const deleteProduct = (productId: string) => {\r\n    const input = window.confirm('Sure want to delete?');\r\n    const name = '', code = '', priceINR = '0', priceUSD = '0', value = '', subCategory = 1, deletedImagePath = [''], productDetailIdArray = [''], deletedProductDetailIds = ['']\r\n    if (input) dispatch(addUpdateProduct({ productId, name, code, priceUSD, priceINR, value, deletedImagePath, subCategory, productDetailIdArray, deletedProductDetailIds }, 1, []));\r\n  }\r\n  const stateData = useSelector<AppState, ProductItem[]>(state => state.product.data || []);\r\n  const productColumns = [\r\n    // {\r\n    //   name: 'ProductId',\r\n    //   selector: 'productId',\r\n    //   sortable: false,\r\n    // },<span className=\"uk-label uk-label-warning uk-margin-xsmall-right\">top selling</span>\r\n    {\r\n      name: 'Category',\r\n      selector: 'productCategoryName',\r\n      sortable: true,\r\n      cell: (row: { trending: boolean, latest: boolean, productCategoryName: string}) => {\r\n        return (\r\n          row.trending ? <>\r\n            <span style={{color:\"green\"}} uk-icon=\"icon: bolt;\"/>\r\n            <span style={{marginLeft:\"5px\"}}>\r\n              {row.productCategoryName}\r\n            </span>\r\n          </> :\r\n          row.latest ? <>\r\n            <span style={{color:\"orange\"}} uk-icon=\"icon: star;\"/>\r\n            <span style={{marginLeft:\"5px\"}}>\r\n              {row.productCategoryName}\r\n            </span>\r\n          </> :\r\n          <span  style={{marginLeft:\"25px\"}}>\r\n          {row.productCategoryName}\r\n        </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      name: 'Product Name',\r\n      selector: 'name',\r\n      sortable: true,\r\n    },\r\n    // {\r\n    //   name: 'Price INR',\r\n    //   selector: 'priceInr',\r\n    //   sortable: true,\r\n    // },\r\n    // {\r\n    //   name: 'Price USD',\r\n    //   selector: 'priceUsd',\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      name: 'Quantity',\r\n      selector: 'quantity',\r\n      sortable: true,\r\n    },\r\n    // {\r\n    //   name: 'Colour',\r\n    //   selector: 'colour',\r\n    //   sortable: true,\r\n    // },\r\n    // {\r\n    //   name: 'Size',\r\n    //   selector: 'size',\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      name: 'Delete',\r\n      sortable: false,\r\n      cell: (row: { productId: number, name: string, code: string, priceUSD: string, priceINR: string, value: string }) => {\r\n        return <button type=\"submit\" className=\"uk-button-small uk-button-danger\" onClick={() => deleteProduct(row.productId.toString())}>\r\n          <span>Delete</span>\r\n        </button>\r\n      }\r\n    },\r\n    {\r\n      name: 'Edit',\r\n      sortable: false,\r\n      cell: (row: { productId: number, code: string, value: string }) => {\r\n        return <button type=\"submit\" className=\"uk-button-small uk-button-danger\" onClick={() => { props.addEditToggle(true); history.push(\"/admin/product/\" + row.productId) }}>\r\n          <span>Edit</span>\r\n        </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.PRODUCT}\r\n      ExpandableComponent={ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Product Name\"\r\n      expandableRows={true} />\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { trending, latest, productId }: ProductItem = data;\r\n  const productActionStatus = useSelector<AppState, Product>(state => state.product);\r\n\r\n  const productQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      productId,\r\n      highlight: trending ? '1' : latest ? '2' : ''\r\n    } as ProductItem,\r\n    onSubmit: (value: ProductItem) => {\r\n      if(value.highlight === '1' && countHighlightProducts(productActionStatus.data||[],true) === 12){\r\n        dispatch(errorProduct('Max trending product count of 12 reached.'));\r\n        setTimeout(() => {\r\n          productQuickViewFormik.setSubmitting(false)\r\n        },2000);\r\n      } else if(value.highlight === '2' && countHighlightProducts(productActionStatus.data||[],false) === 12){\r\n        dispatch(errorProduct('Max latest product count of 12 reached.'));\r\n        setTimeout(() => {\r\n          productQuickViewFormik.setSubmitting(false)\r\n        },2000);\r\n      } else {\r\n        dispatch(updateProductHighLight(value.highlight || '',value.productId))\r\n      }\r\n      // dispatch(updateCoupon(value));\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={productQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Product Highlight</div>\r\n              <select className=\"uk-select\" id=\"highlight\"\r\n                {...productQuickViewFormik.getFieldProps('highlight')}>\r\n                <option key='1' value=\"\">None</option>\r\n                <option key='2' value=\"1\">Trending</option>\r\n                <option key='3' value=\"2\">Latest</option>\r\n              </select>\r\n              {\r\n                productQuickViewFormik.touched.highlight && productQuickViewFormik.errors.highlight ? (\r\n                  <span className=\"uk-text-danger\">{productQuickViewFormik.errors.highlight}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Product Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  productActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }<span> {console.log(productQuickViewFormik.isSubmitting)}</span>\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n          {productQuickViewFormik.isSubmitting && <NotificationContainer {...productActionStatus} />}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductList\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppState, Coupon, updateCoupon } from 'reducers';\r\nimport { CustomerOrders, singleOrder } from 'reducers/Order';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductCoupon, Order, OrderItems } from 'types';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport { getIconForAdminOrder } from 'services';\r\n\r\ninterface Props{\r\n  addEditToggle: Function;\r\n}\r\n\r\nconst OrderList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  // const deleteCoupon = (couponId: number, code: string, value: string) => {\r\n  //   const input = window.confirm('Sure want to delete?');\r\n  //   if (input) dispatch(updateCoupon({ couponId, value, code }, true));\r\n  // }\r\n  const stateData = useSelector<AppState, Order[]>(state => state.customerOrders.data || []);\r\n  const productColumns = [\r\n    {\r\n      name: 'Order Number',\r\n      sortable: true,\r\n      wrap: true,\r\n      cell: (row: { orderItems: OrderItems[], orderNumber: string}) => {\r\n        const icon = getIconForAdminOrder(row.orderItems);\r\n        return (\r\n          icon !== '' ?\r\n          <>\r\n            {icon === 'lifesaver' ?  <span style={{ color: \"green\" }} uk-icon=\"icon: lifesaver;\" /> \r\n            : icon === 'plus-circle' ? <span style={{ color: \"green\" }} uk-icon=\"icon: plus-circle;\" /> \r\n            : icon === 'check' ? <span style={{ color: \"green\" }} uk-icon=\"icon: check;\" />\r\n            : icon === 'cart' ? <span style={{ color: \"green\" }} uk-icon=\"icon: cart;\" /> \r\n            : icon === 'history' ? <span style={{ color: \"orange\" }} uk-icon=\"icon: history;\" />\r\n            : icon === 'minus-circle' ? <span style={{ color: \"red\" }} uk-icon=\"icon: minus-circle;\" />\r\n            : icon === 'warning' ? <span style={{ color: \"red\" }} uk-icon=\"icon: warning;\" />\r\n            : ''\r\n          }\r\n            <span style={{marginLeft:\"5px\", whiteSpace:\"nowrap\"}}>\r\n              {row.orderNumber}\r\n            </span>\r\n          </> :\r\n          <span  style={{marginLeft:\"25px\"}}>\r\n          {row.orderNumber}\r\n        </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      name: 'Order Date',\r\n      selector: 'paymentDate',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Total Price-Mode',\r\n      sortable: false,\r\n      cell: (row: { totalPrice: string, paymentMode: string}) => {\r\n      return  <span>{row.paymentMode === 'PAYPAL'? '$' : '₹'} {row.totalPrice} ({row.paymentMode})</span>\r\n      }\r\n    },\r\n    {\r\n      name: 'View Details',\r\n      sortable: false,\r\n      cell: (row: Order) => {\r\n        return <button type=\"submit\" className=\"uk-button-small uk-button-primary\" onClick={() => {dispatch(singleOrder(row)) ;props.addEditToggle(true)}}>\r\n          <span>View</span>\r\n        </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.ORDERS}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Order Number\"\r\n      expandableRows={false}\r\n      sortByColumn=\"paymentDate\" \r\n      defaultSortAsc={false}/>\r\n  )\r\n}\r\nexport {\r\n  OrderList\r\n}","import React, { useEffect, useState, Fragment } from 'react';\r\nimport { Order, OrderUpdateAdmin } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, getShippers, Shipper, Shipment, updateOrderAdmin } from 'reducers';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport { getPaypalTransactionId } from 'services';\r\n\r\n\r\nconst OrderDetails: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  // const [productItemCount, setProductItemCount] = useState(0);\r\n  const [adminShipmentData, setAdminShipmentData] = useState<OrderUpdateAdmin[]>([]);\r\n  const [orginalTrackingLink, setOrginalTrackingLink] = useState<string[]>([]);\r\n  const stateData = useSelector<AppState, Order>(state => state.customerOrders.singleData || {} as Order);\r\n  const shippers = useSelector<AppState, Shipper>(state => state.shipper || {} as Shipper);\r\n  const shipmentStatus = useSelector<AppState, Shipment>(state => state.shipment);\r\n  useEffect(() => {\r\n    if (stateData && stateData.orderItems) {\r\n      let tempShipmentData: OrderUpdateAdmin[] = [];\r\n      let tempTrackingLink: string[] = [];\r\n      stateData.orderItems.forEach(orderItems => {\r\n        tempShipmentData.push(\r\n          {\r\n            orderDetailId: orderItems.orderDetailId,\r\n            deliveryDate: orderItems.shipmentDetails?.deliveryDate,\r\n            paymentReturned: orderItems.shipmentDetails?.paymentReturned,\r\n            returnStatus: orderItems.shipmentDetails?.returnStatus,\r\n            shipmentId: orderItems.shipmentDetails?.shipmentId || '0',\r\n            shipper: orderItems.shipmentDetails?.shipper,\r\n            shippingDate: orderItems.shipmentDetails?.shippingDate,\r\n            trackingNumber: orderItems.shipmentDetails?.trackingNumber\r\n          } as OrderUpdateAdmin);\r\n        tempTrackingLink.push(orderItems.shipmentDetails?.trackingNumber || '')\r\n      });\r\n      setAdminShipmentData(tempShipmentData);\r\n      setOrginalTrackingLink(tempTrackingLink);\r\n    }\r\n  }, [stateData]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getShippers());\r\n  }, [])\r\n\r\n  const updateShipmentData = (index: number, key: string, value: string) => {\r\n    let shipmentDataCopy = [...adminShipmentData];\r\n    const shipmentDataToUpdate = shipmentDataCopy.splice(index, 1);\r\n    const updatedShipmentData = { ...shipmentDataToUpdate[0], [key]: value };\r\n    shipmentDataCopy.splice(index, 0, updatedShipmentData)\r\n    setAdminShipmentData(shipmentDataCopy);\r\n  };\r\n\r\n  const updateOrderStatus = (index: number) => {\r\n    const isTrackingChanged = adminShipmentData[index].trackingNumber !== orginalTrackingLink[index];\r\n    if(isTrackingChanged){\r\n      let orginalTrackingLinkCopy = [...orginalTrackingLink];\r\n      orginalTrackingLinkCopy[index] = adminShipmentData[index].trackingNumber || '';\r\n      setOrginalTrackingLink(orginalTrackingLinkCopy);\r\n    }\r\n    dispatch(updateOrderAdmin(\r\n      {...adminShipmentData[index], \r\n        orderNumber: stateData.orderNumber,\r\n        customerEmail: stateData.userDetails?.emailAddress,\r\n        customerName: stateData.userDetails?.firstName\r\n      }, isTrackingChanged))\r\n  }\r\n  return (\r\n    <form className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <header className=\"uk-card-header\"><h1 className=\"uk-h2\">Order Summay</h1></header>\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">#Order Details</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Order Number</div>\r\n                      <span className=\"uk-text-small\">{stateData.orderNumber}</span>\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Order Date</div>\r\n                      <span className=\"uk-text-small\">{stateData.paymentDate}</span>\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Order Cost</div>\r\n                      <span className=\"uk-text-small\">{stateData.paymentMode && stateData.paymentMode.toLowerCase() === 'paypal' ? '$' : '₹'}{stateData.totalPrice}</span>\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Payment Mode</div>\r\n                      <span className=\"uk-text-small\">{stateData.paymentMode}</span>\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Payment Transaction Id</div>\r\n                      <span className=\"uk-text-small\">{stateData.paymentMode && stateData.paymentMode.toLowerCase() === 'paypal' ? getPaypalTransactionId(stateData.paypalResponse) : stateData.razorpayPaymentId}</span>\r\n                    </label>\r\n                  </div>\r\n                  {\r\n                    stateData.paymentMode && stateData.paymentMode.toLowerCase() === 'paypal' &&\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Shippment Type</div>\r\n                        <span className=\"uk-text-small\">{stateData.standardShipping === false ? 'Express' : 'Standard'}</span>\r\n                      </label>\r\n                    </div>\r\n                  }\r\n\r\n                </div>\r\n                <div className=\"uk-divider-icon\"></div>\r\n              </fieldset>\r\n              {\r\n                stateData.userDetails &&\r\n                <fieldset className=\"uk-fieldset\">\r\n                  <legend className=\"uk-h4\">#User Details</legend>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Name</div>\r\n                        <span className=\"uk-text-small\">\r\n                          {stateData.userDetails.firstName + ' ' + stateData.userDetails.lastName}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Mobile</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.mobile}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Email</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.emailAddress}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Discount</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.discount || 0}%</span>\r\n                      </label>\r\n                    </div>\r\n                    {/* <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Gender</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.gender}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Date of birth</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.dob}</span>\r\n                      </label>\r\n                    </div> */}\r\n                  </div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Country</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.country}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">State</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.state}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">City</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.city}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Pincode</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.pincode}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Address</div>\r\n                        <span className=\"uk-text-small\">\r\n                          {\r\n                            stateData.userDetails.addressLineOne\r\n                            + ' ' +\r\n                            stateData.userDetails.addressLineTwo\r\n                            + ' ' +\r\n                            stateData.userDetails.addressLineThree\r\n                          }\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-divider-icon\"></div>\r\n                </fieldset>\r\n              }\r\n              {\r\n                stateData.orderItems && stateData.orderItems.length > 0 &&\r\n                <fieldset className=\"uk-fieldset\">\r\n                  <legend className=\"uk-h4\">#Order Items</legend>\r\n                  {\r\n                    stateData.orderItems.map((product, index) => {\r\n                      return (\r\n                        <Fragment key={index}>\r\n                          <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Product Image</div>\r\n                                <div className=\"tm-ratio tm-ratio-16-9\">\r\n                                  <a className=\"tm-media-box\" onClick={() => history.push('/productDetails/' + product.productId)}>\r\n                                    <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + product.productImage} alt={product.productImage} /></figure>\r\n                                  </a>\r\n                                </div>\r\n                                {/* <img src={serverImagePath + product.productImage} alt={product.productImage} /> */}\r\n                              </label>\r\n                            </div>\r\n\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Name</div>\r\n                                <span className=\"uk-text-small\">{product.productName}</span>\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Quantity</div>\r\n                                <span className=\"uk-text-small\">{product.quantity}</span>\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Price</div>\r\n                                <span className=\"uk-text-small\">{product.currency.toString() !== '1' ? '$' : '₹'}{product.productPrice}</span>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div uk-grid=\"true\" className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" >\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Shipper</div>\r\n                                <select className=\"uk-select shipper-max-width\" name=\"shipper\" id=\"shipper\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].shipper || '0'}\r\n                                  onChange={(e) => updateShipmentData(index, 'shipper', e.currentTarget.value)}\r\n                                >\r\n                                  <option key='0' value={0}>Select</option>\r\n                                  {\r\n                                    shippers.data?.map((shipper, index) => {\r\n                                      return <option key={index} value={shipper.shipperId}>{shipper.shipperName}</option>\r\n                                    })\r\n                                  }\r\n                                </select>\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Tracking Number</div>\r\n                                <input className=\"uk-input shipper-max-width\" id=\"trackingNumber\" type=\"text\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].trackingNumber || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'trackingNumber', e.currentTarget.value)}\r\n                                />\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Shipping Date</div>\r\n                                <input className=\"uk-input shipper-max-width\" id=\"shippingDate\" type=\"date\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].shippingDate || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'shippingDate', e.currentTarget.value)} />\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Delivery Date</div>\r\n                                <input className=\"uk-input shipper-max-width\" id=\"deliveryDate\" type=\"date\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].deliveryDate || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'deliveryDate', e.currentTarget.value)}\r\n                                />\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div uk-grid=\"true\" className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" >\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Return Status</div>\r\n                                <select className=\"uk-select shipper-max-width\" name=\"returnStatus\" id=\"returnStatus\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].returnStatus || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'returnStatus', e.currentTarget.value)}\r\n                                >\r\n                                  <option key='0' value={0}>Select</option>\r\n                                  <option key='1' value='In Progress'>In Progress</option>\r\n                                  <option key='2' value='Accepted'>Accepted</option>\r\n                                  <option key='3' value='Declined'>Declined</option>\r\n                                </select>\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Payment Returned</div>\r\n                                <select className=\"uk-select shipper-max-width\" name=\"paymentReturned\" id=\"paymentReturned\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].paymentReturned || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'paymentReturned', e.currentTarget.value)}\r\n                                >\r\n                                  <option key='0' value={0}>Select</option>\r\n                                  <option key='1' value='No'>No</option>\r\n                                  <option key='2' value='Yes'>Yes</option>\r\n                                </select>\r\n                              </label>\r\n                            </div>\r\n                            {/* <div>\r\n                            </div> */}\r\n\r\n                          </div>\r\n                          <div uk-grid=\"true\" className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" >\r\n                            <div className=\"uk-nav-center\">\r\n                              {\r\n                                shipmentStatus.data?.orderDetailId?.toString() === product.orderDetailId.toString() &&\r\n                                <NotificationContainer {...shipmentStatus} />\r\n                              }\r\n                              <label>\r\n                                {/* <div className=\"uk-form-label\">Save Details</div> */}\r\n                                <button className=\"uk-button uk-button-primary \"\r\n                                  disabled={shipmentStatus.data?.orderDetailId?.toString() === product.orderDetailId.toString() && shipmentStatus._isLoading}\r\n                                  onClick={(e) => { updateOrderStatus(index); e.preventDefault() }}>\r\n                                  {\r\n                                    shipmentStatus.data?.orderDetailId?.toString() === product.orderDetailId.toString() &&\r\n                                    shipmentStatus._isLoading &&\r\n                                    <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                                  }\r\n                                    Submit\r\n                                </button>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"uk-divider-order-items\"></div>\r\n                        </Fragment>\r\n                      )\r\n                    })\r\n                  }\r\n                </fieldset>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          {/* <NotificationContainer {...sizeActionStatus} />\r\n          <button disabled={sizeActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              sizeActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button> */}\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  OrderDetails\r\n}","import React, { useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, Shipper, saveShipper } from 'reducers';\r\nimport { OrderShipper } from 'types';\r\n\r\nconst ShipperDetails: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const shipperActionStatus = useSelector<AppState, Shipper>(state => state.shipper);\r\n  const shipperFormik = useFormik({\r\n    initialValues: {\r\n      shipperName: '',\r\n      trackingLink: '',\r\n      shipperId: '0'\r\n    },\r\n    validationSchema: Yup.object({\r\n      shipperName: Yup.string().required('Required'),\r\n      trackingLink: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (values: OrderShipper) => {\r\n      dispatch(saveShipper(values));\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (shipperActionStatus._isSuccess) {\r\n      shipperFormik.resetForm();\r\n    }\r\n  }, [shipperActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={shipperFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Shipper</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Shipper Name</div>\r\n                      <input className=\"uk-input \" id=\"shipperName\" type=\"input\"\r\n                        {...shipperFormik.getFieldProps('shipperName')} />\r\n                      {\r\n                        shipperFormik.touched.shipperName && shipperFormik.errors.shipperName ? (\r\n                          <span className=\"uk-text-danger\">{shipperFormik.errors.shipperName}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Tracking Link</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...shipperFormik.getFieldProps('trackingLink')} />\r\n                      {\r\n                        shipperFormik.touched.trackingLink && shipperFormik.errors.trackingLink ? (\r\n                          <span className=\"uk-text-danger\">{shipperFormik.errors.trackingLink}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...shipperActionStatus} />\r\n          <button disabled={shipperActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              shipperActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ShipperDetails\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductCoupon, OrderShipper } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateCoupon, Coupon, Shipper, updateShipper } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst ShipperList: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const deleteShipper = (shipperId: string, shipperName:string, trackingLink:string) => {\r\n    const input = window.confirm('Sure want to delete?');\r\n    if(input)dispatch(updateShipper({shipperId,shipperName,trackingLink},true));\r\n  } \r\n  const stateData = useSelector<AppState, OrderShipper[]>(state => state.shipper.data || []);  \r\n  const productColumns = [\r\n    {\r\n      name: 'Shipper Name',\r\n      selector: 'shipperName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Tracking Link',\r\n      selector: 'trackingLink',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Delete',\r\n      sortable: false,\r\n      cell: (row: { shipperName: string, trackingLink: string, shipperId: string }) => {\r\n        return  <button type=\"submit\" className=\"uk-button-small uk-button-danger\" onClick={() => deleteShipper(row.shipperId, row.shipperName, row.trackingLink)}>\r\n                   <span>Delete</span>\r\n                </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return(\r\n    <AdminProductList \r\n      productColumns={productColumns} \r\n      productType={SubProducts.SHIPPER} \r\n      ExpandableComponent= {ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Shipper Name\"\r\n      expandableRows = {true}\r\n      sortByColumn=\"shipperName\"/>\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const {shipperId,shipperName,trackingLink }: OrderShipper = data;\r\n  const shipperActionStatus = useSelector<AppState, Shipper>(state => state.shipper);\r\n\r\n  const shipperQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      shipperId,\r\n      shipperName,\r\n      trackingLink\r\n    },\r\n    validationSchema: Yup.object({\r\n      shipperName: Yup.string().required('Required'),\r\n      trackingLink: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (value: OrderShipper) => {\r\n      dispatch(updateShipper(value));\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={shipperQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Shipper Name</div>\r\n              <input className=\"uk-input \" id=\"shipperName\" type=\"input\"\r\n                {...shipperQuickViewFormik.getFieldProps('shipperName')} />\r\n              {\r\n                shipperQuickViewFormik.touched.shipperName && shipperQuickViewFormik.errors.shipperName ? (\r\n                  <span className=\"uk-text-danger\">{shipperQuickViewFormik.errors.shipperName}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Tracking Link</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...shipperQuickViewFormik.getFieldProps('trackingLink')} />\r\n              {\r\n                shipperQuickViewFormik.touched.trackingLink && shipperQuickViewFormik.errors.trackingLink ? (\r\n                  <span className=\"uk-text-danger\">{shipperQuickViewFormik.errors.trackingLink}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Shipper Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  shipperActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Update</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n        {shipperQuickViewFormik.isSubmitting && <NotificationContainer {...shipperActionStatus}/>}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ShipperList,\r\n  ExpandableComponent\r\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, setUser, UserInformation, updateUserDiscount } from 'reducers';\r\nimport { User } from 'types';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\ninterface Props{\r\n  addEditToggle: Function;\r\n}\r\n\r\nconst UserList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const stateData = useSelector<AppState, User[]>(state => state.user.allUsers || []);\r\n  console.log(stateData)\r\n  const productColumns = [\r\n    {\r\n      name: 'Email',\r\n      selector: 'emailAddress',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Mobile',\r\n      selector: 'mobile',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'First Name',\r\n      selector: 'firstName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Last Name',\r\n      selector: 'lastName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'View Details',\r\n      sortable: false,\r\n      cell: (row:  User) => {\r\n        return <button type=\"submit\" className=\"uk-button-small uk-button-primary\" onClick={() => {debugger;dispatch(setUser(row));props.addEditToggle(true)}}>\r\n          <span>View</span>\r\n        </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.USERS}\r\n      stateData={stateData}\r\n      ExpandableComponent={ExpandableComponent}\r\n      searchPlaceholder=\"Search Email / Mobile\"\r\n      expandableRows={true} />\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { emailAddress, discount }: User = data;\r\n  const userActionStatus = useSelector<AppState, UserInformation>(state => state.user);\r\n\r\n  const userDiscountQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      emailAddress: emailAddress || '',\r\n      discount: discount || ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      emailAddress: Yup.string().required('Required'),\r\n      discount: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (value) => {\r\n      dispatch(updateUserDiscount(value.discount || '0', value.emailAddress.toString()));\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={userDiscountQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Discount Percentage</div>\r\n              <input className=\"uk-input \" id=\"discount\" type=\"input\"\r\n                {...userDiscountQuickViewFormik.getFieldProps('discount')} />\r\n              {\r\n                userDiscountQuickViewFormik.touched.discount && userDiscountQuickViewFormik.errors.discount ? (\r\n                  <span className=\"uk-text-danger\">{userDiscountQuickViewFormik.errors.discount}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  userActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n        {userDiscountQuickViewFormik.isSubmitting && <NotificationContainer {...userActionStatus}/>}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserList\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState } from 'reducers';\r\nimport { User } from 'types';\r\n\r\nconst UserDetails: React.FunctionComponent = () => {\r\n  const userData = useSelector<AppState, User>(state => state.user.data || {} as User);\r\n  console.log(userData)\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <header className=\"uk-card-header\"><h1 className=\"uk-h2\">Order Summay</h1></header>\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <fieldset className=\"uk-fieldset\">\r\n                  <legend className=\"uk-h4\">#User Details</legend>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Name</div>\r\n                        <span className=\"uk-text-small\">\r\n                          {userData.firstName + ' ' + userData.lastName}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Mobile</div>\r\n                        <span className=\"uk-text-small\">{userData.mobile}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Email</div>\r\n                        <span className=\"uk-text-small\">{userData.emailAddress}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Discount</div>\r\n                        <span className=\"uk-text-small\">{userData.discount || 0}%</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Country</div>\r\n                        <span className=\"uk-text-small\">{userData.country}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">State</div>\r\n                        <span className=\"uk-text-small\">{userData.state}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">City</div>\r\n                        <span className=\"uk-text-small\">{userData.city}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Pincode</div>\r\n                        <span className=\"uk-text-small\">{userData.pincode}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Address</div>\r\n                        <span className=\"uk-text-small\">\r\n                          {\r\n                            userData.addressLineOne\r\n                            + ' ' +\r\n                            userData.addressLineTwo\r\n                            + ' ' +\r\n                            userData.addressLineThree\r\n                          }\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-divider-icon\"></div>\r\n                </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserDetails\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from \"react-router\";\r\nimport { AdminNav } from '.';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ColourList, ProductColour } from './subComponents/colour';\r\nimport { ProductSize, SizeList } from './subComponents/size';\r\nimport { ProductSubCategory, SubCategoryList } from './subComponents/subCategory';\r\nimport { ProductCoupon, CouponList } from './subComponents/coupon';\r\nimport { ProductItem, ProductList } from './subComponents/product';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getProduct, setDefaulState } from 'reducers';\r\nimport { OrderList, OrderDetails } from './subComponents/orders';\r\nimport { ShipperDetails, ShipperList } from './subComponents/shippers';\r\nimport { UserList, UserDetails } from './subComponents/users';\r\n\r\n\r\n\r\nconst MainContainer: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const {product, productId} = useParams();\r\n\r\n  useEffect(() => {\r\n    if(product == 'product' && productId){\r\n      dispatch(getProduct(Number(productId)));\r\n      setIsOnAdd(true);\r\n      setSubProductId(SubProducts.PRODUCT)\r\n    } else {\r\n      dispatch(setDefaulState());\r\n    }\r\n  },[product, productId])\r\n\r\n  const [isOnAdd, setIsOnAdd] = useState(false);\r\n  const [subProductId, setSubProductId] = useState(SubProducts.ORDERS);\r\n\r\n  const subProductToggle = (subProductId: number) => {\r\n    setSubProductId(subProductId);\r\n  }\r\n  const addEditToggle = (isOnAdd: boolean) => {\r\n    setIsOnAdd(isOnAdd);\r\n  }\r\n\r\n  const showSubProductComponent = () => {\r\n    switch (subProductId) {\r\n      case SubProducts.COLOUR:\r\n        return isOnAdd ? <ProductColour /> : <ColourList/>\r\n      case SubProducts.SIZE:\r\n        return isOnAdd ? <ProductSize/> : <SizeList/>\r\n      case SubProducts.SUB_PRODUCT:\r\n        return isOnAdd ? <ProductSubCategory/> : <SubCategoryList/>\r\n      case SubProducts.COUPONS:\r\n        return isOnAdd ? <ProductCoupon/> : <CouponList/>\r\n      case SubProducts.PRODUCT:\r\n        return isOnAdd ? <ProductItem/> : <ProductList addEditToggle={addEditToggle}/>\r\n      case SubProducts.ORDERS:\r\n        return isOnAdd ? <OrderDetails/> : <OrderList addEditToggle={addEditToggle}/>\r\n      case SubProducts.SHIPPER:\r\n        return isOnAdd ? <ShipperDetails/> : <ShipperList/>\r\n      case SubProducts.USERS:\r\n        return isOnAdd ? <UserDetails/> : <UserList addEditToggle={addEditToggle}/>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n            <AdminNav subProductToggle={subProductToggle} addEditToggle={addEditToggle} />\r\n            { showSubProductComponent() }\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  MainContainer\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nimport { getCustomerProducts, Product, setDefaulState } from 'reducers/Product';\r\nimport { AppState, SubCategory, Size, Colour, addUpdateCart, Cart, UserLocation } from 'reducers';\r\nimport { serverImagePath, pageSize } from 'appConstants';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { ProductItem, CustomerCart, Search } from 'types';\r\nimport { calculateUserDiscount, getCurrencyIcon, showINRUSD } from 'services';\r\nimport { LoadingProductArticle } from 'components/shared';\r\nimport { setSearch } from 'reducers/Search';\r\n\r\n\r\ninterface Props {\r\n  categoryId: number[];\r\n  colourId?: number[];\r\n  sizeId?: number[];\r\n  subCategoryId?: number[];\r\n  startPrice?: string;\r\n  endPrice?: string;\r\n}\r\n\r\nconst CustomerProductList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [hasMoreProducts, setHasMoreProducts] = useState(false);\r\n\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const productSize = useSelector<AppState, Size>(state => state.size);\r\n  const productColour = useSelector<AppState, Colour>(state => state.colour);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const search = useSelector<AppState, Search>(state => state.search.data || {} as Search);\r\n\r\n  // useEffect(() => {\r\n  //   if (props.categoryId !== 0) {\r\n  //     console.log('effect list')\r\n  //     dispatch(getCustomerProducts(0, pageSize, props.categoryId, props.subCategoryId || [], [], []));\r\n  //     setHasMoreProducts(true);\r\n  //   }\r\n  // }, [props.categoryId]);\r\n\r\n  useEffect(() => {\r\n    if(!products._isLoading && props.categoryId.length >0  && !subCategories._isLoading && !productSize._isLoading && !productColour._isLoading){\r\n      dispatch(setDefaulState());\r\n      dispatch(getCustomerProducts(0, pageSize, props.categoryId, props.subCategoryId || [], props.colourId || [], props.sizeId || [], props.startPrice || '', props.endPrice||'', userLocation.data || 'IN',search.searchText || '' , true));\r\n      dispatch(setSearch({\r\n        categoryId: props.categoryId,\r\n        colourId: props.colourId || [],\r\n        currency: userLocation.data || 'IN',\r\n        endPrice: props.endPrice||'',\r\n        sizeId: props.sizeId || [],\r\n        startPrice: props.startPrice || '',\r\n        subCategoryId: props.subCategoryId || [],\r\n        searchText: search.searchText || ''\r\n      }));\r\n    }\r\n  },[props.sizeId,props.categoryId,props.colourId,props.subCategoryId,props.startPrice,props.endPrice, subCategories._isLoading, productSize._isLoading, productColour._isLoading])\r\n\r\n  useEffect(()=> {\r\n    return () => {\r\n      dispatch(setSearch({\r\n        categoryId: [],\r\n        colourId: [],\r\n        currency: userLocation.data || 'IN',\r\n        endPrice: '',\r\n        sizeId:  [],\r\n        startPrice: '',\r\n        subCategoryId:  [],\r\n        searchText: search.searchText || ''\r\n      }));\r\n    }\r\n  },[]);\r\n\r\n  const fetchNextProducts = () => {\r\n    if (!products._isLoading && stateData && props.categoryId.length >0 ) {\r\n      dispatch(getCustomerProducts(stateData.length, pageSize, props.categoryId, props.subCategoryId || [], props.colourId || [], props.sizeId || [], props.startPrice || '', props.endPrice||'', userLocation.data || 'IN',search.searchText || ''));\r\n      dispatch(setSearch({\r\n        categoryId: props.categoryId,\r\n        colourId: props.colourId || [],\r\n        currency: userLocation.data || 'IN',\r\n        endPrice: props.endPrice||'',\r\n        sizeId: props.sizeId || [],\r\n        startPrice: props.startPrice || '',\r\n        subCategoryId: props.subCategoryId || [],\r\n        searchText: search.searchText || ''\r\n      }));\r\n    }\r\n  }\r\n\r\n  const products = useSelector<AppState, Product>(state => state.product || []);\r\n  useEffect(() => {\r\n    setHasMoreProducts(products._hasMoreProducts || false);\r\n  }, [products._hasMoreProducts]);\r\n\r\n\r\n  const stateData = products.data;\r\n\r\n  const addToCart = (product: ProductItem)=> {\r\n    if(!userData.data?.userId){\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: product.productDetailId,\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: showINRUSD(userLocation.data || 'IN', product),\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, false))\r\n    }else {\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: '0',\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: '0',\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, true))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"uk-width-expand\">\r\n      <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n        <div>\r\n          <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n            <div className=\"uk-grid-collapse uk-child-width-1-1\" id=\"products\" uk-grid=\"true\">\r\n              <div className=\"uk-card-header uk-hidden@m\">\r\n                <div className=\"uk-grid-small uk-flex-middle uk-flex-center\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-1-1 uk-width-auto@s uk-flex uk-flex-center uk-flex-middle\">\r\n                    <button className=\"uk-button uk-button-default uk-button-small uk-hidden@m\" uk-toggle=\"target: #filters\">\r\n                      <span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: settings; ratio: .75;\"></span>Filters\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div>\r\n\r\n                <InfiniteScroll\r\n                  dataLength={stateData && stateData.length || 0}\r\n                  next={fetchNextProducts}\r\n                  hasMore={hasMoreProducts}\r\n                  loader={\r\n                    <div style={{ textAlign: \"center\", marginTop: \"10px\" }}>\r\n                      <h4>Loading...</h4>\r\n                    </div>\r\n                  }\r\n                  endMessage={\r\n                    <p style={{ textAlign: \"center\" }}>\r\n                      <b>That's all for now. Do check back after some time for more products.</b>\r\n                    </p>\r\n                  }\r\n                >\r\n                  <div className=\"uk-grid-collapse uk-child-width-custom tm-products-grid js-products-grid\" uk-grid=\"true\">\r\n                    {\r\n                       stateData && stateData.length > 0 ? stateData.map((product, index) => {\r\n                        return (\r\n                          <article className=\"tm-product-card\" key={index}>\r\n                            <div className=\"tm-product-card-media\">\r\n                              <div className=\"tm-ratio tm-ratio-4-3\">\r\n                                <a className=\"tm-media-box\" onClick={()=> history.push('/productDetails/'+ product.productId)}>\r\n                                  \r\n                                  <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + product.imagePaths} alt={product.imageNames}/></figure>\r\n                                </a>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"tm-product-card-body\">\r\n                              <div className=\"tm-product-card-info\">\r\n                                <div className=\"uk-text-meta uk-margin-xsmall-bottom\">{product.productCategoryName}</div>\r\n                                <h3 className=\"tm-product-card-title\"><a className=\"uk-link-heading\" onClick={()=> history.push('/productDetails/'+ product.productId)}>{product.name}</a></h3>\r\n                              </div>\r\n                              <div className=\"tm-product-card-shop\">\r\n                                <div className=\"tm-product-card-prices\">\r\n                                  {\r\n                                    userData.data?.discount && userData.data?.discount !== '0' &&\r\n                                    <del className=\"uk-text-meta\">{getCurrencyIcon(userLocation.data || 'IN')} {showINRUSD(userLocation.data || 'IN', product)}</del>\r\n                                  }\r\n                                  <div className=\"tm-product-card-price\">\r\n                                    {getCurrencyIcon(userLocation.data || 'IN')} {calculateUserDiscount(userData.data?.discount ||'0', showINRUSD(userLocation.data || 'IN', product))}\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"tm-product-card-add\">\r\n                                  <button className=\"uk-button uk-button-primary tm-product-card-add-button tm-shine js-add-to-cart\">\r\n                                    {\r\n                                      cart._isLoading && <span uk-spinner=\"true\"></span>\r\n                                    }\r\n                                    {\r\n                                      !cart._isLoading && (\r\n                                        <>\r\n                                        <span className=\"tm-product-card-add-button-icon\" uk-icon=\"cart\" onClick={() => addToCart(product)}></span>\r\n                                        <span className=\"tm-product-card-add-button-text\">add to cart</span>\r\n                                        </>\r\n                                      )\r\n                                    }\r\n                                    \r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </article>\r\n                        )\r\n                      }) : products._hasMoreProducts  && Array(pageSize).fill(1).map((value, index) => <LoadingProductArticle key={index} keyIndex={index}/>)\r\n                    }\r\n                  </div>\r\n                </InfiniteScroll>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerProductList\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { CustomerProductFilter } from '.';\r\nimport { AppState, ProductCount, getActiveProductCount } from 'reducers';\r\nimport { SubCategory, getSubCategory } from 'reducers/SubCategory';\r\nimport { ProductSubCategory, ProductSize, ProductColor, Search } from 'types';\r\nimport { filterSubcategories } from 'services';\r\nimport { SubCategories } from 'appConstants';\r\nimport { CustomerProductList } from './CustomerProductList';\r\nimport { setDefaulState } from 'reducers/Product';\r\nimport { getSize, Size } from 'reducers/Size';\r\nimport { getColour, Colour } from 'reducers/Colour';\r\n\r\n\r\n\r\n\r\nconst CustomerContainer: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const {product, filterOn} = useParams();\r\n  const [colourId, setColourId] = useState<number[]>([]);\r\n  const [sizeId, setSizeId] = useState<number[]>([]);\r\n  const [subCategoryId, setSubCategoryId] = useState<number[]>([]);\r\n  const [startPrice, setStartPrice] = useState('');\r\n  const [endPrice, setEndPrice] = useState('');\r\n  const [categoryId, setcategoryId] = useState<number[]>([]);\r\n  const [subCategoryQueryParam, setSubCategoryQueryParam] = useState<ProductSubCategory[]>([]);\r\n  const productSize = useSelector<AppState, ProductSize[]>(state => state.size.data || []);\r\n  const productColour = useSelector<AppState, ProductColor[]>(state => state.colour.data || []);\r\n  const search = useSelector<AppState, Search>(state => state.search.data || {} as Search);\r\n\r\n  useEffect(()=> {\r\n    dispatch(getSubCategory());\r\n    dispatch(getSize());\r\n    dispatch(getColour());\r\n  },[]);\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(setDefaulState());\r\n    const filteredKey = Object.keys(SubCategories).filter((key) => key.toLowerCase() === product.toLowerCase());\r\n    if(filteredKey[0]){\r\n      setcategoryId([SubCategories[filteredKey[0]]]);\r\n    } else {\r\n      const subCateId : number[] = [];\r\n      for(let key in SubCategories){\r\n        subCateId.push(SubCategories[key])\r\n      }\r\n      setcategoryId(subCateId)\r\n    }\r\n    if(!filterOn){\r\n      setSubCategoryId([]);\r\n    }\r\n\r\n  }, [product]);\r\n\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const activeProductCount = useSelector<AppState, ProductCount>(state => state.productCount);\r\n  const productKey = Object.keys(SubCategories).find((subcategory) => subcategory.toLowerCase() === product.toLowerCase()) || '';\r\n  let filteredSubcategories = filterSubcategories(subCategories, SubCategories[productKey]);;\r\n  if(product.toLowerCase() === 'search'){\r\n    filteredSubcategories = subCategories.data || []\r\n  }\r\n  \r\n\r\n  useEffect(()=> {\r\n    if(filterOn &&  !subCategories._isLoading && subCategories.data && subCategories.data.length >0){\r\n      setSubCategoryId([Number(subCategories.data?.filter(({code}) => code.toLowerCase() === filterOn.toLowerCase())[0].subCategoryId)]);\r\n    setSubCategoryQueryParam(subCategories.data?.filter(({code}) => code.toLowerCase() === filterOn.toLowerCase()) || [])\r\n    }\r\n  },[filterOn, subCategories._isLoading])\r\n\r\n  const getTotalProductCount = () => {\r\n    let count = 0;\r\n    const activeProducts = activeProductCount.data\r\n    if(activeProducts){\r\n      const selectedSubCat = subCategoryId.length>0 ? subCategoryId : filteredSubcategories.map(({subCategoryId}) => Number(subCategoryId));\r\n      const selectedColour = colourId.length > 0 ? colourId : productColour.length> 0 ?  productColour.map(({colourId}) => Number(colourId)) : [];\r\n      const selectedSize = sizeId.length > 0 ? sizeId : productSize.length > 0 ? productSize.map(({sizeId}) => Number(sizeId)) : [];\r\n      selectedSubCat.forEach((subCategory) => {\r\n        const activeSubCat = activeProducts[subCategory];\r\n        if(activeSubCat){\r\n          selectedColour.forEach((colour) => {\r\n            const activeColour = activeSubCat[colour];\r\n            if(activeColour){\r\n              selectedSize.forEach((size) => {\r\n                const activeSize = activeColour[size];\r\n                if(activeSize) {\r\n                  count+= activeSize.quantity;\r\n                }\r\n                \r\n              })\r\n            }\r\n          })\r\n        }\r\n      });\r\n    }\r\n    return count;\r\n  };\r\n\r\n  // const getIdsForfilter = () => {\r\n  //   const filteredKey = Object.keys(SubCategories).filter((key) => key.toLowerCase() === product.toLowerCase());\r\n  //   if(filteredKey[0]){\r\n  //     setcategoryId(Number(SubCategories[filteredKey[0]]));\r\n  //   }\r\n  // }\r\n\r\n  // getIdsForfilter()\r\n  return (\r\n    <main>\r\n    <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n                <div className=\"uk-text-center\">\r\n                    <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                        <li><a onClick={() => history.push('/')}>Home</a></li>\r\n                        <li><span>Product</span></li>\r\n                    </ul>\r\n                    <h1 className=\"uk-margin-small-top uk-margin-remove-bottom customer-product\">{product}</h1>\r\n                    {\r\n                      search.searchText === '' && <div className=\"uk-text-meta uk-margin-xsmall-top\">{ getTotalProductCount()} items</div>\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n                        {\r\n                          <CustomerProductFilter \r\n                          subCategories= {filteredSubcategories}\r\n                          activeProductCount= {activeProductCount}\r\n                          filterSelected={subCategoryQueryParam}\r\n                          categoryId={categoryId}\r\n                          setColourId={setColourId}\r\n                          setSizeId={setSizeId}\r\n                          setSubCategoryId={setSubCategoryId}\r\n                          setStartPrice={setStartPrice}\r\n                          setEndPrice={setEndPrice}\r\n                          />\r\n                        }\r\n                        {\r\n                        <CustomerProductList \r\n                          categoryId={categoryId}\r\n                          colourId={colourId}\r\n                          sizeId={sizeId}\r\n                          subCategoryId={subCategoryId}\r\n                          startPrice={startPrice}\r\n                          endPrice={endPrice}\r\n                          />\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</main>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerContainer\r\n}","import React, { Dispatch, SetStateAction, useState, useEffect } from 'react';\r\nimport { ProductSubCategory, ActiveProductCount, ProductColor, ProductSize } from 'types';\r\nimport { ProductCount, AppState, Size, Colour, getCustomerProducts } from 'reducers';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// import { Size } from 'reducers/Size';\r\n// import { Colour } from 'reducers/Colour';\r\nimport { filterSize } from 'services';\r\nimport { pageSize } from 'appConstants';\r\nimport { setDefaulState } from 'reducers/Product';\r\nimport { useParams } from 'react-router-dom';\r\n// import { getCustomerProducts } from 'reducers/Product';\r\n\r\n\r\ninterface Props {\r\n  filterSelected: ProductSubCategory[];\r\n  subCategories: ProductSubCategory[];\r\n  activeProductCount: ProductCount;\r\n  categoryId: number[];\r\n  setColourId: Dispatch<SetStateAction<number[]>>;\r\n  setSizeId: Dispatch<SetStateAction<number[]>>;\r\n  setSubCategoryId: Dispatch<SetStateAction<number[]>>;\r\n  setStartPrice: Dispatch<SetStateAction<string>>;\r\n  setEndPrice: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\n\r\nconst CustomerProductFilter: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const {product} = useParams();\r\n  const [filterColourId, setFilterColourId] = useState<number[]>([]);\r\n  const [filterSizeId, setFilterSizeId] = useState<number[]>([]);\r\n  const [filterSubCategory, setFilterSubCategory] = useState<number[]>([]);\r\n  const [filterStartPrice, setFilterStartPrice] = useState('');\r\n  const [filterEndPrice, setFilterEndPrice] = useState('');\r\n  const [startPriceTimer, setStartPriceTimer] = useState(0);\r\n  const [endPriceTimer, setEndPriceTimer] = useState(0);\r\n  const productSize = useSelector<AppState, Size>(state => state.size);\r\n  const productColour = useSelector<AppState, Colour>(state => state.colour);\r\n\r\n  const getProductCount = (id=0) => {\r\n    let count = 0;\r\n    const activeProducts = props.activeProductCount.data\r\n    if(activeProducts){\r\n      const selectedColour = filterColourId.length > 0 ? filterColourId : productColour.data && productColour.data.length> 0 ?  productColour.data.map(({colourId}) => Number(colourId)) : [];\r\n      const selectedSize = filterSizeId.length > 0 ? filterSizeId : productSize.data && productSize.data.length > 0 ? productSize.data.map(({sizeId}) => Number(sizeId)) : [];\r\n      \r\n      const activeSubCat = activeProducts[id];\r\n      if(activeSubCat){\r\n        selectedColour.forEach((colour) => {\r\n          const activeColour = activeSubCat[colour];\r\n          if(activeColour){\r\n            selectedSize.forEach((size) => {\r\n              const activeSize = activeColour[size];\r\n              if(activeSize) {\r\n                count+= activeSize.quantity;\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    }\r\n    return count\r\n  }\r\n\r\n  const toggleAddingRemovingId = (ids: number[], newId: number) => {\r\n    const index = ids.indexOf(newId);\r\n    if (index > -1){\r\n      ids.splice(index,1);\r\n    } else {\r\n      ids.push(newId);\r\n    }\r\n    return ids;\r\n  }\r\n  const getFilteredProduct = (colour: number, size: number, subCategory?: number, startPrice?: string, endPrice?: string) => {\r\n    if(colour != 0){\r\n      const updatedColourFilter = toggleAddingRemovingId(filterColourId, colour);\r\n      setFilterColourId([...updatedColourFilter]);\r\n      props.setColourId([...updatedColourFilter]);\r\n    } else if (size != 0){\r\n      const updatedSizeFilter = toggleAddingRemovingId(filterSizeId, size);\r\n      setFilterSizeId([...updatedSizeFilter]);\r\n      props.setSizeId([...updatedSizeFilter]);\r\n    } else if (subCategory && subCategory != 0){\r\n      const updatedSubCategory = toggleAddingRemovingId(filterSubCategory, subCategory);\r\n      setFilterSubCategory([...updatedSubCategory]);\r\n      props.setSubCategoryId([...updatedSubCategory]);\r\n    } else if(startPrice!=='0' && !endPrice){\r\n      setFilterStartPrice(startPrice || '');\r\n      window.clearTimeout(startPriceTimer);\r\n      setStartPriceTimer(window.setTimeout(() => {\r\n        props.setStartPrice(startPrice || '')\r\n      },1000));\r\n    } else if(endPrice || (!endPrice && filterEndPrice)){\r\n      setFilterEndPrice(endPrice || '');\r\n      window.clearTimeout(endPriceTimer);\r\n      setEndPriceTimer(window.setTimeout(() => {\r\n        props.setEndPrice(endPrice || '')\r\n      },1000));\r\n    }\r\n  }\r\n\r\n  const restFilter = () => {\r\n    setFilterColourId([]);\r\n    props.setColourId([]);\r\n    setFilterSizeId([]);\r\n    props.setSizeId([]);\r\n    setFilterSubCategory([]);\r\n    props.setSubCategoryId([]);\r\n    setFilterStartPrice('');\r\n    props.setStartPrice('');\r\n    setFilterEndPrice('');\r\n    props.setEndPrice('')\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   console.log('filter on effect')\r\n  //   if(props.filterSelected && props.filterSelected.length > 0){\r\n  //     if(filterSubCategory.length> 0){\r\n  //       setFilterSubCategory([]);\r\n  //     }\r\n  //     const updatedSubCategory = toggleAddingRemovingId(filterSubCategory, Number(props.filterSelected[0].subCategoryId));\r\n  //     setFilterSubCategory([...updatedSubCategory]);\r\n  //   }\r\n  // },[props.filterSelected]);\r\n\r\n  useEffect(() => {\r\n    if(props.filterSelected.length>0){\r\n      // const updatedSubCategory = toggleAddingRemovingId(filterSubCategory, Number(props.filterSelected[0].subCategoryId));\r\n      setFilterSubCategory([Number(props.filterSelected[0].subCategoryId)]);\r\n      // props.setSubCategoryId([Number(props.filterSelected[0].subCategoryId)]);\r\n    }\r\n  }, [props.filterSelected]);\r\n\r\n  // useEffect(() => {\r\n  //   // dispatch(setDefaulState());\r\n  //   if(props.categoryId != 0){\r\n  //     console.log(filterColourId,filterSizeId, filterSubCategory)\r\n  //     console.log('effect filter')\r\n  //     dispatch(getCustomerProducts(0, pageSize, props.categoryId,filterSubCategory, filterColourId , filterSizeId, true));\r\n  //   }\r\n  // }, [filterColourId,filterSizeId, filterSubCategory,props.categoryId]);\r\n\r\n  return (\r\n    <aside className=\"uk-width-1-4 tm-aside-column tm-filters\" id=\"filters\" uk-offcanvas=\"overlay: true; container: false;\">\r\n      <div className=\"uk-offcanvas-bar uk-padding-remove\">\r\n        <div className=\"uk-card uk-card-default uk-card-small uk-flex uk-flex-column uk-height-1-1\">\r\n          <header className=\"uk-card-header uk-flex uk-flex-middle\">\r\n            <div className=\"uk-grid-small uk-flex-1\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand\"><h3>Filters</h3></div>\r\n              <button className=\"uk-offcanvas-close\" type=\"button\" uk-close=\"true\"></button>\r\n            </div>\r\n          </header>\r\n          <div className=\"uk-margin-remove uk-flex-1\" uk-accordion=\"multiple: true; targets: &gt; .js-accordion-section\" style={{ flexBasis: \"auto\" }}>\r\n            <section className=\"uk-card-body uk-open js-accordion-section\">\r\n              <h4 className=\"uk-accordion-title uk-margin-remove\">Prices</h4>\r\n              <div className=\"uk-accordion-content\">\r\n                <div className=\"uk-grid-small uk-child-width-1-2 uk-text-small\" uk-grid=\"true\">\r\n                  <div>\r\n                    <div className=\"uk-inline\">\r\n                      <span className=\"uk-form-icon uk-text-xsmall\">from</span>\r\n                      <input className=\"uk-input\" type=\"number\" placeholder=\"₹₹₹\"\r\n                      value={filterStartPrice} \r\n                      onChange={(e) => getFilteredProduct(0,0,0,e.currentTarget.value)}/>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"uk-inline\">\r\n                      <span className=\"uk-form-icon uk-text-xsmall\">to</span>\r\n                      <input className=\"uk-input\" type=\"text\" placeholder=\"₹₹₹\" \r\n                      value={filterEndPrice}\r\n                      onChange={(e) => getFilteredProduct(0,0,0,'0',e.currentTarget.value)}/>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n            {\r\n              props.subCategories.length > 0 &&\r\n              <section className=\"uk-card-body js-accordion-section uk-open\">\r\n              <h4 className=\"uk-accordion-title uk-margin-remove\">Categories</h4>\r\n              <div className=\"uk-accordion-content\">\r\n                <ul className=\"uk-list tm-scrollbox\">\r\n                  {\r\n                    props.subCategories.map((subcategory: ProductSubCategory) => {\r\n                      return (\r\n                        <li key={subcategory.code}>\r\n                          <input \r\n                            className=\"tm-checkbox\"\r\n                            id={\"subproduct\" + subcategory.code}\r\n                            name=\"subproduct\"\r\n                            value={subcategory.code}\r\n                            checked={filterSubCategory.indexOf(Number(subcategory.subCategoryId)) > -1}\r\n                            type=\"checkbox\"\r\n                            onChange={() => getFilteredProduct(0, 0, Number(subcategory.subCategoryId))}\r\n                            />\r\n                          <label htmlFor={\"subproduct\" + subcategory.code}>\r\n                            <span>{subcategory.code} <span className=\"uk-text-meta uk-text-small\">{getProductCount(Number(subcategory.subCategoryId))}</span></span>\r\n                          </label>\r\n                        </li>\r\n                      )\r\n                    })\r\n                  }\r\n                </ul>\r\n              </div>\r\n            </section>\r\n            }\r\n            \r\n            {\r\n              productColour.data && productColour.data.length > 0 &&\r\n              <section className=\"uk-card-body js-accordion-section uk-open\">\r\n                <h4 className=\"uk-accordion-title uk-margin-remove\">Colour</h4>\r\n                <div className=\"uk-accordion-content\">\r\n                  <ul className=\"uk-list tm-scrollbox\">\r\n                    {\r\n                      productColour.data.map((colour: ProductColor) => {\r\n                        return (\r\n                          <li key={colour.colourId}>\r\n                            <input \r\n                              className=\"tm-checkbox\" \r\n                              id={\"colour\" + colour.colourId} \r\n                              name=\"colour\" \r\n                              value={colour.colourId} \r\n                              type=\"checkbox\"\r\n                              checked={filterColourId.indexOf(Number(colour.colourId)) > -1}\r\n                              onChange={() => getFilteredProduct(Number(colour.colourId), 0, 0)} \r\n                            />\r\n                            <label htmlFor={\"colour\" + colour.colourId}>\r\n                              <span>{colour.value} </span>\r\n                            </label>\r\n                          </li>\r\n                        )\r\n                      })\r\n                    }\r\n                  </ul>\r\n                </div>\r\n              </section>\r\n            }\r\n            {\r\n              productSize.data && productSize.data.length > 0 &&\r\n              !(filterSize(productSize,props.categoryId).length === 1 && \r\n              filterSize(productSize,props.categoryId)[0].value.toLowerCase() === 'default') &&\r\n              <section className=\"uk-card-body js-accordion-section uk-open\">\r\n                <h4 className=\"uk-accordion-title uk-margin-remove\">Size</h4>\r\n                <div className=\"uk-accordion-content\">\r\n                  <ul className=\"uk-list tm-scrollbox\">\r\n                    {\r\n                      filterSize(productSize,props.categoryId).map((size: ProductSize) => {\r\n                        return (\r\n                          size.value.toLowerCase() !== 'default' &&\r\n                          <li key={size.sizeId}>\r\n                            <input \r\n                              className=\"tm-checkbox\"\r\n                              id={\"size\" + size.sizeId}\r\n                              name=\"size\"\r\n                              value={size.sizeId}\r\n                              type=\"checkbox\"\r\n                              checked={filterSizeId.indexOf(Number(size.sizeId)) > -1}\r\n                              onChange={() => getFilteredProduct(0,Number(size.sizeId), 0)} \r\n                              />\r\n                            <label htmlFor={\"size\" + size.sizeId}>\r\n                              <span>{size.value} </span>\r\n                            </label>\r\n                          </li>\r\n                        )\r\n                      })\r\n                    }\r\n                  </ul>\r\n                </div>\r\n              </section>\r\n            }\r\n            <div className=\"uk-card-body\">\r\n              <button className=\"uk-button uk-button-default uk-width-1-1\" onClick={() => restFilter()}><span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: close; ratio: .75;\"></span>Reset all filters</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerProductFilter\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProduct, setDefaulState } from 'reducers/Product';\r\nimport { AppState, addUpdateCart, Cart, UserLocation } from 'reducers';\r\nimport { ProductItem, CustomerCart } from 'types';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { CustomerProductDetailsLoading } from '.';\r\nimport { calculateUserDiscount, getCurrencyIcon, showINRUSD } from 'services';\r\nimport { QuickProductList } from 'components/shared';\r\n\r\ninterface cartQuantity {\r\n  [key: string]: string;\r\n};\r\n\r\n\r\ninterface Props {\r\n  mainSlider: JSX.Element[] | undefined;\r\n  smallSlider: JSX.Element[] | undefined;\r\n  productCategoryName: string;\r\n  name: string;\r\n  priceINR: string;\r\n  priceUSD: string;\r\n  description: string;\r\n  size: string;\r\n  sizeId: string;\r\n  quantity: string;\r\n  productId: string;\r\n  productDetailId: string;\r\n  imageName: string;\r\n  imagePath: string;\r\n  cartProductQuantity: cartQuantity;\r\n};\r\n\r\nconst CustomerProductDetails: React.FunctionComponent<Props> = (props: Props) => {\r\n  const {\r\n    priceINR,\r\n    priceUSD,\r\n    quantity,\r\n    size,\r\n    sizeId,\r\n    productId,\r\n    productDetailId,\r\n    imageName,\r\n    imagePath,\r\n    productCategoryName,\r\n    name,\r\n    cartProductQuantity\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const relatedProducts = useSelector<AppState, ProductItem[]>(state => state.relatedProduct.data || []);\r\n\r\n  const [pINR, setPINR] = useState('0');\r\n  const [pUSD, setPUSD] = useState('0');\r\n  const [pQuantity, setPQuantity] = useState(['']);\r\n  const [pSize, setPSize] = useState(['']);\r\n  const [pSizeId, setPSizeId] = useState(['']);\r\n  const [pDetailId, setPDetailId] = useState(['']);\r\n  const [selectedSize, setSelectedSize] = useState('0');\r\n  const [selectedQuantity, setSelectedQuantity] = useState('1');\r\n  const [selectedProductDetailId, setSelectedProductDetailId] = useState('0');\r\n  const [maxQuantity, setMaxQuantity] = useState('0');\r\n\r\n  useEffect(() => {\r\n    setPINR(priceINR.split(',')[0]);\r\n    setPUSD(priceUSD.split(',')[0]);\r\n  }, [priceINR, priceUSD]);\r\n\r\n\r\n  useEffect(() => {\r\n    setPQuantity(quantity.split(','));\r\n    setPSize(size.split(','));\r\n    setPSizeId(sizeId.split(','));\r\n    setSelectedSize(sizeId.split(',')[0].toString());\r\n    const defaultProductDetail = productDetailId.split(',')[0];\r\n    setMaxQuantity((Number(quantity.split(',')[0]) - Number(cartProductQuantity[defaultProductDetail.toString()] || 0)).toString());\r\n    setPDetailId(productDetailId.split(','));\r\n    setSelectedProductDetailId(defaultProductDetail);\r\n  }, [quantity, size, sizeId, productDetailId]);\r\n\r\n  useEffect(() => {\r\n    if (maxQuantity !== '0') {\r\n      const productIndex = pDetailId.indexOf(selectedProductDetailId);\r\n      setMaxQuantity((Number(pQuantity[productIndex]) - Number(cartProductQuantity[selectedProductDetailId] || '0')).toString());\r\n      onChangeQuantity(cartProductQuantity[selectedProductDetailId] || '0', Number(pQuantity[productIndex]) - Number(cartProductQuantity[selectedProductDetailId]));\r\n    }\r\n  }, [cartProductQuantity]);\r\n\r\n  const toggleQuantity = (isIncrement: boolean) => {\r\n    if (isIncrement) {\r\n      if (Number(selectedQuantity) <= Number(maxQuantity)) {\r\n        setSelectedQuantity((Number(selectedQuantity) + 1).toString());\r\n      }\r\n    } else {\r\n      if (selectedQuantity !== '1') {\r\n        setSelectedQuantity((Number(selectedQuantity) - 1).toString());\r\n      }\r\n    }\r\n  }\r\n\r\n  const setSize = (sizeId: string) => {\r\n    setSelectedSize(sizeId);\r\n    const selectedIndex = pSizeId.indexOf(sizeId);\r\n    const maxQ = pQuantity[selectedIndex];\r\n    const pdId = pDetailId[selectedIndex];\r\n    setSelectedProductDetailId(pdId);\r\n    setMaxQuantity((Number(maxQ) - Number(cartProductQuantity[pdId] || 0)).toString());\r\n    if (Number(selectedQuantity) > Number(maxQ)) {\r\n      setSelectedQuantity(maxQ);\r\n    }\r\n  }\r\n\r\n  const onChangeQuantity = (quantity: string, maxQaun = -1) => {\r\n    if (Number(quantity) > Number(maxQaun !== -1 ? maxQaun : maxQuantity)) {\r\n      setSelectedQuantity(Number(maxQaun !== -1 ? maxQaun : maxQuantity).toString())\r\n    } else {\r\n      setSelectedQuantity(Number(quantity).toString())\r\n    }\r\n  };\r\n\r\n  const onBlurQuantity = (quantity: string) => {\r\n    if (quantity === '' || Number(quantity) === 0) {\r\n      setSelectedQuantity('1')\r\n    }\r\n  };\r\n\r\n  const addToCart = () => {\r\n    if (!userData.data?.userId) {\r\n      const cartData = {\r\n        productDetailId: selectedProductDetailId,\r\n        productQuantity: selectedQuantity,\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: selectedProductDetailId.toString(),\r\n        productImage: imageName,\r\n        productImagePath: imagePath,\r\n        productName: name,\r\n        subcategory: productCategoryName,\r\n        productPrice: showINRUSD(userLocation.data || 'IN', { priceINR: pINR, priceUSD: pUSD }),\r\n        productId: productId,\r\n      } as CustomerCart;\r\n\r\n      dispatch(addUpdateCart(cartData, false))\r\n    } else {\r\n      const cartData = {\r\n        productDetailId: selectedProductDetailId,\r\n        productQuantity: selectedQuantity,\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: '0',\r\n        productImage: imageName,\r\n        productImagePath: imagePath,\r\n        productName: name,\r\n        subcategory: productCategoryName,\r\n        productPrice: '0',\r\n        productId: productId,\r\n      } as CustomerCart;\r\n\r\n      dispatch(addUpdateCart(cartData, true))\r\n    }\r\n  }\r\n\r\n  const checkForDefaultSize = (sizeList: string[]) => {\r\n    return sizeList.length === 1 && sizeList[0].toLowerCase() === 'default';\r\n  }\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a onClick={() => history.push('/')}>Home</a></li>\r\n                <li><span>Product</span></li>\r\n                <li><a onClick={() => history.push('/product/' + props.productCategoryName)}>{props.productCategoryName}</a></li>\r\n              </ul>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom\">{props.name}</h1>\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n                <div>\r\n                  <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n                    <div className=\"uk-grid-small uk-grid-collapse uk-grid-match\" uk-grid=\"true\">\r\n                      <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n                        <div className=\"uk-grid-collapse uk-child-width-1-1\" uk-slideshow=\"finite: true; ratio: 4:3;\" uk-grid=\"true\">\r\n                          <div>\r\n                            <ul className=\"uk-slideshow-items\" uk-lightbox=\"true\">\r\n                              {\r\n                                props.mainSlider\r\n                              }\r\n                            </ul>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"uk-card-body uk-flex uk-flex-center\">\r\n                              <div className=\"uk-width-1-2 uk-visible@s\">\r\n                                <div uk-slider=\"finite: true\">\r\n                                  <div className=\"uk-position-relative\">\r\n                                    <div className=\"uk-slider-container\">\r\n                                      <ul className=\"tm-slider-items uk-slider-items uk-child-width-1-4 uk-grid uk-grid-small\">\r\n                                        {\r\n                                          props.smallSlider\r\n                                        }\r\n                                      </ul>\r\n                                      <div>\r\n                                        <a className=\"uk-position-center-left-out uk-position-small\" href=\"#\" uk-slider-item=\"previous\" uk-slidenav-previous=\"true\"></a>\r\n                                        <a className=\"uk-position-center-right-out uk-position-small\" href=\"#\" uk-slider-item=\"next\" uk-slidenav-next=\"true\"></a>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <ul className=\"uk-slideshow-nav uk-dotnav uk-hidden@s\"></ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"uk-width-1-1 uk-width-1-3@m tm-product-info\">\r\n                        <div className=\"uk-card-body\">\r\n                          <div className=\"uk-margin\">\r\n                            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"uk-margin\">\r\n                            <div className=\"uk-padding-small uk-background-primary-lighten uk-border-rounded\">\r\n                              <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                                <div>\r\n                                  {\r\n                                    userData.data?.discount && userData.data?.discount !== '0' &&\r\n                                    <del className=\"uk-text-meta\">{getCurrencyIcon(userLocation.data || 'IN')} {showINRUSD(userLocation.data || 'IN', { priceINR: pINR, priceUSD: pUSD })}</del>\r\n                                  }\r\n                                  <div className=\"tm-product-price\">{getCurrencyIcon(userLocation.data || 'IN')} {calculateUserDiscount(userData.data?.discount || '0', showINRUSD(userLocation.data || 'IN', { priceINR: pINR, priceUSD: pUSD }))}</div>\r\n                                </div>\r\n                                <div>\r\n                                  <div className=\"uk-grid-small uk-child-width-1-2\" uk-grid=\"true\">\r\n                                    <div className={`${checkForDefaultSize(pSize) ? 'default-product-size' : ''}`}>\r\n                                      <label>\r\n                                        <div className=\"uk-form-label\">Size</div>\r\n                                        <select className=\"uk-select\"\r\n                                          value={selectedSize}\r\n                                          id=\"selectedSize\"\r\n                                          onChange={(e) => { setSize(e.currentTarget.value) }}>\r\n                                          {\r\n                                            pSize.map((size, index) => {\r\n                                              return <option key={index} value={pSizeId[index]}>{size}</option>\r\n                                            })\r\n                                          }\r\n\r\n                                        </select>\r\n                                      </label>\r\n                                    </div>\r\n                                    <div>\r\n                                      <label>\r\n                                        <div className=\"uk-form-label\">Quantity {selectedSize !== '0' && <span className=\"uk-notification-message-danger uk-text-meta\">(Max {maxQuantity})</span>}</div>\r\n                                        <div>\r\n                                          <div className=\"uk-inline\">\r\n                                            {Number(selectedQuantity) === 1 && <a className=\"uk-form-icon\"></a>}\r\n                                            {Number(selectedQuantity) > 1 && <a className=\"uk-form-icon\" onClick={() => toggleQuantity(false)} uk-icon=\"icon: minus\"></a>}\r\n                                            {Number(selectedQuantity) < Number(maxQuantity) && <a className=\"uk-form-icon uk-form-icon-flip\" onClick={() => toggleQuantity(true)} uk-icon=\"icon: plus\"></a>}\r\n                                            {Number(selectedQuantity) === Number(maxQuantity) && <a className=\"uk-form-icon uk-form-icon-flip\"></a>}\r\n                                            <input className=\"uk-input uk-text-center\"\r\n                                              onChange={(e) => onChangeQuantity(e.currentTarget.value)}\r\n                                              onBlur={(e) => onBlurQuantity(e.currentTarget.value)}\r\n                                              type=\"number\"\r\n                                              value={selectedQuantity} />\r\n                                          </div>\r\n                                        </div>\r\n                                      </label>\r\n                                    </div>\r\n                                    <div className={`${checkForDefaultSize(pSize) ? 'single-size-cart-button' : ''}`}>\r\n                                      <button\r\n                                        disabled={Number(maxQuantity) === 0}\r\n                                        className=\"uk-button uk-button-primary tm-product-add-button tm-shine js-add-to-cart\"\r\n                                        onClick={() => addToCart()}>\r\n                                        add to cart\r\n                                        </button>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div>\r\n                                  {\r\n                                    props.productCategoryName.toLowerCase() === 'footwear' && \r\n                                    <a uk-toggle=\"target: #product-size-model\" className=\"uk-margin-xsmall-right uk-notification-message-danger\"><span uk-icon=\"file-text\"></span> Size Chart </a>\r\n                                  }\r\n                                  \r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"uk-margin\">\r\n                            <div className=\"uk-padding-small uk-background-muted uk-border-rounded\">\r\n                              <div className=\"uk-grid-small uk-child-width-1-1 uk-text-small\" uk-grid=\"true\">\r\n                                <div>\r\n                                  <div className=\"uk-grid-collapse\" uk-grid=\"true\">\r\n                                    {/* <span className=\"uk-margin-xsmall-right\" uk-icon=\"chevron-right\"></span> */}\r\n                                    <div>\r\n                                      <div className=\"uk-text-bolder\">Product Details</div>\r\n                                      <div className=\"uk-text-small uk-text-muted\">\r\n                                        {props.description}\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      {/* <div className=\"uk-width-1-1 tm-product-description\" id=\"description\">\r\n                        <header>\r\n                          <nav className=\"tm-product-nav\" uk-sticky=\"offset: 60; bottom: #description; cls-active: tm-product-nav-fixed;\">\r\n                            <ul className=\"uk-subnav uk-subnav-pill js-product-switcher\" uk-switcher=\"connect: .js-tabs\">\r\n                              <li><a className=\"js-scroll-to-description\" href=\"#description\">Overview</a></li>\r\n                            </ul>\r\n                          </nav>\r\n                        </header>\r\n                        <div className=\"uk-card-body\">\r\n                          <div className=\"uk-switcher js-product-switcher js-tabs\">\r\n                            <section>\r\n                              <article className=\"uk-article\">\r\n                                <div className=\"uk-article-body\">\r\n                                  <p>\r\n                                    {props.description}\r\n                                  </p>\r\n\r\n                                </div>\r\n                              </article>\r\n                            </section>\r\n                          </div>\r\n                        </div>\r\n                      </div> */}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {\r\n                  relatedProducts.length > 0 &&\r\n                  <QuickProductList productList={relatedProducts} />\r\n                }\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <div id=\"product-size-model\" uk-modal=\"true\">\r\n        <div className=\"uk-modal-dialog uk-modal-body uk-margin-auto-vertical size-chart-width\">\r\n          <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n          {\r\n            props.productCategoryName.toLowerCase() === 'footwear' &&\r\n            <>\r\n              <img className=\"uk-visible@s\" src=\"/footwear_size_chart.jpg\" alt=\"footwear-size-chart\" />\r\n              <img className=\"uk-hidden@s\" src=\"/footwear_size_chart_mobile_1.jpg\" alt=\"footwear-size-chart\" />\r\n              <img className=\"uk-hidden@s\" src=\"/footwear_size_chart_mobile_2.jpg\" alt=\"footwear-size-chart\" />\r\n            </>\r\n          }\r\n\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerProductDetails\r\n}","import React from 'react';\r\n\r\nconst CustomerProductDetailsLoading: React.FunctionComponent = () => {\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a href=\"#\">Home</a></li>\r\n                <li><span>Product</span></li>\r\n              </ul>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom\"></h1>\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n                <div>\r\n                  <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n                    <div className=\"uk-grid-small uk-grid-collapse uk-grid-match\" uk-grid=\"true\">\r\n                      <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n                        <div className=\"uk-grid-collapse uk-child-width-1-1\" uk-slideshow=\"finite: true; ratio: 4:3;\" uk-grid=\"true\">\r\n                          <div>\r\n                            {/* <div className=\"ph-item\">\r\n                            <div className=\"ph-col-12\">\r\n                              <div className=\"ph-picture-big\"></div>\r\n                            </div>\r\n                          </div> */}\r\n                            <ul className=\"uk-slideshow-items\" uk-lightbox=\"true\">\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"uk-card-body uk-flex uk-flex-center\">\r\n                              <div className=\"uk-width-1-2 uk-visible@s\">\r\n                                <div uk-slider=\"finite: true\">\r\n                                  <div className=\"uk-position-relative\">\r\n                                    <div className=\"uk-slider-container\">\r\n                                      <ul className=\"tm-slider-items uk-slider-items uk-child-width-1-4 uk-grid uk-grid-small loading-small-slider\">\r\n                                        <li uk-slideshow-item=\"0\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                        <li uk-slideshow-item=\"1\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                        <li uk-slideshow-item=\"2\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                        <li uk-slideshow-item=\"3\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                        <li uk-slideshow-item=\"4\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                      </ul>\r\n                                      {/* {\r\n                                        <div className=\"ph-item\">\r\n                                          <div className=\"ph-col-12\">\r\n                                            <div className=\"ph-picture\"></div>\r\n                                          </div>\r\n                                        </div>\r\n                                        // getFileNameAndPathSmall(imageNames, imagePaths)\r\n                                      } */}\r\n                                      <div>\r\n                                        <a className=\"uk-position-center-left-out uk-position-small\" href=\"#\" uk-slider-item=\"previous\" uk-slidenav-previous=\"true\"></a>\r\n                                        <a className=\"uk-position-center-right-out uk-position-small\" href=\"#\" uk-slider-item=\"next\" uk-slidenav-next=\"true\"></a>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <ul className=\"uk-slideshow-nav uk-dotnav uk-hidden@s\"></ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"uk-width-1-1 uk-width-1-3@m tm-product-info\">\r\n                        <div className=\"uk-card-body\">\r\n                          {/* <div className=\"uk-margin\">\r\n                            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                              <div><span className=\"uk-label uk-label-warning uk-margin-xsmall-right\">top selling</span><span className=\"uk-label uk-label-danger uk-margin-xsmall-right\">trade-in</span></div>\r\n                            </div>\r\n                          </div> */}\r\n                          <div className=\"uk-margin\">\r\n                            <div className=\"uk-padding-small uk-background-primary-lighten uk-border-rounded\">\r\n                              <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                                <div>\r\n                                  {/* <del className=\"uk-text-meta\">$1899.00</del> */}\r\n                                  <div className=\"tm-product-price\"></div>\r\n                                </div>\r\n                                <div>\r\n                                  <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                                    <div>\r\n                                      <a uk-icon=\"icon: minus; ratio: .75\"></a>\r\n                                      <input className=\"uk-input tm-quantity-input\" id=\"product-1\" type=\"text\" onChange={()=>{}} value=\"1\" />\r\n                                      <a uk-icon=\"icon: plus; ratio: .75\"></a>\r\n                                    </div>\r\n                                    <div><button className=\"uk-button uk-button-primary tm-product-add-button tm-shine js-add-to-cart\" disabled={true}>add to cart</button></div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"uk-margin\">\r\n                            <div className=\"uk-padding-small uk-background-muted uk-border-rounded\">\r\n                              <div className=\"uk-grid-small uk-child-width-1-1 uk-text-small\" uk-grid=\"true\">\r\n                                <div>\r\n                                  <div className=\"uk-grid-collapse\" uk-grid=\"true\">\r\n                                    <span className=\"uk-margin-xsmall-right\" uk-icon=\"cart\"></span>\r\n                                    <div>\r\n                                      <div className=\"uk-text-bolder\">Delivery</div>\r\n                                      <div className=\"uk-text-xsmall uk-text-muted\">In stock, free, tomorrow</div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div>\r\n                                  <div className=\"uk-grid-collapse\" uk-grid=\"true\">\r\n                                    <span className=\"uk-margin-xsmall-right\" uk-icon=\"location\"></span>\r\n                                    <div>\r\n                                      <div className=\"uk-text-bolder\">Pick up from store</div>\r\n                                      <div className=\"uk-text-xsmall uk-text-muted\">In stock, free, tomorrow</div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"uk-width-1-1 tm-product-description\" id=\"description\">\r\n                        <header>\r\n                          <nav className=\"tm-product-nav\" uk-sticky=\"offset: 60; bottom: #description; cls-active: tm-product-nav-fixed;\">\r\n                            <ul className=\"uk-subnav uk-subnav-pill js-product-switcher\" uk-switcher=\"connect: .js-tabs\">\r\n                              <li><a className=\"js-scroll-to-description\" href=\"#description\">Overview</a></li>\r\n                            </ul>\r\n                          </nav>\r\n                        </header>\r\n                        <div className=\"uk-card-body\">\r\n                          <div className=\"uk-switcher js-product-switcher js-tabs\">\r\n                            <section>\r\n                              <article className=\"uk-article\">\r\n                                <div className=\"uk-article-body\">\r\n                                  <p>\r\n\r\n                                  </p>\r\n\r\n                                </div>\r\n                              </article>\r\n                            </section>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerProductDetailsLoading\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProduct } from 'reducers/Product';\r\nimport { AppState, Cart, getRelatedProduct } from 'reducers';\r\nimport { ProductItem } from 'types';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { CustomerProductDetails } from './CustomerProductDetails';\r\nimport { CustomerProductDetailsLoading } from './CustomerProductDetailsLoading';\r\n\r\ninterface cartQuantity {\r\n  [key: string]: string;\r\n};\r\n\r\nconst CustomerProductDetailsConstainer: React.FunctionComponent = () => {\r\n\r\n  const { product, queryProductId } = useParams();\r\n  const [ mainSlider, setMainSlider] = useState<JSX.Element[] | undefined>(undefined);\r\n  const [ smallSlider, setSmallSlider] = useState<JSX.Element[] | undefined>(undefined);\r\n  const [cartProductQuantity, setCartProductQuantity] = useState<cartQuantity>({});\r\n  const [cartProductFlag, setCartProductFlag] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getProduct(Number(queryProductId)));\r\n  }, [queryProductId]);\r\n\r\n  const {\r\n    name, description, productCategoryId,\r\n    subCategory, quantity,\r\n    priceINR, priceUSD, productId, productCategoryName,\r\n    sizeId, size, colourId, imageNames, imagePaths, productDetailId,\r\n  } = useSelector<AppState, ProductItem>(state => state.product.singleData || {} as ProductItem);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n\r\n  useEffect(()=>{\r\n      if (imageNames && imagePaths && imageNames.length > 0 && imagePaths.length > 0) {\r\n        const imageName = imageNames.split(',');\r\n        const imagePath = imagePaths.split(',');\r\n  \r\n        setMainSlider(imagePath.map((path: string, index: number) => {\r\n          return <li key={index}>\r\n            <a className=\"uk-card-body tm-media-box tm-media-box-zoom\" href={serverImagePath + path}>\r\n              <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + path} alt={imageName[index]} /></figure>\r\n            </a>\r\n          </li>\r\n        }))\r\n\r\n        setSmallSlider(imagePath.map((path: string, index: number) => {\r\n          return <li uk-slideshow-item={index} tabIndex={-1} key={index}>\r\n            <div className=\"tm-ratio tm-ratio-1-1\">\r\n              <a className=\"tm-media-box tm-media-box-frame\" href=\"#\">\r\n                <figure className=\"tm-media-box-wrap\">\r\n                  <img src={serverImagePath + path} alt={imageName[index]} />\r\n                </figure>\r\n              </a>\r\n            </div>\r\n          </li>\r\n        }))\r\n      }\r\n  },[imageNames,imagePaths])\r\n\r\n  useEffect(()=>{\r\n    if(cart.data){\r\n      const cartProductCount = {} as cartQuantity;\r\n      cart.data.forEach(({productDetailId,productQuantity}) => {\r\n        cartProductCount[productDetailId] = productQuantity;\r\n      });\r\n      setCartProductQuantity(cartProductCount);\r\n      setCartProductFlag(true);\r\n    }\r\n  },[cart.data]);\r\n\r\n  useEffect(() => {\r\n    if(subCategory && queryProductId){\r\n      dispatch(getRelatedProduct(subCategory, Number(queryProductId)));\r\n    }\r\n  },[subCategory, queryProductId]);\r\n\r\n  return (\r\n    smallSlider && cartProductFlag  ? \r\n    <CustomerProductDetails \r\n      smallSlider={smallSlider}\r\n      mainSlider={mainSlider}\r\n      description={description || ''}\r\n      name={name || ''}\r\n      priceINR={priceINR || ''}\r\n      priceUSD={priceUSD || ''}\r\n      productCategoryName={productCategoryName || ''}\r\n      quantity={quantity || ''}\r\n      sizeId={sizeId || ''}\r\n      size={size || ''}\r\n      productId={productId || ''}\r\n      productDetailId={productDetailId || ''}\r\n      imageName={imageNames && imageNames.split(',')[0] || ''}\r\n      imagePath={imagePaths && imagePaths.split(',')[0] || ''}\r\n      cartProductQuantity={cartProductQuantity}\r\n      /> \r\n    : <CustomerProductDetailsLoading/>\r\n  )\r\n};\r\n\r\nexport {\r\n  CustomerProductDetailsConstainer\r\n}","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { getCart, AppState, Cart, deleteCartItem, addUpdateCart, UserLocation, validateCoupon, Coupon, updateCartQuantity } from 'reducers';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { CustomerCart } from 'types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getCurrencyIcon } from 'services';\r\n\r\n\r\ninterface Quantity {\r\n  [key: string]: string\r\n}\r\nconst CartDetails: React.FunctionComponent = () => {\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [quantity, setQuantity] = useState<Quantity>();\r\n  const [enteredCoupon, setEnteredCoupon] = useState('');\r\n  const [quantityCheckMessage, setQuantityCheckMessage] = useState('Getting your data.');\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const couponStatus = useSelector<AppState, Coupon>(state => state.coupon);\r\n  const [deboucedId, setDeboucedId] = useState('');\r\n  const [quantityChanged, setQuantityChanged] = useState(false);\r\n  const [quantityChangedProductId, setQuantityChangedProductId] = useState('');\r\n  const orderQuantityCheckButtonRef = useRef<HTMLButtonElement>(null);\r\n  const orderQuantityCheckModalRef = useRef<HTMLDivElement>(null);\r\n  \r\n\r\n  useEffect(() => {\r\n    dispatch(getCart());\r\n    if (couponStatus.data?.length === 1) {\r\n      setEnteredCoupon(couponStatus.data[0].code);\r\n    }\r\n  }, []);\r\n\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n\r\n  useEffect(() => {\r\n    let qt: Quantity = {};\r\n    if (cart.data && cart.data.length > 0) {\r\n      cart.data.forEach((product: CustomerCart) => {\r\n        qt[product.productDetailId] = product.productQuantity || '0';\r\n      });\r\n      setQuantity(qt);\r\n      checkForAvailableQuantity(cart.data)\r\n    }\r\n  }, [cart.data]);\r\n  const deleteCart = (cartItem: CustomerCart) => {\r\n    dispatch(deleteCartItem(cartItem,true));\r\n  };\r\n\r\n  const checkForAvailableQuantity = (cartData: CustomerCart[]) => {\r\n    const orderDetailId = cartData.map((cartItem) => {\r\n      if (Number(cartItem.availableQuantity) < Number(cartItem.productQuantity)) {\r\n        setQuantityChanged(true);\r\n        return cartItem.cartId\r\n      } else {\r\n        return 0\r\n      }\r\n    })\r\n    setQuantityChangedProductId(orderDetailId.toString());\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(quantityChanged){\r\n      orderQuantityCheckButtonRef.current?.click();\r\n      dispatch(updateCartQuantity(quantityChangedProductId));\r\n    }\r\n  },[quantityChanged])\r\n\r\n  useEffect(() => {\r\n    if(cart._quantityUpdate && orderQuantityCheckModalRef.current?.getBoundingClientRect().top !== 0) {\r\n      dispatch(getCart());\r\n      setQuantityCheckMessage('We updated your cart based on the product availability.');\r\n      setTimeout(() => {\r\n        orderQuantityCheckButtonRef.current?.click();\r\n      },5000)\r\n      \r\n    }\r\n  },[cart._quantityUpdate])\r\n\r\n  const updateCart = (cartId: string, quantity: string, productDetailId: string) => {\r\n    dispatch(addUpdateCart({\r\n      productDetailId,\r\n      productQuantity: quantity,\r\n      currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n      cartId,\r\n      productPrice: '',\r\n      productId: ''\r\n    }, true));\r\n  };\r\n\r\n  const updateQantity = (cartId: string, productDetailId: string, availableQuantity: string, isIncrement: boolean, changedQuantity?: string) => {\r\n    if (quantity) {\r\n      if (changedQuantity) {\r\n        let chqty = changedQuantity\r\n        if (Number(chqty) > Number(availableQuantity)) {\r\n          chqty = availableQuantity\r\n        }\r\n        const newQuantity = { ...quantity, ...{ [productDetailId]: chqty.toString() } };\r\n        setDeboucedId(cartId + '-' + window.setTimeout(() => {\r\n          updateCart(cartId, chqty.toString(), productDetailId)\r\n        }, 500).toString());\r\n        setQuantity(newQuantity);\r\n      } else if (isIncrement) {\r\n        let updatedQuantity = Number(quantity[productDetailId]) + 1;\r\n        if (updatedQuantity > Number(availableQuantity)) {\r\n          updatedQuantity = Number(availableQuantity)\r\n        }\r\n        const newQuantity = { ...quantity, ...{ [productDetailId]: updatedQuantity.toString() } };\r\n        setDeboucedId(cartId + '-' + window.setTimeout(() => {\r\n          updateCart(cartId, updatedQuantity.toString(), productDetailId)\r\n        }, 500).toString());\r\n        setQuantity(newQuantity);\r\n      } else {\r\n        let updatedQuantity = Number(quantity[productDetailId]) - 1;\r\n        if (updatedQuantity < 0) {\r\n          updatedQuantity = 0\r\n        }\r\n        const newQuantity = { ...quantity, ...{ [productDetailId]: updatedQuantity.toString() } };\r\n        setDeboucedId(cartId + '-' + window.setTimeout(() => {\r\n          updateCart(cartId, updatedQuantity.toString(), productDetailId)\r\n        }, 500).toString());\r\n        setQuantity(newQuantity);\r\n      }\r\n\r\n      if (deboucedId !== '' && deboucedId.split('-')[0] === cartId.toString()) {\r\n        window.clearTimeout(Number(deboucedId.split('-')[1]));\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkCouponValidity = () => {\r\n    dispatch(validateCoupon(enteredCoupon));\r\n  }\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <header className=\"uk-card-header uk-text-uppercase uk-text-muted uk-text-center uk-text-small uk-visible@m\">\r\n          <div className=\"uk-grid-small uk-child-width-1-2\" uk-grid=\"true\">\r\n            <div>product</div>\r\n            <div>\r\n              <div className=\"uk-grid-small uk-child-width-expand\" uk-grid=\"true\">\r\n                <div>price</div>\r\n                <div className=\"tm-quantity-column\">quantity</div>\r\n                <div>sum</div>\r\n                <div className=\"uk-width-auto\"><div style={{ width: \"20px\" }}></div></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        {\r\n          cart.data && cart.data.map((cartItem: CustomerCart, index: number) => {\r\n            return <div className=\"uk-card-body\" key={index}>\r\n              <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@m uk-flex-middle\" uk-grid=\"true\">\r\n                <div>\r\n                  <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                    <div className=\"uk-width-1-3\">\r\n                      <div className=\"tm-ratio tm-ratio-4-3\">\r\n                        <a className=\"tm-media-box\" onClick={() => history.push('/productDetails/' + cartItem.productId)}>\r\n                          <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + cartItem.productImagePath} alt='Apple MacBook Pro 15\" Touch Bar MPTU2LL/A 256GB (Silver)' /></figure>\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"uk-width-expand\">\r\n                      <div className=\"uk-text-meta\">{cartItem.subcategory}</div>\r\n                      <a className=\"uk-link-heading\" onClick={() => history.push('/productDetails/' + cartItem.productId)}>{cartItem.productName}</a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-expand@s uk-text-center\" uk-grid=\"true\">\r\n                    <div>\r\n                      <div className=\"uk-text-muted uk-hidden@m\">Price</div>\r\n                      <div>{getCurrencyIcon(userLocation.data || 'IN')} {cartItem.productPrice}</div>\r\n                    </div>\r\n                    <div>\r\n                      <label className=\"uk-text-center\">\r\n                        <div className=\"cart-quantity cart-margin-auto\">\r\n                          <div className=\"uk-inline\">\r\n                            <a className=\"uk-form-icon\" uk-icon=\"icon: minus\"\r\n                              onClick={() => {\r\n                                updateQantity(cartItem.cartId, cartItem.productDetailId, cartItem.availableQuantity || '0', false)\r\n                              }}>\r\n                            </a>\r\n                            <a className=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: plus\"\r\n                              onClick={() => {\r\n                                updateQantity(cartItem.cartId, cartItem.productDetailId, cartItem.availableQuantity || '0', true)\r\n                              }}>\r\n                            </a>\r\n                            <input className=\"uk-input uk-text-center\"\r\n                              type=\"number\"\r\n                              value={quantity && quantity[cartItem.productDetailId] || 0}\r\n                              onChange={(e) => {\r\n                                updateQantity(cartItem.cartId, cartItem.productDetailId, cartItem.availableQuantity || '0', false, e.currentTarget.value)\r\n                              }} />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"uk-form-label\"><span className=\"uk-text-meta uk-text-primary colour-default\">(Max {cartItem.availableQuantity})</span></div>\r\n                      </label>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <div className=\"uk-text-muted uk-hidden@m\">Sum</div>\r\n                      <div>{getCurrencyIcon(userLocation.data || 'IN')} {cartItem.totalPrice}</div>\r\n                    </div>\r\n                    <div className=\"uk-width-auto@s\">\r\n                      {cart._isLoading && <span uk-spinner=\"true\"></span>}\r\n                      {!cart._isLoading && <a className=\"uk-text-danger\" onClick={() => deleteCart(cartItem)} uk-tooltip=\"Remove\"><span uk-icon=\"trash\"></span></a>}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          })\r\n        }\r\n        <div className=\"uk-card-footer\">\r\n          <label>\r\n            <span className=\"uk-form-label uk-margin-small-right\">Promo Code</span>\r\n            <div className=\"uk-inline\">\r\n              <a className=\"uk-form-icon uk-form-icon-flip\" onClick={() => checkCouponValidity()} uk-icon=\"arrow-right\"></a>\r\n              <input className=\"uk-input uk-form-width-small\" type=\"text\"\r\n                value={enteredCoupon}\r\n                onChange={(e) => setEnteredCoupon(e.currentTarget.value)}\r\n              />\r\n            </div>\r\n            {couponStatus._isSuccess && <span className=\"login-error-message coupon-message uk-label uk-label-success\"><span uk-icon=\"check\"></span> Coupon is valid !</span>}\r\n            {couponStatus._isError && <span className=\"login-error-message coupon-message uk-label uk-label-danger\"><span uk-icon=\"ban\"></span> Coupon is Invalid.</span>}\r\n          </label>\r\n        </div>\r\n        <button ref={orderQuantityCheckButtonRef} id=\"payment-loading\" uk-toggle=\"target: #my-id\" type=\"button\"></button>\r\n        <div id=\"my-id\" uk-modal=\"true; esc-close: false; bg-close: false\">\r\n          <div className=\"uk-modal-dialog uk-modal-body uk-margin-auto-vertical\">\r\n            {\r\n              !cart._isLoading && <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n            }\r\n            <div ref={orderQuantityCheckModalRef}  className=\"uk-modal-body uk-nav-center\">\r\n              <p>{quantityCheckMessage}</p>\r\n              {\r\n                cart._isLoading && <div uk-spinner=\"true\"></div>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport {\r\n  CartDetails\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState, Cart, UserLocation } from 'reducers';\r\nimport { CustomerCart, ProductCoupon } from 'types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getCurrencyIcon, calculateUserDiscountPrice, calculateUserDiscount } from 'services';\r\n\r\nconst CartPrice: React.FunctionComponent = () => {\r\n\r\n  const [cartTotal, setCartTotal] = useState(0);\r\n  const [userDiscountTotal, setUserDiscountTotal] = useState('0');\r\n  const [userCouponTotal, setUserCouponTotal] = useState('0');\r\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState('0');\r\n  const [discountedTotal, setDiscountedTotal] = useState('0');\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const couponData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (cart.data && cart.data.length > 0) {\r\n      let total = 0;\r\n      cart.data.forEach((cart: CustomerCart) => {\r\n        if (cart.totalPrice) {\r\n          total += Number(cart.totalPrice);\r\n        }\r\n      });\r\n      setCartTotal(total);\r\n      if (couponData.length === 1) {\r\n        let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', total.toString());\r\n        let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', total.toString());\r\n        let couponPrice = calculateUserDiscountPrice(couponData[0].value, priceAfterDiscount.toString());\r\n        let priceAfterCoupon = calculateUserDiscount(couponData[0].value || '0', priceAfterDiscount.toString());\r\n        setDiscountedTotal(priceAfterDiscount);\r\n        setUserDiscountTotal(discountPrice);\r\n        setUserCouponTotal(couponPrice);\r\n        setTotalAfterDiscount(priceAfterCoupon);\r\n      } else {\r\n        let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', total.toString());\r\n        let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', total.toString());\r\n        setUserDiscountTotal(discountPrice);\r\n        setTotalAfterDiscount(priceAfterDiscount);\r\n      }\r\n    } else {\r\n      setCartTotal(0);\r\n      setUserDiscountTotal('0');\r\n      setTotalAfterDiscount('0');\r\n      setDiscountedTotal('0');\r\n      setUserCouponTotal('0');\r\n    }\r\n  }, [cart.data,couponData]);\r\n\r\n  return (\r\n    <div className=\"uk-width-1-1 tm-aside-column uk-width-1-4@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\" uk-sticky=\"offset: 30; bottom: true; media: @m;\">\r\n        {\r\n          (userData.data?.discount && userData.data?.discount !== '0' || couponData.length === 1 ) &&\r\n          <div className=\"uk-card-body\">\r\n            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand uk-text-muted\">Subtotal</div>\r\n              <div>{getCurrencyIcon(userLocation.data || 'IN')} {cartTotal}</div>\r\n            </div>\r\n            {\r\n              userData.data?.discount && userData.data?.discount !== '0' &&\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand uk-text-muted\">Discount ({userData.data?.discount}%)</div>\r\n              <div className=\"uk-text-danger\">− {getCurrencyIcon(userLocation.data || 'IN')} {userDiscountTotal}</div>\r\n            </div>\r\n            }\r\n            \r\n          </div>\r\n        }\r\n        {\r\n          couponData.length === 1 &&\r\n          <div className=\"uk-card-body\">\r\n            {\r\n              userData.data?.discount && userData.data?.discount !== '0' &&\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand uk-text-muted\">Discounted Total</div>\r\n                <div>{getCurrencyIcon(userLocation.data || 'IN')} {discountedTotal}</div>\r\n              </div>\r\n            }\r\n\r\n            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand uk-text-muted\">Coupon ({couponData[0] && couponData[0].value}%)</div>\r\n              <div className=\"uk-text-danger\">− {getCurrencyIcon(userLocation.data || 'IN')} {userCouponTotal}</div>\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n            <div className=\"uk-width-expand uk-text-muted\">Total</div>\r\n            <div className=\"uk-text-lead uk-text-bolder\">{getCurrencyIcon(userLocation.data || 'IN')} {totalAfterDiscount}</div>\r\n          </div>\r\n          <button className=\"uk-button uk-button-primary uk-margin-small uk-width-1-1\"\r\n            disabled={cartTotal === 0}\r\n            onClick={() => { history.push('/checkout') }}\r\n          >\r\n            checkout\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  CartPrice\r\n}","import React from 'react';\r\nimport { CartDetails } from './CartDetails';\r\nimport { CartPrice } from './CartPrice';\r\n\r\nconst CustomerCartContainer: React.FunctionComponent = () => {\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a href=\"index.html\">Home</a></li>\r\n                <li><span>Cart</span></li>\r\n              </ul>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom\">Cart</h1>\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n                <CartDetails/>\r\n                <CartPrice/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport {\r\n  CustomerCartContainer\r\n}","import React, { useState, useEffect, useRef, Dispatch, SetStateAction } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, Cart, getRazorPayOrder, saveRazorPayOrder, getCart, errorCheckout, getCodOrder, saveCodOrder, UserLocation, defaultCheckout, setShippingPrice } from 'reducers';\r\nimport { CustomerCart, ProductCoupon, CustomerShippment } from 'types';\r\nimport { PayPalButton, PayPalPayment, CashOnDeliveryPayment } from 'components/shared';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getCurrencyIcon, calculateUserDiscountPrice, calculateUserDiscount } from 'services';\r\n\r\ninterface Props {\r\n  paymentMode: string;\r\n  shippingType: string;\r\n  setCartTotal: Dispatch<SetStateAction<number>>;\r\n};\r\ndeclare global {\r\n  interface Window { Razorpay: any; }\r\n}\r\nwindow.Razorpay = window.Razorpay || {};\r\n\r\nconst CheckoutPrice: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [cartTotalPrice, setCartTotalPrice] = useState(0);\r\n  const [userDiscountTotal, setUserDiscountTotal] = useState('0');\r\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState('0');\r\n  const [userCouponTotal, setUserCouponTotal] = useState('0');\r\n  const [discountedTotal, setDiscountedTotal] = useState('0');\r\n  const [priceAfterShipping, setPriceAfterShipping] = useState('0');\r\n  const [quantityCount, setQuantityCount] = useState(0);\r\n  const [cartOrderId, setCartOrderId] = useState(0);\r\n  const [paymentMessage, setPaymentMessage] = useState(\"Please don't close this window while we process your payment.\")\r\n  const [paymentError, setPaymentError] = useState(false);\r\n  const [paymentSuccess, setPaymentSuccess] = useState(false);\r\n  const [errorHappendAt, setErrorHappendAt] = useState('close');\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n  const checkout = useSelector((state: AppState) => state.checkout);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const couponData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);\r\n  const shippingCost = useSelector<AppState, CustomerShippment>(state => state.customerShippment.data || {} as CustomerShippment);\r\n  const paymentLoadingRef = useRef<HTMLButtonElement>(null);\r\n  const [containerIsCard, setContainerIsCard] = useState(false);\r\n  const [ukSticky, setUkSicky] = useState({});\r\n  const [showCodContainer, setShowCodContainer] = useState(false);\r\n  const [noAddressError, setNoAddressError] = useState(false);\r\n  const [enteredOTP, setEnteredOTP] = useState('');\r\n  const [didPriceChanged, setDidPriceChanged] = useState(false);\r\n  const [timeForShowPriceChange, setTimeForShowPriceChange] = useState(5);\r\n  let timer: NodeJS.Timer;\r\n\r\n  useEffect(() => {\r\n    let cartPrice = 0;\r\n    if (cart.data && cart.data.length > 0) {\r\n      cart.data.forEach(({ totalPrice }) => {\r\n        cartPrice += Number(totalPrice)\r\n      });\r\n      setCartTotalPrice(cartPrice);\r\n      props.setCartTotal(cartPrice);\r\n      if (couponData.length === 1) {\r\n        let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString());\r\n        let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString());\r\n        let couponPrice = calculateUserDiscountPrice(couponData[0].value, priceAfterDiscount.toString());\r\n        let priceAfterCoupon = calculateUserDiscount(couponData[0].value || '0', priceAfterDiscount.toString());\r\n        setDiscountedTotal(priceAfterDiscount);\r\n        setUserDiscountTotal(discountPrice);\r\n        setUserCouponTotal(couponPrice);\r\n        setTotalAfterDiscount(priceAfterCoupon);\r\n        calculateShippingCost(cart.data, priceAfterCoupon);\r\n\r\n      } else {\r\n        let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString());\r\n        let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString());\r\n        setUserDiscountTotal(discountPrice);\r\n        setTotalAfterDiscount(priceAfterDiscount);\r\n        calculateShippingCost(cart.data, priceAfterDiscount);\r\n      }\r\n      setCartOrderId(Number(cart.data[0].orderId));\r\n    } else {\r\n      setCartTotalPrice(0);\r\n      setUserDiscountTotal('0');\r\n      setTotalAfterDiscount('0');\r\n      setPriceAfterShipping('0')\r\n      props.setCartTotal(0);\r\n    }\r\n    if (didPriceChanged) {\r\n      setDidPriceChanged(false);\r\n      if (timeForShowPriceChange === 0) {\r\n        paymentLoadingRef.current?.click();\r\n      } else {\r\n        clearTimeout(timer);\r\n        timer = setTimeout(() => {\r\n          paymentLoadingRef.current?.click();\r\n          clearTimeout(timer);\r\n        }, 5000)\r\n      }\r\n    }\r\n  }, [cart.data, userData.data, props.shippingType]);\r\n\r\n  useEffect(() => {\r\n    if (userLocation.data === 'IN') {\r\n      if (checkout.data && checkout.data.orderId && props.paymentMode === 'online') {\r\n        const {\r\n          key,\r\n          currency,\r\n          orderId,\r\n          name\r\n        } = checkout.data\r\n        var options = {\r\n          \"key\": key,\r\n          \"currency\": currency,\r\n          \"name\": name,\r\n          \"description\": \"\",\r\n          \"order_id\": orderId,\r\n          \"handler\": function (response: any) {\r\n            paymentLoadingRef.current?.click();\r\n            successRazorPay(response.razorpay_payment_id, response.razorpay_order_id, response.razorpay_signature)\r\n          },\r\n          \"modal\": {\r\n            \"ondismiss\": function () {\r\n              setPaymentError(true);\r\n              dispatch(errorCheckout(''));\r\n            }\r\n          },\r\n          \"prefill\": {\r\n            \"name\": userData.data?.firstName || '' + userData.data?.lastName,\r\n            \"email\": userData.data?.emailAddress,\r\n            \"contact\": userData.data?.mobile\r\n          },\r\n          \"notes\": {\r\n            \"address\": \"Razorpay Corporate Office\"\r\n          },\r\n          \"theme\": {\r\n            \"color\": \"#F37254\"\r\n          }\r\n        };\r\n        var rzp1 = new window.Razorpay(options);\r\n        rzp1.on('payment.failed', function (response: any) {\r\n          setErrorHappendAt('failed');\r\n          console.log('code', response.error.code);\r\n          console.log('desc', response.error.description);\r\n          console.log('source', response.error.source);\r\n          console.log('step', response.error.step);\r\n          console.log('reason', response.error.reason);\r\n          console.log('metadata', response.error.metadata);\r\n        });\r\n        rzp1.open();\r\n      } else if (checkout.data && checkout.data.otp && props.paymentMode === 'cod') {\r\n        setShowCodContainer(true);\r\n      }\r\n    }\r\n  }, [checkout.data]);\r\n\r\n  useEffect(() => {\r\n    if (checkout._priceChanged && (props.paymentMode === 'online' || props.paymentMode === 'cod')) {\r\n      setPaymentMessage(checkout.message || '');\r\n      dispatch(getCart());\r\n      paymentLoadingRef.current?.click();\r\n      setDidPriceChanged(true);\r\n      timer = setInterval(() => {\r\n        if (timeForShowPriceChange > 0) {\r\n          setTimeForShowPriceChange(timeForShowPriceChange - 1);\r\n        }\r\n      }, 1000);\r\n    }\r\n  }, [checkout._priceChanged]);\r\n\r\n  useEffect(() => {\r\n    if (paymentError && props.paymentMode === 'online') {\r\n      if (errorHappendAt === 'failed') {\r\n        setPaymentMessage('Payment failure from Razorpay, please try again.');\r\n        paymentLoadingRef.current?.click();\r\n      } else if (errorHappendAt === 'close') {\r\n        setPaymentMessage('Payment incomplete, please try again.');\r\n        paymentLoadingRef.current?.click();\r\n      }\r\n    }\r\n  }, [paymentError]);\r\n\r\n  useEffect(() => {\r\n    if (checkout._isPaymentSucceess &&\r\n      (props.paymentMode === 'online' || props.paymentMode === 'cod')) {\r\n      setPaymentMessage('Payment is successful !!');\r\n      setPaymentSuccess(true);\r\n      setPaymentError(false);\r\n      dispatch(getCart());\r\n      setShowCodContainer(false);\r\n      setTimeout(() => {\r\n        dispatch(defaultCheckout());\r\n        paymentLoadingRef.current?.click();\r\n        history.push('userinformation/orders');\r\n      }, 5000);\r\n    }\r\n  }, [checkout._isPaymentSucceess]);\r\n\r\n  useEffect(() => {\r\n    if (!paymentError) {\r\n      if (checkout._isError && props.paymentMode === 'online') {\r\n        setPaymentMessage(checkout.message || '');\r\n        setPaymentSuccess(false);\r\n        setPaymentError(true);\r\n        setErrorHappendAt('DB');\r\n      } else if (checkout._isError && props.paymentMode === 'cod') {\r\n        setPaymentMessage(checkout.message || '');\r\n        setPaymentSuccess(false);\r\n        setPaymentError(true);\r\n        setShowCodContainer(true);\r\n      }\r\n    }\r\n  }, [checkout._isError])\r\n\r\n  const successRazorPay = (razorpayPaymentId: string, razorpayOrderId: string, razorpaySignature: string) => {\r\n    dispatch(saveRazorPayOrder({\r\n      razorpayPaymentId,\r\n      razorpayOrderId,\r\n      razorpaySignature,\r\n      orderId: cartOrderId,\r\n      orderNumber: checkout.data && checkout.data.receipt || '',\r\n      addressId: userData.data && userData.data.addressId || '',\r\n      couponId: couponData && couponData[0] && couponData[0].couponId\r\n    }));\r\n  }\r\n  const proceedWithPayment = () => {\r\n    if(userData.data?.addressId){\r\n      if (props.paymentMode === 'online') {\r\n        setPaymentError(false);\r\n        dispatch(getRazorPayOrder(totalAfterDiscount.toString(), cartOrderId, couponData && couponData[0] && couponData[0].couponId))\r\n      } else if (props.paymentMode === 'cod') {\r\n        setPaymentError(false);\r\n        dispatch(getCodOrder(totalAfterDiscount.toString(), cartOrderId, couponData && couponData[0] && couponData[0].couponId));\r\n      }\r\n    } else{\r\n      setNoAddressError(true);\r\n      setTimeout(() => {\r\n        setNoAddressError(false);\r\n      },3000) \r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (containerIsCard) {\r\n      setUkSicky({});\r\n    } else {\r\n      setUkSicky({\r\n        'uk-sticky': \"offset: 60; bottom: true; media: @m;\"\r\n      })\r\n    }\r\n  }, [containerIsCard])\r\n\r\n  const successCod = () => {\r\n    dispatch(saveCodOrder({\r\n      otp: enteredOTP,\r\n      orderId: cartOrderId,\r\n      addressId: userData.data && userData.data.addressId || '',\r\n      couponId: couponData && couponData[0] && couponData[0].couponId\r\n    }));\r\n    setPaymentMessage(\"Please don't close this window while we process your payment.\");\r\n    setPaymentSuccess(false);\r\n    setPaymentError(false);\r\n    paymentLoadingRef.current?.click();\r\n  }\r\n\r\n  const calculateShippingCost = (cartData: CustomerCart[], totalAfterDiscount: string) => {\r\n    let itemCount = cartData.reduce((accumulator, cart) => ({ 'productQuantity': (Number(accumulator.productQuantity) + Number(cart.productQuantity)).toString() } as CustomerCart));\r\n    setQuantityCount(Number(itemCount.productQuantity));\r\n    if (props.shippingType === 'standard') {\r\n      if (Number(itemCount.productQuantity) > 1) {\r\n        const cost = (10 + ((Number(itemCount.productQuantity) - 1) * 6));\r\n        dispatch(setShippingPrice({ 'shippmentPrice': cost.toString() } as CustomerShippment));\r\n        setPriceAfterShipping((Number(totalAfterDiscount) + cost).toString());\r\n      } else {\r\n        dispatch(setShippingPrice({ 'shippmentPrice': '10' } as CustomerShippment));\r\n        setPriceAfterShipping((Number(totalAfterDiscount) + 10).toString());\r\n      }\r\n    } else {\r\n      if (Number(itemCount.productQuantity) > 1) {\r\n        const cost = (18 + ((Number(itemCount.productQuantity) - 1) * 10));\r\n        dispatch(setShippingPrice({ 'shippmentPrice': cost.toString() } as CustomerShippment));\r\n        setPriceAfterShipping((Number(totalAfterDiscount) + cost).toString());\r\n      } else {\r\n        dispatch(setShippingPrice({ 'shippmentPrice': '18' } as CustomerShippment));\r\n        setPriceAfterShipping((Number(totalAfterDiscount) + 18).toString());\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"uk-width-1-1 uk-width-1-4@m tm-aside-column\">\r\n\r\n        <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\"\r\n          {\r\n          ...(\r\n            ukSticky\r\n          )\r\n          }\r\n        >\r\n          <section className=\"uk-card-body\">\r\n            <h4>Items in order</h4>\r\n            {\r\n              cart.data && cart.data.map((cartItem: CustomerCart, index: number) => {\r\n                return (\r\n                  <div key={index} className=\"uk-grid-small\" uk-grid=\"true\">\r\n                    <div className=\"uk-width-expand\">\r\n                      <div className=\"uk-text-small\">{cartItem.productName}</div>\r\n                      <div className=\"uk-text-meta\">{cartItem.productQuantity} × {getCurrencyIcon(userLocation.data || 'IN')} {cartItem.productPrice}</div>\r\n                    </div>\r\n                    <div className=\"uk-text-right\"><div>{getCurrencyIcon(userLocation.data || 'IN')} {cartItem.totalPrice}</div></div>\r\n                  </div>\r\n                )\r\n              })\r\n            }\r\n          </section>\r\n          {\r\n            userData.data?.discount && userData.data?.discount !== '0' &&\r\n            <section className=\"uk-card-body\">\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Subtotal</div></div>\r\n                <div className=\"uk-text-right\"><div>{getCurrencyIcon(userLocation.data || 'IN')} {cartTotalPrice || 0}</div></div>\r\n              </div>\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Discount ({userData.data?.discount}%)</div></div>\r\n                <div className=\"uk-text-right\"><div className=\"uk-text-danger\">- {getCurrencyIcon(userLocation.data || 'IN')} {userDiscountTotal}</div></div>\r\n              </div>\r\n            </section>\r\n\r\n          }\r\n          {\r\n            couponData.length === 1 &&\r\n            <section className=\"uk-card-body\">\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Discounted Total</div></div>\r\n                <div className=\"uk-text-right\"><div>{getCurrencyIcon(userLocation.data || 'IN')} {discountedTotal}</div></div>\r\n              </div>\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Coupon ({couponData[0] && couponData[0].value}%)</div></div>\r\n                <div className=\"uk-text-right\"><div className=\"uk-text-danger\">- {getCurrencyIcon(userLocation.data || 'IN')} {userCouponTotal}</div></div>\r\n              </div>\r\n            </section>\r\n          }\r\n          {\r\n            userLocation.data !== 'IN' &&\r\n            <section className=\"uk-card-body\">\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Subtotal</div></div>\r\n                <div className=\"uk-text-right\"><div>{getCurrencyIcon(userLocation.data || 'IN')} {totalAfterDiscount}</div></div>\r\n              </div>\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Shipping</div></div>\r\n                <div className=\"uk-text-right\"><div className=\"uk-text-success\">+ {getCurrencyIcon(userLocation.data || 'IN')} {shippingCost.shippmentPrice}</div></div>\r\n              </div>\r\n            </section>\r\n          }\r\n\r\n          {\r\n            showCodContainer &&\r\n            <CashOnDeliveryPayment showOtpContainer={showCodContainer} setEnteredOTP={setEnteredOTP} />\r\n          }\r\n          <section className=\"uk-card-body\">\r\n            {\r\n              <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Total</div></div>\r\n                {\r\n                  userLocation.data === 'IN' ?\r\n                    <div className=\"uk-text-right\"><div className=\"uk-text-lead uk-text-bolder\">{getCurrencyIcon(userLocation.data || 'IN')} {totalAfterDiscount}</div></div>\r\n                    : <div className=\"uk-text-right\"><div className=\"uk-text-lead uk-text-bolder\">{getCurrencyIcon(userLocation.data || 'IN')} {priceAfterShipping}</div></div>\r\n                }\r\n\r\n              </div>\r\n            }\r\n\r\n            {\r\n              props.paymentMode === 'paypal' &&\r\n              cartTotalPrice !== 0 &&\r\n              <PayPalPayment\r\n                cartTotalPrice={totalAfterDiscount}\r\n                cartTotalWithShipping={priceAfterShipping}\r\n                quantityCount={quantityCount}\r\n                isStandard={props.shippingType === 'standard'}\r\n                paymentMode={props.paymentMode}\r\n                setContainerIsCard={setContainerIsCard}\r\n                cartOrderId={cartOrderId} />\r\n            }\r\n            {\r\n              noAddressError && \r\n              <div className=\"login-error-message\">\r\n                    <span className=\"uk-notification-message-danger\"> Please add conatct and shipping information </span>\r\n              </div>\r\n            }\r\n            {\r\n              props.paymentMode !== 'paypal' && !showCodContainer &&\r\n              <>\r\n              {\r\n                  !checkout._isFetchCodCodeSuccess && checkout._isError &&\r\n                  <div className=\"login-error-message\">\r\n                    <span className=\"uk-notification-message-danger\"> {checkout.message} </span>\r\n                  </div>\r\n                }\r\n                <button\r\n                  disabled={checkout._isLoading || cartTotalPrice === 0}\r\n                  className=\"uk-button uk-button-primary uk-margin-small uk-width-1-1\"\r\n                  onClick={() => proceedWithPayment()}\r\n                >{checkout._isLoading && <div uk-spinner=\"true\"></div>}\r\n              checkout</button>\r\n                \r\n              </>\r\n            } {\r\n              showCodContainer &&\r\n              <button className=\"uk-button uk-button-primary uk-margin-small uk-width-1-1\"\r\n                disabled={checkout._isLoading || cartTotalPrice === 0}\r\n                onClick={() => { checkout._isFetchCodCodeSuccess ? successCod() : proceedWithPayment() }}>\r\n                {checkout._isFetchCodCodeSuccess ? 'Place Order' : 'Checkout'}\r\n              </button>\r\n            }\r\n          </section>\r\n        </div>\r\n      </div>\r\n      {\r\n        props.paymentMode !== 'paypal' && \r\n        <>\r\n        <button ref={paymentLoadingRef} id=\"payment-loading\" uk-toggle=\"target: #my-id\" type=\"button\"></button>\r\n      <div id=\"my-id\" uk-modal=\"true; esc-close: false; bg-close: false\">\r\n        <div className=\"uk-modal-dialog uk-modal-body uk-margin-auto-vertical\">\r\n          {\r\n            (paymentSuccess || paymentError) && <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n          }\r\n          <div className=\"uk-modal-body uk-nav-center\">\r\n            <p>{paymentMessage}</p>\r\n            {\r\n              !paymentSuccess && !paymentError && <div uk-spinner=\"true\"></div>\r\n            }\r\n            {\r\n              paymentSuccess && !paymentError &&\r\n              <>\r\n                <span className=\"uk-label uk-label-success\">Redirecting to Orders <div uk-spinner=\"true\"></div></span>\r\n              </>\r\n            }\r\n            {\r\n              paymentError && <span className=\"uk-label uk-label-danger\">Payment Failed</span>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n        </>\r\n      }\r\n      \r\n    </>\r\n  )\r\n};\r\n\r\nexport {\r\n  CheckoutPrice\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { UserInformation } from 'components/user';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, UserLocation, getUser } from 'reducers';\r\nimport { CheckoutPrice } from './CheckoutPrice';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst CheckoutContainer: React.FunctionComponent = () => {\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [paymentMode, setPaymentMode] = useState('online');\r\n  const [cartTotal, setCartTotal] = useState(0);\r\n  const [internationalShipping,setInternationalShipping] = useState('standard');\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n\r\n  useEffect(() => {\r\n    if (userLocation.data === 'USD') {\r\n      setPaymentMode('paypal');\r\n    }\r\n  }, [userLocation.data]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getUser());\r\n  },[])\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <section className=\"uk-text-center\">\r\n              <a className=\"uk-link-muted uk-text-small\" onClick={()=> history.push('/cart')}><span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: arrow-left; ratio: .75;\"></span>Return to cart</a>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom\">Checkout</h1>\r\n            </section>\r\n            <section>\r\n              <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n                <div className=\"uk-form-stacked uk-width-1-1 tm-checkout uk-width-expand@m\">\r\n                  <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n                    <section>\r\n                      <h2 className=\"tm-checkout-title\">Contact And Shipping Information</h2>\r\n                      <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n                        <UserInformation user={userData} fromCart={true} />\r\n                      </div>\r\n                    </section>\r\n                    {\r\n                      userLocation.data === 'IN' &&\r\n                      <section>\r\n                        <h2 className=\"tm-checkout-title\">Payment</h2>\r\n                        <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n                          <div className=\"uk-card-body\">\r\n                            <div className=\"uk-grid-small uk-grid-match uk-child-width-1-1 uk-child-width-1-2@s uk-flex-center\" uk-switcher=\"toggle: &gt; * &gt; .tm-choose\" uk-grid=\"true\">\r\n                              <div onClick={() => setPaymentMode('online')}>\r\n                                <a className={paymentMode === \"online\" ? \"tm-choose uk-active\" : \"tm-choose\"} href=\"#\">\r\n                                  <div className=\"tm-choose-title\">Online (via Razorpay)</div>\r\n                                  <div className=\"tm-choose-description\">Visa, MasterCard, all Other Cards</div>\r\n                                </a>\r\n                              </div>\r\n                              <div onClick={() => setPaymentMode('cod')}>\r\n                                <a className={paymentMode === \"cod\" ? \"tm-choose uk-active\" : \"tm-choose\"} href=\"#\">\r\n                                  <div className=\"tm-choose-title\">Cash On Delivery</div>\r\n                                  <div className=\"tm-choose-description\">Order now pay later</div>\r\n                                </a>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      </section>\r\n                    }\r\n                    {\r\n                      userLocation.data !== 'IN' &&\r\n                      <section>\r\n                        <h2 className=\"tm-checkout-title\">Shippment</h2>\r\n                        <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n                          <div className=\"uk-card-body\">\r\n                            <div className=\"uk-grid-small uk-grid-match uk-child-width-1-1 uk-child-width-1-2@s uk-flex-center\" uk-switcher=\"toggle: &gt; * &gt; .tm-choose\" uk-grid=\"true\">\r\n                              <div onClick={()=>setInternationalShipping('standard')}>\r\n                                <a className={internationalShipping === \"standard\" ? \"tm-choose uk-active\" : \"tm-choose\"} href=\"#\">\r\n                                  <div className=\"tm-choose-title\">Standard</div>\r\n                                  <div className=\"tm-choose-description\">India Post</div>\r\n                                  <div className=\"tm-choose-description\">Shipping cost $10 first item then $6 on every additional item.</div>\r\n                                </a>\r\n                              </div>\r\n                              <div onClick={()=>setInternationalShipping('express')}>\r\n                                <a className={internationalShipping === \"express\" ? \"tm-choose uk-active\" : \"tm-choose\"} href=\"#\">\r\n                                  <div className=\"tm-choose-title\">Express</div>\r\n                                  <div className=\"tm-choose-description\">Blue Dart/Fedex/DHL/Others</div>\r\n                                  <div className=\"tm-choose-description\">Shipping cost $18 first item then $10 on every additional item.</div>\r\n                                </a>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      </section>\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <CheckoutPrice paymentMode={paymentMode} shippingType={internationalShipping} setCartTotal={setCartTotal} />\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  CheckoutContainer\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst SubBanner: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <section className=\"uk-section uk-section-default uk-section-small\">\r\n      <div className=\"uk-container\">\r\n        <div className=\"uk-grid-small uk-child-width-1-2 uk-child-width-1-3@s uk-child-width-1-5@m\" uk-grid=\"true\">\r\n          <div>\r\n            <a onClick={()=>history.push('/product/bindi')} className=\"uk-link-muted uk-text-center uk-display-block uk-padding-small uk-box-shadow-hover-large\">\r\n              <div className=\"tm-ratio tm-ratio-4-3\">\r\n                <div className=\"tm-media-box\">\r\n                  <figure className=\"tm-media-box-wrap\"><img className=\"item-brand\" src=\"/sb_2.png\" alt=\"footwear\" /></figure>\r\n                </div>\r\n              </div>\r\n              <div className=\"uk-margin-small-top\">\r\n                <div className=\"uk-text-truncate\">Bindi</div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <a onClick={()=>history.push('/product/footwear')}  className=\"uk-link-muted uk-text-center uk-display-block uk-padding-small uk-box-shadow-hover-large\" >\r\n              <div className=\"tm-ratio tm-ratio-4-3\">\r\n                <div className=\"tm-media-box\">\r\n                  <figure className=\"tm-media-box-wrap\"><img className=\"item-brand\" src=\"/sb_1.png\" alt=\"Bindi\" /></figure>\r\n                </div>\r\n              </div>\r\n              <div className=\"uk-margin-small-top\">\r\n                <div className=\"uk-text-truncate\">Footwear</div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <a className=\"uk-link-muted uk-text-center uk-display-block uk-padding-small uk-box-shadow-hover-large\" href=\"#\">\r\n              <div className=\"tm-ratio tm-ratio-4-3\">\r\n                <div className=\"tm-media-box\">\r\n                  <figure className=\"tm-media-box-wrap\"><img className=\"item-brand\" src=\"/sb_3.png\" alt=\"Accessories\" /></figure>\r\n                </div>\r\n              </div>\r\n              <div className=\"uk-margin-small-top\">\r\n                <div className=\"uk-text-truncate\">Homedecore</div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <a onClick={()=>history.push('/product/lingerie')}  className=\"uk-link-muted uk-text-center uk-display-block uk-padding-small uk-box-shadow-hover-large\">\r\n              <div className=\"tm-ratio tm-ratio-4-3\">\r\n                <div className=\"tm-media-box\">\r\n                  <figure className=\"tm-media-box-wrap\"><img className=\"item-brand\" src=\"/sb_4.png\" alt=\"Home Decor\" /></figure>\r\n                </div>\r\n              </div>\r\n              <div className=\"uk-margin-small-top\">\r\n                <div className=\"uk-text-truncate\">Lingerie</div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <a className=\"uk-link-muted uk-text-center uk-display-block uk-padding-small uk-box-shadow-hover-large\" href=\"#\">\r\n              <div className=\"tm-ratio tm-ratio-4-3\">\r\n                <div className=\"tm-media-box\">\r\n                  <figure className=\"tm-media-box-wrap\"><img className=\"item-brand\" src=\"/test.jpg\" alt=\"Home Decor\" /></figure>\r\n                </div>\r\n              </div>\r\n              <div className=\"uk-margin-small-top\">\r\n                <div className=\"uk-text-truncate\">Cosmetics</div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport {\r\n  SubBanner\r\n}","import React from 'react';\r\n\r\nconst Banner: React.FunctionComponent = () => {\r\n  return (\r\n    <section className=\"uk-position-relative uk-visible-toggle uk-light\" uk-slideshow=\"ratio: 8.2:3; min-height:175\">\r\n      <ul className=\"uk-slideshow-items\">\r\n        <li style={{ backgroundColor: \"#0b0a12\" }}>\r\n          <a>\r\n            <figure className=\"uk-container uk-height-1-1\"><img src=\"/banner_first.jpg\" alt=\"New Macbook\"  uk-cover=\"true\" /></figure>\r\n          </a>\r\n        </li>\r\n        <li style={{ backgroundColor: \"#0b0a12\" }}>\r\n          <a>\r\n            <figure className=\"uk-container uk-height-1-1\"><img src=\"/banner_two.jpg\" alt=\"New Macbook\"  uk-cover=\"true\" /></figure>\r\n          </a>\r\n        </li>\r\n        <li style={{ backgroundColor: \"#ce071e;\" }}>\r\n          <a>\r\n            <figure className=\"uk-container uk-height-1-1\"><img src=\"/banner_three.jpg\" alt=\"iPhone\"  uk-cover=\"true\" /></figure>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <a className=\"uk-position-center-left uk-position-small uk-hidden-hover\" uk-slideshow-item=\"previous\" uk-slidenav-previous=\"true\"></a>\r\n      <a className=\"uk-position-center-right uk-position-small uk-hidden-hover\" uk-slideshow-item=\"next\" uk-slidenav-next=\"true\"></a>\r\n      <div className=\"uk-position-bottom-center uk-position-small\"><ul className=\"uk-slideshow-nav uk-dotnav\"></ul></div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport {\r\n  Banner\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppState, UserLocation, Cart, addUpdateCart } from 'reducers';\r\nimport { ProductItem, CustomerCart } from 'types';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { getCurrencyIcon, calculateUserDiscount, showINRUSD } from 'services';\r\nimport { LoadingProductArticle } from 'components/shared';\r\n\r\n\r\ninterface Props {\r\n  productList: ProductItem[]\r\n}\r\n\r\nconst TrendingLatestProducts: React.FunctionComponent<Props> = (props: Props) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n\r\n  const addToCart = (product: ProductItem) => {\r\n    if(!userData.data?.userId){\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: product.productDetailId,\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: showINRUSD(userLocation.data || 'IN', product),\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, false))\r\n    } else {\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: '0',\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: '0',\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, true));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"uk-grid-collapse uk-child-width-custom tm-products-grid\" uk-grid=\"true\">\r\n      {\r\n        props.productList.length > 0 ?\r\n        props.productList.map((product) => {\r\n          return (\r\n            <article key={product.productId} className=\"tm-product-card\">\r\n              <div className=\"tm-product-card-media\">\r\n                <div className=\"tm-ratio tm-ratio-4-3\">\r\n                  <a className=\"tm-media-box\" onClick={() => {history.push('/productDetails/' + product.productId) }}>\r\n                    <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + product.imagePaths} alt={product.imageNames} /></figure>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              <div className=\"tm-product-card-body\">\r\n                <div className=\"tm-product-card-info\">\r\n                  <div className=\"uk-text-meta uk-margin-xsmall-bottom\">{product.productCategoryName}</div>\r\n                  <h3 className=\"tm-product-card-title\"><a className=\"uk-link-heading\" onClick={() => history.push('/productDetails/' + product.productId)}>{product.name}</a></h3>\r\n                </div>\r\n                <div className=\"tm-product-card-shop\">\r\n                  <div className=\"tm-product-card-prices\">\r\n                    {\r\n                      userData.data?.discount && userData.data?.discount !== '0' &&\r\n                      <del className=\"uk-text-meta\">{getCurrencyIcon(userLocation.data || 'IN')} {showINRUSD(userLocation.data || 'IN', product)}</del>\r\n                    }\r\n                    <div className=\"tm-product-card-price\">\r\n                      {getCurrencyIcon(userLocation.data || 'IN')} {calculateUserDiscount(userData.data?.discount || '0', showINRUSD(userLocation.data || 'IN', product))}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"tm-product-card-add\">\r\n                    <button className=\"uk-button uk-button-primary tm-product-card-add-button tm-shine js-add-to-cart\">\r\n                      {\r\n                        cart._isLoading && <span uk-spinner=\"true\"></span>\r\n                      }\r\n                      {\r\n                        !cart._isLoading && (\r\n                          <>\r\n                            <span className=\"tm-product-card-add-button-icon\" uk-icon=\"cart\" onClick={() => addToCart(product)}></span>\r\n                            <span className=\"tm-product-card-add-button-text\">add to cart</span>\r\n                          </>\r\n                        )\r\n                      }\r\n\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </article>\r\n          )\r\n        }) : Array(4).fill(1).map((value, index) => <LoadingProductArticle keyIndex={index}/>)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  TrendingLatestProducts\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState } from 'reducers';\r\nimport { ProductItem } from 'types';\r\nimport { TrendingLatestProducts } from '.';\r\n\r\nconst TrendingLatestContainer: React.FunctionComponent = () => {\r\n\r\n  const latestProducts = useSelector<AppState, ProductItem[]>(state => state.latestProduct.data || []);\r\n  const trendingProducts = useSelector<AppState, ProductItem[]>(state => state.trendingProduct.data || []);\r\n\r\n  return (\r\n    <>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <h2 className=\"uk-text-center\">Trending Items</h2>\r\n          <div className=\"uk-card uk-card-default tm-ignore-container\">\r\n           <TrendingLatestProducts productList={trendingProducts} />\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <h2 className=\"uk-text-center\">Latest Items</h2>\r\n          <div className=\"uk-card uk-card-default tm-ignore-container\">\r\n           <TrendingLatestProducts productList={latestProducts} />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nexport {\r\n  TrendingLatestContainer\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getTrendingProduct, getLatestProduct, AppState } from 'reducers';\r\nimport { SubBanner } from './SubBanner';\r\nimport { Banner } from './Banner';\r\nimport { TrendingLatestContainer } from './trendingLatest';\r\n\r\n\r\nconst HomePageContainer: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getTrendingProduct());\r\n    dispatch(getLatestProduct());\r\n  },[])\r\n  return (\r\n    <main>\r\n      <Banner/>\r\n      <SubBanner/>\r\n      <TrendingLatestContainer/>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  HomePageContainer\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { Router, Switch, Route } from \"react-router-dom\";\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport './index.css';\r\nimport { UserContainer } from 'components/user';\r\nimport { UserLogin } from 'components/login'\r\nimport { MainFooter } from 'components/footer';\r\nimport { MobileNavigation, Navigation } from 'components/pilot';\r\nimport { MainContainer } from 'components/admin/MainContainer';\r\nimport { CustomerContainer } from 'components/customer';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { store } from 'reducers';\r\nimport { CustomerProductDetails } from 'components/customer/ProductDetails';\r\nimport { CustomerProductDetailsConstainer } from 'components/customer/ProductDetails/CustomerProductDetailsContainer';\r\nimport { CustomerCartContainer } from 'components/customer/Cart';\r\nimport { CheckoutContainer } from 'components/customer/Checkout';\r\nimport { HomePageContainer } from 'components/customer/Home';\r\nimport {ContactUs, ScrollToTop} from 'components/shared';\r\n\r\n\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <Router history={createBrowserHistory()}>\r\n      <ScrollToTop />\r\n        <Navigation />\r\n        <MobileNavigation/>\r\n          <Switch>\r\n          <Route path=\"/\" exact>\r\n              <HomePageContainer />\r\n            </Route>\r\n            <Route path=\"/userinformation/:userTab?\" exact>\r\n              <UserContainer />\r\n            </Route>\r\n            <Route path=\"/login\" exact>\r\n              <UserLogin />\r\n            </Route>\r\n            <Route path=\"/admin/:product?/:productId?\" exact>\r\n              <MainContainer />\r\n            </Route>\r\n            <Route path=\"/product/:product/:filterOn?\" exact>\r\n              <CustomerContainer />\r\n            </Route>\r\n            <Route path=\"/productDetails/:queryProductId\" exact>\r\n              <CustomerProductDetailsConstainer />\r\n            </Route>\r\n            <Route path=\"/cart\" exact>\r\n              <CustomerCartContainer/>\r\n            </Route>\r\n            <Route path=\"/checkout\" exact>\r\n              <CheckoutContainer/>\r\n            </Route>\r\n            <Route path=\"/contactus\" exact>\r\n              <ContactUs/>\r\n            </Route>\r\n          </Switch>\r\n        <MainFooter />\r\n      </Router>\r\n    </React.StrictMode>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(\r\n  app,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}