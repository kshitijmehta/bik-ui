{"version":3,"sources":["appConstants/AxiosConstants.ts","appConstants/CountryCodes.ts","appConstants/SubProducts.ts","reducers/UserInformation.ts","appConstants/ApiServerConstants.ts","services/axiosBase.ts","services/axios.ts","services/Misc.ts","reducers/Login.ts","reducers/UserSettings.ts","reducers/Colour.ts","reducers/Size.ts","reducers/SubCategory.ts","reducers/Coupon.ts","reducers/Product.ts","reducers/ProductCount.ts","appConstants/ProductsConstants.ts","reducers/Cart.ts","reducers/Checkout.ts","reducers/UserLocation.ts","reducers/Order.ts","reducers/Shipper.ts","reducers/Shipment.ts","reducers/RelatedProducts.ts","reducers/TrendingProducts.ts","reducers/LatestProducts.ts","reducers/Search.ts","reducers/CustomerShippment.ts","reducers/index.ts","components/user/UserInformation.tsx","components/user/UserNav.tsx","components/user/UserSettings.tsx","components/user/Orders.tsx","components/user/UserContainer.tsx","components/login/login.tsx","components/footer/MainFooter.tsx","components/pilot/Navigation.tsx","components/pilot/SideCart.tsx","components/pilot/MobileNavigation.tsx","components/admin/AdminNav.tsx","components/admin/AdminProductList.tsx","components/shared/NotificationContainer.tsx","components/shared/PayPalContainer.tsx","components/shared/PayPalPayment.tsx","components/shared/CashOnDeliveryPayment.tsx","components/shared/QuickProductList.tsx","components/shared/LoadingProductArticle.tsx","components/shared/ScrollToTop.tsx","components/admin/subComponents/colour/ColourList.tsx","components/admin/subComponents/colour/ProductColour.tsx","components/admin/subComponents/size/ProductSize.tsx","components/admin/subComponents/size/SizeList.tsx","components/admin/subComponents/subCategory/ProductSubCategory.tsx","components/admin/subComponents/subCategory/SubCategoryList.tsx","components/admin/subComponents/coupon/ProductCoupon.tsx","components/admin/subComponents/coupon/CouponList.tsx","components/admin/subComponents/product/ProductItem.tsx","components/admin/subComponents/product/ProductList.tsx","components/admin/subComponents/orders/OrderList.tsx","components/admin/subComponents/orders/OrderDetails.tsx","components/admin/subComponents/shippers/ShipperDetails.tsx","components/admin/subComponents/shippers/ShipperList.tsx","components/admin/subComponents/users/UserList.tsx","components/admin/subComponents/users/UserDetails.tsx","components/admin/MainContainer.tsx","components/customer/CustomerProductList.tsx","components/customer/CustomerContainer.tsx","components/customer/CustomerProductFilter.tsx","serviceWorker.ts","components/customer/ProductDetails/CustomerProductDetails.tsx","components/customer/ProductDetails/CustomerProductDetailsLoading.tsx","components/customer/ProductDetails/CustomerProductDetailsContainer.tsx","components/customer/Cart/CartDetails.tsx","components/customer/Cart/CartPrice.tsx","components/customer/Cart/CustomerCartContainer.tsx","components/customer/Checkout/CheckoutPrice.tsx","components/customer/Checkout/CheckoutContianer.tsx","components/customer/Home/SubBanner.tsx","components/customer/Home/Banner.tsx","components/customer/Home/trendingLatest/TrendingLatestProduct.tsx","components/customer/Home/trendingLatest/TrendingLatestContainer.tsx","components/customer/Home/HomePageContainer.tsx","index.tsx"],"names":["HttpRequest","HttpStatusCode","SubProducts","CountryCodes","Actions","SubCategories","AllowReturn","serverImagePath","apiServerHost","axios","create","baseURL","headers","api","url","makeRequest","method","GET","data","POST","config","a","defaults","window","localStorage","getItem","request","response","status","removeItem","location","href","message","getSubCategoryFromId","id","filterSubcategories","subCategories","categoryId","filter","subCategory","productCategoryId","Number","filterSize","sizes","size","indexOf","productCategory","calculateUserDiscount","discount","price","Math","ceil","toString","calculateUserDiscountPrice","getCurrencyIcon","currency","showINRUSD","userLocation","priceINR","priceUSD","createProductCountList","activeProducts","productCountList","forEach","product","subcategoryId","colourId","sizeId","name","sizeName","quantity","count","colourName","subcategoryName","countHighlightProducts","products","isTrending","trending","length","latest","initialState","isAdmin","allUsers","_isError","_isLoading","_isSuccess","setUser","user","type","SET_USER","loadingUser","LOADING_USER","errorUser","ERROR_USER","updateDiscount","emailAddress","UPDATE_USER_DISCOUNT","getUser","disptach","OK","loadingRegister","LOADING_REGISTER","errorRegister","ERROR_REGISTER","successRegister","SUCCESS_REGISTER","setUserSetting","userSettings","SET_USER_SETTINGS","loadingUserSettings","LOADING_USER_SETTINGS","errorUserSettings","ERROR_USER_SETTINGS","loadingColour","LOADING_COLOUR","errorColour","ERROR_COLOUR","getColour","dispatch","res","SET_COLOUR","loadingSize","LOADING_SIZE","successSize","SUCCESS_SIZE","errorSize","addUpdateSize","product_size","value","product_size_code","code","product_category","size_id","productCategoryIndex","productCategoryName","UPDATE_SIZE","getSize","SET_SIZE","loadingSubCategory","LOADING_SUBCATEGORY","successSubCategory","SUCCESS_SUBCATEGORY","errorSubCategory","ERROR_SUBCATEGORY","addUpdateSubCategory","product_name","product_desc","product_category_id","subcategory_id","subCategoryId","UPDATE_SUBCATEGORY","getSubCategory","SET_SUBCATEGORY","loadingCoupon","LOADING_COUPON","errorCoupon","ERROR_COUPON","setCoupon","SET_COUPON","updateCouponSuccess","UPDATE_COUPON_SUCCESS","deleteCouponSuccess","DELETE_COUPON_SUCCESS","updateCoupon","coupon","isDelete","coupon_code","coupon_value","coupon_id","couponId","loadingProduct","LOADING_PRODUCT","successProduct","SUCCESS_PRODUCT","errorProduct","ERROR_PRODUCT","setProducts","_hasMoreProducts","SET_PRODUCT","setDefaulState","SET_DEFAULT_PRODUCT","deleteProductSuccess","DELETE_PRODUCT_SUCCESS","setCustomerProducts","SET_CUSTOMER_PRODUCT","setProductHighlight","productId","SET_PRODUCT_HIGHLIGHT","singleData","addUpdateProduct","sizeColourQuantity","formData","FormData","productImageBlob","Array","from","element","index","append","colour","description","JSON","stringify","deletedImagePath","deletedProductDetailIds","getProduct","SET_SINGLE_PRODUCT","getCustomerProducts","offset","limit","startPrice","endPrice","searchText","freshData","_quantityUpdate","loadingCart","LOADING_CART","errorCart","ERROR_CART","updateCartSuccess","UPDATE_CART_SUCCESS","deleteCartProduct","DELETE_CART_PRODUCT","addUpdateCart","cart","isLoggedIn","newCart","totalPrice","productPrice","productQuantity","UPDATE_CART_LOGGED_OUT","product_detail_id","productDetailId","order_quantity","price_id","currencyType","orderdetail_id","cartId","delete_flag","result","productImage","productImagePath","productName","subcategory","getCart","ADD_CART_SUCCESS","deleteCartItem","_isPaymentSucceess","_priceChanged","_isFetchCodCodeSuccess","loadingCheckout","LOADING_CHECKOUT","successCheckoutOrder","SUCCESS_CHECKOUT_ORDER","errorCheckout","ERROR_CHECKOUT","defaultCheckout","DEFAULT_CHECKOUT","successPayment","SUCCESS_PAYMENT","priceChanged","PRICE_CHANGED","getPayPalOrder","amount","displayAmount","orderId","PARTIAL_INFO","setUserLocation","SET_USER_LOCATION","loadingOrder","LOADING_ORDER","successOrder","_hasMoreOrders","SUCCESS_ORDER","adminSuccessOrder","ADMIN_SUCCESS_ORDER","errorOrder","ERROR_ORDER","customerReturn","orderDetailsId","CUSTOMER_RETURN","defaulOrderReturn","DEFAULT_ORDER_RETURN","_isOrderUpdate","getCustomerOrders","loadingShipper","LOADING_SHIPPER","errorShipper","ERROR_SHIPPER","updateShipperSuccess","UPDATE_SHIPPER_SUCCESS","deleteShipperSuccess","DELETE_SHIPPER_SUCCESS","getShippers","SET_SHIPPER","updateShipper","shipper","shipper_name","shipperName","shipper_link","trackingLink","shipper_id","shipperId","successShipment","SUCCESS_SHIPMENT","setSearch","SET_SEARCH","shippmentPrice","setShippingPrice","SET_SHIPPING_PRICE","reducers","state","action","DEFAULT_USER","SET_ALL_USER","map","toLowerCase","userLogin","LOADING_LOGIN","ERROR_LOGIN","SUCCESS_LOGIN","DEFAULT_STATE","SUCCESS_COLOUR","UPDATE_COLOUR_SUCCESS","originalState","updatedValue","updatedState","d","DEFAULT_COLOUR","ERROR_SIZE","SUCCESS_COUPON","orgState","updValue","updState","DEFAULT_COUPON","concat","productCount","LOADING_PRODUCT_COUNT","ERROR_PRODUCT_COUNT","SET_PRODUCT_COUNT","SUCCESS_CART","SET_CART","SET_LOGGED_CART","og","newProduct","originalStatelo","oglo","newProductlo","setItem","DEFAULT_CART","CART_GET_UPDATED_QUANTITY","CART_QUANTITY_FINE","checkout","LOADING_USER_LOCATION","customerOrders","SINGLE_DATA","singleOrder","updatedOrder","orderItems","order","orderDetailId","shipmentDetails","returnStatus","SUCCESS_SHIPPER","DEFAULT_SHIPPER","shipment","LOADING_SHIPMENT","ERROR_SHIPMENT","relatedProduct","SUCCESS_RELATED_PRODUCT","LOADING_RELATED_PRODUCT","ERROR_RELATED_PRODUCT","SET_RELATED_PRODUCT","trendingProduct","SUCCESS_TRENDING_PRODUCT","LOADING_TRENDING_PRODUCT","ERROR_TRENDING_PRODUCT","SET_TRENDING_PRODUCT","latestProduct","SUCCESS_LATEST_PRODUCT","LOADING_LATEST_PRODUCT","ERROR_LATEST_PRODUCT","SET_LATEST_PRODUCT","search","LOADING_SEARCH","ERROR_SEARCH","customerShippment","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunkMiddleware","UserInformation","props","useDispatch","userData","isLoading","userInformationFormik","useFormik","initialValues","firstName","lastName","mobile","dob","gender","country","default","countryCode","city","pincode","addressLineOne","addressLineTwo","addressLineThree","addressId","validationSchema","Yup","required","matches","onSubmit","enableReinitialize","handleSubmit","className","fromCart","uk-grid","getFieldProps","touched","errors","key","disabled","src","UserNav","uk-sticky","uk-icon","showPersonal","onClick","toggelDetails","showOrders","showSettings","UserSettings","userSettingFormik","currentPassword","newPassword","confirmPassword","oneOf","resetForm","Orders","history","useHistory","useState","hasMoreOrders","setHasMoreOrders","selectedReason","setSelectedReason","showOrderDetailIndex","setShowOrderDetailIndex","returnOrderDetailId","setReturnOrderDetailId","showReturnError","setShowReturnError","returnModalRef","useRef","returnButtonRef","orders","useSelector","shipperData","useEffect","current","getBoundingClientRect","top","that","setTimeout","click","getShipmentLink","trackingNumber","shipperInfo","target","checkReturnEligibilty","deliveryDate","differenceInDays","Date","getTime","returnOrder","reason","returnReason","dataLength","next","hasMore","loader","style","textAlign","marginTop","endMessage","orderNumber","paymentDate","split","push","alt","paymentReturned","uk-toggle","shippingDate","uk-accordion","orderItem","ref","visibility","uk-modal","uk-close","checked","UserContainer","userTab","useParams","setShowSettings","setShowPersonal","setShowOrders","selected","UserLogin","isError","responseMessage","loginRedirect","setLoginRedirect","loginFormik","email","password","isRegistration","forgetPassword","when","is","then","values","registerationData","loginData","loginDetails","access_token","toggleLoginRegister","setFieldValue","parse","to","onChange","event","currentTarget","Iso","MainFooter","title","Navigation","cartCount","setCartCount","enteredSearchText","setEnteredSearchText","cartCountCssFlag","setCartCountCssFlag","Intl","DateTimeFormat","resolvedOptions","timeZone","getTimezoneOffset","error","searchProduct","navigateTo","categoryPath","subcategoryPath","preventDefault","logout","uk-navbar","uk-navbar-toggle-icon","width","Object","keys","e","uk-drop","uk-search-icon","placeholder","onKeyPress","uk-dropdown","minWidth","userId","cartData","SideCart","mainTotal","setMainTotal","userDiscountTotal","setUserDiscountTotal","totalAfterDiscount","setTotalAfterDiscount","discountedTotal","setDiscountedTotal","userCouponTotal","setUserCouponTotal","couponData","cartPrice","discountPrice","priceAfterDiscount","couponPrice","priceAfterCoupon","uk-offcanvas","MobileNavigation","uk-nav","AdminNav","subProductToggle","addEditToggle","selectedTab","setSelectedTab","isOnList","setIsOnList","PRODUCT","USERS","ORDERS","SUB_PRODUCT","SIZE","COLOUR","COUPONS","SHIPPER","AdminProductList","searchTerm","setSearchTerm","tabName","setTabName","productList","tableData","setTableData","stateData","columns","productColumns","productType","getAdminOrders","paymentMode","includes","defaultSortField","sortByColumn","defaultSortAsc","undefined","selectableRows","selectableRowsNoSelectAll","selectableRowsHighlight","selectableRowsVisibleOnly","expandableRows","expandOnRowClicked","expandableRowsComponent","ExpandableComponent","pagination","highlightOnHover","striped","pointerOnHover","dense","noTableHead","persistTableHead","progressPending","noHeader","subHeader","subHeaderComponent","color","searchPlaceholder","fixedHeader","fixedHeaderScrollHeight","direction","NotificationContainer","isSdkReady","paypal","this","addPaypalSdk","onButtonReady","actions","options","shippingPreference","purchase_units","currency_code","application_context","shipping_preference","capture","details","onSuccess","catch","err","catchError","onCancel","createOrder","createSubscription","onApprove","Button","Buttons","driver","React","ReactDOM","createOrderFn","queryParams","entries","join","script","document","createElement","async","onload","setState","onerror","Error","body","appendChild","Component","defaultProps","clientId","PayPalPayment","paypalPaymentLoadingRef","paypalModalRef","paypalPaymentMessage","setPaypalPaymentMessage","setPayPalOrderId","paymentErroredOut","setPaymentErroredOut","paymentSuccess","setPaymentSuccess","setIsCard","paypalOrderId","cartTotalPrice","paypalButton","close","go","didPriceChanged","togglePaymenModal","fundingType","successPaypalPayment","fundingSource","cartTotalWithShipping","cartOrderId","onError","console","log","render","tt","funding","innerWidth","scrollTo","behavior","setContainerIsCard","orderData","paymentData","paypalData","paypalResponse","quantityCount","isStandard","uk-spinner","CashOnDeliveryPayment","showOtpContainer","timeLeft","setTimeLeft","enteredOTP","setEnteredOTP","timer","setInterval","clearTimeout","resendOtpToCustomer","QuickProductList","uk-slider","uk-slider-item","uk-slidenav-previous","uk-slidenav-next","imagePaths","imageNames","addToCart","LoadingProductArticle","keyIndex","ScrollToTop","withRouter","unlisten","listen","colourActionStatus","colourQuickViewFormik","product_color_code","product_color","colour_id","isSubmitting","ColourList","selector","sortable","ProductColour","colourFormik","ProductSize","sizeFormik","sizeActionStatus","SizeList","sizeQuickViewFormik","ProductSubCategory","subCategoryFormik","moreThan","subCategoryActionStatus","SubCategoryList","subCategoryQuickViewFormik","ProductCoupon","couponFormik","couponActionStatus","CouponList","cell","row","confirm","couponQuickViewFormik","ProductItem","setSizeColourQuantity","selectedSizes","setSelectedSizes","sizeColourQuantityErrorMessage","setSizeColourQuantityErrorMessage","productItemFormik","sizeColourQuantityCombo","filteredKey","checkForProductCategory","updatedImageName","adminProductCombo","productDetailIdArray","some","item","productSize","productColour","productActionStatus","sizeArray","colourArray","quantityArray","editSizeColourQuantityCombo","sizeItem","filteredSubcategories","filteredProductSize","updatedSizeColourQuantityArray","field","currentItem","splice","cols","handleChange","onBlur","handleBlur","fill","isArray","newPDArray","reduceProductComboLength","availableSizes","addProductComboLength","htmlFor","multiple","files","currentNumberOfFile","currentFiles","filesArray","checkForMaxFileUpload","fileName","filePath","fileNames","path","imagePath","imageName","removeCurrentImage","getFileNameAndPath","call","file","i","URL","createObjectURL","img","removeImage","ProductList","marginLeft","productQuickViewFormik","highlight","setSubmitting","updateProductHighLight","OrderList","wrap","icon","orderLength","getIconForAdminOrder","whiteSpace","OrderDetails","adminShipmentData","setAdminShipmentData","shippers","shipmentStatus","tempShipmentData","shipmentId","updateShipmentData","shipmentDataCopy","shipmentDataToUpdate","updatedShipmentData","updateOrderStatus","orderUpdate","payaplResponse","transactionId","payments","captures","getPaypalTransactionId","razorpayPaymentId","standardShipping","userDetails","ShipperDetails","shipperActionStatus","shipperFormik","ShipperList","shipperQuickViewFormik","UserList","userActionStatus","userDiscountQuickViewFormik","updateUserDiscount","UserDetails","MainContainer","setIsOnAdd","setSubProductId","isOnAdd","subProductId","showSubProductComponent","CustomerProductList","hasMoreProducts","setHasMoreProducts","CustomerContainer","filterOn","setColourId","setSizeId","setSubCategoryId","setStartPrice","setEndPrice","setcategoryId","subCategoryQueryParam","setSubCategoryQueryParam","subCateId","activeProductCount","productKey","find","selectedSubCat","selectedColour","selectedSize","activeSubCat","activeColour","activeSize","getTotalProductCount","filterSelected","CustomerProductFilter","filterColourId","setFilterColourId","filterSizeId","setFilterSizeId","filterSubCategory","setFilterSubCategory","filterStartPrice","setFilterStartPrice","filterEndPrice","setFilterEndPrice","startPriceTimer","setStartPriceTimer","endPriceTimer","setEndPriceTimer","toggleAddingRemovingId","ids","newId","getFilteredProduct","updatedColourFilter","updatedSizeFilter","updatedSubCategory","flexBasis","getProductCount","Boolean","hostname","match","CustomerProductDetails","cartProductQuantity","relatedProducts","pINR","setPINR","pUSD","setPUSD","pQuantity","setPQuantity","pSize","setPSize","pSizeId","setPSizeId","pDetailId","setPDetailId","setSelectedSize","selectedQuantity","setSelectedQuantity","selectedProductDetailId","setSelectedProductDetailId","maxQuantity","setMaxQuantity","defaultProductDetail","productIndex","onChangeQuantity","toggleQuantity","isIncrement","maxQaun","checkForDefaultSize","sizeList","uk-slideshow","uk-lightbox","mainSlider","smallSlider","selectedIndex","maxQ","pdId","setSize","onBlurQuantity","uk-switcher","CustomerProductDetailsLoading","uk-slideshow-item","CustomerProductDetailsConstainer","queryProductId","setMainSlider","setSmallSlider","setCartProductQuantity","cartProductFlag","setCartProductFlag","tabIndex","cartProductCount","getRelatedProduct","CartDetails","setQuantity","enteredCoupon","setEnteredCoupon","quantityCheckMessage","setQuantityCheckMessage","couponStatus","deboucedId","setDeboucedId","quantityChanged","setQuantityChanged","quantityChangedProductId","setQuantityChangedProductId","orderQuantityCheckButtonRef","orderQuantityCheckModalRef","qt","checkForAvailableQuantity","cartItem","availableQuantity","updateCart","updateQantity","changedQuantity","chqty","newQuantity","updatedQuantity","checkCouponValidity","deleteCart","uk-tooltip","CartPrice","cartTotal","setCartTotal","total","CustomerCartContainer","Razorpay","CheckoutPrice","setCartTotalPrice","priceAfterShipping","setPriceAfterShipping","setQuantityCount","setCartOrderId","paymentMessage","setPaymentMessage","paymentError","setPaymentError","errorHappendAt","setErrorHappendAt","shippingCost","paymentLoadingRef","containerIsCard","ukSticky","setUkSicky","showCodContainer","setShowCodContainer","noAddressError","setNoAddressError","setDidPriceChanged","timeForShowPriceChange","setTimeForShowPriceChange","calculateShippingCost","shippingType","successRazorPay","razorpay_payment_id","razorpay_order_id","razorpay_signature","rzp1","on","source","step","metadata","open","otp","razorpayOrderId","razorpaySignature","razorpayData","receipt","proceedWithPayment","getCodOrder","successCod","codData","itemCount","reduce","accumulator","cost","CheckoutContainer","setPaymentMode","internationalShipping","setInternationalShipping","SubBanner","Banner","backgroundColor","uk-cover","TrendingLatestProducts","TrendingLatestContainer","latestProducts","trendingProducts","HomePageContainer","app","StrictMode","createBrowserHistory","exact","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5fb37c5f.chunk.js","sourcesContent":["enum HttpRequest {\r\n  GET = \"GET\",\r\n  POST = \"POST\",\r\n  DELETE = \"DELETE\",\r\n  PATCH = \"PATCH\"\r\n};\r\n\r\n\r\nenum HttpStatusCode {\r\n  OK = 200,\r\n  ACCEPTED = 202,\r\n  PARTIAL_INFO = 203,\r\n  BAD_REQUEST = 400,\r\n  NOT_FOUND = 404\r\n}\r\n\r\nexport { HttpRequest, HttpStatusCode };","const CountryCodes = [\r\n  {\r\n    \"name\": \"Afghanistan\",\r\n    \"Iso\": \"+93\",\r\n    \"countryCode\": \"AF\"\r\n  },\r\n  {\r\n    \"name\": \"Åland Islands\",\r\n    \"Iso\": \"+358\",\r\n    \"countryCode\": \"AX\"\r\n  },\r\n  {\r\n    \"name\": \"Albania\",\r\n    \"Iso\": \"+355\",\r\n    \"countryCode\": \"AL\"\r\n  },\r\n  {\r\n    \"name\": \"Algeria\",\r\n    \"Iso\": \"+213\",\r\n    \"countryCode\": \"DZ\"\r\n  },\r\n  {\r\n    \"name\": \"American Samoa\",\r\n    \"Iso\": \"+1684\",\r\n    \"countryCode\": \"AS\"\r\n  },\r\n  {\r\n    \"name\": \"Andorra\",\r\n    \"Iso\": \"+376\",\r\n    \"countryCode\": \"AD\"\r\n  },\r\n  {\r\n    \"name\": \"Angola\",\r\n    \"Iso\": \"+244\",\r\n    \"countryCode\": \"AO\"\r\n  },\r\n  {\r\n    \"name\": \"Anguilla\",\r\n    \"Iso\": \"+1264\",\r\n    \"countryCode\": \"AI\"\r\n  },\r\n  {\r\n    \"name\": \"Antarctica\",\r\n    \"Iso\": \"+672\",\r\n    \"countryCode\": \"AQ\"\r\n  },\r\n  {\r\n    \"name\": \"Antigua and Barbuda\",\r\n    \"Iso\": \"+1268\",\r\n    \"countryCode\": \"AG\"\r\n  },\r\n  {\r\n    \"name\": \"Argentina\",\r\n    \"Iso\": \"+54\",\r\n    \"countryCode\": \"AR\"\r\n  },\r\n  {\r\n    \"name\": \"Armenia\",\r\n    \"Iso\": \"+374\",\r\n    \"countryCode\": \"AM\"\r\n  },\r\n  {\r\n    \"name\": \"Aruba\",\r\n    \"Iso\": \"+297\",\r\n    \"countryCode\": \"AW\"\r\n  },\r\n  {\r\n    \"name\": \"Australia\",\r\n    \"Iso\": \"+61\",\r\n    \"countryCode\": \"AU\"\r\n  },\r\n  {\r\n    \"name\": \"Austria\",\r\n    \"Iso\": \"+43\",\r\n    \"countryCode\": \"AT\"\r\n  },\r\n  {\r\n    \"name\": \"Azerbaijan\",\r\n    \"Iso\": \"+994\",\r\n    \"countryCode\": \"AZ\"\r\n  },\r\n  {\r\n    \"name\": \"Bahamas\",\r\n    \"Iso\": \"+1242\",\r\n    \"countryCode\": \"BS\"\r\n  },\r\n  {\r\n    \"name\": \"Bahrain\",\r\n    \"Iso\": \"+973\",\r\n    \"countryCode\": \"BH\"\r\n  },\r\n  {\r\n    \"name\": \"Bangladesh\",\r\n    \"Iso\": \"+880\",\r\n    \"countryCode\": \"BD\"\r\n  },\r\n  {\r\n    \"name\": \"Barbados\",\r\n    \"Iso\": \"+1246\",\r\n    \"countryCode\": \"BB\"\r\n  },\r\n  {\r\n    \"name\": \"Belarus\",\r\n    \"Iso\": \"+375\",\r\n    \"countryCode\": \"BY\"\r\n  },\r\n  {\r\n    \"name\": \"Belgium\",\r\n    \"Iso\": \"+32\",\r\n    \"countryCode\": \"BE\"\r\n  },\r\n  {\r\n    \"name\": \"Belize\",\r\n    \"Iso\": \"+501\",\r\n    \"countryCode\": \"BZ\"\r\n  },\r\n  {\r\n    \"name\": \"Benin\",\r\n    \"Iso\": \"+229\",\r\n    \"countryCode\": \"BJ\"\r\n  },\r\n  {\r\n    \"name\": \"Bermuda\",\r\n    \"Iso\": \"+1441\",\r\n    \"countryCode\": \"BM\"\r\n  },\r\n  {\r\n    \"name\": \"Bhutan\",\r\n    \"Iso\": \"+975\",\r\n    \"countryCode\": \"BT\"\r\n  },\r\n  {\r\n    \"name\": \"Bolivia, Plurinational State of bolivia\",\r\n    \"Iso\": \"+591\",\r\n    \"countryCode\": \"BO\"\r\n  },\r\n  {\r\n    \"name\": \"Bosnia and Herzegovina\",\r\n    \"Iso\": \"+387\",\r\n    \"countryCode\": \"BA\"\r\n  },\r\n  {\r\n    \"name\": \"Botswana\",\r\n    \"Iso\": \"+267\",\r\n    \"countryCode\": \"BW\"\r\n  },\r\n  {\r\n    \"name\": \"Bouvet Island\",\r\n    \"Iso\": \"+47\",\r\n    \"countryCode\": \"BV\"\r\n  },\r\n  {\r\n    \"name\": \"Brazil\",\r\n    \"Iso\": \"+55\",\r\n    \"countryCode\": \"BR\"\r\n  },\r\n  {\r\n    \"name\": \"British Indian Ocean Territory\",\r\n    \"Iso\": \"+246\",\r\n    \"countryCode\": \"IO\"\r\n  },\r\n  {\r\n    \"name\": \"Brunei Darussalam\",\r\n    \"Iso\": \"+673\",\r\n    \"countryCode\": \"BN\"\r\n  },\r\n  {\r\n    \"name\": \"Bulgaria\",\r\n    \"Iso\": \"+359\",\r\n    \"countryCode\": \"BG\"\r\n  },\r\n  {\r\n    \"name\": \"Burkina Faso\",\r\n    \"Iso\": \"+226\",\r\n    \"countryCode\": \"BF\"\r\n  },\r\n  {\r\n    \"name\": \"Burundi\",\r\n    \"Iso\": \"+257\",\r\n    \"countryCode\": \"BI\"\r\n  },\r\n  {\r\n    \"name\": \"Cambodia\",\r\n    \"Iso\": \"+855\",\r\n    \"countryCode\": \"KH\"\r\n  },\r\n  {\r\n    \"name\": \"Cameroon\",\r\n    \"Iso\": \"+237\",\r\n    \"countryCode\": \"CM\"\r\n  },\r\n  {\r\n    \"name\": \"Canada\",\r\n    \"Iso\": \"+1\",\r\n    \"countryCode\": \"CA\"\r\n  },\r\n  {\r\n    \"name\": \"Cape Verde\",\r\n    \"Iso\": \"+238\",\r\n    \"countryCode\": \"CV\"\r\n  },\r\n  {\r\n    \"name\": \"Cayman Islands\",\r\n    \"Iso\": \"+ 345\",\r\n    \"countryCode\": \"KY\"\r\n  },\r\n  {\r\n    \"name\": \"Central African Republic\",\r\n    \"Iso\": \"+236\",\r\n    \"countryCode\": \"CF\"\r\n  },\r\n  {\r\n    \"name\": \"Chad\",\r\n    \"Iso\": \"+235\",\r\n    \"countryCode\": \"TD\"\r\n  },\r\n  {\r\n    \"name\": \"Chile\",\r\n    \"Iso\": \"+56\",\r\n    \"countryCode\": \"CL\"\r\n  },\r\n  {\r\n    \"name\": \"China\",\r\n    \"Iso\": \"+86\",\r\n    \"countryCode\": \"CN\"\r\n  },\r\n  {\r\n    \"name\": \"Christmas Island\",\r\n    \"Iso\": \"+61\",\r\n    \"countryCode\": \"CX\"\r\n  },\r\n  {\r\n    \"name\": \"Cocos (Keeling) Islands\",\r\n    \"Iso\": \"+61\",\r\n    \"countryCode\": \"CC\"\r\n  },\r\n  {\r\n    \"name\": \"Colombia\",\r\n    \"Iso\": \"+57\",\r\n    \"countryCode\": \"CO\"\r\n  },\r\n  {\r\n    \"name\": \"Comoros\",\r\n    \"Iso\": \"+269\",\r\n    \"countryCode\": \"KM\"\r\n  },\r\n  {\r\n    \"name\": \"Congo\",\r\n    \"Iso\": \"+242\",\r\n    \"countryCode\": \"CG\"\r\n  },\r\n  {\r\n    \"name\": \"Congo, The Democratic Republic of the Congo\",\r\n    \"Iso\": \"+243\",\r\n    \"countryCode\": \"CD\"\r\n  },\r\n  {\r\n    \"name\": \"Cook Islands\",\r\n    \"Iso\": \"+682\",\r\n    \"countryCode\": \"CK\"\r\n  },\r\n  {\r\n    \"name\": \"Costa Rica\",\r\n    \"Iso\": \"+506\",\r\n    \"countryCode\": \"CR\"\r\n  },\r\n  {\r\n    \"name\": \"Cote d'Ivoire\",\r\n    \"Iso\": \"+225\",\r\n    \"countryCode\": \"CI\"\r\n  },\r\n  {\r\n    \"name\": \"Croatia\",\r\n    \"Iso\": \"+385\",\r\n    \"countryCode\": \"HR\"\r\n  },\r\n  {\r\n    \"name\": \"Cuba\",\r\n    \"Iso\": \"+53\",\r\n    \"countryCode\": \"CU\"\r\n  },\r\n  {\r\n    \"name\": \"Cyprus\",\r\n    \"Iso\": \"+357\",\r\n    \"countryCode\": \"CY\"\r\n  },\r\n  {\r\n    \"name\": \"Czech Republic\",\r\n    \"Iso\": \"+420\",\r\n    \"countryCode\": \"CZ\"\r\n  },\r\n  {\r\n    \"name\": \"Denmark\",\r\n    \"Iso\": \"+45\",\r\n    \"countryCode\": \"DK\"\r\n  },\r\n  {\r\n    \"name\": \"Djibouti\",\r\n    \"Iso\": \"+253\",\r\n    \"countryCode\": \"DJ\"\r\n  },\r\n  {\r\n    \"name\": \"Dominica\",\r\n    \"Iso\": \"+1767\",\r\n    \"countryCode\": \"DM\"\r\n  },\r\n  {\r\n    \"name\": \"Dominican Republic\",\r\n    \"Iso\": \"+1849\",\r\n    \"countryCode\": \"DO\"\r\n  },\r\n  {\r\n    \"name\": \"Ecuador\",\r\n    \"Iso\": \"+593\",\r\n    \"countryCode\": \"EC\"\r\n  },\r\n  {\r\n    \"name\": \"Egypt\",\r\n    \"Iso\": \"+20\",\r\n    \"countryCode\": \"EG\"\r\n  },\r\n  {\r\n    \"name\": \"El Salvador\",\r\n    \"Iso\": \"+503\",\r\n    \"countryCode\": \"SV\"\r\n  },\r\n  {\r\n    \"name\": \"Equatorial Guinea\",\r\n    \"Iso\": \"+240\",\r\n    \"countryCode\": \"GQ\"\r\n  },\r\n  {\r\n    \"name\": \"Eritrea\",\r\n    \"Iso\": \"+291\",\r\n    \"countryCode\": \"ER\"\r\n  },\r\n  {\r\n    \"name\": \"Estonia\",\r\n    \"Iso\": \"+372\",\r\n    \"countryCode\": \"EE\"\r\n  },\r\n  {\r\n    \"name\": \"Ethiopia\",\r\n    \"Iso\": \"+251\",\r\n    \"countryCode\": \"ET\"\r\n  },\r\n  {\r\n    \"name\": \"Falkland Islands (Malvinas)\",\r\n    \"Iso\": \"+500\",\r\n    \"countryCode\": \"FK\"\r\n  },\r\n  {\r\n    \"name\": \"Faroe Islands\",\r\n    \"Iso\": \"+298\",\r\n    \"countryCode\": \"FO\"\r\n  },\r\n  {\r\n    \"name\": \"Fiji\",\r\n    \"Iso\": \"+679\",\r\n    \"countryCode\": \"FJ\"\r\n  },\r\n  {\r\n    \"name\": \"Finland\",\r\n    \"Iso\": \"+358\",\r\n    \"countryCode\": \"FI\"\r\n  },\r\n  {\r\n    \"name\": \"France\",\r\n    \"Iso\": \"+33\",\r\n    \"countryCode\": \"FR\"\r\n  },\r\n  {\r\n    \"name\": \"French Guiana\",\r\n    \"Iso\": \"+594\",\r\n    \"countryCode\": \"GF\"\r\n  },\r\n  {\r\n    \"name\": \"French Polynesia\",\r\n    \"Iso\": \"+689\",\r\n    \"countryCode\": \"PF\"\r\n  },\r\n  {\r\n    \"name\": \"French Southern Territories\",\r\n    \"Iso\": \"+262\",\r\n    \"countryCode\": \"TF\"\r\n  },\r\n  {\r\n    \"name\": \"Gabon\",\r\n    \"Iso\": \"+241\",\r\n    \"countryCode\": \"GA\"\r\n  },\r\n  {\r\n    \"name\": \"Gambia\",\r\n    \"Iso\": \"+220\",\r\n    \"countryCode\": \"GM\"\r\n  },\r\n  {\r\n    \"name\": \"Georgia\",\r\n    \"Iso\": \"+995\",\r\n    \"countryCode\": \"GE\"\r\n  },\r\n  {\r\n    \"name\": \"Germany\",\r\n    \"Iso\": \"+49\",\r\n    \"countryCode\": \"DE\"\r\n  },\r\n  {\r\n    \"name\": \"Ghana\",\r\n    \"Iso\": \"+233\",\r\n    \"countryCode\": \"GH\"\r\n  },\r\n  {\r\n    \"name\": \"Gibraltar\",\r\n    \"Iso\": \"+350\",\r\n    \"countryCode\": \"GI\"\r\n  },\r\n  {\r\n    \"name\": \"Greece\",\r\n    \"Iso\": \"+30\",\r\n    \"countryCode\": \"GR\"\r\n  },\r\n  {\r\n    \"name\": \"Greenland\",\r\n    \"Iso\": \"+299\",\r\n    \"countryCode\": \"GL\"\r\n  },\r\n  {\r\n    \"name\": \"Grenada\",\r\n    \"Iso\": \"+1473\",\r\n    \"countryCode\": \"GD\"\r\n  },\r\n  {\r\n    \"name\": \"Guadeloupe\",\r\n    \"Iso\": \"+590\",\r\n    \"countryCode\": \"GP\"\r\n  },\r\n  {\r\n    \"name\": \"Guam\",\r\n    \"Iso\": \"+1671\",\r\n    \"countryCode\": \"GU\"\r\n  },\r\n  {\r\n    \"name\": \"Guatemala\",\r\n    \"Iso\": \"+502\",\r\n    \"countryCode\": \"GT\"\r\n  },\r\n  {\r\n    \"name\": \"Guernsey\",\r\n    \"Iso\": \"+44\",\r\n    \"countryCode\": \"GG\"\r\n  },\r\n  {\r\n    \"name\": \"Guinea\",\r\n    \"Iso\": \"+224\",\r\n    \"countryCode\": \"GN\"\r\n  },\r\n  {\r\n    \"name\": \"Guinea-Bissau\",\r\n    \"Iso\": \"+245\",\r\n    \"countryCode\": \"GW\"\r\n  },\r\n  {\r\n    \"name\": \"Guyana\",\r\n    \"Iso\": \"+592\",\r\n    \"countryCode\": \"GY\"\r\n  },\r\n  {\r\n    \"name\": \"Haiti\",\r\n    \"Iso\": \"+509\",\r\n    \"countryCode\": \"HT\"\r\n  },\r\n  {\r\n    \"name\": \"Heard Island and Mcdonald Islands\",\r\n    \"Iso\": \"+0\",\r\n    \"countryCode\": \"HM\"\r\n  },\r\n  {\r\n    \"name\": \"Holy See (Vatican City State)\",\r\n    \"Iso\": \"+379\",\r\n    \"countryCode\": \"VA\"\r\n  },\r\n  {\r\n    \"name\": \"Honduras\",\r\n    \"Iso\": \"+504\",\r\n    \"countryCode\": \"HN\"\r\n  },\r\n  {\r\n    \"name\": \"Hong Kong\",\r\n    \"Iso\": \"+852\",\r\n    \"countryCode\": \"HK\"\r\n  },\r\n  {\r\n    \"name\": \"Hungary\",\r\n    \"Iso\": \"+36\",\r\n    \"countryCode\": \"HU\"\r\n  },\r\n  {\r\n    \"name\": \"Iceland\",\r\n    \"Iso\": \"+354\",\r\n    \"countryCode\": \"IS\"\r\n  },\r\n  {\r\n    \"name\": \"India\",\r\n    \"Iso\": \"+91\",\r\n    \"countryCode\": \"IN\",\r\n    \"default\" : true\r\n  },\r\n  {\r\n    \"name\": \"Indonesia\",\r\n    \"Iso\": \"+62\",\r\n    \"countryCode\": \"ID\"\r\n  },\r\n  {\r\n    \"name\": \"Iran, Islamic Republic of Persian Gulf\",\r\n    \"Iso\": \"+98\",\r\n    \"countryCode\": \"IR\"\r\n  },\r\n  {\r\n    \"name\": \"Iraq\",\r\n    \"Iso\": \"+964\",\r\n    \"countryCode\": \"IQ\"\r\n  },\r\n  {\r\n    \"name\": \"Ireland\",\r\n    \"Iso\": \"+353\",\r\n    \"countryCode\": \"IE\"\r\n  },\r\n  {\r\n    \"name\": \"Isle of Man\",\r\n    \"Iso\": \"+44\",\r\n    \"countryCode\": \"IM\"\r\n  },\r\n  {\r\n    \"name\": \"Israel\",\r\n    \"Iso\": \"+972\",\r\n    \"countryCode\": \"IL\"\r\n  },\r\n  {\r\n    \"name\": \"Italy\",\r\n    \"Iso\": \"+39\",\r\n    \"countryCode\": \"IT\"\r\n  },\r\n  {\r\n    \"name\": \"Jamaica\",\r\n    \"Iso\": \"+1876\",\r\n    \"countryCode\": \"JM\"\r\n  },\r\n  {\r\n    \"name\": \"Japan\",\r\n    \"Iso\": \"+81\",\r\n    \"countryCode\": \"JP\"\r\n  },\r\n  {\r\n    \"name\": \"Jersey\",\r\n    \"Iso\": \"+44\",\r\n    \"countryCode\": \"JE\"\r\n  },\r\n  {\r\n    \"name\": \"Jordan\",\r\n    \"Iso\": \"+962\",\r\n    \"countryCode\": \"JO\"\r\n  },\r\n  {\r\n    \"name\": \"Kazakhstan\",\r\n    \"Iso\": \"+7\",\r\n    \"countryCode\": \"KZ\"\r\n  },\r\n  {\r\n    \"name\": \"Kenya\",\r\n    \"Iso\": \"+254\",\r\n    \"countryCode\": \"KE\"\r\n  },\r\n  {\r\n    \"name\": \"Kiribati\",\r\n    \"Iso\": \"+686\",\r\n    \"countryCode\": \"KI\"\r\n  },\r\n  {\r\n    \"name\": \"Korea, Democratic People's Republic of Korea\",\r\n    \"Iso\": \"+850\",\r\n    \"countryCode\": \"KP\"\r\n  },\r\n  {\r\n    \"name\": \"Korea, Republic of South Korea\",\r\n    \"Iso\": \"+82\",\r\n    \"countryCode\": \"KR\"\r\n  },\r\n  {\r\n    \"name\": \"Kosovo\",\r\n    \"Iso\": \"+383\",\r\n    \"countryCode\": \"XK\"\r\n  },\r\n  {\r\n    \"name\": \"Kuwait\",\r\n    \"Iso\": \"+965\",\r\n    \"countryCode\": \"KW\"\r\n  },\r\n  {\r\n    \"name\": \"Kyrgyzstan\",\r\n    \"Iso\": \"+996\",\r\n    \"countryCode\": \"KG\"\r\n  },\r\n  {\r\n    \"name\": \"Laos\",\r\n    \"Iso\": \"+856\",\r\n    \"countryCode\": \"LA\"\r\n  },\r\n  {\r\n    \"name\": \"Latvia\",\r\n    \"Iso\": \"+371\",\r\n    \"countryCode\": \"LV\"\r\n  },\r\n  {\r\n    \"name\": \"Lebanon\",\r\n    \"Iso\": \"+961\",\r\n    \"countryCode\": \"LB\"\r\n  },\r\n  {\r\n    \"name\": \"Lesotho\",\r\n    \"Iso\": \"+266\",\r\n    \"countryCode\": \"LS\"\r\n  },\r\n  {\r\n    \"name\": \"Liberia\",\r\n    \"Iso\": \"+231\",\r\n    \"countryCode\": \"LR\"\r\n  },\r\n  {\r\n    \"name\": \"Libyan Arab Jamahiriya\",\r\n    \"Iso\": \"+218\",\r\n    \"countryCode\": \"LY\"\r\n  },\r\n  {\r\n    \"name\": \"Liechtenstein\",\r\n    \"Iso\": \"+423\",\r\n    \"countryCode\": \"LI\"\r\n  },\r\n  {\r\n    \"name\": \"Lithuania\",\r\n    \"Iso\": \"+370\",\r\n    \"countryCode\": \"LT\"\r\n  },\r\n  {\r\n    \"name\": \"Luxembourg\",\r\n    \"Iso\": \"+352\",\r\n    \"countryCode\": \"LU\"\r\n  },\r\n  {\r\n    \"name\": \"Macao\",\r\n    \"Iso\": \"+853\",\r\n    \"countryCode\": \"MO\"\r\n  },\r\n  {\r\n    \"name\": \"Macedonia\",\r\n    \"Iso\": \"+389\",\r\n    \"countryCode\": \"MK\"\r\n  },\r\n  {\r\n    \"name\": \"Madagascar\",\r\n    \"Iso\": \"+261\",\r\n    \"countryCode\": \"MG\"\r\n  },\r\n  {\r\n    \"name\": \"Malawi\",\r\n    \"Iso\": \"+265\",\r\n    \"countryCode\": \"MW\"\r\n  },\r\n  {\r\n    \"name\": \"Malaysia\",\r\n    \"Iso\": \"+60\",\r\n    \"countryCode\": \"MY\"\r\n  },\r\n  {\r\n    \"name\": \"Maldives\",\r\n    \"Iso\": \"+960\",\r\n    \"countryCode\": \"MV\"\r\n  },\r\n  {\r\n    \"name\": \"Mali\",\r\n    \"Iso\": \"+223\",\r\n    \"countryCode\": \"ML\"\r\n  },\r\n  {\r\n    \"name\": \"Malta\",\r\n    \"Iso\": \"+356\",\r\n    \"countryCode\": \"MT\"\r\n  },\r\n  {\r\n    \"name\": \"Marshall Islands\",\r\n    \"Iso\": \"+692\",\r\n    \"countryCode\": \"MH\"\r\n  },\r\n  {\r\n    \"name\": \"Martinique\",\r\n    \"Iso\": \"+596\",\r\n    \"countryCode\": \"MQ\"\r\n  },\r\n  {\r\n    \"name\": \"Mauritania\",\r\n    \"Iso\": \"+222\",\r\n    \"countryCode\": \"MR\"\r\n  },\r\n  {\r\n    \"name\": \"Mauritius\",\r\n    \"Iso\": \"+230\",\r\n    \"countryCode\": \"MU\"\r\n  },\r\n  {\r\n    \"name\": \"Mayotte\",\r\n    \"Iso\": \"+262\",\r\n    \"countryCode\": \"YT\"\r\n  },\r\n  {\r\n    \"name\": \"Mexico\",\r\n    \"Iso\": \"+52\",\r\n    \"countryCode\": \"MX\"\r\n  },\r\n  {\r\n    \"name\": \"Micronesia, Federated States of Micronesia\",\r\n    \"Iso\": \"+691\",\r\n    \"countryCode\": \"FM\"\r\n  },\r\n  {\r\n    \"name\": \"Moldova\",\r\n    \"Iso\": \"+373\",\r\n    \"countryCode\": \"MD\"\r\n  },\r\n  {\r\n    \"name\": \"Monaco\",\r\n    \"Iso\": \"+377\",\r\n    \"countryCode\": \"MC\"\r\n  },\r\n  {\r\n    \"name\": \"Mongolia\",\r\n    \"Iso\": \"+976\",\r\n    \"countryCode\": \"MN\"\r\n  },\r\n  {\r\n    \"name\": \"Montenegro\",\r\n    \"Iso\": \"+382\",\r\n    \"countryCode\": \"ME\"\r\n  },\r\n  {\r\n    \"name\": \"Montserrat\",\r\n    \"Iso\": \"+1664\",\r\n    \"countryCode\": \"MS\"\r\n  },\r\n  {\r\n    \"name\": \"Morocco\",\r\n    \"Iso\": \"+212\",\r\n    \"countryCode\": \"MA\"\r\n  },\r\n  {\r\n    \"name\": \"Mozambique\",\r\n    \"Iso\": \"+258\",\r\n    \"countryCode\": \"MZ\"\r\n  },\r\n  {\r\n    \"name\": \"Myanmar\",\r\n    \"Iso\": \"+95\",\r\n    \"countryCode\": \"MM\"\r\n  },\r\n  {\r\n    \"name\": \"Namibia\",\r\n    \"Iso\": \"+264\",\r\n    \"countryCode\": \"NA\"\r\n  },\r\n  {\r\n    \"name\": \"Nauru\",\r\n    \"Iso\": \"+674\",\r\n    \"countryCode\": \"NR\"\r\n  },\r\n  {\r\n    \"name\": \"Nepal\",\r\n    \"Iso\": \"+977\",\r\n    \"countryCode\": \"NP\"\r\n  },\r\n  {\r\n    \"name\": \"Netherlands\",\r\n    \"Iso\": \"+31\",\r\n    \"countryCode\": \"NL\"\r\n  },\r\n  {\r\n    \"name\": \"Netherlands Antilles\",\r\n    \"Iso\": \"+599\",\r\n    \"countryCode\": \"AN\"\r\n  },\r\n  {\r\n    \"name\": \"New Caledonia\",\r\n    \"Iso\": \"+687\",\r\n    \"countryCode\": \"NC\"\r\n  },\r\n  {\r\n    \"name\": \"New Zealand\",\r\n    \"Iso\": \"+64\",\r\n    \"countryCode\": \"NZ\"\r\n  },\r\n  {\r\n    \"name\": \"Nicaragua\",\r\n    \"Iso\": \"+505\",\r\n    \"countryCode\": \"NI\"\r\n  },\r\n  {\r\n    \"name\": \"Niger\",\r\n    \"Iso\": \"+227\",\r\n    \"countryCode\": \"NE\"\r\n  },\r\n  {\r\n    \"name\": \"Nigeria\",\r\n    \"Iso\": \"+234\",\r\n    \"countryCode\": \"NG\"\r\n  },\r\n  {\r\n    \"name\": \"Niue\",\r\n    \"Iso\": \"+683\",\r\n    \"countryCode\": \"NU\"\r\n  },\r\n  {\r\n    \"name\": \"Norfolk Island\",\r\n    \"Iso\": \"+672\",\r\n    \"countryCode\": \"NF\"\r\n  },\r\n  {\r\n    \"name\": \"Northern Mariana Islands\",\r\n    \"Iso\": \"+1670\",\r\n    \"countryCode\": \"MP\"\r\n  },\r\n  {\r\n    \"name\": \"Norway\",\r\n    \"Iso\": \"+47\",\r\n    \"countryCode\": \"NO\"\r\n  },\r\n  {\r\n    \"name\": \"Oman\",\r\n    \"Iso\": \"+968\",\r\n    \"countryCode\": \"OM\"\r\n  },\r\n  {\r\n    \"name\": \"Pakistan\",\r\n    \"Iso\": \"+92\",\r\n    \"countryCode\": \"PK\"\r\n  },\r\n  {\r\n    \"name\": \"Palau\",\r\n    \"Iso\": \"+680\",\r\n    \"countryCode\": \"PW\"\r\n  },\r\n  {\r\n    \"name\": \"Palestinian Territory, Occupied\",\r\n    \"Iso\": \"+970\",\r\n    \"countryCode\": \"PS\"\r\n  },\r\n  {\r\n    \"name\": \"Panama\",\r\n    \"Iso\": \"+507\",\r\n    \"countryCode\": \"PA\"\r\n  },\r\n  {\r\n    \"name\": \"Papua New Guinea\",\r\n    \"Iso\": \"+675\",\r\n    \"countryCode\": \"PG\"\r\n  },\r\n  {\r\n    \"name\": \"Paraguay\",\r\n    \"Iso\": \"+595\",\r\n    \"countryCode\": \"PY\"\r\n  },\r\n  {\r\n    \"name\": \"Peru\",\r\n    \"Iso\": \"+51\",\r\n    \"countryCode\": \"PE\"\r\n  },\r\n  {\r\n    \"name\": \"Philippines\",\r\n    \"Iso\": \"+63\",\r\n    \"countryCode\": \"PH\"\r\n  },\r\n  {\r\n    \"name\": \"Pitcairn\",\r\n    \"Iso\": \"+64\",\r\n    \"countryCode\": \"PN\"\r\n  },\r\n  {\r\n    \"name\": \"Poland\",\r\n    \"Iso\": \"+48\",\r\n    \"countryCode\": \"PL\"\r\n  },\r\n  {\r\n    \"name\": \"Portugal\",\r\n    \"Iso\": \"+351\",\r\n    \"countryCode\": \"PT\"\r\n  },\r\n  {\r\n    \"name\": \"Puerto Rico\",\r\n    \"Iso\": \"+1939\",\r\n    \"countryCode\": \"PR\"\r\n  },\r\n  {\r\n    \"name\": \"Qatar\",\r\n    \"Iso\": \"+974\",\r\n    \"countryCode\": \"QA\"\r\n  },\r\n  {\r\n    \"name\": \"Romania\",\r\n    \"Iso\": \"+40\",\r\n    \"countryCode\": \"RO\"\r\n  },\r\n  {\r\n    \"name\": \"Russia\",\r\n    \"Iso\": \"+7\",\r\n    \"countryCode\": \"RU\"\r\n  },\r\n  {\r\n    \"name\": \"Rwanda\",\r\n    \"Iso\": \"+250\",\r\n    \"countryCode\": \"RW\"\r\n  },\r\n  {\r\n    \"name\": \"Reunion\",\r\n    \"Iso\": \"+262\",\r\n    \"countryCode\": \"RE\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Barthelemy\",\r\n    \"Iso\": \"+590\",\r\n    \"countryCode\": \"BL\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Helena, Ascension and Tristan Da Cunha\",\r\n    \"Iso\": \"+290\",\r\n    \"countryCode\": \"SH\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Kitts and Nevis\",\r\n    \"Iso\": \"+1869\",\r\n    \"countryCode\": \"KN\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Lucia\",\r\n    \"Iso\": \"+1758\",\r\n    \"countryCode\": \"LC\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Martin\",\r\n    \"Iso\": \"+590\",\r\n    \"countryCode\": \"MF\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Pierre and Miquelon\",\r\n    \"Iso\": \"+508\",\r\n    \"countryCode\": \"PM\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Vincent and the Grenadines\",\r\n    \"Iso\": \"+1784\",\r\n    \"countryCode\": \"VC\"\r\n  },\r\n  {\r\n    \"name\": \"Samoa\",\r\n    \"Iso\": \"+685\",\r\n    \"countryCode\": \"WS\"\r\n  },\r\n  {\r\n    \"name\": \"San Marino\",\r\n    \"Iso\": \"+378\",\r\n    \"countryCode\": \"SM\"\r\n  },\r\n  {\r\n    \"name\": \"Sao Tome and Principe\",\r\n    \"Iso\": \"+239\",\r\n    \"countryCode\": \"ST\"\r\n  },\r\n  {\r\n    \"name\": \"Saudi Arabia\",\r\n    \"Iso\": \"+966\",\r\n    \"countryCode\": \"SA\"\r\n  },\r\n  {\r\n    \"name\": \"Senegal\",\r\n    \"Iso\": \"+221\",\r\n    \"countryCode\": \"SN\"\r\n  },\r\n  {\r\n    \"name\": \"Serbia\",\r\n    \"Iso\": \"+381\",\r\n    \"countryCode\": \"RS\"\r\n  },\r\n  {\r\n    \"name\": \"Seychelles\",\r\n    \"Iso\": \"+248\",\r\n    \"countryCode\": \"SC\"\r\n  },\r\n  {\r\n    \"name\": \"Sierra Leone\",\r\n    \"Iso\": \"+232\",\r\n    \"countryCode\": \"SL\"\r\n  },\r\n  {\r\n    \"name\": \"Singapore\",\r\n    \"Iso\": \"+65\",\r\n    \"countryCode\": \"SG\"\r\n  },\r\n  {\r\n    \"name\": \"Slovakia\",\r\n    \"Iso\": \"+421\",\r\n    \"countryCode\": \"SK\"\r\n  },\r\n  {\r\n    \"name\": \"Slovenia\",\r\n    \"Iso\": \"+386\",\r\n    \"countryCode\": \"SI\"\r\n  },\r\n  {\r\n    \"name\": \"Solomon Islands\",\r\n    \"Iso\": \"+677\",\r\n    \"countryCode\": \"SB\"\r\n  },\r\n  {\r\n    \"name\": \"Somalia\",\r\n    \"Iso\": \"+252\",\r\n    \"countryCode\": \"SO\"\r\n  },\r\n  {\r\n    \"name\": \"South Africa\",\r\n    \"Iso\": \"+27\",\r\n    \"countryCode\": \"ZA\"\r\n  },\r\n  {\r\n    \"name\": \"South Sudan\",\r\n    \"Iso\": \"+211\",\r\n    \"countryCode\": \"SS\"\r\n  },\r\n  {\r\n    \"name\": \"South Georgia and the South Sandwich Islands\",\r\n    \"Iso\": \"+500\",\r\n    \"countryCode\": \"GS\"\r\n  },\r\n  {\r\n    \"name\": \"Spain\",\r\n    \"Iso\": \"+34\",\r\n    \"countryCode\": \"ES\"\r\n  },\r\n  {\r\n    \"name\": \"Sri Lanka\",\r\n    \"Iso\": \"+94\",\r\n    \"countryCode\": \"LK\"\r\n  },\r\n  {\r\n    \"name\": \"Sudan\",\r\n    \"Iso\": \"+249\",\r\n    \"countryCode\": \"SD\"\r\n  },\r\n  {\r\n    \"name\": \"Suriname\",\r\n    \"Iso\": \"+597\",\r\n    \"countryCode\": \"SR\"\r\n  },\r\n  {\r\n    \"name\": \"Svalbard and Jan Mayen\",\r\n    \"Iso\": \"+47\",\r\n    \"countryCode\": \"SJ\"\r\n  },\r\n  {\r\n    \"name\": \"Swaziland\",\r\n    \"Iso\": \"+268\",\r\n    \"countryCode\": \"SZ\"\r\n  },\r\n  {\r\n    \"name\": \"Sweden\",\r\n    \"Iso\": \"+46\",\r\n    \"countryCode\": \"SE\"\r\n  },\r\n  {\r\n    \"name\": \"Switzerland\",\r\n    \"Iso\": \"+41\",\r\n    \"countryCode\": \"CH\"\r\n  },\r\n  {\r\n    \"name\": \"Syrian Arab Republic\",\r\n    \"Iso\": \"+963\",\r\n    \"countryCode\": \"SY\"\r\n  },\r\n  {\r\n    \"name\": \"Taiwan\",\r\n    \"Iso\": \"+886\",\r\n    \"countryCode\": \"TW\"\r\n  },\r\n  {\r\n    \"name\": \"Tajikistan\",\r\n    \"Iso\": \"+992\",\r\n    \"countryCode\": \"TJ\"\r\n  },\r\n  {\r\n    \"name\": \"Tanzania, United Republic of Tanzania\",\r\n    \"Iso\": \"+255\",\r\n    \"countryCode\": \"TZ\"\r\n  },\r\n  {\r\n    \"name\": \"Thailand\",\r\n    \"Iso\": \"+66\",\r\n    \"countryCode\": \"TH\"\r\n  },\r\n  {\r\n    \"name\": \"Timor-Leste\",\r\n    \"Iso\": \"+670\",\r\n    \"countryCode\": \"TL\"\r\n  },\r\n  {\r\n    \"name\": \"Togo\",\r\n    \"Iso\": \"+228\",\r\n    \"countryCode\": \"TG\"\r\n  },\r\n  {\r\n    \"name\": \"Tokelau\",\r\n    \"Iso\": \"+690\",\r\n    \"countryCode\": \"TK\"\r\n  },\r\n  {\r\n    \"name\": \"Tonga\",\r\n    \"Iso\": \"+676\",\r\n    \"countryCode\": \"TO\"\r\n  },\r\n  {\r\n    \"name\": \"Trinidad and Tobago\",\r\n    \"Iso\": \"+1868\",\r\n    \"countryCode\": \"TT\"\r\n  },\r\n  {\r\n    \"name\": \"Tunisia\",\r\n    \"Iso\": \"+216\",\r\n    \"countryCode\": \"TN\"\r\n  },\r\n  {\r\n    \"name\": \"Turkey\",\r\n    \"Iso\": \"+90\",\r\n    \"countryCode\": \"TR\"\r\n  },\r\n  {\r\n    \"name\": \"Turkmenistan\",\r\n    \"Iso\": \"+993\",\r\n    \"countryCode\": \"TM\"\r\n  },\r\n  {\r\n    \"name\": \"Turks and Caicos Islands\",\r\n    \"Iso\": \"+1649\",\r\n    \"countryCode\": \"TC\"\r\n  },\r\n  {\r\n    \"name\": \"Tuvalu\",\r\n    \"Iso\": \"+688\",\r\n    \"countryCode\": \"TV\"\r\n  },\r\n  {\r\n    \"name\": \"Uganda\",\r\n    \"Iso\": \"+256\",\r\n    \"countryCode\": \"UG\"\r\n  },\r\n  {\r\n    \"name\": \"Ukraine\",\r\n    \"Iso\": \"+380\",\r\n    \"countryCode\": \"UA\"\r\n  },\r\n  {\r\n    \"name\": \"United Arab Emirates\",\r\n    \"Iso\": \"+971\",\r\n    \"countryCode\": \"AE\"\r\n  },\r\n  {\r\n    \"name\": \"United Kingdom\",\r\n    \"Iso\": \"+44\",\r\n    \"countryCode\": \"GB\"\r\n  },\r\n  {\r\n    \"name\": \"United States\",\r\n    \"Iso\": \"+1\",\r\n    \"countryCode\": \"US\"\r\n  },\r\n  {\r\n    \"name\": \"Uruguay\",\r\n    \"Iso\": \"+598\",\r\n    \"countryCode\": \"UY\"\r\n  },\r\n  {\r\n    \"name\": \"Uzbekistan\",\r\n    \"Iso\": \"+998\",\r\n    \"countryCode\": \"UZ\"\r\n  },\r\n  {\r\n    \"name\": \"Vanuatu\",\r\n    \"Iso\": \"+678\",\r\n    \"countryCode\": \"VU\"\r\n  },\r\n  {\r\n    \"name\": \"Venezuela, Bolivarian Republic of Venezuela\",\r\n    \"Iso\": \"+58\",\r\n    \"countryCode\": \"VE\"\r\n  },\r\n  {\r\n    \"name\": \"Vietnam\",\r\n    \"Iso\": \"+84\",\r\n    \"countryCode\": \"VN\"\r\n  },\r\n  {\r\n    \"name\": \"Virgin Islands, British\",\r\n    \"Iso\": \"+1284\",\r\n    \"countryCode\": \"VG\"\r\n  },\r\n  {\r\n    \"name\": \"Virgin Islands, U.S.\",\r\n    \"Iso\": \"+1340\",\r\n    \"countryCode\": \"VI\"\r\n  },\r\n  {\r\n    \"name\": \"Wallis and Futuna\",\r\n    \"Iso\": \"+681\",\r\n    \"countryCode\": \"WF\"\r\n  },\r\n  {\r\n    \"name\": \"Yemen\",\r\n    \"Iso\": \"+967\",\r\n    \"countryCode\": \"YE\"\r\n  },\r\n  {\r\n    \"name\": \"Zambia\",\r\n    \"Iso\": \"+260\",\r\n    \"countryCode\": \"ZM\"\r\n  },\r\n  {\r\n    \"name\": \"Zimbabwe\",\r\n    \"Iso\": \"+263\",\r\n    \"countryCode\": \"ZW\"\r\n  }\r\n]\r\n\r\nexport {\r\n  CountryCodes\r\n}","enum SubProducts {\r\n  ORDERS= 1,\r\n  COLOUR= 2,\r\n  SIZE = 3,\r\n  SUB_PRODUCT = 4,\r\n  PRODUCT = 5,\r\n  COUPONS = 6,\r\n  USERS = 7,\r\n  SHIPPER = 8 \r\n}\r\n\r\nconst SubCategories: Record<string, number> = {\r\n  'Lingerie': 1,\r\n  'Footwear': 2,\r\n  'Bindi': 3,\r\n  'Handicraft': 4\r\n}\r\n\r\n/**\r\n * Allow return for \r\n * Footwear and HomeDecore\r\n */\r\nconst AllowReturn = ['2','3'];\r\n\r\nexport {\r\n  SubProducts,\r\n  SubCategories,\r\n  AllowReturn\r\n}","import { Action, Dispatch } from 'redux';\r\n\r\nimport { User } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n/* Interface */\r\nexport interface UserInformationAction extends Action {\r\n  readonly data?: User;\r\n  readonly allUsers?: User[];\r\n  readonly message?: string;\r\n};\r\n\r\n\r\nexport interface UserInformation {\r\n  readonly data?: User;\r\n  readonly allUsers?: User[];\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n};\r\n\r\n\r\n/* Initial State */\r\nconst initialState  = {\r\n  data: {\r\n    isAdmin: false,\r\n  },\r\n  allUsers :[],\r\n  _isError: false,\r\n  _isLoading: false,\r\n  _isSuccess: false,\r\n  message: ''\r\n} as UserInformation;\r\n\r\n\r\n/* Actions*/\r\n\r\nenum Actions {\r\n  SET_USER = \"SET_USER\",\r\n  LOADING_USER = \"LOADING_USER\",\r\n  ERROR_USER = \"ERROR_USER\",\r\n  SET_ALL_USER = 'SET_ALL_USER',\r\n  UPDATE_USER_DISCOUNT = 'UPDATE_USER_DISCOUNT',\r\n  DEFAULT_USER = 'DEFAULT_USER'\r\n}\r\n\r\nconst setUser = (user: User) => ({\r\n  type: Actions.SET_USER,\r\n  data: user\r\n});\r\n\r\nconst setAllUser = (user: User[]) => ({\r\n  type: Actions.SET_ALL_USER,\r\n  allUsers: user\r\n});\r\n\r\nconst loadingUser = () => ({\r\n  type: Actions.LOADING_USER\r\n});\r\n\r\nconst defaultUser = () => ({\r\n  type: Actions.DEFAULT_USER\r\n});\r\n\r\nconst errorUser = (message: string) => ({\r\n  type: Actions.ERROR_USER,\r\n  message\r\n});\r\n\r\nconst updateDiscount = (emailAddress:string, discount: string, message: string) => ({\r\n  type: Actions.UPDATE_USER_DISCOUNT,\r\n  data: {emailAddress, discount},\r\n  message\r\n});\r\n\r\n\r\n/* Reducer */\r\n\r\nconst userInformationReducer = (state = initialState, action: UserInformationAction): UserInformation => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_USER:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      };\r\n    case Actions.SET_USER:\r\n      return {\r\n        ...state,\r\n        data : action.data,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: true,\r\n        message: action.message\r\n      };\r\n    case Actions.DEFAULT_USER:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      };\r\n    case Actions.SET_ALL_USER:\r\n      return {\r\n        ...state,\r\n        allUsers : action.allUsers,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: true,\r\n        message: action.message\r\n      };\r\n    case Actions.UPDATE_USER_DISCOUNT:\r\n      return {\r\n        ...state,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: true,\r\n        message: action.message,\r\n        allUsers : state.allUsers?.map((user) => {\r\n          if(user.emailAddress?.toLowerCase() === action.data?.emailAddress){\r\n            return {...user, discount:action.data?.discount}\r\n          }\r\n          return user\r\n        }),\r\n      };\r\n    case Actions.ERROR_USER:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: true,\r\n        _isSuccess: true,\r\n        message: action.message\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/* Thunk */\r\n\r\nconst getUser = () =>  async (disptach: Dispatch<UserInformationAction>) => {\r\n  disptach(loadingUser());\r\n  \r\n  const response =  await api.get('/userinfo');\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(setUser(response.data.data as User));\r\n  } else {\r\n    disptach(errorUser('Some error occured, try again.'));\r\n  }\r\n};\r\n\r\nconst saveUser = (data: User) =>  async (disptach: Dispatch<UserInformationAction>) => {\r\n  disptach(loadingUser());\r\n  \r\n  const response =  await api.post('/userinfo', data);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data.data as User;\r\n    disptach(setUser({\r\n      ...data,\r\n      addressId : res\r\n    } as User));\r\n  } else {\r\n    disptach(errorUser('Some error occured, try again.'));\r\n  }\r\n};\r\n\r\nconst getAllUser = () =>  async (disptach: Dispatch<UserInformationAction>) => {\r\n  disptach(loadingUser());\r\n  \r\n  const response =  await api.get('/alluserinformation');\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(setAllUser(response.data.data as User[]));\r\n  } else {\r\n    disptach(errorUser('Some error occured, try again.'));\r\n  }\r\n};\r\n\r\nconst updateUserDiscount = (discount: string, email: string) =>  async (disptach: Dispatch<UserInformationAction>) => {\r\n  disptach(loadingUser());\r\n  \r\n  const response =  await api.post('/userdiscount', {\r\n    email,\r\n    discount\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(updateDiscount(email,discount, 'Discount Updated'));\r\n  } else {\r\n    disptach(errorUser('Some error occured, try again.'));\r\n  }\r\n};\r\n\r\nexport {\r\n  userInformationReducer,\r\n  getUser,\r\n  saveUser,\r\n  getAllUser,\r\n  setUser,\r\n  updateUserDiscount,\r\n  defaultUser\r\n};\r\n","const apiServerHost = 'https://api.basickart.com/';\r\n\r\nconst serverImagePath = apiServerHost + 'images/'\r\n\r\nexport {\r\n  apiServerHost,\r\n  serverImagePath\r\n}","import axios from 'axios';\r\n\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://basickart.com/v1',\r\n  headers: {\r\n    'Accept': 'application/json;charset=UTF-8',\r\n    'Authorization': ''\r\n  }\r\n});","import{ AxiosRequestConfig } from 'axios';\r\n\r\nimport { HttpRequest } from 'appConstants';\r\nimport axios from './axiosBase';\r\n\r\nconst setAuthToken = (): void => {\r\n  axios.defaults.headers['Authorization'] = 'Bearer ' + window.localStorage.getItem('biktoken');\r\n};\r\n\r\nconst api = {\r\n  get: (url: string) => {\r\n    return makeRequest({\r\n      method: HttpRequest.GET,\r\n      url\r\n    })\r\n  },\r\n\r\n  post: (url: string, data: object) => {\r\n    return makeRequest({\r\n      method: HttpRequest.POST,\r\n      url,\r\n      data\r\n    })\r\n  }\r\n};\r\n\r\nconst makeRequest = async (config: AxiosRequestConfig) => {\r\n  try {\r\n    setAuthToken();\r\n    const response = await axios.request(config);\r\n    return response;\r\n  } catch (error) {\r\n    if(error.response.status === 401 || error.response.status === 422 || error.response.status === 404){\r\n      window.localStorage.removeItem('biktoken')\r\n      window.location.href = '/login';\r\n      return {\r\n        message: error.response.data.message || 'Auth expired',\r\n        data: {}\r\n      }\r\n    }else {\r\n      return {\r\n        message: error.response.data.message || 'Default Api error',\r\n        status: error.response.status || 400,\r\n        data: {}\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport { api, setAuthToken };","import { ProductSubCategory, ActiveProductCount, ProductSubcategoryProperty, ProductItem, OrderItems } from \"types\";\r\nimport { SubCategory, Size } from \"reducers\";\r\n\r\nconst getSubCategoryFromId = (id: Number) => {\r\n  switch (id) {\r\n    case 1:\r\n      return \"Lingerie\";\r\n    case 2:\r\n      return \"Footwear\";\r\n    case 3:\r\n      return \"Bindi\";\r\n    case 4:\r\n      return \"Handicraft\";\r\n  }\r\n};\r\n\r\nconst filterSubcategories = (subCategories: SubCategory, categoryId = 0) => {\r\n  return (subCategories.data &&\r\n    subCategories.data.filter((subCategory) => {\r\n      return subCategory.productCategoryId === Number(categoryId)\r\n    })) || [];\r\n};\r\n\r\nconst filterSize = (sizes: Size, categoryId: number[]) => {\r\n  return (sizes.data &&\r\n    sizes.data.filter((size) => {\r\n      return  categoryId.indexOf((size.productCategory || 0)) > -1\r\n    })) || [];\r\n};\r\n\r\nconst calculateUserDiscount = (discount: string, price: string) => {\r\n  return Math.ceil(Number(price) - (Number(price) * (Number(discount) / 100))).toString();\r\n};\r\n\r\nconst calculateUserDiscountPrice = (discount: string, price: string) => {\r\n  return Math.ceil(Number(price) * (Number(discount)) / 100).toString();\r\n};\r\n\r\nconst getCurrencyIcon = (currency: string) => {\r\n  return currency === 'IN' ? '₹' : '$'\r\n};\r\n\r\nconst showINRUSD = (userLocation: string, price : {priceINR: string, priceUSD: string}) => {\r\n  return userLocation === 'IN' ? price.priceINR : price.priceUSD;\r\n}\r\n\r\nconst createProductCountList = (activeProducts: ActiveProductCount[]) => {\r\n  let productCountList = {} as ProductSubcategoryProperty;\r\n  activeProducts.forEach((product: ActiveProductCount) => {\r\n    if(!productCountList[product.subcategoryId]) {\r\n      productCountList[product.subcategoryId] = {\r\n        name: product.subcategoryName,\r\n        [product.colourId] : {\r\n          name: product.colourName,\r\n          [product.sizeId] : {\r\n            name: product.sizeName,\r\n            quantity: product.count\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      if(!productCountList[product.subcategoryId][product.colourId]) {\r\n        productCountList[product.subcategoryId][product.colourId] = {\r\n          name: product.colourName,\r\n          [product.sizeId] : {\r\n            name: product.sizeName,\r\n            quantity: product.count\r\n          }\r\n        }\r\n      } else {\r\n        productCountList[product.subcategoryId][product.colourId][product.sizeId] = {\r\n          name: product.sizeName,\r\n          quantity: product.count\r\n        }\r\n      }\r\n    }\r\n  });\r\n  return productCountList;\r\n};\r\n\r\nconst countHighlightProducts = (products: ProductItem[], isTrending: boolean) => {\r\n  if(isTrending){\r\n    return products.filter(({trending}) => trending).length;\r\n  } else {\r\n    return products.filter(({latest}) => latest).length;\r\n  }\r\n  \r\n};\r\n\r\nconst getIconForAdminOrder = (orderItems: OrderItems[]) => {\r\n  const orderLength = orderItems.length;\r\n  let icon = '';\r\n  for(var i = 0 ; i< orderLength; i++){\r\n    const shipmentDetails = orderItems[i].shipmentDetails;\r\n    if(shipmentDetails){\r\n      if(shipmentDetails.paymentReturned && shipmentDetails.paymentReturned.toLowerCase() === 'yes'){\r\n        icon = 'lifesaver';\r\n        break;\r\n      } else if(shipmentDetails.paymentReturned && shipmentDetails.paymentReturned.toLowerCase() === 'no'){\r\n        icon = 'warning';\r\n        break;\r\n      } else if(shipmentDetails.returnStatus && shipmentDetails.returnStatus.toLowerCase() === 'in progress'){\r\n        icon = 'history';\r\n        break;\r\n      } else if(shipmentDetails.returnStatus && shipmentDetails.returnStatus.toLowerCase() === 'accepted'){\r\n        icon = 'plus-circle';\r\n        break;\r\n      } else if(shipmentDetails.returnStatus && shipmentDetails.returnStatus.toLowerCase() === 'declined'){\r\n        icon = 'minus-circle';\r\n        break;\r\n      } else if(shipmentDetails.shipper){\r\n        icon = 'cart';\r\n        break;\r\n      } else if(shipmentDetails.deliveryDate){\r\n        icon = 'check';\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return icon;\r\n};\r\n\r\nconst getPaypalTransactionId = (payaplResponse: any) =>{\r\n  let transactionId = '';\r\n  if(payaplResponse.paymentData){\r\n    if(payaplResponse.paymentData.purchase_units){\r\n      if(payaplResponse.paymentData.purchase_units[0]){\r\n        if(payaplResponse.paymentData.purchase_units[0].payments){\r\n          if(payaplResponse.paymentData.purchase_units[0].payments.captures){\r\n            if(payaplResponse.paymentData.purchase_units[0].payments.captures[0]){\r\n              if(payaplResponse.paymentData.purchase_units[0].payments.captures[0].id){\r\n                transactionId = payaplResponse.paymentData.purchase_units[0].payments.captures[0].id;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return transactionId;\r\n}\r\n\r\nexport {\r\n  getSubCategoryFromId,\r\n  filterSubcategories,\r\n  filterSize,\r\n  calculateUserDiscount,\r\n  getCurrencyIcon,\r\n  calculateUserDiscountPrice,\r\n  createProductCountList,\r\n  showINRUSD,\r\n  countHighlightProducts,\r\n  getIconForAdminOrder,\r\n  getPaypalTransactionId\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { Login } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\ninterface UserLoginRegisterAction extends Action {\r\n  data?: string;\r\n}\r\n\r\ninterface UserLoginResponse {\r\n  message: string;\r\n  access_token?: string;\r\n};\r\n\r\nexport interface UserLoginRegister {\r\n  _isLoading: boolean;\r\n  _isError: boolean;\r\n  _isSuccess: boolean;\r\n  message?: string;\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading : false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: ''\r\n} as UserLoginRegister;\r\n\r\nenum Actions {\r\n  LOADING_LOGIN = 'LOADING_LOGIN',\r\n  ERROR_LOGIN = 'ERROR_LOGIN',\r\n  SUCCESS_LOGIN = 'SUCCESS_LOGIN',\r\n  LOADING_REGISTER = 'LOADING_REGISTER',\r\n  ERROR_REGISTER = 'ERROR_REGISTER',\r\n  SUCCESS_REGISTER = 'SUCCESS_REGISTER',\r\n  DEFAULT_STATE = 'DEFAULT_STATE'\r\n};\r\n\r\nconst loadingLogin = () => ({\r\n  type : Actions.LOADING_LOGIN\r\n});\r\n\r\nconst errorLogin = (message: string) => ({\r\n  type : Actions.ERROR_LOGIN,\r\n  data: message\r\n});\r\n\r\nconst successLogin = () => ({\r\n  type : Actions.SUCCESS_LOGIN\r\n});\r\n\r\nconst loadingRegister = () => ({\r\n  type : Actions.LOADING_REGISTER\r\n});\r\n\r\nconst errorRegister = (message: string) => ({\r\n  type : Actions.ERROR_REGISTER,\r\n  data: message\r\n});\r\n\r\nconst successRegister = (message: string) => ({\r\n  type : Actions.SUCCESS_REGISTER,\r\n  data: message\r\n});\r\n\r\nconst defaultLoginRegister = () => ({\r\n  type: Actions.DEFAULT_STATE\r\n})\r\n\r\n\r\nconst userLoginReducer = (state = initialState, action: UserLoginRegisterAction): UserLoginRegister  => {\r\n  \r\n  switch (action.type) {\r\n    case Actions.LOADING_LOGIN:\r\n    case Actions.LOADING_REGISTER:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      };\r\n    case Actions.ERROR_LOGIN:\r\n    case Actions.ERROR_REGISTER:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        message: action.data\r\n      };\r\n    case Actions.SUCCESS_LOGIN:\r\n    case Actions.SUCCESS_REGISTER:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess: true,\r\n        message: action.data\r\n      };\r\n    case Actions.DEFAULT_STATE:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nconst userLogin = (loginData: Login) =>  async (dispatch: Dispatch<Action>) => {\r\n  \r\n  dispatch(loadingLogin());\r\n  const response =  await api.post('/login', loginData);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as UserLoginResponse;\r\n    window.localStorage.setItem('biktoken', res.access_token || '');\r\n    dispatch(successLogin());\r\n  } else{\r\n    const res = response as UserLoginResponse;\r\n    dispatch(errorLogin(res.message));\r\n  }\r\n};\r\n\r\nconst userRegister = (registerationData: Login) => async (dispatch: Dispatch<Action>) => {\r\n  dispatch(loadingRegister());\r\n  const response = await api.post('/registration', registerationData);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as UserLoginResponse;\r\n    dispatch(successRegister(res.message));\r\n  } else{\r\n    const res = response as UserLoginResponse;\r\n    dispatch(errorRegister(res.message));\r\n  }\r\n}\r\n\r\nconst forgetPassword = (loginDetails: Login) => async (dispatch: Dispatch<Action>) => {\r\n  dispatch(loadingRegister());\r\n  const response = await api.post('/forgetpassword', loginDetails);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as UserLoginResponse;\r\n    dispatch(successRegister(res.message));\r\n  } else{\r\n    const res = response as UserLoginResponse;\r\n    dispatch(errorRegister(res.message));\r\n  }\r\n}\r\n\r\n\r\nexport {\r\n  userLogin,\r\n  userLoginReducer,\r\n  loadingLogin,\r\n  loadingRegister,\r\n  errorLogin,\r\n  errorRegister,\r\n  successLogin,\r\n  successRegister,\r\n  defaultLoginRegister,\r\n  userRegister,\r\n  forgetPassword\r\n}","import {Action, Dispatch} from 'redux';\r\n\r\nimport { UserSettings } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n/* Interface*/\r\nexport interface UserSettingsAction extends Action {\r\n  readonly data?: UserSettings;\r\n}\r\n\r\nexport interface UserSetting {\r\n  readonly data?: UserSettings;\r\n  _isLoading: boolean;\r\n  _isError: boolean;\r\n}\r\n\r\nconst initialState = {\r\n  data : {\r\n    emailAddress : '',\r\n  },\r\n  _isLoading: false,\r\n  _isError: false\r\n} as UserSetting\r\n\r\n/* Actions */\r\n\r\nenum Actions {\r\n  SET_USER_SETTINGS = \"SET_USER_SETTINGS\",\r\n  LOADING_USER_SETTINGS = \"LOADING_USER_SETTINGS\",\r\n  ERROR_USER_SETTINGS = \"ERROR_USER_SETTINGS\"\r\n}\r\n\r\nconst setUserSetting = (userSettings: UserSettings) => ({\r\n  type: Actions.SET_USER_SETTINGS,\r\n  data: userSettings\r\n});\r\n\r\nconst loadingUserSettings = () => ({\r\n  type: Actions.LOADING_USER_SETTINGS\r\n});\r\n\r\nconst errorUserSettings = () => ({\r\n  type: Actions.ERROR_USER_SETTINGS\r\n});\r\n\r\nconst userSettingsReducer = (state = initialState, action: UserSettingsAction) => {\r\n  switch(action.type) {\r\n    case Actions.SET_USER_SETTINGS:\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n        _isLoading: false,\r\n        _isError: false,\r\n      };\r\n    case Actions.LOADING_USER_SETTINGS:\r\n      return{\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false\r\n      };\r\n    case Actions.ERROR_USER_SETTINGS:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: true\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n/* Thunk */\r\n\r\nconst getUserSettings = () => async (disptach: Dispatch<UserSettingsAction>) => {\r\n  disptach(loadingUserSettings());\r\n  \r\n  const response =  await api.get('/passwordchange');\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(setUserSetting(response.data.data as UserSettings));\r\n  } else {\r\n    disptach(errorUserSettings());\r\n  }\r\n};\r\n\r\n\r\nconst saveUserSettings = (data: UserSettings) => async (disptach: Dispatch<UserSettingsAction>) => {\r\n  disptach(loadingUserSettings());\r\n  \r\n  const response =  await api.post('/passwordchange', data);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(setUserSetting({emailAddress : data.emailAddress, currentPassword: '', newPassword: ''} as UserSettings));\r\n  } else {\r\n    disptach(errorUserSettings());\r\n  }\r\n};\r\n\r\nexport {\r\n  userSettingsReducer,\r\n  getUserSettings,\r\n  saveUserSettings\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { ProductColor } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface ColourAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductColor[]\r\n}\r\n\r\nexport interface ColourResponse {\r\n  message?: string\r\n  data?: ProductColor[]\r\n}\r\n\r\nexport interface Colour {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductColor[];\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n  data: {}\r\n} as Colour;\r\n\r\nenum Actions {\r\n  LOADING_COLOUR = 'LOADING_COLOUR',\r\n  ERROR_COLOUR = 'ERROR_COLOUR',\r\n  SUCCESS_COLOUR = 'SUCCESS_COLOUR',\r\n  DEFAULT_COLOUR = 'DEFAULT_COLOUR',\r\n  SET_COLOUR = 'SET_COLOUR',\r\n  UPDATE_COLOUR_SUCCESS = 'UPDATE_COLOUR_SUCCESS'\r\n};\r\n\r\nconst loadingColour = () => ({\r\n  type: Actions.LOADING_COLOUR\r\n});\r\n\r\nconst successColour = (message: string) => ({\r\n  type: Actions.SUCCESS_COLOUR,\r\n  message\r\n});\r\n\r\nconst errorColour = (message: string) => ({\r\n  type: Actions.ERROR_COLOUR,\r\n  message\r\n});\r\n\r\nconst defaultColour = () => ({\r\n  type: Actions.DEFAULT_COLOUR\r\n});\r\n\r\nconst setColour = (data: ProductColor[]) => ({\r\n  type: Actions.SET_COLOUR,\r\n  data\r\n});\r\n\r\nconst updateColourSuccess = (data: ProductColor[], message: string) => ({\r\n  type: Actions.UPDATE_COLOUR_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst colourReducer = (state = initialState, action: ColourAction): Colour => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_COLOUR:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_COLOUR:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_COLOUR:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_COLOUR:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_COLOUR_SUCCESS:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.colourId != updatedValue[0].colourId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue\r\n        ]\r\n      }\r\n    case Actions.DEFAULT_COLOUR:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst saveColour = (colour: ProductColor) => async (dispatch: Dispatch<ColourAction>) => {\r\n  dispatch(loadingColour());\r\n  const response = await api.post('/productcolour',\r\n    {\r\n      product_color_code: colour.code,\r\n      product_color: colour.value,\r\n      colour_id: 0\r\n    });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ColourResponse\r\n    dispatch(successColour(res.message || ''));\r\n  } else {\r\n    const res = response as ColourResponse\r\n    dispatch(errorColour(res.message || ''));\r\n  }\r\n}\r\n\r\nconst getColour = () => async (dispatch: Dispatch<ColourAction>) => {\r\n  dispatch(loadingColour());\r\n\r\n  const response = await api.get('/productcolour');\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as ColourResponse;\r\n    dispatch(setColour(res.data || []));\r\n  } else {\r\n    const res = response as ColourResponse;\r\n    dispatch(errorColour(res.message || ''))\r\n  }\r\n}\r\n\r\nconst updateColour = (colour: ProductColor) => async (dispatch: Dispatch<ColourAction>) => {\r\n  dispatch(loadingColour());\r\n\r\n  const response = await api.post('/productcolour', {\r\n    product_color_code: colour.code,\r\n    product_color: colour.value,\r\n    colour_id: colour.colourId\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ColourResponse\r\n    dispatch(updateColourSuccess([colour], res.message || ''));\r\n  } else {\r\n    const res = response as ColourResponse\r\n    dispatch(errorColour(res.message || ''));\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  colourReducer,\r\n  saveColour,\r\n  defaultColour,\r\n  getColour,\r\n  updateColour\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { ProductSize } from 'types';\r\nimport { api, getSubCategoryFromId } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface SizeAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductSize[];\r\n}\r\n\r\ninterface SizeResponse {\r\n   message?: string;\r\n   data?: ProductSize[];\r\n}\r\n\r\nexport interface Size {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductSize[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_SIZE= 'LOADING_SIZE',\r\n  SUCCESS_SIZE= 'SUCCESS_SIZE',\r\n  ERROR_SIZE= 'ERROR_SIZE',\r\n  SET_SIZE= 'SET_SIZE',\r\n  UPDATE_SIZE= 'UPDATE_SIZE',\r\n}\r\n\r\nconst loadingSize= () => ({\r\n  type: Actions.LOADING_SIZE\r\n});\r\n\r\nconst successSize= (message: string) => ({\r\n  type: Actions.SUCCESS_SIZE,\r\n  message\r\n});\r\n\r\nconst errorSize= (message: string) => ({\r\n  type: Actions.SUCCESS_SIZE,\r\n  message\r\n});\r\n\r\nconst setSize= (data: ProductSize[]) => ({\r\n  type: Actions.SET_SIZE,\r\n  data\r\n});\r\n\r\nconst updateSize= (data: ProductSize[], message: string) => ({\r\n  type: Actions.UPDATE_SIZE,\r\n  data,\r\n  message\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as Size\r\n\r\n\r\nconst sizeReducer = (state= initialState, action: SizeAction): Size => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_SIZE:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_SIZE:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_SIZE:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_SIZE:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_SIZE:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.sizeId != updatedValue[0].sizeId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue,\r\n        ]\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/**Thunk */\r\n\r\nconst addUpdateSize = (size: ProductSize) => async (dispatch: Dispatch<SizeAction>) => {\r\n  dispatch(loadingSize());\r\n\r\n  const response = await api.post('/productsize',\r\n    {\r\n      product_size:size.value,\r\n      product_size_code: size.code,\r\n      product_category: Number(size.productCategory),\r\n      size_id: size.sizeId\r\n    });\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as SizeResponse;\r\n    if(size.sizeId != '0'){\r\n      const productCategoryIndex  = size.productCategory ? size.productCategory : 1;\r\n      dispatch(updateSize([{...size, productCategoryName: getSubCategoryFromId(Number(productCategoryIndex))}], res.message || ''));\r\n    } else{\r\n      dispatch(successSize(res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as SizeResponse;\r\n    dispatch(errorSize(res.message || ''));\r\n  }\r\n}\r\n\r\nconst getSize= () => async (dispatch: Dispatch<SizeAction>) => {\r\n  dispatch(loadingSize());\r\n\r\n  const response = await api.get('/productsize');\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as SizeResponse;\r\n    dispatch(setSize(res.data || []))\r\n  } else {\r\n    const res = response as SizeResponse;\r\n    dispatch(errorSize(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  addUpdateSize,\r\n  sizeReducer,\r\n  getSize\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { ProductSubCategory } from 'types';\r\nimport { api, getSubCategoryFromId } from 'services';\r\nimport { HttpStatusCode, SubCategories } from 'appConstants';\r\n\r\nexport interface SubCategoryAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductSubCategory[];\r\n}\r\n\r\ninterface SubCategoryResponse {\r\n  message?: string;\r\n  data?: ProductSubCategory[];\r\n}\r\n\r\nexport interface SubCategory {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductSubCategory[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_SUBCATEGORY= 'LOADING_SUBCATEGORY',\r\n  SUCCESS_SUBCATEGORY= 'SUCCESS_SUBCATEGORY',\r\n  ERROR_SUBCATEGORY= 'ERROR_SUBCATEGORY',\r\n  SET_SUBCATEGORY= 'SET_SUBCATEGORY',\r\n  UPDATE_SUBCATEGORY= 'UPDATE_SUBCATEGORY',\r\n}\r\n\r\nconst loadingSubCategory= () => ({\r\n  type: Actions.LOADING_SUBCATEGORY\r\n});\r\n\r\nconst successSubCategory= (message: string) => ({\r\n  type: Actions.SUCCESS_SUBCATEGORY,\r\n  message\r\n});\r\n\r\nconst errorSubCategory= (message: string) => ({\r\n  type: Actions.ERROR_SUBCATEGORY,\r\n  message\r\n});\r\n\r\nconst setSubCategory= (data: ProductSubCategory[]) => ({\r\n  type: Actions.SET_SUBCATEGORY,\r\n  data\r\n});\r\n\r\nconst updateSubCategory= (data: ProductSubCategory[], message: string) => ({\r\n  type: Actions.UPDATE_SUBCATEGORY,\r\n  data,\r\n  message\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as SubCategory\r\n\r\nconst subCategoryReducer = (state= initialState, action: SubCategoryAction): SubCategory => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_SUBCATEGORY:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_SUBCATEGORY:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_SUBCATEGORY:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_SUBCATEGORY:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_SUBCATEGORY:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.subCategoryId != updatedValue[0].subCategoryId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue,\r\n        ]\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/* Thunk */\r\n\r\nconst addUpdateSubCategory = (subCategory: ProductSubCategory) => async (dispatch: Dispatch<SubCategoryAction>) => {\r\n  dispatch(loadingSubCategory());\r\n\r\n  const response = await api.post('/productsubcategory',\r\n    {\r\n      product_name:subCategory.code,\r\n      product_desc: subCategory.value,\r\n      product_category_id: Number(subCategory.productCategoryId),\r\n      subcategory_id: subCategory.subCategoryId?.toString()\r\n    });\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as SubCategoryResponse;\r\n    if(subCategory.subCategoryId != '0'){\r\n      const productCategoryIndex  = subCategory.productCategoryId ? subCategory.productCategoryId : 1;\r\n      dispatch(updateSubCategory([{...subCategory, productCategoryName: getSubCategoryFromId(Number(productCategoryIndex))}], res.message || ''));\r\n    } else{\r\n      dispatch(successSubCategory(res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as SubCategoryResponse;\r\n    dispatch(errorSubCategory(res.message || ''));\r\n  }\r\n}\r\n\r\n\r\nconst getSubCategory= () => async (dispatch: Dispatch<SubCategoryAction>) => {\r\n  dispatch(loadingSubCategory());\r\n\r\n  const response = await api.get('/productsubcategory');\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as SubCategoryResponse;\r\n    dispatch(setSubCategory(res.data || []))\r\n  } else {\r\n    const res = response as SubCategoryResponse;\r\n    dispatch(errorSubCategory(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  subCategoryReducer,\r\n  getSubCategory,\r\n  addUpdateSubCategory\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { ProductCoupon } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface CouponAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductCoupon[]\r\n}\r\n\r\nexport interface CouponResponse {\r\n  message?: string\r\n  data?: ProductCoupon[]\r\n}\r\n\r\nexport interface Coupon {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductCoupon[];\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n  data: {}\r\n} as Coupon\r\n\r\nenum Actions {\r\n  LOADING_COUPON = 'LOADING_COUPON',\r\n  ERROR_COUPON = 'ERROR_COUPON',\r\n  SUCCESS_COUPON = 'SUCCESS_COUPON',\r\n  DEFAULT_COUPON = 'DEFAULT_COUPON',\r\n  SET_COUPON = 'SET_COUPON',\r\n  UPDATE_COUPON_SUCCESS = 'UPDATE_COUPON_SUCCESS',\r\n  DELETE_COUPON_SUCCESS = 'DELETE_COUPON_SUCCESS'\r\n}\r\n\r\nconst loadingCoupon = () => ({\r\n  type: Actions.LOADING_COUPON\r\n});\r\n\r\nconst successCoupon = (message: string) => ({\r\n  type: Actions.SUCCESS_COUPON,\r\n  message\r\n});\r\n\r\nconst errorCoupon = (message: string) => ({\r\n  type: Actions.ERROR_COUPON,\r\n  message\r\n});\r\n\r\nconst defaultCoupon = () => ({\r\n  type: Actions.DEFAULT_COUPON\r\n});\r\n\r\nconst setCoupon = (data: ProductCoupon[], message?: string) => ({\r\n  type: Actions.SET_COUPON,\r\n  data,\r\n  message\r\n});\r\n\r\nconst updateCouponSuccess = (data: ProductCoupon[], message: string) => ({\r\n  type: Actions.UPDATE_COUPON_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst deleteCouponSuccess = (data: ProductCoupon[], message: string) => ({\r\n  type: Actions.DELETE_COUPON_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst couponReducer = (state = initialState, action: CouponAction): Coupon => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_COUPON:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_COUPON:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_COUPON:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        message: action.message,\r\n        data: []\r\n      }\r\n    case Actions.SET_COUPON:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_COUPON_SUCCESS:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.couponId != updatedValue[0].couponId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue\r\n        ]\r\n      }\r\n    case Actions.DELETE_COUPON_SUCCESS:\r\n      const orgState = state.data || [];\r\n      const updValue = action.data || [];\r\n      const updState = orgState.filter(d => {\r\n        return d.couponId != updValue[0].couponId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updState\r\n        ]\r\n      }\r\n    case Actions.DEFAULT_COUPON:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst saveCoupon = (coupon: ProductCoupon) => async (dispatch: Dispatch<CouponAction>) => {\r\n  dispatch(loadingCoupon());\r\n  const response = await api.post('/productcoupon',\r\n    {\r\n      coupon_code: coupon.code,\r\n      coupon_value: coupon.value,\r\n      coupon_id: 0,\r\n      isDelete: false\r\n    });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CouponResponse\r\n    dispatch(successCoupon(res.message || ''));\r\n  } else {\r\n    const res = response as CouponResponse\r\n    dispatch(errorCoupon(res.message || ''));\r\n  }\r\n};\r\n\r\nconst getCoupon = () => async (dispatch: Dispatch<CouponAction>) => {\r\n  dispatch(loadingCoupon());\r\n\r\n  const response = await api.get('/productcoupon');\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as CouponResponse;\r\n    dispatch(setCoupon(res.data || []));\r\n  } else {\r\n    const res = response as CouponResponse;\r\n    dispatch(errorCoupon(res.message || ''))\r\n  }\r\n};\r\n\r\nconst updateCoupon = (coupon: ProductCoupon, isDelete= false) => async (dispatch: Dispatch<CouponAction>) => {\r\n  dispatch(loadingCoupon());\r\n\r\n  const response = await api.post('/productcoupon', {\r\n    coupon_code: coupon.code,\r\n    coupon_value: coupon.value,\r\n    coupon_id: coupon.couponId,\r\n    isDelete\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CouponResponse;\r\n    if(isDelete){\r\n      dispatch(deleteCouponSuccess([coupon], res.message || ''))\r\n    }else {\r\n      dispatch(updateCouponSuccess([coupon], res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as CouponResponse\r\n    dispatch(errorCoupon(res.message || ''));\r\n  }\r\n\r\n};\r\n\r\nconst validateCoupon = (coupon: string) => async(dispatch: Dispatch<CouponAction>) => {\r\n  dispatch(loadingCoupon());\r\n  const response = await api.get('/validatecoupon?couponCode='+coupon);\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data;\r\n    if(res.data){\r\n      dispatch(setCoupon([res.data], res.message || ''));\r\n    } else {\r\n      dispatch(errorCoupon(res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as CouponResponse\r\n    dispatch(errorCoupon(res.message || ''));\r\n  }\r\n};\r\n\r\nexport {\r\n  couponReducer,\r\n  saveCoupon,\r\n  defaultCoupon,\r\n  getCoupon,\r\n  updateCoupon,\r\n  validateCoupon\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { ProductItem, sizeColourQuantityComboObject } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode, pageSize } from 'appConstants';\r\nimport { boolean } from 'yup';\r\nimport { getUserLocation } from './UserLocation';\r\n\r\nexport interface ProductAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n  _hasMoreProducts?: boolean;\r\n  readonly singleData?: ProductItem;\r\n}\r\n\r\ninterface ProductResponse {\r\n  message?: string;\r\n  data?: ProductItem[];\r\n  readonly singleData?: ProductItem;\r\n}\r\n\r\nexport interface Product {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _hasMoreProducts?: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n  readonly singleData?: ProductItem;\r\n}\r\n\r\nenum Actions {\r\n  LOADING_PRODUCT = 'LOADING_PRODUCT',\r\n  SUCCESS_PRODUCT = 'SUCCESS_PRODUCT',\r\n  ERROR_PRODUCT = 'ERROR_PRODUCT',\r\n  SET_PRODUCT = 'SET_PRODUCT',\r\n  SET_CUSTOMER_PRODUCT = 'SET_CUSTOMER_PRODUCT',\r\n  UPDATE_PRODUCT = 'UPDATE_PRODUCT',\r\n  SET_SINGLE_PRODUCT = 'SET_SINGLE_PRODUCT',\r\n  SET_DEFAULT_PRODUCT = 'SET_DEFAULT_PRODUCT',\r\n  DELETE_PRODUCT_SUCCESS = 'DELETE_PRODUCT_SUCCESS',\r\n  SET_PRODUCT_HIGHLIGHT = 'SET_PRODUCT_HIGHLIGHT'\r\n}\r\n\r\nconst loadingProduct = () => ({\r\n  type: Actions.LOADING_PRODUCT\r\n});\r\n\r\nconst successProduct = (message: string) => ({\r\n  type: Actions.SUCCESS_PRODUCT,\r\n  message\r\n});\r\n\r\nconst errorProduct = (message: string) => ({\r\n  type: Actions.ERROR_PRODUCT,\r\n  message\r\n});\r\n\r\nconst setProducts = (data: ProductItem[], _hasMoreProducts: boolean) => ({\r\n  type: Actions.SET_PRODUCT,\r\n  data,\r\n  _hasMoreProducts\r\n});\r\n\r\nconst setSingleProducts = (singleData: ProductItem) => ({\r\n  type: Actions.SET_SINGLE_PRODUCT,\r\n  singleData\r\n});\r\n\r\nconst setDefaulState = () => ({\r\n  type: Actions.SET_DEFAULT_PRODUCT\r\n});\r\n\r\nconst deleteProductSuccess = (data: ProductItem[], message: string) => ({\r\n  type: Actions.DELETE_PRODUCT_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst setCustomerProducts = (data: ProductItem[], _hasMoreProducts: boolean) => ({\r\n  type: Actions.SET_CUSTOMER_PRODUCT,\r\n  data,\r\n  _hasMoreProducts\r\n});\r\n\r\nconst setProductHighlight = (trending: boolean, latest: boolean, productId: string, message: string)  => ({\r\n  type: Actions.SET_PRODUCT_HIGHLIGHT,\r\n  message,\r\n  singleData: {\r\n    trending,\r\n    latest,\r\n    productId\r\n  } as ProductItem\r\n})\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _hasMoreProducts: true,\r\n  message: '',\r\n  data: [],\r\n  singleData: {} as ProductItem\r\n} as Product\r\n\r\nconst productReducer = (state = initialState, action: ProductAction): Product => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.SUCCESS_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        data: action.data,\r\n        _hasMoreProducts: action._hasMoreProducts,\r\n      }\r\n    case Actions.SET_CUSTOMER_PRODUCT:\r\n      debugger\r\n        return {\r\n          ...state,\r\n          _isSuccess: false,\r\n          _isError: false,\r\n          _isLoading: false,\r\n          data: state.data?.concat(action.data || []),\r\n          _hasMoreProducts: action._hasMoreProducts\r\n        }\r\n    case Actions.SET_SINGLE_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        singleData: action.singleData\r\n      }\r\n    case Actions.DELETE_PRODUCT_SUCCESS:\r\n      const orgState = state.data || [];\r\n      const updValue = action.data || [];\r\n      const updState = orgState.filter(d => {\r\n        return d.productId != updValue[0].productId\r\n      });\r\n      return {\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        data: [\r\n          ...updState\r\n        ]\r\n      }\r\n    case Actions.SET_PRODUCT_HIGHLIGHT:\r\n      return {\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: state.data?.map((product) => {\r\n          if(product.productId.toString() === action.singleData?.productId.toString()){\r\n            return {...product, trending: action.singleData.trending, latest: action.singleData.latest}\r\n          }\r\n          return product\r\n        })\r\n      }\r\n    case Actions.SET_DEFAULT_PRODUCT:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/*Thunk */\r\n\r\nconst addUpdateProduct = (product: ProductItem, isDelete = 0, sizeColourQuantity: sizeColourQuantityComboObject[]) => async (dispatch: Dispatch<ProductAction>) => {\r\n  dispatch(loadingProduct());\r\n  var formData = new FormData();\r\n  if (product.productImageBlob) {\r\n    Array.from(product.productImageBlob).forEach((element, index) => {\r\n      formData.append(`product_image_${index}`, element);\r\n    });\r\n  }\r\n  formData.append('product_INR_price', product.priceINR);\r\n  formData.append('product_USD_price', product.priceUSD);\r\n  formData.append('product_size_code', product.size || '0');\r\n  formData.append('product_color_code', product.colour || '0');\r\n  formData.append('product_Qty', product.quantity || '0');\r\n  formData.append('product_name', product.name);\r\n  formData.append('product_desc', product.description || '');\r\n  formData.append('product_subcategory_id', (product.subCategory || '').toString());\r\n  formData.append('prod_id', product.productId);\r\n  formData.append('is_product_delete', isDelete.toString());\r\n  formData.append('deleted_image_paths', JSON.stringify(product.deletedImagePath));\r\n  formData.append('size_colour_quantity_combo',  JSON.stringify(sizeColourQuantity));\r\n  formData.append('deleted_product_detailIds',  JSON.stringify(product.deletedProductDetailIds));\r\n  const response = await api.post('/productinfo', formData);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ProductResponse;\r\n    if (product.productId != '0') {\r\n      if (isDelete) {\r\n        dispatch(deleteProductSuccess([product], res.message || ''))\r\n      } else {\r\n        dispatch(successProduct(res.message || ''));\r\n      }\r\n    } else {\r\n      dispatch(successProduct(res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as ProductResponse;\r\n    dispatch(errorProduct(res.message || ''));\r\n  }\r\n\r\n};\r\n\r\nconst getProducts = () => async (dispatch: Dispatch<ProductAction>) => {\r\n  dispatch(loadingProduct());\r\n  const response = await api.get('/productinfo');\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ProductResponse;\r\n    dispatch(setProducts(res.data || [], true))\r\n  } else {\r\n    const res = response as ProductResponse;\r\n    dispatch(errorProduct(res.message || ''));\r\n  }\r\n};\r\n\r\nconst getProduct = (productId: number) => async (dispatch: Dispatch<ProductAction>) => {\r\n  dispatch(loadingProduct());\r\n  const response = await api.get('/productinfo?productId=' + productId);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ProductResponse;\r\n    dispatch(setSingleProducts(res.singleData || {} as ProductItem))\r\n  } else {\r\n    const res = response as ProductResponse;\r\n    dispatch(errorProduct(res.message || ''));\r\n  }\r\n};\r\n\r\nconst getCustomerProducts = (\r\n  offset: number,\r\n  limit: number,\r\n  categoryId: number[],\r\n  subCategoryId: number[],\r\n  colourId: number[],\r\n  sizeId: number[],\r\n  startPrice: string,\r\n  endPrice: string,\r\n  currency: string,\r\n  searchText: string,\r\n  freshData = false) => async (dispatch: Dispatch<ProductAction>) => {\r\n    dispatch(loadingProduct());\r\n\r\n    const response = await api.get(\r\n      `/productlistcustomer?offset=${offset}&limit=${limit}&categorydId=${categoryId}&colourId=${colourId}&sizeId=${sizeId}&subCategoryId=${subCategoryId}&startPrice=${startPrice}&endPrice=${endPrice}&currency=${currency}&searchText=${searchText}`);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n      const res = response.data as ProductResponse;\r\n      const _hasMoreProducts = res.data && res.data.length === pageSize || false;\r\n      if(freshData){\r\n        dispatch(setProducts(res.data || [], _hasMoreProducts))\r\n      }else {\r\n        dispatch(setCustomerProducts(res.data || [], _hasMoreProducts))\r\n      }\r\n      \r\n    } else {\r\n      const res = response as ProductResponse;\r\n      dispatch(errorProduct(res.message || ''));\r\n    }\r\n  }\r\n\r\n  const updateProductHighLight = (highlight: string, productId: string) => async(dispatch: Dispatch<ProductAction>) => {\r\n    dispatch(loadingProduct());\r\n    const latest =  highlight === '2';\r\n    const trending = highlight === '1';\r\n    const response = await api.post('/producthighlight',{\r\n      latest,\r\n      trending,\r\n      productId\r\n    });\r\n\r\n    if(response.status === HttpStatusCode.OK){\r\n      const res = response.data as ProductResponse;\r\n      dispatch(setProductHighlight(trending,latest, productId, res.message || ''))\r\n    } else {\r\n      const res = response as ProductResponse;\r\n      dispatch(errorProduct(res.message || ''));\r\n    }\r\n  }\r\n\r\nexport {\r\n  addUpdateProduct,\r\n  productReducer,\r\n  getProducts,\r\n  getProduct,\r\n  setDefaulState,\r\n  getCustomerProducts,\r\n  updateProductHighLight,\r\n  errorProduct\r\n}\r\n","import { Dispatch, Action } from 'redux';\r\nimport { ActiveProductCount, ProductSubcategoryProperty } from 'types';\r\nimport { api, createProductCountList } from 'services';\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface ProductCountAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductSubcategoryProperty;\r\n};\r\n\r\nexport interface ProductCountResponse {\r\n  readonly message?: string;\r\n  readonly data?: ActiveProductCount[];\r\n};\r\n\r\nexport interface ProductCount {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductSubcategoryProperty;\r\n};\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n  data: {}\r\n} as ProductCount;\r\n\r\nenum Actions {\r\n  LOADING_PRODUCT_COUNT= 'LOADING_PRODUCT_COUNT',\r\n  ERROR_PRODUCT_COUNT= 'ERROR_PRODUCT_COUNT',\r\n  SET_PRODUCT_COUNT= 'SET_PRODUCT_COUNT',\r\n};\r\n\r\nconst loadingProductCount = () => ({\r\n  type: Actions.LOADING_PRODUCT_COUNT\r\n});\r\n\r\nconst errorProductCount = (message: string) => ({\r\n  type: Actions.ERROR_PRODUCT_COUNT,\r\n  message\r\n});\r\n\r\nconst setProductCount = (data: ProductSubcategoryProperty) => ({\r\n  type: Actions.SET_PRODUCT_COUNT,\r\n  data\r\n});\r\n\r\nconst productCountReducer = (state= initialState, action: ProductCountAction): ProductCount => {\r\n  switch(action.type) {\r\n    case Actions.LOADING_PRODUCT_COUNT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        message: ''\r\n      }\r\n    case Actions.ERROR_PRODUCT_COUNT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_PRODUCT_COUNT:\r\n      return {\r\n        ...state,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: true,\r\n        message: action.message,\r\n        data : action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n/** Thunk */\r\n\r\nconst getActiveProductCount = () => async(dispatch: Dispatch<ProductCountAction>) => {\r\n  dispatch(loadingProductCount());\r\n\r\n  const response = await api.get('/productcount');\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as ProductCountResponse;\r\n    dispatch(setProductCount(createProductCountList(res.data||[])));\r\n  } else {\r\n    const res = response as ProductCountResponse;\r\n    dispatch(errorProductCount(res.message || ''))\r\n  }\r\n};\r\n\r\nexport {\r\n  productCountReducer,\r\n  getActiveProductCount\r\n}","const pageSize = 25;\r\n\r\n\r\nexport {\r\n  pageSize\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { CustomerCart } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface CartAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: CustomerCart[]\r\n}\r\n\r\nexport interface CartResponse {\r\n  message?: string;\r\n  data?: CustomerCart;\r\n}\r\n\r\nexport interface CartResponseMulti {\r\n  message?: string;\r\n  data?: CustomerCart[];\r\n}\r\n\r\nexport interface Cart {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _quantityUpdate: boolean;\r\n  readonly message?: string;\r\n  readonly data?: CustomerCart[];\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  _quantityUpdate: false,\r\n  message: '',\r\n  data: []\r\n} as Cart;\r\n\r\nenum Actions {\r\n  LOADING_CART = 'LOADING_CART',\r\n  ERROR_CART = 'ERROR_CART',\r\n  SUCCESS_CART = 'SUCCESS_CART',\r\n  DEFAULT_CART = 'DEFAULT_CART',\r\n  SET_CART = 'SET_CART',\r\n  SET_LOGGED_CART = 'SET_LOGGED_CART',\r\n  UPDATE_CART_SUCCESS = 'UPDATE_CART_SUCCESS',\r\n  ADD_CART_SUCCESS = 'ADD_CART_SUCCESS',\r\n  UPDATE_CART_LOGGED_OUT = 'UPDATE_CART_LOGGED_OUT',\r\n  DELETE_CART_PRODUCT = 'DELETE_CART_PRODUCT',\r\n  CART_QUANTITY_FINE = 'CART_QUANTITY_FINE',\r\n  CART_GET_UPDATED_QUANTITY = 'CART_GET_UPDATED_QUANTITY'\r\n};\r\n\r\nconst loadingCart = () => ({\r\n  type: Actions.LOADING_CART\r\n});\r\n\r\nconst successCart = (message: string) => ({\r\n  type: Actions.SUCCESS_CART,\r\n  message\r\n});\r\n\r\nconst errorCart = (message: string) => ({\r\n  type: Actions.ERROR_CART,\r\n  message\r\n});\r\n\r\nconst defaultCart = () => ({\r\n  type: Actions.DEFAULT_CART\r\n});\r\n\r\nconst setCart = (data: CustomerCart[]) => ({\r\n  type: Actions.SET_CART,\r\n  data\r\n});\r\n\r\nconst setLoggedCart = (data: CustomerCart[]) => ({\r\n  type: Actions.SET_LOGGED_CART,\r\n  data\r\n});\r\n\r\nconst updateCartSuccess = (data: CustomerCart[], message: string) => ({\r\n  type: Actions.UPDATE_CART_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst addCartSuccess = (data: CustomerCart[], message: string) => ({\r\n  type: Actions.ADD_CART_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst addCartSuccessLoggedOut = (data: CustomerCart[], message: string) => ({\r\n  type: Actions.UPDATE_CART_LOGGED_OUT,\r\n  data,\r\n  message\r\n});\r\n\r\nconst deleteCartProduct = (data: CustomerCart[], message: string) => ({\r\n  type: Actions.DELETE_CART_PRODUCT,\r\n  data,\r\n  message\r\n});\r\n\r\nconst cartQuantityFine = () => ({\r\n  type: Actions.CART_QUANTITY_FINE\r\n});\r\n\r\nconst cartGetUpdatedQuantity = () => ({\r\n  type: Actions.CART_GET_UPDATED_QUANTITY\r\n});\r\n\r\n\r\nconst cartReducer = (state = initialState, action: CartAction): Cart => {\r\n  debugger;\r\n  switch (action.type) {\r\n    case Actions.LOADING_CART:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false,\r\n        _quantityUpdate: false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_CART:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_CART:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _quantityUpdate: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_CART:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.SET_LOGGED_CART:\r\n      debugger;\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_CART_SUCCESS:\r\n      const originalState = state.data || [];\r\n      let og = [];\r\n      let newProduct = true;\r\n      if (action.data && originalState.length === 0) {\r\n        og = [...action.data]\r\n      } else {\r\n        og = originalState.map((product) => {\r\n          if (action.data && product.cartId === action.data[0].cartId) {\r\n            product.productQuantity = action.data[0].productQuantity;\r\n            product.totalPrice = action.data[0].totalPrice;\r\n            product.cartId = action.data[0].cartId;\r\n            newProduct = false;\r\n            return product;\r\n          }\r\n          return product;\r\n        });\r\n        if (newProduct && action.data) {\r\n          og = [...og, ...action.data]\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: og\r\n      }\r\n    case Actions.UPDATE_CART_LOGGED_OUT:\r\n      const originalStatelo = state.data || [];\r\n      let oglo = [];\r\n      let newProductlo = true;\r\n      if (action.data && originalStatelo.length === 0) {\r\n        oglo = [...action.data]\r\n      } else {\r\n        oglo = originalStatelo.map((product) => {\r\n          if (action.data && product.cartId === action.data[0].cartId) {\r\n            product.productQuantity = (Number(action.data[0].productQuantity) + Number(product.productQuantity)).toString();\r\n            product.totalPrice = ((Number(product.productQuantity)) * Number(action.data[0].productPrice)).toString();\r\n            product.cartId = action.data[0].cartId;\r\n            newProductlo = false;\r\n            return product;\r\n          }\r\n          return product;\r\n        });\r\n        if (newProductlo && action.data) {\r\n          oglo = [...oglo, ...action.data]\r\n        }\r\n      }\r\n      localStorage.setItem(\"basicKart-loggedOutCart\", JSON.stringify(oglo));\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: oglo\r\n      }\r\n    case Actions.ADD_CART_SUCCESS:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.DELETE_CART_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: state.data?.filter(({ cartId }) => action.data && cartId !== action.data[0].cartId)\r\n      }\r\n    case Actions.DEFAULT_CART:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    case Actions.CART_GET_UPDATED_QUANTITY:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _quantityUpdate: true,\r\n        message: action.message\r\n      }\r\n    case Actions.CART_QUANTITY_FINE:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: true,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nconst addUpdateCart = (cart: CustomerCart, isLoggedIn?: boolean) =>\r\n  async (dispatch: Dispatch<CartAction>) => {\r\n    dispatch(loadingCart());\r\n    if (!isLoggedIn) {\r\n          // result.productImage = cart.productImage;\r\n          // result.productImagePath = cart.productImagePath;\r\n          // result.productName = cart.productName;\r\n          // result.subcategory = cart.subcategory;\r\n          // result.productId = cart.productId;\r\n          const newCart = {\r\n            ...cart,\r\n            totalPrice: (Number(cart.productPrice) * Number(cart.productQuantity)).toString(),\r\n          } as CustomerCart;\r\n          dispatch(addCartSuccessLoggedOut([newCart],''));\r\n    } else {\r\n      const response = await api.post('/cart',\r\n        {\r\n          product_detail_id: cart.productDetailId.toString(),\r\n          order_quantity: cart.productQuantity,\r\n          price_id: cart.currencyType,\r\n          orderdetail_id: cart.cartId.toString(),\r\n          delete_flag: false\r\n        });\r\n\r\n      if (response.status === HttpStatusCode.OK) {\r\n        const res = response.data as CartResponse;\r\n        if (cart.cartId != '0') {\r\n          const result = res.data || {} as CustomerCart;\r\n          if (cart.productQuantity === '0') {\r\n            dispatch(deleteCartProduct([cart], res.message || ''));\r\n          } else {\r\n            dispatch(updateCartSuccess([result], res.message || ''));\r\n          }\r\n        } else {\r\n          const result = res.data || {} as CustomerCart;\r\n          result.productImage = cart.productImage;\r\n          result.productImagePath = cart.productImagePath;\r\n          result.productName = cart.productName;\r\n          result.subcategory = cart.subcategory;\r\n          result.productId = cart.productId;\r\n          dispatch(updateCartSuccess([result], res.message || ''));\r\n        }\r\n      } else {\r\n        const res = response as CartResponse;\r\n        dispatch(errorCart(res.message || ''));\r\n      }\r\n    }\r\n  };\r\n\r\nconst getCart = () => async (dispatch: Dispatch<CartAction>) => {\r\n  dispatch(loadingCart());\r\n\r\n  const response = await api.get('/cart');\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CartResponseMulti;\r\n    dispatch(addCartSuccess(res.data || [], res.message || ''));\r\n  } else {\r\n    const res = response as CartResponse;\r\n    dispatch(errorCart(res.message || ''))\r\n  }\r\n};\r\n\r\nconst deleteCartItem = (cart: CustomerCart) => async (dispatch: Dispatch<CartAction>) => {\r\n  dispatch(loadingCart());\r\n\r\n  const response = await api.post('/cart', {\r\n    orderdetail_id: cart.cartId,\r\n    product_detail_id: cart.productDetailId.toString(),\r\n    order_quantity: cart.productQuantity,\r\n    price_id: '1',\r\n    delete_flag: true\r\n  });\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CartResponse;\r\n    dispatch(deleteCartProduct([cart], res.message || ''));\r\n  } else {\r\n    const res = response as CartResponse;\r\n    dispatch(errorCart(res.message || ''))\r\n  }\r\n};\r\n\r\nconst updateCartQuantity = (orderDetailId: string) => async (dispatch: Dispatch<CartAction>) => {\r\n  dispatch(loadingCart());\r\n  const response = await api.post('/updatecartquantity', { orderDetailId });\r\n  if (response.status === HttpStatusCode.OK) {\r\n    dispatch(cartQuantityFine());\r\n  } else if (response.status === HttpStatusCode.PARTIAL_INFO) {\r\n    dispatch(cartGetUpdatedQuantity());\r\n  } else {\r\n    const res = response as CartResponse;\r\n    dispatch(errorCart(res.message || ''))\r\n  }\r\n}\r\n\r\nexport {\r\n  cartReducer,\r\n  addUpdateCart,\r\n  getCart,\r\n  deleteCartItem,\r\n  updateCartQuantity,\r\n  setLoggedCart\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { CustomerCheckout, RazorpayPayment, PayPalPayment, CodPayment } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface CheckoutAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: CustomerCheckout;\r\n}\r\n\r\nexport interface CheckoutResponse {\r\n  message?: string\r\n  data?: CustomerCheckout;\r\n}\r\n\r\nexport interface Checkout {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _isPaymentSucceess: boolean;\r\n  readonly _priceChanged: boolean;\r\n  readonly _isFetchCodCodeSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: CustomerCheckout;\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  _isPaymentSucceess: false,\r\n  _priceChanged: false,\r\n  _isFetchCodCodeSuccess: false,\r\n  message: '',\r\n  data: {}\r\n} as Checkout;\r\n\r\nenum Actions {\r\n  LOADING_CHECKOUT = 'LOADING_CHECKOUT',\r\n  ERROR_CHECKOUT = 'ERROR_CHECKOUT',\r\n  SUCCESS_CHECKOUT_ORDER = 'SUCCESS_CHECKOUT_ORDER',\r\n  DEFAULT_CHECKOUT = 'DEFAULT_CHECKOUT',\r\n  SET_CHECKOUT = 'SET_CHECKOUT',\r\n  UPDATE_CHECKOUT_SUCCESS = 'UPDATE_CHECKOUT_SUCCESS',\r\n  SUCCESS_PAYMENT = 'SUCCESS_PAYMENT',\r\n  PRICE_CHANGED = 'PRICE_CHANGED',\r\n};\r\n\r\nconst loadingCheckout = () => ({\r\n  type: Actions.LOADING_CHECKOUT\r\n});\r\n\r\nconst successCheckoutOrder = (data: CustomerCheckout, message?: string) => ({\r\n  type: Actions.SUCCESS_CHECKOUT_ORDER,\r\n  data,\r\n  message\r\n});\r\n\r\nconst errorCheckout = (message: string) => ({\r\n  type: Actions.ERROR_CHECKOUT,\r\n  message\r\n});\r\n\r\nconst defaultCheckout = () => ({\r\n  type: Actions.DEFAULT_CHECKOUT\r\n});\r\n\r\nconst successPayment =(message:string) => ({\r\n  type: Actions.SUCCESS_PAYMENT,\r\n  message\r\n});\r\n\r\nconst priceChanged = (message:string) => ({\r\n  type: Actions.PRICE_CHANGED,\r\n  message\r\n});\r\n\r\nconst checkoutReducer = (state = initialState, action: CheckoutAction) : Checkout => {\r\n  switch(action.type){\r\n    case Actions.LOADING_CHECKOUT:\r\n      return{\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_CHECKOUT_ORDER:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: false,\r\n        _isFetchCodCodeSuccess: true,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.PRICE_CHANGED:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: true,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_CHECKOUT:\r\n      debugger\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: false,\r\n        _isFetchCodCodeSuccess: false,\r\n        message: action.message\r\n      }\r\n    case Actions.DEFAULT_CHECKOUT:\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: false,\r\n        _isFetchCodCodeSuccess: false,\r\n      }\r\n    case Actions.SUCCESS_PAYMENT:\r\n      return {\r\n        ...state,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isPaymentSucceess: true,\r\n        _priceChanged: false,\r\n        message: action.message\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Thunk\r\n\r\nconst getRazorPayOrder = (amount: string, orderId: number, couponId?: number) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/checkout',\r\n    {\r\n      amount,\r\n      displayAmount: amount,\r\n      orderId,\r\n      couponId\r\n    });\r\n    if (response.status === HttpStatusCode.OK) {\r\n      const res = response.data as CheckoutResponse;\r\n      dispatch(successCheckoutOrder(res.data || {} as CustomerCheckout, res.message || ''));\r\n    } else if(response.status === HttpStatusCode.PARTIAL_INFO){\r\n      const res = response.data as CheckoutResponse;\r\n      dispatch(priceChanged(res.message || ''));\r\n    } else {\r\n      const res = response as CheckoutResponse;\r\n      dispatch(errorCheckout(res.message || ''));\r\n    }\r\n};\r\n\r\nconst saveRazorPayOrder = (razorpayData: RazorpayPayment) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/payment/razorpay',razorpayData);\r\n    if (response.status === HttpStatusCode.OK) {\r\n      const res = response.data as CheckoutResponse\r\n      dispatch(successPayment(res.message || ''));\r\n    } else {\r\n      const res = response as CheckoutResponse\r\n      dispatch(errorCheckout(res.message || ''));\r\n    }\r\n};\r\n\r\nconst getPayPalOrder = (amount: string, displayAmount: string ,orderId: number, couponId?: number)  => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/paypalorder',\r\n  {\r\n    amount,\r\n    displayAmount,\r\n    orderId,\r\n    couponId\r\n  });\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CheckoutResponse\r\n    dispatch(successCheckoutOrder(res.data as CustomerCheckout, res.message || ''));\r\n  } else if(response.status === HttpStatusCode.PARTIAL_INFO){\r\n    const res = response.data as CheckoutResponse;\r\n    dispatch(priceChanged(res.message || ''));\r\n  } else {\r\n    const res = response as CheckoutResponse\r\n    dispatch(errorCheckout(res.message || ''));\r\n  }\r\n};\r\n\r\nconst savePayPalOrder = (paypalData: PayPalPayment) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/payment/paypal',paypalData);\r\n    if (response.status === HttpStatusCode.OK) {\r\n      const res = response.data as CheckoutResponse\r\n      dispatch(successPayment(res.message || ''));\r\n    } else {\r\n      const res = response as CheckoutResponse\r\n      dispatch(errorCheckout(res.message || ''));\r\n    }\r\n};\r\n\r\nconst getCodOrder = (amount: string, orderId: number, couponId?: number) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/payment/codorder',{\r\n    amount,\r\n    displayAmount: amount,\r\n    orderId,\r\n    couponId\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CheckoutResponse;\r\n    dispatch(successCheckoutOrder(res.data as CustomerCheckout, res.message || ''));\r\n  } else if(response.status === HttpStatusCode.PARTIAL_INFO){\r\n    const res = response.data as CheckoutResponse;\r\n    dispatch(priceChanged(res.message || ''));\r\n  } else {\r\n    const res = response as CheckoutResponse;\r\n    dispatch(errorCheckout(res.message || ''));\r\n  }\r\n};\r\n\r\nconst saveCodOrder = (codData: CodPayment) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/payment/codplaceorder',codData);\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CheckoutResponse\r\n    dispatch(successPayment(res.message || ''));\r\n  } else {\r\n    const res = response as CheckoutResponse\r\n    dispatch(errorCheckout(res.message || ''));\r\n  }\r\n};\r\n\r\nconst resendOTP = () => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.get('/payment/codresendotp');\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CheckoutResponse;\r\n    dispatch(successCheckoutOrder(res.data as CustomerCheckout, res.message || ''));\r\n  } else {\r\n    const res = response as CheckoutResponse;\r\n    dispatch(errorCheckout(res.message || ''));\r\n  }\r\n};\r\n\r\nexport{\r\n  getRazorPayOrder,\r\n  checkoutReducer,\r\n  saveRazorPayOrder,\r\n  errorCheckout,\r\n  getPayPalOrder,\r\n  savePayPalOrder,\r\n  getCodOrder,\r\n  saveCodOrder,\r\n  resendOTP,\r\n  defaultCheckout\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface UserLocationAction extends Action {\r\n  readonly data?: string;\r\n};\r\n\r\nexport interface UserLocation {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: string;\r\n};\r\n\r\nenum Actions{\r\n  LOADING_USER_LOCATION= 'LOADING_USER_LOCATION',\r\n  SET_USER_LOCATION= 'SET_USER_LOCATION',\r\n};\r\n\r\nconst loadingUserLocation = () => ({\r\n  type: Actions.LOADING_USER_LOCATION,\r\n});\r\n\r\nconst setUserLocation = (data: string) => ({\r\n  type: Actions.SET_USER_LOCATION,\r\n  data\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:''\r\n} as UserLocation\r\n\r\nconst userLocationReducer = (state= initialState, action: UserLocationAction): UserLocation => {\r\n  switch(action.type){\r\n    case Actions.LOADING_USER_LOCATION:\r\n      return{\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.SET_USER_LOCATION:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess: false,\r\n        data: action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n/** Thunk */\r\n\r\nconst getUserLocation = () => async (dispatch: Dispatch<UserLocationAction>) => {\r\n  dispatch(loadingUserLocation());\r\n  const defaultUserLocation = 'Asia/Calcutta';\r\n  try {\r\n    const userLocation = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n    if(userLocation && userLocation.toLowerCase() === defaultUserLocation.toLowerCase()){\r\n      dispatch(setUserLocation('IN'));\r\n    } else if (!userLocation && (new Date).getTimezoneOffset() === -330){\r\n      dispatch(setUserLocation('IN'));\r\n    } else {\r\n      dispatch(setUserLocation('USD'));\r\n    }\r\n  } catch (error) {\r\n    dispatch(setUserLocation('IN'));\r\n  }\r\n};\r\n\r\nexport {\r\n  userLocationReducer,\r\n  getUserLocation\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { Order, OrderItems, OrderUpdateAdmin } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode, pageSize } from 'appConstants';\r\n\r\nexport interface CustomerOrderAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: Order[];\r\n  readonly singleData?: Order;\r\n  readonly _hasMoreOrders?: boolean;\r\n};\r\n\r\ninterface CustomerOrderResponse {\r\n  message?: string;\r\n  data?: Order[];\r\n  singleData?: Order;\r\n  _hasMoreOrders?: boolean;\r\n};\r\n\r\nexport interface CustomerOrders {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _hasMoreOrders?: boolean;\r\n  readonly _isOrderUpdate?: boolean;\r\n  readonly message?: string;\r\n  readonly data?: Order[];\r\n  readonly singleData?: Order;\r\n};\r\n\r\nenum Actions{\r\n  LOADING_ORDER= 'LOADING_ORDER',\r\n  SUCCESS_ORDER= 'SUCCESS_ORDER',\r\n  ADMIN_SUCCESS_ORDER= 'ADMIN_SUCCESS_ORDER',\r\n  ERROR_ORDER= 'ERROR_ORDER',\r\n  SINGLE_DATA = 'SINGLE_DATA',\r\n  CUSTOMER_RETURN = 'CUSTOMER_RETURN',\r\n  DEFAULT_ORDER_RETURN = 'DEFAULT_ORDER_RETURN'\r\n};\r\n\r\nconst loadingOrder= () => ({\r\n  type: Actions.LOADING_ORDER\r\n});\r\n\r\nconst successOrder= (data: Order[], _hasMoreOrders: boolean) => ({\r\n  type: Actions.SUCCESS_ORDER,\r\n  data,\r\n  _hasMoreOrders\r\n});\r\n\r\nconst adminSuccessOrder= (data: Order[]) => ({\r\n  type: Actions.ADMIN_SUCCESS_ORDER,\r\n  data\r\n});\r\n\r\nconst errorOrder= (message: string) => ({\r\n  type: Actions.ERROR_ORDER,\r\n  message\r\n});\r\n\r\nconst singleOrder= (singleData: Order) => ({\r\n  type: Actions.SINGLE_DATA,\r\n  singleData\r\n});\r\n\r\nconst customerReturn = (orderDetailsId: number) => ({\r\n  type: Actions.CUSTOMER_RETURN,\r\n  singleData: {\r\n   orderId: orderDetailsId.toString()\r\n  } as Order\r\n});\r\n\r\nconst defaulOrderReturn = () => ({\r\n  type: Actions.DEFAULT_ORDER_RETURN\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _hasMoreOrders: false,\r\n  _isOrderUpdate: false,\r\n  message: '',\r\n  data:[],\r\n  singleData: {} as Order,\r\n} as CustomerOrders\r\n\r\nconst customerOrdersReducer = (state= initialState, action: CustomerOrderAction): CustomerOrders => {\r\n  switch(action.type){\r\n    case Actions.LOADING_ORDER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: true,\r\n        _hasMoreOrders: false,\r\n        _isOrderUpdate: false,\r\n      }\r\n    case Actions.SUCCESS_ORDER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isOrderUpdate: false,\r\n        message: action.message,\r\n        data: state.data?.concat(action.data || []),\r\n        _hasMoreOrders: action._hasMoreOrders\r\n      }\r\n    case Actions.ADMIN_SUCCESS_ORDER:\r\n    return {\r\n      ...state,\r\n      _isSuccess: true,\r\n      _isError: false,\r\n      _isLoading: false,\r\n      _isOrderUpdate: false,\r\n      message: action.message,\r\n      data: action.data\r\n    }\r\n    case Actions.SINGLE_DATA:\r\n      return{\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _hasMoreOrders: false,\r\n        _isOrderUpdate: false,\r\n        singleData: action.singleData\r\n      }\r\n    case Actions.ERROR_ORDER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        _hasMoreOrders: false,\r\n        _isOrderUpdate: false,\r\n      }\r\n    case Actions.DEFAULT_ORDER_RETURN:\r\n      return {\r\n        ...state,\r\n        _isOrderUpdate: false,\r\n      }\r\n    case Actions.CUSTOMER_RETURN:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isOrderUpdate: true,\r\n        message: action.message,\r\n        data: state.data?.map((singleOrder) => {\r\n          const updatedOrder = singleOrder.orderItems.map((order) => {\r\n            if(order.orderDetailId.toString() === action.singleData?.orderId.toString()){\r\n              return {...order, shipmentDetails: {...order.shipmentDetails, returnStatus: 'In Progress'}}\r\n            } else {\r\n              return order\r\n            }\r\n          })\r\n          return {\r\n            ...singleOrder,\r\n            orderItems : updatedOrder\r\n          }\r\n        }),\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n/** Thunk */\r\n\r\nconst getCustomerOrders = (offset: number, limit: number) => async(dispatch: Dispatch<CustomerOrderAction>) => {\r\n  dispatch(loadingOrder());\r\n  const response = await api.get('/getcustomerorders?limit='+limit+'&offset='+offset);\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as CustomerOrderResponse;\r\n    const _hasMoreOrders = res.data && res.data.length === pageSize || false;\r\n    dispatch(successOrder(res.data || [], _hasMoreOrders))\r\n  } else {\r\n    const res = response as CustomerOrderResponse;\r\n    dispatch(errorOrder(res.message || ''));\r\n  }\r\n}\r\n\r\nconst getAdminOrders = (userId=0) => async(dispatch: Dispatch<CustomerOrderAction>) => {\r\n  dispatch(loadingOrder());\r\n  const response = await api.get('/getadminorders?userId='+userId);\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as CustomerOrderResponse;\r\n    dispatch(adminSuccessOrder(res.data || []))\r\n  } else {\r\n    const res = response as CustomerOrderResponse;\r\n    dispatch(errorOrder(res.message || ''));\r\n  }\r\n};\r\n\r\nconst customerProductReturn = (orderDetailsId: number, returnReason: string) => async(dispatch: Dispatch<CustomerOrderAction>) => {\r\n  dispatch(loadingOrder());\r\n  const response = await api.post('/customerproductreturn',{\r\n    orderDetailsId,\r\n    returnReason\r\n  });\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as CustomerOrderResponse;\r\n    dispatch(customerReturn(orderDetailsId))\r\n  } else {\r\n    const res = response as CustomerOrderResponse;\r\n    dispatch(errorOrder(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  getCustomerOrders,\r\n  customerOrdersReducer,\r\n  getAdminOrders,\r\n  singleOrder,\r\n  customerProductReturn,\r\n  defaulOrderReturn\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { OrderShipper, Order } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface ShipperAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: OrderShipper[]\r\n}\r\n\r\nexport interface ShipperResponse {\r\n  message?: string\r\n  data?: OrderShipper[]\r\n}\r\n\r\nexport interface Shipper {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: OrderShipper[];\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n  data: []\r\n} as Shipper\r\n\r\nenum Actions {\r\n  LOADING_SHIPPER = 'LOADING_SHIPPER',\r\n  ERROR_SHIPPER = 'ERROR_SHIPPER',\r\n  SUCCESS_SHIPPER = 'SUCCESS_SHIPPER',\r\n  DEFAULT_SHIPPER = 'DEFAULT_SHIPPER',\r\n  SET_SHIPPER = 'SET_SHIPPER',\r\n  UPDATE_SHIPPER_SUCCESS = 'UPDATE_SHIPPER_SUCCESS',\r\n  DELETE_SHIPPER_SUCCESS = 'DELETE_SHIPPER_SUCCESS'\r\n}\r\n\r\nconst loadingShipper = () => ({\r\n  type: Actions.LOADING_SHIPPER\r\n});\r\n\r\nconst successShipper = (message: string) => ({\r\n  type: Actions.SUCCESS_SHIPPER,\r\n  message\r\n});\r\n\r\nconst errorShipper = (message: string) => ({\r\n  type: Actions.ERROR_SHIPPER,\r\n  message\r\n});\r\n\r\nconst defaultShipper = () => ({\r\n  type: Actions.DEFAULT_SHIPPER\r\n});\r\n\r\nconst setShipper = (data: OrderShipper[]) => ({\r\n  type: Actions.SET_SHIPPER,\r\n  data\r\n});\r\n\r\nconst updateShipperSuccess = (data: OrderShipper[], message: string) => ({\r\n  type: Actions.UPDATE_SHIPPER_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst deleteShipperSuccess = (data: OrderShipper[], message: string) => ({\r\n  type: Actions.DELETE_SHIPPER_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst shipperReducer = (state = initialState, action: ShipperAction): Shipper => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_SHIPPER:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_SHIPPER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_SHIPPER:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_SHIPPER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_SHIPPER_SUCCESS:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.shipperId != updatedValue[0].shipperId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue\r\n        ]\r\n      }\r\n    case Actions.DELETE_SHIPPER_SUCCESS:\r\n      const orgState = state.data || [];\r\n      const updValue = action.data || [];\r\n      const updState = orgState.filter(d => {\r\n        return d.shipperId != updValue[0].shipperId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updState\r\n        ]\r\n      }\r\n    case Actions.DEFAULT_SHIPPER:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/** Thunk */\r\n\r\nconst saveShipper = (shipper: OrderShipper) => async (dispatch: Dispatch<ShipperAction>) => {\r\n  dispatch(loadingShipper());\r\n  const response = await api.post('/shipper',\r\n    {\r\n      shipper_name: shipper.shipperName,\r\n      shipper_link: shipper.trackingLink,\r\n      shipper_id: 0,\r\n      delete_flag: false\r\n    });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ShipperResponse\r\n    dispatch(successShipper(res.message || ''));\r\n  } else {\r\n    const res = response as ShipperResponse\r\n    dispatch(errorShipper(res.message || ''));\r\n  }\r\n}\r\n\r\nconst getShippers = () => async (dispatch: Dispatch<ShipperAction>) => {\r\n  dispatch(loadingShipper());\r\n\r\n  const response = await api.get('/shipper');\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as ShipperResponse;\r\n    dispatch(setShipper(res.data || []));\r\n  } else {\r\n    const res = response as ShipperResponse;\r\n    dispatch(errorShipper(res.message || ''))\r\n  }\r\n}\r\n\r\nconst updateShipper = (shipper: OrderShipper, delete_flag= false) => async (dispatch: Dispatch<ShipperAction>) => {\r\n  dispatch(loadingShipper());\r\n\r\n  const response = await api.post('/shipper', {\r\n    shipper_name: shipper.shipperName,\r\n    shipper_link: shipper.trackingLink,\r\n    shipper_id: shipper.shipperId,\r\n    delete_flag\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ShipperResponse;\r\n    if(delete_flag){\r\n      dispatch(deleteShipperSuccess([shipper], res.message || ''))\r\n    }else {\r\n      dispatch(updateShipperSuccess([shipper], res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as ShipperResponse\r\n    dispatch(errorShipper(res.message || ''));\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  shipperReducer,\r\n  saveShipper,\r\n  getShippers,\r\n  updateShipper\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { OrderUpdateAdmin } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode, pageSize } from 'appConstants';\r\n\r\nexport interface ShipmentAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: OrderUpdateAdmin;\r\n};\r\n\r\ninterface ShipmentResponse {\r\n  message?: string;\r\n  data?: OrderUpdateAdmin;\r\n};\r\n\r\nexport interface Shipment {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _hasMoreOrders?: boolean;\r\n  readonly message?: string;\r\n  readonly data?: OrderUpdateAdmin;\r\n};\r\n\r\nenum Actions{\r\n  LOADING_SHIPMENT= 'LOADING_SHIPMENT',\r\n  SUCCESS_SHIPMENT= 'SUCCESS_SHIPMENT',\r\n  ERROR_SHIPMENT= 'ERROR_SHIPMENT',\r\n};\r\n\r\nconst loadingShipment= (data: OrderUpdateAdmin) => ({\r\n  type: Actions.LOADING_SHIPMENT,\r\n  data\r\n});\r\n\r\nconst successShipment= (data: OrderUpdateAdmin, message: string) => ({\r\n  type: Actions.SUCCESS_SHIPMENT,\r\n  data,\r\n  message,\r\n});\r\n\r\nconst errorShipment= (message: string) => ({\r\n  type: Actions.ERROR_SHIPMENT,\r\n  message,\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _hasMoreOrders: false,\r\n  message: '',\r\n  data:{}\r\n} as Shipment\r\n\r\nconst shipmentReducer = (state= initialState, action: ShipmentAction): Shipment => {\r\n  switch(action.type){\r\n    case Actions.LOADING_SHIPMENT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: true,\r\n        data: action.data,\r\n      }\r\n    case Actions.SUCCESS_SHIPMENT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.ERROR_SHIPMENT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        message: action.message,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n/** Thunk */\r\n\r\nconst updateOrderAdmin = (orderUpdate: OrderUpdateAdmin) => async(dispatch: Dispatch<ShipmentAction>) => {\r\n  dispatch(loadingShipment(orderUpdate));\r\n  const response = await api.post('/shipment',{\r\n    deliveryDate: orderUpdate.deliveryDate,\r\n    orderDetailId: orderUpdate.orderDetailId,\r\n    paymentReturned: orderUpdate.paymentReturned?.toString(),\r\n    returnStatus: orderUpdate.returnStatus?.toString(),\r\n    shipmentId: orderUpdate.shipmentId,\r\n    shipper: orderUpdate.shipper?.toString(),\r\n    shippingDate: orderUpdate.shippingDate,\r\n    trackingNumber: orderUpdate.trackingNumber?.toString() || ''\r\n  } as OrderUpdateAdmin);\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as ShipmentResponse;\r\n    dispatch(successShipment(orderUpdate, res.message|| ''));\r\n  } else {\r\n    const res = response as ShipmentResponse;\r\n    dispatch(errorShipment(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  shipmentReducer,\r\n  updateOrderAdmin\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { ProductItem } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface RelatedProductAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\ninterface RelatedProductResponse {\r\n   message?: string;\r\n   data?: ProductItem[];\r\n}\r\n\r\nexport interface RelatedProduct {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_RELATED_PRODUCT= 'LOADING_RELATED_PRODUCT',\r\n  SUCCESS_RELATED_PRODUCT= 'SUCCESS_RELATED_PRODUCT',\r\n  ERROR_RELATED_PRODUCT= 'ERROR_RELATED_PRODUCT',\r\n  SET_RELATED_PRODUCT= 'SET_RELATED_PRODUCT',\r\n}\r\n\r\nconst loadingRelatedProduct= () => ({\r\n  type: Actions.LOADING_RELATED_PRODUCT\r\n});\r\n\r\nconst successRelatedProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_RELATED_PRODUCT,\r\n  message\r\n});\r\n\r\nconst errorRelatedProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_RELATED_PRODUCT,\r\n  message\r\n});\r\n\r\nconst setRelatedProduct= (data: ProductItem[]) => ({\r\n  type: Actions.SET_RELATED_PRODUCT,\r\n  data\r\n});\r\n\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as RelatedProduct\r\n\r\n\r\nconst relatedProductReducer = (state= initialState, action: RelatedProductAction): RelatedProduct => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_RELATED_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_RELATED_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_RELATED_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_RELATED_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/**Thunk */\r\n\r\n\r\nconst getRelatedProduct= (subcategoryId: number, productId: number) => async (dispatch: Dispatch<RelatedProductAction>) => {\r\n  dispatch(loadingRelatedProduct());\r\n\r\n  const response = await api.post('/relatedproducts',{\r\n    subcategoryId,\r\n    productId\r\n  });\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as RelatedProductResponse;\r\n    dispatch(setRelatedProduct(res.data || []))\r\n  } else {\r\n    const res = response as RelatedProductResponse;\r\n    dispatch(errorRelatedProduct(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  relatedProductReducer,\r\n  getRelatedProduct\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { ProductItem } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface TrendingProductAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\ninterface TrendingProductResponse {\r\n   message?: string;\r\n   data?: ProductItem[];\r\n}\r\n\r\nexport interface TrendingProduct {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_TRENDING_PRODUCT= 'LOADING_TRENDING_PRODUCT',\r\n  SUCCESS_TRENDING_PRODUCT= 'SUCCESS_TRENDING_PRODUCT',\r\n  ERROR_TRENDING_PRODUCT= 'ERROR_TRENDING_PRODUCT',\r\n  SET_TRENDING_PRODUCT= 'SET_TRENDING_PRODUCT',\r\n}\r\n\r\nconst loadingTrendingProduct= () => ({\r\n  type: Actions.LOADING_TRENDING_PRODUCT\r\n});\r\n\r\nconst successTrendingProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_TRENDING_PRODUCT,\r\n  message\r\n});\r\n\r\nconst errorTrendingProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_TRENDING_PRODUCT,\r\n  message\r\n});\r\n\r\nconst setTrendingProduct= (data: ProductItem[]) => ({\r\n  type: Actions.SET_TRENDING_PRODUCT,\r\n  data\r\n});\r\n\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as TrendingProduct\r\n\r\n\r\nconst trendingProductReducer = (state= initialState, action: TrendingProductAction): TrendingProduct => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_TRENDING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_TRENDING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_TRENDING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_TRENDING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/**Thunk */\r\n\r\n\r\nconst getTrendingProduct= () => async (dispatch: Dispatch<TrendingProductAction>) => {\r\n  dispatch(loadingTrendingProduct());\r\n\r\n  const response = await api.get('/trendinglatest?type=2');\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as TrendingProductResponse;\r\n    dispatch(setTrendingProduct(res.data || []))\r\n  } else {\r\n    const res = response as TrendingProductResponse;\r\n    dispatch(errorTrendingProduct(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  trendingProductReducer,\r\n  getTrendingProduct\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { ProductItem } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface LatestProductAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\ninterface LatestProductResponse {\r\n   message?: string;\r\n   data?: ProductItem[];\r\n}\r\n\r\nexport interface LatestProduct {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_LATEST_PRODUCT= 'LOADING_LATEST_PRODUCT',\r\n  SUCCESS_LATEST_PRODUCT= 'SUCCESS_LATEST_PRODUCT',\r\n  ERROR_LATEST_PRODUCT= 'ERROR_LATEST_PRODUCT',\r\n  SET_LATEST_PRODUCT= 'SET_LATEST_PRODUCT',\r\n}\r\n\r\nconst loadingLatestProduct= () => ({\r\n  type: Actions.LOADING_LATEST_PRODUCT\r\n});\r\n\r\nconst successLatestProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_LATEST_PRODUCT,\r\n  message\r\n});\r\n\r\nconst errorLatestProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_LATEST_PRODUCT,\r\n  message\r\n});\r\n\r\nconst setLatestProduct= (data: ProductItem[]) => ({\r\n  type: Actions.SET_LATEST_PRODUCT,\r\n  data\r\n});\r\n\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as LatestProduct\r\n\r\n\r\nconst latestProductReducer = (state= initialState, action: LatestProductAction): LatestProduct => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_LATEST_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_LATEST_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_LATEST_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_LATEST_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/**Thunk */\r\n\r\n\r\nconst getLatestProduct= () => async (dispatch: Dispatch<LatestProductAction>) => {\r\n  dispatch(loadingLatestProduct());\r\n\r\n  const response = await api.get('/trendinglatest?type=1');\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as LatestProductResponse;\r\n    dispatch(setLatestProduct(res.data || []))\r\n  } else {\r\n    const res = response as LatestProductResponse;\r\n    dispatch(errorLatestProduct(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  latestProductReducer,\r\n  getLatestProduct\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { Search as ProductSearch } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode, pageSize } from 'appConstants';\r\n\r\nexport interface SearchAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductSearch;\r\n};\r\n\r\ninterface SearchResponse {\r\n  message?: string;\r\n  data?: ProductSearch;\r\n};\r\n\r\nexport interface Search {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductSearch;\r\n};\r\n\r\nenum Actions{\r\n  LOADING_SEARCH= 'LOADING_SEARCH',\r\n  SET_SEARCH= 'SET_SEARCH',\r\n  ERROR_SEARCH= 'ERROR_SEARCH',\r\n};\r\n\r\nconst loadingSearch= (data: ProductSearch) => ({\r\n  type: Actions.LOADING_SEARCH,\r\n  data\r\n});\r\n\r\nconst setSearch= (data: ProductSearch) => ({\r\n  type: Actions.SET_SEARCH,\r\n  data,\r\n});\r\n\r\nconst errorSearch= (message: string) => ({\r\n  type: Actions.ERROR_SEARCH,\r\n  message,\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:{}\r\n} as Search\r\n\r\nconst searchReducer = (state= initialState, action: SearchAction): Search => {\r\n  switch(action.type){\r\n    case Actions.LOADING_SEARCH:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: true,\r\n        data: action.data,\r\n      }\r\n    case Actions.SET_SEARCH:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.ERROR_SEARCH:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        message: action.message,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n\r\n\r\nexport {\r\n  searchReducer,\r\n  setSearch\r\n}","import { Action } from \"redux\";\r\nimport { CustomerShippment as CustomerShippmentType } from \"types\";\r\n\r\nexport interface CustomerShippmentAction extends Action {\r\n  readonly data?: CustomerShippmentType\r\n}\r\n\r\nexport interface CustomerShippment {\r\n  readonly data?: CustomerShippmentType;\r\n}\r\n\r\nconst initialState = {\r\n  data: {\r\n    shippmentPrice: ''\r\n  }\r\n} as CustomerShippment;\r\n\r\nenum Actions {\r\n  SET_SHIPPING_PRICE = 'SET_SHIPPING_PRICE',\r\n}\r\n\r\nconst setShippingPrice = (data: CustomerShippmentType) => ({\r\n  type: Actions.SET_SHIPPING_PRICE,\r\n  data\r\n});\r\n\r\nconst customerShippmentReducer = (state = initialState, action: CustomerShippmentAction): CustomerShippment => {\r\n  switch(action.type){\r\n    case Actions.SET_SHIPPING_PRICE:\r\n      return{\r\n        ...state,\r\n        data:{\r\n          shippmentPrice: action.data?.shippmentPrice || ''\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport {\r\n  customerShippmentReducer,\r\n  setShippingPrice\r\n}","import { createStore, combineReducers, Store, applyMiddleware, compose, Action } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport { userInformationReducer, UserInformation, UserInformationAction } from './UserInformation';\r\nimport { userLoginReducer, UserLoginRegister } from './Login';\r\nimport { userSettingsReducer, UserSetting } from './UserSettings';\r\nimport { Colour, colourReducer, ColourAction } from './Colour';\r\nimport { sizeReducer, Size, SizeAction } from './Size';\r\nimport { SubCategory, subCategoryReducer, SubCategoryAction } from './SubCategory';\r\nimport { Coupon, couponReducer, CouponAction } from './Coupon';\r\nimport { Product, productReducer, ProductAction } from './Product';\r\nimport { ProductCount, productCountReducer, ProductCountAction } from './ProductCount';\r\nimport { Cart, cartReducer, CartAction } from './Cart';\r\nimport { Checkout, checkoutReducer, CheckoutAction } from './Checkout';\r\nimport { UserLocation, userLocationReducer, UserLocationAction } from './UserLocation';\r\nimport { CustomerOrders, customerOrdersReducer, CustomerOrderAction } from './Order';\r\nimport { Shipper, shipperReducer, ShipperAction } from './Shipper';\r\nimport { Shipment, shipmentReducer, ShipmentAction } from './Shipment';\r\nimport { relatedProductReducer, RelatedProduct, RelatedProductAction } from './RelatedProducts';\r\nimport { TrendingProduct, trendingProductReducer, TrendingProductAction } from './TrendingProducts';\r\nimport { LatestProduct, latestProductReducer, LatestProductAction } from './LatestProducts';\r\nimport { searchReducer, SearchAction, Search } from './Search';\r\nimport { CustomerShippment, customerShippmentReducer, CustomerShippmentAction } from './CustomerShippment';\r\n\r\n\r\nexport type AppState = {\r\n  user: UserInformation;\r\n  userLogin: UserLoginRegister;\r\n  userSettings: UserSetting;\r\n  colour: Colour;\r\n  size: Size;\r\n  subCategory: SubCategory;\r\n  coupon: Coupon;\r\n  product: Product;\r\n  productCount: ProductCount;\r\n  cart: Cart;\r\n  checkout: Checkout;\r\n  userLocation: UserLocation;\r\n  customerOrders: CustomerOrders;\r\n  shipper: Shipper;\r\n  shipment: Shipment;\r\n  relatedProduct: RelatedProduct;\r\n  trendingProduct: TrendingProduct;\r\n  latestProduct: LatestProduct;\r\n  search: Search;\r\n  customerShippment: CustomerShippment\r\n}\r\n\r\nconst reducers = {\r\n  user: userInformationReducer,\r\n  userLogin: userLoginReducer,\r\n  userSettings: userSettingsReducer,\r\n  colour: colourReducer,\r\n  size: sizeReducer,\r\n  subCategory: subCategoryReducer,\r\n  coupon: couponReducer,\r\n  product: productReducer,\r\n  productCount: productCountReducer,\r\n  cart: cartReducer,\r\n  checkout: checkoutReducer,\r\n  userLocation: userLocationReducer,\r\n  customerOrders: customerOrdersReducer,\r\n  shipper: shipperReducer,\r\n  shipment: shipmentReducer,\r\n  relatedProduct: relatedProductReducer,\r\n  trendingProduct: trendingProductReducer,\r\n  latestProduct: latestProductReducer,\r\n  search: searchReducer,\r\n  customerShippment: customerShippmentReducer,\r\n};\r\n\r\ninterface AppActions {\r\n  user: UserInformationAction;\r\n  colour: ColourAction;\r\n  size: SizeAction;\r\n  subcategory: SubCategoryAction;\r\n  coupon: CouponAction;\r\n  product: ProductAction;\r\n  productCount: ProductCountAction;\r\n  cart: CartAction;\r\n  checkout: CheckoutAction;\r\n  userLocation: UserLocationAction;\r\n  customerOrders: CustomerOrderAction;\r\n  shipper: ShipperAction;\r\n  shipment: ShipmentAction;\r\n  relatedProduct: RelatedProductAction;\r\n  trendingProduct: TrendingProductAction;\r\n  latestProduct: LatestProductAction;\r\n  search: SearchAction;\r\n  customerShippment: CustomerShippmentAction;\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: Function;\r\n    store: Store<AppState>;\r\n  }\r\n};\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore<AppState, Action<AppActions>, any, any>(\r\n  combineReducers(reducers), \r\n  composeEnhancers(applyMiddleware(thunkMiddleware)\r\n  ));\r\n\r\nexport { store };\r\nexport * from './UserInformation';\r\nexport * from './Login';\r\nexport * from './UserSettings';\r\nexport * from './Colour';\r\nexport * from './Size';\r\nexport * from './SubCategory';\r\nexport * from './Coupon';\r\nexport * from './Product';\r\nexport * from './ProductCount';\r\nexport * from './Cart';\r\nexport * from './Checkout';\r\nexport * from './UserLocation';\r\nexport * from './Order';\r\nexport * from './Shipper';\r\nexport * from './Shipment';\r\nexport * from './RelatedProducts';\r\nexport * from './TrendingProducts';\r\nexport * from './LatestProducts';\r\nexport * from './CustomerShippment';","import React from 'react';\r\nimport * as Yup from 'yup';\r\n\r\nimport { User } from 'types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { UserInformation as UserInfo, saveUser } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport { CountryCodes } from 'appConstants';\r\n\r\n\r\ninterface Props {\r\n  user?: UserInfo;\r\n  fromCart? : boolean\r\n};\r\n\r\n\r\nconst UserInformation: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const userData = props.user;\r\n  const isLoading = props.user?._isLoading;\r\n\r\n  const userInformationFormik = useFormik({\r\n    initialValues: {\r\n      firstName: userData?.data?.firstName || '',\r\n      lastName: userData?.data?.lastName || '',\r\n      mobile: userData?.data?.mobile || '',\r\n      dob: userData?.data?.dob || '',\r\n      gender: userData?.data?.gender || '',\r\n      country: userData?.data?.country || CountryCodes.filter(country => country.default)[0].countryCode,\r\n      state: userData?.data?.state || '',\r\n      city: userData?.data?.city || '',\r\n      pincode: userData?.data?.pincode || '',\r\n      addressLineOne: userData?.data?.addressLineOne || '',\r\n      addressLineTwo: userData?.data?.addressLineTwo || '',\r\n      addressLineThree: userData?.data?.addressLineThree || '',\r\n      addressId: userData?.data?.addressId || ''\r\n    },\r\n\r\n    validationSchema: Yup.object({\r\n      firstName: Yup.string().required('Required'),\r\n      mobile: Yup.string().required('Required').matches(/^((\\+)(\\d{1,4}[-]))(\\d{10}){1}?$/, 'Valid Format e.g., +91-9876543210'),\r\n      country: Yup.string().required('Required'),\r\n      state: Yup.string().required('Required'),\r\n      city: Yup.string().required('Required'),\r\n      pincode: Yup.string().required('Required'),\r\n      addressLineOne: Yup.string().required('Required')\r\n    }),\r\n\r\n    onSubmit: (value: User) => {\r\n      dispatch(saveUser({...value, discount: userData?.data?.discount}));\r\n    },\r\n\r\n    enableReinitialize: true\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={userInformationFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        {\r\n          !props.fromCart && <header className=\"uk-card-header\"><h1 className=\"uk-h2\">Personal Information</h1></header>\r\n        }\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Contact</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">First Name <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"firstName\"\r\n                        {...userInformationFormik.getFieldProps(\"firstName\")} />\r\n                      {\r\n                        userInformationFormik.touched.firstName && userInformationFormik.errors.firstName ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.firstName}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Last Name <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"lastName\"\r\n                        {...userInformationFormik.getFieldProps(\"lastName\")} />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Phone Number <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"tel\" id=\"mobile\"\r\n                        {...userInformationFormik.getFieldProps('mobile')} />\r\n                      {\r\n                        userInformationFormik.touched.mobile && userInformationFormik.errors.mobile ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.mobile}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Date of Birth</div>\r\n                      <input className=\"uk-input\" type=\"date\" id=\"dob\"\r\n                        {...userInformationFormik.getFieldProps('dob')} />\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Gender</div>\r\n                      <select className=\"uk-select\" id=\"gender\"\r\n                        {...userInformationFormik.getFieldProps('gender')}>\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"M\">Male</option>\r\n                        <option value=\"F\">Female</option>\r\n                        <option value=\"O\">Other</option>\r\n                      </select>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Address</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Country <span className=\"uk-text-danger\">*</span></div>\r\n                      <select className=\"uk-select\" id=\"country\"\r\n                        {...userInformationFormik.getFieldProps('country')}>\r\n                        {\r\n                          CountryCodes.map((country, index) => {\r\n                            return <option key={index} value={country.countryCode}>{country.name}</option>\r\n                          })\r\n                        }\r\n                      </select>\r\n                      {\r\n                        userInformationFormik.touched.country && userInformationFormik.errors.country ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.country}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">State <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"state\"\r\n                        {...userInformationFormik.getFieldProps('state')} />\r\n                      {\r\n                        userInformationFormik.touched.state && userInformationFormik.errors.state ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.state}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">City <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"city\"\r\n                        {...userInformationFormik.getFieldProps('city')} />\r\n                      {\r\n                        userInformationFormik.touched.city && userInformationFormik.errors.city ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.city}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">PIN code</div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"pincode\"\r\n                        {...userInformationFormik.getFieldProps('pincode')} />\r\n                      {\r\n                        userInformationFormik.touched.pincode && userInformationFormik.errors.pincode ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.pincode}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-1-1\">\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Flat, House no., Building, Company, Apartment  <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"addressLineOne\"\r\n                        {...userInformationFormik.getFieldProps('addressLineOne')} />\r\n                      {\r\n                        userInformationFormik.touched.addressLineOne && userInformationFormik.errors.addressLineOne ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.addressLineOne}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-1-1\">\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Area, Colony, Street, Sector, Village</div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"addressLineTwo\"\r\n                        {...userInformationFormik.getFieldProps('addressLineTwo')} />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-1-1\">\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Landmark</div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"addressLineThree\"\r\n                        {...userInformationFormik.getFieldProps('addressLineThree')} />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <button disabled={isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              isLoading &&\r\n              <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserInformation\r\n}\r\n","import React, { useState } from 'react';\r\n\r\ninterface Props {\r\n  toggelDetails: Function;\r\n  showSettings: boolean;\r\n  showPersonal: boolean;\r\n  showOrders: boolean;\r\n}\r\n\r\nconst UserNav: React.FunctionComponent<Props> = (props: Props)=> {\r\n\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-1-4@m tm-aside-column\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\" uk-sticky=\"offset: 90; bottom: true; media: @m;\">\r\n        <div className=\"uk-card-header\">\r\n          <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div>\r\n              <div className=\"uk-grid-small uk-flex-center\" uk-grid=\"true\">\r\n                <div>\r\n                  <a className=\"uk-button uk-button-default uk-button-small\"><span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: cog; ratio: .75;\"></span><span>Quick Links</span></a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <nav>\r\n            <ul className=\"uk-nav uk-nav-default tm-nav quick-links\">\r\n              <li className={props.showPersonal ? 'uk-active' : ''}>\r\n                <a onClick={(): void => {props.toggelDetails('personal')}}>Personal Information</a>\r\n              </li>\r\n              <li className={props.showOrders ? 'uk-active' : ''}>\r\n                <a onClick={(): void => {props.toggelDetails('orders')}}>Orders</a>\r\n              </li>\r\n              <li className={props.showSettings ? 'uk-active' : ''}>\r\n                <a onClick={(): void => {props.toggelDetails('settings')}}>Settings</a>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { UserNav };","import React from 'react';\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { UserSetting, saveUserSettings } from 'reducers';\r\nimport { useDispatch } from 'react-redux';\r\nimport { UserSettings as UserSettingType } from 'types';\r\n\r\n\r\ninterface Props {\r\n  user?: UserSetting;\r\n}\r\n\r\nconst UserSettings: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const user = props.user;\r\n  const isLoading = props.user?._isLoading;\r\n  const dispatch = useDispatch();\r\n  const userSettingFormik = useFormik({\r\n    initialValues: {\r\n      emailAddress: user?.data?.emailAddress || '',\r\n      currentPassword: '',\r\n      newPassword: '',\r\n      confirmPassword: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      emailAddress: Yup.string().required('Required'),\r\n      currentPassword: Yup.string().required('Required'),\r\n      newPassword: Yup.string().required('Required'),\r\n      confirmPassword: Yup.string().required('Required').oneOf([Yup.ref('newPassword'), ''], 'Password should match')\r\n    }),\r\n    onSubmit: (value: UserSettingType) => {\r\n      dispatch(saveUserSettings(value));\r\n      userSettingFormik.resetForm();\r\n    },\r\n\r\n    enableReinitialize: true\r\n  });\r\n\r\n\r\n  return (\r\n    <form onSubmit={userSettingFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <header className=\"uk-card-header\"><h1 className=\"uk-h2\">Settings</h1></header>\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Email</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Current Email</div>\r\n                      <input className=\"uk-input\" id=\"emailAddress\" type=\"email\" disabled\r\n                        {...userSettingFormik.getFieldProps('emailAddress')} />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Password</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Current Password</div>\r\n                      <input className=\"uk-input \" id=\"currentPassword\" type=\"password\"\r\n                        {...userSettingFormik.getFieldProps('currentPassword')} />\r\n                      {\r\n                        userSettingFormik.touched.currentPassword && userSettingFormik.errors.currentPassword ? (\r\n                          <span className=\"uk-text-danger\">{userSettingFormik.errors.currentPassword}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">New Password</div>\r\n                      <input className=\"uk-input \" type=\"password\"\r\n                        {...userSettingFormik.getFieldProps('newPassword')} />\r\n                      {\r\n                        userSettingFormik.touched.newPassword && userSettingFormik.errors.newPassword ? (\r\n                          <span className=\"uk-text-danger\">{userSettingFormik.errors.newPassword}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Confirm Password</div>\r\n                      <input className=\"uk-input \" type=\"password\"\r\n                        {...userSettingFormik.getFieldProps('confirmPassword')} />\r\n                      {\r\n                        userSettingFormik.touched.confirmPassword && userSettingFormik.errors.confirmPassword ? (\r\n                          <span className=\"uk-text-danger\">{userSettingFormik.errors.confirmPassword}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <button disabled={isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>update password</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserSettings\r\n}","import React, { useEffect, useState, useRef } from 'react';\r\nimport { CustomerOrders, getCustomerOrders, customerProductReturn, defaulOrderReturn } from 'reducers/Order';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, UserLocation, getShippers } from 'reducers';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { pageSize, serverImagePath, AllowReturn } from 'appConstants';\r\nimport { Order, OrderItems, OrderShipper } from 'types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getCurrencyIcon } from 'services';\r\n\r\nconst Orders: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [hasMoreOrders, setHasMoreOrders] = useState(false);\r\n  const [selectedReason, setSelectedReason] = useState('');\r\n  const [showOrderDetailIndex, setShowOrderDetailIndex] = useState<number[]>([]);\r\n  const [returnOrderDetailId, setReturnOrderDetailId] = useState('');\r\n  const [showReturnError, setShowReturnError] = useState(false);\r\n  const returnModalRef = useRef<HTMLDivElement>(null);\r\n  const returnButtonRef = useRef<HTMLButtonElement>(null);\r\n  const orders = useSelector<AppState, CustomerOrders>(state => state.customerOrders || []);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const shipperData = useSelector<AppState, OrderShipper[]>(state => state.shipper.data || []);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCustomerOrders(orders.data?.length || 0, pageSize));\r\n    dispatch(getShippers());\r\n  }, [])\r\n  const fetchNextOrders = () => {\r\n    dispatch(getCustomerOrders(orders.data?.length || 0, pageSize));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (orders._isOrderUpdate && returnModalRef.current?.getBoundingClientRect().top !== 0) {\r\n      const that = returnButtonRef.current;\r\n      setTimeout(() => {\r\n        that?.click();\r\n      }, 1000);\r\n    }\r\n  }, [orders._isOrderUpdate])\r\n\r\n  useEffect(() => {\r\n    setHasMoreOrders(orders._hasMoreOrders || false);\r\n  }, [orders._hasMoreOrders]);\r\n\r\n\r\n  const toggleShowOrderDetails = (orderId: number) => {\r\n    if (showOrderDetailIndex.indexOf(orderId) > -1) {\r\n      setShowOrderDetailIndex(showOrderDetailIndex.filter((id) => id !== orderId))\r\n    } else {\r\n      setShowOrderDetailIndex([...showOrderDetailIndex, orderId]);\r\n    }\r\n  }\r\n\r\n  const getShipmentLink = (shipper?: string, trackingNumber?: string) => {\r\n    if (shipper && trackingNumber) {\r\n      const shipperInfo = shipperData.filter(({ shipperId }) => shipperId === shipper);\r\n      if (shipperInfo[0]) {\r\n        return <a target=\"_blank\" href={shipperInfo[0].trackingLink + trackingNumber}>Track Package</a>\r\n      }\r\n    }\r\n    return 'Order Recived'\r\n  }\r\n\r\n  const checkReturnEligibilty = (deliveryDate: string, categoryId: string) => {\r\n    if(AllowReturn.indexOf(categoryId) > -1 ){\r\n      const dateDifference = (new Date()).getTime() - (new Date(deliveryDate)).getTime();\r\n      const differenceInDays = dateDifference / (1000 * 3600 * 24);\r\n      return Math.ceil(differenceInDays) <= 30;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const returnOrder = (orderDetailId?: string, reason?: string) => {\r\n    if(selectedReason || reason){\r\n      setShowReturnError(false);\r\n      dispatch(customerProductReturn(Number(orderDetailId) || Number(returnOrderDetailId), \r\n        reason||selectedReason));\r\n    } else {\r\n      setShowReturnError(true);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card  uk-card-small tm-ignore-container\">\r\n        {\r\n          orders.data && orders.data.length === 0 ?\r\n            <div className=\"uk-card uk-card-default uk-grid-collapse uk-child-width-1-1@s uk-margin\" uk-grid=\"true\">\r\n              <div>\r\n                <div className=\"uk-card-body uk-nav-center\">\r\n                  <p>You haven't ordered anything. Start some shopping now !!</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            :\r\n            <InfiniteScroll\r\n              dataLength={orders.data && orders.data.length || 0}\r\n              next={fetchNextOrders}\r\n              hasMore={hasMoreOrders}\r\n              loader={\r\n                <div style={{ textAlign: \"center\", marginTop: \"10px\" }}>\r\n                  <h4>Loading...</h4>\r\n                </div>\r\n              }\r\n              endMessage={\r\n                <p style={{ textAlign: \"center\" }}>\r\n                  <b>That's all for now !</b>\r\n                </p>\r\n              }\r\n            >\r\n              {\r\n                orders && orders.data &&\r\n                orders.data.map((order: Order, index: number) => {\r\n                  return (\r\n                    <div key={index} className=\"uk-card uk-card-hover uk-card-default uk-width-1-1@m\">\r\n                      <div className=\"uk-card-header\">\r\n                        <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                          <div className=\"uk-width-expand\">\r\n                            <div className=\"uk-float-left\">\r\n                              <h3 className=\"uk-card-title uk-margin-remove-bottom\">#{order.orderNumber}</h3>\r\n                              <p className=\"uk-text-meta uk-margin-remove-top\"><time>Ordered on {order.paymentDate.split(' ')[0]}</time></p>\r\n                            </div>\r\n                            <p className=\"uk-text-normal uk-margin-remove-top uk-float-right\"><time>Amount Paid: {getCurrencyIcon(userLocation.data || 'IN')} {order.totalPrice}</time></p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {\r\n                        showOrderDetailIndex.indexOf(Number(order.orderId)) === -1 &&\r\n                        <div className=\"uk-card uk-grid-collapse uk-child-width-1-3@s uk-margin uk-margin-remove-top\" uk-grid=\"true\">\r\n                          <div className=\"uk-card-media-left\">\r\n                            <div className=\"tm-ratio tm-ratio-16-9\">\r\n                              <a className=\"tm-media-box\" onClick={() => history.push('/productDetails/' + order.orderItems[0].productId)}>\r\n                                <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + order.orderItems[0].productImage} alt={order.orderItems[0].productImage} /> </figure>\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"uk-card-body\">\r\n                              {/* <h3 className=\"uk-card-title\">Media Left</h3> */}\r\n                              <ul className=\"uk-list\">\r\n                                <li>Product : <a onClick={() => history.push('/productDetails/' + order.orderItems[0].productId)}>{order.orderItems[0].productName}</a></li>\r\n                                <li>Quantity: {order.orderItems[0].quantity}</li>\r\n                                <li>Price: {getCurrencyIcon(userLocation.data || 'IN')} {order.orderItems[0].productPrice}</li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"uk-card-body\">\r\n                              {\r\n                                (order.orderItems[0].shipmentDetails?.returnStatus ||\r\n                                  order.orderItems[0].shipmentDetails?.paymentReturned) ?\r\n                                  <ul className=\"uk-list\">\r\n                                    {\r\n                                      order.orderItems[0].shipmentDetails?.paymentReturned === 'Yes' ?\r\n                                        <li>Return Status: <span className=\"uk-label uk-label-success\">Retured</span></li>\r\n                                        : order.orderItems[0].shipmentDetails?.paymentReturned === 'No' ?\r\n                                        <li>Return Status: <span className=\"uk-label uk-label-danger\">Declined</span></li>\r\n                                        : <li>Return Status: <span className=\"uk-label uk-label-warning\">{order.orderItems[0].shipmentDetails?.returnStatus}</span></li>\r\n                                    }\r\n                                  </ul>\r\n                                  :\r\n                                  order.orderItems[0].shipmentDetails?.deliveryDate ?\r\n                                    <ul className=\"uk-list\">\r\n                                      <li>Status : <span className=\"uk-label uk-label-success\">Delivered</span></li>\r\n                                      <li>Delivery Date: <span>{order.orderItems[0].shipmentDetails?.deliveryDate}</span></li>\r\n                                      {\r\n                                        checkReturnEligibilty(order.orderItems[0].shipmentDetails?.deliveryDate, order.orderItems[0].categoryId) &&\r\n                                        <li><button className=\"uk-button uk-button-primary uk-button-small\" uk-toggle=\"target: #return-modal\" onClick={() => { setSelectedReason('');  dispatch(defaulOrderReturn()); setReturnOrderDetailId(order.orderItems[0].orderDetailId) }}>Return</button></li>\r\n                                      }\r\n                                    </ul>\r\n                                    :\r\n                                    <ul className=\"uk-list\">\r\n                                      <li>Status : {getShipmentLink(order.orderItems[0].shipmentDetails?.shipper, order.orderItems[0].shipmentDetails?.trackingNumber)}</li>\r\n                                      <li>Shipment Date: <span>{order.orderItems[0].shipmentDetails?.shippingDate ? order.orderItems[0].shipmentDetails?.shippingDate : 'Awaited'}</span></li>\r\n                                      <li>\r\n                                        <button className=\"uk-button uk-button-primary uk-button-small\" \r\n                                          disabled={orders._isLoading}\r\n                                          {...(order.orderItems[0].shipmentDetails?.shippingDate && 'uk-toggle=\"target: #return-modal\"')}\r\n                                          onClick={() => { \r\n                                            debugger\r\n                                            if(order.orderItems[0].shipmentDetails?.shippingDate){\r\n                                              setSelectedReason('');\r\n                                              dispatch(defaulOrderReturn())\r\n                                              setReturnOrderDetailId(order.orderItems[0].orderDetailId)\r\n                                            } else {\r\n                                              setSelectedReason('Order Canceled before shipping');\r\n                                               setReturnOrderDetailId(order.orderItems[0].orderDetailId)\r\n                                               returnOrder(order.orderItems[0].orderDetailId,'Order Canceled before shipping');\r\n                                            }\r\n                                            \r\n                                        }}>\r\n                                          {\r\n                                                        orders._isLoading &&  <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n                                                      }\r\n                                          {order.orderItems[0].shipmentDetails?.shippingDate ? 'Return' : 'Cancel'}\r\n                                        </button></li>\r\n                                    </ul>\r\n                              }\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      }\r\n                      {\r\n                        order.orderItems.length > 1 &&\r\n                        <ul uk-accordion=\"true\">\r\n                          <li>\r\n                            <a\r\n                              className=\"uk-accordion-title uk-nav-center uk-padding-bottom\"\r\n                              onClick={() => toggleShowOrderDetails(Number(order.orderId))}>\r\n                              {showOrderDetailIndex.indexOf(Number(order.orderId)) === -1 ? \"View More\" : \"View Less\"}</a>\r\n                            <div className=\"uk-accordion-content\">\r\n                              {\r\n                                order.orderItems.map((orderItem: OrderItems, index: number) => {\r\n                                  return (\r\n                                    <div key={index} className=\"uk-card uk-grid-collapse uk-child-width-1-3@s uk-margin uk-margin-remove-top\" uk-grid=\"true\">\r\n                                      <div className=\"uk-card-media-left\">\r\n                                        <div className=\"tm-ratio tm-ratio-16-9\">\r\n                                          <a className=\"tm-media-box\" onClick={() => history.push('/productDetails/' + orderItem.productId)}>\r\n                                            <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + orderItem.productImage} alt={orderItem.productImage} /> </figure>\r\n                                          </a>\r\n                                        </div>\r\n                                      </div>\r\n                                      <div>\r\n                                        <div className=\"uk-card-body\">\r\n                                          <ul className=\"uk-list\">\r\n                                            <li>Product : <a onClick={() => history.push('/productDetails/' + orderItem.productId)}>{orderItem.productName}</a></li>\r\n                                            <li>Quantity: {orderItem.quantity}</li>\r\n                                            <li>Price: {getCurrencyIcon(userLocation.data || 'IN')} {orderItem.productPrice}</li>\r\n                                          </ul>\r\n                                        </div>\r\n                                      </div>\r\n                                      <div>\r\n                                        <div className=\"uk-card-body\">\r\n                                          {\r\n                                            (orderItem.shipmentDetails?.returnStatus ||\r\n                                              orderItem.shipmentDetails?.paymentReturned) ?\r\n                                              <ul className=\"uk-list\">\r\n                                                {\r\n                                                  orderItem.shipmentDetails?.paymentReturned === 'Yes' ?\r\n                                                    <li>Return Status: <span className=\"uk-label uk-label-success\">Retured</span></li>\r\n                                                    : orderItem.shipmentDetails?.paymentReturned === 'No' ?\r\n                                                    <li>Return Status: <span className=\"uk-label uk-label-danger\">Declined</span></li>\r\n                                                    : <li>Return Status: <span className=\"uk-label uk-label-warning\">{orderItem.shipmentDetails?.returnStatus}</span></li>\r\n                                                }\r\n                                              </ul>\r\n                                              :\r\n                                              orderItem.shipmentDetails?.deliveryDate ?\r\n                                                <ul className=\"uk-list\">\r\n                                                  <li>Status : <span className=\"uk-label uk-label-success\">Delivered</span></li>\r\n                                                  <li>Delivery Date: <span>{orderItem.shipmentDetails?.deliveryDate}</span></li>\r\n                                                  {\r\n                                                    checkReturnEligibilty(orderItem.shipmentDetails?.deliveryDate, order.orderItems[0].categoryId) &&\r\n                                                    <li><button className=\"uk-button uk-button-primary uk-button-small\" uk-toggle=\"target: #return-modal\" onClick={() => { setSelectedReason('');  dispatch(defaulOrderReturn()) ;setReturnOrderDetailId(orderItem.orderDetailId) }}>Return</button></li>\r\n                                                  }\r\n                                                </ul>\r\n                                                :\r\n                                                <ul className=\"uk-list\">\r\n                                                  <li>Status : {getShipmentLink(orderItem.shipmentDetails?.shipper, orderItem.shipmentDetails?.trackingNumber)}</li>\r\n                                                  <li>Shipment Date: <span>{orderItem.shipmentDetails?.shippingDate ? orderItem.shipmentDetails?.shippingDate : 'Awaited'}</span></li>\r\n                                                  <li>\r\n                                                    <button className=\"uk-button uk-button-primary uk-button-small\"\r\n                                                    disabled={orders._isLoading}\r\n                                                    {...(orderItem.shipmentDetails?.shippingDate && 'uk-toggle=\"target: #return-modal\"')}\r\n                                                      onClick={() => {\r\n                                                        debugger\r\n                                                        if(orderItem.shipmentDetails?.shippingDate){\r\n                                                          setSelectedReason('');\r\n                                                          setReturnOrderDetailId(orderItem.orderDetailId);\r\n                                                          dispatch(defaulOrderReturn())\r\n                                                        } else {\r\n                                                          setSelectedReason('Order Canceled before shipping');\r\n                                                          setReturnOrderDetailId(orderItem.orderDetailId)\r\n                                                          returnOrder(orderItem.orderDetailId,'Order Canceled before shipping');\r\n                                                        }\r\n                                                      }\r\n                                                    }>\r\n                                                      {\r\n                                                        orders._isLoading &&  <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n                                                      }\r\n                                                    {orderItem.shipmentDetails?.shippingDate ? 'Return' : 'Cancel'}</button></li>\r\n                                                </ul>\r\n                                          }\r\n                                        </div>\r\n                                      </div>\r\n\r\n                                    </div>\r\n                                  )\r\n                                })\r\n                              }\r\n                            </div>\r\n                          </li>\r\n                        </ul>\r\n                      }\r\n\r\n                    </div>\r\n                  )\r\n                })\r\n\r\n              }\r\n            </InfiniteScroll>\r\n        }\r\n\r\n      </div>\r\n      <button ref={returnButtonRef} uk-toggle=\"target: #return-modal\" style={{ visibility: \"hidden\" }}></button>\r\n      <div id=\"return-modal\" uk-modal=\"true\">\r\n        <div className=\"uk-modal-dialog uk-modal-body\">\r\n          <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n          <h2 className=\"uk-modal-title\">Thank you for ordering!</h2>\r\n          <p>Please choose the correct reason for return. This information will help us to improve our site</p>\r\n          <div ref={returnModalRef} className=\"uk-form-stacked\">\r\n            <div className=\"uk-margin\">\r\n              <div className=\"uk-form-controls\">\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Defective product')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Defective product\" checked={selectedReason === 'Defective product'} /><span className=\"coupon-message\">Defective product</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Image shown did not match the actual product')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Image shown did not match the actual product\" checked={selectedReason === 'Image shown did not match the actual product'} /><span className=\"coupon-message\">Image shown did not match the actual product</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Quality Issues')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Quality Issues\" checked={selectedReason === 'Quality Issues'} /><span className=\"coupon-message\">Quality Issues</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('I changed my mind')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"I changed my mind\" checked={selectedReason === 'I changed my mind'} /><span className=\"coupon-message\">I changed my mind</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Size or fit issues')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Size or fit issues\" checked={selectedReason === 'Size or fit issues'} /><span className=\"coupon-message\">Size or fit issues</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Other')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Other\" checked={selectedReason === 'Other'} /><span className=\"coupon-message\">Other</span></label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <p><span className=\"uk-badge\">Note:</span> You confirm that the product is unused with the original tags intact.</p>\r\n          {\r\n            showReturnError && \r\n            <p className=\"uk-text-danger\">Please select one of the above reason.</p>\r\n          }\r\n          <p className=\"uk-text-right\">\r\n            {\r\n              !orders._isOrderUpdate ?\r\n                <button disabled={orders._isLoading}\r\n                  className=\"uk-button uk-button-primary\" type=\"button\" onClick={() => returnOrder()}>\r\n                  {\r\n                    orders._isLoading &&\r\n                    <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n                  }\r\n               Confirm Return</button>\r\n                :\r\n                <button disabled={orders._isOrderUpdate}\r\n                  className=\"uk-button uk-label-success\" type=\"button\" >\r\n                  <span uk-icon=\"icon:check\" />\r\n                Return Initaled.</button>\r\n            }\r\n\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  Orders\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { UserInformation, UserNav, UserSettings } from '.';\r\nimport { AppState, getUserSettings } from 'reducers';\r\nimport { Orders } from './Orders';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst UserContainer: React.FunctionComponent = () => {\r\n\r\n  /**\r\n   * Hooks\r\n   */\r\n  const { userTab } = useParams();\r\n  const [showSettings, setShowSettings] = useState(false);\r\n  const [showPersonal, setShowPersonal] = useState(false);\r\n  const [showOrders, setShowOrders] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const userData = useSelector((state: AppState) => state.user);\r\n\r\n  const userSettings = useSelector((state: AppState) => state.userSettings)\r\n  useEffect(() => {\r\n    dispatch(getUserSettings());\r\n    toggelDetails(userTab || '')\r\n  },[]);\r\n\r\n  useEffect(() => {\r\n    toggelDetails(userTab || '')\r\n  },[userTab])\r\n  /**\r\n   * Local Methods\r\n   */\r\n  const toggelDetails = (selected: string): void => {\r\n    if(selected === 'orders') {\r\n      setShowSettings(false);\r\n      setShowPersonal(false);\r\n      setShowOrders(true);\r\n    } else if(selected === 'settings') {\r\n      setShowSettings(true);\r\n      setShowPersonal(false);\r\n      setShowOrders(false);\r\n    } else {\r\n      setShowSettings(false);\r\n      setShowPersonal(true);\r\n      setShowOrders(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main>\r\n        <section className=\"uk-section uk-section-small\">\r\n          <div className=\"uk-container\">\r\n            <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n              <UserNav toggelDetails={toggelDetails}\r\n                showPersonal={showPersonal} \r\n                showSettings={showSettings} \r\n                showOrders={showOrders} />\r\n                {showPersonal && <UserInformation user={userData} />}\r\n                {showSettings &&  <UserSettings user={userSettings}/>}\r\n                {showOrders &&  <Orders/>}\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserContainer\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { Login, CustomerCart } from 'types'\r\nimport { CountryCodes } from 'appConstants';\r\nimport { useDispatch, useSelector, } from 'react-redux';\r\nimport { userLogin, AppState, defaultLoginRegister, userRegister, getUser, getCart, forgetPassword, addUpdateCart } from 'reducers';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst UserLogin: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector<AppState, boolean>(state => state.userLogin._isLoading);\r\n  const isError = useSelector<AppState, boolean>(state => state.userLogin._isError);\r\n  const _isSuccess = useSelector<AppState, boolean>(state => state.userLogin._isSuccess);\r\n  const responseMessage = useSelector<AppState, string | undefined>(state => state.userLogin.message);\r\n  const [loginRedirect, setLoginRedirect] = useState(false)\r\n\r\n  const loginFormik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n      mobile: '+91-',\r\n      isRegistration: false,\r\n      forgetPassword: false,\r\n      countryCode: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .required('Required')\r\n        .email('Invalid email address'),\r\n      password: Yup.string().when('forgetPassword',{\r\n        is: false,\r\n        then: Yup.string()\r\n        .required('Required')\r\n      }),\r\n      mobile: Yup.string().when('isRegistration', {\r\n        is: true,\r\n        then: Yup.string().required('Required')\r\n          .matches(/^((\\+)(\\d{1,4}[-]))(\\d{10}){1}?$/\r\n            , 'Valid Format e.g., +91-9876543210')\r\n      })\r\n    }),\r\n    onSubmit: (values: Login) => {\r\n      if (!loginFormik.values.isRegistration) {\r\n        if(loginFormik.values.forgetPassword){\r\n          dispatch(forgetPassword(values));\r\n        } else {\r\n          dispatch(userLogin({ email: values.email, password: values.password }));\r\n        }\r\n      } else {\r\n        dispatch(userRegister({ email: values.email, password: values.password, mobile: values.mobile }));\r\n      }\r\n    },\r\n  });\r\n\r\n  const onCountryChange = (event: React.FormEvent<HTMLSelectElement>): void => {\r\n    loginFormik.setFieldValue('mobile', event.currentTarget.value + '-')\r\n  };\r\n\r\n  const toggleLoginRegister = (isRegistration: boolean): void => {\r\n    loginFormik.resetForm();\r\n    loginFormik.setFieldValue('isRegistration', isRegistration);\r\n    loginFormik.setFieldValue('forgetPassword', false);\r\n    dispatch(defaultLoginRegister());\r\n  }\r\n\r\n  const onForgetPassword = () => {\r\n    loginFormik.setFieldValue('forgetPassword', true);\r\n  };\r\n\r\n  const addToDBCartAfterLogin = () => {\r\n    const cartData = JSON.parse(localStorage.getItem(\"basicKart-loggedOutCart\") || '[]');\r\n    cartData.forEach((cart: CustomerCart) => {\r\n      dispatch(addUpdateCart({\r\n        productDetailId: cart.productDetailId,\r\n        productQuantity: cart.productQuantity,\r\n        currencyType: cart.currencyType,\r\n        cartId: '0',\r\n        productImage: cart.productImage,\r\n        productImagePath: cart.productImagePath,\r\n        productName: cart.productName,\r\n        subcategory: cart.subcategory,\r\n        productPrice: '0',\r\n        productId: cart.productId,\r\n      },true))\r\n    });\r\n    localStorage.setItem('basicKart-loggedOutCart','[]');\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (loginFormik.values.isRegistration) {\r\n      loginFormik.setFieldValue('isRegistration', false);\r\n      loginFormik.setFieldValue('email', '');\r\n      loginFormik.setFieldValue('password', '');\r\n      loginFormik.touched.password = false;\r\n      loginFormik.touched.email = false;\r\n    } else {\r\n      if (_isSuccess) {\r\n        if(!loginFormik.values.forgetPassword){\r\n          setLoginRedirect(true);\r\n          dispatch(getUser());\r\n          dispatch(getCart());\r\n          addToDBCartAfterLogin();\r\n        }\r\n      }\r\n    }\r\n  }, [_isSuccess])\r\n\r\n  if (loginRedirect) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={loginFormik.handleSubmit} className=\"uk-form-stacked\">\r\n      <main>\r\n        <section className=\"uk-section uk-section-small\">\r\n          <div className=\"uk-container\">\r\n            <div className=\"uk-grid-medium justify-content-center \" uk-grid=\"true\">\r\n              <div className=\"uk-width-1-1 uk-width-1-3@m tm-aside-column\">\r\n                <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\" uk-sticky=\"offset: 90; bottom: true; media: @m;\">\r\n                  <div className=\"uk-card-header\">\r\n                    <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                      <div>\r\n                        <div className=\"uk-grid-small uk-flex-center\" uk-grid=\"true\">\r\n                          <div>\r\n                            <a className={'uk-button uk-button-default uk-button-small ' + (!loginFormik.values.isRegistration ? 'login-register-active-button uk-active' : '')} onClick={(): void => toggleLoginRegister(false)}>\r\n                              <span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: sign-in; ratio: .75;\"></span>\r\n                              <span>Login</span>\r\n                            </a>\r\n                          </div>\r\n                          <div>\r\n                            <a className={'uk-button uk-button-default uk-button-small ' + (loginFormik.values.isRegistration ? 'login-register-active-button uk-active' : '')} onClick={(): void => toggleLoginRegister(true)}>\r\n                              <span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: pencil; ratio: .75;\"></span>\r\n                              <span>Register</span>\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    {\r\n                      isError &&\r\n                      <div className=\"login-error-message\">\r\n                        <span className=\"uk-notification-message-danger\"> {responseMessage} </span>\r\n                      </div>\r\n                    }\r\n                    {\r\n                      _isSuccess &&\r\n                      <div className=\"forget-password-message\">\r\n                        <span className=\"uk-notification-message-success\"> {responseMessage} </span>\r\n                      </div>\r\n                    }\r\n                    <nav>\r\n                      <ul className=\"uk-nav uk-nav-default tm-nav\">\r\n                        <li>\r\n                          <div className=\"uk-card-body\">\r\n                            <div className=\"uk-form-stacked\">\r\n                              <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n                                <fieldset className=\"uk-fieldset\">\r\n                                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                                    <div>\r\n                                      <label>\r\n                                        <div className=\"uk-form-label\">Email</div>\r\n                                        <input className=\"uk-input\" id=\"email\" type=\"text\"\r\n                                          {...loginFormik.getFieldProps('email')} />\r\n                                        {\r\n                                          loginFormik.touched.email && loginFormik.errors.email ? (\r\n                                            <span className=\"uk-text-danger\">{loginFormik.errors.email}</span>\r\n                                          ) : ''\r\n                                        }\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                </fieldset>\r\n                                {loginFormik.values.isRegistration &&\r\n                                  <fieldset className=\"uk-fieldset\">\r\n                                    <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                                      <div className=\"uk-width-1-3 uk-width-1-3@s\">\r\n                                        <label>\r\n                                          <div className=\"uk-form-label\">Country</div>\r\n                                          <select className=\"uk-select\" id=\"countryCode\"\r\n                                            onChange={onCountryChange}>\r\n                                            {\r\n                                              CountryCodes.map((country, index) => {\r\n                                                return <option key={index} value={country.Iso} selected={country.default}>{country.name}</option>\r\n                                              })\r\n                                            }\r\n                                          </select>\r\n                                        </label>\r\n                                      </div>\r\n                                      <div className=\"uk-width-expand\">\r\n                                        <label>\r\n                                          <div className=\"uk-form-label\">Mobile Number</div>\r\n                                          <input className=\"uk-input\" type=\"text\" id=\"mobile\"\r\n                                            {...loginFormik.getFieldProps('mobile')} />\r\n                                          {\r\n                                            loginFormik.touched.mobile && loginFormik.errors.mobile ? (\r\n                                              <span className=\"uk-text-danger\">{loginFormik.errors.mobile}</span>\r\n                                            ) : ''\r\n                                          }\r\n                                        </label>\r\n                                      </div>\r\n                                    </div>\r\n                                  </fieldset>\r\n                                }\r\n                                {\r\n                                  !loginFormik.values.forgetPassword &&\r\n                                  <fieldset className=\"uk-fieldset\">\r\n                                    <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                                      <div>\r\n                                        <label>\r\n                                          <div className=\"uk-form-label\">Password</div>\r\n                                          <input className=\"uk-input\" type=\"password\" id=\"password\"\r\n                                            {...loginFormik.getFieldProps('password')} />\r\n                                          {\r\n                                            loginFormik.touched.password && loginFormik.errors.password ? (\r\n                                              <span className=\"uk-text-danger\">{loginFormik.errors.password}</span>\r\n                                            ) : ''\r\n                                          }\r\n                                        </label>\r\n                                      </div>\r\n                                    </div>\r\n                                  </fieldset>\r\n                                }\r\n\r\n                              </div>\r\n                              {\r\n                                !loginFormik.values.isRegistration &&\r\n                                <div className=\"uk-text-right uk-margin-xsmall-top\">\r\n                                  <a className=\"uk-text-danger\" onClick={() => onForgetPassword()}> Forget Password ?</a>\r\n                                </div>\r\n                              }\r\n\r\n                              <div className=\"uk-card-footer uk-text-center top-border-none\">\r\n                                <button id=\"loginbtn\" disabled={isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                                  {\r\n                                    isLoading &&\r\n                                    <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                                  }\r\n                                  <span>Submit</span>\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </nav>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserLogin\r\n}","import React from 'react';\r\n\r\n\r\nconst MainFooter: React.FunctionComponent = () => {\r\n  return (\r\n    <footer>\r\n      <section className=\"uk-section uk-section-secondary uk-section-small uk-light\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1 uk-child-width-1-4@m\" uk-grid=\"true\">\r\n            <div>\r\n              <a className=\"uk-logo\" href=\"index.html\"><img src=\"/logo.png\" alt=\"Logo\" /></a>\r\n              <p className=\"uk-text-small\"></p>\r\n              <ul className=\"uk-iconnav\">\r\n                <li><a href=\"#\" title=\"Facebook\" uk-icon=\"facebook\"></a></li>\r\n                <li><a href=\"#\" title=\"Twitter\" uk-icon=\"twitter\"></a></li>\r\n                <li><a href=\"#\" title=\"YouTube\" uk-icon=\"youtube\"></a></li>\r\n                <li><a href=\"#\" title=\"Instagram\" uk-icon=\"instagram\"></a></li>\r\n              </ul>\r\n            </div>\r\n            <div>\r\n              <nav className=\"uk-grid-small uk-child-width-1-2\" uk-grid=\"true\">\r\n                <div>\r\n                  <ul className=\"uk-nav uk-nav-default\">\r\n                    <li><a href=\"bindi-category.html\">Bindi</a></li>\r\n                    <li><a href=\"footwear-category.html\">Footwear</a></li>\r\n                    <li><a href=\"home-decor-category.html\">Home Decor</a></li>\r\n                    <li><a href=\"#\">Handicraft</a></li>\r\n                  </ul>\r\n                </div>\r\n                <div>\r\n                  <ul className=\"uk-nav uk-nav-default\">\r\n                    <li><a href=\"about.html\">About</a></li>\r\n                    <li><a href=\"contacts.html\">Contacts</a></li>\r\n                  </ul>\r\n                </div>\r\n              </nav>\r\n            </div>\r\n            <div>\r\n              <ul className=\"uk-list uk-text-small\">\r\n                <li>\r\n                  <a className=\"uk-link-muted\" href=\"#\"><span className=\"uk-margin-small-right\" uk-icon=\"receiver\"></span><span className=\"tm-pseudo\">8 800 799 99 99</span></a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"uk-link-muted\" href=\"#\"><span className=\"uk-margin-small-right\" uk-icon=\"mail\"></span><span className=\"tm-pseudo\">tarunbatra@gmail.com</span></a>\r\n                </li>\r\n                <li>\r\n                  <div className=\"uk-text-muted\"><span className=\"uk-margin-small-right\" uk-icon=\"location\"></span><span>Sadar Bazar, Old Delhi</span></div>\r\n                </li>\r\n                <li>\r\n                  <div className=\"uk-text-muted\"><span className=\"uk-margin-small-right\" uk-icon=\"clock\"></span><span>Daily 10:00–21:00</span></div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-margin uk-text-small uk-text-muted\">Website by KPWorks</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport {\r\n  MainFooter\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { getSubCategory, AppState, SubCategory, getActiveProductCount, Cart, getCart, getUser, getUserLocation, getCustomerProducts, UserLocation, setLoggedCart, defaultUser } from 'reducers';\r\nimport { SubCategories, pageSize } from 'appConstants';\r\nimport { filterSubcategories } from 'services';\r\nimport { ProductSubCategory, Search } from 'types';\r\nimport { SideCart } from '.';\r\nimport { setSearch } from 'reducers/Search';\r\n\r\n\r\n\r\nconst Navigation: React.FunctionComponent = () => {\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [cartCount, setCartCount] = useState(0);\r\n  const [enteredSearchText, setEnteredSearchText] = useState('');\r\n  const [cartCountCssFlag, setCartCountCssFlag] = useState(false);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  useEffect(() => {\r\n    dispatch(getSubCategory());\r\n    dispatch(getActiveProductCount());\r\n    if(localStorage.getItem(\"biktoken\")){\r\n      dispatch(getCart());\r\n      dispatch(getUser());\r\n    }\r\n    dispatch(getUserLocation());\r\n    if(localStorage.getItem(\"basicKart-loggedOutCart\")){\r\n      dispatch(setLoggedCart(JSON.parse(localStorage.getItem(\"basicKart-loggedOutCart\") || '[]')))\r\n    }\r\n  }, []);\r\n\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n  const search = useSelector<AppState, Search>(state => state.search.data || {} as Search);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n\r\n  useEffect(() => {\r\n    setCartCount(cart.data?.length || 0);\r\n    setCartCountCssFlag(true);\r\n    setTimeout(()=>{\r\n      setCartCountCssFlag(false);\r\n    },400)\r\n  },[cart.data])\r\n\r\n  const searchProduct = (searchText: string) => {\r\n    \r\n      if(searchText === ''){\r\n        setEnteredSearchText('');\r\n      }\r\n      if(\r\n        (search.categoryId && search.categoryId.length >0) ||\r\n        (search.colourId && search.colourId.length >0) ||\r\n        (search.sizeId && search.sizeId.length >0) ||\r\n        (search.subCategoryId && search.subCategoryId.length >0) ||\r\n         search.endPrice || search.startPrice || searchText\r\n      ){\r\n      dispatch(setSearch({\r\n        categoryId: search.categoryId || 0,\r\n        colourId: search.colourId || [],\r\n        currency: userLocation.data || 'IN',\r\n        endPrice: search.endPrice||'',\r\n        sizeId: search.sizeId || [],\r\n        startPrice: search.startPrice || '',\r\n        subCategoryId: search.subCategoryId || [],\r\n        searchText: searchText\r\n      }));\r\n      dispatch(getCustomerProducts(0, pageSize, search.categoryId || 0, search.subCategoryId || [], search.colourId || [], search.sizeId || [], search.startPrice || '', search.endPrice||'', userLocation.data || 'IN', searchText || '' , true));\r\n      history.push('/product/search')\r\n    }\r\n    \r\n  }\r\n  const navigateTo = (event: React.SyntheticEvent ,categoryPath: string, subcategoryPath?: string) => {\r\n    event.preventDefault();\r\n    history.push('/product/'+ categoryPath.toLowerCase() + (subcategoryPath ? '/'+ subcategoryPath.toLowerCase() : ''));\r\n  };\r\n  const getCategoryAndSubCategory = () => {\r\n    return Object.keys(SubCategories).map((key: string, index: number) => {\r\n      return (\r\n        <li key={index}>\r\n          <a onClick={(e) => navigateTo(e,key)}>{key}<span className=\"uk-margin-xsmall-left\" uk-icon=\"icon: chevron-down; ratio: .75;\"></span></a>\r\n          <div\r\n            className=\"uk-navbar-dropdown uk-margin-remove uk-padding-remove-vertical\"\r\n            uk-drop=\"pos: bottom-justify;delay-show: 125;delay-hide: 50;duration: 75;boundary: .tm-navbar-container;boundary-align: true;pos: bottom-justify;flip: x\"\r\n          >\r\n            <div className=\"uk-container uk-container-small uk-margin-top uk-margin-bottom\">\r\n              <ul className=\"uk-nav uk-nav-default uk-column-1-3\">\r\n                {\r\n                  filterSubcategories(subCategories, Number(SubCategories[key])).map((subcategory: ProductSubCategory, index: number) => {\r\n                    return <li key={index}><a onClick={(e) => navigateTo(e,key,subcategory.code)}>{subcategory.code}</a></li>\r\n                  })\r\n                }\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      )\r\n    });\r\n  };\r\n\r\n  const logout = () => {\r\n    dispatch(defaultUser());\r\n    window.localStorage.removeItem('biktoken');\r\n    history.push('/');\r\n  };\r\n  return (\r\n    <header>\r\n      <div className=\"uk-navbar-container tm-navbar-container\" uk-sticky=\"cls-active: tm-navbar-container-fixed\">\r\n        <div className=\"uk-container\" uk-navbar=\"true\">\r\n          <div className=\"uk-navbar-left\">\r\n            <button className=\"uk-navbar-toggle uk-hidden@m\" uk-toggle=\"target: #nav-offcanvas\" uk-navbar-toggle-icon=\"true\"></button>\r\n            <a className=\"uk-navbar-item uk-logo\" onClick={() => history.push('/')}><img src=\"/logo.png\" width=\"108\" alt=\"Logo\" /></a>\r\n            <nav className=\"uk-visible@m\">\r\n              <ul className=\"uk-navbar-nav\">\r\n                {\r\n                  getCategoryAndSubCategory()\r\n                }\r\n                <li><a href=\"about.html\">About</a></li>\r\n                <li><a href=\"contacts.html\">Contacts</a></li>\r\n                {\r\n                  userData.data?.isAdmin && \r\n                  <li><a onClick={()=>history.push('/admin')}>Admin</a></li>\r\n                }\r\n               \r\n              </ul>\r\n            </nav>\r\n          </div>\r\n          <div className=\"uk-navbar-right\">\r\n            <a className={`${enteredSearchText !== '' ? 'search-color uk-navbar-toggle tm-navbar-button' : 'uk-navbar-toggle tm-navbar-button'}`} href=\"#\" uk-search-icon=\"true\">\r\n            </a>\r\n            <div className=\"uk-navbar-dropdown uk-padding-small uk-margin-remove\" uk-drop=\"mode: click;cls-drop: uk-navbar-dropdown;boundary: .tm-navbar-container;boundary-align: true;pos: bottom-justify;flip: x\">\r\n              <div className=\"uk-container\">\r\n                <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-expand\">\r\n                    <div className=\"uk-search uk-search-navbar uk-width-1-1\">\r\n                      <input className=\"uk-search-input\" type=\"search\" placeholder=\"Search…\"\r\n                        value={enteredSearchText}\r\n                        onChange={(e) => setEnteredSearchText(e.currentTarget.value)}\r\n                        onKeyPress={(e)=> {e.key === 'Enter' &&  searchProduct(e.currentTarget.value)}} />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-width-auto\" onClick={()=>searchProduct('')}><a className=\"uk-navbar-dropdown-close\" uk-close=\"true\"></a></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <a className=\"uk-navbar-item uk-link-muted tm-navbar-button\" onClick={() => history.push('/userinformation/orders')} uk-icon=\"user\"></a>\r\n            <div className=\"uk-padding-small uk-margin-remove\" uk-dropdown=\"pos: bottom-right; offset: -10; delay-hide: 200;\" style={{ minWidth: '150px' }}>\r\n              <ul className=\"uk-nav uk-dropdown-nav\">\r\n                <li>\r\n                  <a onClick={() => userData.data?.userId ?  history.push('/userinformation/orders') : history.push('/login')}>Orders</a>\r\n                </li>\r\n                <li><a onClick={()=> userData.data?.userId ? history.push('/userinformation/default') : history.push('/login')}>Personal</a></li>\r\n                <li><a onClick={()=> userData.data?.userId ? history.push('/userinformation/settings'): history.push('/login')}>Settings</a></li>\r\n                <li className=\"uk-nav-divider\"></li>\r\n                {\r\n                   userData.data?.userId ? \r\n                   <li><a onClick={()=> logout()}>Log out</a></li> :\r\n                   <li><a onClick={()=>history.push('/login')}>Login</a></li>\r\n                }\r\n                \r\n              </ul>\r\n            </div>\r\n            <a className=\"uk-navbar-item uk-link-muted tm-navbar-button\" href=\"#\" uk-toggle=\"target: #cart-offcanvas\">\r\n              <span uk-icon=\"cart\"></span>\r\n              {\r\n                cartCount > 0 &&\r\n                <span className={cartCountCssFlag ? \"uk-badge  cart-popup\" : \"uk-badge \"}>{cartCount}</span>\r\n              }\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <SideCart\r\n      cartData={cart.data || []}/>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport { Navigation };","import React, { useEffect, useState } from 'react';\r\nimport { CustomerCart, ProductCoupon } from 'types';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteCartItem, AppState, UserLocation } from 'reducers';\r\nimport { getCurrencyIcon, calculateUserDiscount, calculateUserDiscountPrice } from 'services';\r\n\r\ninterface Props {\r\n  cartData: CustomerCart[];\r\n}\r\n\r\nconst SideCart: React.FunctionComponent<Props> = (props: Props) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [mainTotal, setMainTotal] = useState(0);\r\n  const [userDiscountTotal, setUserDiscountTotal] = useState('0');\r\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState('0');\r\n  const [discountedTotal, setDiscountedTotal] = useState('0');\r\n  const [userCouponTotal, setUserCouponTotal] = useState('0');\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const couponData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const {\r\n    cartData\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    let cartPrice = 0;\r\n    cartData.forEach(({ totalPrice }) => {\r\n      cartPrice += Number(totalPrice)\r\n    });\r\n    setMainTotal(cartPrice);\r\n    if (couponData.length === 1) {\r\n      let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString());\r\n      let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString());\r\n      let couponPrice = calculateUserDiscountPrice(couponData[0].value, priceAfterDiscount.toString());\r\n      let priceAfterCoupon = calculateUserDiscount(couponData[0].value || '0', priceAfterDiscount.toString());\r\n      setDiscountedTotal(priceAfterDiscount);\r\n      setUserDiscountTotal(discountPrice);\r\n      setUserCouponTotal(couponPrice);\r\n      setTotalAfterDiscount(priceAfterCoupon);\r\n    } else {\r\n      let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString());\r\n      let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString());\r\n      setUserDiscountTotal(discountPrice);\r\n      setTotalAfterDiscount(priceAfterDiscount);\r\n    }\r\n    // setUserDiscountTotal(calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString()));\r\n    // setTotalAfterDiscount(calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString()))\r\n  }, [cartData, userData.data,couponData])\r\n\r\n  const deleteCart = (cartItem: CustomerCart) => {\r\n    dispatch(deleteCartItem(cartItem));\r\n  };\r\n\r\n  return (\r\n    <div id=\"cart-offcanvas\" uk-offcanvas=\"overlay: true; flip: true\">\r\n      <aside className=\"uk-offcanvas-bar uk-padding-remove\">\r\n        <div className=\"uk-card uk-card-default uk-card-small uk-height-1-1 uk-flex uk-flex-column tm-shadow-remove\">\r\n          <header className=\"uk-card-header uk-flex uk-flex-middle\">\r\n            <div className=\"uk-grid-small uk-flex-1\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand\"><div className=\"uk-h3\">Cart</div></div>\r\n              <button className=\"uk-offcanvas-close\" type=\"button\" uk-close=\"true\"></button>\r\n            </div>\r\n          </header>\r\n          <div className=\"uk-card-body uk-overflow-auto\">\r\n            <ul className=\"uk-list uk-list-divider\">\r\n              {\r\n                cartData.map((cart: CustomerCart, index: number) => {\r\n                  return (\r\n                    <li key={index} className=\"uk-visible-toggle\">\r\n                      <article>\r\n                        <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                          <div className=\"uk-width-1-4\">\r\n                            <div className=\"tm-ratio tm-ratio-4-3\">\r\n                              <a className=\"tm-media-box\" onClick={() => history.push('/productDetails/' + cart.productId)}>\r\n                                <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + cart.productImagePath} alt={cart.productImage} /></figure>\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"uk-width-expand\">\r\n                            <div className=\"uk-text-meta uk-text-xsmall\">{cart.subcategory}</div>\r\n                            <a className=\"uk-link-heading uk-text-small\" onClick={() => history.push('/productDetails/' + cart.productId)}>{cart.productName}</a>\r\n                            <div className=\"uk-margin-xsmall uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                              <div className=\"uk-text-bolder uk-text-small\">{getCurrencyIcon(userLocation.data || 'IN')} {cart.totalPrice}</div>\r\n                              {/* <del className=\"uk-text-bolder uk-text-small uk-text-meta\">123</del> */}\r\n                              <div className=\"uk-text-meta uk-text-xsmall\">{cart.productQuantity} × {getCurrencyIcon(userLocation.data || 'IN')} {cart.productPrice}</div>\r\n                            </div>\r\n                          </div>\r\n                          {/* <div>\r\n                            <a className=\"uk-icon-link uk-text-danger uk-invisible-hover\"\r\n                              uk-icon=\"icon: close; ratio: .75\"\r\n                              uk-tooltip=\"Remove\"\r\n                              onClick={() => { deleteCart(cart) }}></a></div> */}\r\n                        </div>\r\n                      </article>\r\n                    </li>\r\n                  )\r\n                })\r\n              }\r\n              {\r\n                cartData.length === 0 &&\r\n                <li className=\"uk-visible-toggle\">\r\n                  <article>\r\n                    <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                      <div className=\"uk-width-1-4\">\r\n                        <div className=\"tm-ratio tm-ratio-4-3\">\r\n                          {/* <a className=\"tm-media-box\">\r\n                            <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + cart.productImagePath} alt={cart.productImage} /></figure>\r\n                          </a> */}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"uk-width-expand\">\r\n                        {/* <div className=\"uk-text-meta uk-text-xsmall\">{cart.subcategory}</div> */}\r\n                        <span className=\"uk-link-heading uk-text-small\" >Cart is empty.</span>\r\n                        <div className=\"uk-margin-xsmall uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                          <div className=\"uk-text-bolder uk-text-small\">Add in some good stuff !!</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </article>\r\n                </li>\r\n              }\r\n            </ul>\r\n          </div>\r\n          <footer className=\"uk-card-footer\">\r\n            {\r\n              (userData.data?.discount && userData.data?.discount !== '0' || couponData.length === 1) &&\r\n              <>\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-expand uk-text-muted uk-text-small\">Subtotal</div>\r\n                  <div className=\"uk-text-muted\">{getCurrencyIcon(userLocation.data || 'IN')} {mainTotal}</div>\r\n                </div>\r\n                {\r\n                  userData.data?.discount && userData.data?.discount !== '0' &&\r\n                  <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                    <div className=\"uk-width-expand uk-text-muted uk-text-small\">Discount ({userData.data?.discount}%)</div>\r\n                    <div className=\"uk-text-danger\">- {getCurrencyIcon(userLocation.data || 'IN')} {userDiscountTotal}</div>\r\n                  </div>\r\n                }\r\n              </>\r\n            }\r\n            {\r\n              couponData.length === 1 &&\r\n              <>\r\n                {\r\n                  userData.data?.discount && userData.data?.discount !== '0' &&\r\n                  <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                    <div className=\"uk-width-expand uk-text-muted\">Discounted Total</div>\r\n                    <div>{getCurrencyIcon(userLocation.data || 'IN')} {discountedTotal}</div>\r\n                  </div>\r\n                }\r\n\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-expand uk-text-muted\">Coupon ({couponData[0] && couponData[0].value}%)</div>\r\n                  <div className=\"uk-text-danger\">− {getCurrencyIcon(userLocation.data || 'IN')} {userCouponTotal}</div>\r\n                </div>\r\n              </>\r\n            }\r\n\r\n            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand uk-text-muted uk-h4\">Total</div>\r\n              <div className=\"uk-h4 uk-text-bolder\">{getCurrencyIcon(userLocation.data || 'IN')} {totalAfterDiscount}</div>\r\n            </div>\r\n            <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@m uk-margin-small\" uk-grid=\"true\">\r\n             <div></div>\r\n              <div >\r\n                <button className=\"uk-button  uk-button-primary uk-button-default uk-margin-small uk-width-1-1\"\r\n                  onClick={() => { userData.data?.userId ? history.push('/cart') :  history.push('/login')}}\r\n                  disabled={mainTotal === 0}\r\n                >\r\n                  Continue\r\n                </button>\r\n              </div>\r\n              {/* <div>\r\n                <button className=\"uk-button uk-button-primary uk-margin-small uk-width-1-1\"\r\n                  onClick={() => { history.push('/checkout') }}\r\n                  disabled={mainTotal === 0}>\r\n                  checkout\r\n                </button>\r\n              </div> */}\r\n            </div>\r\n          </footer>\r\n        </div>\r\n      </aside>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  SideCart\r\n}","import { SubCategories } from 'appConstants';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AppState, SubCategory } from 'reducers';\r\nimport { filterSubcategories } from 'services';\r\nimport { ProductSubCategory } from 'types';\r\n\r\nconst MobileNavigation: React.FunctionComponent = () => {\r\n\r\n  const history = useHistory();\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const navigateTo = (event: React.SyntheticEvent, categoryPath: string, subcategoryPath?: string) => {\r\n    event.preventDefault();\r\n    history.push('/product/' + categoryPath.toLowerCase() + (subcategoryPath ? '/' + subcategoryPath.toLowerCase() : ''));\r\n  }\r\n\r\n  const getCategoryAndSubCategory = () => {\r\n    return Object.keys(SubCategories).map((key: string, index: number) => {\r\n      return (\r\n        <li className=\"uk-parent\" key={index}>\r\n          <a onClick={(e) => e.preventDefault()}>{key}</a>\r\n          <ul className=\"uk-nav-sub uk-list-divider\">\r\n            {\r\n              filterSubcategories(subCategories, Number(SubCategories[key])).map((subcategory: ProductSubCategory, index: number) => {\r\n                return <li key={index}><a onClick={(e) => navigateTo(e, key, subcategory.code)}>{subcategory.code}</a></li>\r\n              })\r\n            }\r\n            <li className=\"uk-text-center\">\r\n                    <a onClick={(e) => navigateTo(e, key)} className=\"uk-link-muted uk-text-uppercase tm-link-to-all\"><span>entire ranage</span><span uk-icon=\"icon: chevron-right; ratio: .75;\"></span></a>\r\n                  </li>\r\n          </ul>\r\n        </li>\r\n      )\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div id=\"nav-offcanvas\" uk-offcanvas=\"overlay: true\">\r\n      <aside className=\"uk-offcanvas-bar uk-padding-remove\">\r\n        <div className=\"uk-card uk-card-default uk-card-small tm-shadow-remove\">\r\n          <header className=\"uk-card-header uk-flex uk-flex-middle\">\r\n            <div>\r\n              <a className=\"uk-link-muted uk-text-bold\" onClick={(e) => e.preventDefault()}>Basic Kart</a>\r\n              {/* <div className=\"uk-text-xsmall uk-text-muted\" style={{ marginTop: \"-2px\" }}>\r\n                <div>Basic Kart</div>\r\n              </div> */}\r\n            </div>\r\n          </header>\r\n          <nav className=\"uk-card-small uk-card-body\">\r\n            <ul className=\"uk-nav-default uk-nav-parent-icon uk-list-divider\" uk-nav=\"true\">\r\n              {/* <li className=\"uk-parent\">\r\n                <a href=\"#\">Bindi</a>\r\n                <ul className=\"uk-nav-sub uk-list-divider\">\r\n                  <li><a href=\"bindi-category.html\">Fancy</a></li>\r\n                  <li><a href=\"bindi-category.html\">Bridal</a></li>\r\n                  <li><a href=\"bindi-category.html\">Stone</a></li>\r\n                  <li><a href=\"bindi-category.html\">Round</a></li>\r\n                  <li><a href=\"bindi-category.html\">Square</a></li>\r\n                  <li className=\"uk-text-center\">\r\n                    <a className=\"uk-link-muted uk-text-uppercase tm-link-to-all\" href=\"bindi-category.html\"><span>entire ranage</span><span uk-icon=\"icon: chevron-right; ratio: .75;\"></span></a>\r\n                  </li>\r\n                </ul>\r\n              </li> */}\r\n              {getCategoryAndSubCategory()}\r\n              <li><a href=\"about.html\">About</a></li>\r\n              <li><a href=\"contacts.html\">Contacts</a></li>\r\n            </ul>\r\n          </nav>\r\n          <nav className=\"uk-card-body\">\r\n            <ul className=\"uk-iconnav uk-flex-center\">\r\n              <li><a href=\"#\" title=\"Facebook\" uk-icon=\"facebook\"></a></li>\r\n              <li><a href=\"#\" title=\"Twitter\" uk-icon=\"twitter\"></a></li>\r\n              <li><a href=\"#\" title=\"YouTube\" uk-icon=\"youtube\"></a></li>\r\n              <li><a href=\"#\" title=\"Instagram\" uk-icon=\"instagram\"></a></li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </aside>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  MobileNavigation\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { SubProducts } from 'appConstants';\r\n\r\ninterface Props{\r\n  subProductToggle: Function;\r\n  addEditToggle: Function;\r\n}\r\n\r\nconst AdminNav: React.FunctionComponent<Props> = (props: Props) => {\r\n  const { subProductToggle, addEditToggle } = props;\r\n  const history = useHistory();\r\n  const [selectedTab, setSelectedTab] = useState(1);\r\n  const [isOnList, setIsOnList] = useState(true);\r\n\r\n  const {product, productId} = useParams();\r\n\r\n  useEffect(() => {\r\n    if(product == 'product' && productId){\r\n      setSelectedTab(SubProducts.PRODUCT)\r\n    }\r\n  },[product, productId])\r\n\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-1-4@m tm-aside-column\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\" uk-sticky=\"offset: 90; bottom: true; media: @m;\">\r\n        <div className=\"uk-card-header\">\r\n          <div className=\"uk-grid-small uk-flex-center\" uk-grid=\"true\">\r\n            <div>\r\n              <a className={`${isOnList? 'uk-button uk-button-default uk-button-small uk-active' : 'uk-button uk-button-default uk-button-small'}`}\r\n              onClick={() => {addEditToggle(false);setIsOnList(true); history.push('/admin')}}>\r\n                <span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: cog; ratio: .75;\"></span>\r\n                <span>List</span>\r\n              </a>\r\n            </div>\r\n            <div>\r\n              <button className={`${!isOnList? 'uk-button uk-button-default uk-button-small uk-active' : 'uk-button uk-button-default uk-button-small'}`}\r\n               title=\"Add\"\r\n                onClick={() => {addEditToggle(true); ;setIsOnList(false)}}\r\n                disabled={selectedTab === SubProducts.USERS || selectedTab === SubProducts.ORDERS}\r\n                >\r\n                <span uk-icon=\"icon: sign-out; ratio: .75;\"></span>\r\n                <span>Add</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <nav>\r\n            <ul className=\"uk-nav uk-nav-default tm-nav\">\r\n              <li className={`${selectedTab === SubProducts.USERS ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.USERS);setIsOnList(true);addEditToggle(false);setSelectedTab(SubProducts.USERS)}}>Users</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.ORDERS ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.ORDERS);setIsOnList(true);addEditToggle(false);setSelectedTab(SubProducts.ORDERS)}}>Orders</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.PRODUCT ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.PRODUCT);setSelectedTab(SubProducts.PRODUCT)}}>Products</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.SUB_PRODUCT ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.SUB_PRODUCT);setSelectedTab(SubProducts.SUB_PRODUCT)}}>Sub-Category</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.SIZE ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.SIZE);setSelectedTab(SubProducts.SIZE)}}>Size</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.COLOUR ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.COLOUR);setSelectedTab(SubProducts.COLOUR)}}>Colour</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.COUPONS ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.COUPONS);setSelectedTab(SubProducts.COUPONS)}}>Coupons</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.SHIPPER ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.SHIPPER);setSelectedTab(SubProducts.SHIPPER)}}>Shipper</a>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  AdminNav\r\n}","import React, { useEffect, useState } from 'react';\r\nimport DataTable, { IDataTableColumn } from 'react-data-table-component';\r\nimport { getColour, getSize, getSubCategory, getCoupon, getProducts, getShippers, getAllUser, AppState } from 'reducers';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ProductColor, ProductSize, ProductCoupon, ProductSubCategory, Order, OrderShipper, User, ProductItem } from 'types';\r\nimport { SubProducts } from 'appConstants';\r\nimport { getAdminOrders } from 'reducers/Order';\r\nimport { countHighlightProducts } from 'services';\r\n\r\ninterface Props {\r\n  productType: number;\r\n  productColumns: IDataTableColumn[];\r\n  ExpandableComponent?: React.FunctionComponent<any>;\r\n  stateData: ProductColor[] | ProductSize[] | ProductCoupon[] | ProductSubCategory[] | Order[] | OrderShipper[] | User[];\r\n  searchPlaceholder: string;\r\n  expandableRows: boolean;\r\n  sortByColumn?: string;\r\n  defaultSortAsc?: boolean;\r\n}\r\n\r\nconst AdminProductList: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [tabName, setTabName] = useState('');\r\n  const productList = useSelector<AppState, ProductItem[]>(state => state.product.data || []);\r\n  const [tableData, setTableData] = useState<\r\n    ProductColor[] | ProductSize[] | ProductCoupon[] | ProductSubCategory[] | Order[] | OrderShipper[] | User[]\r\n  >([]);\r\n\r\n  let stateData: ProductColor[] | ProductSize[] | ProductCoupon[] | ProductSubCategory[] | Order[] | OrderShipper[] | User[] = [];\r\n  const columns = props.productColumns;\r\n\r\n  if (props.productType === SubProducts.COLOUR ||\r\n    props.productType === SubProducts.SIZE ||\r\n    props.productType === SubProducts.SUB_PRODUCT ||\r\n    props.productType === SubProducts.COUPONS ||\r\n    props.productType === SubProducts.PRODUCT ||\r\n    props.productType === SubProducts.ORDERS ||\r\n    props.productType === SubProducts.SHIPPER ||\r\n    props.productType === SubProducts.USERS) {\r\n    stateData = props.stateData\r\n  } else {\r\n    stateData = []\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.productType === SubProducts.COLOUR) {\r\n      dispatch(getColour());\r\n      setTabName('Colour');\r\n    } else if (props.productType === SubProducts.SIZE) {\r\n      dispatch(getSize());\r\n      setTabName('Size');\r\n    } else if (props.productType === SubProducts.SUB_PRODUCT) {\r\n      dispatch(getSubCategory());\r\n      setTabName('SubCategories');\r\n    } else if (props.productType === SubProducts.COUPONS) {\r\n      dispatch(getCoupon());\r\n      setTabName('Coupons');\r\n    } else if (props.productType === SubProducts.PRODUCT) {\r\n      dispatch(getProducts());\r\n      setTabName('Products');\r\n    } else if (props.productType === SubProducts.ORDERS) {\r\n      dispatch(getAdminOrders());\r\n      setTabName('Orders');\r\n    } else if (props.productType === SubProducts.SHIPPER) {\r\n      dispatch(getShippers());\r\n      setTabName('Shippers');\r\n    } else if (props.productType === SubProducts.USERS) {\r\n      dispatch(getAllUser());\r\n      setTabName('Users');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTableData(stateData || [])\r\n  }, [stateData]);\r\n\r\n  useEffect(() => {\r\n    if (stateData && stateData.length > 0) {\r\n      const data = (stateData as any[]).filter(({\r\n        value, code,\r\n        name, productCategoryName,\r\n        orderNumber, shipperName,\r\n        emailAddress, mobile, paymentMode }) => {\r\n        return (value && value.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (code && code.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (name && name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (productCategoryName && productCategoryName.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (orderNumber && orderNumber.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (shipperName && shipperName.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (emailAddress && emailAddress.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (mobile && mobile.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (paymentMode && paymentMode.toLowerCase().includes(searchTerm.toLowerCase()));\r\n      })\r\n      setTableData(data)\r\n    }\r\n  }, [searchTerm]);\r\n\r\n\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n\r\n            <div className=\"asd\">\r\n              <DataTable\r\n                title={tabName}\r\n                columns={columns}\r\n                data={tableData}\r\n                defaultSortField={props.sortByColumn || \"code\"}\r\n                defaultSortAsc={props.defaultSortAsc !== undefined ? props.defaultSortAsc : true}\r\n                selectableRows={false}\r\n                selectableRowsNoSelectAll={false}\r\n                selectableRowsHighlight={true}\r\n                selectableRowsVisibleOnly={false}\r\n                expandableRows={props.expandableRows}\r\n                expandOnRowClicked={false}\r\n                expandableRowsComponent={props.ExpandableComponent && <props.ExpandableComponent />}\r\n                pagination={true}\r\n                highlightOnHover={true}\r\n                striped={true}\r\n                pointerOnHover={false}\r\n                dense={false}\r\n                noTableHead={false}\r\n                persistTableHead={true}\r\n                progressPending={false}\r\n                noHeader={false}\r\n                subHeader={true}\r\n                subHeaderComponent={\r\n                  (\r\n                    <div className=\"uk-grid-medium uk-child-width-1-1 uk-width-1-1\" uk-grid=\"true\">\r\n                      <div className={`${props.productType === SubProducts.ORDERS ? 'uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s' : 'uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s'}`} uk-grid=\"true\">\r\n                        {\r\n                          props.productType === SubProducts.ORDERS &&\r\n                          <>\r\n                            <div>\r\n                              <label>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: cart;\" /> : Shipped</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: check;\" /> : Delivered</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: plus-circle;\" /> : Return Accepted</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: lifesaver;\" /> : Payment Returned</span>\r\n\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"orange\" }} uk-icon=\"icon: history;\" /> : Return In Progress</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"red\" }} uk-icon=\"icon: minus-circle;\" /> : Return Declined</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"red\" }} uk-icon=\"icon: warning;\" /> : Payment Declined</span>\r\n                              </label>\r\n                            </div>\r\n                          </>\r\n                        }\r\n\r\n                        {\r\n                          props.expandableRows &&\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\"><span><span uk-icon=\"chevron-right\"></span>: Click in table for quick actions</span></div>\r\n                              {\r\n                                props.productType === SubProducts.PRODUCT &&\r\n                                <>\r\n                                  <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: bolt;\" /> : Trending ({countHighlightProducts(productList,true)})</span>\r\n                                  <span className=\"uk-form-label\"><span style={{ color: \"orange\" }} uk-icon=\"icon: star;\" /> : Latest ({countHighlightProducts(productList,false)})</span>\r\n                                </>\r\n                              }\r\n                            </label>\r\n                          </div>\r\n                        }\r\n                        {\r\n                          (!props.expandableRows && props.productType !== SubProducts.ORDERS) &&\r\n                          <div></div>\r\n                        }\r\n                        <div>\r\n                          <input className=\"uk-input uk-form-width-medium uk-form-small uk-float-right\" value={searchTerm} onChange={event => setSearchTerm(event.target.value)} type=\"text\" placeholder={props.searchPlaceholder} />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    // <div className=\"admin-search-header\">\r\n                    //   {\r\n                    //     props.expandableRows &&\r\n                    //     <div className=\"\">\r\n                    //       <div className=\"\">\r\n                    //         <span>Click <span uk-icon=\"chevron-right\"></span> in table for quick actions</span>\r\n                    //       </div>\r\n                    //     </div>\r\n                    //   }\r\n                    //   <div className=\"uk-float-right\">\r\n                    //     <input className=\"uk-input uk-form-width-medium uk-form-small\" value={searchTerm} onChange={event => setSearchTerm(event.target.value)} type=\"text\" placeholder={props.searchPlaceholder} />\r\n                    //   </div>\r\n                    //   <div>\r\n                    //     <div className=\"\"><span style={{ color: \"green\" }} uk-icon=\"icon: bolt;\" /> : Trending</div>\r\n\r\n\r\n                    //   </div>\r\n\r\n                    //   <div className=\"\">\r\n\r\n                    //     <span style={{ color: \"orange\" }} uk-icon=\"icon: star;\" /> : Latest\r\n                    //           </div>\r\n                    // </div>\r\n                  )\r\n                }\r\n                fixedHeader={true}\r\n                fixedHeaderScrollHeight=\"800px\"\r\n                direction={\"ltr\"}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport {\r\n  AdminProductList\r\n}","import React from 'react';\r\n\r\ninterface Props {\r\n  _isError: boolean,\r\n  _isSuccess: boolean,\r\n  message?: string\r\n}\r\n\r\nconst NotificationContainer : React.FunctionComponent<Props> = (props: Props) => {\r\n  const { \r\n    _isError,\r\n    _isSuccess,\r\n    message\r\n  } = props;\r\n  return (\r\n    <>\r\n    {\r\n      _isError &&\r\n      <div className=\"login-error-message\">\r\n        <span className=\"uk-notification-message-danger\"> {message} </span>\r\n      </div>\r\n    }\r\n    {\r\n      _isSuccess &&\r\n      <div className=\"login-error-message\">\r\n        <span className=\"uk-notification-message-success\"> {message} </span>\r\n      </div>\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\nexport {\r\n  NotificationContainer\r\n}","import React from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { PayPalButtonProps, PayPalButtonState } from 'types';\r\n\r\ndeclare global {\r\n  interface Window { paypal: any }\r\n}\r\n\r\nclass PayPalButton extends React.Component<PayPalButtonProps, PayPalButtonState> {\r\n  static propTypes = {\r\n      amount: PropTypes.oneOfType([\r\n          PropTypes.number,\r\n          PropTypes.string,\r\n      ]),\r\n      currency: PropTypes.oneOfType([\r\n          PropTypes.number,\r\n          PropTypes.string,\r\n      ]),\r\n      shippingPreference: PropTypes.string,\r\n      onSuccess: PropTypes.func,\r\n      catchError: PropTypes.func,\r\n      onError: PropTypes.func,\r\n      createOrder: PropTypes.func,\r\n      createSubscription: PropTypes.func,\r\n      onApprove: PropTypes.func,\r\n      onCancel: PropTypes.func,\r\n      style: PropTypes.object,\r\n      options: PropTypes.shape({\r\n          clientId: PropTypes.string,\r\n          merchantId: PropTypes.string,\r\n          currency: PropTypes.oneOfType([\r\n              PropTypes.number,\r\n              PropTypes.string,\r\n          ]),\r\n          intent: PropTypes.string,\r\n          commit: PropTypes.oneOfType([\r\n              PropTypes.bool,\r\n              PropTypes.string\r\n          ]),\r\n          vault: PropTypes.oneOfType([\r\n              PropTypes.bool,\r\n              PropTypes.string\r\n          ]),\r\n          component: PropTypes.string,\r\n          disableFunding: PropTypes.string,\r\n          disableCard: PropTypes.string,\r\n          integrationDate: PropTypes.string,\r\n          locale: PropTypes.string,\r\n          buyerCountry: PropTypes.string,\r\n          debug: PropTypes.oneOfType([\r\n              PropTypes.bool,\r\n              PropTypes.string\r\n          ])\r\n      }),\r\n      onButtonReady: PropTypes.func,\r\n  }\r\n\r\n  static defaultProps = {\r\n      style: {},\r\n      options: {\r\n          clientId: \"sb\",\r\n          currency: \"USD\"\r\n      },\r\n      shippingPreference: \"GET_FROM_FILE\",\r\n  }\r\n\r\n  constructor(props: PayPalButtonProps) {\r\n      super(props);\r\n\r\n      this.state = {\r\n          isSdkReady: false,\r\n      };\r\n  }\r\n\r\n  componentDidMount() {\r\n      if (\r\n          typeof window !== \"undefined\" &&\r\n          window !== undefined &&\r\n          window.paypal === undefined\r\n      ) {\r\n          this.addPaypalSdk();\r\n      }\r\n      else if (\r\n          typeof window !== \"undefined\" &&\r\n          window !== undefined &&\r\n          window.paypal !== undefined &&\r\n          this.props.onButtonReady\r\n      ) {\r\n          this.props.onButtonReady();\r\n      }\r\n  }\r\n\r\n  createOrder(data: any, actions: any) {\r\n\r\n      const { currency, options, amount, shippingPreference } = this.props;\r\n\r\n      return actions.order.create({\r\n        purchase_units: [\r\n          {\r\n            amount: {\r\n              currency_code: currency\r\n                ? currency\r\n                : options && options.currency\r\n                ? options.currency\r\n                : \"USD\",\r\n              value: amount && amount.toString()\r\n            }\r\n          }\r\n        ],\r\n        application_context: {\r\n          shipping_preference: shippingPreference\r\n        }\r\n      });\r\n  }\r\n\r\n  onApprove(data: any, actions: any) {\r\n      return actions.order\r\n          .capture()\r\n          .then((details: any) => {\r\n              if (this.props.onSuccess) {\r\n                  return this.props.onSuccess(details, data);\r\n              }\r\n          })\r\n          .catch((err: any) => {\r\n              if (this.props.catchError) {\r\n                  return this.props.catchError(err);\r\n              }\r\n          });\r\n  }\r\n\r\n  onCancel(error:any){\r\n    if(this.props.onCancel){\r\n      this.props.onCancel(error);\r\n    }\r\n\r\n  }\r\n  render() {\r\n      const {\r\n          amount,\r\n          onSuccess,\r\n          createOrder,\r\n          createSubscription,\r\n          onApprove,\r\n          style,\r\n          onCancel,\r\n      } = this.props;\r\n      const { isSdkReady } = this.state;\r\n\r\n      if (\r\n          !isSdkReady &&\r\n          (typeof window === \"undefined\" || window.paypal === undefined)\r\n      ) {\r\n          return null;\r\n      }\r\n\r\n      const Button = window.paypal.Buttons.driver(\"react\", {\r\n          React,\r\n          ReactDOM,\r\n      });\r\n\r\n      const createOrderFn =\r\n          amount && !createOrder\r\n              ? (data: any, actions: any) => this.createOrder(data, actions)\r\n              : (data: any, actions: any) => createOrder && createOrder(data, actions);\r\n\r\n      return (\r\n          <Button\r\n              {...this.props}\r\n              createOrder={createSubscription ? undefined : createOrderFn}\r\n              createSubscription={createSubscription}\r\n              onCancel={\r\n                onCancel ? (error:any) => onCancel(error) : \r\n                (error:any) => this.onCancel(error)}\r\n              onApprove={\r\n                  onSuccess\r\n                      ? (data: any, actions: any) => this.onApprove(data, actions)\r\n                      : (data: any, actions: any) => onApprove && onApprove(data, actions)\r\n              }\r\n              style={style}\r\n          />\r\n      );\r\n  }\r\n\r\n  private addPaypalSdk() {\r\n      const { options, onButtonReady } = this.props;\r\n      const queryParams: string[] = [];\r\n\r\n      // replacing camelCase with dashes\r\n     if(options){\r\n      for (const [key, value] of Object.entries(options)) {\r\n        const name = key.split(/(?=[A-Z])/).join(\"-\").toLowerCase();\r\n        queryParams.push(`${name}=${value}`);\r\n      }\r\n      //   Object.keys(options).forEach(k => {\r\n      //     const name = k.split(/(?=[A-Z])/).join(\"-\").toLowerCase();\r\n      //     queryParams.push(`${name}=${options[k]}`);\r\n      // });\r\n     }\r\n\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?${queryParams.join(\"&\")}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n          this.setState({ isSdkReady: true });\r\n\r\n          if (onButtonReady) {\r\n              onButtonReady();\r\n          }\r\n      };\r\n      script.onerror = () => {\r\n          throw new Error(\"Paypal SDK could not be loaded.\");\r\n      };\r\n  \r\n      document.body.appendChild(script);\r\n  }\r\n}\r\nexport {\r\n  PayPalButton\r\n}","import React, { useEffect, useRef, useState, Dispatch, SetStateAction } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getPayPalOrder, AppState, savePayPalOrder, getCart, defaultCheckout } from 'reducers';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ProductCoupon } from 'types';\r\ndeclare global {\r\n  interface Window { paypal: any,paypalOrderId:any, didPriceChanged: boolean, paypalButton: any }\r\n}\r\n\r\ninterface Props {\r\n  cartTotalPrice: string;\r\n  cartTotalWithShipping: string;\r\n  quantityCount: number;\r\n  isStandard: boolean;\r\n  paymentMode: string;\r\n  setContainerIsCard: Dispatch<SetStateAction<boolean>>;\r\n  cartOrderId:number;\r\n}\r\nconst PayPalPayment : React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const paypalPaymentLoadingRef = useRef<HTMLButtonElement>(null);\r\n  const paypalModalRef = useRef<HTMLDivElement>(null)\r\n  const checkout = useSelector((state: AppState) => state.checkout);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const couponData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);\r\n  const [paypalPaymentMessage, setPaypalPaymentMessage] = useState(\"Please don't close this window while we process your payment.\");\r\n  const [paypalOrderId, setPayPalOrderId] = useState('');\r\n  const [paymentErroredOut, setPaymentErroredOut] = useState(false);\r\n  const [paymentSuccess, setPaymentSuccess] = useState(false);\r\n  const [isCard, setIsCard] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    if(props.paymentMode === 'paypal' && checkout.data && checkout.data.orderId){\r\n      setPayPalOrderId(checkout.data.orderId);\r\n      window.paypalOrderId = checkout.data.orderId\r\n    }\r\n  },[checkout.data]);\r\n\r\n  useEffect(() => {\r\n    if(props.cartTotalPrice !== '0'){\r\n      if (window.paypalButton) {\r\n        window.paypalButton.close();\r\n        delete window.paypalButton;\r\n        setTimeout(()=>{\r\n          history.go(0)\r\n        })\r\n      }\r\n      window.paypalButton = window.paypal.Buttons({\r\n        createOrder: function () {\r\n          if(!window.paypalOrderId){\r\n            if(!window.didPriceChanged){\r\n              togglePaymenModal('c');\r\n            }\r\n            return false;\r\n          } else {\r\n            paypalPaymentLoadingRef.current?.click();\r\n            return window.paypalOrderId;\r\n          }\r\n        },\r\n        onCancel: function (err:any) {\r\n          fundingType('credit');\r\n          window.paypalOrderId = '';\r\n        },\r\n        onApprove:function(data:any,actions:any) {\r\n          togglePaymenModal('b');\r\n          return actions.order.capture().then(function(details:any)  {\r\n            successPaypalPayment(data,details);\r\n           });\r\n        },\r\n        onClick: async function (d: any) {\r\n          window.paypalOrderId = '';\r\n          fundingType(d.fundingSource);\r\n          togglePaymenModal('d');\r\n          await dispatch(getPayPalOrder(props.cartTotalPrice.toString(), props.cartTotalWithShipping.toString(),props.cartOrderId,couponData && couponData[0] && couponData[0].couponId))\r\n        },\r\n        onError: function(data: any){\r\n          console.log('error')\r\n          console.log(data)\r\n        }\r\n      });\r\n      window.paypalButton.render('#paypal-button-container')\r\n    }\r\n    \r\n  },[props.cartTotalPrice,props.cartTotalWithShipping]);\r\n\r\n  useEffect(()=> {\r\n    if(checkout._priceChanged && props.paymentMode === 'paypal') {\r\n      window.didPriceChanged= true;\r\n      setPaypalPaymentMessage(checkout.message || '');\r\n      setTimeout(() => {\r\n        window.didPriceChanged = false;\r\n        history.go(0);\r\n        togglePaymenModal('e');\r\n      },5000);\r\n    }\r\n  },[checkout._priceChanged]);\r\n\r\n  const togglePaymenModal = (tt?:string) => {\r\n    paypalPaymentLoadingRef.current?.click();\r\n  };\r\n\r\n  const fundingType = (funding: string) => {\r\n    console.log(funding)\r\n    if(funding === 'card'){\r\n      setIsCard(true);\r\n      if(window.innerWidth > 959){\r\n        window.scrollTo({\r\n          top: 150,\r\n          behavior: 'smooth'\r\n        })\r\n      }\r\n      props.setContainerIsCard(true);\r\n\r\n    }else {\r\n      if(window.innerWidth > 959){\r\n        window.scrollTo(0,0);\r\n      }\r\n      setTimeout(()=>{\r\n        setIsCard(false);\r\n      props.setContainerIsCard(false)\r\n      },\r\n      1000)\r\n    }\r\n      setPaypalPaymentMessage(\"Please don't close this window while we process your payment.\");\r\n      setPaymentErroredOut(false);\r\n      setPaymentSuccess(false);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if(checkout._isPaymentSucceess){\r\n      setPaymentErroredOut(false);\r\n      setPaymentSuccess(true);\r\n      setPaypalPaymentMessage(checkout.message || \"\");\r\n      setTimeout(() => {\r\n        dispatch(defaultCheckout());\r\n        togglePaymenModal('f');\r\n        history.push('userinformation/orders');\r\n      }, 5000);\r\n    } else if(!checkout._isPaymentSucceess && checkout._isError) {\r\n      setPaymentErroredOut(true);\r\n      setPaymentSuccess(false);\r\n      setPaypalPaymentMessage(checkout.message || \"\");\r\n    }\r\n  },[checkout._isPaymentSucceess,checkout._isError])\r\n  const successPaypalPayment = (orderData: string, paymentData: string) => {\r\n\r\n    dispatch(savePayPalOrder({\r\n      paypalResponse: {\r\n        orderData,\r\n        paymentData\r\n      },\r\n      orderId: props.cartOrderId,\r\n      addressId: userData.data && userData.data.addressId || '',\r\n      quantity: props.quantityCount,\r\n      couponId: couponData && couponData[0] && couponData[0].couponId,\r\n      isStandard: props.isStandard\r\n    }))\r\n  };\r\n\r\n  return(\r\n    <>\r\n      <div id=\"paypal-button-container\"></div>\r\n      <button ref={paypalPaymentLoadingRef} id=\"payment-loading\" uk-toggle=\"target: #paypal-div\" type=\"button\">order</button>\r\n      <div id=\"paypal-div\" uk-modal=\"true; esc-close: false; bg-close: false\">\r\n        <div className=\"uk-modal-dialog uk-modal-body uk-margin-auto-vertical\">\r\n        {\r\n          (paymentSuccess || paymentErroredOut)  &&  <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n        }\r\n        <div ref={paypalModalRef} className=\"uk-modal-body uk-nav-center\">\r\n          <p>{paypalPaymentMessage}</p>\r\n            {\r\n              !paymentSuccess && !paymentErroredOut && <div  uk-spinner=\"true\"></div>\r\n            }\r\n            {\r\n              paymentSuccess && !paymentErroredOut && \r\n              <>\r\n              <span className=\"uk-label uk-label-success\">Redirecting to Orders <div  uk-spinner=\"true\"></div></span>\r\n              </>\r\n            }\r\n            {\r\n              paymentErroredOut && <span className=\"uk-label uk-label-danger\">Payment Failed</span> \r\n            } \r\n        </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport {\r\n  PayPalPayment\r\n}","import React, { useState, useEffect, Dispatch, SetStateAction } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppState, resendOTP } from 'reducers';\r\n\r\ninterface Props{\r\n  showOtpContainer: boolean;\r\n  setEnteredOTP: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\n\r\nconst CashOnDeliveryPayment: React.FunctionComponent<Props> = (props: Props) => {\r\n  const {\r\n    showOtpContainer\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n  const [timeLeft, setTimeLeft] = useState(30);\r\n  const [enteredOTP, setEnteredOTP] = useState('');\r\n  const checkout = useSelector((state: AppState) => state.checkout);\r\n\r\n  useEffect(()=> {\r\n    if(showOtpContainer){\r\n      const timer = setInterval(() => {\r\n        if(timeLeft > 0) {\r\n          setTimeLeft(timeLeft - 1);\r\n        }\r\n      },1000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  });\r\n\r\n  const resendOtpToCustomer = () => {\r\n    dispatch(resendOTP());\r\n    setTimeLeft(30)\r\n  };\r\n  return (\r\n    <section className=\"uk-card-body\">\r\n      <div className=\"uk-grid-small  uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n        <div className=\"uk-width-expand\">\r\n          <div className=\"uk-text-small\">Enter OTP</div>\r\n          {\r\n            timeLeft > 0 && !checkout._isError &&\r\n            <div className=\"uk-text-meta uk-text-small uk-text-danger\">Retry in {timeLeft}sec</div>\r\n          }\r\n        </div>\r\n        <div className=\"uk-text-right\">\r\n          <input \r\n            className=\"uk-input\"\r\n            type=\"text\"\r\n            value={enteredOTP}\r\n            onChange={(e) => {setEnteredOTP(e.currentTarget.value); props.setEnteredOTP(e.currentTarget.value)}}/>\r\n          {\r\n             timeLeft === 0 && !checkout._isError &&\r\n             <a \r\n            className=\"uk-text-meta uk-text-small uk-text-success uk-link-muted\"\r\n            onClick={()=> resendOtpToCustomer()}>Resend OTP</a>\r\n          }\r\n        </div>\r\n      </div>\r\n      {\r\n        checkout._isError && \r\n      <div className=\"uk-text-meta uk-text-small uk-text-danger\">{checkout.message}</div>\r\n      }\r\n      {\r\n        checkout._isFetchCodCodeSuccess && \r\n        <div className=\"login-error-message\">\r\n        <span className=\"uk-notification-message-success uk-text-meta uk-text-small uk-text-success\"> {checkout.message} </span>\r\n      </div>\r\n      }\r\n      \r\n    </section>\r\n  )\r\n}\r\n\r\nexport {\r\n  CashOnDeliveryPayment\r\n}","import React from 'react';\r\nimport { ProductItem, CustomerCart } from 'types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { getCurrencyIcon, calculateUserDiscount, showINRUSD } from 'services';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, UserLocation, Cart, addUpdateCart } from 'reducers';\r\n\r\ninterface Props {\r\n  productList: ProductItem[]\r\n}\r\n\r\nconst QuickProductList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n\r\n  const addToCart = (product: ProductItem)=> {\r\n    if(!userData.data?.userId){\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: product.productDetailId,\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: showINRUSD(userLocation.data || 'IN', product),\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, false))\r\n    } else {\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: '0',\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: '0',\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, true))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <div uk-slider=\"finite: true\">\r\n        <div className=\"uk-grid-small uk-flex-middle uk-margin-bottom\" uk-grid=\"true\">\r\n          <h2 className=\"uk-width-expand uk-text-center uk-text-left@s\">Related Products</h2>\r\n          <div className=\"uk-visible@s\">\r\n            <a className=\"tm-slidenav\" href=\"#\" uk-slider-item=\"previous\" uk-slidenav-previous=\"true\"></a>\r\n            <a className=\"tm-slidenav\" href=\"#\" uk-slider-item=\"next\" uk-slidenav-next=\"true\"></a>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n          <div className=\"uk-position-relative\">\r\n            <div className=\"uk-slider-container\">\r\n              <div className=\"uk-slider-items uk-grid-collapse uk-child-width-custom tm-products-grid\">\r\n                {\r\n                  props.productList.map((product, index) => {\r\n                    return (\r\n                      <article key={index} className=\"tm-product-card\">\r\n                        <div className=\"tm-product-card-media\">\r\n                          <div className=\"tm-ratio tm-ratio-4-3\">\r\n                            <a className=\"tm-media-box\" onClick={() => {window.scrollTo({top:0, behavior:'smooth'}); history.push('/productDetails/' + product.productId)}}>\r\n                              <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + product.imagePaths} alt={product.imageNames} /></figure>\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"tm-product-card-body\">\r\n                          <div className=\"tm-product-card-info\">\r\n                            <div className=\"uk-text-meta uk-margin-xsmall-bottom\">{product.productCategoryName}</div>\r\n                            <h3 className=\"tm-product-card-title\"><a className=\"uk-link-heading\" onClick={() => history.push('/productDetails/' + product.productId)}>{product.name}</a></h3>\r\n                          </div>\r\n                          <div className=\"tm-product-card-shop\">\r\n                            <div className=\"tm-product-card-prices\">\r\n                              {\r\n                                userData.data?.discount && userData.data?.discount !== '0' &&\r\n                                <del className=\"uk-text-meta\">{getCurrencyIcon(userLocation.data || 'IN')} {showINRUSD(userLocation.data || 'IN', product)}</del>\r\n                              }\r\n                              <div className=\"tm-product-card-price\">\r\n                                {getCurrencyIcon(userLocation.data || 'IN')} {calculateUserDiscount(userData.data?.discount || '0', showINRUSD(userLocation.data || 'IN', product))}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"tm-product-card-add\">\r\n                              <button className=\"uk-button uk-button-primary tm-product-card-add-button tm-shine js-add-to-cart\">\r\n                                {\r\n                                  cart._isLoading && <span uk-spinner=\"true\"></span>\r\n                                }\r\n                                {\r\n                                  !cart._isLoading && (\r\n                                    <>\r\n                                      <span className=\"tm-product-card-add-button-icon\" uk-icon=\"cart\" onClick={() => addToCart(product)}></span>\r\n                                      <span className=\"tm-product-card-add-button-text\">add to cart</span>\r\n                                    </>\r\n                                  )\r\n                                }\r\n\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </article>\r\n                    )\r\n                  })\r\n                }\r\n\r\n              </div>\r\n            </div>\r\n            <ul className=\"uk-slider-nav uk-dotnav uk-flex-center uk-margin-top uk-hidden@s\"></ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </section>\r\n  )\r\n}\r\n\r\nexport {\r\n  QuickProductList\r\n}","import React from 'react';\r\n\r\ninterface Props{\r\n  keyIndex: number\r\n}\r\nconst LoadingProductArticle: React.FunctionComponent<Props> = (props: Props) => {\r\n  return (\r\n    <article key={props.keyIndex} className=\"tm-product-card\">\r\n      <div className=\"tm-product-card-media\">\r\n        <div className=\"tm-ratio tm-ratio-4-3\">\r\n          <a className=\"tm-media-box\" href=\"bindi-product.html\">\r\n            <figure className=\"tm-media-box-wrap\">\r\n              <div className=\"ph-item\">\r\n                <div className=\"ph-picture\"></div>\r\n              </div>\r\n            </figure>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div className=\"tm-product-card-body\">\r\n        <div className=\"tm-product-card-info\">\r\n          <div className=\"uk-text-meta uk-margin-xsmall-bottom\">\r\n            <div className=\"ph-item\">\r\n              <div>\r\n                <div className=\"ph-row\">\r\n                  <div className=\"ph-col-4\"></div>\r\n                  <div className=\"ph-col-8 empty\"></div>\r\n                  <div className=\"ph-col-6\"></div>\r\n                  <div className=\"ph-col-6 empty\"></div>\r\n\r\n                  <div className=\"ph-col-12 empty\"></div>\r\n                </div>\r\n              </div>\r\n              <div className=\"ph-col-1\">\r\n                <div className=\"ph-avatar\"></div>\r\n              </div>\r\n            </div></div>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport {\r\n  LoadingProductArticle\r\n}","import React, { useEffect } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\n\r\nconst ScrollToTopComponent: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    }\r\n  }, []);\r\n\r\n  return (null);\r\n}\r\n\r\nconst ScrollToTop = withRouter(ScrollToTopComponent);\r\n\r\nexport {\r\n  ScrollToTop\r\n} ","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductColor } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateColour, Colour } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { code, value, colourId }: ProductColor = data;\r\n  const colourActionStatus = useSelector<AppState, Colour>(state => state.colour);\r\n\r\n  const colourQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      code,\r\n      value,\r\n      colourId\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (value: ProductColor) => {\r\n      dispatch(updateColour(value))\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={colourQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Colour Code</div>\r\n              <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                {...colourQuickViewFormik.getFieldProps('code')} />\r\n              {\r\n                colourQuickViewFormik.touched.code && colourQuickViewFormik.errors.code ? (\r\n                  <span className=\"uk-text-danger\">{colourQuickViewFormik.errors.code}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Colour Name</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...colourQuickViewFormik.getFieldProps('value')} />\r\n              {\r\n                colourQuickViewFormik.touched.value && colourQuickViewFormik.errors.value ? (\r\n                  <span className=\"uk-text-danger\">{colourQuickViewFormik.errors.value}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Colour Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  colourActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n        {colourQuickViewFormik.isSubmitting && <NotificationContainer {...colourActionStatus}/>}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst ColourList: React.FunctionComponent = () => {\r\n\r\n  const stateData = useSelector<AppState, ProductColor[]>(state => state.colour.data || []);  \r\n  const productColumns = [\r\n    {\r\n      name: 'ColourId',\r\n      selector: 'colourId',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Colour Code',\r\n      selector: 'code',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Colour Value',\r\n      selector: 'value',\r\n      sortable: true,\r\n    },\r\n  ]\r\n\r\n  return(\r\n    <AdminProductList \r\n      productColumns={productColumns} \r\n      productType={SubProducts.COLOUR} \r\n      ExpandableComponent= {ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Colour Value\"\r\n      expandableRows = {true}/>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport {\r\n  ColourList,\r\n  ExpandableComponent\r\n}","import React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, Colour, saveColour } from 'reducers';\r\nimport { ProductColor } from 'types';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst ProductColour: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const colourFormik = useFormik({\r\n    initialValues: {\r\n      code: '',\r\n      value: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (values: ProductColor) => {\r\n      dispatch(saveColour(values));\r\n    }\r\n  });\r\n  const colourActionStatus = useSelector<AppState, Colour>(state => state.colour);\r\n  useEffect(() => {\r\n    if (colourActionStatus._isSuccess) {\r\n      colourFormik.resetForm();\r\n    }\r\n  }, [colourActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={colourFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Colour</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Colour Code</div>\r\n                      <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                        {...colourFormik.getFieldProps('code')} />\r\n                      {\r\n                        colourFormik.touched.code && colourFormik.errors.code ? (\r\n                          <span className=\"uk-text-danger\">{colourFormik.errors.code}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Colour Name</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...colourFormik.getFieldProps('value')} />\r\n                      {\r\n                        colourFormik.touched.value && colourFormik.errors.value ? (\r\n                          <span className=\"uk-text-danger\">{colourFormik.errors.value}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...colourActionStatus}/>\r\n          <button disabled={colourActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              colourActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductColour\r\n}","import React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, addUpdateSize , Size } from 'reducers';\r\nimport { ProductSize as ProductSizeType } from 'types';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\n\r\nconst ProductSize: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const sizeFormik = useFormik({\r\n    initialValues: {\r\n      code: '',\r\n      value: '',\r\n      productCategory: 1,\r\n      sizeId: '0'\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required'),\r\n      productCategory: Yup.number().required('Required')\r\n    }),\r\n    onSubmit: (values: ProductSizeType) => {\r\n      dispatch(addUpdateSize (values));\r\n    }\r\n  });\r\n  const sizeActionStatus = useSelector<AppState, Size>(state => state.size);\r\n  useEffect(() => {\r\n    if (sizeActionStatus._isSuccess) {\r\n      sizeFormik.resetForm();\r\n    }\r\n  }, [sizeActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={sizeFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Size</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n                <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Product Category</div>\r\n                      <select className=\"uk-select\" id=\"productCategory\"\r\n                        {...sizeFormik.getFieldProps('productCategory')}>\r\n                          <option key='1' value={1}>Lingerie</option>\r\n                          <option key='2' value={2}>Footwear</option>\r\n                          <option key='3' value={3}>Bindi</option>\r\n                          <option key='4' value={4}>Handicraft</option>\r\n                        </select>\r\n                      {\r\n                        sizeFormik.touched.productCategory && sizeFormik.errors.productCategory ? (\r\n                          <span className=\"uk-text-danger\">{sizeFormik.errors.productCategory}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Size Code</div>\r\n                      <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                        {...sizeFormik.getFieldProps('code')} />\r\n                      {\r\n                        sizeFormik.touched.code && sizeFormik.errors.code ? (\r\n                          <span className=\"uk-text-danger\">{sizeFormik.errors.code}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Size Value</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...sizeFormik.getFieldProps('value')} />\r\n                      {\r\n                        sizeFormik.touched.value && sizeFormik.errors.value ? (\r\n                          <span className=\"uk-text-danger\">{sizeFormik.errors.value}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...sizeActionStatus}/>\r\n          <button disabled={sizeActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              sizeActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductSize\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductSize } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateColour, Colour, addUpdateSize, Size } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst SizeList: React.FunctionComponent = () => {\r\n\r\n  const stateData = useSelector<AppState, ProductSize[]>(state => state.size.data || []);\r\n  const productColumns = [\r\n    {\r\n      name: 'SizeId',\r\n      selector: 'sizeId',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Product Category',\r\n      selector: 'productCategoryName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Size Code',\r\n      selector: 'code',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Size Value',\r\n      selector: 'value',\r\n      sortable: true,\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.SIZE}\r\n      ExpandableComponent={ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Size Value\"\r\n      expandableRows={true} />\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { code, value, sizeId, productCategory }: ProductSize = data;\r\n  const sizeActionStatus = useSelector<AppState, Size>(state => state.size);\r\n\r\n  const sizeQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      code,\r\n      value,\r\n      sizeId,\r\n      productCategory,\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required'),\r\n      productCategory: Yup.number().required('Required')\r\n    }),\r\n    onSubmit: (value: ProductSize) => {\r\n      dispatch(addUpdateSize(value))\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={sizeQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Product Category</div>\r\n              <select className=\"uk-select\" id=\"productCategory\"\r\n                {...sizeQuickViewFormik.getFieldProps('productCategory')}>\r\n                <option key='1' value={1}>Lingerie</option>\r\n                <option key='2' value={2}>Footwear</option>\r\n                <option key='3' value={3}>Bindi</option>\r\n                <option key='4' value={4}>Handicraft</option>\r\n              </select>\r\n              {\r\n                sizeQuickViewFormik.touched.productCategory && sizeQuickViewFormik.errors.productCategory ? (\r\n                  <span className=\"uk-text-danger\">{sizeQuickViewFormik.errors.productCategory}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Size Code</div>\r\n              <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                {...sizeQuickViewFormik.getFieldProps('code')} />\r\n              {\r\n                sizeQuickViewFormik.touched.code && sizeQuickViewFormik.errors.code ? (\r\n                  <span className=\"uk-text-danger\">{sizeQuickViewFormik.errors.code}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Size Value</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...sizeQuickViewFormik.getFieldProps('value')} />\r\n              {\r\n                sizeQuickViewFormik.touched.value && sizeQuickViewFormik.errors.value ? (\r\n                  <span className=\"uk-text-danger\">{sizeQuickViewFormik.errors.value}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Size Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  sizeActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n          {sizeQuickViewFormik.isSubmitting && <NotificationContainer {...sizeActionStatus} />}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  SizeList,\r\n  ExpandableComponent\r\n}","import React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, addUpdateSize, Size, addUpdateSubCategory, SubCategory } from 'reducers';\r\nimport { ProductSubCategory as ProductSubCategoryType } from 'types';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\n\r\nconst ProductSubCategory: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const subCategoryFormik = useFormik({\r\n    initialValues: {\r\n      code: '',\r\n      value: '',\r\n      productCategoryId: 0,\r\n      subCategoryId: '0'\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required'),\r\n      productCategoryId: Yup.number().required('Required').moreThan(0, 'Required')\r\n    }),\r\n    onSubmit: (values: ProductSubCategoryType) => {\r\n      dispatch(addUpdateSubCategory(values));\r\n    }\r\n  });\r\n  const subCategoryActionStatus = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  useEffect(() => {\r\n    if (subCategoryActionStatus._isSuccess) {\r\n      subCategoryFormik.resetForm();\r\n    }\r\n  }, [subCategoryActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={subCategoryFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">SubCategory</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Product Category</div>\r\n                      <select className=\"uk-select\" id=\"productCategoryId\"\r\n                        {...subCategoryFormik.getFieldProps('productCategoryId')}>\r\n                        <option key='0' value={0}>Select</option>\r\n                        <option key='1' value={1}>Lingerie</option>\r\n                        <option key='2' value={2}>Footwear</option>\r\n                        <option key='3' value={3}>Bindi</option>\r\n                        <option key='4' value={4}>Handicraft</option>\r\n                      </select>\r\n                      {\r\n                        subCategoryFormik.touched.productCategoryId && subCategoryFormik.errors.productCategoryId ? (\r\n                          <span className=\"uk-text-danger\">{subCategoryFormik.errors.productCategoryId}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">SubCategory Name</div>\r\n                      <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                        {...subCategoryFormik.getFieldProps('code')} />\r\n                      {\r\n                        subCategoryFormik.touched.code && subCategoryFormik.errors.code ? (\r\n                          <span className=\"uk-text-danger\">{subCategoryFormik.errors.code}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">SubCategory Description</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...subCategoryFormik.getFieldProps('value')} />\r\n                      {\r\n                        subCategoryFormik.touched.value && subCategoryFormik.errors.value ? (\r\n                          <span className=\"uk-text-danger\">{subCategoryFormik.errors.value}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...subCategoryActionStatus} />\r\n          <button disabled={subCategoryActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              subCategoryActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductSubCategory\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductSubCategory } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateColour, Colour, addUpdateSize, Size, SubCategory, addUpdateSubCategory } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst SubCategoryList: React.FunctionComponent = () => {\r\n\r\n  const stateData = useSelector<AppState, ProductSubCategory[]>(state => state.subCategory.data || []);\r\n  const productColumns = [\r\n    {\r\n      name: 'SubCategoryId',\r\n      selector: 'subCategoryId',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Product Category',\r\n      selector: 'productCategoryName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Product CategoryID',\r\n      selector: 'productCategoryId',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Subcategory',\r\n      selector: 'code',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Subcategory Description',\r\n      selector: 'value',\r\n      sortable: true,\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.SUB_PRODUCT}\r\n      ExpandableComponent={ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Subcategory Value\"\r\n      expandableRows={true} />\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { code, value, subCategoryId, productCategoryId }: ProductSubCategory = data;\r\n  const subCategoryActionStatus = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n\r\n  const subCategoryQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      code,\r\n      value,\r\n      subCategoryId,\r\n      productCategoryId\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required'),\r\n      productCategoryId: Yup.number().required('Required')\r\n    }),\r\n    onSubmit: (value: ProductSubCategory) => {\r\n      dispatch(addUpdateSubCategory(value))\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={subCategoryQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Product Category</div>\r\n              <select className=\"uk-select\" id=\"productCategoryId\"\r\n                {...subCategoryQuickViewFormik.getFieldProps('productCategoryId')}>\r\n                <option key='1' value={1}>Lingerie</option>\r\n                <option key='2' value={2}>Footwear</option>\r\n                <option key='3' value={3}>Bindi</option>\r\n                <option key='4' value={4}>Handicraft</option>\r\n              </select>\r\n              {\r\n                subCategoryQuickViewFormik.touched.productCategoryId && subCategoryQuickViewFormik.errors.productCategoryId ? (\r\n                  <span className=\"uk-text-danger\">{subCategoryQuickViewFormik.errors.productCategoryId}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">SubCategory Name</div>\r\n              <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                {...subCategoryQuickViewFormik.getFieldProps('code')} />\r\n              {\r\n                subCategoryQuickViewFormik.touched.code && subCategoryQuickViewFormik.errors.code ? (\r\n                  <span className=\"uk-text-danger\">{subCategoryQuickViewFormik.errors.code}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">SubCategory Description</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...subCategoryQuickViewFormik.getFieldProps('value')} />\r\n              {\r\n                subCategoryQuickViewFormik.touched.value && subCategoryQuickViewFormik.errors.value ? (\r\n                  <span className=\"uk-text-danger\">{subCategoryQuickViewFormik.errors.value}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">SubCategory Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  subCategoryActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n          {subCategoryQuickViewFormik.isSubmitting && <NotificationContainer {...subCategoryActionStatus} />}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  SubCategoryList,\r\n  ExpandableComponent\r\n}","import React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, Coupon, saveCoupon } from 'reducers';\r\nimport { ProductCoupon as ProductCouponType } from 'types';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst ProductCoupon: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const couponFormik = useFormik({\r\n    initialValues: {\r\n      code: '',\r\n      value: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (values: ProductCouponType) => {\r\n      dispatch(saveCoupon(values));\r\n    }\r\n  });\r\n  const couponActionStatus = useSelector<AppState, Coupon>(state => state.coupon);\r\n  useEffect(() => {\r\n    if (couponActionStatus._isSuccess) {\r\n      couponFormik.resetForm();\r\n    }\r\n  }, [couponActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={couponFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Coupon</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Coupon Code</div>\r\n                      <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                        {...couponFormik.getFieldProps('code')} />\r\n                      {\r\n                        couponFormik.touched.code && couponFormik.errors.code ? (\r\n                          <span className=\"uk-text-danger\">{couponFormik.errors.code}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Discount Percentage</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...couponFormik.getFieldProps('value')} />\r\n                      {\r\n                        couponFormik.touched.value && couponFormik.errors.value ? (\r\n                          <span className=\"uk-text-danger\">{couponFormik.errors.value}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...couponActionStatus}/>\r\n          <button disabled={couponActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              couponActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductCoupon\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductCoupon } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateCoupon, Coupon } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst CouponList: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const deleteCoupon = (couponId:  number, code:string, value:string) => {\r\n    const input = window.confirm('Sure want to delete?');\r\n    if(input)dispatch(updateCoupon({couponId,value,code},true));\r\n  } \r\n  const stateData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);  \r\n  const productColumns = [\r\n    {\r\n      name: 'CouponId',\r\n      selector: 'couponId',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Coupon Code',\r\n      selector: 'code',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Coupon Value',\r\n      selector: 'value',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Delete',\r\n      sortable: false,\r\n      cell: (row: { couponId: number, code: string, value: string }) => {\r\n        return  <button type=\"submit\" className=\"uk-button-small uk-button-danger\" onClick={() => deleteCoupon(row.couponId, row.value, row.code)}>\r\n                   <span>Delete</span>\r\n                </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return(\r\n    <AdminProductList \r\n      productColumns={productColumns} \r\n      productType={SubProducts.COUPONS} \r\n      ExpandableComponent= {ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Coupon Code\"\r\n      expandableRows = {true}/>\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { code, value, couponId }: ProductCoupon = data;\r\n  const couponActionStatus = useSelector<AppState, Coupon>(state => state.coupon);\r\n\r\n  const couponQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      code,\r\n      value,\r\n      couponId\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (value: ProductCoupon) => {\r\n      dispatch(updateCoupon(value));\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={couponQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Coupon Code</div>\r\n              <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                {...couponQuickViewFormik.getFieldProps('code')} />\r\n              {\r\n                couponQuickViewFormik.touched.code && couponQuickViewFormik.errors.code ? (\r\n                  <span className=\"uk-text-danger\">{couponQuickViewFormik.errors.code}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Discount Percentage</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...couponQuickViewFormik.getFieldProps('value')} />\r\n              {\r\n                couponQuickViewFormik.touched.value && couponQuickViewFormik.errors.value ? (\r\n                  <span className=\"uk-text-danger\">{couponQuickViewFormik.errors.value}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Coupon Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  couponActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n        {couponQuickViewFormik.isSubmitting && <NotificationContainer {...couponActionStatus}/>}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  CouponList,\r\n  ExpandableComponent\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport {\r\n  AppState, SubCategory, getSubCategory, getSize, getColour, Size,\r\n  Colour, Product, addUpdateProduct, setDefaulState, getProduct\r\n} from 'reducers';\r\nimport { ProductSubCategory, ProductSize, ProductItem as ProductItemType, sizeColourQuantityComboObject } from 'types';\r\nimport { serverImagePath, SubCategories } from 'appConstants';\r\nimport { filterSubcategories } from 'services';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst ProductItem: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [sizeColourQuantity, setSizeColourQuantity] = useState<sizeColourQuantityComboObject[]>([]);\r\n  const [selectedSizes, setSelectedSizes] = useState<Array<string>>([]);\r\n  const [sizeColourQuantityErrorMessage, setSizeColourQuantityErrorMessage] = useState('')\r\n\r\n  const {\r\n    name, description, productCategoryId,\r\n    subCategory, quantity, productDetailId,\r\n    priceINR, priceUSD, productId, productCategoryName,\r\n    sizeId, colourId, imageNames, imagePaths, size, colour, sizeColourQuantityCombo\r\n  } = useSelector<AppState, ProductItemType>(state => state.product.singleData || {} as ProductItemType)\r\n\r\n  const checkForProductCategory = (subCategory: string) => {\r\n    const filteredKey = Object.keys(SubCategories).filter((key) => key === subCategory);\r\n    if (filteredKey[0]) {\r\n      return Number(SubCategories[filteredKey[0]])\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  const productItemFormik = useFormik({\r\n    initialValues: {\r\n      name: name || '',\r\n      description: description || '',\r\n      productCategoryId: productCategoryId || productCategoryName ? checkForProductCategory(productCategoryName || '') : 0,\r\n      subCategory: subCategory || 0,\r\n      size: sizeId ? sizeId.toString() : '0',\r\n      colour: colourId ? colourId.toString() : '',\r\n      quantity: quantity || '',\r\n      priceINR: priceINR ? priceINR.split(',')[0] : '',\r\n      priceUSD: priceUSD ? priceUSD.split(',')[0] : '',\r\n      productImageBlob: null,\r\n      productId: productId || '0',\r\n      deletedImagePath: [],\r\n      updatedImageName: [],\r\n      code: '',\r\n      value: '',\r\n      imagePaths: imagePaths || '',\r\n      imageNames: imageNames || '',\r\n      adminProductCombo: sizeId ? sizeId.split(',').length : 1,\r\n      deletedProductDetailIds: [],\r\n      productDetailIdArray: productDetailId ? productDetailId.split(',') : [],\r\n    },\r\n    validationSchema: Yup.object({\r\n      name: Yup.string().required('Required'),\r\n      description: Yup.string().required('Required'),\r\n      productCategoryId: Yup.number().required('Required').moreThan(0, 'Required'),\r\n      subCategory: Yup.number().required('Required').moreThan(0, 'Required'),\r\n      //size: Yup.string().required('Required').matches(/[^0]/, 'Required'),\r\n      //colour: Yup.string().required('Required'),\r\n      // quantity: Yup.string().required('Required'),\r\n      priceINR: Yup.string().required('Required'),\r\n      priceUSD: Yup.string().required('Required'),\r\n      // productImageBlob: Yup.mixed().required('Required'),\r\n    }),\r\n    onSubmit: (values: ProductItemType) => {\r\n      if(sizeColourQuantity.length === 0  || sizeColourQuantity.some((item) => Object.keys(item).length < 3)){\r\n        setSizeColourQuantityErrorMessage('Please enter data for all the row(s)');\r\n        setTimeout(()=>{\r\n          setSizeColourQuantityErrorMessage('');\r\n        },3000);\r\n      }else {\r\n        dispatch(addUpdateProduct(values, 0, sizeColourQuantity));\r\n      }\r\n    },\r\n    enableReinitialize: true\r\n  });\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const productSize = useSelector<AppState, Size>(state => state.size);\r\n  const productColour = useSelector<AppState, Colour>(state => state.colour);\r\n  const productActionStatus = useSelector<AppState, Product>(state => state.product);\r\n  useEffect(() => {\r\n    dispatch(getSubCategory());\r\n    dispatch(getSize());\r\n    dispatch(getColour());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (productActionStatus._isSuccess) {\r\n      setTimeout(()=>{\r\n        dispatch(setDefaulState());\r\n      productItemFormik.resetForm();\r\n      setSizeColourQuantity([]);\r\n      history.push(\"/admin\");\r\n      },2000)\r\n    }\r\n  }, [productActionStatus._isSuccess]);\r\n\r\n  useEffect(() => {\r\n    if(sizeId && colourId && quantity && sizeId.length > 0){\r\n      const sizeArray = sizeId.split(',');\r\n      const colourArray = colourId.split(',');\r\n      const quantityArray = quantity.split(',');\r\n\r\n      const editSizeColourQuantityCombo : sizeColourQuantityComboObject[] = sizeArray.map((sizeItem, index) => {\r\n        return {\r\n          size: sizeItem,\r\n          colour: colourArray[index],\r\n          quantity: quantityArray[index]\r\n        }\r\n      });\r\n\r\n      setSizeColourQuantity(editSizeColourQuantityCombo);\r\n      setSelectedSizes(sizeArray);\r\n    }\r\n  },[sizeId, colourId, quantity])\r\n\r\n  const filteredSubcategories: ProductSubCategory[] = filterSubcategories(subCategories, productItemFormik.values.productCategoryId);\r\n\r\n  const filteredProductSize: ProductSize[] = (productSize.data &&\r\n    productSize.data.filter((size) => {\r\n      return size.productCategory === Number(productItemFormik.values.productCategoryId)\r\n    })) || [];\r\n\r\n  const checkForMaxFileUpload = (files: FileList | null) => {\r\n    let currentNumberOfFile = 0;\r\n    if (productItemFormik.values.productId !== '0' && productItemFormik.values.imagePaths) {\r\n      currentNumberOfFile += productItemFormik.values.imagePaths.split(', ').length;\r\n    }\r\n    if (files && Array.from(productItemFormik.values.productImageBlob || []).length + currentNumberOfFile !== 5) {\r\n      const currentFiles = Array.from(productItemFormik.values.productImageBlob || []);\r\n      let filesArray = Array.from(files);\r\n      filesArray.splice(5 - (currentFiles.length + currentNumberOfFile), filesArray.length - 1);\r\n      productItemFormik.setFieldValue(\"productImageBlob\", [...currentFiles, ...filesArray]);\r\n    }\r\n  };\r\n\r\n  const removeImage = (name: string) => {\r\n    const productImageBlob = Array.from(productItemFormik.values.productImageBlob || []);\r\n    productItemFormik.setFieldValue(\"productImageBlob\",\r\n      productImageBlob.filter((img: File) => {\r\n        return img.name != name\r\n      })\r\n    )\r\n  };\r\n\r\n  const removeCurrentImage = (name: string, path: string) => {\r\n    if (productItemFormik.values.deletedImagePath && productItemFormik.values.imagePaths && productItemFormik.values.imageNames) {\r\n      productItemFormik.setFieldValue(\"deletedImagePath\", [...productItemFormik.values.deletedImagePath, path]);\r\n      productItemFormik.setFieldValue(\"imagePaths\",\r\n        productItemFormik.values.imagePaths.split(',').filter((imagePath) => imagePath != path).join(',')\r\n      );\r\n      productItemFormik.setFieldValue(\"imageNames\",\r\n        productItemFormik.values.imageNames.split(',').filter((imageName) => imageName != name).join(',')\r\n      )\r\n    }\r\n  };\r\n\r\n  const getFileNameAndPath = (fileName?: string, filePath?: string) => {\r\n    if (fileName && filePath && fileName.length > 0 && filePath.length > 0) {\r\n      const fileNames = fileName.split(',');\r\n      const filePaths = filePath.split(',');\r\n\r\n      return filePaths.map((path: string, index: number) => {\r\n        return <div key={index} className=\"uk-inline product-uploader-container\">\r\n          <img key={index} src={serverImagePath + path} alt={fileNames[index]} />\r\n          <div className=\"uk-overlay-primary uk-position-cover\">\r\n            <div className=\"uk-position-center\">\r\n              <span uk-icon=\"icon: close\" onClick={() => removeCurrentImage(fileNames[index], path)} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      })\r\n    }\r\n  }\r\n\r\n  const addProductComboLength = () => {\r\n    const availableSizes = filteredProductSize.filter(({sizeId}) => selectedSizes.indexOf(sizeId?.toString() || '') === -1);\r\n    if(availableSizes.length > 0 && productItemFormik.values.adminProductCombo){\r\n      productItemFormik.setFieldValue('adminProductCombo', \r\n      productItemFormik.values.adminProductCombo + 1)\r\n    } else if(availableSizes.length === 0){\r\n      setSizeColourQuantityErrorMessage('No more sizes available');\r\n      setTimeout(()=>{\r\n        setSizeColourQuantityErrorMessage('');\r\n      },3000);\r\n    }\r\n  }\r\n\r\n  const reduceProductComboLength = (index: number) => {\r\n    if(productItemFormik.values.deletedProductDetailIds && productItemFormik.values.productDetailIdArray){\r\n      productItemFormik.setFieldValue('deletedProductDetailIds', \r\n      [...productItemFormik.values.deletedProductDetailIds,productItemFormik.values.productDetailIdArray[index]])\r\n    }\r\n    selectedSizes.splice(index,1);\r\n    sizeColourQuantity.splice(index,1);\r\n    const newPDArray = [...productItemFormik.values.productDetailIdArray];\r\n    newPDArray.splice(index,1)\r\n    productItemFormik.setFieldValue('productDetailIdArray', [...newPDArray]);\r\n    setSelectedSizes([...selectedSizes]);\r\n    setSizeColourQuantity([...sizeColourQuantity]);\r\n    if(productItemFormik.values.adminProductCombo && productItemFormik.values.adminProductCombo > 1) {\r\n      productItemFormik.setFieldValue('adminProductCombo', \r\n      productItemFormik.values.adminProductCombo - 1)\r\n    }\r\n  }\r\n\r\n  const updatedSizeColourQuantityArray = (index: number, field: string, value: string) => {\r\n    // let currentItem = productItemFormik.values.sizeColourQuantityCombo || [];\r\n    let currentItem  = [...sizeColourQuantity] as sizeColourQuantityComboObject[];\r\n    if(!currentItem[index]){\r\n      currentItem[index] = {} as sizeColourQuantityComboObject\r\n    }\r\n        if(field === 'size') {\r\n          if(currentItem[index].size){\r\n            selectedSizes.splice(selectedSizes.indexOf(value), 1);\r\n          }\r\n            currentItem[index].size = value;\r\n            setSelectedSizes([...selectedSizes, value]);\r\n        } else if (field === 'colour') {\r\n          currentItem[index].colour = value;\r\n          // currentItem.forEach((item) => item.colour = value);\r\n        } else if (field === 'quantity') {\r\n          currentItem[index].quantity = value;\r\n        }\r\n\r\n        if(currentItem.length> 1){\r\n          if(field === 'colour'){\r\n            currentItem.forEach((item) => item.colour = value);\r\n          } else {\r\n            currentItem.forEach((item) => item.colour = currentItem[0].colour);\r\n          }\r\n        }\r\n\r\n        if(productItemFormik.values.productDetailIdArray[index]){\r\n          currentItem[index].productDetailId  = productItemFormik.values.productDetailIdArray[index];\r\n        } else {\r\n          currentItem[index].productDetailId = '0'\r\n        }\r\n      setSizeColourQuantity(currentItem);\r\n  }\r\n\r\n// console.log(sizeColourQuantity)\r\n  // if(Object.keys(sizeColourQuantity).length > 0){console.log(sizeColourQuantity)}\r\n  return (\r\n    <form onSubmit={productItemFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Product</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Name</div>\r\n                      <input className=\"uk-input \" id=\"name\" type=\"input\"\r\n                        {...productItemFormik.getFieldProps('name')} />\r\n                      {\r\n                        productItemFormik.touched.name && productItemFormik.errors.name ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.name}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Description</div>\r\n                      <textarea className=\"uk-textarea\" id=\"description\" cols={30}\r\n                        {...productItemFormik.getFieldProps('description')} />\r\n                      {\r\n                        productItemFormik.touched.description && productItemFormik.errors.description ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.description}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Product Category</div>\r\n                      <select className=\"uk-select\" id=\"productCategoryId\"\r\n                        onChange={(e) => { productItemFormik.handleChange(e); productItemFormik.setFieldValue('subCategory', 0); setSizeColourQuantity([]); setSelectedSizes([]); productItemFormik.setFieldValue('adminProductCombo',1)}}\r\n                        onBlur={productItemFormik.handleBlur}\r\n                        value={productItemFormik.values.productCategoryId}\r\n                      >\r\n                        {/* {...productItemFormik.getFieldProps('productCategoryId')} */}\r\n                        <option key='0' value={0}>Select</option>\r\n                        <option key='1' value={1}>Lingerie</option>\r\n                        <option key='2' value={2}>Footwear</option>\r\n                        <option key='3' value={3}>Bindi</option>\r\n                        <option key='4' value={4}>Handicraft</option>\r\n                      </select>\r\n                      {\r\n                        productItemFormik.touched.productCategoryId && productItemFormik.errors.productCategoryId ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.productCategoryId}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">SubCategory</div>\r\n                      <select className=\"uk-select\" id=\"subCategory\"\r\n                        onChange={(e) => { productItemFormik.handleChange(e)}} // productItemFormik.setFieldValue('size', 0) \r\n                        onBlur={productItemFormik.handleBlur}\r\n                        value={productItemFormik.values.subCategory}>\r\n                        <option key='0' value={0}>Select</option>\r\n                        {\r\n                          filteredSubcategories.map((subCategory, index) => {\r\n                            return <option key={index} value={subCategory.subCategoryId}>{subCategory.code}</option>\r\n                          })\r\n                        }\r\n                      </select>\r\n                      {\r\n                        productItemFormik.touched.subCategory && productItemFormik.errors.subCategory ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.subCategory}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-placeholder uk-text-center\">\r\n                  {\r\n                    Array(productItemFormik.values.adminProductCombo).fill(1).map((value, index) => {\r\n                      return (\r\n                        <div key={index} className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\">Size</div>\r\n                              <select className=\"uk-select\" id=\"size\"  \r\n                              value = {sizeColourQuantity[index] ? sizeColourQuantity[index].size : 0}\r\n                              onChange={(e) => {updatedSizeColourQuantityArray(index, 'size', e.currentTarget.value)}}>\r\n                                {/* {...productItemFormik.getFieldProps('size')}> */}\r\n                                <option key='0' value={0}>Select</option>\r\n                                {\r\n                                  filteredProductSize.filter((size) => {\r\n                                    return size.sizeId && index === selectedSizes.indexOf(size.sizeId.toString()) ? true : size.sizeId && selectedSizes.indexOf(size.sizeId.toString()) === -1\r\n                                           \r\n                                  })\r\n                                    .map((size, index) => {\r\n                                    return <option key={index} value={size.sizeId} >{size.value}</option>\r\n                                  })\r\n                                }\r\n                              </select>\r\n                              {/* {\r\n                                productItemFormik.touched.size && productItemFormik.errors.size ? (\r\n                                  <span className=\"uk-text-danger\">{productItemFormik.errors.size}</span>\r\n                                ) : ''\r\n                              } */}\r\n                            </label>\r\n                          </div>\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\">Colour</div>\r\n                              <select className=\"uk-select\" id=\"colour\" \r\n                              value={sizeColourQuantity && sizeColourQuantity[0] && sizeColourQuantity[0].colour || '0'}\r\n                              onChange={(e) => {updatedSizeColourQuantityArray(index, 'colour', e.currentTarget.value)}}>\r\n                                {/* {...productItemFormik.getFieldProps('colour')}> */}\r\n                                <option key='0' value={0}>Select</option>\r\n                                {\r\n                                  Array.isArray(productColour.data) &&\r\n                                  productColour.data.map((colour, index) => {\r\n                                    return <option key={index} value={colour.colourId}>{colour.value}</option>\r\n                                  })\r\n                                }\r\n                              </select>\r\n                            </label>\r\n                          </div>\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\">Quantity</div>\r\n                              <input className=\"uk-input \" id=\"quantity\" type=\"number\"\r\n                              value ={sizeColourQuantity[index] ? sizeColourQuantity[index].quantity : ''}\r\n                              onChange={(e) => {updatedSizeColourQuantityArray(index, 'quantity', e.currentTarget.value)}}/>\r\n                                {/* {...productItemFormik.getFieldProps('quantity')} /> */}\r\n                              {/* {\r\n                                productItemFormik.touched.quantity && productItemFormik.errors.quantity ? (\r\n                                  <span className=\"uk-text-danger\">{productItemFormik.errors.quantity}</span>\r\n                                ) : ''\r\n                              } */}\r\n                            </label>\r\n                          </div>\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\"></div>\r\n                              <button disabled={productItemFormik.values.adminProductCombo === 1} className=\"uk-button uk-button-danger admin-add-more-combo\" onClick={() => reduceProductComboLength(index)}>Delete</button>\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    })\r\n                  }\r\n                  <div className=\"uk-nav-center admin-add-more-combo\">\r\n                  <span className=\"uk-text-danger \">{sizeColourQuantityErrorMessage}</span>\r\n                  </div>\r\n                  \r\n                  <button className=\"uk-button uk-button-primary\" disabled={sizeColourQuantity.length === 0 || sizeColourQuantity.length !== productItemFormik.values.adminProductCombo  } onClick={(e) => {e.preventDefault(); addProductComboLength()}}>Add More</button>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Price INR</div>\r\n                      <input className=\"uk-input \" id=\"priceINR\" type=\"input\"\r\n                        {...productItemFormik.getFieldProps('priceINR')} />\r\n                      {\r\n                        productItemFormik.touched.priceINR && productItemFormik.errors.priceINR ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.priceINR}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Price USD</div>\r\n                      <input className=\"uk-input \" id=\"priceUSD\" type=\"input\"\r\n                        {...productItemFormik.getFieldProps('priceUSD')} />\r\n                      {\r\n                        productItemFormik.touched.priceUSD && productItemFormik.errors.priceUSD ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.priceUSD}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                  <label id=\"product-upload\" htmlFor=\"productImageBlob\" className=\"uk-placeholder uk-text-center\">\r\n                    <span className=\"upload-icon-margin\" uk-icon=\"icon: cloud-upload; ratio: 1.25;\" />\r\n                     Click this banner to upload the images <input id=\"productImageBlob\" type=\"file\" multiple={true}\r\n                      onChange={(event) => { checkForMaxFileUpload(event.currentTarget.files) }} />\r\n                    {\r\n                      productItemFormik.touched.productImageBlob && productItemFormik.errors.productImageBlob ? (\r\n                        <span className=\"uk-text-danger\">{productItemFormik.errors.productImageBlob}</span>\r\n                      ) : ''\r\n                    }\r\n                  </label>\r\n                </div>\r\n              </fieldset>\r\n              {\r\n                 productItemFormik.values.productId !== '0' &&\r\n                 <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-form-label\">Current Images</div>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-5@s\" uk-grid=\"true\">\r\n\r\n                  {\r\n                    getFileNameAndPath(productItemFormik.values.imageNames, productItemFormik.values.imagePaths)\r\n                  }\r\n                  {/* {\r\n                      productItemFormik.values.imagePaths &&\r\n                      productItemFormik.values.imagePaths.split(',').map((path, i) => {\r\n                      return <div className=\"uk-inline product-uploader-container\">\r\n                      <img key={i} src={apiServerHost+path} alt={file.name} />\r\n                      <div className=\"uk-overlay-primary uk-position-cover\">\r\n                        <div className=\"uk-position-center\">\r\n                          <span uk-icon=\"icon: close\" onClick={() => removeImage(file.name)}/>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                     })\r\n                    [].map.call(productItemFormik.values.imagePaths, (file: any, i) => {\r\n                      return <div className=\"uk-inline product-uploader-container\">\r\n                        <img key={i} src={URL.createObjectURL(file)} alt={file.name} />\r\n                        <div className=\"uk-overlay-primary uk-position-cover\">\r\n                          <div className=\"uk-position-center\">\r\n                            <span uk-icon=\"icon: close\" onClick={() => removeImage(file.name)}/>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    }) */}\r\n\r\n                  {/* <img src={'http://127.0.0.1:5000/images/1c508610-eee5-4360-8f76-f0e70fa5ca92.png'} alt={\"a\"} /> */}\r\n                </div>\r\n              </fieldset>\r\n              }\r\n              \r\n              {\r\n                <fieldset className=\"uk-fieldset\">\r\n                  <div className=\"uk-form-label\">New Images</div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-5@s\" uk-grid=\"true\">\r\n                    {/* <div> */}\r\n                    {/* <label> */}\r\n                    {productItemFormik.values.productImageBlob &&\r\n                      [].map.call(productItemFormik.values.productImageBlob, (file: any, i) => {\r\n                        return <div className=\"uk-inline product-uploader-container\">\r\n                          <img key={i} src={URL.createObjectURL(file)} alt={file.name} />\r\n                          <div className=\"uk-overlay-primary uk-position-cover\">\r\n                            <div className=\"uk-position-center\">\r\n                              <span uk-icon=\"icon: close\" onClick={() => removeImage(file.name)} />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      })\r\n                    }\r\n                    {/* <img src={'http://127.0.0.1:5000/images/1c508610-eee5-4360-8f76-f0e70fa5ca92.png'} alt={\"a\"} /> */}\r\n                    {/* </label> */}\r\n                    {/* </div> */}\r\n                  </div>\r\n                </fieldset>\r\n              }\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...productActionStatus} />\r\n          <button disabled={productActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              productActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductItem\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductItem } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AppState, addUpdateProduct, Coupon, updateProductHighLight, Product, errorProduct, setDefaulState } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport { countHighlightProducts } from 'services';\r\n\r\ninterface Props {\r\n  addEditToggle: Function;\r\n}\r\n\r\nconst ProductList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const deleteProduct = (productId: string) => {\r\n    const input = window.confirm('Sure want to delete?');\r\n    const name = '', code = '', priceINR = '0', priceUSD = '0', value = '', subCategory = 1, deletedImagePath = [''], productDetailIdArray = [''], deletedProductDetailIds = ['']\r\n    if (input) dispatch(addUpdateProduct({ productId, name, code, priceUSD, priceINR, value, deletedImagePath, subCategory, productDetailIdArray, deletedProductDetailIds }, 1, []));\r\n  }\r\n  const stateData = useSelector<AppState, ProductItem[]>(state => state.product.data || []);\r\n  const productColumns = [\r\n    // {\r\n    //   name: 'ProductId',\r\n    //   selector: 'productId',\r\n    //   sortable: false,\r\n    // },<span className=\"uk-label uk-label-warning uk-margin-xsmall-right\">top selling</span>\r\n    {\r\n      name: 'Category',\r\n      selector: 'productCategoryName',\r\n      sortable: true,\r\n      cell: (row: { trending: boolean, latest: boolean, productCategoryName: string}) => {\r\n        return (\r\n          row.trending ? <>\r\n            <span style={{color:\"green\"}} uk-icon=\"icon: bolt;\"/>\r\n            <span style={{marginLeft:\"5px\"}}>\r\n              {row.productCategoryName}\r\n            </span>\r\n          </> :\r\n          row.latest ? <>\r\n            <span style={{color:\"orange\"}} uk-icon=\"icon: star;\"/>\r\n            <span style={{marginLeft:\"5px\"}}>\r\n              {row.productCategoryName}\r\n            </span>\r\n          </> :\r\n          <span  style={{marginLeft:\"25px\"}}>\r\n          {row.productCategoryName}\r\n        </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      name: 'Product Name',\r\n      selector: 'name',\r\n      sortable: true,\r\n    },\r\n    // {\r\n    //   name: 'Price INR',\r\n    //   selector: 'priceInr',\r\n    //   sortable: true,\r\n    // },\r\n    // {\r\n    //   name: 'Price USD',\r\n    //   selector: 'priceUsd',\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      name: 'Quantity',\r\n      selector: 'quantity',\r\n      sortable: true,\r\n    },\r\n    // {\r\n    //   name: 'Colour',\r\n    //   selector: 'colour',\r\n    //   sortable: true,\r\n    // },\r\n    // {\r\n    //   name: 'Size',\r\n    //   selector: 'size',\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      name: 'Delete',\r\n      sortable: false,\r\n      cell: (row: { productId: number, name: string, code: string, priceUSD: string, priceINR: string, value: string }) => {\r\n        return <button type=\"submit\" className=\"uk-button-small uk-button-danger\" onClick={() => deleteProduct(row.productId.toString())}>\r\n          <span>Delete</span>\r\n        </button>\r\n      }\r\n    },\r\n    {\r\n      name: 'Edit',\r\n      sortable: false,\r\n      cell: (row: { productId: number, code: string, value: string }) => {\r\n        return <button type=\"submit\" className=\"uk-button-small uk-button-danger\" onClick={() => { props.addEditToggle(true); history.push(\"/admin/product/\" + row.productId) }}>\r\n          <span>Edit</span>\r\n        </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.PRODUCT}\r\n      ExpandableComponent={ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Product Name\"\r\n      expandableRows={true} />\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { trending, latest, productId }: ProductItem = data;\r\n  const productActionStatus = useSelector<AppState, Product>(state => state.product);\r\n\r\n  const productQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      productId,\r\n      highlight: trending ? '1' : latest ? '2' : ''\r\n    } as ProductItem,\r\n    onSubmit: (value: ProductItem) => {\r\n      if(value.highlight === '1' && countHighlightProducts(productActionStatus.data||[],true) === 12){\r\n        dispatch(errorProduct('Max trending product count of 12 reached.'));\r\n        setTimeout(() => {\r\n          productQuickViewFormik.setSubmitting(false)\r\n        },2000);\r\n      } else if(value.highlight === '2' && countHighlightProducts(productActionStatus.data||[],false) === 12){\r\n        dispatch(errorProduct('Max latest product count of 12 reached.'));\r\n        setTimeout(() => {\r\n          productQuickViewFormik.setSubmitting(false)\r\n        },2000);\r\n      } else {\r\n        dispatch(updateProductHighLight(value.highlight || '',value.productId))\r\n      }\r\n      // dispatch(updateCoupon(value));\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={productQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Product Highlight</div>\r\n              <select className=\"uk-select\" id=\"highlight\"\r\n                {...productQuickViewFormik.getFieldProps('highlight')}>\r\n                <option key='1' value=\"\">None</option>\r\n                <option key='2' value=\"1\">Trending</option>\r\n                <option key='3' value=\"2\">Latest</option>\r\n              </select>\r\n              {\r\n                productQuickViewFormik.touched.highlight && productQuickViewFormik.errors.highlight ? (\r\n                  <span className=\"uk-text-danger\">{productQuickViewFormik.errors.highlight}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Product Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  productActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }<span> {console.log(productQuickViewFormik.isSubmitting)}</span>\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n          {productQuickViewFormik.isSubmitting && <NotificationContainer {...productActionStatus} />}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductList\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppState, Coupon, updateCoupon } from 'reducers';\r\nimport { CustomerOrders, singleOrder } from 'reducers/Order';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductCoupon, Order, OrderItems } from 'types';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport { getIconForAdminOrder } from 'services';\r\n\r\ninterface Props{\r\n  addEditToggle: Function;\r\n}\r\n\r\nconst OrderList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  // const deleteCoupon = (couponId: number, code: string, value: string) => {\r\n  //   const input = window.confirm('Sure want to delete?');\r\n  //   if (input) dispatch(updateCoupon({ couponId, value, code }, true));\r\n  // }\r\n  const stateData = useSelector<AppState, Order[]>(state => state.customerOrders.data || []);\r\n  const productColumns = [\r\n    {\r\n      name: 'Order Number',\r\n      sortable: true,\r\n      wrap: true,\r\n      cell: (row: { orderItems: OrderItems[], orderNumber: string}) => {\r\n        const icon = getIconForAdminOrder(row.orderItems);\r\n        return (\r\n          icon !== '' ?\r\n          <>\r\n            {icon === 'lifesaver' ?  <span style={{ color: \"green\" }} uk-icon=\"icon: lifesaver;\" /> \r\n            : icon === 'plus-circle' ? <span style={{ color: \"green\" }} uk-icon=\"icon: plus-circle;\" /> \r\n            : icon === 'check' ? <span style={{ color: \"green\" }} uk-icon=\"icon: check;\" />\r\n            : icon === 'cart' ? <span style={{ color: \"green\" }} uk-icon=\"icon: cart;\" /> \r\n            : icon === 'history' ? <span style={{ color: \"orange\" }} uk-icon=\"icon: history;\" />\r\n            : icon === 'minus-circle' ? <span style={{ color: \"red\" }} uk-icon=\"icon: minus-circle;\" />\r\n            : icon === 'warning' ? <span style={{ color: \"red\" }} uk-icon=\"icon: warning;\" />\r\n            : ''\r\n          }\r\n            <span style={{marginLeft:\"5px\", whiteSpace:\"nowrap\"}}>\r\n              {row.orderNumber}\r\n            </span>\r\n          </> :\r\n          <span  style={{marginLeft:\"25px\"}}>\r\n          {row.orderNumber}\r\n        </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      name: 'Order Date',\r\n      selector: 'paymentDate',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Total Price-Mode',\r\n      sortable: false,\r\n      cell: (row: { totalPrice: string, paymentMode: string}) => {\r\n      return  <span>{row.paymentMode === 'PAYPAL'? '$' : '₹'} {row.totalPrice} ({row.paymentMode})</span>\r\n      }\r\n    },\r\n    {\r\n      name: 'View Details',\r\n      sortable: false,\r\n      cell: (row: Order) => {\r\n        return <button type=\"submit\" className=\"uk-button-small uk-button-primary\" onClick={() => {dispatch(singleOrder(row)) ;props.addEditToggle(true)}}>\r\n          <span>View</span>\r\n        </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.ORDERS}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Order Number\"\r\n      expandableRows={false}\r\n      sortByColumn=\"paymentDate\" \r\n      defaultSortAsc={false}/>\r\n  )\r\n}\r\nexport {\r\n  OrderList\r\n}","import React, { useEffect, useState, Fragment } from 'react';\r\nimport { Order, OrderUpdateAdmin } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, getShippers, Shipper, Shipment, updateOrderAdmin } from 'reducers';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport { getPaypalTransactionId } from 'services';\r\n\r\n\r\nconst OrderDetails: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  // const [productItemCount, setProductItemCount] = useState(0);\r\n  const [adminShipmentData, setAdminShipmentData] = useState<OrderUpdateAdmin[]>([])\r\n  const stateData = useSelector<AppState, Order>(state => state.customerOrders.singleData || {} as Order);\r\n  const shippers = useSelector<AppState, Shipper>(state => state.shipper || {} as Shipper);\r\n  const shipmentStatus = useSelector<AppState, Shipment>(state => state.shipment);\r\n  useEffect(() => {\r\n    if (stateData && stateData.orderItems) {\r\n      let tempShipmentData: OrderUpdateAdmin[] = [];\r\n      stateData.orderItems.forEach(orderItems => {\r\n        tempShipmentData.push(\r\n          {\r\n            orderDetailId: orderItems.orderDetailId,\r\n            deliveryDate: orderItems.shipmentDetails?.deliveryDate,\r\n            paymentReturned: orderItems.shipmentDetails?.paymentReturned,\r\n            returnStatus: orderItems.shipmentDetails?.returnStatus,\r\n            shipmentId: orderItems.shipmentDetails?.shipmentId || '0',\r\n            shipper: orderItems.shipmentDetails?.shipper,\r\n            shippingDate: orderItems.shipmentDetails?.shippingDate,\r\n            trackingNumber: orderItems.shipmentDetails?.trackingNumber\r\n          } as OrderUpdateAdmin);\r\n      });\r\n      setAdminShipmentData(tempShipmentData)\r\n    }\r\n  }, [stateData]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getShippers());\r\n  }, [])\r\n\r\n  const updateShipmentData = (index: number, key: string, value: string) => {\r\n    let shipmentDataCopy = [...adminShipmentData];\r\n    const shipmentDataToUpdate = shipmentDataCopy.splice(index, 1);\r\n    const updatedShipmentData = { ...shipmentDataToUpdate[0], [key]: value };\r\n    shipmentDataCopy.splice(index, 0, updatedShipmentData)\r\n    setAdminShipmentData(shipmentDataCopy);\r\n  };\r\n\r\n  const updateOrderStatus = (index: number) => {\r\n    console.log(adminShipmentData[index])\r\n    dispatch(updateOrderAdmin(adminShipmentData[index]))\r\n  }\r\n  return (\r\n    <form className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <header className=\"uk-card-header\"><h1 className=\"uk-h2\">Order Summay</h1></header>\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">#Order Details</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Order Number</div>\r\n                      <span className=\"uk-text-small\">{stateData.orderNumber}</span>\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Order Date</div>\r\n                      <span className=\"uk-text-small\">{stateData.paymentDate}</span>\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Order Cost</div>\r\n                      <span className=\"uk-text-small\">{stateData.paymentMode && stateData.paymentMode.toLowerCase() === 'paypal' ? '$' : '₹'}{stateData.totalPrice}</span>\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Payment Mode</div>\r\n                      <span className=\"uk-text-small\">{stateData.paymentMode}</span>\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Payment Transaction Id</div>\r\n                      <span className=\"uk-text-small\">{stateData.paymentMode && stateData.paymentMode.toLowerCase() === 'paypal' ? getPaypalTransactionId(stateData.paypalResponse) : stateData.razorpayPaymentId}</span>\r\n                    </label>\r\n                  </div>\r\n                  {\r\n                    stateData.paymentMode && stateData.paymentMode.toLowerCase() === 'paypal' &&\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Shippment Type</div>\r\n                        <span className=\"uk-text-small\">{stateData.standardShipping === false ? 'Express' : 'Standard'}</span>\r\n                      </label>\r\n                    </div>\r\n                  }\r\n\r\n                </div>\r\n                <div className=\"uk-divider-icon\"></div>\r\n              </fieldset>\r\n              {\r\n                stateData.userDetails &&\r\n                <fieldset className=\"uk-fieldset\">\r\n                  <legend className=\"uk-h4\">#User Details</legend>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Name</div>\r\n                        <span className=\"uk-text-small\">\r\n                          {stateData.userDetails.firstName + ' ' + stateData.userDetails.lastName}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Mobile</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.mobile}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Email</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.emailAddress}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Discount</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.discount || 0}%</span>\r\n                      </label>\r\n                    </div>\r\n                    {/* <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Gender</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.gender}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Date of birth</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.dob}</span>\r\n                      </label>\r\n                    </div> */}\r\n                  </div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Country</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.country}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">State</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.state}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">City</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.city}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Pincode</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.pincode}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Address</div>\r\n                        <span className=\"uk-text-small\">\r\n                          {\r\n                            stateData.userDetails.addressLineOne\r\n                            + ' ' +\r\n                            stateData.userDetails.addressLineTwo\r\n                            + ' ' +\r\n                            stateData.userDetails.addressLineThree\r\n                          }\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-divider-icon\"></div>\r\n                </fieldset>\r\n              }\r\n              {\r\n                stateData.orderItems && stateData.orderItems.length > 0 &&\r\n                <fieldset className=\"uk-fieldset\">\r\n                  <legend className=\"uk-h4\">#Order Items</legend>\r\n                  {\r\n                    stateData.orderItems.map((product, index) => {\r\n                      return (\r\n                        <Fragment key={index}>\r\n                          <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Product Image</div>\r\n                                <div className=\"tm-ratio tm-ratio-16-9\">\r\n                                  <a className=\"tm-media-box\" onClick={() => history.push('/productDetails/' + product.productId)}>\r\n                                    <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + product.productImage} alt={product.productImage} /></figure>\r\n                                  </a>\r\n                                </div>\r\n                                {/* <img src={serverImagePath + product.productImage} alt={product.productImage} /> */}\r\n                              </label>\r\n                            </div>\r\n\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Name</div>\r\n                                <span className=\"uk-text-small\">{product.productName}</span>\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Quantity</div>\r\n                                <span className=\"uk-text-small\">{product.quantity}</span>\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Price</div>\r\n                                <span className=\"uk-text-small\">{product.currency.toString() !== '1' ? '$' : '₹'}{product.productPrice}</span>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div uk-grid=\"true\" className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" >\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Shipper</div>\r\n                                <select className=\"uk-select shipper-max-width\" name=\"shipper\" id=\"shipper\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].shipper || '0'}\r\n                                  onChange={(e) => updateShipmentData(index, 'shipper', e.currentTarget.value)}\r\n                                >\r\n                                  <option key='0' value={0}>Select</option>\r\n                                  {\r\n                                    shippers.data?.map((shipper, index) => {\r\n                                      return <option key={index} value={shipper.shipperId}>{shipper.shipperName}</option>\r\n                                    })\r\n                                  }\r\n                                </select>\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Tracking Number</div>\r\n                                <input className=\"uk-input shipper-max-width\" id=\"trackingNumber\" type=\"text\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].trackingNumber || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'trackingNumber', e.currentTarget.value)}\r\n                                />\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Shipping Date</div>\r\n                                <input className=\"uk-input shipper-max-width\" id=\"shippingDate\" type=\"date\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].shippingDate || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'shippingDate', e.currentTarget.value)} />\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Delivery Date</div>\r\n                                <input className=\"uk-input shipper-max-width\" id=\"deliveryDate\" type=\"date\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].deliveryDate || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'deliveryDate', e.currentTarget.value)}\r\n                                />\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div uk-grid=\"true\" className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" >\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Return Status</div>\r\n                                <select className=\"uk-select shipper-max-width\" name=\"returnStatus\" id=\"returnStatus\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].returnStatus || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'returnStatus', e.currentTarget.value)}\r\n                                >\r\n                                  <option key='0' value={0}>Select</option>\r\n                                  <option key='1' value='In Progress'>In Progress</option>\r\n                                  <option key='2' value='Accepted'>Accepted</option>\r\n                                  <option key='3' value='Declined'>Declined</option>\r\n                                </select>\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Payment Returned</div>\r\n                                <select className=\"uk-select shipper-max-width\" name=\"paymentReturned\" id=\"paymentReturned\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].paymentReturned || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'paymentReturned', e.currentTarget.value)}\r\n                                >\r\n                                  <option key='0' value={0}>Select</option>\r\n                                  <option key='1' value='No'>No</option>\r\n                                  <option key='2' value='Yes'>Yes</option>\r\n                                </select>\r\n                              </label>\r\n                            </div>\r\n                            {/* <div>\r\n                            </div> */}\r\n\r\n                          </div>\r\n                          <div uk-grid=\"true\" className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" >\r\n                            <div className=\"uk-nav-center\">\r\n                              {\r\n                                shipmentStatus.data?.orderDetailId?.toString() === product.orderDetailId.toString() &&\r\n                                <NotificationContainer {...shipmentStatus} />\r\n                              }\r\n                              <label>\r\n                                {/* <div className=\"uk-form-label\">Save Details</div> */}\r\n                                <button className=\"uk-button uk-button-primary \"\r\n                                  disabled={shipmentStatus.data?.orderDetailId?.toString() === product.orderDetailId.toString() && shipmentStatus._isLoading}\r\n                                  onClick={(e) => { updateOrderStatus(index); e.preventDefault() }}>\r\n                                  {\r\n                                    shipmentStatus.data?.orderDetailId?.toString() === product.orderDetailId.toString() &&\r\n                                    shipmentStatus._isLoading &&\r\n                                    <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                                  }\r\n                                    Submit\r\n                                </button>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"uk-divider-order-items\"></div>\r\n                        </Fragment>\r\n                      )\r\n                    })\r\n                  }\r\n                </fieldset>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          {/* <NotificationContainer {...sizeActionStatus} />\r\n          <button disabled={sizeActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              sizeActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button> */}\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  OrderDetails\r\n}","import React, { useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, Shipper, saveShipper } from 'reducers';\r\nimport { OrderShipper } from 'types';\r\n\r\nconst ShipperDetails: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const shipperActionStatus = useSelector<AppState, Shipper>(state => state.shipper);\r\n  const shipperFormik = useFormik({\r\n    initialValues: {\r\n      shipperName: '',\r\n      trackingLink: '',\r\n      shipperId: '0'\r\n    },\r\n    validationSchema: Yup.object({\r\n      shipperName: Yup.string().required('Required'),\r\n      trackingLink: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (values: OrderShipper) => {\r\n      dispatch(saveShipper(values));\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (shipperActionStatus._isSuccess) {\r\n      shipperFormik.resetForm();\r\n    }\r\n  }, [shipperActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={shipperFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Shipper</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Shipper Name</div>\r\n                      <input className=\"uk-input \" id=\"shipperName\" type=\"input\"\r\n                        {...shipperFormik.getFieldProps('shipperName')} />\r\n                      {\r\n                        shipperFormik.touched.shipperName && shipperFormik.errors.shipperName ? (\r\n                          <span className=\"uk-text-danger\">{shipperFormik.errors.shipperName}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Tracking Link</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...shipperFormik.getFieldProps('trackingLink')} />\r\n                      {\r\n                        shipperFormik.touched.trackingLink && shipperFormik.errors.trackingLink ? (\r\n                          <span className=\"uk-text-danger\">{shipperFormik.errors.trackingLink}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...shipperActionStatus} />\r\n          <button disabled={shipperActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              shipperActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ShipperDetails\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductCoupon, OrderShipper } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateCoupon, Coupon, Shipper, updateShipper } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst ShipperList: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const deleteShipper = (shipperId: string, shipperName:string, trackingLink:string) => {\r\n    const input = window.confirm('Sure want to delete?');\r\n    if(input)dispatch(updateShipper({shipperId,shipperName,trackingLink},true));\r\n  } \r\n  const stateData = useSelector<AppState, OrderShipper[]>(state => state.shipper.data || []);  \r\n  const productColumns = [\r\n    {\r\n      name: 'Shipper Name',\r\n      selector: 'shipperName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Tracking Link',\r\n      selector: 'trackingLink',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Delete',\r\n      sortable: false,\r\n      cell: (row: { shipperName: string, trackingLink: string, shipperId: string }) => {\r\n        return  <button type=\"submit\" className=\"uk-button-small uk-button-danger\" onClick={() => deleteShipper(row.shipperId, row.shipperName, row.trackingLink)}>\r\n                   <span>Delete</span>\r\n                </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return(\r\n    <AdminProductList \r\n      productColumns={productColumns} \r\n      productType={SubProducts.SHIPPER} \r\n      ExpandableComponent= {ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Shipper Name\"\r\n      expandableRows = {true}\r\n      sortByColumn=\"shipperName\"/>\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const {shipperId,shipperName,trackingLink }: OrderShipper = data;\r\n  const shipperActionStatus = useSelector<AppState, Shipper>(state => state.shipper);\r\n\r\n  const shipperQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      shipperId,\r\n      shipperName,\r\n      trackingLink\r\n    },\r\n    validationSchema: Yup.object({\r\n      shipperName: Yup.string().required('Required'),\r\n      trackingLink: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (value: OrderShipper) => {\r\n      dispatch(updateShipper(value));\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={shipperQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Shipper Name</div>\r\n              <input className=\"uk-input \" id=\"shipperName\" type=\"input\"\r\n                {...shipperQuickViewFormik.getFieldProps('shipperName')} />\r\n              {\r\n                shipperQuickViewFormik.touched.shipperName && shipperQuickViewFormik.errors.shipperName ? (\r\n                  <span className=\"uk-text-danger\">{shipperQuickViewFormik.errors.shipperName}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Tracking Link</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...shipperQuickViewFormik.getFieldProps('trackingLink')} />\r\n              {\r\n                shipperQuickViewFormik.touched.trackingLink && shipperQuickViewFormik.errors.trackingLink ? (\r\n                  <span className=\"uk-text-danger\">{shipperQuickViewFormik.errors.trackingLink}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Shipper Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  shipperActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Update</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n        {shipperQuickViewFormik.isSubmitting && <NotificationContainer {...shipperActionStatus}/>}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ShipperList,\r\n  ExpandableComponent\r\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, setUser, UserInformation, updateUserDiscount } from 'reducers';\r\nimport { User } from 'types';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\ninterface Props{\r\n  addEditToggle: Function;\r\n}\r\n\r\nconst UserList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const stateData = useSelector<AppState, User[]>(state => state.user.allUsers || []);\r\n  console.log(stateData)\r\n  const productColumns = [\r\n    {\r\n      name: 'Email',\r\n      selector: 'emailAddress',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Mobile',\r\n      selector: 'mobile',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'First Name',\r\n      selector: 'firstName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Last Name',\r\n      selector: 'lastName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'View Details',\r\n      sortable: false,\r\n      cell: (row:  User) => {\r\n        return <button type=\"submit\" className=\"uk-button-small uk-button-primary\" onClick={() => {debugger;dispatch(setUser(row));props.addEditToggle(true)}}>\r\n          <span>View</span>\r\n        </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.USERS}\r\n      stateData={stateData}\r\n      ExpandableComponent={ExpandableComponent}\r\n      searchPlaceholder=\"Search Email / Mobile\"\r\n      expandableRows={true} />\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { emailAddress, discount }: User = data;\r\n  const userActionStatus = useSelector<AppState, UserInformation>(state => state.user);\r\n\r\n  const userDiscountQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      emailAddress: emailAddress || '',\r\n      discount: discount || ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      emailAddress: Yup.string().required('Required'),\r\n      discount: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (value) => {\r\n      dispatch(updateUserDiscount(value.discount || '0', value.emailAddress.toString()));\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={userDiscountQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Discount Percentage</div>\r\n              <input className=\"uk-input \" id=\"discount\" type=\"input\"\r\n                {...userDiscountQuickViewFormik.getFieldProps('discount')} />\r\n              {\r\n                userDiscountQuickViewFormik.touched.discount && userDiscountQuickViewFormik.errors.discount ? (\r\n                  <span className=\"uk-text-danger\">{userDiscountQuickViewFormik.errors.discount}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  userActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n        {userDiscountQuickViewFormik.isSubmitting && <NotificationContainer {...userActionStatus}/>}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserList\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState } from 'reducers';\r\nimport { User } from 'types';\r\n\r\nconst UserDetails: React.FunctionComponent = () => {\r\n  const userData = useSelector<AppState, User>(state => state.user.data || {} as User);\r\n  console.log(userData)\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <header className=\"uk-card-header\"><h1 className=\"uk-h2\">Order Summay</h1></header>\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <fieldset className=\"uk-fieldset\">\r\n                  <legend className=\"uk-h4\">#User Details</legend>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Name</div>\r\n                        <span className=\"uk-text-small\">\r\n                          {userData.firstName + ' ' + userData.lastName}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Mobile</div>\r\n                        <span className=\"uk-text-small\">{userData.mobile}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Email</div>\r\n                        <span className=\"uk-text-small\">{userData.emailAddress}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Discount</div>\r\n                        <span className=\"uk-text-small\">{userData.discount || 0}%</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Country</div>\r\n                        <span className=\"uk-text-small\">{userData.country}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">State</div>\r\n                        <span className=\"uk-text-small\">{userData.state}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">City</div>\r\n                        <span className=\"uk-text-small\">{userData.city}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Pincode</div>\r\n                        <span className=\"uk-text-small\">{userData.pincode}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Address</div>\r\n                        <span className=\"uk-text-small\">\r\n                          {\r\n                            userData.addressLineOne\r\n                            + ' ' +\r\n                            userData.addressLineTwo\r\n                            + ' ' +\r\n                            userData.addressLineThree\r\n                          }\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-divider-icon\"></div>\r\n                </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserDetails\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from \"react-router\";\r\nimport { AdminNav } from '.';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ColourList, ProductColour } from './subComponents/colour';\r\nimport { ProductSize, SizeList } from './subComponents/size';\r\nimport { ProductSubCategory, SubCategoryList } from './subComponents/subCategory';\r\nimport { ProductCoupon, CouponList } from './subComponents/coupon';\r\nimport { ProductItem, ProductList } from './subComponents/product';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getProduct, setDefaulState } from 'reducers';\r\nimport { OrderList, OrderDetails } from './subComponents/orders';\r\nimport { ShipperDetails, ShipperList } from './subComponents/shippers';\r\nimport { UserList, UserDetails } from './subComponents/users';\r\n\r\n\r\n\r\nconst MainContainer: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const {product, productId} = useParams();\r\n\r\n  useEffect(() => {\r\n    if(product == 'product' && productId){\r\n      dispatch(getProduct(Number(productId)));\r\n      setIsOnAdd(true);\r\n      setSubProductId(SubProducts.PRODUCT)\r\n    } else {\r\n      dispatch(setDefaulState());\r\n    }\r\n  },[product, productId])\r\n\r\n  const [isOnAdd, setIsOnAdd] = useState(false);\r\n  const [subProductId, setSubProductId] = useState(SubProducts.ORDERS);\r\n\r\n  const subProductToggle = (subProductId: number) => {\r\n    setSubProductId(subProductId);\r\n  }\r\n  const addEditToggle = (isOnAdd: boolean) => {\r\n    setIsOnAdd(isOnAdd);\r\n  }\r\n\r\n  const showSubProductComponent = () => {\r\n    switch (subProductId) {\r\n      case SubProducts.COLOUR:\r\n        return isOnAdd ? <ProductColour /> : <ColourList/>\r\n      case SubProducts.SIZE:\r\n        return isOnAdd ? <ProductSize/> : <SizeList/>\r\n      case SubProducts.SUB_PRODUCT:\r\n        return isOnAdd ? <ProductSubCategory/> : <SubCategoryList/>\r\n      case SubProducts.COUPONS:\r\n        return isOnAdd ? <ProductCoupon/> : <CouponList/>\r\n      case SubProducts.PRODUCT:\r\n        return isOnAdd ? <ProductItem/> : <ProductList addEditToggle={addEditToggle}/>\r\n      case SubProducts.ORDERS:\r\n        return isOnAdd ? <OrderDetails/> : <OrderList addEditToggle={addEditToggle}/>\r\n      case SubProducts.SHIPPER:\r\n        return isOnAdd ? <ShipperDetails/> : <ShipperList/>\r\n      case SubProducts.USERS:\r\n        return isOnAdd ? <UserDetails/> : <UserList addEditToggle={addEditToggle}/>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n            <AdminNav subProductToggle={subProductToggle} addEditToggle={addEditToggle} />\r\n            { showSubProductComponent() }\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  MainContainer\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nimport { getCustomerProducts, Product, setDefaulState } from 'reducers/Product';\r\nimport { AppState, SubCategory, Size, Colour, addUpdateCart, Cart, UserLocation } from 'reducers';\r\nimport { serverImagePath, pageSize } from 'appConstants';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { ProductItem, CustomerCart, Search } from 'types';\r\nimport { calculateUserDiscount, getCurrencyIcon, showINRUSD } from 'services';\r\nimport { LoadingProductArticle } from 'components/shared';\r\nimport { setSearch } from 'reducers/Search';\r\n\r\n\r\ninterface Props {\r\n  categoryId: number[];\r\n  colourId?: number[];\r\n  sizeId?: number[];\r\n  subCategoryId?: number[];\r\n  startPrice?: string;\r\n  endPrice?: string;\r\n}\r\n\r\nconst CustomerProductList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [hasMoreProducts, setHasMoreProducts] = useState(false);\r\n\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const productSize = useSelector<AppState, Size>(state => state.size);\r\n  const productColour = useSelector<AppState, Colour>(state => state.colour);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const search = useSelector<AppState, Search>(state => state.search.data || {} as Search);\r\n\r\n  // useEffect(() => {\r\n  //   if (props.categoryId !== 0) {\r\n  //     console.log('effect list')\r\n  //     dispatch(getCustomerProducts(0, pageSize, props.categoryId, props.subCategoryId || [], [], []));\r\n  //     setHasMoreProducts(true);\r\n  //   }\r\n  // }, [props.categoryId]);\r\n\r\n  useEffect(() => {\r\n    if(!products._isLoading && props.categoryId.length >0  && !subCategories._isLoading && !productSize._isLoading && !productColour._isLoading){\r\n      dispatch(setDefaulState());\r\n      dispatch(getCustomerProducts(0, pageSize, props.categoryId, props.subCategoryId || [], props.colourId || [], props.sizeId || [], props.startPrice || '', props.endPrice||'', userLocation.data || 'IN',search.searchText || '' , true));\r\n      dispatch(setSearch({\r\n        categoryId: props.categoryId,\r\n        colourId: props.colourId || [],\r\n        currency: userLocation.data || 'IN',\r\n        endPrice: props.endPrice||'',\r\n        sizeId: props.sizeId || [],\r\n        startPrice: props.startPrice || '',\r\n        subCategoryId: props.subCategoryId || [],\r\n        searchText: search.searchText || ''\r\n      }));\r\n    }\r\n  },[props.sizeId,props.categoryId,props.colourId,props.subCategoryId,props.startPrice,props.endPrice, subCategories._isLoading, productSize._isLoading, productColour._isLoading])\r\n\r\n  useEffect(()=> {\r\n    return () => {\r\n      dispatch(setSearch({\r\n        categoryId: [],\r\n        colourId: [],\r\n        currency: userLocation.data || 'IN',\r\n        endPrice: '',\r\n        sizeId:  [],\r\n        startPrice: '',\r\n        subCategoryId:  [],\r\n        searchText: search.searchText || ''\r\n      }));\r\n    }\r\n  },[]);\r\n\r\n  const fetchNextProducts = () => {\r\n    if (!products._isLoading && stateData && props.categoryId.length >0 ) {\r\n      dispatch(getCustomerProducts(stateData.length, pageSize, props.categoryId, props.subCategoryId || [], props.colourId || [], props.sizeId || [], props.startPrice || '', props.endPrice||'', userLocation.data || 'IN',search.searchText || ''));\r\n      dispatch(setSearch({\r\n        categoryId: props.categoryId,\r\n        colourId: props.colourId || [],\r\n        currency: userLocation.data || 'IN',\r\n        endPrice: props.endPrice||'',\r\n        sizeId: props.sizeId || [],\r\n        startPrice: props.startPrice || '',\r\n        subCategoryId: props.subCategoryId || [],\r\n        searchText: search.searchText || ''\r\n      }));\r\n    }\r\n  }\r\n\r\n  const products = useSelector<AppState, Product>(state => state.product || []);\r\n  useEffect(() => {\r\n    setHasMoreProducts(products._hasMoreProducts || false);\r\n  }, [products._hasMoreProducts]);\r\n\r\n\r\n  const stateData = products.data;\r\n\r\n  const addToCart = (product: ProductItem)=> {\r\n    if(!userData.data?.userId){\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: product.productDetailId,\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: showINRUSD(userLocation.data || 'IN', product),\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, false))\r\n    }else {\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: '0',\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: '0',\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, true))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"uk-width-expand\">\r\n      <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n        <div>\r\n          <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n            <div className=\"uk-grid-collapse uk-child-width-1-1\" id=\"products\" uk-grid=\"true\">\r\n              <div className=\"uk-card-header uk-hidden@m\">\r\n                <div className=\"uk-grid-small uk-flex-middle uk-flex-center\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-1-1 uk-width-auto@s uk-flex uk-flex-center uk-flex-middle\">\r\n                    <button className=\"uk-button uk-button-default uk-button-small uk-hidden@m\" uk-toggle=\"target: #filters\">\r\n                      <span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: settings; ratio: .75;\"></span>Filters\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div>\r\n\r\n                <InfiniteScroll\r\n                  dataLength={stateData && stateData.length || 0}\r\n                  next={fetchNextProducts}\r\n                  hasMore={hasMoreProducts}\r\n                  loader={\r\n                    <div style={{ textAlign: \"center\", marginTop: \"10px\" }}>\r\n                      <h4>Loading...</h4>\r\n                    </div>\r\n                  }\r\n                  endMessage={\r\n                    <p style={{ textAlign: \"center\" }}>\r\n                      <b>That's all for now. Do check back after some time for more products.</b>\r\n                    </p>\r\n                  }\r\n                >\r\n                  <div className=\"uk-grid-collapse uk-child-width-custom tm-products-grid js-products-grid\" uk-grid=\"true\">\r\n                    {\r\n                       stateData && stateData.length > 0 ? stateData.map((product, index) => {\r\n                        return (\r\n                          <article className=\"tm-product-card\" key={index}>\r\n                            <div className=\"tm-product-card-media\">\r\n                              <div className=\"tm-ratio tm-ratio-4-3\">\r\n                                <a className=\"tm-media-box\" onClick={()=> history.push('/productDetails/'+ product.productId)}>\r\n                                  \r\n                                  <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + product.imagePaths} alt={product.imageNames}/></figure>\r\n                                </a>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"tm-product-card-body\">\r\n                              <div className=\"tm-product-card-info\">\r\n                                <div className=\"uk-text-meta uk-margin-xsmall-bottom\">{product.productCategoryName}</div>\r\n                                <h3 className=\"tm-product-card-title\"><a className=\"uk-link-heading\" onClick={()=> history.push('/productDetails/'+ product.productId)}>{product.name}</a></h3>\r\n                              </div>\r\n                              <div className=\"tm-product-card-shop\">\r\n                                <div className=\"tm-product-card-prices\">\r\n                                  {\r\n                                    userData.data?.discount && userData.data?.discount !== '0' &&\r\n                                    <del className=\"uk-text-meta\">{getCurrencyIcon(userLocation.data || 'IN')} {showINRUSD(userLocation.data || 'IN', product)}</del>\r\n                                  }\r\n                                  <div className=\"tm-product-card-price\">\r\n                                    {getCurrencyIcon(userLocation.data || 'IN')} {calculateUserDiscount(userData.data?.discount ||'0', showINRUSD(userLocation.data || 'IN', product))}\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"tm-product-card-add\">\r\n                                  <button className=\"uk-button uk-button-primary tm-product-card-add-button tm-shine js-add-to-cart\">\r\n                                    {\r\n                                      cart._isLoading && <span uk-spinner=\"true\"></span>\r\n                                    }\r\n                                    {\r\n                                      !cart._isLoading && (\r\n                                        <>\r\n                                        <span className=\"tm-product-card-add-button-icon\" uk-icon=\"cart\" onClick={() => addToCart(product)}></span>\r\n                                        <span className=\"tm-product-card-add-button-text\">add to cart</span>\r\n                                        </>\r\n                                      )\r\n                                    }\r\n                                    \r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </article>\r\n                        )\r\n                      }) : products._hasMoreProducts  && Array(pageSize).fill(1).map((value, index) => <LoadingProductArticle key={index} keyIndex={index}/>)\r\n                    }\r\n                  </div>\r\n                </InfiniteScroll>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerProductList\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { CustomerProductFilter } from '.';\r\nimport { AppState, ProductCount, getActiveProductCount } from 'reducers';\r\nimport { SubCategory, getSubCategory } from 'reducers/SubCategory';\r\nimport { ProductSubCategory, ProductSize, ProductColor, Search } from 'types';\r\nimport { filterSubcategories } from 'services';\r\nimport { SubCategories } from 'appConstants';\r\nimport { CustomerProductList } from './CustomerProductList';\r\nimport { setDefaulState } from 'reducers/Product';\r\nimport { getSize, Size } from 'reducers/Size';\r\nimport { getColour, Colour } from 'reducers/Colour';\r\n\r\n\r\n\r\n\r\nconst CustomerContainer: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const {product, filterOn} = useParams();\r\n  const [colourId, setColourId] = useState<number[]>([]);\r\n  const [sizeId, setSizeId] = useState<number[]>([]);\r\n  const [subCategoryId, setSubCategoryId] = useState<number[]>([]);\r\n  const [startPrice, setStartPrice] = useState('');\r\n  const [endPrice, setEndPrice] = useState('');\r\n  const [categoryId, setcategoryId] = useState<number[]>([]);\r\n  const [subCategoryQueryParam, setSubCategoryQueryParam] = useState<ProductSubCategory[]>([]);\r\n  const productSize = useSelector<AppState, ProductSize[]>(state => state.size.data || []);\r\n  const productColour = useSelector<AppState, ProductColor[]>(state => state.colour.data || []);\r\n  const search = useSelector<AppState, Search>(state => state.search.data || {} as Search);\r\n\r\n  useEffect(()=> {\r\n    dispatch(getSubCategory());\r\n    dispatch(getSize());\r\n    dispatch(getColour());\r\n  },[]);\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(setDefaulState());\r\n    const filteredKey = Object.keys(SubCategories).filter((key) => key.toLowerCase() === product.toLowerCase());\r\n    if(filteredKey[0]){\r\n      setcategoryId([SubCategories[filteredKey[0]]]);\r\n    } else {\r\n      const subCateId : number[] = [];\r\n      for(let key in SubCategories){\r\n        subCateId.push(SubCategories[key])\r\n      }\r\n      setcategoryId(subCateId)\r\n    }\r\n    if(!filterOn){\r\n      setSubCategoryId([]);\r\n    }\r\n\r\n  }, [product]);\r\n\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const activeProductCount = useSelector<AppState, ProductCount>(state => state.productCount);\r\n  const productKey = Object.keys(SubCategories).find((subcategory) => subcategory.toLowerCase() === product.toLowerCase()) || '';\r\n  let filteredSubcategories = filterSubcategories(subCategories, SubCategories[productKey]);;\r\n  if(product.toLowerCase() === 'search'){\r\n    filteredSubcategories = subCategories.data || []\r\n  }\r\n  \r\n\r\n  useEffect(()=> {\r\n    if(filterOn &&  !subCategories._isLoading && subCategories.data && subCategories.data.length >0){\r\n      setSubCategoryId([Number(subCategories.data?.filter(({code}) => code.toLowerCase() === filterOn.toLowerCase())[0].subCategoryId)]);\r\n    setSubCategoryQueryParam(subCategories.data?.filter(({code}) => code.toLowerCase() === filterOn.toLowerCase()) || [])\r\n    }\r\n  },[filterOn, subCategories._isLoading])\r\n\r\n  const getTotalProductCount = () => {\r\n    let count = 0;\r\n    const activeProducts = activeProductCount.data\r\n    if(activeProducts){\r\n      const selectedSubCat = subCategoryId.length>0 ? subCategoryId : filteredSubcategories.map(({subCategoryId}) => Number(subCategoryId));\r\n      const selectedColour = colourId.length > 0 ? colourId : productColour.length> 0 ?  productColour.map(({colourId}) => Number(colourId)) : [];\r\n      const selectedSize = sizeId.length > 0 ? sizeId : productSize.length > 0 ? productSize.map(({sizeId}) => Number(sizeId)) : [];\r\n      selectedSubCat.forEach((subCategory) => {\r\n        const activeSubCat = activeProducts[subCategory];\r\n        if(activeSubCat){\r\n          selectedColour.forEach((colour) => {\r\n            const activeColour = activeSubCat[colour];\r\n            if(activeColour){\r\n              selectedSize.forEach((size) => {\r\n                const activeSize = activeColour[size];\r\n                if(activeSize) {\r\n                  count+= activeSize.quantity;\r\n                }\r\n                \r\n              })\r\n            }\r\n          })\r\n        }\r\n      });\r\n    }\r\n    return count;\r\n  };\r\n\r\n  // const getIdsForfilter = () => {\r\n  //   const filteredKey = Object.keys(SubCategories).filter((key) => key.toLowerCase() === product.toLowerCase());\r\n  //   if(filteredKey[0]){\r\n  //     setcategoryId(Number(SubCategories[filteredKey[0]]));\r\n  //   }\r\n  // }\r\n\r\n  // getIdsForfilter()\r\n  return (\r\n    <main>\r\n    <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n                <div className=\"uk-text-center\">\r\n                    <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                        <li><a onClick={() => history.push('/')}>Home</a></li>\r\n                        <li><span>Product</span></li>\r\n                    </ul>\r\n                    <h1 className=\"uk-margin-small-top uk-margin-remove-bottom customer-product\">{product}</h1>\r\n                    {\r\n                      search.searchText === '' && <div className=\"uk-text-meta uk-margin-xsmall-top\">{ getTotalProductCount()} items</div>\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n                        {\r\n                          <CustomerProductFilter \r\n                          subCategories= {filteredSubcategories}\r\n                          activeProductCount= {activeProductCount}\r\n                          filterSelected={subCategoryQueryParam}\r\n                          categoryId={categoryId}\r\n                          setColourId={setColourId}\r\n                          setSizeId={setSizeId}\r\n                          setSubCategoryId={setSubCategoryId}\r\n                          setStartPrice={setStartPrice}\r\n                          setEndPrice={setEndPrice}\r\n                          />\r\n                        }\r\n                        {\r\n                        <CustomerProductList \r\n                          categoryId={categoryId}\r\n                          colourId={colourId}\r\n                          sizeId={sizeId}\r\n                          subCategoryId={subCategoryId}\r\n                          startPrice={startPrice}\r\n                          endPrice={endPrice}\r\n                          />\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</main>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerContainer\r\n}","import React, { Dispatch, SetStateAction, useState, useEffect } from 'react';\r\nimport { ProductSubCategory, ActiveProductCount, ProductColor, ProductSize } from 'types';\r\nimport { ProductCount, AppState, Size, Colour, getCustomerProducts } from 'reducers';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// import { Size } from 'reducers/Size';\r\n// import { Colour } from 'reducers/Colour';\r\nimport { filterSize } from 'services';\r\nimport { pageSize } from 'appConstants';\r\nimport { setDefaulState } from 'reducers/Product';\r\nimport { useParams } from 'react-router-dom';\r\n// import { getCustomerProducts } from 'reducers/Product';\r\n\r\n\r\ninterface Props {\r\n  filterSelected: ProductSubCategory[];\r\n  subCategories: ProductSubCategory[];\r\n  activeProductCount: ProductCount;\r\n  categoryId: number[];\r\n  setColourId: Dispatch<SetStateAction<number[]>>;\r\n  setSizeId: Dispatch<SetStateAction<number[]>>;\r\n  setSubCategoryId: Dispatch<SetStateAction<number[]>>;\r\n  setStartPrice: Dispatch<SetStateAction<string>>;\r\n  setEndPrice: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\n\r\nconst CustomerProductFilter: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const {product} = useParams();\r\n  const [filterColourId, setFilterColourId] = useState<number[]>([]);\r\n  const [filterSizeId, setFilterSizeId] = useState<number[]>([]);\r\n  const [filterSubCategory, setFilterSubCategory] = useState<number[]>([]);\r\n  const [filterStartPrice, setFilterStartPrice] = useState('');\r\n  const [filterEndPrice, setFilterEndPrice] = useState('');\r\n  const [startPriceTimer, setStartPriceTimer] = useState(0);\r\n  const [endPriceTimer, setEndPriceTimer] = useState(0);\r\n  const productSize = useSelector<AppState, Size>(state => state.size);\r\n  const productColour = useSelector<AppState, Colour>(state => state.colour);\r\n\r\n  const getProductCount = (id=0) => {\r\n    let count = 0;\r\n    const activeProducts = props.activeProductCount.data\r\n    if(activeProducts){\r\n      const selectedColour = filterColourId.length > 0 ? filterColourId : productColour.data && productColour.data.length> 0 ?  productColour.data.map(({colourId}) => Number(colourId)) : [];\r\n      const selectedSize = filterSizeId.length > 0 ? filterSizeId : productSize.data && productSize.data.length > 0 ? productSize.data.map(({sizeId}) => Number(sizeId)) : [];\r\n      \r\n      const activeSubCat = activeProducts[id];\r\n      if(activeSubCat){\r\n        selectedColour.forEach((colour) => {\r\n          const activeColour = activeSubCat[colour];\r\n          if(activeColour){\r\n            selectedSize.forEach((size) => {\r\n              const activeSize = activeColour[size];\r\n              if(activeSize) {\r\n                count+= activeSize.quantity;\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    }\r\n    return count\r\n  }\r\n\r\n  const toggleAddingRemovingId = (ids: number[], newId: number) => {\r\n    const index = ids.indexOf(newId);\r\n    if (index > -1){\r\n      ids.splice(index,1);\r\n    } else {\r\n      ids.push(newId);\r\n    }\r\n    return ids;\r\n  }\r\n  const getFilteredProduct = (colour: number, size: number, subCategory?: number, startPrice?: string, endPrice?: string) => {\r\n    if(colour != 0){\r\n      const updatedColourFilter = toggleAddingRemovingId(filterColourId, colour);\r\n      setFilterColourId([...updatedColourFilter]);\r\n      props.setColourId([...updatedColourFilter]);\r\n    } else if (size != 0){\r\n      const updatedSizeFilter = toggleAddingRemovingId(filterSizeId, size);\r\n      setFilterSizeId([...updatedSizeFilter]);\r\n      props.setSizeId([...updatedSizeFilter]);\r\n    } else if (subCategory && subCategory != 0){\r\n      const updatedSubCategory = toggleAddingRemovingId(filterSubCategory, subCategory);\r\n      setFilterSubCategory([...updatedSubCategory]);\r\n      props.setSubCategoryId([...updatedSubCategory]);\r\n    } else if(startPrice!=='0' && !endPrice){\r\n      setFilterStartPrice(startPrice || '');\r\n      window.clearTimeout(startPriceTimer);\r\n      setStartPriceTimer(window.setTimeout(() => {\r\n        props.setStartPrice(startPrice || '')\r\n      },1000));\r\n    } else if(endPrice || (!endPrice && filterEndPrice)){\r\n      setFilterEndPrice(endPrice || '');\r\n      window.clearTimeout(endPriceTimer);\r\n      setEndPriceTimer(window.setTimeout(() => {\r\n        props.setEndPrice(endPrice || '')\r\n      },1000));\r\n    }\r\n  }\r\n\r\n  const restFilter = () => {\r\n    setFilterColourId([]);\r\n    props.setColourId([]);\r\n    setFilterSizeId([]);\r\n    props.setSizeId([]);\r\n    setFilterSubCategory([]);\r\n    props.setSubCategoryId([]);\r\n    setFilterStartPrice('');\r\n    props.setStartPrice('');\r\n    setFilterEndPrice('');\r\n    props.setEndPrice('')\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   console.log('filter on effect')\r\n  //   if(props.filterSelected && props.filterSelected.length > 0){\r\n  //     if(filterSubCategory.length> 0){\r\n  //       setFilterSubCategory([]);\r\n  //     }\r\n  //     const updatedSubCategory = toggleAddingRemovingId(filterSubCategory, Number(props.filterSelected[0].subCategoryId));\r\n  //     setFilterSubCategory([...updatedSubCategory]);\r\n  //   }\r\n  // },[props.filterSelected]);\r\n\r\n  useEffect(() => {\r\n    if(props.filterSelected.length>0){\r\n      // const updatedSubCategory = toggleAddingRemovingId(filterSubCategory, Number(props.filterSelected[0].subCategoryId));\r\n      setFilterSubCategory([Number(props.filterSelected[0].subCategoryId)]);\r\n      // props.setSubCategoryId([Number(props.filterSelected[0].subCategoryId)]);\r\n    }\r\n  }, [props.filterSelected]);\r\n\r\n  // useEffect(() => {\r\n  //   // dispatch(setDefaulState());\r\n  //   if(props.categoryId != 0){\r\n  //     console.log(filterColourId,filterSizeId, filterSubCategory)\r\n  //     console.log('effect filter')\r\n  //     dispatch(getCustomerProducts(0, pageSize, props.categoryId,filterSubCategory, filterColourId , filterSizeId, true));\r\n  //   }\r\n  // }, [filterColourId,filterSizeId, filterSubCategory,props.categoryId]);\r\n\r\n  return (\r\n    <aside className=\"uk-width-1-4 tm-aside-column tm-filters\" id=\"filters\" uk-offcanvas=\"overlay: true; container: false;\">\r\n      <div className=\"uk-offcanvas-bar uk-padding-remove\">\r\n        <div className=\"uk-card uk-card-default uk-card-small uk-flex uk-flex-column uk-height-1-1\">\r\n          <header className=\"uk-card-header uk-flex uk-flex-middle\">\r\n            <div className=\"uk-grid-small uk-flex-1\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand\"><h3>Filters</h3></div>\r\n              <button className=\"uk-offcanvas-close\" type=\"button\" uk-close=\"true\"></button>\r\n            </div>\r\n          </header>\r\n          <div className=\"uk-margin-remove uk-flex-1\" uk-accordion=\"multiple: true; targets: &gt; .js-accordion-section\" style={{ flexBasis: \"auto\" }}>\r\n            <section className=\"uk-card-body uk-open js-accordion-section\">\r\n              <h4 className=\"uk-accordion-title uk-margin-remove\">Prices</h4>\r\n              <div className=\"uk-accordion-content\">\r\n                <div className=\"uk-grid-small uk-child-width-1-2 uk-text-small\" uk-grid=\"true\">\r\n                  <div>\r\n                    <div className=\"uk-inline\">\r\n                      <span className=\"uk-form-icon uk-text-xsmall\">from</span>\r\n                      <input className=\"uk-input\" type=\"number\" placeholder=\"₹₹₹\"\r\n                      value={filterStartPrice} \r\n                      onChange={(e) => getFilteredProduct(0,0,0,e.currentTarget.value)}/>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"uk-inline\">\r\n                      <span className=\"uk-form-icon uk-text-xsmall\">to</span>\r\n                      <input className=\"uk-input\" type=\"text\" placeholder=\"₹₹₹\" \r\n                      value={filterEndPrice}\r\n                      onChange={(e) => getFilteredProduct(0,0,0,'0',e.currentTarget.value)}/>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n            {\r\n              props.subCategories.length > 0 &&\r\n              <section className=\"uk-card-body js-accordion-section uk-open\">\r\n              <h4 className=\"uk-accordion-title uk-margin-remove\">Categories</h4>\r\n              <div className=\"uk-accordion-content\">\r\n                <ul className=\"uk-list tm-scrollbox\">\r\n                  {\r\n                    props.subCategories.map((subcategory: ProductSubCategory) => {\r\n                      return (\r\n                        <li key={subcategory.code}>\r\n                          <input \r\n                            className=\"tm-checkbox\"\r\n                            id={\"subproduct\" + subcategory.code}\r\n                            name=\"subproduct\"\r\n                            value={subcategory.code}\r\n                            checked={filterSubCategory.indexOf(Number(subcategory.subCategoryId)) > -1}\r\n                            type=\"checkbox\"\r\n                            onChange={() => getFilteredProduct(0, 0, Number(subcategory.subCategoryId))}\r\n                            />\r\n                          <label htmlFor={\"subproduct\" + subcategory.code}>\r\n                            <span>{subcategory.code} <span className=\"uk-text-meta uk-text-small\">{getProductCount(Number(subcategory.subCategoryId))}</span></span>\r\n                          </label>\r\n                        </li>\r\n                      )\r\n                    })\r\n                  }\r\n                </ul>\r\n              </div>\r\n            </section>\r\n            }\r\n            \r\n            {\r\n              productColour.data && productColour.data.length > 0 &&\r\n              <section className=\"uk-card-body js-accordion-section uk-open\">\r\n                <h4 className=\"uk-accordion-title uk-margin-remove\">Colour</h4>\r\n                <div className=\"uk-accordion-content\">\r\n                  <ul className=\"uk-list tm-scrollbox\">\r\n                    {\r\n                      productColour.data.map((colour: ProductColor) => {\r\n                        return (\r\n                          <li key={colour.colourId}>\r\n                            <input \r\n                              className=\"tm-checkbox\" \r\n                              id={\"colour\" + colour.colourId} \r\n                              name=\"colour\" \r\n                              value={colour.colourId} \r\n                              type=\"checkbox\"\r\n                              checked={filterColourId.indexOf(Number(colour.colourId)) > -1}\r\n                              onChange={() => getFilteredProduct(Number(colour.colourId), 0, 0)} \r\n                            />\r\n                            <label htmlFor={\"colour\" + colour.colourId}>\r\n                              <span>{colour.value} </span>\r\n                            </label>\r\n                          </li>\r\n                        )\r\n                      })\r\n                    }\r\n                  </ul>\r\n                </div>\r\n              </section>\r\n            }\r\n            {\r\n              productSize.data && productSize.data.length > 0 &&\r\n              !(filterSize(productSize,props.categoryId).length === 1 && \r\n              filterSize(productSize,props.categoryId)[0].value.toLowerCase() === 'default') &&\r\n              <section className=\"uk-card-body js-accordion-section uk-open\">\r\n                <h4 className=\"uk-accordion-title uk-margin-remove\">Size</h4>\r\n                <div className=\"uk-accordion-content\">\r\n                  <ul className=\"uk-list tm-scrollbox\">\r\n                    {\r\n                      filterSize(productSize,props.categoryId).map((size: ProductSize) => {\r\n                        return (\r\n                          size.value.toLowerCase() !== 'default' &&\r\n                          <li key={size.sizeId}>\r\n                            <input \r\n                              className=\"tm-checkbox\"\r\n                              id={\"size\" + size.sizeId}\r\n                              name=\"size\"\r\n                              value={size.sizeId}\r\n                              type=\"checkbox\"\r\n                              checked={filterSizeId.indexOf(Number(size.sizeId)) > -1}\r\n                              onChange={() => getFilteredProduct(0,Number(size.sizeId), 0)} \r\n                              />\r\n                            <label htmlFor={\"size\" + size.sizeId}>\r\n                              <span>{size.value} </span>\r\n                            </label>\r\n                          </li>\r\n                        )\r\n                      })\r\n                    }\r\n                  </ul>\r\n                </div>\r\n              </section>\r\n            }\r\n            <div className=\"uk-card-body\">\r\n              <button className=\"uk-button uk-button-default uk-width-1-1\" onClick={() => restFilter()}><span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: close; ratio: .75;\"></span>Reset all filters</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerProductFilter\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProduct, setDefaulState } from 'reducers/Product';\r\nimport { AppState, addUpdateCart, Cart, UserLocation } from 'reducers';\r\nimport { ProductItem, CustomerCart } from 'types';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { CustomerProductDetailsLoading } from '.';\r\nimport { calculateUserDiscount, getCurrencyIcon, showINRUSD } from 'services';\r\nimport { QuickProductList } from 'components/shared';\r\n\r\ninterface cartQuantity {\r\n  [key: string]: string;\r\n};\r\n\r\n\r\ninterface Props {\r\n  mainSlider: JSX.Element[] | undefined;\r\n  smallSlider: JSX.Element[] | undefined;\r\n  productCategoryName: string;\r\n  name: string;\r\n  priceINR: string;\r\n  priceUSD: string;\r\n  description: string;\r\n  size: string;\r\n  sizeId: string;\r\n  quantity: string;\r\n  productId: string;\r\n  productDetailId: string;\r\n  imageName: string;\r\n  imagePath: string;\r\n  cartProductQuantity: cartQuantity;\r\n};\r\n\r\nconst CustomerProductDetails: React.FunctionComponent<Props> = (props: Props) => {\r\n  const {\r\n    priceINR,\r\n    priceUSD,\r\n    quantity,\r\n    size,\r\n    sizeId,\r\n    productId,\r\n    productDetailId,\r\n    imageName,\r\n    imagePath,\r\n    productCategoryName,\r\n    name,\r\n    cartProductQuantity\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const relatedProducts = useSelector<AppState, ProductItem[]>(state => state.relatedProduct.data || []);\r\n\r\n  const [pINR, setPINR] = useState('0');\r\n  const [pUSD, setPUSD] = useState('0');\r\n  const [pQuantity, setPQuantity] = useState(['']);\r\n  const [pSize, setPSize] = useState(['']);\r\n  const [pSizeId, setPSizeId] = useState(['']);\r\n  const [pDetailId, setPDetailId] = useState(['']);\r\n  const [selectedSize, setSelectedSize] = useState('0');\r\n  const [selectedQuantity, setSelectedQuantity] = useState('1');\r\n  const [selectedProductDetailId, setSelectedProductDetailId] = useState('0');\r\n  const [maxQuantity, setMaxQuantity] = useState('0');\r\n\r\n  useEffect(() => {\r\n    setPINR(priceINR.split(',')[0]);\r\n    setPUSD(priceUSD.split(',')[0]);\r\n  }, [priceINR, priceUSD]);\r\n\r\n\r\n  useEffect(() => {\r\n    setPQuantity(quantity.split(','));\r\n    setPSize(size.split(','));\r\n    setPSizeId(sizeId.split(','));\r\n    setSelectedSize(sizeId.split(',')[0].toString());\r\n    const defaultProductDetail = productDetailId.split(',')[0];\r\n    setMaxQuantity((Number(quantity.split(',')[0]) - Number(cartProductQuantity[defaultProductDetail.toString()] || 0)).toString());\r\n    setPDetailId(productDetailId.split(','));\r\n    setSelectedProductDetailId(defaultProductDetail);\r\n  }, [quantity, size, sizeId, productDetailId]);\r\n\r\n  useEffect(() => {\r\n    if (maxQuantity !== '0') {\r\n      const productIndex = pDetailId.indexOf(selectedProductDetailId);\r\n      setMaxQuantity((Number(pQuantity[productIndex]) - Number(cartProductQuantity[selectedProductDetailId] || '0')).toString());\r\n      onChangeQuantity(cartProductQuantity[selectedProductDetailId] || '0', Number(pQuantity[productIndex]) - Number(cartProductQuantity[selectedProductDetailId]));\r\n    }\r\n  }, [cartProductQuantity]);\r\n\r\n  const toggleQuantity = (isIncrement: boolean) => {\r\n    if (isIncrement) {\r\n      if (Number(selectedQuantity) <= Number(maxQuantity)) {\r\n        setSelectedQuantity((Number(selectedQuantity) + 1).toString());\r\n      }\r\n    } else {\r\n      if (selectedQuantity !== '1') {\r\n        setSelectedQuantity((Number(selectedQuantity) - 1).toString());\r\n      }\r\n    }\r\n  }\r\n\r\n  const setSize = (sizeId: string) => {\r\n    setSelectedSize(sizeId);\r\n    const selectedIndex = pSizeId.indexOf(sizeId);\r\n    const maxQ = pQuantity[selectedIndex];\r\n    const pdId = pDetailId[selectedIndex];\r\n    setSelectedProductDetailId(pdId);\r\n    setMaxQuantity((Number(maxQ) - Number(cartProductQuantity[pdId] || 0)).toString());\r\n    if (Number(selectedQuantity) > Number(maxQ)) {\r\n      setSelectedQuantity(maxQ);\r\n    }\r\n  }\r\n\r\n  const onChangeQuantity = (quantity: string, maxQaun = -1) => {\r\n    if (Number(quantity) > Number(maxQaun !== -1 ? maxQaun : maxQuantity)) {\r\n      setSelectedQuantity(Number(maxQaun !== -1 ? maxQaun : maxQuantity).toString())\r\n    } else {\r\n      setSelectedQuantity(Number(quantity).toString())\r\n    }\r\n  };\r\n\r\n  const onBlurQuantity = (quantity: string) => {\r\n    if (quantity === '' || Number(quantity) === 0) {\r\n      setSelectedQuantity('1')\r\n    }\r\n  };\r\n\r\n  const addToCart = () => {\r\n    if(!userData.data?.userId){\r\n      const cartData = {\r\n        productDetailId: selectedProductDetailId,\r\n        productQuantity: selectedQuantity,\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: selectedProductDetailId.toString(),\r\n        productImage: imageName,\r\n        productImagePath: imagePath,\r\n        productName: name,\r\n        subcategory: productCategoryName,\r\n        productPrice: showINRUSD(userLocation.data || 'IN', {priceINR: pINR, priceUSD: pUSD}),\r\n        productId: productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, false))\r\n    }else{\r\n      const cartData = {\r\n        productDetailId: selectedProductDetailId,\r\n        productQuantity: selectedQuantity,\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: '0',\r\n        productImage: imageName,\r\n        productImagePath: imagePath,\r\n        productName: name,\r\n        subcategory: productCategoryName,\r\n        productPrice: '0',\r\n        productId: productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, true))\r\n    }\r\n  }\r\n\r\n  const checkForDefaultSize = (sizeList: string[]) => {\r\n    return sizeList.length === 1 && sizeList[0].toLowerCase() === 'default';\r\n  }\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a onClick={() => history.push('/')}>Home</a></li>\r\n                <li><span>Product</span></li>\r\n                <li><a onClick={()=> history.push('/product/'+props.productCategoryName)}>{props.productCategoryName}</a></li>\r\n              </ul>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom\">{props.name}</h1>\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n                <div>\r\n                  <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n                    <div className=\"uk-grid-small uk-grid-collapse uk-grid-match\" uk-grid=\"true\">\r\n                      <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n                        <div className=\"uk-grid-collapse uk-child-width-1-1\" uk-slideshow=\"finite: true; ratio: 4:3;\" uk-grid=\"true\">\r\n                          <div>\r\n                            <ul className=\"uk-slideshow-items\" uk-lightbox=\"true\">\r\n                              {\r\n                                props.mainSlider\r\n                              }\r\n                            </ul>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"uk-card-body uk-flex uk-flex-center\">\r\n                              <div className=\"uk-width-1-2 uk-visible@s\">\r\n                                <div uk-slider=\"finite: true\">\r\n                                  <div className=\"uk-position-relative\">\r\n                                    <div className=\"uk-slider-container\">\r\n                                      <ul className=\"tm-slider-items uk-slider-items uk-child-width-1-4 uk-grid uk-grid-small\">\r\n                                        {\r\n                                          props.smallSlider\r\n                                        }\r\n                                      </ul>\r\n                                      <div>\r\n                                        <a className=\"uk-position-center-left-out uk-position-small\" href=\"#\" uk-slider-item=\"previous\" uk-slidenav-previous=\"true\"></a>\r\n                                        <a className=\"uk-position-center-right-out uk-position-small\" href=\"#\" uk-slider-item=\"next\" uk-slidenav-next=\"true\"></a>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <ul className=\"uk-slideshow-nav uk-dotnav uk-hidden@s\"></ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"uk-width-1-1 uk-width-1-3@m tm-product-info\">\r\n                        <div className=\"uk-card-body\">\r\n                          <div className=\"uk-margin\">\r\n                            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"uk-margin\">\r\n                            <div className=\"uk-padding-small uk-background-primary-lighten uk-border-rounded\">\r\n                              <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                                <div>\r\n                                  {\r\n                                    userData.data?.discount && userData.data?.discount !== '0' &&\r\n                                    <del className=\"uk-text-meta\">{getCurrencyIcon(userLocation.data || 'IN')} {showINRUSD(userLocation.data || 'IN', {priceINR: pINR, priceUSD: pUSD})}</del>\r\n                                  }\r\n                                  <div className=\"tm-product-price\">{getCurrencyIcon(userLocation.data || 'IN')} {calculateUserDiscount(userData.data?.discount || '0', showINRUSD(userLocation.data || 'IN', {priceINR: pINR, priceUSD: pUSD}) )}</div>\r\n                                </div>\r\n                                <div>\r\n                                  <div className=\"uk-grid-small uk-child-width-1-2\" uk-grid=\"true\">\r\n                                    <div className={`${checkForDefaultSize(pSize) ? 'default-product-size' : ''}`}>\r\n                                      <label>\r\n                                        <div className=\"uk-form-label\">Size</div>\r\n                                        <select className=\"uk-select\"\r\n                                          value={selectedSize}\r\n                                          id=\"selectedSize\"\r\n                                          onChange={(e) => { setSize(e.currentTarget.value) }}>\r\n                                          {\r\n                                            pSize.map((size, index) => {\r\n                                              return <option key={index} value={pSizeId[index]}>{size}</option>\r\n                                            })\r\n                                          }\r\n\r\n                                        </select>\r\n                                      </label>\r\n                                    </div>\r\n                                    <div>\r\n                                      <label>\r\n                                        <div className=\"uk-form-label\">Quantity {selectedSize !== '0' && <span className=\"uk-text-meta uk-text-primary\">(Max {maxQuantity})</span>}</div>\r\n                                        <div>\r\n                                          <div className=\"uk-inline\">\r\n                                            {Number(selectedQuantity) === 1 && <a className=\"uk-form-icon\"></a>}\r\n                                            {Number(selectedQuantity) > 1 && <a className=\"uk-form-icon\" onClick={() => toggleQuantity(false)} uk-icon=\"icon: minus\"></a>}\r\n                                            {Number(selectedQuantity) < Number(maxQuantity) && <a className=\"uk-form-icon uk-form-icon-flip\" onClick={() => toggleQuantity(true)} uk-icon=\"icon: plus\"></a>}\r\n                                            {Number(selectedQuantity) === Number(maxQuantity) && <a className=\"uk-form-icon uk-form-icon-flip\"></a>}\r\n                                            <input className=\"uk-input uk-text-center\"\r\n                                              onChange={(e) => onChangeQuantity(e.currentTarget.value)}\r\n                                              onBlur={(e) => onBlurQuantity(e.currentTarget.value)}\r\n                                              type=\"number\"\r\n                                              value={selectedQuantity} />\r\n                                          </div>\r\n                                        </div>\r\n                                      </label>\r\n                                    </div>\r\n                                    <div className={`${checkForDefaultSize(pSize) ? 'single-size-cart-button' : ''}`}>\r\n                                      <button\r\n                                        disabled={Number(maxQuantity) === 0}\r\n                                        className=\"uk-button uk-button-primary tm-product-add-button tm-shine js-add-to-cart\"\r\n                                        onClick={() => addToCart()}>\r\n                                        add to cart\r\n                                        </button>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"uk-margin\">\r\n                            <div className=\"uk-padding-small uk-background-muted uk-border-rounded\">\r\n                              <div className=\"uk-grid-small uk-child-width-1-1 uk-text-small\" uk-grid=\"true\">\r\n                                <div>\r\n                                  <div className=\"uk-grid-collapse\" uk-grid=\"true\">\r\n                                    <span className=\"uk-margin-xsmall-right\" uk-icon=\"cart\"></span>\r\n                                    <div>\r\n                                      <div className=\"uk-text-bolder\">Delivery</div>\r\n                                      <div className=\"uk-text-xsmall uk-text-muted\">In stock, free, tomorrow</div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div>\r\n                                  <div className=\"uk-grid-collapse\" uk-grid=\"true\">\r\n                                    <span className=\"uk-margin-xsmall-right\" uk-icon=\"location\"></span>\r\n                                    <div>\r\n                                      <div className=\"uk-text-bolder\">Pick up from store</div>\r\n                                      <div className=\"uk-text-xsmall uk-text-muted\">In stock, free, tomorrow</div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"uk-width-1-1 tm-product-description\" id=\"description\">\r\n                        <header>\r\n                          <nav className=\"tm-product-nav\" uk-sticky=\"offset: 60; bottom: #description; cls-active: tm-product-nav-fixed;\">\r\n                            <ul className=\"uk-subnav uk-subnav-pill js-product-switcher\" uk-switcher=\"connect: .js-tabs\">\r\n                              <li><a className=\"js-scroll-to-description\" href=\"#description\">Overview</a></li>\r\n                            </ul>\r\n                          </nav>\r\n                        </header>\r\n                        <div className=\"uk-card-body\">\r\n                          <div className=\"uk-switcher js-product-switcher js-tabs\">\r\n                            <section>\r\n                              <article className=\"uk-article\">\r\n                                <div className=\"uk-article-body\">\r\n                                  <p>\r\n                                    {props.description}\r\n                                  </p>\r\n\r\n                                </div>\r\n                              </article>\r\n                            </section>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              {\r\n                relatedProducts.length > 0 &&\r\n                <QuickProductList productList={relatedProducts}/>\r\n              }\r\n              \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerProductDetails\r\n}","import React from 'react';\r\n\r\nconst CustomerProductDetailsLoading: React.FunctionComponent = () => {\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a href=\"#\">Home</a></li>\r\n                <li><span>Product</span></li>\r\n              </ul>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom\"></h1>\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n                <div>\r\n                  <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n                    <div className=\"uk-grid-small uk-grid-collapse uk-grid-match\" uk-grid=\"true\">\r\n                      <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n                        <div className=\"uk-grid-collapse uk-child-width-1-1\" uk-slideshow=\"finite: true; ratio: 4:3;\" uk-grid=\"true\">\r\n                          <div>\r\n                            {/* <div className=\"ph-item\">\r\n                            <div className=\"ph-col-12\">\r\n                              <div className=\"ph-picture-big\"></div>\r\n                            </div>\r\n                          </div> */}\r\n                            <ul className=\"uk-slideshow-items\" uk-lightbox=\"true\">\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"uk-card-body uk-flex uk-flex-center\">\r\n                              <div className=\"uk-width-1-2 uk-visible@s\">\r\n                                <div uk-slider=\"finite: true\">\r\n                                  <div className=\"uk-position-relative\">\r\n                                    <div className=\"uk-slider-container\">\r\n                                      <ul className=\"tm-slider-items uk-slider-items uk-child-width-1-4 uk-grid uk-grid-small loading-small-slider\">\r\n                                        <li uk-slideshow-item=\"0\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                        <li uk-slideshow-item=\"1\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                        <li uk-slideshow-item=\"2\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                        <li uk-slideshow-item=\"3\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                        <li uk-slideshow-item=\"4\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                      </ul>\r\n                                      {/* {\r\n                                        <div className=\"ph-item\">\r\n                                          <div className=\"ph-col-12\">\r\n                                            <div className=\"ph-picture\"></div>\r\n                                          </div>\r\n                                        </div>\r\n                                        // getFileNameAndPathSmall(imageNames, imagePaths)\r\n                                      } */}\r\n                                      <div>\r\n                                        <a className=\"uk-position-center-left-out uk-position-small\" href=\"#\" uk-slider-item=\"previous\" uk-slidenav-previous=\"true\"></a>\r\n                                        <a className=\"uk-position-center-right-out uk-position-small\" href=\"#\" uk-slider-item=\"next\" uk-slidenav-next=\"true\"></a>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <ul className=\"uk-slideshow-nav uk-dotnav uk-hidden@s\"></ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"uk-width-1-1 uk-width-1-3@m tm-product-info\">\r\n                        <div className=\"uk-card-body\">\r\n                          {/* <div className=\"uk-margin\">\r\n                            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                              <div><span className=\"uk-label uk-label-warning uk-margin-xsmall-right\">top selling</span><span className=\"uk-label uk-label-danger uk-margin-xsmall-right\">trade-in</span></div>\r\n                            </div>\r\n                          </div> */}\r\n                          <div className=\"uk-margin\">\r\n                            <div className=\"uk-padding-small uk-background-primary-lighten uk-border-rounded\">\r\n                              <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                                <div>\r\n                                  {/* <del className=\"uk-text-meta\">$1899.00</del> */}\r\n                                  <div className=\"tm-product-price\"></div>\r\n                                </div>\r\n                                <div>\r\n                                  <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                                    <div>\r\n                                      <a uk-icon=\"icon: minus; ratio: .75\"></a>\r\n                                      <input className=\"uk-input tm-quantity-input\" id=\"product-1\" type=\"text\" onChange={()=>{}} value=\"1\" />\r\n                                      <a uk-icon=\"icon: plus; ratio: .75\"></a>\r\n                                    </div>\r\n                                    <div><button className=\"uk-button uk-button-primary tm-product-add-button tm-shine js-add-to-cart\" disabled={true}>add to cart</button></div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"uk-margin\">\r\n                            <div className=\"uk-padding-small uk-background-muted uk-border-rounded\">\r\n                              <div className=\"uk-grid-small uk-child-width-1-1 uk-text-small\" uk-grid=\"true\">\r\n                                <div>\r\n                                  <div className=\"uk-grid-collapse\" uk-grid=\"true\">\r\n                                    <span className=\"uk-margin-xsmall-right\" uk-icon=\"cart\"></span>\r\n                                    <div>\r\n                                      <div className=\"uk-text-bolder\">Delivery</div>\r\n                                      <div className=\"uk-text-xsmall uk-text-muted\">In stock, free, tomorrow</div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div>\r\n                                  <div className=\"uk-grid-collapse\" uk-grid=\"true\">\r\n                                    <span className=\"uk-margin-xsmall-right\" uk-icon=\"location\"></span>\r\n                                    <div>\r\n                                      <div className=\"uk-text-bolder\">Pick up from store</div>\r\n                                      <div className=\"uk-text-xsmall uk-text-muted\">In stock, free, tomorrow</div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"uk-width-1-1 tm-product-description\" id=\"description\">\r\n                        <header>\r\n                          <nav className=\"tm-product-nav\" uk-sticky=\"offset: 60; bottom: #description; cls-active: tm-product-nav-fixed;\">\r\n                            <ul className=\"uk-subnav uk-subnav-pill js-product-switcher\" uk-switcher=\"connect: .js-tabs\">\r\n                              <li><a className=\"js-scroll-to-description\" href=\"#description\">Overview</a></li>\r\n                            </ul>\r\n                          </nav>\r\n                        </header>\r\n                        <div className=\"uk-card-body\">\r\n                          <div className=\"uk-switcher js-product-switcher js-tabs\">\r\n                            <section>\r\n                              <article className=\"uk-article\">\r\n                                <div className=\"uk-article-body\">\r\n                                  <p>\r\n\r\n                                  </p>\r\n\r\n                                </div>\r\n                              </article>\r\n                            </section>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerProductDetailsLoading\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProduct } from 'reducers/Product';\r\nimport { AppState, Cart, getRelatedProduct } from 'reducers';\r\nimport { ProductItem } from 'types';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { CustomerProductDetails } from './CustomerProductDetails';\r\nimport { CustomerProductDetailsLoading } from './CustomerProductDetailsLoading';\r\n\r\ninterface cartQuantity {\r\n  [key: string]: string;\r\n};\r\n\r\nconst CustomerProductDetailsConstainer: React.FunctionComponent = () => {\r\n\r\n  const { product, queryProductId } = useParams();\r\n  const [ mainSlider, setMainSlider] = useState<JSX.Element[] | undefined>(undefined);\r\n  const [ smallSlider, setSmallSlider] = useState<JSX.Element[] | undefined>(undefined);\r\n  const [cartProductQuantity, setCartProductQuantity] = useState<cartQuantity>({});\r\n  const [cartProductFlag, setCartProductFlag] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getProduct(Number(queryProductId)));\r\n  }, [queryProductId]);\r\n\r\n  const {\r\n    name, description, productCategoryId,\r\n    subCategory, quantity,\r\n    priceINR, priceUSD, productId, productCategoryName,\r\n    sizeId, size, colourId, imageNames, imagePaths, productDetailId,\r\n  } = useSelector<AppState, ProductItem>(state => state.product.singleData || {} as ProductItem);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n  const getFileNameAndPathLarge = (fileName?: string, filePath?: string) => {\r\n    if (fileName && filePath && fileName.length > 0 && filePath.length > 0) {\r\n      const fileNames = fileName.split(', ');\r\n      const filePaths = filePath.split(', ');\r\n\r\n      return filePaths.map((path: string, index: number) => {\r\n        return <li key={index}>\r\n          <a className=\"uk-card-body tm-media-box tm-media-box-zoom\" href={serverImagePath + path}>\r\n            <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + path} alt={fileNames[index]} /></figure>\r\n          </a>\r\n        </li>\r\n      })\r\n    }\r\n  };\r\n\r\n  const getFileNameAndPathSmall = (fileName?: string, filePath?: string) => {\r\n    if (fileName && filePath && fileName.length > 0 && filePath.length > 0) {\r\n      const fileNames = fileName.split(', ');\r\n      const filePaths = filePath.split(', ');\r\n      return (\r\n        <ul className=\"tm-slider-items uk-slider-items uk-child-width-1-4 uk-grid uk-grid-small\">\r\n          {\r\n            filePaths.map((path: string, index: number) => {\r\n              return <li uk-slideshow-item={index} tabIndex={-1} key={index}>\r\n                <div className=\"tm-ratio tm-ratio-1-1\">\r\n                  <a className=\"tm-media-box tm-media-box-frame\" href=\"#\">\r\n                    <figure className=\"tm-media-box-wrap\">\r\n                      <img src={serverImagePath + path} alt={fileNames[index]} />\r\n                    </figure>\r\n                  </a>\r\n                </div>\r\n              </li>\r\n            })\r\n          }\r\n        </ul>\r\n      )\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{\r\n      if (imageNames && imagePaths && imageNames.length > 0 && imagePaths.length > 0) {\r\n        const imageName = imageNames.split(',');\r\n        const imagePath = imagePaths.split(',');\r\n  \r\n        setMainSlider(imagePath.map((path: string, index: number) => {\r\n          return <li key={index}>\r\n            <a className=\"uk-card-body tm-media-box tm-media-box-zoom\" href={serverImagePath + path}>\r\n              <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + path} alt={imageName[index]} /></figure>\r\n            </a>\r\n          </li>\r\n        }))\r\n\r\n        setSmallSlider(imagePath.map((path: string, index: number) => {\r\n          return <li uk-slideshow-item={index} tabIndex={-1} key={index}>\r\n            <div className=\"tm-ratio tm-ratio-1-1\">\r\n              <a className=\"tm-media-box tm-media-box-frame\" href=\"#\">\r\n                <figure className=\"tm-media-box-wrap\">\r\n                  <img src={serverImagePath + path} alt={imageName[index]} />\r\n                </figure>\r\n              </a>\r\n            </div>\r\n          </li>\r\n        }))\r\n      }\r\n  },[imageNames,imagePaths])\r\n\r\n  useEffect(()=>{\r\n    if(cart.data){\r\n      const cartProductCount = {} as cartQuantity;\r\n      cart.data.forEach(({productDetailId,productQuantity}) => {\r\n        cartProductCount[productDetailId] = productQuantity;\r\n      });\r\n      setCartProductQuantity(cartProductCount);\r\n      setCartProductFlag(true);\r\n    }\r\n  },[cart.data]);\r\n\r\n  useEffect(() => {\r\n    if(subCategory && queryProductId){\r\n      dispatch(getRelatedProduct(subCategory, Number(queryProductId)));\r\n    }\r\n  },[subCategory, queryProductId]);\r\n\r\n  return (\r\n    smallSlider && cartProductFlag  ? \r\n    <CustomerProductDetails \r\n      smallSlider={smallSlider}\r\n      mainSlider={mainSlider}\r\n      description={description || ''}\r\n      name={name || ''}\r\n      priceINR={priceINR || ''}\r\n      priceUSD={priceUSD || ''}\r\n      productCategoryName={productCategoryName || ''}\r\n      quantity={quantity || ''}\r\n      sizeId={sizeId || ''}\r\n      size={size || ''}\r\n      productId={productId || ''}\r\n      productDetailId={productDetailId || ''}\r\n      imageName={imageNames && imageNames.split(',')[0] || ''}\r\n      imagePath={imagePaths && imagePaths.split(',')[0] || ''}\r\n      cartProductQuantity={cartProductQuantity}\r\n      /> \r\n    : <CustomerProductDetailsLoading/>\r\n  )\r\n};\r\n\r\nexport {\r\n  CustomerProductDetailsConstainer\r\n}","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { getCart, AppState, Cart, deleteCartItem, addUpdateCart, UserLocation, validateCoupon, Coupon, updateCartQuantity } from 'reducers';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { CustomerCart } from 'types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getCurrencyIcon } from 'services';\r\n\r\n\r\ninterface Quantity {\r\n  [key: string]: string\r\n}\r\nconst CartDetails: React.FunctionComponent = () => {\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [quantity, setQuantity] = useState<Quantity>();\r\n  const [enteredCoupon, setEnteredCoupon] = useState('');\r\n  const [quantityCheckMessage, setQuantityCheckMessage] = useState('Getting your data.');\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const couponStatus = useSelector<AppState, Coupon>(state => state.coupon);\r\n  const [deboucedId, setDeboucedId] = useState('');\r\n  const [quantityChanged, setQuantityChanged] = useState(false);\r\n  const [quantityChangedProductId, setQuantityChangedProductId] = useState('');\r\n  const orderQuantityCheckButtonRef = useRef<HTMLButtonElement>(null);\r\n  const orderQuantityCheckModalRef = useRef<HTMLDivElement>(null);\r\n  \r\n\r\n  useEffect(() => {\r\n    dispatch(getCart());\r\n    if (couponStatus.data?.length === 1) {\r\n      setEnteredCoupon(couponStatus.data[0].code);\r\n    }\r\n  }, []);\r\n\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n\r\n  useEffect(() => {\r\n    let qt: Quantity = {};\r\n    if (cart.data && cart.data.length > 0) {\r\n      cart.data.forEach((product: CustomerCart) => {\r\n        qt[product.productDetailId] = product.productQuantity || '0';\r\n      });\r\n      setQuantity(qt);\r\n      checkForAvailableQuantity(cart.data)\r\n    }\r\n  }, [cart.data]);\r\n  const deleteCart = (cartItem: CustomerCart) => {\r\n    dispatch(deleteCartItem(cartItem));\r\n  };\r\n\r\n  const checkForAvailableQuantity = (cartData: CustomerCart[]) => {\r\n    const orderDetailId = cartData.map((cartItem) => {\r\n      if (Number(cartItem.availableQuantity) < Number(cartItem.productQuantity)) {\r\n        setQuantityChanged(true);\r\n        return cartItem.cartId\r\n      } else {\r\n        return 0\r\n      }\r\n    })\r\n    setQuantityChangedProductId(orderDetailId.toString());\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(quantityChanged){\r\n      orderQuantityCheckButtonRef.current?.click();\r\n      dispatch(updateCartQuantity(quantityChangedProductId));\r\n    }\r\n  },[quantityChanged])\r\n\r\n  useEffect(() => {\r\n    if(cart._quantityUpdate && orderQuantityCheckModalRef.current?.getBoundingClientRect().top !== 0) {\r\n      dispatch(getCart());\r\n      setQuantityCheckMessage('We updated your cart based on the product availability.');\r\n      setTimeout(() => {\r\n        orderQuantityCheckButtonRef.current?.click();\r\n      },5000)\r\n      \r\n    }\r\n  },[cart._quantityUpdate])\r\n\r\n  const updateCart = (cartId: string, quantity: string, productDetailId: string) => {\r\n    dispatch(addUpdateCart({\r\n      productDetailId,\r\n      productQuantity: quantity,\r\n      currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n      cartId,\r\n      productPrice: '',\r\n      productId: ''\r\n    }, true));\r\n  };\r\n\r\n  const updateQantity = (cartId: string, productDetailId: string, availableQuantity: string, isIncrement: boolean, changedQuantity?: string) => {\r\n    if (quantity) {\r\n      if (changedQuantity) {\r\n        let chqty = changedQuantity\r\n        if (Number(chqty) > Number(availableQuantity)) {\r\n          chqty = availableQuantity\r\n        }\r\n        const newQuantity = { ...quantity, ...{ [productDetailId]: chqty.toString() } };\r\n        setDeboucedId(cartId + '-' + window.setTimeout(() => {\r\n          updateCart(cartId, chqty.toString(), productDetailId)\r\n        }, 500).toString());\r\n        setQuantity(newQuantity);\r\n      } else if (isIncrement) {\r\n        let updatedQuantity = Number(quantity[productDetailId]) + 1;\r\n        if (updatedQuantity > Number(availableQuantity)) {\r\n          updatedQuantity = Number(availableQuantity)\r\n        }\r\n        const newQuantity = { ...quantity, ...{ [productDetailId]: updatedQuantity.toString() } };\r\n        setDeboucedId(cartId + '-' + window.setTimeout(() => {\r\n          updateCart(cartId, updatedQuantity.toString(), productDetailId)\r\n        }, 500).toString());\r\n        setQuantity(newQuantity);\r\n      } else {\r\n        let updatedQuantity = Number(quantity[productDetailId]) - 1;\r\n        if (updatedQuantity < 0) {\r\n          updatedQuantity = 0\r\n        }\r\n        const newQuantity = { ...quantity, ...{ [productDetailId]: updatedQuantity.toString() } };\r\n        setDeboucedId(cartId + '-' + window.setTimeout(() => {\r\n          updateCart(cartId, updatedQuantity.toString(), productDetailId)\r\n        }, 500).toString());\r\n        setQuantity(newQuantity);\r\n      }\r\n\r\n      if (deboucedId !== '' && deboucedId.split('-')[0] === cartId.toString()) {\r\n        window.clearTimeout(Number(deboucedId.split('-')[1]));\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkCouponValidity = () => {\r\n    dispatch(validateCoupon(enteredCoupon));\r\n  }\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <header className=\"uk-card-header uk-text-uppercase uk-text-muted uk-text-center uk-text-small uk-visible@m\">\r\n          <div className=\"uk-grid-small uk-child-width-1-2\" uk-grid=\"true\">\r\n            <div>product</div>\r\n            <div>\r\n              <div className=\"uk-grid-small uk-child-width-expand\" uk-grid=\"true\">\r\n                <div>price</div>\r\n                <div className=\"tm-quantity-column\">quantity</div>\r\n                <div>sum</div>\r\n                <div className=\"uk-width-auto\"><div style={{ width: \"20px\" }}></div></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        {\r\n          cart.data && cart.data.map((cartItem: CustomerCart, index: number) => {\r\n            return <div className=\"uk-card-body\" key={index}>\r\n              <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@m uk-flex-middle\" uk-grid=\"true\">\r\n                <div>\r\n                  <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                    <div className=\"uk-width-1-3\">\r\n                      <div className=\"tm-ratio tm-ratio-4-3\">\r\n                        <a className=\"tm-media-box\" onClick={() => history.push('/productDetails/' + cartItem.productId)}>\r\n                          <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + cartItem.productImagePath} alt='Apple MacBook Pro 15\" Touch Bar MPTU2LL/A 256GB (Silver)' /></figure>\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"uk-width-expand\">\r\n                      <div className=\"uk-text-meta\">{cartItem.subcategory}</div>\r\n                      <a className=\"uk-link-heading\" onClick={() => history.push('/productDetails/' + cartItem.productId)}>{cartItem.productName}</a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-expand@s uk-text-center\" uk-grid=\"true\">\r\n                    <div>\r\n                      <div className=\"uk-text-muted uk-hidden@m\">Price</div>\r\n                      <div>{getCurrencyIcon(userLocation.data || 'IN')} {cartItem.productPrice}</div>\r\n                    </div>\r\n                    <div>\r\n                      <label className=\"uk-text-center\">\r\n                        <div className=\"cart-quantity cart-margin-auto\">\r\n                          <div className=\"uk-inline\">\r\n                            <a className=\"uk-form-icon\" uk-icon=\"icon: minus\"\r\n                              onClick={() => {\r\n                                updateQantity(cartItem.cartId, cartItem.productDetailId, cartItem.availableQuantity || '0', false)\r\n                              }}>\r\n                            </a>\r\n                            <a className=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: plus\"\r\n                              onClick={() => {\r\n                                updateQantity(cartItem.cartId, cartItem.productDetailId, cartItem.availableQuantity || '0', true)\r\n                              }}>\r\n                            </a>\r\n                            <input className=\"uk-input uk-text-center\"\r\n                              type=\"number\"\r\n                              value={quantity && quantity[cartItem.productDetailId] || 0}\r\n                              onChange={(e) => {\r\n                                updateQantity(cartItem.cartId, cartItem.productDetailId, cartItem.availableQuantity || '0', false, e.currentTarget.value)\r\n                              }} />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"uk-form-label\"><span className=\"uk-text-meta uk-text-primary\">(Max {cartItem.availableQuantity})</span></div>\r\n                      </label>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <div className=\"uk-text-muted uk-hidden@m\">Sum</div>\r\n                      <div>{getCurrencyIcon(userLocation.data || 'IN')} {cartItem.totalPrice}</div>\r\n                    </div>\r\n                    <div className=\"uk-width-auto@s\">\r\n                      {cart._isLoading && <span uk-spinner=\"true\"></span>}\r\n                      {!cart._isLoading && <a className=\"uk-text-danger\" onClick={() => deleteCart(cartItem)} uk-tooltip=\"Remove\"><span uk-icon=\"trash\"></span></a>}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          })\r\n        }\r\n        <div className=\"uk-card-footer\">\r\n          <label>\r\n            <span className=\"uk-form-label uk-margin-small-right\">Promo Code</span>\r\n            <div className=\"uk-inline\">\r\n              <a className=\"uk-form-icon uk-form-icon-flip\" onClick={() => checkCouponValidity()} uk-icon=\"arrow-right\"></a>\r\n              <input className=\"uk-input uk-form-width-small\" type=\"text\"\r\n                value={enteredCoupon}\r\n                onChange={(e) => setEnteredCoupon(e.currentTarget.value)}\r\n              />\r\n            </div>\r\n            {couponStatus._isSuccess && <span className=\"login-error-message coupon-message uk-label uk-label-success\"><span uk-icon=\"check\"></span> Coupon is valid !</span>}\r\n            {couponStatus._isError && <span className=\"login-error-message coupon-message uk-label uk-label-danger\"><span uk-icon=\"ban\"></span> Coupon is Invalid.</span>}\r\n          </label>\r\n        </div>\r\n        <button ref={orderQuantityCheckButtonRef} id=\"payment-loading\" uk-toggle=\"target: #my-id\" type=\"button\"></button>\r\n        <div id=\"my-id\" uk-modal=\"true; esc-close: false; bg-close: false\">\r\n          <div className=\"uk-modal-dialog uk-modal-body uk-margin-auto-vertical\">\r\n            {\r\n              !cart._isLoading && <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n            }\r\n            <div ref={orderQuantityCheckModalRef}  className=\"uk-modal-body uk-nav-center\">\r\n              <p>{quantityCheckMessage}</p>\r\n              {\r\n                cart._isLoading && <div uk-spinner=\"true\"></div>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport {\r\n  CartDetails\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState, Cart, UserLocation } from 'reducers';\r\nimport { CustomerCart, ProductCoupon } from 'types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getCurrencyIcon, calculateUserDiscountPrice, calculateUserDiscount } from 'services';\r\n\r\nconst CartPrice: React.FunctionComponent = () => {\r\n\r\n  const [cartTotal, setCartTotal] = useState(0);\r\n  const [userDiscountTotal, setUserDiscountTotal] = useState('0');\r\n  const [userCouponTotal, setUserCouponTotal] = useState('0');\r\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState('0');\r\n  const [discountedTotal, setDiscountedTotal] = useState('0');\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const couponData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (cart.data && cart.data.length > 0) {\r\n      let total = 0;\r\n      cart.data.forEach((cart: CustomerCart) => {\r\n        if (cart.totalPrice) {\r\n          total += Number(cart.totalPrice);\r\n        }\r\n      });\r\n      setCartTotal(total);\r\n      if (couponData.length === 1) {\r\n        let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', total.toString());\r\n        let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', total.toString());\r\n        let couponPrice = calculateUserDiscountPrice(couponData[0].value, priceAfterDiscount.toString());\r\n        let priceAfterCoupon = calculateUserDiscount(couponData[0].value || '0', priceAfterDiscount.toString());\r\n        setDiscountedTotal(priceAfterDiscount);\r\n        setUserDiscountTotal(discountPrice);\r\n        setUserCouponTotal(couponPrice);\r\n        setTotalAfterDiscount(priceAfterCoupon);\r\n      } else {\r\n        let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', total.toString());\r\n        let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', total.toString());\r\n        setUserDiscountTotal(discountPrice);\r\n        setTotalAfterDiscount(priceAfterDiscount);\r\n      }\r\n    } else {\r\n      setCartTotal(0);\r\n      setUserDiscountTotal('0');\r\n      setTotalAfterDiscount('0');\r\n      setDiscountedTotal('0');\r\n      setUserCouponTotal('0');\r\n    }\r\n  }, [cart.data,couponData]);\r\n\r\n  return (\r\n    <div className=\"uk-width-1-1 tm-aside-column uk-width-1-4@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\" uk-sticky=\"offset: 30; bottom: true; media: @m;\">\r\n        {\r\n          (userData.data?.discount && userData.data?.discount !== '0' || couponData.length === 1 ) &&\r\n          <div className=\"uk-card-body\">\r\n            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand uk-text-muted\">Subtotal</div>\r\n              <div>{getCurrencyIcon(userLocation.data || 'IN')} {cartTotal}</div>\r\n            </div>\r\n            {\r\n              userData.data?.discount && userData.data?.discount !== '0' &&\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand uk-text-muted\">Discount ({userData.data?.discount}%)</div>\r\n              <div className=\"uk-text-danger\">− {getCurrencyIcon(userLocation.data || 'IN')} {userDiscountTotal}</div>\r\n            </div>\r\n            }\r\n            \r\n          </div>\r\n        }\r\n        {\r\n          couponData.length === 1 &&\r\n          <div className=\"uk-card-body\">\r\n            {\r\n              userData.data?.discount && userData.data?.discount !== '0' &&\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand uk-text-muted\">Discounted Total</div>\r\n                <div>{getCurrencyIcon(userLocation.data || 'IN')} {discountedTotal}</div>\r\n              </div>\r\n            }\r\n\r\n            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand uk-text-muted\">Coupon ({couponData[0] && couponData[0].value}%)</div>\r\n              <div className=\"uk-text-danger\">− {getCurrencyIcon(userLocation.data || 'IN')} {userCouponTotal}</div>\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n            <div className=\"uk-width-expand uk-text-muted\">Total</div>\r\n            <div className=\"uk-text-lead uk-text-bolder\">{getCurrencyIcon(userLocation.data || 'IN')} {totalAfterDiscount}</div>\r\n          </div>\r\n          <button className=\"uk-button uk-button-primary uk-margin-small uk-width-1-1\"\r\n            disabled={cartTotal === 0}\r\n            onClick={() => { history.push('/checkout') }}\r\n          >\r\n            checkout\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  CartPrice\r\n}","import React from 'react';\r\nimport { CartDetails } from './CartDetails';\r\nimport { CartPrice } from './CartPrice';\r\n\r\nconst CustomerCartContainer: React.FunctionComponent = () => {\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a href=\"index.html\">Home</a></li>\r\n                <li><span>Cart</span></li>\r\n              </ul>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom\">Cart</h1>\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n                <CartDetails/>\r\n                <CartPrice/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport {\r\n  CustomerCartContainer\r\n}","import React, { useState, useEffect, useRef, Dispatch, SetStateAction } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, Cart, getRazorPayOrder, saveRazorPayOrder, getCart, errorCheckout, getCodOrder, saveCodOrder, UserLocation, defaultCheckout, setShippingPrice } from 'reducers';\r\nimport { CustomerCart, ProductCoupon, CustomerShippment } from 'types';\r\nimport { PayPalButton, PayPalPayment, CashOnDeliveryPayment } from 'components/shared';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getCurrencyIcon, calculateUserDiscountPrice, calculateUserDiscount } from 'services';\r\n\r\ninterface Props {\r\n  paymentMode: string;\r\n  shippingType: string;\r\n  setCartTotal: Dispatch<SetStateAction<number>>;\r\n};\r\ndeclare global {\r\n  interface Window { Razorpay: any; }\r\n}\r\nwindow.Razorpay = window.Razorpay || {};\r\n\r\nconst CheckoutPrice: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [cartTotalPrice, setCartTotalPrice] = useState(0);\r\n  const [userDiscountTotal, setUserDiscountTotal] = useState('0');\r\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState('0');\r\n  const [userCouponTotal, setUserCouponTotal] = useState('0');\r\n  const [discountedTotal, setDiscountedTotal] = useState('0');\r\n  const [priceAfterShipping, setPriceAfterShipping] = useState('0');\r\n  const [quantityCount, setQuantityCount] = useState(0);\r\n  const [cartOrderId, setCartOrderId] = useState(0);\r\n  const [paymentMessage, setPaymentMessage] = useState(\"Please don't close this window while we process your payment.\")\r\n  const [paymentError, setPaymentError] = useState(false);\r\n  const [paymentSuccess, setPaymentSuccess] = useState(false);\r\n  const [errorHappendAt, setErrorHappendAt] = useState('close');\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n  const checkout = useSelector((state: AppState) => state.checkout);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const couponData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);\r\n  const shippingCost = useSelector<AppState, CustomerShippment>(state => state.customerShippment.data || {} as CustomerShippment);\r\n  const paymentLoadingRef = useRef<HTMLButtonElement>(null);\r\n  const [containerIsCard, setContainerIsCard] = useState(false);\r\n  const [ukSticky, setUkSicky] = useState({});\r\n  const [showCodContainer, setShowCodContainer] = useState(false);\r\n  const [noAddressError, setNoAddressError] = useState(false);\r\n  const [enteredOTP, setEnteredOTP] = useState('');\r\n  const [didPriceChanged, setDidPriceChanged] = useState(false);\r\n  const [timeForShowPriceChange, setTimeForShowPriceChange] = useState(5);\r\n  let timer: NodeJS.Timer;\r\n\r\n  useEffect(() => {\r\n    let cartPrice = 0;\r\n    if (cart.data && cart.data.length > 0) {\r\n      cart.data.forEach(({ totalPrice }) => {\r\n        cartPrice += Number(totalPrice)\r\n      });\r\n      setCartTotalPrice(cartPrice);\r\n      props.setCartTotal(cartPrice);\r\n      if (couponData.length === 1) {\r\n        let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString());\r\n        let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString());\r\n        let couponPrice = calculateUserDiscountPrice(couponData[0].value, priceAfterDiscount.toString());\r\n        let priceAfterCoupon = calculateUserDiscount(couponData[0].value || '0', priceAfterDiscount.toString());\r\n        setDiscountedTotal(priceAfterDiscount);\r\n        setUserDiscountTotal(discountPrice);\r\n        setUserCouponTotal(couponPrice);\r\n        setTotalAfterDiscount(priceAfterCoupon);\r\n        calculateShippingCost(cart.data, priceAfterCoupon);\r\n\r\n      } else {\r\n        let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString());\r\n        let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString());\r\n        setUserDiscountTotal(discountPrice);\r\n        setTotalAfterDiscount(priceAfterDiscount);\r\n        calculateShippingCost(cart.data, priceAfterDiscount);\r\n      }\r\n      setCartOrderId(Number(cart.data[0].orderId));\r\n    } else {\r\n      setCartTotalPrice(0);\r\n      setUserDiscountTotal('0');\r\n      setTotalAfterDiscount('0');\r\n      setPriceAfterShipping('0')\r\n      props.setCartTotal(0);\r\n    }\r\n    if (didPriceChanged) {\r\n      setDidPriceChanged(false);\r\n      if (timeForShowPriceChange === 0) {\r\n        paymentLoadingRef.current?.click();\r\n      } else {\r\n        clearTimeout(timer);\r\n        timer = setTimeout(() => {\r\n          paymentLoadingRef.current?.click();\r\n          clearTimeout(timer);\r\n        }, 5000)\r\n      }\r\n    }\r\n  }, [cart.data, userData.data, props.shippingType]);\r\n\r\n  useEffect(() => {\r\n    if (userLocation.data === 'IN') {\r\n      if (checkout.data && checkout.data.orderId && props.paymentMode === 'online') {\r\n        const {\r\n          key,\r\n          currency,\r\n          orderId,\r\n          name\r\n        } = checkout.data\r\n        var options = {\r\n          \"key\": key,\r\n          \"currency\": currency,\r\n          \"name\": name,\r\n          \"description\": \"\",\r\n          \"order_id\": orderId,\r\n          \"handler\": function (response: any) {\r\n            paymentLoadingRef.current?.click();\r\n            successRazorPay(response.razorpay_payment_id, response.razorpay_order_id, response.razorpay_signature)\r\n          },\r\n          \"modal\": {\r\n            \"ondismiss\": function () {\r\n              setPaymentError(true);\r\n              dispatch(errorCheckout(''));\r\n            }\r\n          },\r\n          \"prefill\": {\r\n            \"name\": userData.data?.firstName || '' + userData.data?.lastName,\r\n            \"email\": userData.data?.emailAddress,\r\n            \"contact\": userData.data?.mobile\r\n          },\r\n          \"notes\": {\r\n            \"address\": \"Razorpay Corporate Office\"\r\n          },\r\n          \"theme\": {\r\n            \"color\": \"#F37254\"\r\n          }\r\n        };\r\n        var rzp1 = new window.Razorpay(options);\r\n        rzp1.on('payment.failed', function (response: any) {\r\n          setErrorHappendAt('failed');\r\n          console.log('code', response.error.code);\r\n          console.log('desc', response.error.description);\r\n          console.log('source', response.error.source);\r\n          console.log('step', response.error.step);\r\n          console.log('reason', response.error.reason);\r\n          console.log('metadata', response.error.metadata);\r\n        });\r\n        rzp1.open();\r\n      } else if (checkout.data && checkout.data.otp && props.paymentMode === 'cod') {\r\n        setShowCodContainer(true);\r\n      }\r\n    }\r\n  }, [checkout.data]);\r\n\r\n  useEffect(() => {\r\n    if (checkout._priceChanged && (props.paymentMode === 'online' || props.paymentMode === 'cod')) {\r\n      setPaymentMessage(checkout.message || '');\r\n      dispatch(getCart());\r\n      paymentLoadingRef.current?.click();\r\n      setDidPriceChanged(true);\r\n      timer = setInterval(() => {\r\n        if (timeForShowPriceChange > 0) {\r\n          setTimeForShowPriceChange(timeForShowPriceChange - 1);\r\n        }\r\n      }, 1000);\r\n    }\r\n  }, [checkout._priceChanged]);\r\n\r\n  useEffect(() => {\r\n    if (paymentError && props.paymentMode === 'online') {\r\n      if (errorHappendAt === 'failed') {\r\n        setPaymentMessage('Payment failure from Razorpay, please try again.');\r\n        paymentLoadingRef.current?.click();\r\n      } else if (errorHappendAt === 'close') {\r\n        setPaymentMessage('Payment incomplete, please try again.');\r\n        paymentLoadingRef.current?.click();\r\n      }\r\n    }\r\n  }, [paymentError]);\r\n\r\n  useEffect(() => {\r\n    if (checkout._isPaymentSucceess &&\r\n      (props.paymentMode === 'online' || props.paymentMode === 'cod')) {\r\n      setPaymentMessage('Payment is successful !!');\r\n      setPaymentSuccess(true);\r\n      setPaymentError(false);\r\n      dispatch(getCart());\r\n      setShowCodContainer(false);\r\n      setTimeout(() => {\r\n        dispatch(defaultCheckout());\r\n        paymentLoadingRef.current?.click();\r\n        history.push('userinformation/orders');\r\n      }, 5000);\r\n    }\r\n  }, [checkout._isPaymentSucceess]);\r\n\r\n  useEffect(() => {\r\n    if (!paymentError) {\r\n      if (checkout._isError && props.paymentMode === 'online') {\r\n        setPaymentMessage(checkout.message || '');\r\n        setPaymentSuccess(false);\r\n        setPaymentError(true);\r\n        setErrorHappendAt('DB');\r\n      } else if (checkout._isError && props.paymentMode === 'cod') {\r\n        setPaymentMessage(checkout.message || '');\r\n        setPaymentSuccess(false);\r\n        setPaymentError(true);\r\n        setShowCodContainer(true);\r\n      }\r\n    }\r\n  }, [checkout._isError])\r\n\r\n  const successRazorPay = (razorpayPaymentId: string, razorpayOrderId: string, razorpaySignature: string) => {\r\n    dispatch(saveRazorPayOrder({\r\n      razorpayPaymentId,\r\n      razorpayOrderId,\r\n      razorpaySignature,\r\n      orderId: cartOrderId,\r\n      orderNumber: checkout.data && checkout.data.receipt || '',\r\n      addressId: userData.data && userData.data.addressId || '',\r\n      couponId: couponData && couponData[0] && couponData[0].couponId\r\n    }));\r\n  }\r\n  const proceedWithPayment = () => {\r\n    if(userData.data?.addressId){\r\n      if (props.paymentMode === 'online') {\r\n        setPaymentError(false);\r\n        dispatch(getRazorPayOrder(totalAfterDiscount.toString(), cartOrderId, couponData && couponData[0] && couponData[0].couponId))\r\n      } else if (props.paymentMode === 'cod') {\r\n        setPaymentError(false);\r\n        dispatch(getCodOrder(totalAfterDiscount.toString(), cartOrderId, couponData && couponData[0] && couponData[0].couponId));\r\n      }\r\n    } else{\r\n      setNoAddressError(true);\r\n      setTimeout(() => {\r\n        setNoAddressError(false);\r\n      },3000) \r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (containerIsCard) {\r\n      setUkSicky({});\r\n    } else {\r\n      setUkSicky({\r\n        'uk-sticky': \"offset: 60; bottom: true; media: @m;\"\r\n      })\r\n    }\r\n  }, [containerIsCard])\r\n\r\n  const successCod = () => {\r\n    dispatch(saveCodOrder({\r\n      otp: enteredOTP,\r\n      orderId: cartOrderId,\r\n      addressId: userData.data && userData.data.addressId || '',\r\n      couponId: couponData && couponData[0] && couponData[0].couponId\r\n    }));\r\n    setPaymentMessage(\"Please don't close this window while we process your payment.\");\r\n    setPaymentSuccess(false);\r\n    setPaymentError(false);\r\n    paymentLoadingRef.current?.click();\r\n  }\r\n\r\n  const calculateShippingCost = (cartData: CustomerCart[], totalAfterDiscount: string) => {\r\n    let itemCount = cartData.reduce((accumulator, cart) => ({ 'productQuantity': (Number(accumulator.productQuantity) + Number(cart.productQuantity)).toString() } as CustomerCart));\r\n    setQuantityCount(Number(itemCount.productQuantity));\r\n    if (props.shippingType === 'standard') {\r\n      if (Number(itemCount.productQuantity) > 1) {\r\n        const cost = (10 + ((Number(itemCount.productQuantity) - 1) * 6));\r\n        dispatch(setShippingPrice({ 'shippmentPrice': cost.toString() } as CustomerShippment));\r\n        setPriceAfterShipping((Number(totalAfterDiscount) + cost).toString());\r\n      } else {\r\n        dispatch(setShippingPrice({ 'shippmentPrice': '10' } as CustomerShippment));\r\n        setPriceAfterShipping((Number(totalAfterDiscount) + 10).toString());\r\n      }\r\n    } else {\r\n      if (Number(itemCount.productQuantity) > 1) {\r\n        const cost = (18 + ((Number(itemCount.productQuantity) - 1) * 10));\r\n        dispatch(setShippingPrice({ 'shippmentPrice': cost.toString() } as CustomerShippment));\r\n        setPriceAfterShipping((Number(totalAfterDiscount) + cost).toString());\r\n      } else {\r\n        dispatch(setShippingPrice({ 'shippmentPrice': '18' } as CustomerShippment));\r\n        setPriceAfterShipping((Number(totalAfterDiscount) + 18).toString());\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"uk-width-1-1 uk-width-1-4@m tm-aside-column\">\r\n\r\n        <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\"\r\n          {\r\n          ...(\r\n            ukSticky\r\n          )\r\n          }\r\n        >\r\n          <section className=\"uk-card-body\">\r\n            <h4>Items in order</h4>\r\n            {\r\n              cart.data && cart.data.map((cartItem: CustomerCart, index: number) => {\r\n                return (\r\n                  <div key={index} className=\"uk-grid-small\" uk-grid=\"true\">\r\n                    <div className=\"uk-width-expand\">\r\n                      <div className=\"uk-text-small\">{cartItem.productName}</div>\r\n                      <div className=\"uk-text-meta\">{cartItem.productQuantity} × {getCurrencyIcon(userLocation.data || 'IN')} {cartItem.productPrice}</div>\r\n                    </div>\r\n                    <div className=\"uk-text-right\"><div>{getCurrencyIcon(userLocation.data || 'IN')} {cartItem.totalPrice}</div></div>\r\n                  </div>\r\n                )\r\n              })\r\n            }\r\n          </section>\r\n          {\r\n            userData.data?.discount && userData.data?.discount !== '0' &&\r\n            <section className=\"uk-card-body\">\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Subtotal</div></div>\r\n                <div className=\"uk-text-right\"><div>{getCurrencyIcon(userLocation.data || 'IN')} {cartTotalPrice || 0}</div></div>\r\n              </div>\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Discount ({userData.data?.discount}%)</div></div>\r\n                <div className=\"uk-text-right\"><div className=\"uk-text-danger\">- {getCurrencyIcon(userLocation.data || 'IN')} {userDiscountTotal}</div></div>\r\n              </div>\r\n            </section>\r\n\r\n          }\r\n          {\r\n            couponData.length === 1 &&\r\n            <section className=\"uk-card-body\">\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Discounted Total</div></div>\r\n                <div className=\"uk-text-right\"><div>{getCurrencyIcon(userLocation.data || 'IN')} {discountedTotal}</div></div>\r\n              </div>\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Coupon ({couponData[0] && couponData[0].value}%)</div></div>\r\n                <div className=\"uk-text-right\"><div className=\"uk-text-danger\">- {getCurrencyIcon(userLocation.data || 'IN')} {userCouponTotal}</div></div>\r\n              </div>\r\n            </section>\r\n          }\r\n          {\r\n            userLocation.data !== 'IN' &&\r\n            <section className=\"uk-card-body\">\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Subtotal</div></div>\r\n                <div className=\"uk-text-right\"><div>{getCurrencyIcon(userLocation.data || 'IN')} {totalAfterDiscount}</div></div>\r\n              </div>\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Shipping</div></div>\r\n                <div className=\"uk-text-right\"><div className=\"uk-text-success\">+ {getCurrencyIcon(userLocation.data || 'IN')} {shippingCost.shippmentPrice}</div></div>\r\n              </div>\r\n            </section>\r\n          }\r\n\r\n          {\r\n            showCodContainer &&\r\n            <CashOnDeliveryPayment showOtpContainer={showCodContainer} setEnteredOTP={setEnteredOTP} />\r\n          }\r\n          <section className=\"uk-card-body\">\r\n            {\r\n              <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Total</div></div>\r\n                {\r\n                  userLocation.data === 'IN' ?\r\n                    <div className=\"uk-text-right\"><div className=\"uk-text-lead uk-text-bolder\">{getCurrencyIcon(userLocation.data || 'IN')} {totalAfterDiscount}</div></div>\r\n                    : <div className=\"uk-text-right\"><div className=\"uk-text-lead uk-text-bolder\">{getCurrencyIcon(userLocation.data || 'IN')} {priceAfterShipping}</div></div>\r\n                }\r\n\r\n              </div>\r\n            }\r\n\r\n            {\r\n              props.paymentMode === 'paypal' &&\r\n              cartTotalPrice !== 0 &&\r\n              <PayPalPayment\r\n                cartTotalPrice={totalAfterDiscount}\r\n                cartTotalWithShipping={priceAfterShipping}\r\n                quantityCount={quantityCount}\r\n                isStandard={props.shippingType === 'standard'}\r\n                paymentMode={props.paymentMode}\r\n                setContainerIsCard={setContainerIsCard}\r\n                cartOrderId={cartOrderId} />\r\n            }\r\n            {\r\n              noAddressError && \r\n              <div className=\"login-error-message\">\r\n                    <span className=\"uk-notification-message-danger\"> Please add conatct and shipping information </span>\r\n              </div>\r\n            }\r\n            {\r\n              props.paymentMode !== 'paypal' && !showCodContainer &&\r\n              <>\r\n              {\r\n                  !checkout._isFetchCodCodeSuccess && checkout._isError &&\r\n                  <div className=\"login-error-message\">\r\n                    <span className=\"uk-notification-message-danger\"> {checkout.message} </span>\r\n                  </div>\r\n                }\r\n                <button\r\n                  disabled={checkout._isLoading || cartTotalPrice === 0}\r\n                  className=\"uk-button uk-button-primary uk-margin-small uk-width-1-1\"\r\n                  onClick={() => proceedWithPayment()}\r\n                >{checkout._isLoading && <div uk-spinner=\"true\"></div>}\r\n              checkout</button>\r\n                \r\n              </>\r\n            } {\r\n              showCodContainer &&\r\n              <button className=\"uk-button uk-button-primary uk-margin-small uk-width-1-1\"\r\n                disabled={checkout._isLoading || cartTotalPrice === 0}\r\n                onClick={() => { checkout._isFetchCodCodeSuccess ? successCod() : proceedWithPayment() }}>\r\n                {checkout._isFetchCodCodeSuccess ? 'Place Order' : 'Checkout'}\r\n              </button>\r\n            }\r\n          </section>\r\n        </div>\r\n      </div>\r\n      {\r\n        props.paymentMode !== 'paypal' && \r\n        <>\r\n        <button ref={paymentLoadingRef} id=\"payment-loading\" uk-toggle=\"target: #my-id\" type=\"button\"></button>\r\n      <div id=\"my-id\" uk-modal=\"true; esc-close: false; bg-close: false\">\r\n        <div className=\"uk-modal-dialog uk-modal-body uk-margin-auto-vertical\">\r\n          {\r\n            (paymentSuccess || paymentError) && <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n          }\r\n          <div className=\"uk-modal-body uk-nav-center\">\r\n            <p>{paymentMessage}</p>\r\n            {\r\n              !paymentSuccess && !paymentError && <div uk-spinner=\"true\"></div>\r\n            }\r\n            {\r\n              paymentSuccess && !paymentError &&\r\n              <>\r\n                <span className=\"uk-label uk-label-success\">Redirecting to Orders <div uk-spinner=\"true\"></div></span>\r\n              </>\r\n            }\r\n            {\r\n              paymentError && <span className=\"uk-label uk-label-danger\">Payment Failed</span>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n        </>\r\n      }\r\n      \r\n    </>\r\n  )\r\n};\r\n\r\nexport {\r\n  CheckoutPrice\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { UserInformation } from 'components/user';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, UserLocation, getUser } from 'reducers';\r\nimport { CheckoutPrice } from './CheckoutPrice';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst CheckoutContainer: React.FunctionComponent = () => {\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [paymentMode, setPaymentMode] = useState('online');\r\n  const [cartTotal, setCartTotal] = useState(0);\r\n  const [internationalShipping,setInternationalShipping] = useState('standard');\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n\r\n  useEffect(() => {\r\n    if (userLocation.data === 'USD') {\r\n      setPaymentMode('paypal');\r\n    }\r\n  }, [userLocation.data]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getUser());\r\n  },[])\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <section className=\"uk-text-center\">\r\n              <a className=\"uk-link-muted uk-text-small\" onClick={()=> history.push('/cart')}><span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: arrow-left; ratio: .75;\"></span>Return to cart</a>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom\">Checkout</h1>\r\n            </section>\r\n            <section>\r\n              <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n                <div className=\"uk-form-stacked uk-width-1-1 tm-checkout uk-width-expand@m\">\r\n                  <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n                    <section>\r\n                      <h2 className=\"tm-checkout-title\">Contact And Shipping Information</h2>\r\n                      <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n                        <UserInformation user={userData} fromCart={true} />\r\n                      </div>\r\n                    </section>\r\n                    {\r\n                      userLocation.data === 'IN' &&\r\n                      <section>\r\n                        <h2 className=\"tm-checkout-title\">Payment</h2>\r\n                        <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n                          <div className=\"uk-card-body\">\r\n                            <div className=\"uk-grid-small uk-grid-match uk-child-width-1-1 uk-child-width-1-2@s uk-flex-center\" uk-switcher=\"toggle: &gt; * &gt; .tm-choose\" uk-grid=\"true\">\r\n                              <div onClick={() => setPaymentMode('online')}>\r\n                                <a className={paymentMode === \"online\" ? \"tm-choose uk-active\" : \"tm-choose\"} href=\"#\">\r\n                                  <div className=\"tm-choose-title\">Online (via Razorpay)</div>\r\n                                  <div className=\"tm-choose-description\">Visa, MasterCard, all Other Cards</div>\r\n                                </a>\r\n                              </div>\r\n                              <div onClick={() => setPaymentMode('cod')}>\r\n                                <a className={paymentMode === \"cod\" ? \"tm-choose uk-active\" : \"tm-choose\"} href=\"#\">\r\n                                  <div className=\"tm-choose-title\">Cash On Delivery</div>\r\n                                  <div className=\"tm-choose-description\">Order now pay later</div>\r\n                                </a>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      </section>\r\n                    }\r\n                    {\r\n                      userLocation.data !== 'IN' &&\r\n                      <section>\r\n                        <h2 className=\"tm-checkout-title\">Shippment</h2>\r\n                        <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n                          <div className=\"uk-card-body\">\r\n                            <div className=\"uk-grid-small uk-grid-match uk-child-width-1-1 uk-child-width-1-2@s uk-flex-center\" uk-switcher=\"toggle: &gt; * &gt; .tm-choose\" uk-grid=\"true\">\r\n                              <div onClick={()=>setInternationalShipping('standard')}>\r\n                                <a className={internationalShipping === \"standard\" ? \"tm-choose uk-active\" : \"tm-choose\"} href=\"#\">\r\n                                  <div className=\"tm-choose-title\">Standard</div>\r\n                                  <div className=\"tm-choose-description\">India Post</div>\r\n                                  <div className=\"tm-choose-description\">Shipping cost $10 first item then $6 on every additional item.</div>\r\n                                </a>\r\n                              </div>\r\n                              <div onClick={()=>setInternationalShipping('express')}>\r\n                                <a className={internationalShipping === \"express\" ? \"tm-choose uk-active\" : \"tm-choose\"} href=\"#\">\r\n                                  <div className=\"tm-choose-title\">Express</div>\r\n                                  <div className=\"tm-choose-description\">Blue Dart/Fedex/DHL/Others</div>\r\n                                  <div className=\"tm-choose-description\">Shipping cost $18 first item then $10 on every additional item.</div>\r\n                                </a>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      </section>\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <CheckoutPrice paymentMode={paymentMode} shippingType={internationalShipping} setCartTotal={setCartTotal} />\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  CheckoutContainer\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst SubBanner: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <section className=\"uk-section uk-section-default uk-section-small\">\r\n      <div className=\"uk-container\">\r\n        <div className=\"uk-grid-small uk-child-width-1-2 uk-child-width-1-3@s uk-child-width-1-5@m\" uk-grid=\"true\">\r\n          <div>\r\n            <a onClick={()=>history.push('/product/bindi')} className=\"uk-link-muted uk-text-center uk-display-block uk-padding-small uk-box-shadow-hover-large\">\r\n              <div className=\"tm-ratio tm-ratio-4-3\">\r\n                <div className=\"tm-media-box\">\r\n                  <figure className=\"tm-media-box-wrap\"><img className=\"item-brand\" src=\"/sb_2.png\" alt=\"footwear\" /></figure>\r\n                </div>\r\n              </div>\r\n              <div className=\"uk-margin-small-top\">\r\n                <div className=\"uk-text-truncate\">Bindi</div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <a onClick={()=>history.push('/product/footwear')}  className=\"uk-link-muted uk-text-center uk-display-block uk-padding-small uk-box-shadow-hover-large\" >\r\n              <div className=\"tm-ratio tm-ratio-4-3\">\r\n                <div className=\"tm-media-box\">\r\n                  <figure className=\"tm-media-box-wrap\"><img className=\"item-brand\" src=\"/sb_1.png\" alt=\"Bindi\" /></figure>\r\n                </div>\r\n              </div>\r\n              <div className=\"uk-margin-small-top\">\r\n                <div className=\"uk-text-truncate\">Footwear</div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <a className=\"uk-link-muted uk-text-center uk-display-block uk-padding-small uk-box-shadow-hover-large\" href=\"#\">\r\n              <div className=\"tm-ratio tm-ratio-4-3\">\r\n                <div className=\"tm-media-box\">\r\n                  <figure className=\"tm-media-box-wrap\"><img className=\"item-brand\" src=\"/sb_3.png\" alt=\"Accessories\" /></figure>\r\n                </div>\r\n              </div>\r\n              <div className=\"uk-margin-small-top\">\r\n                <div className=\"uk-text-truncate\">Homedecore</div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <a onClick={()=>history.push('/product/lingerie')}  className=\"uk-link-muted uk-text-center uk-display-block uk-padding-small uk-box-shadow-hover-large\">\r\n              <div className=\"tm-ratio tm-ratio-4-3\">\r\n                <div className=\"tm-media-box\">\r\n                  <figure className=\"tm-media-box-wrap\"><img className=\"item-brand\" src=\"/sb_4.png\" alt=\"Home Decor\" /></figure>\r\n                </div>\r\n              </div>\r\n              <div className=\"uk-margin-small-top\">\r\n                <div className=\"uk-text-truncate\">Lingerie</div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <a className=\"uk-link-muted uk-text-center uk-display-block uk-padding-small uk-box-shadow-hover-large\" href=\"#\">\r\n              <div className=\"tm-ratio tm-ratio-4-3\">\r\n                <div className=\"tm-media-box\">\r\n                  <figure className=\"tm-media-box-wrap\"><img className=\"item-brand\" src=\"/test.jpg\" alt=\"Home Decor\" /></figure>\r\n                </div>\r\n              </div>\r\n              <div className=\"uk-margin-small-top\">\r\n                <div className=\"uk-text-truncate\">Cosmetics</div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport {\r\n  SubBanner\r\n}","import React from 'react';\r\n\r\nconst Banner: React.FunctionComponent = () => {\r\n  return (\r\n    <section className=\"uk-position-relative uk-visible-toggle uk-light\" uk-slideshow=\"ratio: 8.2:3; min-height:175\">\r\n      <ul className=\"uk-slideshow-items\">\r\n        <li style={{ backgroundColor: \"#0b0a12\" }}>\r\n          <a href=\"#\">\r\n            <figure className=\"uk-container uk-height-1-1\"><img src=\"/banner_first.jpg\" alt=\"New Macbook\"  uk-cover=\"true\" /></figure>\r\n          </a>\r\n        </li>\r\n        <li style={{ backgroundColor: \"#0b0a12\" }}>\r\n          <a href=\"#\">\r\n            <figure className=\"uk-container uk-height-1-1\"><img src=\"/banner_two.jpg\" alt=\"New Macbook\"  uk-cover=\"true\" /></figure>\r\n          </a>\r\n        </li>\r\n        <li style={{ backgroundColor: \"#ce071e;\" }}>\r\n          <a href=\"#\">\r\n            <figure className=\"uk-container uk-height-1-1\"><img src=\"/banner_three.jpg\" alt=\"iPhone\"  uk-cover=\"true\" /></figure>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <a className=\"uk-position-center-left uk-position-small uk-hidden-hover\" href=\"#\" uk-slideshow-item=\"previous\" uk-slidenav-previous=\"true\"></a>\r\n      <a className=\"uk-position-center-right uk-position-small uk-hidden-hover\" href=\"#\" uk-slideshow-item=\"next\" uk-slidenav-next=\"true\"></a>\r\n      <div className=\"uk-position-bottom-center uk-position-small\"><ul className=\"uk-slideshow-nav uk-dotnav\"></ul></div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport {\r\n  Banner\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppState, UserLocation, Cart, addUpdateCart } from 'reducers';\r\nimport { ProductItem, CustomerCart } from 'types';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { getCurrencyIcon, calculateUserDiscount, showINRUSD } from 'services';\r\nimport { LoadingProductArticle } from 'components/shared';\r\n\r\n\r\ninterface Props {\r\n  productList: ProductItem[]\r\n}\r\n\r\nconst TrendingLatestProducts: React.FunctionComponent<Props> = (props: Props) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n\r\n  const addToCart = (product: ProductItem) => {\r\n    if(!userData.data?.userId){\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: product.productDetailId,\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: showINRUSD(userLocation.data || 'IN', product),\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, false))\r\n    } else {\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: '0',\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: '0',\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, true));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"uk-grid-collapse uk-child-width-custom tm-products-grid\" uk-grid=\"true\">\r\n      {\r\n        props.productList.length > 0 ?\r\n        props.productList.map((product) => {\r\n          return (\r\n            <article key={product.productId} className=\"tm-product-card\">\r\n              <div className=\"tm-product-card-media\">\r\n                <div className=\"tm-ratio tm-ratio-4-3\">\r\n                  <a className=\"tm-media-box\" onClick={() => {history.push('/productDetails/' + product.productId) }}>\r\n                    <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + product.imagePaths} alt={product.imageNames} /></figure>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              <div className=\"tm-product-card-body\">\r\n                <div className=\"tm-product-card-info\">\r\n                  <div className=\"uk-text-meta uk-margin-xsmall-bottom\">{product.productCategoryName}</div>\r\n                  <h3 className=\"tm-product-card-title\"><a className=\"uk-link-heading\" onClick={() => history.push('/productDetails/' + product.productId)}>{product.name}</a></h3>\r\n                </div>\r\n                <div className=\"tm-product-card-shop\">\r\n                  <div className=\"tm-product-card-prices\">\r\n                    {\r\n                      userData.data?.discount && userData.data?.discount !== '0' &&\r\n                      <del className=\"uk-text-meta\">{getCurrencyIcon(userLocation.data || 'IN')} {showINRUSD(userLocation.data || 'IN', product)}</del>\r\n                    }\r\n                    <div className=\"tm-product-card-price\">\r\n                      {getCurrencyIcon(userLocation.data || 'IN')} {calculateUserDiscount(userData.data?.discount || '0', showINRUSD(userLocation.data || 'IN', product))}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"tm-product-card-add\">\r\n                    <button className=\"uk-button uk-button-primary tm-product-card-add-button tm-shine js-add-to-cart\">\r\n                      {\r\n                        cart._isLoading && <span uk-spinner=\"true\"></span>\r\n                      }\r\n                      {\r\n                        !cart._isLoading && (\r\n                          <>\r\n                            <span className=\"tm-product-card-add-button-icon\" uk-icon=\"cart\" onClick={() => addToCart(product)}></span>\r\n                            <span className=\"tm-product-card-add-button-text\">add to cart</span>\r\n                          </>\r\n                        )\r\n                      }\r\n\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </article>\r\n          )\r\n        }) : Array(4).fill(1).map((value, index) => <LoadingProductArticle keyIndex={index}/>)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  TrendingLatestProducts\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState } from 'reducers';\r\nimport { ProductItem } from 'types';\r\nimport { TrendingLatestProducts } from '.';\r\n\r\nconst TrendingLatestContainer: React.FunctionComponent = () => {\r\n\r\n  const latestProducts = useSelector<AppState, ProductItem[]>(state => state.latestProduct.data || []);\r\n  const trendingProducts = useSelector<AppState, ProductItem[]>(state => state.trendingProduct.data || []);\r\n\r\n  return (\r\n    <>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <h2 className=\"uk-text-center\">Trending Items</h2>\r\n          <div className=\"uk-card uk-card-default tm-ignore-container\">\r\n           <TrendingLatestProducts productList={trendingProducts} />\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <h2 className=\"uk-text-center\">Latest Items</h2>\r\n          <div className=\"uk-card uk-card-default tm-ignore-container\">\r\n           <TrendingLatestProducts productList={latestProducts} />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nexport {\r\n  TrendingLatestContainer\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getTrendingProduct, getLatestProduct, AppState } from 'reducers';\r\nimport { SubBanner } from './SubBanner';\r\nimport { Banner } from './Banner';\r\nimport { TrendingLatestContainer } from './trendingLatest';\r\n\r\n\r\nconst HomePageContainer: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getTrendingProduct());\r\n    dispatch(getLatestProduct());\r\n  },[])\r\n  return (\r\n    <main>\r\n      <Banner/>\r\n      <SubBanner/>\r\n      <TrendingLatestContainer/>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  HomePageContainer\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { Router, Switch, Route } from \"react-router-dom\";\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport './index.css';\r\nimport { UserContainer } from 'components/user';\r\nimport { UserLogin } from 'components/login'\r\nimport { MainFooter } from 'components/footer';\r\nimport { MobileNavigation, Navigation } from 'components/pilot';\r\nimport { MainContainer } from 'components/admin/MainContainer';\r\nimport { CustomerContainer } from 'components/customer';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { store } from 'reducers';\r\nimport { CustomerProductDetails } from 'components/customer/ProductDetails';\r\nimport { CustomerProductDetailsConstainer } from 'components/customer/ProductDetails/CustomerProductDetailsContainer';\r\nimport { CustomerCartContainer } from 'components/customer/Cart';\r\nimport { CheckoutContainer } from 'components/customer/Checkout';\r\nimport { HomePageContainer } from 'components/customer/Home';\r\nimport {ScrollToTop} from 'components/shared';\r\n\r\n\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <Router history={createBrowserHistory()}>\r\n      <ScrollToTop />\r\n        <Navigation />\r\n        <MobileNavigation/>\r\n          <Switch>\r\n          <Route path=\"/\" exact>\r\n              <HomePageContainer />\r\n            </Route>\r\n            <Route path=\"/userinformation/:userTab?\" exact>\r\n              <UserContainer />\r\n            </Route>\r\n            <Route path=\"/login\" exact>\r\n              <UserLogin />\r\n            </Route>\r\n            <Route path=\"/admin/:product?/:productId?\" exact>\r\n              <MainContainer />\r\n            </Route>\r\n            <Route path=\"/product/:product/:filterOn?\" exact>\r\n              <CustomerContainer />\r\n            </Route>\r\n            <Route path=\"/productDetails/:queryProductId\" exact>\r\n              <CustomerProductDetailsConstainer />\r\n            </Route>\r\n            <Route path=\"/cart\" exact>\r\n              <CustomerCartContainer/>\r\n            </Route>\r\n            <Route path=\"/checkout\" exact>\r\n              <CheckoutContainer/>\r\n            </Route>\r\n          </Switch>\r\n        <MainFooter />\r\n      </Router>\r\n    </React.StrictMode>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(\r\n  app,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}