{"version":3,"sources":["appConstants/AxiosConstants.ts","appConstants/CountryCodes.ts","appConstants/SubProducts.ts","reducers/UserInformation.ts","appConstants/ApiServerConstants.ts","services/axiosBase.ts","services/axios.ts","services/Misc.ts","reducers/Login.ts","reducers/UserSettings.ts","reducers/Colour.ts","reducers/Size.ts","reducers/SubCategory.ts","reducers/Coupon.ts","reducers/Product.ts","reducers/ProductCount.ts","appConstants/ProductsConstants.ts","reducers/Cart.ts","reducers/Checkout.ts","reducers/UserLocation.ts","reducers/Order.ts","reducers/Shipper.ts","reducers/Shipment.ts","reducers/RelatedProducts.ts","reducers/TrendingProducts.ts","reducers/LatestProducts.ts","reducers/Search.ts","reducers/CustomerShippment.ts","reducers/PreSelectedFilters.ts","reducers/AdminOrderCsv.ts","reducers/ContactUs.ts","reducers/index.ts","components/shared/NotificationContainer.tsx","components/shared/PayPalContainer.tsx","components/shared/PayPalPayment.tsx","components/shared/CashOnDeliveryPayment.tsx","components/shared/QuickProductList.tsx","components/shared/LoadingProductArticle.tsx","components/shared/ScrollToTop.tsx","components/shared/ContactUs.tsx","components/shared/About.tsx","components/shared/ReturnPolicy.tsx","components/user/UserInformation.tsx","components/user/UserNav.tsx","components/user/UserSettings.tsx","components/user/Orders.tsx","components/user/UserContainer.tsx","components/login/login.tsx","components/footer/MainFooter.tsx","components/pilot/Navigation.tsx","components/pilot/SideCart.tsx","components/pilot/MobileNavigation.tsx","components/admin/AdminNav.tsx","components/admin/AdminProductList.tsx","components/admin/subComponents/colour/ColourList.tsx","components/admin/subComponents/colour/ProductColour.tsx","components/admin/subComponents/size/ProductSize.tsx","components/admin/subComponents/size/SizeList.tsx","components/admin/subComponents/subCategory/ProductSubCategory.tsx","components/admin/subComponents/subCategory/SubCategoryList.tsx","components/admin/subComponents/coupon/ProductCoupon.tsx","components/admin/subComponents/coupon/CouponList.tsx","components/admin/subComponents/product/ProductItem.tsx","components/admin/subComponents/product/ProductList.tsx","components/admin/subComponents/orders/OrderList.tsx","components/admin/subComponents/orders/OrderDetails.tsx","components/admin/subComponents/shippers/ShipperDetails.tsx","components/admin/subComponents/shippers/ShipperList.tsx","components/admin/subComponents/users/UserList.tsx","components/admin/subComponents/users/UserDetails.tsx","components/admin/MainContainer.tsx","components/customer/CustomerProductList.tsx","components/customer/CustomerProductFilter.tsx","serviceWorker.ts","components/customer/ProductDetails/CustomerProductDetails.tsx","components/customer/ProductDetails/CustomerProductDetailsLoading.tsx","components/customer/ProductDetails/CustomerProductDetailsContainer.tsx","components/customer/Cart/CartDetails.tsx","components/customer/Cart/CartPrice.tsx","components/customer/Cart/CustomerCartContainer.tsx","components/customer/Checkout/CheckoutPrice.tsx","components/customer/Checkout/CheckoutContianer.tsx","components/customer/Home/Banner.tsx","components/customer/Home/trendingLatest/TrendingLatestProduct.tsx","components/customer/Home/trendingLatest/TrendingContainer.tsx","components/customer/Home/trendingLatest/LastestContainer.tsx","components/customer/Home/PromoBanner.tsx","components/customer/Home/HomePageContainer.tsx","components/customer/Home/MobileBanner.tsx","components/customer/Home/MobilePromoBanner.tsx","components/customer/Home/FooterBanner.tsx","index.tsx","components/customer/CustomerContainer.tsx"],"names":["HttpRequest","HttpStatusCode","SubProducts","CountryCodes","Actions","SubCategories","AllowReturn","scaledServerImagePath","apiServerHost","axios","create","baseURL","headers","api","url","makeRequest","method","GET","data","POST","config","a","defaults","window","localStorage","getItem","request","response","status","removeItem","location","href","message","getSubCategoryFromId","id","filterSubcategories","subCategories","categoryId","filter","subCategory","productCategoryId","Number","filterSize","sizes","size","indexOf","productCategory","calculateUserDiscount","discount","price","Math","ceil","toString","calculateUserDiscountPrice","floor","getCurrencyIcon","currency","showINRUSD","userLocation","priceINR","priceUSD","createActiveProductCountList","activeProducts","resultList","forEach","product","subcategoryId","colourId","count","sizeObj","sizeArray","resultSize","sizeCheck","sizeId","name","colourName","reduce","b","subcategoryName","countHighlightProducts","products","isTrending","trending","length","latest","downloadCSV","array","link","document","createElement","csv","result","keys","Object","join","item","ctr","key","convertArrayOfObjectsToCSV","match","setAttribute","encodeURI","click","remove","returnInvoiceHtml","clientName","invoiceDate","clientAddress","invoiceNumber","productList","userDiscount","couponDiscount","isInternaltionalOrder","isInternaltionalOrderStandard","totalCalculatedAmount","shippingCost","totalQuantity","totalCalculatedAmountBeforeDiscount","productPrice","quantity","userOrderDiscountPrice","map","index","productName","totalPrice","mainTotal","initialState","isAdmin","allUsers","_isError","_isLoading","_isSuccess","setUser","user","type","SET_USER","loadingUser","LOADING_USER","errorUser","ERROR_USER","updateDiscount","emailAddress","UPDATE_USER_DISCOUNT","getUser","disptach","OK","loadingRegister","LOADING_REGISTER","errorRegister","ERROR_REGISTER","successRegister","SUCCESS_REGISTER","setUserSetting","userSettings","SET_USER_SETTINGS","loadingUserSettings","LOADING_USER_SETTINGS","errorUserSettings","ERROR_USER_SETTINGS","loadingColour","LOADING_COLOUR","errorColour","ERROR_COLOUR","getColour","dispatch","res","SET_COLOUR","loadingSize","LOADING_SIZE","successSize","SUCCESS_SIZE","errorSize","addUpdateSize","product_size","value","product_size_code","code","product_category","size_id","productCategoryIndex","productCategoryName","UPDATE_SIZE","getSize","SET_SIZE","loadingSubCategory","LOADING_SUBCATEGORY","successSubCategory","SUCCESS_SUBCATEGORY","errorSubCategory","ERROR_SUBCATEGORY","addUpdateSubCategory","product_name","product_desc","product_category_id","subcategory_id","subCategoryId","UPDATE_SUBCATEGORY","getSubCategory","SET_SUBCATEGORY","loadingCoupon","LOADING_COUPON","errorCoupon","ERROR_COUPON","setCoupon","SET_COUPON","updateCouponSuccess","UPDATE_COUPON_SUCCESS","deleteCouponSuccess","DELETE_COUPON_SUCCESS","updateCoupon","coupon","isDelete","coupon_code","coupon_value","coupon_id","couponId","loadingProduct","LOADING_PRODUCT","successProduct","SUCCESS_PRODUCT","errorProduct","ERROR_PRODUCT","setProducts","_hasMoreProducts","SET_PRODUCT","setDefaulState","SET_DEFAULT_PRODUCT","deleteProductSuccess","DELETE_PRODUCT_SUCCESS","setCustomerProducts","SET_CUSTOMER_PRODUCT","setProductHighlight","productId","SET_PRODUCT_HIGHLIGHT","singleData","addUpdateProduct","sizeColourQuantity","formData","FormData","productImageBlob","Array","from","element","append","colour","description","JSON","stringify","deletedImagePath","deletedProductDetailIds","getProduct","SET_SINGLE_PRODUCT","getCustomerProducts","offset","limit","startPrice","endPrice","searchText","freshData","_quantityUpdate","loadingCart","LOADING_CART","errorCart","ERROR_CART","updateCartSuccess","UPDATE_CART_SUCCESS","deleteCartProduct","DELETE_CART_PRODUCT","addUpdateCart","cart","isLoggedIn","newCart","productQuantity","UPDATE_CART_LOGGED_OUT","product_detail_id","productDetailId","order_quantity","price_id","currencyType","orderdetail_id","cartId","delete_flag","productImage","productImagePath","subcategory","getCart","ADD_CART_SUCCESS","deleteCartItem","DELETE_CART_PRODUCT_LOGGED_OUT","_isPaymentSucceess","_priceChanged","_isFetchCodCodeSuccess","loadingCheckout","LOADING_CHECKOUT","successCheckoutOrder","SUCCESS_CHECKOUT_ORDER","errorCheckout","ERROR_CHECKOUT","defaultCheckout","DEFAULT_CHECKOUT","successPayment","SUCCESS_PAYMENT","priceChanged","PRICE_CHANGED","getPayPalOrder","amount","displayAmount","orderId","PARTIAL_INFO","setUserLocation","SET_USER_LOCATION","loadingOrder","LOADING_ORDER","successOrder","_hasMoreOrders","SUCCESS_ORDER","adminSuccessOrder","ADMIN_SUCCESS_ORDER","errorOrder","ERROR_ORDER","customerReturn","orderDetailsId","CUSTOMER_RETURN","defaulOrderReturn","DEFAULT_ORDER_RETURN","_isOrderUpdate","getCustomerOrders","loadingShipper","LOADING_SHIPPER","errorShipper","ERROR_SHIPPER","updateShipperSuccess","UPDATE_SHIPPER_SUCCESS","deleteShipperSuccess","DELETE_SHIPPER_SUCCESS","getShippers","SET_SHIPPER","updateShipper","shipper","shipper_name","shipperName","shipper_link","trackingLink","shipper_id","shipperId","successShipment","SUCCESS_SHIPMENT","setSearch","SET_SEARCH","searchDefault","SEARCH_DEFAULT","_navigationReset","shippmentPrice","setShippingPrice","SET_SHIPPING_PRICE","coloudId","subcategoryname","scrollTill","lastViewedProductId","defaultPreSelectedFitler","DEFAULT_FILTER","setPreSelectedFilter","SUCCESS_FILTERS","errorContactUs","ERROR_CONTACTUS","reducers","state","action","DEFAULT_USER","SET_ALL_USER","toLowerCase","userLogin","LOADING_LOGIN","ERROR_LOGIN","SUCCESS_LOGIN","DEFAULT_STATE","SUCCESS_COLOUR","UPDATE_COLOUR_SUCCESS","originalState","updatedValue","updatedState","d","DEFAULT_COLOUR","ERROR_SIZE","SUCCESS_COUPON","orgState","updValue","updState","DEFAULT_COUPON","concat","productCount","LOADING_PRODUCT_COUNT","ERROR_PRODUCT_COUNT","SET_PRODUCT_COUNT","SUCCESS_CART","SET_CART","SET_LOGGED_CART","og","newProduct","originalStatelo","oglo","newProductlo","setItem","DEFAULT_CART","CART_GET_UPDATED_QUANTITY","CART_QUANTITY_FINE","checkout","LOADING_USER_LOCATION","customerOrders","SINGLE_DATA","singleOrder","updatedOrder","orderItems","order","orderDetailId","shipmentDetails","returnStatus","SUCCESS_SHIPPER","DEFAULT_SHIPPER","shipment","LOADING_SHIPMENT","ERROR_SHIPMENT","relatedProduct","SUCCESS_RELATED_PRODUCT","LOADING_RELATED_PRODUCT","ERROR_RELATED_PRODUCT","SET_RELATED_PRODUCT","trendingProduct","SUCCESS_TRENDING_PRODUCT","LOADING_TRENDING_PRODUCT","ERROR_TRENDING_PRODUCT","SET_TRENDING_PRODUCT","latestProduct","SUCCESS_LATEST_PRODUCT","LOADING_LATEST_PRODUCT","ERROR_LATEST_PRODUCT","SET_LATEST_PRODUCT","search","LOADING_SEARCH","ERROR_SEARCH","customerShippment","preSelectedFilters","actions","SET_ALL_FILTER","adminOrderCsv","LOADING_ADMIN_ORDER_CSV","ERROR_ADMIN_ORDER_CSV","SET_ADMIN_ORDER_CSV","SET_ADMIN_ORDER_CSV_DEFAULT","contactUs","LOADING_CONTACTUS","SUCCESS_CONTACTUS","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunkMiddleware","NotificationContainer","props","className","isSdkReady","undefined","paypal","this","addPaypalSdk","onButtonReady","options","shippingPreference","purchase_units","currency_code","application_context","shipping_preference","capture","then","details","onSuccess","catch","err","catchError","error","onCancel","createOrder","createSubscription","onApprove","style","Button","Buttons","driver","React","ReactDOM","createOrderFn","queryParams","entries","split","push","script","src","async","onload","setState","onerror","Error","body","appendChild","Component","defaultProps","clientId","PayPalPayment","useDispatch","history","useHistory","paypalPaymentLoadingRef","useRef","paypalModalRef","useSelector","userData","couponData","useState","paypalPaymentMessage","setPaypalPaymentMessage","setPayPalOrderId","paymentErroredOut","setPaymentErroredOut","paymentSuccess","setPaymentSuccess","setIsCard","useEffect","paymentMode","paypalOrderId","cartTotalPrice","paypalButton","close","current","didPriceChanged","togglePaymenModal","fundingType","successPaypalPayment","onClick","fundingSource","addressId","cartTotalWithShipping","cartOrderId","setNoAddressError","setTimeout","onError","console","log","render","go","tt","funding","innerWidth","scrollTo","top","behavior","setContainerIsCard","orderData","paymentData","paypalData","paypalResponse","quantityCount","isStandard","userAddress","addressLineOne","addressLineTwo","addressLineThree","city","pincode","country","userName","firstName","lastName","ref","uk-toggle","uk-modal","uk-close","uk-spinner","CashOnDeliveryPayment","showOtpContainer","timeLeft","setTimeLeft","enteredOTP","setEnteredOTP","timer","setInterval","clearTimeout","resendOtpToCustomer","uk-grid","onChange","e","currentTarget","QuickProductList","uk-slider","uk-slider-item","uk-slidenav-previous","uk-slidenav-next","imagePaths","alt","imageNames","uk-icon","userId","cartData","addToCart","LoadingProductArticle","keyIndex","ScrollToTop","withRouter","unlisten","listen","pathname","ContactUs","contactUsStatus","contactUsFormik","useFormik","initialValues","email","validationSchema","Yup","required","onSubmit","values","handleSubmit","getFieldProps","touched","errors","About","ReturnPolicy","UserInformation","isLoading","userInformationFormik","mobile","dob","gender","default","countryCode","matches","enableReinitialize","fromCart","disabled","UserNav","uk-sticky","showPersonal","toggelDetails","showOrders","showSettings","UserSettings","userSettingFormik","currentPassword","newPassword","confirmPassword","oneOf","resetForm","Orders","hasMoreOrders","setHasMoreOrders","selectedReason","setSelectedReason","showOrderDetailIndex","setShowOrderDetailIndex","returnOrderDetailId","setReturnOrderDetailId","returnOrderNumber","setReturnOrderNumber","returnProductName","setReturnProductName","showReturnError","setShowReturnError","returnModalRef","returnButtonRef","orders","shipperData","getBoundingClientRect","that","getShipmentLink","trackingNumber","shipperInfo","target","checkReturnEligibilty","deliveryDate","differenceInDays","Date","getTime","returnOrder","reason","orderNumber","returnReason","customerProductReturn","downloadInvoice","doc","jsPDF","invoiceData","toLocaleDateString","html","x","y","save","dataLength","next","hasMore","loader","textAlign","marginTop","endMessage","paymentDate","paymentReturned","standardShipping","shippingDate","uk-accordion","orderItem","visibility","checked","UserContainer","userTab","useParams","setShowSettings","setShowPersonal","setShowOrders","selected","UserLogin","isError","responseMessage","loginRedirect","setLoginRedirect","loginFormik","password","isRegistration","forgetPassword","when","is","registerationData","loginData","loginDetails","access_token","toggleLoginRegister","setFieldValue","parse","to","event","Iso","MainFooter","width","Navigation","cartCount","setCartCount","enteredSearchText","setEnteredSearchText","cartCountCssFlag","setCartCountCssFlag","sideCartRef","mobileNavigationRef","Intl","DateTimeFormat","resolvedOptions","timeZone","getTimezoneOffset","searchProduct","doRedirect","navigateTo","categoryPath","subcategoryPath","preventDefault","logout","uk-navbar","uk-navbar-toggle-icon","uk-drop","uk-search-icon","placeholder","onKeyPress","uk-dropdown","minWidth","SideCart","setMainTotal","userDiscountTotal","setUserDiscountTotal","totalAfterDiscount","setTotalAfterDiscount","discountedTotal","setDiscountedTotal","userCouponTotal","setUserCouponTotal","cartPrice","discountPrice","priceAfterDiscount","couponPrice","priceAfterCoupon","uk-offcanvas","uk-tooltip","MobileNavigation","uk-nav","AdminNav","subProductToggle","addEditToggle","selectedTab","setSelectedTab","isOnList","setIsOnList","PRODUCT","title","USERS","ORDERS","SUB_PRODUCT","SIZE","COLOUR","COUPONS","SHIPPER","AdminProductList","searchTerm","setSearchTerm","tabName","setTabName","isDownloadDone","setIsDownloadDone","adminOrderDataCsv","tableData","setTableData","stateData","columns","productColumns","productType","getAdminOrders","includes","getOrdersCsvData","defaultSortField","sortByColumn","defaultSortAsc","selectableRows","selectableRowsNoSelectAll","selectableRowsHighlight","selectableRowsVisibleOnly","expandableRows","expandOnRowClicked","expandableRowsComponent","ExpandableComponent","pagination","highlightOnHover","striped","pointerOnHover","dense","noTableHead","persistTableHead","progressPending","noHeader","subHeader","subHeaderComponent","color","searchPlaceholder","fixedHeader","fixedHeaderScrollHeight","direction","colourActionStatus","colourQuickViewFormik","product_color_code","product_color","colour_id","isSubmitting","ColourList","selector","sortable","ProductColour","colourFormik","ProductSize","sizeFormik","sizeActionStatus","SizeList","sizeQuickViewFormik","ProductSubCategory","subCategoryFormik","moreThan","subCategoryActionStatus","SubCategoryList","subCategoryQuickViewFormik","ProductCoupon","couponFormik","couponActionStatus","CouponList","cell","row","confirm","couponQuickViewFormik","ProductItem","setSizeColourQuantity","selectedSizes","setSelectedSizes","sizeColourQuantityErrorMessage","setSizeColourQuantityErrorMessage","productItemFormik","sizeColourQuantityCombo","filteredKey","checkForProductCategory","updatedImageName","adminProductCombo","productDetailIdArray","some","productSize","productColour","productActionStatus","colourArray","quantityArray","editSizeColourQuantityCombo","sizeItem","filteredSubcategories","filteredProductSize","updatedSizeColourQuantityArray","field","currentItem","splice","cols","handleChange","onBlur","handleBlur","fill","isArray","newPDArray","reduceProductComboLength","availableSizes","addProductComboLength","htmlFor","multiple","files","currentNumberOfFile","currentFiles","filesArray","checkForMaxFileUpload","fileName","filePath","fileNames","path","imagePath","imageName","removeCurrentImage","getFileNameAndPath","call","file","i","URL","createObjectURL","img","removeImage","ProductList","marginLeft","listSingleImage","productQuickViewFormik","highlight","setSubmitting","updateProductHighLight","OrderList","wrap","icon","orderLength","getIconForAdminOrder","whiteSpace","OrderDetails","adminShipmentData","setAdminShipmentData","orginalTrackingLink","setOrginalTrackingLink","sameShippingData","setSameShippingData","sameShippingEmail","setSameShippingEmail","shippers","shipmentStatus","tempShipmentData","tempTrackingLink","shipmentId","updateShipmentData","shipmentDataCopy","shipmentDataToUpdate","updatedShipmentData","updateOrderStatus","orderUpdate","sendTrackingEmail","isTrackingChanged","orginalTrackingLinkCopy","customerEmail","userDetails","customerName","payaplResponse","transactionId","payments","captures","getPaypalTransactionId","razorpayPaymentId","tempSameShippingData","tempSameShippingEmail","val","selectItem","ShipperDetails","shipperActionStatus","shipperFormik","ShipperList","shipperQuickViewFormik","UserList","userActionStatus","userDiscountQuickViewFormik","updateUserDiscount","UserDetails","MainContainer","setIsOnAdd","setSubProductId","isOnAdd","subProductId","showSubProductComponent","CustomerProductList","filterOn","hasMoreProducts","setHasMoreProducts","preSelectedFilter","queryString","searchArray","lastViewdProduct","getElementById","scrollIntoView","block","CustomerProductFilter","filterColourId","setFilterColourId","filterSizeId","setFilterSizeId","filterSubCategory","setFilterSubCategory","filterStartPrice","setFilterStartPrice","filterEndPrice","setFilterEndPrice","startPriceTimer","setStartPriceTimer","endPriceTimer","setEndPriceTimer","toggleAddingRemovingId","ids","newId","getFilteredProduct","updatedColourFilter","setColourId","updatedSizeFilter","setSizeId","updatedSubCategory","setSubCategoryId","setEndPrice","setStartPrice","restFilter","convertQueryParamsToNumber","query","queryPramas","filterPrams","colourFilter","sizeFilter","subCategoryFilter","startPriceFilter","endPriceFilter","filterSelected","flexBasis","activeProductCount","selectedColour","selectedSize","selectedSubCat","localCount","getProductCount","Boolean","hostname","CustomerProductDetails","cartProductQuantity","isActive","relatedProducts","pINR","setPINR","pUSD","setPUSD","pQuantity","setPQuantity","pSize","setPSize","pSizeId","setPSizeId","pDetailId","setPDetailId","setSelectedSize","selectedQuantity","setSelectedQuantity","selectedProductDetailId","setSelectedProductDetailId","maxQuantity","setMaxQuantity","showInch","setShowInch","defaultProductDetail","productIndex","onChangeQuantity","toggleQuantity","isIncrement","maxQaun","checkForDefaultSize","sizeList","uk-slideshow","uk-lightbox","mainSlider","smallSlider","selectedIndex","maxQ","pdId","setSize","onBlurQuantity","uk-switcher","CustomerProductDetailsLoading","uk-slideshow-item","CustomerProductDetailsConstainer","queryProductId","setMainSlider","setSmallSlider","setCartProductQuantity","cartProductFlag","setCartProductFlag","tabIndex","cartProductCount","getRelatedProduct","CartDetails","setQuantity","enteredCoupon","setEnteredCoupon","quantityCheckMessage","setQuantityCheckMessage","couponStatus","deboucedId","setDeboucedId","quantityChanged","setQuantityChanged","quantityChangedProductId","setQuantityChangedProductId","orderQuantityCheckButtonRef","orderQuantityCheckModalRef","qt","checkForAvailableQuantity","cartItem","availableQuantity","updateCart","updateQantity","changedQuantity","chqty","newQuantity","updatedQuantity","checkCouponValidity","deleteCart","CartPrice","cartTotal","setCartTotal","total","CustomerCartContainer","Razorpay","CheckoutPrice","setCartTotalPrice","priceAfterShipping","setPriceAfterShipping","setQuantityCount","setCartOrderId","paymentMessage","setPaymentMessage","paymentError","setPaymentError","errorHappendAt","setErrorHappendAt","paymentLoadingRef","containerIsCard","ukSticky","setUkSicky","showCodContainer","setShowCodContainer","noAddressError","setDidPriceChanged","timeForShowPriceChange","setTimeForShowPriceChange","calculateShippingCost","shippingType","successRazorPay","razorpay_payment_id","razorpay_order_id","razorpay_signature","rzp1","on","source","step","metadata","open","otp","razorpayOrderId","razorpaySignature","razorpayData","receipt","proceedWithPayment","getCodOrder","successCod","codData","itemCount","accumulator","cost","CheckoutContainer","setPaymentMode","internationalShipping","setInternationalShipping","Banner","backgroundColor","uk-cover","TrendingLatestProducts","uk-scrollspy","TrendingContainer","trendingProducts","LatestContainer","latestProducts","PromoBanner","uk-parallax","HomePageContainer","MobileBanner","MobilePromoBanner","height","FooterBanner","app","StrictMode","createBrowserHistory","exact","component","setcategoryId","subCategoryQueryParam","setSubCategoryQueryParam","querySearch","useLocation","locationKeys","setLocationKeys","goForward","goBack","subCateId","productKey","find","getTotalProductCount","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.03345ce5.chunk.js","sourcesContent":["enum HttpRequest {\r\n  GET = \"GET\",\r\n  POST = \"POST\",\r\n  DELETE = \"DELETE\",\r\n  PATCH = \"PATCH\"\r\n};\r\n\r\n\r\nenum HttpStatusCode {\r\n  OK = 200,\r\n  ACCEPTED = 202,\r\n  PARTIAL_INFO = 203,\r\n  BAD_REQUEST = 400,\r\n  NOT_FOUND = 404\r\n}\r\n\r\nexport { HttpRequest, HttpStatusCode };","const CountryCodes = [\r\n  {\r\n    \"name\": \"Afghanistan\",\r\n    \"Iso\": \"+93\",\r\n    \"countryCode\": \"AF\"\r\n  },\r\n  {\r\n    \"name\": \"Åland Islands\",\r\n    \"Iso\": \"+358\",\r\n    \"countryCode\": \"AX\"\r\n  },\r\n  {\r\n    \"name\": \"Albania\",\r\n    \"Iso\": \"+355\",\r\n    \"countryCode\": \"AL\"\r\n  },\r\n  {\r\n    \"name\": \"Algeria\",\r\n    \"Iso\": \"+213\",\r\n    \"countryCode\": \"DZ\"\r\n  },\r\n  {\r\n    \"name\": \"American Samoa\",\r\n    \"Iso\": \"+1684\",\r\n    \"countryCode\": \"AS\"\r\n  },\r\n  {\r\n    \"name\": \"Andorra\",\r\n    \"Iso\": \"+376\",\r\n    \"countryCode\": \"AD\"\r\n  },\r\n  {\r\n    \"name\": \"Angola\",\r\n    \"Iso\": \"+244\",\r\n    \"countryCode\": \"AO\"\r\n  },\r\n  {\r\n    \"name\": \"Anguilla\",\r\n    \"Iso\": \"+1264\",\r\n    \"countryCode\": \"AI\"\r\n  },\r\n  {\r\n    \"name\": \"Antarctica\",\r\n    \"Iso\": \"+672\",\r\n    \"countryCode\": \"AQ\"\r\n  },\r\n  {\r\n    \"name\": \"Antigua and Barbuda\",\r\n    \"Iso\": \"+1268\",\r\n    \"countryCode\": \"AG\"\r\n  },\r\n  {\r\n    \"name\": \"Argentina\",\r\n    \"Iso\": \"+54\",\r\n    \"countryCode\": \"AR\"\r\n  },\r\n  {\r\n    \"name\": \"Armenia\",\r\n    \"Iso\": \"+374\",\r\n    \"countryCode\": \"AM\"\r\n  },\r\n  {\r\n    \"name\": \"Aruba\",\r\n    \"Iso\": \"+297\",\r\n    \"countryCode\": \"AW\"\r\n  },\r\n  {\r\n    \"name\": \"Australia\",\r\n    \"Iso\": \"+61\",\r\n    \"countryCode\": \"AU\"\r\n  },\r\n  {\r\n    \"name\": \"Austria\",\r\n    \"Iso\": \"+43\",\r\n    \"countryCode\": \"AT\"\r\n  },\r\n  {\r\n    \"name\": \"Azerbaijan\",\r\n    \"Iso\": \"+994\",\r\n    \"countryCode\": \"AZ\"\r\n  },\r\n  {\r\n    \"name\": \"Bahamas\",\r\n    \"Iso\": \"+1242\",\r\n    \"countryCode\": \"BS\"\r\n  },\r\n  {\r\n    \"name\": \"Bahrain\",\r\n    \"Iso\": \"+973\",\r\n    \"countryCode\": \"BH\"\r\n  },\r\n  {\r\n    \"name\": \"Bangladesh\",\r\n    \"Iso\": \"+880\",\r\n    \"countryCode\": \"BD\"\r\n  },\r\n  {\r\n    \"name\": \"Barbados\",\r\n    \"Iso\": \"+1246\",\r\n    \"countryCode\": \"BB\"\r\n  },\r\n  {\r\n    \"name\": \"Belarus\",\r\n    \"Iso\": \"+375\",\r\n    \"countryCode\": \"BY\"\r\n  },\r\n  {\r\n    \"name\": \"Belgium\",\r\n    \"Iso\": \"+32\",\r\n    \"countryCode\": \"BE\"\r\n  },\r\n  {\r\n    \"name\": \"Belize\",\r\n    \"Iso\": \"+501\",\r\n    \"countryCode\": \"BZ\"\r\n  },\r\n  {\r\n    \"name\": \"Benin\",\r\n    \"Iso\": \"+229\",\r\n    \"countryCode\": \"BJ\"\r\n  },\r\n  {\r\n    \"name\": \"Bermuda\",\r\n    \"Iso\": \"+1441\",\r\n    \"countryCode\": \"BM\"\r\n  },\r\n  {\r\n    \"name\": \"Bhutan\",\r\n    \"Iso\": \"+975\",\r\n    \"countryCode\": \"BT\"\r\n  },\r\n  {\r\n    \"name\": \"Bolivia, Plurinational State of bolivia\",\r\n    \"Iso\": \"+591\",\r\n    \"countryCode\": \"BO\"\r\n  },\r\n  {\r\n    \"name\": \"Bosnia and Herzegovina\",\r\n    \"Iso\": \"+387\",\r\n    \"countryCode\": \"BA\"\r\n  },\r\n  {\r\n    \"name\": \"Botswana\",\r\n    \"Iso\": \"+267\",\r\n    \"countryCode\": \"BW\"\r\n  },\r\n  {\r\n    \"name\": \"Bouvet Island\",\r\n    \"Iso\": \"+47\",\r\n    \"countryCode\": \"BV\"\r\n  },\r\n  {\r\n    \"name\": \"Brazil\",\r\n    \"Iso\": \"+55\",\r\n    \"countryCode\": \"BR\"\r\n  },\r\n  {\r\n    \"name\": \"British Indian Ocean Territory\",\r\n    \"Iso\": \"+246\",\r\n    \"countryCode\": \"IO\"\r\n  },\r\n  {\r\n    \"name\": \"Brunei Darussalam\",\r\n    \"Iso\": \"+673\",\r\n    \"countryCode\": \"BN\"\r\n  },\r\n  {\r\n    \"name\": \"Bulgaria\",\r\n    \"Iso\": \"+359\",\r\n    \"countryCode\": \"BG\"\r\n  },\r\n  {\r\n    \"name\": \"Burkina Faso\",\r\n    \"Iso\": \"+226\",\r\n    \"countryCode\": \"BF\"\r\n  },\r\n  {\r\n    \"name\": \"Burundi\",\r\n    \"Iso\": \"+257\",\r\n    \"countryCode\": \"BI\"\r\n  },\r\n  {\r\n    \"name\": \"Cambodia\",\r\n    \"Iso\": \"+855\",\r\n    \"countryCode\": \"KH\"\r\n  },\r\n  {\r\n    \"name\": \"Cameroon\",\r\n    \"Iso\": \"+237\",\r\n    \"countryCode\": \"CM\"\r\n  },\r\n  {\r\n    \"name\": \"Canada\",\r\n    \"Iso\": \"+1\",\r\n    \"countryCode\": \"CA\"\r\n  },\r\n  {\r\n    \"name\": \"Cape Verde\",\r\n    \"Iso\": \"+238\",\r\n    \"countryCode\": \"CV\"\r\n  },\r\n  {\r\n    \"name\": \"Cayman Islands\",\r\n    \"Iso\": \"+ 345\",\r\n    \"countryCode\": \"KY\"\r\n  },\r\n  {\r\n    \"name\": \"Central African Republic\",\r\n    \"Iso\": \"+236\",\r\n    \"countryCode\": \"CF\"\r\n  },\r\n  {\r\n    \"name\": \"Chad\",\r\n    \"Iso\": \"+235\",\r\n    \"countryCode\": \"TD\"\r\n  },\r\n  {\r\n    \"name\": \"Chile\",\r\n    \"Iso\": \"+56\",\r\n    \"countryCode\": \"CL\"\r\n  },\r\n  {\r\n    \"name\": \"China\",\r\n    \"Iso\": \"+86\",\r\n    \"countryCode\": \"CN\"\r\n  },\r\n  {\r\n    \"name\": \"Christmas Island\",\r\n    \"Iso\": \"+61\",\r\n    \"countryCode\": \"CX\"\r\n  },\r\n  {\r\n    \"name\": \"Cocos (Keeling) Islands\",\r\n    \"Iso\": \"+61\",\r\n    \"countryCode\": \"CC\"\r\n  },\r\n  {\r\n    \"name\": \"Colombia\",\r\n    \"Iso\": \"+57\",\r\n    \"countryCode\": \"CO\"\r\n  },\r\n  {\r\n    \"name\": \"Comoros\",\r\n    \"Iso\": \"+269\",\r\n    \"countryCode\": \"KM\"\r\n  },\r\n  {\r\n    \"name\": \"Congo\",\r\n    \"Iso\": \"+242\",\r\n    \"countryCode\": \"CG\"\r\n  },\r\n  {\r\n    \"name\": \"Congo, The Democratic Republic of the Congo\",\r\n    \"Iso\": \"+243\",\r\n    \"countryCode\": \"CD\"\r\n  },\r\n  {\r\n    \"name\": \"Cook Islands\",\r\n    \"Iso\": \"+682\",\r\n    \"countryCode\": \"CK\"\r\n  },\r\n  {\r\n    \"name\": \"Costa Rica\",\r\n    \"Iso\": \"+506\",\r\n    \"countryCode\": \"CR\"\r\n  },\r\n  {\r\n    \"name\": \"Cote d'Ivoire\",\r\n    \"Iso\": \"+225\",\r\n    \"countryCode\": \"CI\"\r\n  },\r\n  {\r\n    \"name\": \"Croatia\",\r\n    \"Iso\": \"+385\",\r\n    \"countryCode\": \"HR\"\r\n  },\r\n  {\r\n    \"name\": \"Cuba\",\r\n    \"Iso\": \"+53\",\r\n    \"countryCode\": \"CU\"\r\n  },\r\n  {\r\n    \"name\": \"Cyprus\",\r\n    \"Iso\": \"+357\",\r\n    \"countryCode\": \"CY\"\r\n  },\r\n  {\r\n    \"name\": \"Czech Republic\",\r\n    \"Iso\": \"+420\",\r\n    \"countryCode\": \"CZ\"\r\n  },\r\n  {\r\n    \"name\": \"Denmark\",\r\n    \"Iso\": \"+45\",\r\n    \"countryCode\": \"DK\"\r\n  },\r\n  {\r\n    \"name\": \"Djibouti\",\r\n    \"Iso\": \"+253\",\r\n    \"countryCode\": \"DJ\"\r\n  },\r\n  {\r\n    \"name\": \"Dominica\",\r\n    \"Iso\": \"+1767\",\r\n    \"countryCode\": \"DM\"\r\n  },\r\n  {\r\n    \"name\": \"Dominican Republic\",\r\n    \"Iso\": \"+1849\",\r\n    \"countryCode\": \"DO\"\r\n  },\r\n  {\r\n    \"name\": \"Ecuador\",\r\n    \"Iso\": \"+593\",\r\n    \"countryCode\": \"EC\"\r\n  },\r\n  {\r\n    \"name\": \"Egypt\",\r\n    \"Iso\": \"+20\",\r\n    \"countryCode\": \"EG\"\r\n  },\r\n  {\r\n    \"name\": \"El Salvador\",\r\n    \"Iso\": \"+503\",\r\n    \"countryCode\": \"SV\"\r\n  },\r\n  {\r\n    \"name\": \"Equatorial Guinea\",\r\n    \"Iso\": \"+240\",\r\n    \"countryCode\": \"GQ\"\r\n  },\r\n  {\r\n    \"name\": \"Eritrea\",\r\n    \"Iso\": \"+291\",\r\n    \"countryCode\": \"ER\"\r\n  },\r\n  {\r\n    \"name\": \"Estonia\",\r\n    \"Iso\": \"+372\",\r\n    \"countryCode\": \"EE\"\r\n  },\r\n  {\r\n    \"name\": \"Ethiopia\",\r\n    \"Iso\": \"+251\",\r\n    \"countryCode\": \"ET\"\r\n  },\r\n  {\r\n    \"name\": \"Falkland Islands (Malvinas)\",\r\n    \"Iso\": \"+500\",\r\n    \"countryCode\": \"FK\"\r\n  },\r\n  {\r\n    \"name\": \"Faroe Islands\",\r\n    \"Iso\": \"+298\",\r\n    \"countryCode\": \"FO\"\r\n  },\r\n  {\r\n    \"name\": \"Fiji\",\r\n    \"Iso\": \"+679\",\r\n    \"countryCode\": \"FJ\"\r\n  },\r\n  {\r\n    \"name\": \"Finland\",\r\n    \"Iso\": \"+358\",\r\n    \"countryCode\": \"FI\"\r\n  },\r\n  {\r\n    \"name\": \"France\",\r\n    \"Iso\": \"+33\",\r\n    \"countryCode\": \"FR\"\r\n  },\r\n  {\r\n    \"name\": \"French Guiana\",\r\n    \"Iso\": \"+594\",\r\n    \"countryCode\": \"GF\"\r\n  },\r\n  {\r\n    \"name\": \"French Polynesia\",\r\n    \"Iso\": \"+689\",\r\n    \"countryCode\": \"PF\"\r\n  },\r\n  {\r\n    \"name\": \"French Southern Territories\",\r\n    \"Iso\": \"+262\",\r\n    \"countryCode\": \"TF\"\r\n  },\r\n  {\r\n    \"name\": \"Gabon\",\r\n    \"Iso\": \"+241\",\r\n    \"countryCode\": \"GA\"\r\n  },\r\n  {\r\n    \"name\": \"Gambia\",\r\n    \"Iso\": \"+220\",\r\n    \"countryCode\": \"GM\"\r\n  },\r\n  {\r\n    \"name\": \"Georgia\",\r\n    \"Iso\": \"+995\",\r\n    \"countryCode\": \"GE\"\r\n  },\r\n  {\r\n    \"name\": \"Germany\",\r\n    \"Iso\": \"+49\",\r\n    \"countryCode\": \"DE\"\r\n  },\r\n  {\r\n    \"name\": \"Ghana\",\r\n    \"Iso\": \"+233\",\r\n    \"countryCode\": \"GH\"\r\n  },\r\n  {\r\n    \"name\": \"Gibraltar\",\r\n    \"Iso\": \"+350\",\r\n    \"countryCode\": \"GI\"\r\n  },\r\n  {\r\n    \"name\": \"Greece\",\r\n    \"Iso\": \"+30\",\r\n    \"countryCode\": \"GR\"\r\n  },\r\n  {\r\n    \"name\": \"Greenland\",\r\n    \"Iso\": \"+299\",\r\n    \"countryCode\": \"GL\"\r\n  },\r\n  {\r\n    \"name\": \"Grenada\",\r\n    \"Iso\": \"+1473\",\r\n    \"countryCode\": \"GD\"\r\n  },\r\n  {\r\n    \"name\": \"Guadeloupe\",\r\n    \"Iso\": \"+590\",\r\n    \"countryCode\": \"GP\"\r\n  },\r\n  {\r\n    \"name\": \"Guam\",\r\n    \"Iso\": \"+1671\",\r\n    \"countryCode\": \"GU\"\r\n  },\r\n  {\r\n    \"name\": \"Guatemala\",\r\n    \"Iso\": \"+502\",\r\n    \"countryCode\": \"GT\"\r\n  },\r\n  {\r\n    \"name\": \"Guernsey\",\r\n    \"Iso\": \"+44\",\r\n    \"countryCode\": \"GG\"\r\n  },\r\n  {\r\n    \"name\": \"Guinea\",\r\n    \"Iso\": \"+224\",\r\n    \"countryCode\": \"GN\"\r\n  },\r\n  {\r\n    \"name\": \"Guinea-Bissau\",\r\n    \"Iso\": \"+245\",\r\n    \"countryCode\": \"GW\"\r\n  },\r\n  {\r\n    \"name\": \"Guyana\",\r\n    \"Iso\": \"+592\",\r\n    \"countryCode\": \"GY\"\r\n  },\r\n  {\r\n    \"name\": \"Haiti\",\r\n    \"Iso\": \"+509\",\r\n    \"countryCode\": \"HT\"\r\n  },\r\n  {\r\n    \"name\": \"Heard Island and Mcdonald Islands\",\r\n    \"Iso\": \"+0\",\r\n    \"countryCode\": \"HM\"\r\n  },\r\n  {\r\n    \"name\": \"Holy See (Vatican City State)\",\r\n    \"Iso\": \"+379\",\r\n    \"countryCode\": \"VA\"\r\n  },\r\n  {\r\n    \"name\": \"Honduras\",\r\n    \"Iso\": \"+504\",\r\n    \"countryCode\": \"HN\"\r\n  },\r\n  {\r\n    \"name\": \"Hong Kong\",\r\n    \"Iso\": \"+852\",\r\n    \"countryCode\": \"HK\"\r\n  },\r\n  {\r\n    \"name\": \"Hungary\",\r\n    \"Iso\": \"+36\",\r\n    \"countryCode\": \"HU\"\r\n  },\r\n  {\r\n    \"name\": \"Iceland\",\r\n    \"Iso\": \"+354\",\r\n    \"countryCode\": \"IS\"\r\n  },\r\n  {\r\n    \"name\": \"India\",\r\n    \"Iso\": \"+91\",\r\n    \"countryCode\": \"IN\",\r\n    \"default\" : true\r\n  },\r\n  {\r\n    \"name\": \"Indonesia\",\r\n    \"Iso\": \"+62\",\r\n    \"countryCode\": \"ID\"\r\n  },\r\n  {\r\n    \"name\": \"Iran, Islamic Republic of Persian Gulf\",\r\n    \"Iso\": \"+98\",\r\n    \"countryCode\": \"IR\"\r\n  },\r\n  {\r\n    \"name\": \"Iraq\",\r\n    \"Iso\": \"+964\",\r\n    \"countryCode\": \"IQ\"\r\n  },\r\n  {\r\n    \"name\": \"Ireland\",\r\n    \"Iso\": \"+353\",\r\n    \"countryCode\": \"IE\"\r\n  },\r\n  {\r\n    \"name\": \"Isle of Man\",\r\n    \"Iso\": \"+44\",\r\n    \"countryCode\": \"IM\"\r\n  },\r\n  {\r\n    \"name\": \"Israel\",\r\n    \"Iso\": \"+972\",\r\n    \"countryCode\": \"IL\"\r\n  },\r\n  {\r\n    \"name\": \"Italy\",\r\n    \"Iso\": \"+39\",\r\n    \"countryCode\": \"IT\"\r\n  },\r\n  {\r\n    \"name\": \"Jamaica\",\r\n    \"Iso\": \"+1876\",\r\n    \"countryCode\": \"JM\"\r\n  },\r\n  {\r\n    \"name\": \"Japan\",\r\n    \"Iso\": \"+81\",\r\n    \"countryCode\": \"JP\"\r\n  },\r\n  {\r\n    \"name\": \"Jersey\",\r\n    \"Iso\": \"+44\",\r\n    \"countryCode\": \"JE\"\r\n  },\r\n  {\r\n    \"name\": \"Jordan\",\r\n    \"Iso\": \"+962\",\r\n    \"countryCode\": \"JO\"\r\n  },\r\n  {\r\n    \"name\": \"Kazakhstan\",\r\n    \"Iso\": \"+7\",\r\n    \"countryCode\": \"KZ\"\r\n  },\r\n  {\r\n    \"name\": \"Kenya\",\r\n    \"Iso\": \"+254\",\r\n    \"countryCode\": \"KE\"\r\n  },\r\n  {\r\n    \"name\": \"Kiribati\",\r\n    \"Iso\": \"+686\",\r\n    \"countryCode\": \"KI\"\r\n  },\r\n  {\r\n    \"name\": \"Korea, Democratic People's Republic of Korea\",\r\n    \"Iso\": \"+850\",\r\n    \"countryCode\": \"KP\"\r\n  },\r\n  {\r\n    \"name\": \"Korea, Republic of South Korea\",\r\n    \"Iso\": \"+82\",\r\n    \"countryCode\": \"KR\"\r\n  },\r\n  {\r\n    \"name\": \"Kosovo\",\r\n    \"Iso\": \"+383\",\r\n    \"countryCode\": \"XK\"\r\n  },\r\n  {\r\n    \"name\": \"Kuwait\",\r\n    \"Iso\": \"+965\",\r\n    \"countryCode\": \"KW\"\r\n  },\r\n  {\r\n    \"name\": \"Kyrgyzstan\",\r\n    \"Iso\": \"+996\",\r\n    \"countryCode\": \"KG\"\r\n  },\r\n  {\r\n    \"name\": \"Laos\",\r\n    \"Iso\": \"+856\",\r\n    \"countryCode\": \"LA\"\r\n  },\r\n  {\r\n    \"name\": \"Latvia\",\r\n    \"Iso\": \"+371\",\r\n    \"countryCode\": \"LV\"\r\n  },\r\n  {\r\n    \"name\": \"Lebanon\",\r\n    \"Iso\": \"+961\",\r\n    \"countryCode\": \"LB\"\r\n  },\r\n  {\r\n    \"name\": \"Lesotho\",\r\n    \"Iso\": \"+266\",\r\n    \"countryCode\": \"LS\"\r\n  },\r\n  {\r\n    \"name\": \"Liberia\",\r\n    \"Iso\": \"+231\",\r\n    \"countryCode\": \"LR\"\r\n  },\r\n  {\r\n    \"name\": \"Libyan Arab Jamahiriya\",\r\n    \"Iso\": \"+218\",\r\n    \"countryCode\": \"LY\"\r\n  },\r\n  {\r\n    \"name\": \"Liechtenstein\",\r\n    \"Iso\": \"+423\",\r\n    \"countryCode\": \"LI\"\r\n  },\r\n  {\r\n    \"name\": \"Lithuania\",\r\n    \"Iso\": \"+370\",\r\n    \"countryCode\": \"LT\"\r\n  },\r\n  {\r\n    \"name\": \"Luxembourg\",\r\n    \"Iso\": \"+352\",\r\n    \"countryCode\": \"LU\"\r\n  },\r\n  {\r\n    \"name\": \"Macao\",\r\n    \"Iso\": \"+853\",\r\n    \"countryCode\": \"MO\"\r\n  },\r\n  {\r\n    \"name\": \"Macedonia\",\r\n    \"Iso\": \"+389\",\r\n    \"countryCode\": \"MK\"\r\n  },\r\n  {\r\n    \"name\": \"Madagascar\",\r\n    \"Iso\": \"+261\",\r\n    \"countryCode\": \"MG\"\r\n  },\r\n  {\r\n    \"name\": \"Malawi\",\r\n    \"Iso\": \"+265\",\r\n    \"countryCode\": \"MW\"\r\n  },\r\n  {\r\n    \"name\": \"Malaysia\",\r\n    \"Iso\": \"+60\",\r\n    \"countryCode\": \"MY\"\r\n  },\r\n  {\r\n    \"name\": \"Maldives\",\r\n    \"Iso\": \"+960\",\r\n    \"countryCode\": \"MV\"\r\n  },\r\n  {\r\n    \"name\": \"Mali\",\r\n    \"Iso\": \"+223\",\r\n    \"countryCode\": \"ML\"\r\n  },\r\n  {\r\n    \"name\": \"Malta\",\r\n    \"Iso\": \"+356\",\r\n    \"countryCode\": \"MT\"\r\n  },\r\n  {\r\n    \"name\": \"Marshall Islands\",\r\n    \"Iso\": \"+692\",\r\n    \"countryCode\": \"MH\"\r\n  },\r\n  {\r\n    \"name\": \"Martinique\",\r\n    \"Iso\": \"+596\",\r\n    \"countryCode\": \"MQ\"\r\n  },\r\n  {\r\n    \"name\": \"Mauritania\",\r\n    \"Iso\": \"+222\",\r\n    \"countryCode\": \"MR\"\r\n  },\r\n  {\r\n    \"name\": \"Mauritius\",\r\n    \"Iso\": \"+230\",\r\n    \"countryCode\": \"MU\"\r\n  },\r\n  {\r\n    \"name\": \"Mayotte\",\r\n    \"Iso\": \"+262\",\r\n    \"countryCode\": \"YT\"\r\n  },\r\n  {\r\n    \"name\": \"Mexico\",\r\n    \"Iso\": \"+52\",\r\n    \"countryCode\": \"MX\"\r\n  },\r\n  {\r\n    \"name\": \"Micronesia, Federated States of Micronesia\",\r\n    \"Iso\": \"+691\",\r\n    \"countryCode\": \"FM\"\r\n  },\r\n  {\r\n    \"name\": \"Moldova\",\r\n    \"Iso\": \"+373\",\r\n    \"countryCode\": \"MD\"\r\n  },\r\n  {\r\n    \"name\": \"Monaco\",\r\n    \"Iso\": \"+377\",\r\n    \"countryCode\": \"MC\"\r\n  },\r\n  {\r\n    \"name\": \"Mongolia\",\r\n    \"Iso\": \"+976\",\r\n    \"countryCode\": \"MN\"\r\n  },\r\n  {\r\n    \"name\": \"Montenegro\",\r\n    \"Iso\": \"+382\",\r\n    \"countryCode\": \"ME\"\r\n  },\r\n  {\r\n    \"name\": \"Montserrat\",\r\n    \"Iso\": \"+1664\",\r\n    \"countryCode\": \"MS\"\r\n  },\r\n  {\r\n    \"name\": \"Morocco\",\r\n    \"Iso\": \"+212\",\r\n    \"countryCode\": \"MA\"\r\n  },\r\n  {\r\n    \"name\": \"Mozambique\",\r\n    \"Iso\": \"+258\",\r\n    \"countryCode\": \"MZ\"\r\n  },\r\n  {\r\n    \"name\": \"Myanmar\",\r\n    \"Iso\": \"+95\",\r\n    \"countryCode\": \"MM\"\r\n  },\r\n  {\r\n    \"name\": \"Namibia\",\r\n    \"Iso\": \"+264\",\r\n    \"countryCode\": \"NA\"\r\n  },\r\n  {\r\n    \"name\": \"Nauru\",\r\n    \"Iso\": \"+674\",\r\n    \"countryCode\": \"NR\"\r\n  },\r\n  {\r\n    \"name\": \"Nepal\",\r\n    \"Iso\": \"+977\",\r\n    \"countryCode\": \"NP\"\r\n  },\r\n  {\r\n    \"name\": \"Netherlands\",\r\n    \"Iso\": \"+31\",\r\n    \"countryCode\": \"NL\"\r\n  },\r\n  {\r\n    \"name\": \"Netherlands Antilles\",\r\n    \"Iso\": \"+599\",\r\n    \"countryCode\": \"AN\"\r\n  },\r\n  {\r\n    \"name\": \"New Caledonia\",\r\n    \"Iso\": \"+687\",\r\n    \"countryCode\": \"NC\"\r\n  },\r\n  {\r\n    \"name\": \"New Zealand\",\r\n    \"Iso\": \"+64\",\r\n    \"countryCode\": \"NZ\"\r\n  },\r\n  {\r\n    \"name\": \"Nicaragua\",\r\n    \"Iso\": \"+505\",\r\n    \"countryCode\": \"NI\"\r\n  },\r\n  {\r\n    \"name\": \"Niger\",\r\n    \"Iso\": \"+227\",\r\n    \"countryCode\": \"NE\"\r\n  },\r\n  {\r\n    \"name\": \"Nigeria\",\r\n    \"Iso\": \"+234\",\r\n    \"countryCode\": \"NG\"\r\n  },\r\n  {\r\n    \"name\": \"Niue\",\r\n    \"Iso\": \"+683\",\r\n    \"countryCode\": \"NU\"\r\n  },\r\n  {\r\n    \"name\": \"Norfolk Island\",\r\n    \"Iso\": \"+672\",\r\n    \"countryCode\": \"NF\"\r\n  },\r\n  {\r\n    \"name\": \"Northern Mariana Islands\",\r\n    \"Iso\": \"+1670\",\r\n    \"countryCode\": \"MP\"\r\n  },\r\n  {\r\n    \"name\": \"Norway\",\r\n    \"Iso\": \"+47\",\r\n    \"countryCode\": \"NO\"\r\n  },\r\n  {\r\n    \"name\": \"Oman\",\r\n    \"Iso\": \"+968\",\r\n    \"countryCode\": \"OM\"\r\n  },\r\n  {\r\n    \"name\": \"Pakistan\",\r\n    \"Iso\": \"+92\",\r\n    \"countryCode\": \"PK\"\r\n  },\r\n  {\r\n    \"name\": \"Palau\",\r\n    \"Iso\": \"+680\",\r\n    \"countryCode\": \"PW\"\r\n  },\r\n  {\r\n    \"name\": \"Palestinian Territory, Occupied\",\r\n    \"Iso\": \"+970\",\r\n    \"countryCode\": \"PS\"\r\n  },\r\n  {\r\n    \"name\": \"Panama\",\r\n    \"Iso\": \"+507\",\r\n    \"countryCode\": \"PA\"\r\n  },\r\n  {\r\n    \"name\": \"Papua New Guinea\",\r\n    \"Iso\": \"+675\",\r\n    \"countryCode\": \"PG\"\r\n  },\r\n  {\r\n    \"name\": \"Paraguay\",\r\n    \"Iso\": \"+595\",\r\n    \"countryCode\": \"PY\"\r\n  },\r\n  {\r\n    \"name\": \"Peru\",\r\n    \"Iso\": \"+51\",\r\n    \"countryCode\": \"PE\"\r\n  },\r\n  {\r\n    \"name\": \"Philippines\",\r\n    \"Iso\": \"+63\",\r\n    \"countryCode\": \"PH\"\r\n  },\r\n  {\r\n    \"name\": \"Pitcairn\",\r\n    \"Iso\": \"+64\",\r\n    \"countryCode\": \"PN\"\r\n  },\r\n  {\r\n    \"name\": \"Poland\",\r\n    \"Iso\": \"+48\",\r\n    \"countryCode\": \"PL\"\r\n  },\r\n  {\r\n    \"name\": \"Portugal\",\r\n    \"Iso\": \"+351\",\r\n    \"countryCode\": \"PT\"\r\n  },\r\n  {\r\n    \"name\": \"Puerto Rico\",\r\n    \"Iso\": \"+1939\",\r\n    \"countryCode\": \"PR\"\r\n  },\r\n  {\r\n    \"name\": \"Qatar\",\r\n    \"Iso\": \"+974\",\r\n    \"countryCode\": \"QA\"\r\n  },\r\n  {\r\n    \"name\": \"Romania\",\r\n    \"Iso\": \"+40\",\r\n    \"countryCode\": \"RO\"\r\n  },\r\n  {\r\n    \"name\": \"Russia\",\r\n    \"Iso\": \"+7\",\r\n    \"countryCode\": \"RU\"\r\n  },\r\n  {\r\n    \"name\": \"Rwanda\",\r\n    \"Iso\": \"+250\",\r\n    \"countryCode\": \"RW\"\r\n  },\r\n  {\r\n    \"name\": \"Reunion\",\r\n    \"Iso\": \"+262\",\r\n    \"countryCode\": \"RE\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Barthelemy\",\r\n    \"Iso\": \"+590\",\r\n    \"countryCode\": \"BL\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Helena, Ascension and Tristan Da Cunha\",\r\n    \"Iso\": \"+290\",\r\n    \"countryCode\": \"SH\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Kitts and Nevis\",\r\n    \"Iso\": \"+1869\",\r\n    \"countryCode\": \"KN\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Lucia\",\r\n    \"Iso\": \"+1758\",\r\n    \"countryCode\": \"LC\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Martin\",\r\n    \"Iso\": \"+590\",\r\n    \"countryCode\": \"MF\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Pierre and Miquelon\",\r\n    \"Iso\": \"+508\",\r\n    \"countryCode\": \"PM\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Vincent and the Grenadines\",\r\n    \"Iso\": \"+1784\",\r\n    \"countryCode\": \"VC\"\r\n  },\r\n  {\r\n    \"name\": \"Samoa\",\r\n    \"Iso\": \"+685\",\r\n    \"countryCode\": \"WS\"\r\n  },\r\n  {\r\n    \"name\": \"San Marino\",\r\n    \"Iso\": \"+378\",\r\n    \"countryCode\": \"SM\"\r\n  },\r\n  {\r\n    \"name\": \"Sao Tome and Principe\",\r\n    \"Iso\": \"+239\",\r\n    \"countryCode\": \"ST\"\r\n  },\r\n  {\r\n    \"name\": \"Saudi Arabia\",\r\n    \"Iso\": \"+966\",\r\n    \"countryCode\": \"SA\"\r\n  },\r\n  {\r\n    \"name\": \"Senegal\",\r\n    \"Iso\": \"+221\",\r\n    \"countryCode\": \"SN\"\r\n  },\r\n  {\r\n    \"name\": \"Serbia\",\r\n    \"Iso\": \"+381\",\r\n    \"countryCode\": \"RS\"\r\n  },\r\n  {\r\n    \"name\": \"Seychelles\",\r\n    \"Iso\": \"+248\",\r\n    \"countryCode\": \"SC\"\r\n  },\r\n  {\r\n    \"name\": \"Sierra Leone\",\r\n    \"Iso\": \"+232\",\r\n    \"countryCode\": \"SL\"\r\n  },\r\n  {\r\n    \"name\": \"Singapore\",\r\n    \"Iso\": \"+65\",\r\n    \"countryCode\": \"SG\"\r\n  },\r\n  {\r\n    \"name\": \"Slovakia\",\r\n    \"Iso\": \"+421\",\r\n    \"countryCode\": \"SK\"\r\n  },\r\n  {\r\n    \"name\": \"Slovenia\",\r\n    \"Iso\": \"+386\",\r\n    \"countryCode\": \"SI\"\r\n  },\r\n  {\r\n    \"name\": \"Solomon Islands\",\r\n    \"Iso\": \"+677\",\r\n    \"countryCode\": \"SB\"\r\n  },\r\n  {\r\n    \"name\": \"Somalia\",\r\n    \"Iso\": \"+252\",\r\n    \"countryCode\": \"SO\"\r\n  },\r\n  {\r\n    \"name\": \"South Africa\",\r\n    \"Iso\": \"+27\",\r\n    \"countryCode\": \"ZA\"\r\n  },\r\n  {\r\n    \"name\": \"South Sudan\",\r\n    \"Iso\": \"+211\",\r\n    \"countryCode\": \"SS\"\r\n  },\r\n  {\r\n    \"name\": \"South Georgia and the South Sandwich Islands\",\r\n    \"Iso\": \"+500\",\r\n    \"countryCode\": \"GS\"\r\n  },\r\n  {\r\n    \"name\": \"Spain\",\r\n    \"Iso\": \"+34\",\r\n    \"countryCode\": \"ES\"\r\n  },\r\n  {\r\n    \"name\": \"Sri Lanka\",\r\n    \"Iso\": \"+94\",\r\n    \"countryCode\": \"LK\"\r\n  },\r\n  {\r\n    \"name\": \"Sudan\",\r\n    \"Iso\": \"+249\",\r\n    \"countryCode\": \"SD\"\r\n  },\r\n  {\r\n    \"name\": \"Suriname\",\r\n    \"Iso\": \"+597\",\r\n    \"countryCode\": \"SR\"\r\n  },\r\n  {\r\n    \"name\": \"Svalbard and Jan Mayen\",\r\n    \"Iso\": \"+47\",\r\n    \"countryCode\": \"SJ\"\r\n  },\r\n  {\r\n    \"name\": \"Swaziland\",\r\n    \"Iso\": \"+268\",\r\n    \"countryCode\": \"SZ\"\r\n  },\r\n  {\r\n    \"name\": \"Sweden\",\r\n    \"Iso\": \"+46\",\r\n    \"countryCode\": \"SE\"\r\n  },\r\n  {\r\n    \"name\": \"Switzerland\",\r\n    \"Iso\": \"+41\",\r\n    \"countryCode\": \"CH\"\r\n  },\r\n  {\r\n    \"name\": \"Syrian Arab Republic\",\r\n    \"Iso\": \"+963\",\r\n    \"countryCode\": \"SY\"\r\n  },\r\n  {\r\n    \"name\": \"Taiwan\",\r\n    \"Iso\": \"+886\",\r\n    \"countryCode\": \"TW\"\r\n  },\r\n  {\r\n    \"name\": \"Tajikistan\",\r\n    \"Iso\": \"+992\",\r\n    \"countryCode\": \"TJ\"\r\n  },\r\n  {\r\n    \"name\": \"Tanzania, United Republic of Tanzania\",\r\n    \"Iso\": \"+255\",\r\n    \"countryCode\": \"TZ\"\r\n  },\r\n  {\r\n    \"name\": \"Thailand\",\r\n    \"Iso\": \"+66\",\r\n    \"countryCode\": \"TH\"\r\n  },\r\n  {\r\n    \"name\": \"Timor-Leste\",\r\n    \"Iso\": \"+670\",\r\n    \"countryCode\": \"TL\"\r\n  },\r\n  {\r\n    \"name\": \"Togo\",\r\n    \"Iso\": \"+228\",\r\n    \"countryCode\": \"TG\"\r\n  },\r\n  {\r\n    \"name\": \"Tokelau\",\r\n    \"Iso\": \"+690\",\r\n    \"countryCode\": \"TK\"\r\n  },\r\n  {\r\n    \"name\": \"Tonga\",\r\n    \"Iso\": \"+676\",\r\n    \"countryCode\": \"TO\"\r\n  },\r\n  {\r\n    \"name\": \"Trinidad and Tobago\",\r\n    \"Iso\": \"+1868\",\r\n    \"countryCode\": \"TT\"\r\n  },\r\n  {\r\n    \"name\": \"Tunisia\",\r\n    \"Iso\": \"+216\",\r\n    \"countryCode\": \"TN\"\r\n  },\r\n  {\r\n    \"name\": \"Turkey\",\r\n    \"Iso\": \"+90\",\r\n    \"countryCode\": \"TR\"\r\n  },\r\n  {\r\n    \"name\": \"Turkmenistan\",\r\n    \"Iso\": \"+993\",\r\n    \"countryCode\": \"TM\"\r\n  },\r\n  {\r\n    \"name\": \"Turks and Caicos Islands\",\r\n    \"Iso\": \"+1649\",\r\n    \"countryCode\": \"TC\"\r\n  },\r\n  {\r\n    \"name\": \"Tuvalu\",\r\n    \"Iso\": \"+688\",\r\n    \"countryCode\": \"TV\"\r\n  },\r\n  {\r\n    \"name\": \"Uganda\",\r\n    \"Iso\": \"+256\",\r\n    \"countryCode\": \"UG\"\r\n  },\r\n  {\r\n    \"name\": \"Ukraine\",\r\n    \"Iso\": \"+380\",\r\n    \"countryCode\": \"UA\"\r\n  },\r\n  {\r\n    \"name\": \"United Arab Emirates\",\r\n    \"Iso\": \"+971\",\r\n    \"countryCode\": \"AE\"\r\n  },\r\n  {\r\n    \"name\": \"United Kingdom\",\r\n    \"Iso\": \"+44\",\r\n    \"countryCode\": \"GB\"\r\n  },\r\n  {\r\n    \"name\": \"United States\",\r\n    \"Iso\": \"+1\",\r\n    \"countryCode\": \"US\"\r\n  },\r\n  {\r\n    \"name\": \"Uruguay\",\r\n    \"Iso\": \"+598\",\r\n    \"countryCode\": \"UY\"\r\n  },\r\n  {\r\n    \"name\": \"Uzbekistan\",\r\n    \"Iso\": \"+998\",\r\n    \"countryCode\": \"UZ\"\r\n  },\r\n  {\r\n    \"name\": \"Vanuatu\",\r\n    \"Iso\": \"+678\",\r\n    \"countryCode\": \"VU\"\r\n  },\r\n  {\r\n    \"name\": \"Venezuela, Bolivarian Republic of Venezuela\",\r\n    \"Iso\": \"+58\",\r\n    \"countryCode\": \"VE\"\r\n  },\r\n  {\r\n    \"name\": \"Vietnam\",\r\n    \"Iso\": \"+84\",\r\n    \"countryCode\": \"VN\"\r\n  },\r\n  {\r\n    \"name\": \"Virgin Islands, British\",\r\n    \"Iso\": \"+1284\",\r\n    \"countryCode\": \"VG\"\r\n  },\r\n  {\r\n    \"name\": \"Virgin Islands, U.S.\",\r\n    \"Iso\": \"+1340\",\r\n    \"countryCode\": \"VI\"\r\n  },\r\n  {\r\n    \"name\": \"Wallis and Futuna\",\r\n    \"Iso\": \"+681\",\r\n    \"countryCode\": \"WF\"\r\n  },\r\n  {\r\n    \"name\": \"Yemen\",\r\n    \"Iso\": \"+967\",\r\n    \"countryCode\": \"YE\"\r\n  },\r\n  {\r\n    \"name\": \"Zambia\",\r\n    \"Iso\": \"+260\",\r\n    \"countryCode\": \"ZM\"\r\n  },\r\n  {\r\n    \"name\": \"Zimbabwe\",\r\n    \"Iso\": \"+263\",\r\n    \"countryCode\": \"ZW\"\r\n  }\r\n]\r\n\r\nexport {\r\n  CountryCodes\r\n}","enum SubProducts {\r\n  ORDERS= 1,\r\n  COLOUR= 2,\r\n  SIZE = 3,\r\n  SUB_PRODUCT = 4,\r\n  PRODUCT = 5,\r\n  COUPONS = 6,\r\n  USERS = 7,\r\n  SHIPPER = 8 \r\n}\r\n\r\nconst SubCategories: Record<string, number> = {\r\n  'Lingerie': 1,\r\n  'Footwear': 2,\r\n  'Bindi': 3,\r\n  'Home Essential': 8,\r\n  'Cosmetics': 9,\r\n  'Fashion Accessories': 10,\r\n}\r\n\r\n/**\r\n * Allow return for \r\n * Footwear and Home Essential\r\n */\r\nconst AllowReturn = ['2','8'];\r\n\r\nexport {\r\n  SubProducts,\r\n  SubCategories,\r\n  AllowReturn\r\n}","import { Action, Dispatch } from 'redux';\r\n\r\nimport { User } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n/* Interface */\r\nexport interface UserInformationAction extends Action {\r\n  readonly data?: User;\r\n  readonly allUsers?: User[];\r\n  readonly message?: string;\r\n};\r\n\r\n\r\nexport interface UserInformation {\r\n  readonly data?: User;\r\n  readonly allUsers?: User[];\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n};\r\n\r\n\r\n/* Initial State */\r\nconst initialState  = {\r\n  data: {\r\n    isAdmin: false,\r\n  },\r\n  allUsers :[],\r\n  _isError: false,\r\n  _isLoading: false,\r\n  _isSuccess: false,\r\n  message: ''\r\n} as UserInformation;\r\n\r\n\r\n/* Actions*/\r\n\r\nenum Actions {\r\n  SET_USER = \"SET_USER\",\r\n  LOADING_USER = \"LOADING_USER\",\r\n  ERROR_USER = \"ERROR_USER\",\r\n  SET_ALL_USER = 'SET_ALL_USER',\r\n  UPDATE_USER_DISCOUNT = 'UPDATE_USER_DISCOUNT',\r\n  DEFAULT_USER = 'DEFAULT_USER'\r\n}\r\n\r\nconst setUser = (user: User,message?: string) => ({\r\n  type: Actions.SET_USER,\r\n  data: user,\r\n  message\r\n});\r\n\r\nconst setAllUser = (user: User[]) => ({\r\n  type: Actions.SET_ALL_USER,\r\n  allUsers: user\r\n});\r\n\r\nconst loadingUser = () => ({\r\n  type: Actions.LOADING_USER\r\n});\r\n\r\nconst defaultUser = () => ({\r\n  type: Actions.DEFAULT_USER\r\n});\r\n\r\nconst errorUser = (message: string) => ({\r\n  type: Actions.ERROR_USER,\r\n  message\r\n});\r\n\r\nconst updateDiscount = (emailAddress:string, discount: string, message: string) => ({\r\n  type: Actions.UPDATE_USER_DISCOUNT,\r\n  data: {emailAddress, discount},\r\n  message\r\n});\r\n\r\n\r\n/* Reducer */\r\n\r\nconst userInformationReducer = (state = initialState, action: UserInformationAction): UserInformation => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_USER:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      };\r\n    case Actions.SET_USER:\r\n      return {\r\n        ...state,\r\n        data : action.data,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: true,\r\n        message: action.message\r\n      };\r\n    case Actions.DEFAULT_USER:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      };\r\n    case Actions.SET_ALL_USER:\r\n      return {\r\n        ...state,\r\n        allUsers : action.allUsers,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: true,\r\n        message: action.message\r\n      };\r\n    case Actions.UPDATE_USER_DISCOUNT:\r\n      return {\r\n        ...state,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: true,\r\n        message: action.message,\r\n        allUsers : state.allUsers?.map((user) => {\r\n          if(user.emailAddress?.toLowerCase() === action.data?.emailAddress){\r\n            return {...user, discount:action.data?.discount}\r\n          }\r\n          return user\r\n        }),\r\n      };\r\n    case Actions.ERROR_USER:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        message: action.message\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/* Thunk */\r\n\r\nconst getUser = () =>  async (disptach: Dispatch<UserInformationAction>) => {\r\n  disptach(loadingUser());\r\n  \r\n  const response =  await api.get('/userinfo');\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(setUser(response.data.data as User));\r\n  } else {\r\n    disptach(errorUser('Some error occured, try again.'));\r\n  }\r\n};\r\n\r\nconst saveUser = (data: User) =>  async (disptach: Dispatch<UserInformationAction>) => {\r\n  disptach(loadingUser());\r\n  \r\n  const response =  await api.post('/userinfo', data);\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data.data as User;\r\n    disptach(setUser({\r\n      ...data,\r\n      addressId : res\r\n    } as User, response.data.message));\r\n  } else {\r\n    disptach(errorUser('Some error occured, try again.'));\r\n  }\r\n};\r\n\r\nconst getAllUser = () =>  async (disptach: Dispatch<UserInformationAction>) => {\r\n  disptach(loadingUser());\r\n  \r\n  const response =  await api.get('/alluserinformation');\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(setAllUser(response.data.data as User[]));\r\n  } else {\r\n    disptach(errorUser('Some error occured, try again.'));\r\n  }\r\n};\r\n\r\nconst updateUserDiscount = (discount: string, email: string) =>  async (disptach: Dispatch<UserInformationAction>) => {\r\n  disptach(loadingUser());\r\n  \r\n  const response =  await api.post('/userdiscount', {\r\n    email,\r\n    discount\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(updateDiscount(email,discount, 'Discount Updated'));\r\n  } else {\r\n    disptach(errorUser('Some error occured, try again.'));\r\n  }\r\n};\r\n\r\nexport {\r\n  userInformationReducer,\r\n  getUser,\r\n  saveUser,\r\n  getAllUser,\r\n  setUser,\r\n  updateUserDiscount,\r\n  defaultUser\r\n};\r\n","const apiServerHost = 'https://basickart.com/v1/';\r\n\r\nconst scaledServerImagePath = apiServerHost + 'images/scaledImages/';\r\nconst originalServerImagePath = apiServerHost + 'images/unscaledImages/'\r\n\r\nexport {\r\n  apiServerHost,\r\n  scaledServerImagePath,\r\n  originalServerImagePath\r\n}","import axios from 'axios';\r\n\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://basickart.com/v1',\r\n  headers: {\r\n    'Accept': 'application/json;charset=UTF-8',\r\n    'Authorization': ''\r\n  }\r\n});","import{ AxiosRequestConfig } from 'axios';\r\n\r\nimport { HttpRequest } from 'appConstants';\r\nimport axios from './axiosBase';\r\n\r\nconst setAuthToken = (): void => {\r\n  axios.defaults.headers['Authorization'] = 'Bearer ' + window.localStorage.getItem('biktoken');\r\n};\r\n\r\nconst api = {\r\n  get: (url: string) => {\r\n    return makeRequest({\r\n      method: HttpRequest.GET,\r\n      url\r\n    })\r\n  },\r\n\r\n  post: (url: string, data: object) => {\r\n    return makeRequest({\r\n      method: HttpRequest.POST,\r\n      url,\r\n      data\r\n    })\r\n  }\r\n};\r\n\r\nconst makeRequest = async (config: AxiosRequestConfig) => {\r\n  try {\r\n    setAuthToken();\r\n    const response = await axios.request(config);\r\n    return response;\r\n  } catch (error) {\r\n    if(error.response.status === 401 || error.response.status === 422 || error.response.status === 404){\r\n      window.localStorage.removeItem('biktoken')\r\n      window.location.href = '/login';\r\n      return {\r\n        message: error.response.data.message || 'Auth expired',\r\n        data: {}\r\n      }\r\n    }else {\r\n      return {\r\n        message: error.response.data.message || 'Default Api error',\r\n        status: error.response.status || 400,\r\n        data: {}\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport { api, setAuthToken };","import { ProductSubCategory, ActiveProductCount, ProductSubcategoryProperty, ProductItem, OrderItems, ProductCountList, ActiveProductCountNew, ProductColor, ProductSize, ProductCoupon, Order, OrderShipper, User, Invoice, InvoiceItems } from \"types\";\r\nimport { SubCategory, Size } from \"reducers\";\r\nimport { type } from \"os\";\r\nimport { number } from \"prop-types\";\r\n\r\nconst getSubCategoryFromId = (id: Number) => {\r\n  switch (id) {\r\n    case 1:\r\n      return \"Lingerie\";\r\n    case 2:\r\n      return \"Footwear\";\r\n    case 3:\r\n      return \"Bindi\";\r\n    case 8:\r\n      return \"Home Essential\";\r\n    case 9:\r\n      return \"Cosmetics\";\r\n    case 10:\r\n      return \"Fashion Accessories\";\r\n  }\r\n};\r\n\r\nconst filterSubcategories = (subCategories: SubCategory, categoryId = 0) => {\r\n  return (subCategories.data &&\r\n    subCategories.data.filter((subCategory) => {\r\n      return subCategory.productCategoryId === Number(categoryId)\r\n    })) || [];\r\n};\r\n\r\nconst filterSize = (sizes: Size, categoryId: number[]) => {\r\n  return (sizes.data &&\r\n    sizes.data.filter((size) => {\r\n      return  categoryId.indexOf((size.productCategory || 0)) > -1\r\n    })) || [];\r\n};\r\n\r\nconst calculateUserDiscount = (discount: string, price: string) => {\r\n  return Math.ceil(Number(price) - (Number(price) * (Number(discount) / 100))).toString();\r\n};\r\n\r\nconst calculateUserDiscountPrice = (discount: string, price: string) => {\r\n  return Math.floor(Number(price) * (Number(discount)) / 100).toString();\r\n};\r\n\r\nconst getCurrencyIcon = (currency: string) => {\r\n  return currency === 'IN' ? '₹' : '$'\r\n};\r\n\r\nconst showINRUSD = (userLocation: string, price : {priceINR: string, priceUSD: string}) => {\r\n  return userLocation === 'IN' ? price.priceINR : price.priceUSD;\r\n}\r\n\r\nconst sizeCheck = (sizeObj : { [key: string]: number},sizeArray: string[])=> {\r\n  let resultSize = {} as { [key: string]: number};\r\n  sizeArray.forEach((size: string)=>{\r\n    if(sizeObj[size]){\r\n      resultSize[size] = sizeObj[size] + 1\r\n    }\r\n  });\r\n  return resultSize;\r\n}\r\n\r\nconst createActiveProductCountList = (activeProducts: ActiveProductCountNew[]) => {\r\n  let resultList = {} as ProductCountList;\r\n  activeProducts.forEach((product: ActiveProductCountNew) => {\r\n    if(!resultList[product.subcategoryId]){\r\n      resultList[product.subcategoryId] = {\r\n        [product.colourId] : {\r\n          name: product.colourName,\r\n          count: 1,\r\n          size : product.sizeId.reduce((a,b)=> (a[b]=1,a),{} as {[key: string]: number})\r\n        },\r\n        name: product.subcategoryName\r\n      }\r\n    } else {\r\n      if(!resultList[product.subcategoryId][product.colourId]){\r\n        resultList[product.subcategoryId][product.colourId] ={\r\n          name: product.colourName,\r\n          count: 1,\r\n          size : product.sizeId.reduce((a,b)=> (a[b]=1,a),{} as {[key: string]: number})\r\n        }\r\n      } else {\r\n        resultList[product.subcategoryId][product.colourId].count += 1;\r\n        resultList[product.subcategoryId][product.colourId].size = \r\n          sizeCheck(resultList[product.subcategoryId][product.colourId].size,product.sizeId)\r\n      }\r\n    }\r\n  });\r\n  return resultList;\r\n}\r\n\r\nconst createProductCountList = (activeProducts: ActiveProductCount[]) => {\r\n  let productCountList = {} as ProductSubcategoryProperty;\r\n  activeProducts.forEach((product: ActiveProductCount) => {\r\n    if(!productCountList[product.subcategoryId]) {\r\n      productCountList[product.subcategoryId] = {\r\n        name: product.subcategoryName,\r\n        [product.colourId] : {\r\n          name: product.colourName,\r\n          [product.sizeId] : {\r\n            name: product.sizeName,\r\n            quantity: product.count\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      if(!productCountList[product.subcategoryId][product.colourId]) {\r\n        productCountList[product.subcategoryId][product.colourId] = {\r\n          name: product.colourName,\r\n          [product.sizeId] : {\r\n            name: product.sizeName,\r\n            quantity: product.count\r\n          }\r\n        }\r\n      } else {\r\n        productCountList[product.subcategoryId][product.colourId][product.sizeId] = {\r\n          name: product.sizeName,\r\n          quantity: product.count\r\n        }\r\n      }\r\n    }\r\n  });\r\n  return productCountList;\r\n};\r\n\r\nconst countHighlightProducts = (products: ProductItem[], isTrending: boolean) => {\r\n  if(isTrending){\r\n    return products.filter(({trending}) => trending).length;\r\n  } else {\r\n    return products.filter(({latest}) => latest).length;\r\n  }\r\n  \r\n};\r\n\r\nconst getIconForAdminOrder = (orderItems: OrderItems[]) => {\r\n  const orderLength = orderItems.length;\r\n  let icon = '';\r\n  for(var i = 0 ; i< orderLength; i++){\r\n    const shipmentDetails = orderItems[i].shipmentDetails;\r\n    if(shipmentDetails){\r\n      if(shipmentDetails.paymentReturned && shipmentDetails.paymentReturned.toLowerCase() === 'yes'){\r\n        icon = 'lifesaver';\r\n        break;\r\n      } else if(shipmentDetails.paymentReturned && shipmentDetails.paymentReturned.toLowerCase() === 'no'){\r\n        icon = 'warning';\r\n        break;\r\n      } else if(shipmentDetails.returnStatus && shipmentDetails.returnStatus.toLowerCase() === 'in progress'){\r\n        icon = 'history';\r\n        break;\r\n      } else if(shipmentDetails.returnStatus && shipmentDetails.returnStatus.toLowerCase() === 'accepted'){\r\n        icon = 'plus-circle';\r\n        break;\r\n      } else if(shipmentDetails.returnStatus && shipmentDetails.returnStatus.toLowerCase() === 'declined'){\r\n        icon = 'minus-circle';\r\n        break;\r\n      } else if(shipmentDetails.shipper){\r\n        icon = 'cart';\r\n        break;\r\n      } else if(shipmentDetails.deliveryDate){\r\n        icon = 'check';\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return icon;\r\n};\r\n\r\nconst getPaypalTransactionId = (payaplResponse: any) =>{\r\n  let transactionId = '';\r\n  if(payaplResponse.paymentData){\r\n    if(payaplResponse.paymentData.purchase_units){\r\n      if(payaplResponse.paymentData.purchase_units[0]){\r\n        if(payaplResponse.paymentData.purchase_units[0].payments){\r\n          if(payaplResponse.paymentData.purchase_units[0].payments.captures){\r\n            if(payaplResponse.paymentData.purchase_units[0].payments.captures[0]){\r\n              if(payaplResponse.paymentData.purchase_units[0].payments.captures[0].id){\r\n                transactionId = payaplResponse.paymentData.purchase_units[0].payments.captures[0].id;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return transactionId;\r\n};\r\n\r\nconst convertArrayOfObjectsToCSV = (array : ProductColor[] | ProductSize[] | ProductCoupon[] | ProductSubCategory[] | Order[] | OrderShipper[] | User[]) => {\r\n  let result: any;\r\n\r\n  const columnDelimiter = ',';\r\n  const lineDelimiter = '\\n';\r\n  let keys = Object.keys(array[0]);\r\n\r\n  result = '';\r\n  result += keys.join(columnDelimiter);\r\n  result += lineDelimiter;\r\n\r\n  array.forEach((item: any) => {\r\n    let ctr = 0;\r\n    keys.forEach(key => {\r\n      if (ctr > 0) result += columnDelimiter;\r\n\r\n      result += item[key];\r\n      \r\n      ctr++;\r\n    });\r\n    result += lineDelimiter;\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nconst downloadCSV = (array: ProductColor[] | ProductSize[] | ProductCoupon[] | ProductSubCategory[] | Order[] | OrderShipper[] | User[]) => {\r\n  const link = document.createElement('a');\r\n  let csv = convertArrayOfObjectsToCSV(array);\r\n  if (csv == null) return;\r\n\r\n  const filename = 'basickartOrders.csv';\r\n\r\n  if (!csv.match(/^data:text\\/csv/i)) {\r\n    csv = `data:text/csv;charset=utf-8,${csv}`;\r\n  }\r\n\r\n  link.setAttribute('href', encodeURI(csv));\r\n  link.setAttribute('download', filename);\r\n  link.click();\r\n  link.remove();\r\n}\r\n\r\nconst returnInvoiceHtml = ({clientName,invoiceDate,clientAddress,invoiceNumber, productList,userDiscount, couponDiscount, isInternaltionalOrder, isInternaltionalOrderStandard} : Invoice) => {\r\n  let totalCalculatedAmount = 0;\r\n  let shippingCost = 0;\r\n  let totalQuantity = 0;\r\n  let totalCalculatedAmountBeforeDiscount = 0;\r\n  productList.forEach((product: InvoiceItems) => {\r\n    totalCalculatedAmount += Number(product.productPrice) * Number(product.quantity)\r\n    totalQuantity += Number(product.quantity)\r\n  });\r\n  totalCalculatedAmountBeforeDiscount = totalCalculatedAmount;\r\n  totalCalculatedAmount = userOrderDiscountPrice(totalCalculatedAmount.toString(),'1', userDiscount, couponDiscount);\r\n  if(isInternaltionalOrder){\r\n    if(isInternaltionalOrderStandard){\r\n      shippingCost = 10 + ((totalQuantity -1) * 6)\r\n    } else {\r\n      shippingCost = 18 + ((totalQuantity -1) * 10)\r\n    }\r\n  }\r\n  totalCalculatedAmount += shippingCost;\r\n  return `\r\n  <!doctype html>\r\n<html>\r\n<head>\r\n<meta charset=\"utf-8\">\r\n<title>Untitled Document</title>\r\n</head>\r\n<body style=\"padding-left: 20px;\">\r\n<table style=\"border:1px solid #999999;\" width=\"600px\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"tb\">\r\n  <tbody>\r\n    <tr>\r\n      <td height=\"35\" colspan=\"4\" align=\"center\" class=\"txt\" style=\"border-bottom:1px solid #ddd; color:#e271a9; font-weight:800; font-family: 'Muli', sans-serif;\">BasicKart</td>\r\n    </tr>\r\n    <tr>\r\n      <td>&nbsp;</td>\r\n      <td colspan=\"2\"><table width=\"600px\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n        <tbody>\r\n          <tr>\r\n            <td height=\"49\" valign=\"bottom\" style=\" font-size:20px; color:#e271a9; font-weight:800; font-family: 'Muli', sans-serif;\">Tax Invoice</td>\r\n            </tr>\r\n          <tr>\r\n            <td style=\" font-size:13px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\" >GSTIN : 07CKLPB3987JIZP</td>\r\n            </tr>\r\n          <!--<tr>\r\n            <td style=\" font-size:13px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">Pan No : AA444111FFFF</td>\r\n            </tr> -->\r\n          <tr>\r\n            <td style=\" font-size:13px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">Office : B - 1/32, GROUND FLOOR, MAIN ROAD, N.E.A. KAROL BAGH,,<br> &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DELHI, NORTH DELHI, DELHI, 110005</td>\r\n            </tr>\r\n          <tr>\r\n            <td style=\" font-size:13px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">Email : support@basickart.com</td>\r\n            </tr>\r\n        </tbody>\r\n      </table></td>\r\n      <td>&nbsp;</td>\r\n    </tr>\r\n    <tr>\r\n      <td height=\"20\" colspan=\"4\">&nbsp;</td>\r\n    </tr>\r\n    <tr>\r\n      <td width=\"30px\">&nbsp;</td>\r\n      <td colspan=\"2\"><table width=\"600px\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"tb1\">\r\n        <tbody>\r\n          <tr>\r\n            <td><table style=\"border:1px solid #999999;\" width=\"600px\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n              <tbody>\r\n                <tr>\r\n                  <td width=\"100px\" height=\"25\"><strong><span style=\" font-size:12px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">Client Name </span></strong></td>\r\n                  <td width=\"280px\"><span style=\" font-size:12px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">${clientName}</span></td>\r\n                  <td width=\"120px\"><strong><span style=\" font-size:12px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">Invoice Date</span></strong></td>\r\n                  <td width=\"120px\"><span style=\" font-size:12px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">${invoiceDate}</span></td>\r\n                </tr>\r\n                <tr>\r\n                  <td height=\"25\"><strong><span style=\" font-size:12px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">Address</span></strong></td>\r\n                  <td><span style=\" font-size:12px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">${clientAddress}</span></td>\r\n                  <td><strong><span style=\" font-size:12px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">Invoice Number</span></strong></td>\r\n                  <td><span style=\" font-size:12px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">${invoiceNumber}</span></td>\r\n                </tr>\r\n                <tr>\r\n                  <!--<td height=\"25\"><strong><span style=\" font-size:12px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">GSTIN</span></strong></td>\r\n                  <td><span style=\" font-size:12px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">0748MJKKLLL***</span></td>-->\r\n                  <td>&nbsp;</td>\r\n                  <td>&nbsp;</td>\r\n                </tr>\r\n              </tbody>\r\n            </table></td>\r\n          </tr>\r\n          <tr>\r\n            <td height=\"55\" style=\"border-top:1px solid #999999;\">&nbsp;</td>\r\n          </tr>\r\n          <tr>\r\n            <td><table style=\"border:1px solid #999999;\" width=\"600px\" border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"tb2\">\r\n              <tbody>\r\n                <tr style=\" font-size:13px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">\r\n                  <td width=\"50px\" height=\"30\" align=\"center\"><strong>S.N</strong></td>\r\n                  <td width=\"350px\" align=\"center\"><strong>Description </strong></td>\r\n                  <td width=\"30px\" align=\"center\"><strong>Qty </strong></td>\r\n                  <td width=\"50px\" align=\"center\"><strong>Rate </strong></td>\r\n                  <td width=\"50px\" align=\"center\"><strong>Amount</strong></td>\r\n                </tr>\r\n                ${\r\n                  productList.map((product: any, index: number) => {\r\n                    return (\r\n                      `\r\n                      <tr style=\" font-size:13px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">\r\n                        <td height=\"30\" align=\"center\">${index + 1}</td>\r\n                        <td align=\"center\">${product.productName}</td>\r\n                        <td align=\"center\">${product.quantity}</td>\r\n                        <td align=\"center\">${Math.ceil(product.productPrice)}</td>\r\n                        <td align=\"center\">${Number(product.quantity) * Math.ceil(product.productPrice)}</td>\r\n              \r\n                      </tr>\r\n                      `\r\n                    )\r\n                  })\r\n                }\r\n           <!--     <tr style=\" font-size:13px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">\r\n                  <td height=\"30\" align=\"center\">&nbsp;</td>\r\n                  <td align=\"center\">&nbsp;</td>\r\n                  <td align=\"center\">&nbsp;</td>\r\n                  <td align=\"center\"><strong>TOTAL</strong></td>\r\n                  <td align=\"center\">${totalCalculatedAmount}</td>\r\n                </tr> -->\r\n              </tbody>\r\n            </table></td>\r\n          </tr>\r\n          <tr>\r\n            <td>&nbsp;</td>\r\n          </tr>\r\n          <tr>\r\n            <td><table width=\"600px\" border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"tb2\">\r\n              <tbody>\r\n              ${\r\n                userDiscount && \r\n                `\r\n                <tr style=\" font-size:13px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">\r\n                  <td width=\"55px\" height=\"48\" align=\"center\">&nbsp;</td>\r\n                  <td width=\"369px\" align=\"center\">Customer Discount</td>\r\n                  <td align=\"center\">${userDiscount}%</td>\r\n                  <td width=\"52px\" align=\"center\"> - ${calculateUserDiscountPrice(userDiscount,totalCalculatedAmountBeforeDiscount.toString())}</td>\r\n                </tr>\r\n                `\r\n              }\r\n              ${\r\n                couponDiscount ? \r\n                `\r\n                <tr style=\" font-size:13px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">\r\n                  <td width=\"55px\" height=\"48\" align=\"center\">&nbsp;</td>\r\n                  <td width=\"369px\" align=\"center\">Coupon Discount</td>\r\n                  <td align=\"center\">${couponDiscount}%</td>\r\n                  <td width=\"52px\" align=\"center\"> - ${calculateUserDiscountPrice(couponDiscount, (totalCalculatedAmountBeforeDiscount - Number(calculateUserDiscountPrice(userDiscount || '0',totalCalculatedAmountBeforeDiscount.toString()))).toString())}</td>\r\n                </tr>\r\n                ` : ''\r\n              }\r\n              ${\r\n                isInternaltionalOrder ?\r\n                `\r\n                <tr style=\" font-size:13px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">\r\n                  <td width=\"55px\" height=\"48\" align=\"center\">&nbsp;</td>\r\n                  <td width=\"369px\" align=\"center\">Shipping Cost</td>\r\n                  <td align=\"center\"></td>\r\n                  <td width=\"52px\" align=\"center\"> + ${shippingCost}</td>\r\n                </tr>\r\n                ` : ''\r\n              }\r\n                <tr style=\" font-size:13px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">\r\n                  <td width=\"55px\" height=\"48\" align=\"center\">&nbsp;</td>\r\n                  <td width=\"369px\" align=\"center\">&nbsp;</td>\r\n                  <td align=\"center\">Final Amount <br>(Tax Included) :</td>\r\n                  <td width=\"52px\" align=\"center\">${totalCalculatedAmount}</td>\r\n                </tr>\r\n                <!--<tr style=\" font-size:13px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">\r\n                  <td height=\"31\" align=\"center\">&nbsp;</td>\r\n                  <td align=\"center\">&nbsp;</td>\r\n                  <td align=\"center\"><strong>Grand Total</strong></td>\r\n                  <td align=\"center\">&nbsp;</td>-->\r\n                </tr>\r\n              </tbody>\r\n            </table></td>\r\n          </tr>\r\n          <tr>\r\n            <td>&nbsp;</td>\r\n          </tr>\r\n        </tbody>\r\n      </table></td>\r\n      <td width=\"50px\">&nbsp;</td>\r\n    </tr>\r\n    <tr>\r\n      <td colspan=\"4\">&nbsp;</td>\r\n    </tr>\r\n    <tr>\r\n      <td height=\"32\">&nbsp;</td>\r\n      <td style=\" font-size:13px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\" width=\"300px\" height=\"32\"><strong>Date : ${invoiceDate}</strong></td>\r\n      <td style=\" font-size:13px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\" width=\"300px\" align=\"right\"><strong>For : Online Reciept</strong></td>\r\n      <td height=\"32\">&nbsp;</td>\r\n    </tr>\r\n    <tr>\r\n      <td colspan=\"4\">&nbsp;</td>\r\n    </tr>\r\n    <tr>\r\n      <td height=\"72\">&nbsp;</td>\r\n      <td>&nbsp;</td>\r\n      <td style=\" font-size:13px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\" align=\"right\" valign=\"bottom\"><strong>It is a computer generated invoice and hence does not require any signature note.\r\n</strong></td>\r\n      <td>&nbsp;</td>\r\n    </tr>\r\n    <tr>\r\n      <td colspan=\"4\">&nbsp;</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n</body>\r\n</html>\r\n  `\r\n}\r\n\r\nconst userOrderDiscountPrice = (totalPrice: string, quantity: string, userDiscount?: string, couponDiscount?: string)=> {\r\n  let mainTotal = Number(totalPrice) * Number(quantity);\r\n  if(userDiscount){\r\n    mainTotal = Number(calculateUserDiscount(userDiscount,mainTotal.toString()))\r\n  } \r\n  if(couponDiscount){\r\n    mainTotal = Number(calculateUserDiscount(couponDiscount,mainTotal.toString()))\r\n  }\r\n  return mainTotal\r\n}\r\n\r\nexport {\r\n  getSubCategoryFromId,\r\n  filterSubcategories,\r\n  filterSize,\r\n  calculateUserDiscount,\r\n  getCurrencyIcon,\r\n  calculateUserDiscountPrice,\r\n  createProductCountList,\r\n  showINRUSD,\r\n  countHighlightProducts,\r\n  getIconForAdminOrder,\r\n  getPaypalTransactionId,\r\n  createActiveProductCountList,\r\n  convertArrayOfObjectsToCSV,\r\n  downloadCSV,\r\n  returnInvoiceHtml,\r\n  userOrderDiscountPrice\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { Login } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\ninterface UserLoginRegisterAction extends Action {\r\n  data?: string;\r\n}\r\n\r\ninterface UserLoginResponse {\r\n  message: string;\r\n  access_token?: string;\r\n};\r\n\r\nexport interface UserLoginRegister {\r\n  _isLoading: boolean;\r\n  _isError: boolean;\r\n  _isSuccess: boolean;\r\n  message?: string;\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading : false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: ''\r\n} as UserLoginRegister;\r\n\r\nenum Actions {\r\n  LOADING_LOGIN = 'LOADING_LOGIN',\r\n  ERROR_LOGIN = 'ERROR_LOGIN',\r\n  SUCCESS_LOGIN = 'SUCCESS_LOGIN',\r\n  LOADING_REGISTER = 'LOADING_REGISTER',\r\n  ERROR_REGISTER = 'ERROR_REGISTER',\r\n  SUCCESS_REGISTER = 'SUCCESS_REGISTER',\r\n  DEFAULT_STATE = 'DEFAULT_STATE'\r\n};\r\n\r\nconst loadingLogin = () => ({\r\n  type : Actions.LOADING_LOGIN\r\n});\r\n\r\nconst errorLogin = (message: string) => ({\r\n  type : Actions.ERROR_LOGIN,\r\n  data: message\r\n});\r\n\r\nconst successLogin = () => ({\r\n  type : Actions.SUCCESS_LOGIN\r\n});\r\n\r\nconst loadingRegister = () => ({\r\n  type : Actions.LOADING_REGISTER\r\n});\r\n\r\nconst errorRegister = (message: string) => ({\r\n  type : Actions.ERROR_REGISTER,\r\n  data: message\r\n});\r\n\r\nconst successRegister = (message: string) => ({\r\n  type : Actions.SUCCESS_REGISTER,\r\n  data: message\r\n});\r\n\r\nconst defaultLoginRegister = () => ({\r\n  type: Actions.DEFAULT_STATE\r\n})\r\n\r\n\r\nconst userLoginReducer = (state = initialState, action: UserLoginRegisterAction): UserLoginRegister  => {\r\n  \r\n  switch (action.type) {\r\n    case Actions.LOADING_LOGIN:\r\n    case Actions.LOADING_REGISTER:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      };\r\n    case Actions.ERROR_LOGIN:\r\n    case Actions.ERROR_REGISTER:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        message: action.data\r\n      };\r\n    case Actions.SUCCESS_LOGIN:\r\n    case Actions.SUCCESS_REGISTER:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess: true,\r\n        message: action.data\r\n      };\r\n    case Actions.DEFAULT_STATE:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nconst userLogin = (loginData: Login) =>  async (dispatch: Dispatch<Action>) => {\r\n  \r\n  dispatch(loadingLogin());\r\n  const response =  await api.post('/login', loginData);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as UserLoginResponse;\r\n    window.localStorage.setItem('biktoken', res.access_token || '');\r\n    dispatch(successLogin());\r\n  } else{\r\n    const res = response as UserLoginResponse;\r\n    dispatch(errorLogin(res.message));\r\n  }\r\n};\r\n\r\nconst userRegister = (registerationData: Login) => async (dispatch: Dispatch<Action>) => {\r\n  dispatch(loadingRegister());\r\n  const response = await api.post('/registration', registerationData);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as UserLoginResponse;\r\n    dispatch(successRegister(res.message));\r\n  } else{\r\n    const res = response as UserLoginResponse;\r\n    dispatch(errorRegister(res.message));\r\n  }\r\n}\r\n\r\nconst forgetPassword = (loginDetails: Login) => async (dispatch: Dispatch<Action>) => {\r\n  dispatch(loadingRegister());\r\n  const response = await api.post('/forgetpassword', loginDetails);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as UserLoginResponse;\r\n    dispatch(successRegister(res.message));\r\n  } else{\r\n    const res = response as UserLoginResponse;\r\n    dispatch(errorRegister(res.message));\r\n  }\r\n}\r\n\r\n\r\nexport {\r\n  userLogin,\r\n  userLoginReducer,\r\n  loadingLogin,\r\n  loadingRegister,\r\n  errorLogin,\r\n  errorRegister,\r\n  successLogin,\r\n  successRegister,\r\n  defaultLoginRegister,\r\n  userRegister,\r\n  forgetPassword\r\n}","import {Action, Dispatch} from 'redux';\r\n\r\nimport { UserSettings } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n/* Interface*/\r\nexport interface UserSettingsAction extends Action {\r\n  readonly data?: UserSettings;\r\n  readonly message?: string;\r\n}\r\n\r\nexport interface UserSetting {\r\n  readonly data?: UserSettings;\r\n  _isLoading: boolean;\r\n  _isError: boolean;\r\n  _isSuccess: boolean;\r\n  message?: string;\r\n}\r\n\r\nconst initialState = {\r\n  data : {\r\n    emailAddress : '',\r\n  },\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n} as UserSetting\r\n\r\n/* Actions */\r\n\r\nenum Actions {\r\n  SET_USER_SETTINGS = \"SET_USER_SETTINGS\",\r\n  LOADING_USER_SETTINGS = \"LOADING_USER_SETTINGS\",\r\n  ERROR_USER_SETTINGS = \"ERROR_USER_SETTINGS\"\r\n}\r\n\r\nconst setUserSetting = (userSettings: UserSettings, message?: string) => ({\r\n  type: Actions.SET_USER_SETTINGS,\r\n  data: userSettings,\r\n  message\r\n});\r\n\r\nconst loadingUserSettings = () => ({\r\n  type: Actions.LOADING_USER_SETTINGS\r\n});\r\n\r\nconst errorUserSettings = (message?: string) => ({\r\n  type: Actions.ERROR_USER_SETTINGS,\r\n  message\r\n});\r\n\r\nconst userSettingsReducer = (state = initialState, action: UserSettingsAction) => {\r\n  switch(action.type) {\r\n    case Actions.SET_USER_SETTINGS:\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess: true,\r\n        message: action.message\r\n      };\r\n    case Actions.LOADING_USER_SETTINGS:\r\n      return{\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false,\r\n      };\r\n    case Actions.ERROR_USER_SETTINGS:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        message: action.message\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n/* Thunk */\r\n\r\nconst getUserSettings = () => async (disptach: Dispatch<UserSettingsAction>) => {\r\n  disptach(loadingUserSettings());\r\n  \r\n  const response =  await api.get('/passwordchange');\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(setUserSetting(response.data.data as UserSettings));\r\n  } else {\r\n    disptach(errorUserSettings(response.data.message|| ''));\r\n  }\r\n};\r\n\r\n\r\nconst saveUserSettings = (data: UserSettings) => async (disptach: Dispatch<UserSettingsAction>) => {\r\n  disptach(loadingUserSettings());\r\n  \r\n  const response =  await api.post('/passwordchange', data);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(setUserSetting({emailAddress : data.emailAddress, currentPassword: '', newPassword: ''} as UserSettings,response.data.message|| ''));\r\n  } else {\r\n    disptach(errorUserSettings((response as any).message|| ''));\r\n  }\r\n};\r\n\r\nexport {\r\n  userSettingsReducer,\r\n  getUserSettings,\r\n  saveUserSettings\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { ProductColor } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface ColourAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductColor[]\r\n}\r\n\r\nexport interface ColourResponse {\r\n  message?: string\r\n  data?: ProductColor[]\r\n}\r\n\r\nexport interface Colour {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductColor[];\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n  data: {}\r\n} as Colour;\r\n\r\nenum Actions {\r\n  LOADING_COLOUR = 'LOADING_COLOUR',\r\n  ERROR_COLOUR = 'ERROR_COLOUR',\r\n  SUCCESS_COLOUR = 'SUCCESS_COLOUR',\r\n  DEFAULT_COLOUR = 'DEFAULT_COLOUR',\r\n  SET_COLOUR = 'SET_COLOUR',\r\n  UPDATE_COLOUR_SUCCESS = 'UPDATE_COLOUR_SUCCESS'\r\n};\r\n\r\nconst loadingColour = () => ({\r\n  type: Actions.LOADING_COLOUR\r\n});\r\n\r\nconst successColour = (message: string) => ({\r\n  type: Actions.SUCCESS_COLOUR,\r\n  message\r\n});\r\n\r\nconst errorColour = (message: string) => ({\r\n  type: Actions.ERROR_COLOUR,\r\n  message\r\n});\r\n\r\nconst defaultColour = () => ({\r\n  type: Actions.DEFAULT_COLOUR\r\n});\r\n\r\nconst setColour = (data: ProductColor[]) => ({\r\n  type: Actions.SET_COLOUR,\r\n  data\r\n});\r\n\r\nconst updateColourSuccess = (data: ProductColor[], message: string) => ({\r\n  type: Actions.UPDATE_COLOUR_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst colourReducer = (state = initialState, action: ColourAction): Colour => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_COLOUR:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_COLOUR:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_COLOUR:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_COLOUR:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_COLOUR_SUCCESS:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.colourId != updatedValue[0].colourId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue\r\n        ]\r\n      }\r\n    case Actions.DEFAULT_COLOUR:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst saveColour = (colour: ProductColor) => async (dispatch: Dispatch<ColourAction>) => {\r\n  dispatch(loadingColour());\r\n  const response = await api.post('/productcolour',\r\n    {\r\n      product_color_code: colour.code,\r\n      product_color: colour.value,\r\n      colour_id: 0\r\n    });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ColourResponse\r\n    dispatch(successColour(res.message || ''));\r\n  } else {\r\n    const res = response as ColourResponse\r\n    dispatch(errorColour(res.message || ''));\r\n  }\r\n}\r\n\r\nconst getColour = () => async (dispatch: Dispatch<ColourAction>) => {\r\n  dispatch(loadingColour());\r\n\r\n  const response = await api.get('/productcolour');\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as ColourResponse;\r\n    dispatch(setColour(res.data || []));\r\n  } else {\r\n    const res = response as ColourResponse;\r\n    dispatch(errorColour(res.message || ''))\r\n  }\r\n}\r\n\r\nconst updateColour = (colour: ProductColor) => async (dispatch: Dispatch<ColourAction>) => {\r\n  dispatch(loadingColour());\r\n\r\n  const response = await api.post('/productcolour', {\r\n    product_color_code: colour.code,\r\n    product_color: colour.value,\r\n    colour_id: colour.colourId\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ColourResponse\r\n    dispatch(updateColourSuccess([colour], res.message || ''));\r\n  } else {\r\n    const res = response as ColourResponse\r\n    dispatch(errorColour(res.message || ''));\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  colourReducer,\r\n  saveColour,\r\n  defaultColour,\r\n  getColour,\r\n  updateColour\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { ProductSize } from 'types';\r\nimport { api, getSubCategoryFromId } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface SizeAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductSize[];\r\n}\r\n\r\ninterface SizeResponse {\r\n   message?: string;\r\n   data?: ProductSize[];\r\n}\r\n\r\nexport interface Size {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductSize[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_SIZE= 'LOADING_SIZE',\r\n  SUCCESS_SIZE= 'SUCCESS_SIZE',\r\n  ERROR_SIZE= 'ERROR_SIZE',\r\n  SET_SIZE= 'SET_SIZE',\r\n  UPDATE_SIZE= 'UPDATE_SIZE',\r\n}\r\n\r\nconst loadingSize= () => ({\r\n  type: Actions.LOADING_SIZE\r\n});\r\n\r\nconst successSize= (message: string) => ({\r\n  type: Actions.SUCCESS_SIZE,\r\n  message\r\n});\r\n\r\nconst errorSize= (message: string) => ({\r\n  type: Actions.SUCCESS_SIZE,\r\n  message\r\n});\r\n\r\nconst setSize= (data: ProductSize[]) => ({\r\n  type: Actions.SET_SIZE,\r\n  data\r\n});\r\n\r\nconst updateSize= (data: ProductSize[], message: string) => ({\r\n  type: Actions.UPDATE_SIZE,\r\n  data,\r\n  message\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as Size\r\n\r\n\r\nconst sizeReducer = (state= initialState, action: SizeAction): Size => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_SIZE:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_SIZE:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_SIZE:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_SIZE:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_SIZE:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.sizeId != updatedValue[0].sizeId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue,\r\n        ]\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/**Thunk */\r\n\r\nconst addUpdateSize = (size: ProductSize) => async (dispatch: Dispatch<SizeAction>) => {\r\n  dispatch(loadingSize());\r\n\r\n  const response = await api.post('/productsize',\r\n    {\r\n      product_size:size.value,\r\n      product_size_code: size.code,\r\n      product_category: Number(size.productCategory),\r\n      size_id: size.sizeId\r\n    });\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as SizeResponse;\r\n    if(size.sizeId != '0'){\r\n      const productCategoryIndex  = size.productCategory ? size.productCategory : 1;\r\n      dispatch(updateSize([{...size, productCategoryName: getSubCategoryFromId(Number(productCategoryIndex))}], res.message || ''));\r\n    } else{\r\n      dispatch(successSize(res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as SizeResponse;\r\n    dispatch(errorSize(res.message || ''));\r\n  }\r\n}\r\n\r\nconst getSize= () => async (dispatch: Dispatch<SizeAction>) => {\r\n  dispatch(loadingSize());\r\n\r\n  const response = await api.get('/productsize');\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as SizeResponse;\r\n    dispatch(setSize(res.data || []))\r\n  } else {\r\n    const res = response as SizeResponse;\r\n    dispatch(errorSize(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  addUpdateSize,\r\n  sizeReducer,\r\n  getSize\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { ProductSubCategory } from 'types';\r\nimport { api, getSubCategoryFromId } from 'services';\r\nimport { HttpStatusCode, SubCategories } from 'appConstants';\r\n\r\nexport interface SubCategoryAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductSubCategory[];\r\n}\r\n\r\ninterface SubCategoryResponse {\r\n  message?: string;\r\n  data?: ProductSubCategory[];\r\n}\r\n\r\nexport interface SubCategory {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductSubCategory[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_SUBCATEGORY= 'LOADING_SUBCATEGORY',\r\n  SUCCESS_SUBCATEGORY= 'SUCCESS_SUBCATEGORY',\r\n  ERROR_SUBCATEGORY= 'ERROR_SUBCATEGORY',\r\n  SET_SUBCATEGORY= 'SET_SUBCATEGORY',\r\n  UPDATE_SUBCATEGORY= 'UPDATE_SUBCATEGORY',\r\n}\r\n\r\nconst loadingSubCategory= () => ({\r\n  type: Actions.LOADING_SUBCATEGORY\r\n});\r\n\r\nconst successSubCategory= (message: string) => ({\r\n  type: Actions.SUCCESS_SUBCATEGORY,\r\n  message\r\n});\r\n\r\nconst errorSubCategory= (message: string) => ({\r\n  type: Actions.ERROR_SUBCATEGORY,\r\n  message\r\n});\r\n\r\nconst setSubCategory= (data: ProductSubCategory[]) => ({\r\n  type: Actions.SET_SUBCATEGORY,\r\n  data\r\n});\r\n\r\nconst updateSubCategory= (data: ProductSubCategory[], message: string) => ({\r\n  type: Actions.UPDATE_SUBCATEGORY,\r\n  data,\r\n  message\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as SubCategory\r\n\r\nconst subCategoryReducer = (state= initialState, action: SubCategoryAction): SubCategory => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_SUBCATEGORY:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_SUBCATEGORY:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_SUBCATEGORY:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_SUBCATEGORY:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_SUBCATEGORY:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.subCategoryId != updatedValue[0].subCategoryId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue,\r\n        ]\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/* Thunk */\r\n\r\nconst addUpdateSubCategory = (subCategory: ProductSubCategory) => async (dispatch: Dispatch<SubCategoryAction>) => {\r\n  dispatch(loadingSubCategory());\r\n\r\n  const response = await api.post('/productsubcategory',\r\n    {\r\n      product_name:subCategory.code,\r\n      product_desc: subCategory.value,\r\n      product_category_id: Number(subCategory.productCategoryId),\r\n      subcategory_id: subCategory.subCategoryId?.toString()\r\n    });\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as SubCategoryResponse;\r\n    if(subCategory.subCategoryId != '0'){\r\n      const productCategoryIndex  = subCategory.productCategoryId ? subCategory.productCategoryId : 1;\r\n      dispatch(updateSubCategory([{...subCategory, productCategoryName: getSubCategoryFromId(Number(productCategoryIndex))}], res.message || ''));\r\n    } else{\r\n      dispatch(successSubCategory(res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as SubCategoryResponse;\r\n    dispatch(errorSubCategory(res.message || ''));\r\n  }\r\n}\r\n\r\n\r\nconst getSubCategory= () => async (dispatch: Dispatch<SubCategoryAction>) => {\r\n  dispatch(loadingSubCategory());\r\n\r\n  const response = await api.get('/productsubcategory');\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as SubCategoryResponse;\r\n    dispatch(setSubCategory(res.data || []))\r\n  } else {\r\n    const res = response as SubCategoryResponse;\r\n    dispatch(errorSubCategory(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  subCategoryReducer,\r\n  getSubCategory,\r\n  addUpdateSubCategory\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { ProductCoupon } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface CouponAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductCoupon[]\r\n}\r\n\r\nexport interface CouponResponse {\r\n  message?: string\r\n  data?: ProductCoupon[]\r\n}\r\n\r\nexport interface Coupon {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductCoupon[];\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n  data: {}\r\n} as Coupon\r\n\r\nenum Actions {\r\n  LOADING_COUPON = 'LOADING_COUPON',\r\n  ERROR_COUPON = 'ERROR_COUPON',\r\n  SUCCESS_COUPON = 'SUCCESS_COUPON',\r\n  DEFAULT_COUPON = 'DEFAULT_COUPON',\r\n  SET_COUPON = 'SET_COUPON',\r\n  UPDATE_COUPON_SUCCESS = 'UPDATE_COUPON_SUCCESS',\r\n  DELETE_COUPON_SUCCESS = 'DELETE_COUPON_SUCCESS'\r\n}\r\n\r\nconst loadingCoupon = () => ({\r\n  type: Actions.LOADING_COUPON\r\n});\r\n\r\nconst successCoupon = (message: string) => ({\r\n  type: Actions.SUCCESS_COUPON,\r\n  message\r\n});\r\n\r\nconst errorCoupon = (message: string) => ({\r\n  type: Actions.ERROR_COUPON,\r\n  message\r\n});\r\n\r\nconst defaultCoupon = () => ({\r\n  type: Actions.DEFAULT_COUPON\r\n});\r\n\r\nconst setCoupon = (data: ProductCoupon[], message?: string) => ({\r\n  type: Actions.SET_COUPON,\r\n  data,\r\n  message\r\n});\r\n\r\nconst updateCouponSuccess = (data: ProductCoupon[], message: string) => ({\r\n  type: Actions.UPDATE_COUPON_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst deleteCouponSuccess = (data: ProductCoupon[], message: string) => ({\r\n  type: Actions.DELETE_COUPON_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst couponReducer = (state = initialState, action: CouponAction): Coupon => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_COUPON:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_COUPON:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_COUPON:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        message: action.message,\r\n        data: []\r\n      }\r\n    case Actions.SET_COUPON:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_COUPON_SUCCESS:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.couponId != updatedValue[0].couponId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue\r\n        ]\r\n      }\r\n    case Actions.DELETE_COUPON_SUCCESS:\r\n      const orgState = state.data || [];\r\n      const updValue = action.data || [];\r\n      const updState = orgState.filter(d => {\r\n        return d.couponId != updValue[0].couponId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updState\r\n        ]\r\n      }\r\n    case Actions.DEFAULT_COUPON:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst saveCoupon = (coupon: ProductCoupon) => async (dispatch: Dispatch<CouponAction>) => {\r\n  dispatch(loadingCoupon());\r\n  const response = await api.post('/productcoupon',\r\n    {\r\n      coupon_code: coupon.code,\r\n      coupon_value: coupon.value,\r\n      coupon_id: 0,\r\n      isDelete: false\r\n    });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CouponResponse\r\n    dispatch(successCoupon(res.message || ''));\r\n  } else {\r\n    const res = response as CouponResponse\r\n    dispatch(errorCoupon(res.message || ''));\r\n  }\r\n};\r\n\r\nconst getCoupon = () => async (dispatch: Dispatch<CouponAction>) => {\r\n  dispatch(loadingCoupon());\r\n\r\n  const response = await api.get('/productcoupon');\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as CouponResponse;\r\n    dispatch(setCoupon(res.data || []));\r\n  } else {\r\n    const res = response as CouponResponse;\r\n    dispatch(errorCoupon(res.message || ''))\r\n  }\r\n};\r\n\r\nconst updateCoupon = (coupon: ProductCoupon, isDelete= false) => async (dispatch: Dispatch<CouponAction>) => {\r\n  dispatch(loadingCoupon());\r\n\r\n  const response = await api.post('/productcoupon', {\r\n    coupon_code: coupon.code,\r\n    coupon_value: coupon.value,\r\n    coupon_id: coupon.couponId,\r\n    isDelete\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CouponResponse;\r\n    if(isDelete){\r\n      dispatch(deleteCouponSuccess([coupon], res.message || ''))\r\n    }else {\r\n      dispatch(updateCouponSuccess([coupon], res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as CouponResponse\r\n    dispatch(errorCoupon(res.message || ''));\r\n  }\r\n\r\n};\r\n\r\nconst validateCoupon = (coupon: string) => async(dispatch: Dispatch<CouponAction>) => {\r\n  dispatch(loadingCoupon());\r\n  const response = await api.get('/validatecoupon?couponCode='+coupon);\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data;\r\n    if(res.data){\r\n      dispatch(setCoupon([res.data], res.message || ''));\r\n    } else {\r\n      dispatch(errorCoupon(res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as CouponResponse\r\n    dispatch(errorCoupon(res.message || ''));\r\n  }\r\n};\r\n\r\nexport {\r\n  couponReducer,\r\n  saveCoupon,\r\n  defaultCoupon,\r\n  getCoupon,\r\n  updateCoupon,\r\n  validateCoupon\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { ProductItem, sizeColourQuantityComboObject } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode, pageSize } from 'appConstants';\r\nimport { boolean } from 'yup';\r\nimport { getUserLocation } from './UserLocation';\r\n\r\nexport interface ProductAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n  _hasMoreProducts?: boolean;\r\n  readonly singleData?: ProductItem;\r\n}\r\n\r\ninterface ProductResponse {\r\n  message?: string;\r\n  data?: ProductItem[];\r\n  readonly singleData?: ProductItem;\r\n}\r\n\r\nexport interface Product {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _hasMoreProducts?: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n  readonly singleData?: ProductItem;\r\n}\r\n\r\nenum Actions {\r\n  LOADING_PRODUCT = 'LOADING_PRODUCT',\r\n  SUCCESS_PRODUCT = 'SUCCESS_PRODUCT',\r\n  ERROR_PRODUCT = 'ERROR_PRODUCT',\r\n  SET_PRODUCT = 'SET_PRODUCT',\r\n  SET_CUSTOMER_PRODUCT = 'SET_CUSTOMER_PRODUCT',\r\n  UPDATE_PRODUCT = 'UPDATE_PRODUCT',\r\n  SET_SINGLE_PRODUCT = 'SET_SINGLE_PRODUCT',\r\n  SET_DEFAULT_PRODUCT = 'SET_DEFAULT_PRODUCT',\r\n  DELETE_PRODUCT_SUCCESS = 'DELETE_PRODUCT_SUCCESS',\r\n  SET_PRODUCT_HIGHLIGHT = 'SET_PRODUCT_HIGHLIGHT'\r\n}\r\n\r\nconst loadingProduct = () => ({\r\n  type: Actions.LOADING_PRODUCT\r\n});\r\n\r\nconst successProduct = (message: string) => ({\r\n  type: Actions.SUCCESS_PRODUCT,\r\n  message\r\n});\r\n\r\nconst errorProduct = (message: string) => ({\r\n  type: Actions.ERROR_PRODUCT,\r\n  message\r\n});\r\n\r\nconst setProducts = (data: ProductItem[], _hasMoreProducts: boolean) => ({\r\n  type: Actions.SET_PRODUCT,\r\n  data,\r\n  _hasMoreProducts\r\n});\r\n\r\nconst setSingleProducts = (singleData: ProductItem) => ({\r\n  type: Actions.SET_SINGLE_PRODUCT,\r\n  singleData\r\n});\r\n\r\nconst setDefaulState = () => ({\r\n  type: Actions.SET_DEFAULT_PRODUCT\r\n});\r\n\r\nconst deleteProductSuccess = (data: ProductItem[], message: string) => ({\r\n  type: Actions.DELETE_PRODUCT_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst setCustomerProducts = (data: ProductItem[], _hasMoreProducts: boolean) => ({\r\n  type: Actions.SET_CUSTOMER_PRODUCT,\r\n  data,\r\n  _hasMoreProducts\r\n});\r\n\r\nconst setProductHighlight = (trending: boolean, latest: boolean, productId: string, message: string)  => ({\r\n  type: Actions.SET_PRODUCT_HIGHLIGHT,\r\n  message,\r\n  singleData: {\r\n    trending,\r\n    latest,\r\n    productId\r\n  } as ProductItem\r\n})\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _hasMoreProducts: true,\r\n  message: '',\r\n  data: [],\r\n  singleData: {} as ProductItem\r\n} as Product\r\n\r\nconst productReducer = (state = initialState, action: ProductAction): Product => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.SUCCESS_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        data: action.data,\r\n        _hasMoreProducts: action._hasMoreProducts,\r\n      }\r\n    case Actions.SET_CUSTOMER_PRODUCT:\r\n        return {\r\n          ...state,\r\n          _isSuccess: false,\r\n          _isError: false,\r\n          _isLoading: false,\r\n          data: state.data?.concat(action.data || []),\r\n          _hasMoreProducts: action._hasMoreProducts\r\n        }\r\n    case Actions.SET_SINGLE_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        singleData: action.singleData\r\n      }\r\n    case Actions.DELETE_PRODUCT_SUCCESS:\r\n      const orgState = state.data || [];\r\n      const updValue = action.data || [];\r\n      const updState = orgState.filter(d => {\r\n        return d.productId != updValue[0].productId\r\n      });\r\n      return {\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        data: [\r\n          ...updState\r\n        ]\r\n      }\r\n    case Actions.SET_PRODUCT_HIGHLIGHT:\r\n      return {\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: state.data?.map((product) => {\r\n          if(product.productId.toString() === action.singleData?.productId.toString()){\r\n            return {...product, trending: action.singleData.trending, latest: action.singleData.latest}\r\n          }\r\n          return product\r\n        })\r\n      }\r\n    case Actions.SET_DEFAULT_PRODUCT:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/*Thunk */\r\n\r\nconst addUpdateProduct = (product: ProductItem, isDelete = 0, sizeColourQuantity: sizeColourQuantityComboObject[]) => async (dispatch: Dispatch<ProductAction>) => {\r\n  dispatch(loadingProduct());\r\n  var formData = new FormData();\r\n  if (product.productImageBlob) {\r\n    Array.from(product.productImageBlob).forEach((element, index) => {\r\n      formData.append(`product_image_${index}`, element);\r\n    });\r\n  }\r\n  formData.append('product_INR_price', product.priceINR);\r\n  formData.append('product_USD_price', product.priceUSD);\r\n  formData.append('product_size_code', product.size || '0');\r\n  formData.append('product_color_code', product.colour || '0');\r\n  formData.append('product_Qty', product.quantity || '0');\r\n  formData.append('product_name', product.name);\r\n  formData.append('product_desc', product.description || '');\r\n  formData.append('product_subcategory_id', (product.subCategory || '').toString());\r\n  formData.append('prod_id', product.productId);\r\n  formData.append('is_product_delete', isDelete.toString());\r\n  formData.append('deleted_image_paths', JSON.stringify(product.deletedImagePath));\r\n  formData.append('size_colour_quantity_combo',  JSON.stringify(sizeColourQuantity));\r\n  formData.append('deleted_product_detailIds',  JSON.stringify(product.deletedProductDetailIds));\r\n  const response = await api.post('/productinfo', formData);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ProductResponse;\r\n    if (product.productId != '0') {\r\n      if (isDelete) {\r\n        dispatch(deleteProductSuccess([product], res.message || ''))\r\n      } else {\r\n        dispatch(successProduct(res.message || ''));\r\n      }\r\n    } else {\r\n      dispatch(successProduct(res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as ProductResponse;\r\n    dispatch(errorProduct(res.message || ''));\r\n  }\r\n\r\n};\r\n\r\nconst getProducts = () => async (dispatch: Dispatch<ProductAction>) => {\r\n  dispatch(loadingProduct());\r\n  const response = await api.get('/productinfo');\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ProductResponse;\r\n    dispatch(setProducts(res.data || [], true))\r\n  } else {\r\n    const res = response as ProductResponse;\r\n    dispatch(errorProduct(res.message || ''));\r\n  }\r\n};\r\n\r\nconst getProduct = (productId: number) => async (dispatch: Dispatch<ProductAction>) => {\r\n  dispatch(loadingProduct());\r\n  const response = await api.get('/productinfo?productId=' + productId);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ProductResponse;\r\n    dispatch(setSingleProducts(res.singleData || {} as ProductItem))\r\n  } else {\r\n    const res = response as ProductResponse;\r\n    dispatch(errorProduct(res.message || ''));\r\n  }\r\n};\r\n\r\nconst getCustomerProducts = (\r\n  offset: number,\r\n  limit: number,\r\n  categoryId: number[],\r\n  subCategoryId: number[],\r\n  colourId: number[],\r\n  sizeId: number[],\r\n  startPrice: string,\r\n  endPrice: string,\r\n  currency: string,\r\n  searchText: string,\r\n  freshData = false) => async (dispatch: Dispatch<ProductAction>) => {\r\n    dispatch(loadingProduct());\r\n\r\n    const response = await api.get(\r\n      `/productlistcustomer?offset=${offset}&limit=${limit}&categorydId=${categoryId}&colourId=${colourId}&sizeId=${sizeId}&subCategoryId=${subCategoryId}&startPrice=${startPrice}&endPrice=${endPrice}&currency=${currency}&searchText=${searchText}`);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n      const res = response.data as ProductResponse;\r\n      const _hasMoreProducts = res.data && res.data.length === pageSize || (offset === 0 && limit > pageSize)   || false;\r\n      if(freshData){\r\n        dispatch(setProducts(res.data || [], _hasMoreProducts))\r\n      }else {\r\n        dispatch(setCustomerProducts(res.data || [], _hasMoreProducts))\r\n      }\r\n      \r\n    } else {\r\n      const res = response as ProductResponse;\r\n      dispatch(errorProduct(res.message || ''));\r\n    }\r\n  }\r\n\r\n  const updateProductHighLight = (highlight: string, productId: string) => async(dispatch: Dispatch<ProductAction>) => {\r\n    dispatch(loadingProduct());\r\n    const latest =  highlight === '2';\r\n    const trending = highlight === '1';\r\n    const response = await api.post('/producthighlight',{\r\n      latest,\r\n      trending,\r\n      productId\r\n    });\r\n\r\n    if(response.status === HttpStatusCode.OK){\r\n      const res = response.data as ProductResponse;\r\n      dispatch(setProductHighlight(trending,latest, productId, res.message || ''))\r\n    } else {\r\n      const res = response as ProductResponse;\r\n      dispatch(errorProduct(res.message || ''));\r\n    }\r\n  }\r\n\r\nexport {\r\n  addUpdateProduct,\r\n  productReducer,\r\n  getProducts,\r\n  getProduct,\r\n  setDefaulState,\r\n  getCustomerProducts,\r\n  updateProductHighLight,\r\n  errorProduct\r\n}\r\n","import { Dispatch, Action } from 'redux';\r\nimport { ActiveProductCount, ActiveProductCountNew, ProductCountList } from 'types';\r\nimport { api, createActiveProductCountList, createProductCountList } from 'services';\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface ProductCountAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductCountList;\r\n};\r\n\r\nexport interface ProductCountResponse {\r\n  readonly message?: string;\r\n  readonly data?: ActiveProductCountNew[];\r\n};\r\n\r\nexport interface ProductCount {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductCountList;\r\n};\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n  data: {}\r\n} as ProductCount;\r\n\r\nenum Actions {\r\n  LOADING_PRODUCT_COUNT= 'LOADING_PRODUCT_COUNT',\r\n  ERROR_PRODUCT_COUNT= 'ERROR_PRODUCT_COUNT',\r\n  SET_PRODUCT_COUNT= 'SET_PRODUCT_COUNT',\r\n};\r\n\r\nconst loadingProductCount = () => ({\r\n  type: Actions.LOADING_PRODUCT_COUNT\r\n});\r\n\r\nconst errorProductCount = (message: string) => ({\r\n  type: Actions.ERROR_PRODUCT_COUNT,\r\n  message\r\n});\r\n\r\nconst setProductCount = (data: ProductCountList) => ({\r\n  type: Actions.SET_PRODUCT_COUNT,\r\n  data\r\n});\r\n\r\nconst productCountReducer = (state= initialState, action: ProductCountAction): ProductCount => {\r\n  switch(action.type) {\r\n    case Actions.LOADING_PRODUCT_COUNT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        message: ''\r\n      }\r\n    case Actions.ERROR_PRODUCT_COUNT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_PRODUCT_COUNT:\r\n      return {\r\n        ...state,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: true,\r\n        message: action.message,\r\n        data : action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n/** Thunk */\r\n\r\nconst getActiveProductCount = () => async(dispatch: Dispatch<ProductCountAction>) => {\r\n  dispatch(loadingProductCount());\r\n\r\n  const response = await api.get('/productcount');\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as ProductCountResponse;\r\n    dispatch(setProductCount(createActiveProductCountList(res.data||[])));\r\n  } else {\r\n    const res = response as ProductCountResponse;\r\n    dispatch(errorProductCount(res.message || ''))\r\n  }\r\n};\r\n\r\nexport {\r\n  productCountReducer,\r\n  getActiveProductCount\r\n}","const pageSize = 25;\r\n\r\n\r\nexport {\r\n  pageSize\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { CustomerCart } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface CartAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: CustomerCart[]\r\n}\r\n\r\nexport interface CartResponse {\r\n  message?: string;\r\n  data?: CustomerCart;\r\n}\r\n\r\nexport interface CartResponseMulti {\r\n  message?: string;\r\n  data?: CustomerCart[];\r\n}\r\n\r\nexport interface Cart {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _quantityUpdate: boolean;\r\n  readonly message?: string;\r\n  readonly data?: CustomerCart[];\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  _quantityUpdate: false,\r\n  message: '',\r\n  data: []\r\n} as Cart;\r\n\r\nenum Actions {\r\n  LOADING_CART = 'LOADING_CART',\r\n  ERROR_CART = 'ERROR_CART',\r\n  SUCCESS_CART = 'SUCCESS_CART',\r\n  DEFAULT_CART = 'DEFAULT_CART',\r\n  SET_CART = 'SET_CART',\r\n  SET_LOGGED_CART = 'SET_LOGGED_CART',\r\n  UPDATE_CART_SUCCESS = 'UPDATE_CART_SUCCESS',\r\n  ADD_CART_SUCCESS = 'ADD_CART_SUCCESS',\r\n  UPDATE_CART_LOGGED_OUT = 'UPDATE_CART_LOGGED_OUT',\r\n  DELETE_CART_PRODUCT = 'DELETE_CART_PRODUCT',\r\n  CART_QUANTITY_FINE = 'CART_QUANTITY_FINE',\r\n  CART_GET_UPDATED_QUANTITY = 'CART_GET_UPDATED_QUANTITY',\r\n  DELETE_CART_PRODUCT_LOGGED_OUT = 'DELETE_CART_PRODUCT_LOGGED_OUT',\r\n};\r\n\r\nconst loadingCart = () => ({\r\n  type: Actions.LOADING_CART\r\n});\r\n\r\nconst successCart = (message: string) => ({\r\n  type: Actions.SUCCESS_CART,\r\n  message\r\n});\r\n\r\nconst errorCart = (message: string) => ({\r\n  type: Actions.ERROR_CART,\r\n  message\r\n});\r\n\r\nconst defaultCart = () => ({\r\n  type: Actions.DEFAULT_CART\r\n});\r\n\r\nconst setCart = (data: CustomerCart[]) => ({\r\n  type: Actions.SET_CART,\r\n  data\r\n});\r\n\r\nconst setLoggedCart = (data: CustomerCart[]) => ({\r\n  type: Actions.SET_LOGGED_CART,\r\n  data\r\n});\r\n\r\nconst updateCartSuccess = (data: CustomerCart[], message: string) => ({\r\n  type: Actions.UPDATE_CART_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst addCartSuccess = (data: CustomerCart[], message: string) => ({\r\n  type: Actions.ADD_CART_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst addCartSuccessLoggedOut = (data: CustomerCart[], message: string) => ({\r\n  type: Actions.UPDATE_CART_LOGGED_OUT,\r\n  data,\r\n  message\r\n});\r\n\r\nconst deleteCartProduct = (data: CustomerCart[], message: string) => ({\r\n  type: Actions.DELETE_CART_PRODUCT,\r\n  data,\r\n  message\r\n});\r\n\r\nconst cartQuantityFine = () => ({\r\n  type: Actions.CART_QUANTITY_FINE\r\n});\r\n\r\nconst cartGetUpdatedQuantity = () => ({\r\n  type: Actions.CART_GET_UPDATED_QUANTITY\r\n});\r\n\r\nconst deleteCartLoggedOut = (data: CustomerCart[]) =>({\r\n  type: Actions.DELETE_CART_PRODUCT_LOGGED_OUT,\r\n  data,\r\n})\r\n\r\nconst cartReducer = (state = initialState, action: CartAction): Cart => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_CART:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false,\r\n        _quantityUpdate: false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_CART:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_CART:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _quantityUpdate: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_CART:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.SET_LOGGED_CART:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_CART_SUCCESS:\r\n      const originalState = state.data || [];\r\n      let og = [];\r\n      let newProduct = true;\r\n      if (action.data && originalState.length === 0) {\r\n        og = [...action.data]\r\n      } else {\r\n        og = originalState.map((product) => {\r\n          if (action.data && product.cartId === action.data[0].cartId) {\r\n            product.productQuantity = action.data[0].productQuantity;\r\n            product.totalPrice = action.data[0].totalPrice;\r\n            product.cartId = action.data[0].cartId;\r\n            newProduct = false;\r\n            return product;\r\n          }\r\n          return product;\r\n        });\r\n        if (newProduct && action.data) {\r\n          og = [...og, ...action.data]\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: og\r\n      }\r\n    case Actions.UPDATE_CART_LOGGED_OUT:\r\n      const originalStatelo = state.data || [];\r\n      let oglo = [];\r\n      let newProductlo = true;\r\n      if (action.data && originalStatelo.length === 0) {\r\n        oglo = [...action.data]\r\n      } else {\r\n        oglo = originalStatelo.map((product) => {\r\n          if (action.data && product.cartId === action.data[0].cartId) {\r\n            product.productQuantity = (Number(action.data[0].productQuantity) + Number(product.productQuantity)).toString();\r\n            product.totalPrice = ((Number(product.productQuantity)) * Number(action.data[0].productPrice)).toString();\r\n            product.cartId = action.data[0].cartId;\r\n            newProductlo = false;\r\n            return product;\r\n          }\r\n          return product;\r\n        });\r\n        if (newProductlo && action.data) {\r\n          oglo = [...oglo, ...action.data]\r\n        }\r\n      }\r\n      localStorage.setItem(\"basicKart-loggedOutCart\", JSON.stringify(oglo));\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: oglo\r\n      }\r\n    case Actions.ADD_CART_SUCCESS:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.DELETE_CART_PRODUCT_LOGGED_OUT:\r\n      const res = state.data?.filter(({ cartId }) => action.data && cartId !== action.data[0].cartId)\r\n      localStorage.setItem(\"basicKart-loggedOutCart\", JSON.stringify(res));\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: res\r\n      }\r\n    case Actions.DELETE_CART_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: state.data?.filter(({ cartId }) => action.data && cartId !== action.data[0].cartId)\r\n      }\r\n    case Actions.DEFAULT_CART:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    case Actions.CART_GET_UPDATED_QUANTITY:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _quantityUpdate: true,\r\n        message: action.message\r\n      }\r\n    case Actions.CART_QUANTITY_FINE:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: true,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nconst addUpdateCart = (cart: CustomerCart, isLoggedIn?: boolean) =>\r\n  async (dispatch: Dispatch<CartAction>) => {\r\n    dispatch(loadingCart());\r\n    if (!isLoggedIn) {\r\n          // result.productImage = cart.productImage;\r\n          // result.productImagePath = cart.productImagePath;\r\n          // result.productName = cart.productName;\r\n          // result.subcategory = cart.subcategory;\r\n          // result.productId = cart.productId;\r\n          const newCart = {\r\n            ...cart,\r\n            totalPrice: (Number(cart.productPrice) * Number(cart.productQuantity)).toString(),\r\n          } as CustomerCart;\r\n          dispatch(addCartSuccessLoggedOut([newCart],''));\r\n    } else {\r\n      const response = await api.post('/cart',\r\n        {\r\n          product_detail_id: cart.productDetailId.toString(),\r\n          order_quantity: cart.productQuantity,\r\n          price_id: cart.currencyType,\r\n          orderdetail_id: cart.cartId.toString(),\r\n          delete_flag: false\r\n        });\r\n\r\n      if (response.status === HttpStatusCode.OK) {\r\n        const res = response.data as CartResponse;\r\n        if (cart.cartId != '0') {\r\n          const result = res.data || {} as CustomerCart;\r\n          if (cart.productQuantity === '0') {\r\n            dispatch(deleteCartProduct([cart], res.message || ''));\r\n          } else {\r\n            dispatch(updateCartSuccess([result], res.message || ''));\r\n          }\r\n        } else {\r\n          const result = res.data || {} as CustomerCart;\r\n          result.productImage = cart.productImage;\r\n          result.productImagePath = cart.productImagePath;\r\n          result.productName = cart.productName;\r\n          result.subcategory = cart.subcategory;\r\n          result.productId = cart.productId;\r\n          dispatch(updateCartSuccess([result], res.message || ''));\r\n        }\r\n      } else {\r\n        const res = response as CartResponse;\r\n        dispatch(errorCart(res.message || ''));\r\n      }\r\n    }\r\n  };\r\n\r\nconst getCart = () => async (dispatch: Dispatch<CartAction>) => {\r\n  dispatch(loadingCart());\r\n\r\n  const response = await api.get('/cart');\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CartResponseMulti;\r\n    dispatch(addCartSuccess(res.data || [], res.message || ''));\r\n  } else {\r\n    const res = response as CartResponse;\r\n    dispatch(errorCart(res.message || ''))\r\n  }\r\n};\r\n\r\nconst deleteCartItem = (cart: CustomerCart, isLoggedIn?: boolean) => async (dispatch: Dispatch<CartAction>) => {\r\n  dispatch(loadingCart());\r\n\r\n  if(!isLoggedIn){\r\n    dispatch(deleteCartLoggedOut([cart]));\r\n  }else {\r\n    const response = await api.post('/cart', {\r\n      orderdetail_id: cart.cartId,\r\n      product_detail_id: cart.productDetailId.toString(),\r\n      order_quantity: cart.productQuantity,\r\n      price_id: '1',\r\n      delete_flag: true\r\n    });\r\n    if (response.status === HttpStatusCode.OK) {\r\n      const res = response.data as CartResponse;\r\n      dispatch(deleteCartProduct([cart], res.message || ''));\r\n    } else {\r\n      const res = response as CartResponse;\r\n      dispatch(errorCart(res.message || ''))\r\n    }\r\n  }\r\n  \r\n};\r\n\r\nconst updateCartQuantity = (orderDetailId: string) => async (dispatch: Dispatch<CartAction>) => {\r\n  dispatch(loadingCart());\r\n  const response = await api.post('/updatecartquantity', { orderDetailId });\r\n  if (response.status === HttpStatusCode.OK) {\r\n    dispatch(cartQuantityFine());\r\n  } else if (response.status === HttpStatusCode.PARTIAL_INFO) {\r\n    dispatch(cartGetUpdatedQuantity());\r\n  } else {\r\n    const res = response as CartResponse;\r\n    dispatch(errorCart(res.message || ''))\r\n  }\r\n}\r\n\r\nexport {\r\n  cartReducer,\r\n  addUpdateCart,\r\n  getCart,\r\n  deleteCartItem,\r\n  updateCartQuantity,\r\n  setLoggedCart\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { CustomerCheckout, RazorpayPayment, PayPalPayment, CodPayment } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface CheckoutAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: CustomerCheckout;\r\n}\r\n\r\nexport interface CheckoutResponse {\r\n  message?: string\r\n  data?: CustomerCheckout;\r\n}\r\n\r\nexport interface Checkout {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _isPaymentSucceess: boolean;\r\n  readonly _priceChanged: boolean;\r\n  readonly _isFetchCodCodeSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: CustomerCheckout;\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  _isPaymentSucceess: false,\r\n  _priceChanged: false,\r\n  _isFetchCodCodeSuccess: false,\r\n  message: '',\r\n  data: {}\r\n} as Checkout;\r\n\r\nenum Actions {\r\n  LOADING_CHECKOUT = 'LOADING_CHECKOUT',\r\n  ERROR_CHECKOUT = 'ERROR_CHECKOUT',\r\n  SUCCESS_CHECKOUT_ORDER = 'SUCCESS_CHECKOUT_ORDER',\r\n  DEFAULT_CHECKOUT = 'DEFAULT_CHECKOUT',\r\n  SET_CHECKOUT = 'SET_CHECKOUT',\r\n  UPDATE_CHECKOUT_SUCCESS = 'UPDATE_CHECKOUT_SUCCESS',\r\n  SUCCESS_PAYMENT = 'SUCCESS_PAYMENT',\r\n  PRICE_CHANGED = 'PRICE_CHANGED',\r\n};\r\n\r\nconst loadingCheckout = () => ({\r\n  type: Actions.LOADING_CHECKOUT\r\n});\r\n\r\nconst successCheckoutOrder = (data: CustomerCheckout, message?: string) => ({\r\n  type: Actions.SUCCESS_CHECKOUT_ORDER,\r\n  data,\r\n  message\r\n});\r\n\r\nconst errorCheckout = (message: string) => ({\r\n  type: Actions.ERROR_CHECKOUT,\r\n  message\r\n});\r\n\r\nconst defaultCheckout = () => ({\r\n  type: Actions.DEFAULT_CHECKOUT\r\n});\r\n\r\nconst successPayment =(message:string) => ({\r\n  type: Actions.SUCCESS_PAYMENT,\r\n  message\r\n});\r\n\r\nconst priceChanged = (message:string) => ({\r\n  type: Actions.PRICE_CHANGED,\r\n  message\r\n});\r\n\r\nconst checkoutReducer = (state = initialState, action: CheckoutAction) : Checkout => {\r\n  switch(action.type){\r\n    case Actions.LOADING_CHECKOUT:\r\n      return{\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_CHECKOUT_ORDER:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: false,\r\n        _isFetchCodCodeSuccess: true,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.PRICE_CHANGED:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: true,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_CHECKOUT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: false,\r\n        _isFetchCodCodeSuccess: false,\r\n        message: action.message\r\n      }\r\n    case Actions.DEFAULT_CHECKOUT:\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: false,\r\n        _isFetchCodCodeSuccess: false,\r\n      }\r\n    case Actions.SUCCESS_PAYMENT:\r\n      return {\r\n        ...state,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isPaymentSucceess: true,\r\n        _priceChanged: false,\r\n        message: action.message\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Thunk\r\n\r\nconst getRazorPayOrder = (amount: string, orderId: number, couponId?: number) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/checkout',\r\n    {\r\n      amount,\r\n      displayAmount: amount,\r\n      orderId,\r\n      couponId\r\n    });\r\n    if (response.status === HttpStatusCode.OK) {\r\n      const res = response.data as CheckoutResponse;\r\n      dispatch(successCheckoutOrder(res.data || {} as CustomerCheckout, res.message || ''));\r\n    } else if(response.status === HttpStatusCode.PARTIAL_INFO){\r\n      const res = response.data as CheckoutResponse;\r\n      dispatch(priceChanged(res.message || ''));\r\n    } else {\r\n      const res = response as CheckoutResponse;\r\n      dispatch(errorCheckout(res.message || ''));\r\n    }\r\n};\r\n\r\nconst saveRazorPayOrder = (razorpayData: RazorpayPayment) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/payment/razorpay',razorpayData);\r\n    if (response.status === HttpStatusCode.OK) {\r\n      const res = response.data as CheckoutResponse\r\n      dispatch(successPayment(res.message || ''));\r\n    } else {\r\n      const res = response as CheckoutResponse\r\n      dispatch(errorCheckout(res.message || ''));\r\n    }\r\n};\r\n\r\nconst getPayPalOrder = (amount: string, displayAmount: string ,orderId: number, couponId?: number)  => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/paypalorder',\r\n  {\r\n    amount,\r\n    displayAmount,\r\n    orderId,\r\n    couponId\r\n  });\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CheckoutResponse\r\n    dispatch(successCheckoutOrder(res.data as CustomerCheckout, res.message || ''));\r\n  } else if(response.status === HttpStatusCode.PARTIAL_INFO){\r\n    const res = response.data as CheckoutResponse;\r\n    dispatch(priceChanged(res.message || ''));\r\n  } else {\r\n    const res = response as CheckoutResponse\r\n    dispatch(errorCheckout(res.message || ''));\r\n  }\r\n};\r\n\r\nconst savePayPalOrder = (paypalData: PayPalPayment) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/payment/paypal',paypalData);\r\n    if (response.status === HttpStatusCode.OK) {\r\n      const res = response.data as CheckoutResponse\r\n      dispatch(successPayment(res.message || ''));\r\n    } else {\r\n      const res = response as CheckoutResponse\r\n      dispatch(errorCheckout(res.message || ''));\r\n    }\r\n};\r\n\r\nconst getCodOrder = (amount: string, orderId: number, couponId?: number) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/payment/codorder',{\r\n    amount,\r\n    displayAmount: amount,\r\n    orderId,\r\n    couponId\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CheckoutResponse;\r\n    dispatch(successCheckoutOrder(res.data as CustomerCheckout, res.message || ''));\r\n  } else if(response.status === HttpStatusCode.PARTIAL_INFO){\r\n    const res = response.data as CheckoutResponse;\r\n    dispatch(priceChanged(res.message || ''));\r\n  } else {\r\n    const res = response as CheckoutResponse;\r\n    dispatch(errorCheckout(res.message || ''));\r\n  }\r\n};\r\n\r\nconst saveCodOrder = (codData: CodPayment) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/payment/codplaceorder',codData);\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CheckoutResponse\r\n    dispatch(successPayment(res.message || ''));\r\n  } else {\r\n    const res = response as CheckoutResponse\r\n    dispatch(errorCheckout(res.message || ''));\r\n  }\r\n};\r\n\r\nconst resendOTP = () => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.get('/payment/codresendotp');\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CheckoutResponse;\r\n    dispatch(successCheckoutOrder(res.data as CustomerCheckout, res.message || ''));\r\n  } else {\r\n    const res = response as CheckoutResponse;\r\n    dispatch(errorCheckout(res.message || ''));\r\n  }\r\n};\r\n\r\nexport{\r\n  getRazorPayOrder,\r\n  checkoutReducer,\r\n  saveRazorPayOrder,\r\n  errorCheckout,\r\n  getPayPalOrder,\r\n  savePayPalOrder,\r\n  getCodOrder,\r\n  saveCodOrder,\r\n  resendOTP,\r\n  defaultCheckout\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface UserLocationAction extends Action {\r\n  readonly data?: string;\r\n};\r\n\r\nexport interface UserLocation {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: string;\r\n};\r\n\r\nenum Actions{\r\n  LOADING_USER_LOCATION= 'LOADING_USER_LOCATION',\r\n  SET_USER_LOCATION= 'SET_USER_LOCATION',\r\n};\r\n\r\nconst loadingUserLocation = () => ({\r\n  type: Actions.LOADING_USER_LOCATION,\r\n});\r\n\r\nconst setUserLocation = (data: string) => ({\r\n  type: Actions.SET_USER_LOCATION,\r\n  data\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:''\r\n} as UserLocation\r\n\r\nconst userLocationReducer = (state= initialState, action: UserLocationAction): UserLocation => {\r\n  switch(action.type){\r\n    case Actions.LOADING_USER_LOCATION:\r\n      return{\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.SET_USER_LOCATION:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess: false,\r\n        data: action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n/** Thunk */\r\n\r\nconst getUserLocation = () => async (dispatch: Dispatch<UserLocationAction>) => {\r\n  dispatch(loadingUserLocation());\r\n  const defaultUserLocation = 'Asia/Calcutta';\r\n  try {\r\n    const userLocation = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n    if(userLocation && userLocation.toLowerCase() === defaultUserLocation.toLowerCase()){\r\n      dispatch(setUserLocation('IN'));\r\n    } else if (!userLocation && (new Date).getTimezoneOffset() === -330){\r\n      dispatch(setUserLocation('IN'));\r\n    } else {\r\n      dispatch(setUserLocation('USD'));\r\n    }\r\n  } catch (error) {\r\n    dispatch(setUserLocation('IN'));\r\n  }\r\n};\r\n\r\nexport {\r\n  userLocationReducer,\r\n  getUserLocation\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { Order, OrderItems, OrderUpdateAdmin } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode, pageSize } from 'appConstants';\r\n\r\nexport interface CustomerOrderAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: Order[];\r\n  readonly singleData?: Order;\r\n  readonly _hasMoreOrders?: boolean;\r\n};\r\n\r\ninterface CustomerOrderResponse {\r\n  message?: string;\r\n  data?: Order[];\r\n  singleData?: Order;\r\n  _hasMoreOrders?: boolean;\r\n};\r\n\r\nexport interface CustomerOrders {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _hasMoreOrders?: boolean;\r\n  readonly _isOrderUpdate?: boolean;\r\n  readonly message?: string;\r\n  readonly data?: Order[];\r\n  readonly singleData?: Order;\r\n};\r\n\r\nenum Actions{\r\n  LOADING_ORDER= 'LOADING_ORDER',\r\n  SUCCESS_ORDER= 'SUCCESS_ORDER',\r\n  ADMIN_SUCCESS_ORDER= 'ADMIN_SUCCESS_ORDER',\r\n  ERROR_ORDER= 'ERROR_ORDER',\r\n  SINGLE_DATA = 'SINGLE_DATA',\r\n  CUSTOMER_RETURN = 'CUSTOMER_RETURN',\r\n  DEFAULT_ORDER_RETURN = 'DEFAULT_ORDER_RETURN'\r\n};\r\n\r\nconst loadingOrder= () => ({\r\n  type: Actions.LOADING_ORDER\r\n});\r\n\r\nconst successOrder= (data: Order[], _hasMoreOrders: boolean) => ({\r\n  type: Actions.SUCCESS_ORDER,\r\n  data,\r\n  _hasMoreOrders\r\n});\r\n\r\nconst adminSuccessOrder= (data: Order[]) => ({\r\n  type: Actions.ADMIN_SUCCESS_ORDER,\r\n  data\r\n});\r\n\r\nconst errorOrder= (message: string) => ({\r\n  type: Actions.ERROR_ORDER,\r\n  message\r\n});\r\n\r\nconst singleOrder= (singleData: Order) => ({\r\n  type: Actions.SINGLE_DATA,\r\n  singleData\r\n});\r\n\r\nconst customerReturn = (orderDetailsId: number) => ({\r\n  type: Actions.CUSTOMER_RETURN,\r\n  singleData: {\r\n   orderId: orderDetailsId.toString()\r\n  } as Order\r\n});\r\n\r\nconst defaulOrderReturn = () => ({\r\n  type: Actions.DEFAULT_ORDER_RETURN\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _hasMoreOrders: false,\r\n  _isOrderUpdate: false,\r\n  message: '',\r\n  data:[],\r\n  singleData: {} as Order,\r\n} as CustomerOrders\r\n\r\nconst customerOrdersReducer = (state= initialState, action: CustomerOrderAction): CustomerOrders => {\r\n  switch(action.type){\r\n    case Actions.LOADING_ORDER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: true,\r\n        _hasMoreOrders: false,\r\n        _isOrderUpdate: false,\r\n      }\r\n    case Actions.SUCCESS_ORDER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isOrderUpdate: false,\r\n        message: action.message,\r\n        data: state.data?.concat(action.data || []),\r\n        _hasMoreOrders: action._hasMoreOrders\r\n      }\r\n    case Actions.ADMIN_SUCCESS_ORDER:\r\n    return {\r\n      ...state,\r\n      _isSuccess: true,\r\n      _isError: false,\r\n      _isLoading: false,\r\n      _isOrderUpdate: false,\r\n      message: action.message,\r\n      data: action.data\r\n    }\r\n    case Actions.SINGLE_DATA:\r\n      return{\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _hasMoreOrders: false,\r\n        _isOrderUpdate: false,\r\n        singleData: action.singleData\r\n      }\r\n    case Actions.ERROR_ORDER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        _hasMoreOrders: false,\r\n        _isOrderUpdate: false,\r\n      }\r\n    case Actions.DEFAULT_ORDER_RETURN:\r\n      return {\r\n        ...state,\r\n        _isOrderUpdate: false,\r\n      }\r\n    case Actions.CUSTOMER_RETURN:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isOrderUpdate: true,\r\n        message: action.message,\r\n        data: state.data?.map((singleOrder) => {\r\n          const updatedOrder = singleOrder.orderItems.map((order) => {\r\n            if(order.orderDetailId.toString() === action.singleData?.orderId.toString()){\r\n              return {...order, shipmentDetails: {...order.shipmentDetails, returnStatus: 'In Progress'}}\r\n            } else {\r\n              return order\r\n            }\r\n          })\r\n          return {\r\n            ...singleOrder,\r\n            orderItems : updatedOrder\r\n          }\r\n        }),\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n/** Thunk */\r\n\r\nconst getCustomerOrders = (offset: number, limit: number) => async(dispatch: Dispatch<CustomerOrderAction>) => {\r\n  dispatch(loadingOrder());\r\n  const response = await api.get('/getcustomerorders?limit='+limit+'&offset='+offset);\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as CustomerOrderResponse;\r\n    const _hasMoreOrders = res.data && res.data.length === pageSize || false;\r\n    dispatch(successOrder(res.data || [], _hasMoreOrders))\r\n  } else {\r\n    const res = response as CustomerOrderResponse;\r\n    dispatch(errorOrder(res.message || ''));\r\n  }\r\n}\r\n\r\nconst getAdminOrders = (userId=0) => async(dispatch: Dispatch<CustomerOrderAction>) => {\r\n  dispatch(loadingOrder());\r\n  const response = await api.get('/getadminorders?userId='+userId);\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as CustomerOrderResponse;\r\n    dispatch(adminSuccessOrder(res.data || []))\r\n  } else {\r\n    const res = response as CustomerOrderResponse;\r\n    dispatch(errorOrder(res.message || ''));\r\n  }\r\n};\r\n\r\nconst customerProductReturn = (orderDetailsId: number, returnReason: string,\r\n  orderNumber?: string, productName?: string, userName?: string) => async(dispatch: Dispatch<CustomerOrderAction>) => {\r\n  dispatch(loadingOrder());\r\n  const response = await api.post('/customerproductreturn',{\r\n    orderDetailsId,\r\n    returnReason,\r\n    orderNumber,\r\n    productName,\r\n    userName\r\n  });\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as CustomerOrderResponse;\r\n    dispatch(customerReturn(orderDetailsId))\r\n  } else {\r\n    const res = response as CustomerOrderResponse;\r\n    dispatch(errorOrder(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  getCustomerOrders,\r\n  customerOrdersReducer,\r\n  getAdminOrders,\r\n  singleOrder,\r\n  customerProductReturn,\r\n  defaulOrderReturn\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { OrderShipper, Order } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface ShipperAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: OrderShipper[]\r\n}\r\n\r\nexport interface ShipperResponse {\r\n  message?: string\r\n  data?: OrderShipper[]\r\n}\r\n\r\nexport interface Shipper {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: OrderShipper[];\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n  data: []\r\n} as Shipper\r\n\r\nenum Actions {\r\n  LOADING_SHIPPER = 'LOADING_SHIPPER',\r\n  ERROR_SHIPPER = 'ERROR_SHIPPER',\r\n  SUCCESS_SHIPPER = 'SUCCESS_SHIPPER',\r\n  DEFAULT_SHIPPER = 'DEFAULT_SHIPPER',\r\n  SET_SHIPPER = 'SET_SHIPPER',\r\n  UPDATE_SHIPPER_SUCCESS = 'UPDATE_SHIPPER_SUCCESS',\r\n  DELETE_SHIPPER_SUCCESS = 'DELETE_SHIPPER_SUCCESS'\r\n}\r\n\r\nconst loadingShipper = () => ({\r\n  type: Actions.LOADING_SHIPPER\r\n});\r\n\r\nconst successShipper = (message: string) => ({\r\n  type: Actions.SUCCESS_SHIPPER,\r\n  message\r\n});\r\n\r\nconst errorShipper = (message: string) => ({\r\n  type: Actions.ERROR_SHIPPER,\r\n  message\r\n});\r\n\r\nconst defaultShipper = () => ({\r\n  type: Actions.DEFAULT_SHIPPER\r\n});\r\n\r\nconst setShipper = (data: OrderShipper[]) => ({\r\n  type: Actions.SET_SHIPPER,\r\n  data\r\n});\r\n\r\nconst updateShipperSuccess = (data: OrderShipper[], message: string) => ({\r\n  type: Actions.UPDATE_SHIPPER_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst deleteShipperSuccess = (data: OrderShipper[], message: string) => ({\r\n  type: Actions.DELETE_SHIPPER_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst shipperReducer = (state = initialState, action: ShipperAction): Shipper => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_SHIPPER:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_SHIPPER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_SHIPPER:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_SHIPPER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_SHIPPER_SUCCESS:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.shipperId != updatedValue[0].shipperId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue\r\n        ]\r\n      }\r\n    case Actions.DELETE_SHIPPER_SUCCESS:\r\n      const orgState = state.data || [];\r\n      const updValue = action.data || [];\r\n      const updState = orgState.filter(d => {\r\n        return d.shipperId != updValue[0].shipperId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updState\r\n        ]\r\n      }\r\n    case Actions.DEFAULT_SHIPPER:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/** Thunk */\r\n\r\nconst saveShipper = (shipper: OrderShipper) => async (dispatch: Dispatch<ShipperAction>) => {\r\n  dispatch(loadingShipper());\r\n  const response = await api.post('/shipper',\r\n    {\r\n      shipper_name: shipper.shipperName,\r\n      shipper_link: shipper.trackingLink,\r\n      shipper_id: 0,\r\n      delete_flag: false\r\n    });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ShipperResponse\r\n    dispatch(successShipper(res.message || ''));\r\n  } else {\r\n    const res = response as ShipperResponse\r\n    dispatch(errorShipper(res.message || ''));\r\n  }\r\n}\r\n\r\nconst getShippers = () => async (dispatch: Dispatch<ShipperAction>) => {\r\n  dispatch(loadingShipper());\r\n\r\n  const response = await api.get('/shipper');\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as ShipperResponse;\r\n    dispatch(setShipper(res.data || []));\r\n  } else {\r\n    const res = response as ShipperResponse;\r\n    dispatch(errorShipper(res.message || ''))\r\n  }\r\n}\r\n\r\nconst updateShipper = (shipper: OrderShipper, delete_flag= false) => async (dispatch: Dispatch<ShipperAction>) => {\r\n  dispatch(loadingShipper());\r\n\r\n  const response = await api.post('/shipper', {\r\n    shipper_name: shipper.shipperName,\r\n    shipper_link: shipper.trackingLink,\r\n    shipper_id: shipper.shipperId,\r\n    delete_flag\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ShipperResponse;\r\n    if(delete_flag){\r\n      dispatch(deleteShipperSuccess([shipper], res.message || ''))\r\n    }else {\r\n      dispatch(updateShipperSuccess([shipper], res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as ShipperResponse\r\n    dispatch(errorShipper(res.message || ''));\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  shipperReducer,\r\n  saveShipper,\r\n  getShippers,\r\n  updateShipper\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { OrderUpdateAdmin } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode, pageSize } from 'appConstants';\r\n\r\nexport interface ShipmentAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: OrderUpdateAdmin;\r\n};\r\n\r\ninterface ShipmentResponse {\r\n  message?: string;\r\n  data?: OrderUpdateAdmin;\r\n};\r\n\r\nexport interface Shipment {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _hasMoreOrders?: boolean;\r\n  readonly message?: string;\r\n  readonly data?: OrderUpdateAdmin;\r\n};\r\n\r\nenum Actions{\r\n  LOADING_SHIPMENT= 'LOADING_SHIPMENT',\r\n  SUCCESS_SHIPMENT= 'SUCCESS_SHIPMENT',\r\n  ERROR_SHIPMENT= 'ERROR_SHIPMENT',\r\n};\r\n\r\nconst loadingShipment= (data: OrderUpdateAdmin) => ({\r\n  type: Actions.LOADING_SHIPMENT,\r\n  data\r\n});\r\n\r\nconst successShipment= (data: OrderUpdateAdmin, message: string) => ({\r\n  type: Actions.SUCCESS_SHIPMENT,\r\n  data,\r\n  message,\r\n});\r\n\r\nconst errorShipment= (message: string) => ({\r\n  type: Actions.ERROR_SHIPMENT,\r\n  message,\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _hasMoreOrders: false,\r\n  message: '',\r\n  data:{}\r\n} as Shipment\r\n\r\nconst shipmentReducer = (state= initialState, action: ShipmentAction): Shipment => {\r\n  switch(action.type){\r\n    case Actions.LOADING_SHIPMENT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: true,\r\n        data: action.data,\r\n      }\r\n    case Actions.SUCCESS_SHIPMENT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.ERROR_SHIPMENT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        message: action.message,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n/** Thunk */\r\n\r\nconst updateOrderAdmin = (orderUpdate: OrderUpdateAdmin, sendTrackingEmail: boolean) => async(dispatch: Dispatch<ShipmentAction>) => {\r\n  dispatch(loadingShipment(orderUpdate));\r\n  const response = await api.post('/shipment',{\r\n    deliveryDate: orderUpdate.deliveryDate,\r\n    orderDetailId: orderUpdate.orderDetailId,\r\n    paymentReturned: orderUpdate.paymentReturned?.toString(),\r\n    returnStatus: orderUpdate.returnStatus?.toString(),\r\n    shipmentId: orderUpdate.shipmentId,\r\n    shipper: orderUpdate.shipper?.toString(),\r\n    shippingDate: orderUpdate.shippingDate,\r\n    trackingNumber: orderUpdate.trackingNumber?.toString() || '',\r\n    customerEmail: orderUpdate.customerEmail,\r\n    orderNumber: orderUpdate.orderNumber,\r\n    customerName: orderUpdate.customerName,\r\n    sendTrackingEmail\r\n  } as OrderUpdateAdmin);\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as ShipmentResponse;\r\n    dispatch(successShipment(orderUpdate, res.message|| ''));\r\n  } else {\r\n    const res = response as ShipmentResponse;\r\n    dispatch(errorShipment(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  shipmentReducer,\r\n  updateOrderAdmin\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { ProductItem } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface RelatedProductAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\ninterface RelatedProductResponse {\r\n   message?: string;\r\n   data?: ProductItem[];\r\n}\r\n\r\nexport interface RelatedProduct {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_RELATED_PRODUCT= 'LOADING_RELATED_PRODUCT',\r\n  SUCCESS_RELATED_PRODUCT= 'SUCCESS_RELATED_PRODUCT',\r\n  ERROR_RELATED_PRODUCT= 'ERROR_RELATED_PRODUCT',\r\n  SET_RELATED_PRODUCT= 'SET_RELATED_PRODUCT',\r\n}\r\n\r\nconst loadingRelatedProduct= () => ({\r\n  type: Actions.LOADING_RELATED_PRODUCT\r\n});\r\n\r\nconst successRelatedProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_RELATED_PRODUCT,\r\n  message\r\n});\r\n\r\nconst errorRelatedProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_RELATED_PRODUCT,\r\n  message\r\n});\r\n\r\nconst setRelatedProduct= (data: ProductItem[]) => ({\r\n  type: Actions.SET_RELATED_PRODUCT,\r\n  data\r\n});\r\n\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as RelatedProduct\r\n\r\n\r\nconst relatedProductReducer = (state= initialState, action: RelatedProductAction): RelatedProduct => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_RELATED_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_RELATED_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_RELATED_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_RELATED_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/**Thunk */\r\n\r\n\r\nconst getRelatedProduct= (subcategoryId: number, productId: number) => async (dispatch: Dispatch<RelatedProductAction>) => {\r\n  dispatch(loadingRelatedProduct());\r\n\r\n  const response = await api.post('/relatedproducts',{\r\n    subcategoryId,\r\n    productId\r\n  });\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as RelatedProductResponse;\r\n    dispatch(setRelatedProduct(res.data || []))\r\n  } else {\r\n    const res = response as RelatedProductResponse;\r\n    dispatch(errorRelatedProduct(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  relatedProductReducer,\r\n  getRelatedProduct\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { ProductItem } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface TrendingProductAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\ninterface TrendingProductResponse {\r\n   message?: string;\r\n   data?: ProductItem[];\r\n}\r\n\r\nexport interface TrendingProduct {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_TRENDING_PRODUCT= 'LOADING_TRENDING_PRODUCT',\r\n  SUCCESS_TRENDING_PRODUCT= 'SUCCESS_TRENDING_PRODUCT',\r\n  ERROR_TRENDING_PRODUCT= 'ERROR_TRENDING_PRODUCT',\r\n  SET_TRENDING_PRODUCT= 'SET_TRENDING_PRODUCT',\r\n}\r\n\r\nconst loadingTrendingProduct= () => ({\r\n  type: Actions.LOADING_TRENDING_PRODUCT\r\n});\r\n\r\nconst successTrendingProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_TRENDING_PRODUCT,\r\n  message\r\n});\r\n\r\nconst errorTrendingProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_TRENDING_PRODUCT,\r\n  message\r\n});\r\n\r\nconst setTrendingProduct= (data: ProductItem[]) => ({\r\n  type: Actions.SET_TRENDING_PRODUCT,\r\n  data\r\n});\r\n\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as TrendingProduct\r\n\r\n\r\nconst trendingProductReducer = (state= initialState, action: TrendingProductAction): TrendingProduct => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_TRENDING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_TRENDING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_TRENDING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_TRENDING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/**Thunk */\r\n\r\n\r\nconst getTrendingProduct= () => async (dispatch: Dispatch<TrendingProductAction>) => {\r\n  dispatch(loadingTrendingProduct());\r\n\r\n  const response = await api.get('/trendinglatest?type=2');\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as TrendingProductResponse;\r\n    dispatch(setTrendingProduct(res.data || []))\r\n  } else {\r\n    const res = response as TrendingProductResponse;\r\n    dispatch(errorTrendingProduct(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  trendingProductReducer,\r\n  getTrendingProduct\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { ProductItem } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface LatestProductAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\ninterface LatestProductResponse {\r\n   message?: string;\r\n   data?: ProductItem[];\r\n}\r\n\r\nexport interface LatestProduct {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_LATEST_PRODUCT= 'LOADING_LATEST_PRODUCT',\r\n  SUCCESS_LATEST_PRODUCT= 'SUCCESS_LATEST_PRODUCT',\r\n  ERROR_LATEST_PRODUCT= 'ERROR_LATEST_PRODUCT',\r\n  SET_LATEST_PRODUCT= 'SET_LATEST_PRODUCT',\r\n}\r\n\r\nconst loadingLatestProduct= () => ({\r\n  type: Actions.LOADING_LATEST_PRODUCT\r\n});\r\n\r\nconst successLatestProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_LATEST_PRODUCT,\r\n  message\r\n});\r\n\r\nconst errorLatestProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_LATEST_PRODUCT,\r\n  message\r\n});\r\n\r\nconst setLatestProduct= (data: ProductItem[]) => ({\r\n  type: Actions.SET_LATEST_PRODUCT,\r\n  data\r\n});\r\n\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as LatestProduct\r\n\r\n\r\nconst latestProductReducer = (state= initialState, action: LatestProductAction): LatestProduct => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_LATEST_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_LATEST_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_LATEST_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_LATEST_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/**Thunk */\r\n\r\n\r\nconst getLatestProduct= () => async (dispatch: Dispatch<LatestProductAction>) => {\r\n  dispatch(loadingLatestProduct());\r\n\r\n  const response = await api.get('/trendinglatest?type=1');\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as LatestProductResponse;\r\n    dispatch(setLatestProduct(res.data || []))\r\n  } else {\r\n    const res = response as LatestProductResponse;\r\n    dispatch(errorLatestProduct(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  latestProductReducer,\r\n  getLatestProduct\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { Search as ProductSearch } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode, pageSize } from 'appConstants';\r\n\r\nexport interface SearchAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductSearch;\r\n};\r\n\r\ninterface SearchResponse {\r\n  message?: string;\r\n  data?: ProductSearch;\r\n};\r\n\r\nexport interface Search {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _navigationReset?: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductSearch;\r\n};\r\n\r\nenum Actions{\r\n  LOADING_SEARCH= 'LOADING_SEARCH',\r\n  SET_SEARCH= 'SET_SEARCH',\r\n  ERROR_SEARCH= 'ERROR_SEARCH',\r\n  SEARCH_DEFAULT = 'SEARCH_DEFAULT'\r\n};\r\n\r\nconst loadingSearch= (data: ProductSearch) => ({\r\n  type: Actions.LOADING_SEARCH,\r\n  data\r\n});\r\n\r\nconst setSearch= (data: ProductSearch) => ({\r\n  type: Actions.SET_SEARCH,\r\n  data,\r\n});\r\n\r\nconst errorSearch= (message: string) => ({\r\n  type: Actions.ERROR_SEARCH,\r\n  message,\r\n});\r\n\r\nconst searchDefault= () => ({\r\n  type: Actions.SEARCH_DEFAULT\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _navigationReset: false,\r\n  message: '',\r\n  data:{} as ProductSearch\r\n} as Search\r\n\r\nconst searchReducer = (state= initialState, action: SearchAction): Search => {\r\n  switch(action.type){\r\n    case Actions.LOADING_SEARCH:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: true,\r\n        _navigationReset: false,\r\n        data: action.data,\r\n      }\r\n    case Actions.SET_SEARCH:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _navigationReset: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.SEARCH_DEFAULT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _navigationReset: true,\r\n        message: action.message,\r\n        data: {\r\n          ...state.data,\r\n          searchText:''\r\n        } as ProductSearch\r\n      }\r\n    case Actions.ERROR_SEARCH:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _navigationReset: false,\r\n        message: action.message,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n\r\n\r\nexport {\r\n  searchReducer,\r\n  setSearch,\r\n  searchDefault\r\n}","import { Action } from \"redux\";\r\nimport { CustomerShippment as CustomerShippmentType } from \"types\";\r\n\r\nexport interface CustomerShippmentAction extends Action {\r\n  readonly data?: CustomerShippmentType\r\n}\r\n\r\nexport interface CustomerShippment {\r\n  readonly data?: CustomerShippmentType;\r\n}\r\n\r\nconst initialState = {\r\n  data: {\r\n    shippmentPrice: ''\r\n  }\r\n} as CustomerShippment;\r\n\r\nenum Actions {\r\n  SET_SHIPPING_PRICE = 'SET_SHIPPING_PRICE',\r\n}\r\n\r\nconst setShippingPrice = (data: CustomerShippmentType) => ({\r\n  type: Actions.SET_SHIPPING_PRICE,\r\n  data\r\n});\r\n\r\nconst customerShippmentReducer = (state = initialState, action: CustomerShippmentAction): CustomerShippment => {\r\n  switch(action.type){\r\n    case Actions.SET_SHIPPING_PRICE:\r\n      return{\r\n        ...state,\r\n        data:{\r\n          shippmentPrice: action.data?.shippmentPrice || ''\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport {\r\n  customerShippmentReducer,\r\n  setShippingPrice\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { SelectedFilters } from \"types\";\r\n\r\nexport interface PreSelectedFilterActions extends Action {\r\n  readonly key: string;\r\n  readonly data: number[] | string | SelectedFilters;\r\n}\r\n\r\nexport interface PreSelectedFilters {\r\n  readonly _isLoading: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly data?: SelectedFilters;\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isSuccess: false,\r\n  data: {\r\n    subcategoryId:[],\r\n    coloudId:[],\r\n    sizeId:[],\r\n    startPrice:'',\r\n    endPrice:'',\r\n    subcategoryname: '',\r\n    searchText:'',\r\n    scrollTill: '0',\r\n    lastViewedProductId: '',\r\n  } as SelectedFilters\r\n} as PreSelectedFilters;\r\n\r\nenum Actions {\r\n  LOADING_FILTERS = 'LOADING_FILTERS',\r\n  SUCCESS_FILTERS = 'SUCCESS_FILTERS',\r\n  SET_FILTER = 'SET_FILTER',\r\n  SET_ALL_FILTER = 'SET_ALL_FILTER',\r\n  DEFAULT_FILTER = 'DEFAULT_FILTER'\r\n}\r\n\r\nconst loadingColour = () => ({\r\n  type: Actions.LOADING_FILTERS\r\n});\r\n\r\nconst successColour = () => ({\r\n  type: Actions.SUCCESS_FILTERS,\r\n});\r\n\r\nconst defaultPreSelectedFitler = () => ({\r\n  type: Actions.DEFAULT_FILTER\r\n});\r\n\r\nconst setPreSelectedFilter =(key:string, data: number[] | string) => ({\r\n  type: Actions.SUCCESS_FILTERS,\r\n  key,\r\n  data\r\n});\r\n\r\nconst setAllFilters = (data:SelectedFilters) => ({\r\n  type: Actions.SET_ALL_FILTER,\r\n  data\r\n});\r\n\r\nconst PreSelectedFiltersReducer = (state= initialState, actions: PreSelectedFilterActions):PreSelectedFilters =>{\r\n  switch(actions.type){\r\n    case Actions.SUCCESS_FILTERS:\r\n      return {\r\n        ...state,\r\n        data :{\r\n          ...state.data,\r\n          [actions.key]: actions.data\r\n        } as SelectedFilters\r\n      }\r\n    case Actions.SET_ALL_FILTER:\r\n      return {\r\n        ...state,\r\n        data : actions.data  as SelectedFilters\r\n      }\r\n    case Actions.DEFAULT_FILTER:\r\n      return {\r\n        _isLoading: false,\r\n        _isSuccess: true,\r\n        data: {\r\n          subcategoryId:[],\r\n          coloudId:[],\r\n          sizeId:[],\r\n          startPrice:'',\r\n          endPrice:'',\r\n          subcategoryname: '',\r\n          searchText:'',\r\n          scrollTill: '0',\r\n          lastViewedProductId: '',\r\n        } as SelectedFilters\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport {\r\n  PreSelectedFiltersReducer,\r\n  setPreSelectedFilter,\r\n  defaultPreSelectedFitler,\r\n  setAllFilters\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { AdminOrderDataCsv } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface AdminOrderCsvAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: AdminOrderDataCsv[]\r\n}\r\n\r\nexport interface AdminOrderCsvResponse {\r\n  message?: string\r\n  data?: AdminOrderDataCsv[]\r\n}\r\n\r\nexport interface AdminOrderCsv {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: AdminOrderDataCsv[];\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n  data: []\r\n} as AdminOrderCsv;\r\n\r\nenum Actions {\r\n  LOADING_ADMIN_ORDER_CSV = 'LOADING_ADMIN_ORDER_CSV',\r\n  ERROR_ADMIN_ORDER_CSV = 'ERROR_ADMIN_ORDER_CSV',\r\n  SET_ADMIN_ORDER_CSV = 'SET_ADMIN_ORDER_CSV',\r\n  SET_ADMIN_ORDER_CSV_DEFAULT = 'SET_ADMIN_ORDER_CSV_DEFAULT'\r\n};\r\n\r\nconst loadingAdminOrderCsv = () => ({\r\n  type: Actions.LOADING_ADMIN_ORDER_CSV\r\n});\r\n\r\nconst errorAdminOrderCsv = (message: string) => ({\r\n  type: Actions.ERROR_ADMIN_ORDER_CSV,\r\n  message\r\n});\r\n\r\nconst setAdminOrderCsv = (data: AdminOrderDataCsv[]) => ({\r\n  type: Actions.SET_ADMIN_ORDER_CSV,\r\n  data\r\n});\r\n\r\nconst setAdminOrderCsvDefault = () => ({\r\n  type: Actions.SET_ADMIN_ORDER_CSV_DEFAULT\r\n});\r\n\r\nconst adminOrderCsvReducer = (state = initialState, action: AdminOrderCsvAction): AdminOrderCsv => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_ADMIN_ORDER_CSV:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false,\r\n      }\r\n    case Actions.ERROR_ADMIN_ORDER_CSV:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_ADMIN_ORDER_CSV:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess: true,\r\n        data: action.data\r\n      }\r\n    case Actions.SET_ADMIN_ORDER_CSV_DEFAULT:\r\n      return{\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n/** Thunk */\r\n\r\nconst getAdminOrderDataCsv = () => async (dispatch: Dispatch<AdminOrderCsvAction>) => {\r\n  dispatch(loadingAdminOrderCsv());\r\n  const response = await api.get('/getorderdatacsv');\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as AdminOrderCsvResponse;\r\n    console.log(res)\r\n    dispatch(setAdminOrderCsv(res.data || []));\r\n  } else {\r\n    const res = response as AdminOrderCsvResponse\r\n    dispatch(errorAdminOrderCsv(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  adminOrderCsvReducer,\r\n  getAdminOrderDataCsv,\r\n  setAdminOrderCsvDefault\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { ContactUs as ContactUsType } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface ContactUsAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ContactUsType\r\n}\r\n\r\nexport interface ContactUsResponse {\r\n  message?: string\r\n  data?: ContactUsType\r\n}\r\n\r\nexport interface ContactUs {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ContactUsType;\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n  data: {}\r\n} as ContactUs;\r\n\r\nenum Actions {\r\n  LOADING_CONTACTUS = 'LOADING_CONTACTUS',\r\n  ERROR_CONTACTUS = 'ERROR_CONTACTUS',\r\n  SUCCESS_CONTACTUS = 'SUCCESS_CONTACTUS',\r\n};\r\n\r\nconst loadingContactUs = () => ({\r\n  type: Actions.LOADING_CONTACTUS\r\n});\r\n\r\nconst successContactUs = (message: string) => ({\r\n  type: Actions.SUCCESS_CONTACTUS,\r\n  message\r\n});\r\n\r\nconst errorContactUs = (message: string) => ({\r\n  type: Actions.ERROR_CONTACTUS,\r\n  message\r\n});\r\n\r\nconst contactUsReducer = (state = initialState, action: ContactUsAction): ContactUs => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_CONTACTUS:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_CONTACTUS:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_CONTACTUS:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        message: action.message\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst sendContactUsQuery = (contactUs: ContactUsType) => async (dispatch: Dispatch<ContactUsAction>) => {\r\n  dispatch(loadingContactUs());\r\n  const response = await api.post('/contactus',\r\n    {\r\n      email: contactUs.email,\r\n      name: contactUs.name,\r\n      message: contactUs.message\r\n    });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ContactUsResponse\r\n    dispatch(successContactUs(res.message || ''));\r\n  } else {\r\n    const res = response as ContactUsResponse\r\n    dispatch(errorContactUs(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  contactUsReducer,\r\n  sendContactUsQuery\r\n}","import { createStore, combineReducers, Store, applyMiddleware, compose, Action } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport { userInformationReducer, UserInformation, UserInformationAction } from './UserInformation';\r\nimport { userLoginReducer, UserLoginRegister } from './Login';\r\nimport { userSettingsReducer, UserSetting } from './UserSettings';\r\nimport { Colour, colourReducer, ColourAction } from './Colour';\r\nimport { sizeReducer, Size, SizeAction } from './Size';\r\nimport { SubCategory, subCategoryReducer, SubCategoryAction } from './SubCategory';\r\nimport { Coupon, couponReducer, CouponAction } from './Coupon';\r\nimport { Product, productReducer, ProductAction } from './Product';\r\nimport { ProductCount, productCountReducer, ProductCountAction } from './ProductCount';\r\nimport { Cart, cartReducer, CartAction } from './Cart';\r\nimport { Checkout, checkoutReducer, CheckoutAction } from './Checkout';\r\nimport { UserLocation, userLocationReducer, UserLocationAction } from './UserLocation';\r\nimport { CustomerOrders, customerOrdersReducer, CustomerOrderAction } from './Order';\r\nimport { Shipper, shipperReducer, ShipperAction } from './Shipper';\r\nimport { Shipment, shipmentReducer, ShipmentAction } from './Shipment';\r\nimport { relatedProductReducer, RelatedProduct, RelatedProductAction } from './RelatedProducts';\r\nimport { TrendingProduct, trendingProductReducer, TrendingProductAction } from './TrendingProducts';\r\nimport { LatestProduct, latestProductReducer, LatestProductAction } from './LatestProducts';\r\nimport { searchReducer, SearchAction, Search } from './Search';\r\nimport { CustomerShippment, customerShippmentReducer, CustomerShippmentAction } from './CustomerShippment';\r\nimport { PreSelectedFilterActions, PreSelectedFilters, PreSelectedFiltersReducer } from './PreSelectedFilters';\r\nimport { AdminOrderCsv, AdminOrderCsvAction, adminOrderCsvReducer } from './AdminOrderCsv';\r\nimport { ContactUs, ContactUsAction, contactUsReducer } from './ContactUs';\r\n\r\n\r\nexport type AppState = {\r\n  user: UserInformation;\r\n  userLogin: UserLoginRegister;\r\n  userSettings: UserSetting;\r\n  colour: Colour;\r\n  size: Size;\r\n  subCategory: SubCategory;\r\n  coupon: Coupon;\r\n  product: Product;\r\n  productCount: ProductCount;\r\n  cart: Cart;\r\n  checkout: Checkout;\r\n  userLocation: UserLocation;\r\n  customerOrders: CustomerOrders;\r\n  shipper: Shipper;\r\n  shipment: Shipment;\r\n  relatedProduct: RelatedProduct;\r\n  trendingProduct: TrendingProduct;\r\n  latestProduct: LatestProduct;\r\n  search: Search;\r\n  customerShippment: CustomerShippment;\r\n  preSelectedFilters: PreSelectedFilters;\r\n  adminOrderCsv: AdminOrderCsv;\r\n  contactUs: ContactUs\r\n}\r\n\r\nconst reducers = {\r\n  user: userInformationReducer,\r\n  userLogin: userLoginReducer,\r\n  userSettings: userSettingsReducer,\r\n  colour: colourReducer,\r\n  size: sizeReducer,\r\n  subCategory: subCategoryReducer,\r\n  coupon: couponReducer,\r\n  product: productReducer,\r\n  productCount: productCountReducer,\r\n  cart: cartReducer,\r\n  checkout: checkoutReducer,\r\n  userLocation: userLocationReducer,\r\n  customerOrders: customerOrdersReducer,\r\n  shipper: shipperReducer,\r\n  shipment: shipmentReducer,\r\n  relatedProduct: relatedProductReducer,\r\n  trendingProduct: trendingProductReducer,\r\n  latestProduct: latestProductReducer,\r\n  search: searchReducer,\r\n  customerShippment: customerShippmentReducer,\r\n  preSelectedFilters: PreSelectedFiltersReducer,\r\n  adminOrderCsv: adminOrderCsvReducer,\r\n  contactUs: contactUsReducer,\r\n};\r\n\r\ninterface AppActions {\r\n  user: UserInformationAction;\r\n  colour: ColourAction;\r\n  size: SizeAction;\r\n  subcategory: SubCategoryAction;\r\n  coupon: CouponAction;\r\n  product: ProductAction;\r\n  productCount: ProductCountAction;\r\n  cart: CartAction;\r\n  checkout: CheckoutAction;\r\n  userLocation: UserLocationAction;\r\n  customerOrders: CustomerOrderAction;\r\n  shipper: ShipperAction;\r\n  shipment: ShipmentAction;\r\n  relatedProduct: RelatedProductAction;\r\n  trendingProduct: TrendingProductAction;\r\n  latestProduct: LatestProductAction;\r\n  search: SearchAction;\r\n  customerShippment: CustomerShippmentAction;\r\n  preSelectedFilters: PreSelectedFilterActions;\r\n  adminOrderCsv: AdminOrderCsvAction;\r\n  contactUs: ContactUsAction;\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: Function;\r\n    store: Store<AppState>;\r\n  }\r\n};\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore<AppState, Action<AppActions>, any, any>(\r\n  combineReducers(reducers), \r\n  composeEnhancers(applyMiddleware(thunkMiddleware)\r\n  ));\r\n\r\nexport { store };\r\nexport * from './UserInformation';\r\nexport * from './Login';\r\nexport * from './UserSettings';\r\nexport * from './Colour';\r\nexport * from './Size';\r\nexport * from './SubCategory';\r\nexport * from './Coupon';\r\nexport * from './Product';\r\nexport * from './ProductCount';\r\nexport * from './Cart';\r\nexport * from './Checkout';\r\nexport * from './UserLocation';\r\nexport * from './Order';\r\nexport * from './Shipper';\r\nexport * from './Shipment';\r\nexport * from './RelatedProducts';\r\nexport * from './TrendingProducts';\r\nexport * from './LatestProducts';\r\nexport * from './CustomerShippment';\r\nexport * from './PreSelectedFilters';\r\nexport * from './AdminOrderCsv';\r\nexport * from './ContactUs';","import React from 'react';\r\n\r\ninterface Props {\r\n  _isError: boolean,\r\n  _isSuccess: boolean,\r\n  message?: string\r\n}\r\n\r\nconst NotificationContainer : React.FunctionComponent<Props> = (props: Props) => {\r\n  const { \r\n    _isError,\r\n    _isSuccess,\r\n    message\r\n  } = props;\r\n  return (\r\n    <>\r\n    {\r\n      _isError &&\r\n      <div className=\"login-error-message\">\r\n        <span className=\"uk-notification-message-danger\"> {message} </span>\r\n      </div>\r\n    }\r\n    {\r\n      _isSuccess &&\r\n      <div className=\"login-error-message\">\r\n        <span className=\"uk-notification-message-success\"> {message} </span>\r\n      </div>\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\nexport {\r\n  NotificationContainer\r\n}","import React from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { PayPalButtonProps, PayPalButtonState } from 'types';\r\n\r\ndeclare global {\r\n  interface Window { paypal: any }\r\n}\r\n\r\nclass PayPalButton extends React.Component<PayPalButtonProps, PayPalButtonState> {\r\n  static propTypes = {\r\n      amount: PropTypes.oneOfType([\r\n          PropTypes.number,\r\n          PropTypes.string,\r\n      ]),\r\n      currency: PropTypes.oneOfType([\r\n          PropTypes.number,\r\n          PropTypes.string,\r\n      ]),\r\n      shippingPreference: PropTypes.string,\r\n      onSuccess: PropTypes.func,\r\n      catchError: PropTypes.func,\r\n      onError: PropTypes.func,\r\n      createOrder: PropTypes.func,\r\n      createSubscription: PropTypes.func,\r\n      onApprove: PropTypes.func,\r\n      onCancel: PropTypes.func,\r\n      style: PropTypes.object,\r\n      options: PropTypes.shape({\r\n          clientId: PropTypes.string,\r\n          merchantId: PropTypes.string,\r\n          currency: PropTypes.oneOfType([\r\n              PropTypes.number,\r\n              PropTypes.string,\r\n          ]),\r\n          intent: PropTypes.string,\r\n          commit: PropTypes.oneOfType([\r\n              PropTypes.bool,\r\n              PropTypes.string\r\n          ]),\r\n          vault: PropTypes.oneOfType([\r\n              PropTypes.bool,\r\n              PropTypes.string\r\n          ]),\r\n          component: PropTypes.string,\r\n          disableFunding: PropTypes.string,\r\n          disableCard: PropTypes.string,\r\n          integrationDate: PropTypes.string,\r\n          locale: PropTypes.string,\r\n          buyerCountry: PropTypes.string,\r\n          debug: PropTypes.oneOfType([\r\n              PropTypes.bool,\r\n              PropTypes.string\r\n          ])\r\n      }),\r\n      onButtonReady: PropTypes.func,\r\n  }\r\n\r\n  static defaultProps = {\r\n      style: {},\r\n      options: {\r\n          clientId: \"sb\",\r\n          currency: \"USD\"\r\n      },\r\n      shippingPreference: \"GET_FROM_FILE\",\r\n  }\r\n\r\n  constructor(props: PayPalButtonProps) {\r\n      super(props);\r\n\r\n      this.state = {\r\n          isSdkReady: false,\r\n      };\r\n  }\r\n\r\n  componentDidMount() {\r\n      if (\r\n          typeof window !== \"undefined\" &&\r\n          window !== undefined &&\r\n          window.paypal === undefined\r\n      ) {\r\n          this.addPaypalSdk();\r\n      }\r\n      else if (\r\n          typeof window !== \"undefined\" &&\r\n          window !== undefined &&\r\n          window.paypal !== undefined &&\r\n          this.props.onButtonReady\r\n      ) {\r\n          this.props.onButtonReady();\r\n      }\r\n  }\r\n\r\n  createOrder(data: any, actions: any) {\r\n\r\n      const { currency, options, amount, shippingPreference } = this.props;\r\n\r\n      return actions.order.create({\r\n        purchase_units: [\r\n          {\r\n            amount: {\r\n              currency_code: currency\r\n                ? currency\r\n                : options && options.currency\r\n                ? options.currency\r\n                : \"USD\",\r\n              value: amount && amount.toString()\r\n            }\r\n          }\r\n        ],\r\n        application_context: {\r\n          shipping_preference: shippingPreference\r\n        }\r\n      });\r\n  }\r\n\r\n  onApprove(data: any, actions: any) {\r\n      return actions.order\r\n          .capture()\r\n          .then((details: any) => {\r\n              if (this.props.onSuccess) {\r\n                  return this.props.onSuccess(details, data);\r\n              }\r\n          })\r\n          .catch((err: any) => {\r\n              if (this.props.catchError) {\r\n                  return this.props.catchError(err);\r\n              }\r\n          });\r\n  }\r\n\r\n  onCancel(error:any){\r\n    if(this.props.onCancel){\r\n      this.props.onCancel(error);\r\n    }\r\n\r\n  }\r\n  render() {\r\n      const {\r\n          amount,\r\n          onSuccess,\r\n          createOrder,\r\n          createSubscription,\r\n          onApprove,\r\n          style,\r\n          onCancel,\r\n      } = this.props;\r\n      const { isSdkReady } = this.state;\r\n\r\n      if (\r\n          !isSdkReady &&\r\n          (typeof window === \"undefined\" || window.paypal === undefined)\r\n      ) {\r\n          return null;\r\n      }\r\n\r\n      const Button = window.paypal.Buttons.driver(\"react\", {\r\n          React,\r\n          ReactDOM,\r\n      });\r\n\r\n      const createOrderFn =\r\n          amount && !createOrder\r\n              ? (data: any, actions: any) => this.createOrder(data, actions)\r\n              : (data: any, actions: any) => createOrder && createOrder(data, actions);\r\n\r\n      return (\r\n          <Button\r\n              {...this.props}\r\n              createOrder={createSubscription ? undefined : createOrderFn}\r\n              createSubscription={createSubscription}\r\n              onCancel={\r\n                onCancel ? (error:any) => onCancel(error) : \r\n                (error:any) => this.onCancel(error)}\r\n              onApprove={\r\n                  onSuccess\r\n                      ? (data: any, actions: any) => this.onApprove(data, actions)\r\n                      : (data: any, actions: any) => onApprove && onApprove(data, actions)\r\n              }\r\n              style={style}\r\n          />\r\n      );\r\n  }\r\n\r\n  private addPaypalSdk() {\r\n      const { options, onButtonReady } = this.props;\r\n      const queryParams: string[] = [];\r\n\r\n      // replacing camelCase with dashes\r\n     if(options){\r\n      for (const [key, value] of Object.entries(options)) {\r\n        const name = key.split(/(?=[A-Z])/).join(\"-\").toLowerCase();\r\n        queryParams.push(`${name}=${value}`);\r\n      }\r\n      //   Object.keys(options).forEach(k => {\r\n      //     const name = k.split(/(?=[A-Z])/).join(\"-\").toLowerCase();\r\n      //     queryParams.push(`${name}=${options[k]}`);\r\n      // });\r\n     }\r\n\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?${queryParams.join(\"&\")}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n          this.setState({ isSdkReady: true });\r\n\r\n          if (onButtonReady) {\r\n              onButtonReady();\r\n          }\r\n      };\r\n      script.onerror = () => {\r\n          throw new Error(\"Paypal SDK could not be loaded.\");\r\n      };\r\n  \r\n      document.body.appendChild(script);\r\n  }\r\n}\r\nexport {\r\n  PayPalButton\r\n}","import React, { useEffect, useRef, useState, Dispatch, SetStateAction } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getPayPalOrder, AppState, savePayPalOrder, getCart, defaultCheckout } from 'reducers';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ProductCoupon } from 'types';\r\ndeclare global {\r\n  interface Window { paypal: any,paypalOrderId:any, didPriceChanged: boolean, paypalButton: any }\r\n}\r\n\r\ninterface Props {\r\n  cartTotalPrice: string;\r\n  cartTotalWithShipping: string;\r\n  quantityCount: number;\r\n  isStandard: boolean;\r\n  paymentMode: string;\r\n  setContainerIsCard: Dispatch<SetStateAction<boolean>>;\r\n  cartOrderId:number;\r\n  setNoAddressError: Dispatch<SetStateAction<boolean>>;\r\n}\r\nconst PayPalPayment : React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const paypalPaymentLoadingRef = useRef<HTMLButtonElement>(null);\r\n  const paypalModalRef = useRef<HTMLDivElement>(null)\r\n  const checkout = useSelector((state: AppState) => state.checkout);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const couponData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);\r\n  const [paypalPaymentMessage, setPaypalPaymentMessage] = useState(\"Please don't close this window while we process your payment.\");\r\n  const [paypalOrderId, setPayPalOrderId] = useState('');\r\n  const [paymentErroredOut, setPaymentErroredOut] = useState(false);\r\n  const [paymentSuccess, setPaymentSuccess] = useState(false);\r\n  const [isCard, setIsCard] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    if(props.paymentMode === 'paypal' && checkout.data && checkout.data.orderId){\r\n      setPayPalOrderId(checkout.data.orderId);\r\n      window.paypalOrderId = checkout.data.orderId\r\n    }\r\n  },[checkout.data]);\r\n\r\n  useEffect(() => {\r\n    if(props.cartTotalPrice !== '0'){\r\n      if (window.paypalButton) {\r\n        window.paypalButton.close();\r\n        delete window.paypalButton;\r\n        // setTimeout(()=>{\r\n        //   history.go(0)\r\n        // })\r\n      }\r\n      window.paypalButton = window.paypal.Buttons({\r\n        createOrder: function () {\r\n          if(!window.paypalOrderId){\r\n            if(!window.didPriceChanged){\r\n              togglePaymenModal('c');\r\n            }\r\n            return false;\r\n          } else {\r\n            paypalPaymentLoadingRef.current?.click();\r\n            return window.paypalOrderId;\r\n          }\r\n        },\r\n        onCancel: function (err:any) {\r\n          fundingType('credit');\r\n          window.paypalOrderId = '';\r\n        },\r\n        onApprove:function(data:any,actions:any) {\r\n          togglePaymenModal('b');\r\n          return actions.order.capture().then(function(details:any)  {\r\n            successPaypalPayment(data,details);\r\n           });\r\n        },\r\n        onClick: async function (d: any) {\r\n          window.paypalOrderId = '';\r\n          fundingType(d.fundingSource);\r\n          togglePaymenModal('d');\r\n          if(userData.data?.addressId){\r\n          await dispatch(getPayPalOrder(props.cartTotalPrice.toString(), props.cartTotalWithShipping.toString(),props.cartOrderId,couponData && couponData[0] && couponData[0].couponId))\r\n          }else {\r\n            props.setNoAddressError(true);\r\n            setTimeout(() => {\r\n              props.setNoAddressError(false);\r\n            },5000)\r\n          }\r\n        },\r\n        onError: function(data: any){\r\n          console.log('error')\r\n          console.log(data)\r\n        }\r\n      });\r\n      window.paypalButton.render('#paypal-button-container')\r\n    }\r\n    \r\n  },[props.cartTotalPrice,props.cartTotalWithShipping,userData.data?.addressId]);\r\n\r\n  useEffect(()=> {\r\n    if(checkout._priceChanged && props.paymentMode === 'paypal') {\r\n      window.didPriceChanged= true;\r\n      setPaypalPaymentMessage(checkout.message || '');\r\n      setTimeout(() => {\r\n        window.didPriceChanged = false;\r\n        history.go(0);\r\n        togglePaymenModal('e');\r\n      },5000);\r\n    }\r\n  },[checkout._priceChanged]);\r\n\r\n  const togglePaymenModal = (tt?:string) => {\r\n    paypalPaymentLoadingRef.current?.click();\r\n  };\r\n\r\n  const fundingType = (funding: string) => {\r\n    console.log(funding)\r\n    if(funding === 'card'){\r\n      setIsCard(true);\r\n      if(window.innerWidth > 959){\r\n        window.scrollTo({\r\n          top: 150,\r\n          behavior: 'smooth'\r\n        })\r\n      }\r\n      props.setContainerIsCard(true);\r\n\r\n    }else {\r\n      if(window.innerWidth > 959){\r\n        window.scrollTo(0,0);\r\n      }\r\n      setTimeout(()=>{\r\n        setIsCard(false);\r\n      props.setContainerIsCard(false)\r\n      },\r\n      1000)\r\n    }\r\n      setPaypalPaymentMessage(\"Please don't close this window while we process your payment.\");\r\n      setPaymentErroredOut(false);\r\n      setPaymentSuccess(false);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if(checkout._isPaymentSucceess){\r\n      setPaymentErroredOut(false);\r\n      setPaymentSuccess(true);\r\n      setPaypalPaymentMessage(checkout.message || \"\");\r\n      setTimeout(() => {\r\n        dispatch(defaultCheckout());\r\n        togglePaymenModal('f');\r\n        history.push('userinformation/orders');\r\n      }, 5000);\r\n    } else if(!checkout._isPaymentSucceess && checkout._isError) {\r\n      setPaymentErroredOut(true);\r\n      setPaymentSuccess(false);\r\n      setPaypalPaymentMessage(checkout.message || \"\");\r\n    }\r\n  },[checkout._isPaymentSucceess,checkout._isError])\r\n  const successPaypalPayment = (orderData: string, paymentData: string) => {\r\n\r\n    dispatch(savePayPalOrder({\r\n      paypalResponse: {\r\n        orderData,\r\n        paymentData,\r\n      },\r\n      orderId: props.cartOrderId,\r\n      addressId: userData.data && userData.data.addressId || '',\r\n      quantity: props.quantityCount,\r\n      couponId: couponData && couponData[0] && couponData[0].couponId,\r\n      isStandard: props.isStandard,\r\n      userAddress: userData.data?.addressLineOne + ' ' + userData.data?.addressLineTwo + ' ' +\r\n      userData.data?.addressLineThree + ' ' + userData.data?.city + ' ' + userData.data?.state +\r\n      ' ' + userData.data?.pincode + ' ' + userData.data?.country,\r\n      userName: userData.data?.firstName + ' ' + userData.data?.lastName\r\n    }))\r\n  };\r\n\r\n  return(\r\n    <>\r\n      <div id=\"paypal-button-container\"></div>\r\n      <button ref={paypalPaymentLoadingRef} id=\"payment-loading\" uk-toggle=\"target: #paypal-div\" type=\"button\">order</button>\r\n      <div id=\"paypal-div\" uk-modal=\"true; esc-close: false; bg-close: false\">\r\n        <div className=\"uk-modal-dialog uk-modal-body uk-margin-auto-vertical\">\r\n        {\r\n          (paymentSuccess || paymentErroredOut)  &&  <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n        }\r\n        <div ref={paypalModalRef} className=\"uk-modal-body uk-nav-center\">\r\n          <p>{paypalPaymentMessage}</p>\r\n            {\r\n              !paymentSuccess && !paymentErroredOut && <div  uk-spinner=\"true\"></div>\r\n            }\r\n            {\r\n              paymentSuccess && !paymentErroredOut && \r\n              <>\r\n              <span className=\"uk-label uk-label-success\">Redirecting to Orders <div  uk-spinner=\"true\"></div></span>\r\n              </>\r\n            }\r\n            {\r\n              paymentErroredOut && <span className=\"uk-label uk-label-danger\">Payment Failed</span> \r\n            } \r\n        </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport {\r\n  PayPalPayment\r\n}","import React, { useState, useEffect, Dispatch, SetStateAction } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppState, resendOTP } from 'reducers';\r\n\r\ninterface Props{\r\n  showOtpContainer: boolean;\r\n  setEnteredOTP: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\n\r\nconst CashOnDeliveryPayment: React.FunctionComponent<Props> = (props: Props) => {\r\n  const {\r\n    showOtpContainer\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n  const [timeLeft, setTimeLeft] = useState(30);\r\n  const [enteredOTP, setEnteredOTP] = useState('');\r\n  const checkout = useSelector((state: AppState) => state.checkout);\r\n\r\n  useEffect(()=> {\r\n    if(showOtpContainer){\r\n      const timer = setInterval(() => {\r\n        if(timeLeft > 0) {\r\n          setTimeLeft(timeLeft - 1);\r\n        }\r\n      },1000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  });\r\n\r\n  const resendOtpToCustomer = () => {\r\n    dispatch(resendOTP());\r\n    setTimeLeft(30)\r\n  };\r\n  return (\r\n    <section className=\"uk-card-body\">\r\n      <div className=\"uk-grid-small  uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n        <div className=\"uk-width-expand\">\r\n          <div className=\"uk-text-small\">Enter OTP</div>\r\n          {\r\n            timeLeft > 0 && !checkout._isError &&\r\n            <div className=\"uk-text-meta uk-text-small uk-text-danger\">Retry in {timeLeft}sec</div>\r\n          }\r\n        </div>\r\n        <div className=\"uk-text-right\">\r\n          <input \r\n            className=\"uk-input\"\r\n            type=\"text\"\r\n            value={enteredOTP}\r\n            onChange={(e) => {setEnteredOTP(e.currentTarget.value); props.setEnteredOTP(e.currentTarget.value)}}/>\r\n          {\r\n             timeLeft === 0 && !checkout._isError &&\r\n             <a \r\n            className=\"uk-text-meta uk-text-small uk-text-success uk-link-muted\"\r\n            onClick={()=> resendOtpToCustomer()}>Resend OTP</a>\r\n          }\r\n        </div>\r\n      </div>\r\n      {\r\n        checkout._isError && \r\n      <div className=\"uk-text-meta uk-text-small uk-text-danger\">{checkout.message}</div>\r\n      }\r\n      {\r\n        checkout._isFetchCodCodeSuccess && \r\n        <div className=\"login-error-message\">\r\n        <span className=\"uk-notification-message-success uk-text-meta uk-text-small uk-text-success\"> {checkout.message} </span>\r\n      </div>\r\n      }\r\n      \r\n    </section>\r\n  )\r\n}\r\n\r\nexport {\r\n  CashOnDeliveryPayment\r\n}","import React from 'react';\r\nimport { ProductItem, CustomerCart } from 'types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { scaledServerImagePath } from 'appConstants';\r\nimport { getCurrencyIcon, calculateUserDiscount, showINRUSD } from 'services';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, UserLocation, Cart, addUpdateCart } from 'reducers';\r\n\r\ninterface Props {\r\n  productList: ProductItem[]\r\n}\r\n\r\nconst QuickProductList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n\r\n  const addToCart = (product: ProductItem)=> {\r\n    if(!userData.data?.userId){\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: product.productDetailId,\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: showINRUSD(userLocation.data || 'IN', product),\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, false))\r\n    } else {\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: '0',\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: '0',\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, true))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <div uk-slider=\"finite: true\">\r\n        <div className=\"uk-grid-small uk-flex-middle uk-margin-bottom\" uk-grid=\"true\">\r\n          <h2 className=\"uk-width-expand uk-text-center uk-text-left@s\">Related Products</h2>\r\n          <div className=\"uk-visible@s\">\r\n            <a className=\"tm-slidenav\" href=\"#\" uk-slider-item=\"previous\" uk-slidenav-previous=\"true\"></a>\r\n            <a className=\"tm-slidenav\" href=\"#\" uk-slider-item=\"next\" uk-slidenav-next=\"true\"></a>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n          <div className=\"uk-position-relative\">\r\n            <div className=\"uk-slider-container\">\r\n              <div className=\"uk-slider-items uk-grid-collapse uk-child-width-custom tm-products-grid\">\r\n                {\r\n                  props.productList.map((product, index) => {\r\n                    return (\r\n                      <article key={index} className=\"tm-product-card\">\r\n                        <div className=\"tm-product-card-media\">\r\n                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                            <a className=\"tm-media-box\" onClick={() => {window.scrollTo({top:0, behavior:'smooth'}); history.push('/productDetails/' + product.productId)}}>\r\n                              <figure className=\"tm-media-box-wrap\"><img src={scaledServerImagePath + product.imagePaths} alt={product.imageNames} /></figure>\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"tm-product-card-body\">\r\n                          <div className=\"tm-product-card-info\">\r\n                            {/* <div className=\"uk-text-meta uk-margin-xsmall-bottom\">{product.productCategoryName}</div>\r\n                            <h3 className=\"tm-product-card-title\"><a className=\"uk-link-heading\" onClick={() => history.push('/productDetails/' + product.productId)}>{product.name}</a></h3> */}\r\n                            <p className=\"tm-product-card-title\"><a className=\"uk-link-heading\" onClick={() => history.push('/productDetails/' + product.productId)}>{product.name}</a></p>\r\n                          </div>\r\n                          <div className=\"tm-product-card-shop\">\r\n                            <div className=\"tm-product-card-prices\">\r\n                              {\r\n                                userData.data?.discount && userData.data?.discount !== '0' &&\r\n                                <del className=\"uk-text-meta\">{getCurrencyIcon(userLocation.data || 'IN')} {showINRUSD(userLocation.data || 'IN', product)}</del>\r\n                              }\r\n                              <div className=\"tm-product-card-price\">\r\n                                {getCurrencyIcon(userLocation.data || 'IN')} {calculateUserDiscount(userData.data?.discount || '0', showINRUSD(userLocation.data || 'IN', product))}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"tm-product-card-add\">\r\n                              <button className=\"uk-button uk-button-primary tm-product-card-add-button tm-shine js-add-to-cart\">\r\n                                {\r\n                                  cart._isLoading && <span uk-spinner=\"true\"></span>\r\n                                }\r\n                                {\r\n                                  !cart._isLoading && (\r\n                                    <>\r\n                                      <span className=\"tm-product-card-add-button-icon\" uk-icon=\"cart\" onClick={() => addToCart(product)}></span>\r\n                                      <span className=\"tm-product-card-add-button-text\">add to cart</span>\r\n                                    </>\r\n                                  )\r\n                                }\r\n\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </article>\r\n                    )\r\n                  })\r\n                }\r\n\r\n              </div>\r\n            </div>\r\n            <ul className=\"uk-slider-nav uk-dotnav uk-flex-center uk-margin-top uk-hidden@s\"></ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </section>\r\n  )\r\n}\r\n\r\nexport {\r\n  QuickProductList\r\n}","import React from 'react';\r\n\r\ninterface Props{\r\n  keyIndex: number\r\n}\r\nconst LoadingProductArticle: React.FunctionComponent<Props> = (props: Props) => {\r\n  return (\r\n    <article key={props.keyIndex} className=\"tm-product-card\">\r\n      <div className=\"tm-product-card-media\">\r\n        <div className=\"tm-ratio tm-ratio-4-3\">\r\n          <a className=\"tm-media-box\">\r\n            <figure className=\"tm-media-box-wrap\">\r\n              <div className=\"ph-item\">\r\n                <div className=\"ph-picture\"></div>\r\n              </div>\r\n            </figure>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div className=\"tm-product-card-body\">\r\n        <div className=\"tm-product-card-info\">\r\n          <div className=\"uk-text-meta uk-margin-xsmall-bottom\">\r\n            <div className=\"ph-item\">\r\n              <div>\r\n                <div className=\"ph-row\">\r\n                  <div className=\"ph-col-4\"></div>\r\n                  <div className=\"ph-col-8 empty\"></div>\r\n                  <div className=\"ph-col-6\"></div>\r\n                  <div className=\"ph-col-6 empty\"></div>\r\n\r\n                  <div className=\"ph-col-12 empty\"></div>\r\n                </div>\r\n              </div>\r\n              <div className=\"ph-col-1\">\r\n                <div className=\"ph-avatar\"></div>\r\n              </div>\r\n            </div></div>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport {\r\n  LoadingProductArticle\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter, useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport { AppState, defaultPreSelectedFitler, PreSelectedFilters } from 'reducers';\r\n\r\nconst ScrollToTopComponent: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // scrolling to top\r\n    const unlisten = history.listen(() => {\r\n      if(window.location.pathname.indexOf('product') === -1){\r\n        dispatch(defaultPreSelectedFitler());\r\n      }\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    }\r\n  }, []);\r\n\r\n  return (null);\r\n}\r\n\r\nconst ScrollToTop = withRouter(ScrollToTopComponent);\r\n\r\nexport {\r\n  ScrollToTop\r\n} ","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { ContactUs as ContactUsType } from 'types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppState, sendContactUsQuery, ContactUs as ContactUsState } from 'reducers';\r\nimport { NotificationContainer } from '.';\r\n\r\nconst ContactUs: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const contactUsStatus = useSelector<AppState, ContactUsState>(state => state.contactUs);\r\n\r\n\r\n  const contactUsFormik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n      email: '',\r\n      message: '',\r\n    },\r\n    validationSchema: Yup.object({\r\n      name: Yup.string().required('Required'),\r\n      email: Yup.string().required('Required'),\r\n      message: Yup.string().required('Required'),\r\n    }),\r\n    onSubmit: (values: ContactUsType) => {\r\n      console.log(values)\r\n      dispatch(sendContactUsQuery(values))\r\n    },\r\n  });\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a onClick={() => history.push('/')}>Home</a></li>\r\n                <li><span>Contact Us</span></li>\r\n              </ul>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom\">Contact Us</h1>\r\n              <h3 className=\"uk-margin-small-top uk-margin-remove-bottom\">We are here to help!!</h3>\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n                <section className=\"uk-width-1-1 uk-width-expand@m\">\r\n                  <article className=\"uk-card uk-card-default uk-card-small uk-card-body uk-article tm-ignore-container\">\r\n                    <div className=\"uk-child-width-1-1 uk-child-width-1-1@s uk-margin-top\" uk-grid=\"true\">\r\n                      <section>\r\n                        <h3>Email</h3>\r\n                        <ul className=\"uk-list\">\r\n                          <li>\r\n                            <div><span className=\"uk-margin-small-right\" uk-icon=\"bookmark\"></span><span>“Email has the ability many channels don’t: creating valuable, personal touches at scale” – David Newman</span></div>\r\n                            {/* <span uk-icon=\"bookmark\">“Email has the ability many channels don’t: creating valuable, personal touches at scale” – David Newman</span>  */}\r\n                          </li>\r\n                          <li>\r\n                            <div><span className=\"uk-margin-small-right\" uk-icon=\"mail\"></span><span>For all the queries either fill the form below or write to us at: <a className=\"uk-link-muted\" href=\"mailto:support@basickart.com\">support@basickart.com</a></span></div>\r\n\r\n                          </li>\r\n                          {/* <li>\r\n                            <a className=\"uk-link-heading\" href=\"#\"><span className=\"uk-margin-small-right\" uk-icon=\"receiver\"></span><span className=\"tm-pseudo\">8 800 799 99 99</span></a>\r\n                          </li>\r\n                          <li>\r\n                            <a className=\"uk-link-heading\" href=\"#\"><span className=\"uk-margin-small-right\" uk-icon=\"mail\"></span><span className=\"tm-pseudo\">example@example.com</span></a>\r\n                          </li> */}\r\n                          {/* <li>\r\n                            <div><span className=\"uk-margin-small-right\" uk-icon=\"location\"></span><span>Karol Bagh Market, Delhi</span></div>\r\n                          </li>\r\n                          <li>\r\n                            <div><span className=\"uk-margin-small-right\" uk-icon=\"clock\"></span><span>Daily 10:00–20:00</span></div>\r\n                          </li> */}\r\n                        </ul>\r\n                      </section>\r\n                      <section>\r\n                        <h3>Location</h3>\r\n                        <ul className=\"uk-list\">\r\n                          <li>\r\n                            <div><span className=\"uk-margin-small-right\" uk-icon=\"location\"></span><span>B-1/32 Karol Bagh New Delhi-110005</span></div>\r\n                          </li>\r\n                        </ul>\r\n                        {/* <dl className=\"uk-description-list\">\r\n                          <dt>Support</dt>\r\n                          <dd><a className=\"uk-link-muted\" href=\"mailto:support@basickart.com\">support@basickart.com</a></dd>\r\n                        </dl> */}\r\n                      </section>\r\n                      <section>\r\n                        <h4>Thanks,\r\n                          <br />Team BasicKart</h4>\r\n                      </section>\r\n                      <section className=\"uk-width-1-1\">\r\n                        <h3 className=\"uk-text-center\">For bulk enquiries:-</h3>\r\n                        <h3 className=\"uk-text-center\">Leave us your details and we will get back to you</h3>\r\n                        <form onSubmit={contactUsFormik.handleSubmit}>\r\n                          <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label uk-form-label-required\">Name</div>\r\n                                <input className=\"uk-input\" type=\"text\" id=\"name\" \r\n                                {...contactUsFormik.getFieldProps('name')}/>\r\n                                {\r\n                                          contactUsFormik.touched.name && contactUsFormik.errors.name ? (\r\n                                            <span className=\"uk-text-danger\">{contactUsFormik.errors.name}</span>\r\n                                          ) : ''\r\n                                        }\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label uk-form-label-required\">Email</div>\r\n                                <input className=\"uk-input\" type=\"email\" id=\"email\" \r\n                                {...contactUsFormik.getFieldProps('email')}/>\r\n                                {\r\n                                          contactUsFormik.touched.email && contactUsFormik.errors.email ? (\r\n                                            <span className=\"uk-text-danger\">{contactUsFormik.errors.email}</span>\r\n                                          ) : ''\r\n                                        }\r\n                              </label>\r\n                            </div>\r\n                            {/* <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Topic</div>\r\n                                <select className=\"uk-select\">\r\n                                  <option>Customer service</option>\r\n                                  <option>Tech support</option>\r\n                                  <option>Other</option>\r\n                                </select>\r\n                              </label>\r\n                            </div> */}\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label uk-form-label-required\">Message</div>\r\n                                <textarea className=\"uk-textarea\" id=\"message\" \r\n                                {...contactUsFormik.getFieldProps('message')}/>\r\n                                {\r\n                                          contactUsFormik.touched.message && contactUsFormik.errors.message ? (\r\n                                            <span className=\"uk-text-danger\">{contactUsFormik.errors.message}</span>\r\n                                          ) : ''\r\n                                        }\r\n                              </label>\r\n                            </div>\r\n                            <NotificationContainer {...contactUsStatus}/>\r\n                            <div className=\"uk-text-center\"><button type=\"submit\" className=\"uk-button uk-button-primary\">Send</button></div>\r\n                          </div>\r\n                        </form>\r\n                      </section>\r\n                    </div>\r\n                  </article>\r\n                </section>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  ContactUs\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst About: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <section className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a onClick={()=> history.push('/')}>Home</a></li>\r\n                <li><span>About</span></li>\r\n              </ul>\r\n            </section>\r\n            <section>\r\n              <div>\r\n                <article className=\"uk-card uk-card-default uk-card-body uk-article tm-ignore-container\">\r\n                  <header className=\"uk-text-center\"><h1 className=\"uk-article-title\">About</h1></header>\r\n                  <div className=\"uk-article-body\">\r\n                    <p>\r\n                    Your style is your statement,nail it with class at Basickart.\r\nWe have curated a range of premium products to cast an impression everytime you choose us.Our focus is to bring together Multi-brand showcasing good quality products.\r\nFrom women’s bindis,shoes,lingerie to high end home accessories under one roof .\r\nYou don’t have to worry about the latest fashion trends anymore as we update our catalog every week to keep you one step ahead.\r\n                                            </p>\r\n                    <h2 className=\"uk-text-center\">Happy Shopping At Basickart</h2>\r\n                    {/* <ul className=\"uk-list uk-list-bullet\">\r\n                      <li>\r\n                        We will provide the best quality. Our quality will be top notch, we use traditonal method of handcraft.\r\n                        This gives the best result.\r\n                                                </li>\r\n                      <li>\r\n                        The rates will the cheapest you can ever get. Since we have our own production house, we are direct producer\r\n                        of each item sold here. You can expect further discount for bulk order.\r\n                                                </li>\r\n                      <li>\r\n                        We want you to grow your business and be happy. Happiness is all that we want. So, buy without any thought\r\n                        and enjoy the happiness.\r\n                                                </li>\r\n                    </ul> */}\r\n                    {/* <h2 className=\"uk-text-center\">Our team</h2>\r\n                    <div className=\"uk-child-width-1-1 uk-child-width-1-2@s uk-child-width-1-3@m\" uk-grid>\r\n                      <div>\r\n                        <div className=\"uk-grid-small uk-flex-middle\" uk-grid>\r\n                          <div><img src=\"images/about/thomas.svg\" alt=\"Thomas Bruns\" width=\"80\" height=\"80\" /></div>\r\n                          <div className=\"uk-width-expand\">\r\n                            <div>Tarun Batra</div>\r\n                            <div className=\"uk-text-meta\">Co-founder & CEO</div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div>\r\n                        <div className=\"uk-grid-small uk-flex-middle\" uk-grid>\r\n                          <div><img src=\"images/about/george.svg\" alt=\"George Clanton\" width=\"80\" height=\"80\" /></div>\r\n                          <div className=\"uk-width-expand\">\r\n                            <div>Tarun Batra</div>\r\n                            <div className=\"uk-text-meta\">Co-founder & President</div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div>\r\n                        <div className=\"uk-grid-small uk-flex-middle\" uk-grid>\r\n                          <div><img src=\"images/about/martin.svg\" alt=\"Martin Cade\" width=\"80\" height=\"80\" /></div>\r\n                          <div className=\"uk-width-expand\">\r\n                            <div>Tarun Batra</div>\r\n                            <div className=\"uk-text-meta\">Co-founder & CTO</div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <h2 className=\"uk-text-center\">Some stats</h2>\r\n                    <div className=\"uk-child-width-1-1 uk-child-width-1-3@s uk-text-center\" uk-grid>\r\n                      <div>\r\n                        <div className=\"uk-heading-primary uk-text-warning\">5+</div>\r\n                        <div className=\"uk-margin-small-top\">years on the market</div>\r\n                      </div>\r\n                      <div>\r\n                        <div className=\"uk-heading-primary uk-text-warning\">150+</div>\r\n                        <div className=\"uk-margin-small-top\">orders per day</div>\r\n                      </div>\r\n                      <div>\r\n                        <div className=\"uk-heading-primary uk-text-warning\">75000+</div>\r\n                        <div className=\"uk-margin-small-top\">clients</div>\r\n                      </div>\r\n                    </div> */}\r\n                  </div>\r\n                </article>\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  About\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst ReturnPolicy: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <section className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a onClick={() => history.push('/')}>Home</a></li>\r\n                <li><span>Shop Policy</span></li>\r\n              </ul>\r\n            </section>\r\n            <section>\r\n              <div className=\"shop-policy\">\r\n                <article className=\"uk-card uk-card-default uk-card-body uk-article tm-ignore-container\">\r\n                  {/* <header className=\"uk-text-center\"><h1 className=\"uk-article-title\">Refund Policy</h1></header> */}\r\n                  <div className=\"uk-article-body\">\r\n                    <h2 className=\"uk-text-center\">Exchange / Return Policy</h2>\r\n                    <p>\r\n                      Our return policy lasts 10 days from the date of delivery.\r\n                      <br />\r\n                      <br />\r\n                      To complete your return, Please log into your Basickart account and raise a return request in your order summary page.\r\n                      <br />\r\n                      <br />\r\n                      After receiving your request , we will schedule a reverse pickup from your shipping address and our courier partner will contact you for picking the product back.\r\n                      <br />\r\n                      <br />\r\n                      To be eligible for a return, your item must be:\r\n                      <ul>\r\n                        <li>\r\n                        Unused and in the same condition that you received it\r\n                        </li>\r\n                        <li>\r\n                        In the original packaging\r\n                        </li>\r\n                        <li>\r\n                        Any item not in its original condition is damaged or missing parts for reasons not due to our error will not be exchanged.\r\n                        </li>\r\n                        <li>\r\n                        Items such as lingerie, bindi, cosmetics are not returnable.\r\n                        </li>\r\n                      </ul>\r\n\r\n\r\n                    </p>\r\n                    <h2 className=\"uk-text-center\">Refunds (if applicable)</h2>\r\n                    <p>\r\n                      Once your return is received, we will inspect the product.\r\n                    <br />\r\n                      <br />\r\n                      If its approved, then your refund will be initiated to your original payment method. A notification will be sent to you confirming the same.In case of cash on delivery our team will contact you and we will reverse the payment as per your directions.\r\n                    <br /><br />\r\n                    In case of rejection, We will notify you via your registered email or mobile no. You can contact us back for any further communication.\r\n                      </p>\r\n                    <h2 className=\"uk-text-center\">Cancellations </h2>\r\n                    <p>\r\n                    You can cancel your orders before it is shipped by clicking on CANCEL ITEM\r\n                    or contacting us, the full invoice amount will be refunded to your original payment method. Once the item is shipped it cannot be cancelled.\r\n\r\n                    <br /><br />\r\n                    For International returns buyer will have to pay for return postage and once we receive the product at our warehouse after inspection we will refund the payment through original payment method.\r\n                      </p>\r\n                      <h2 className=\"uk-text-center\">Taxes & Duties</h2>\r\n                    <p>\r\n                    For Indian Customers:\r\n                    <br/>\r\n                    Product prices displayed are inclusive of all taxes and duties.\r\n\r\n                    <br /><br />\r\n                    For International Customers:\r\n                    <br/>\r\n                    We ship on the DDU (Delivery Duty Unpaid) basic which means prices displayed are exclusive of all import taxes and duties.As a buyer you are liable to pay any import duty, customs and local sales taxes levied by the country you are in.\r\n\r\n                    </p>\r\n                    <h2 className=\"uk-text-center\">Privacy Policy</h2>\r\n                    <p>\r\n                    We value the trust you place in us. That's why we insist upon the highest standards for secure transactions and customer information privacy. Please read the following statement to learn about our information gathering and dissemination practices.\r\n                      <br />\r\n                      <br />\r\n                      Note:Our privacy policy is subject to change at any time without notice. To make sure you are aware of any changes, please review this policy periodically. \r\n                      By visiting this Website you agree to be bound by the terms and conditions of this Privacy Policy.By mere use of the Website, you expressly consent to our use and disclosure of personal information provided by you in accordance with this Privacy Policy. This Privacy Policy is incorporated into and subject to the Terms of Use.\r\n                      <br />\r\n                      <br />\r\n                      <ul>\r\n                        <li>\r\n                        Collection of Personally Identifiable Information and other Information\r\n                        <br/>\r\n                        When you use our Website, we collect and store your personal information which is provided by you from time to time. Our primary goal in doing so is to provide you a safe, efficient, smooth and customized experience. This allows us to provide services and features that most likely meet your needs, and to customize our Website to make your experience safer and easier. More importantly, while doing so we collect personal information from you that we consider necessary for achieving this purpose. \r\n                        <br/>\r\n                        In general, you can browse the Website without telling us who you are or revealing any personal information about yourself. Once you give us your personal information, you are not anonymous to us. Where possible, we indicate which fields are required and which fields are optional. You always have the option to not provide information by choosing not to use a particular service or feature on the Website.\r\n                        </li>\r\n                        <li>\r\n                        Use of Demographic / Profile Data / Your Information\r\n                        <br/>\r\n                        We use your personal information in handling and fulfilling orders, enhancing customer experience, resolve disputes; troubleshoot problems; help promote a safe service; collect money; measure consumer interest in our products and services, inform you about online and offline offers, products, services, and updates; customize and enhance your experience; detect and protect us against error, fraud and other criminal activity; enforce our terms and conditions; and as otherwise described to you at the time of collection\r\n                        </li>\r\n                        <li>\r\n                        We may disclose personal information to third parties. This disclosure is required for us to provide you access to our Services, for fulfillment of your orders, or for enhancing your experience, or to comply with our legal obligations, to enforce our User Agreement, to facilitate our marketing and advertising activities, or to prevent, detect, mitigate, and investigate fraudulent or illegal activities related to our Services. We do not disclose your personal information to third parties for their marketing and advertising purposes.\r\n                        </li>\r\n                        <li>\r\n                        Security Precautions\r\n                        <br/>\r\n                        Our Website has stringent security measures in place to protect the loss, misuse, and alteration of the information under our control. Whenever you change or access your account information, we offer the use of a secure server. Once your information is in our possession we adhere to strict security guidelines, protecting it against unauthorized access. \r\n                        </li>\r\n                        <li>\r\n                        Choice/Opt-Out\r\n                        <br/>\r\n                        We provide all users with the opportunity to opt-out of receiving non-essential (promotional, marketing-related) communications from us on behalf of our partners, and from us in general, after setting up an account. \r\n                        <br/>\r\n                        If you want to remove your contact information from all basickart.com lists and newsletters, please visit unsubscribe\r\n                        </li>\r\n                        <li>\r\n                        Your Consent by using the Website and/ or by providing your information, you consent to the collection and use of the information you disclose on the Website in accordance with this Privacy Policy, including but not limited to Your consent for sharing your information as per this privacy policy. . If you disclose any personal information relating to other people to us, you represent that you have the authority to do so and to permit us to use the information in accordance with this Privacy Policy. \r\n                        </li>\r\n                      </ul>\r\n                      <br/>\r\n                      <br/>\r\n                      If we decide to change our privacy policy, we will post those changes on this page so that you are always aware of what information we collect, how we use it, and under what circumstances we disclose it. \r\n\r\n\r\n                    </p>\r\n                  </div>\r\n                </article>\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n    </main>\r\n  )\r\n}\r\nexport {\r\n  ReturnPolicy\r\n}","import React from 'react';\r\nimport * as Yup from 'yup';\r\n\r\nimport { User } from 'types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { UserInformation as UserInfo, saveUser } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport { CountryCodes } from 'appConstants';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\n\r\ninterface Props {\r\n  user?: UserInfo;\r\n  fromCart? : boolean\r\n};\r\n\r\n\r\nconst UserInformation: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const userData = props.user;\r\n  const isLoading = props.user?._isLoading;\r\n\r\n  const userInformationFormik = useFormik({\r\n    initialValues: {\r\n      firstName: userData?.data?.firstName || '',\r\n      lastName: userData?.data?.lastName || '',\r\n      mobile: userData?.data?.mobile || '',\r\n      dob: userData?.data?.dob || '',\r\n      gender: userData?.data?.gender || '',\r\n      country: userData?.data?.country || CountryCodes.filter(country => country.default)[0].countryCode,\r\n      state: userData?.data?.state || '',\r\n      city: userData?.data?.city || '',\r\n      pincode: userData?.data?.pincode || '',\r\n      addressLineOne: userData?.data?.addressLineOne || '',\r\n      addressLineTwo: userData?.data?.addressLineTwo || '',\r\n      addressLineThree: userData?.data?.addressLineThree || '',\r\n      addressId: userData?.data?.addressId || ''\r\n    },\r\n\r\n    validationSchema: Yup.object({\r\n      firstName: Yup.string().required('Required'),\r\n      mobile: Yup.string().required('Required').matches(/^((\\+)(\\d{1,4}[-]))(\\d{10}){1}?$/, 'Valid Format e.g., +91-9876543210'),\r\n      country: Yup.string().required('Required'),\r\n      state: Yup.string().required('Required'),\r\n      city: Yup.string().required('Required'),\r\n      pincode: Yup.string().required('Required'),\r\n      addressLineOne: Yup.string().required('Required')\r\n    }),\r\n\r\n    onSubmit: (value: User) => {\r\n      dispatch(saveUser({...value, discount: userData?.data?.discount}));\r\n    },\r\n\r\n    enableReinitialize: true\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={userInformationFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        {\r\n          !props.fromCart && <header className=\"uk-card-header\"><h1 className=\"uk-h2\">Personal Information</h1></header>\r\n        }\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Contact</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">First Name <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"firstName\"\r\n                        {...userInformationFormik.getFieldProps(\"firstName\")} />\r\n                      {\r\n                        userInformationFormik.touched.firstName && userInformationFormik.errors.firstName ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.firstName}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Last Name <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"lastName\"\r\n                        {...userInformationFormik.getFieldProps(\"lastName\")} />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Phone Number <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"tel\" id=\"mobile\"\r\n                        {...userInformationFormik.getFieldProps('mobile')} />\r\n                      {\r\n                        userInformationFormik.touched.mobile && userInformationFormik.errors.mobile ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.mobile}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Date of Birth</div>\r\n                      <input className=\"uk-input\" type=\"date\" id=\"dob\"\r\n                        {...userInformationFormik.getFieldProps('dob')} />\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Gender</div>\r\n                      <select className=\"uk-select\" id=\"gender\"\r\n                        {...userInformationFormik.getFieldProps('gender')}>\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"M\">Male</option>\r\n                        <option value=\"F\">Female</option>\r\n                        <option value=\"O\">Other</option>\r\n                      </select>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Address</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Country <span className=\"uk-text-danger\">*</span></div>\r\n                      <select className=\"uk-select\" id=\"country\"\r\n                        {...userInformationFormik.getFieldProps('country')}>\r\n                        {\r\n                          CountryCodes.map((country, index) => {\r\n                            return <option key={index} value={country.countryCode}>{country.name}</option>\r\n                          })\r\n                        }\r\n                      </select>\r\n                      {\r\n                        userInformationFormik.touched.country && userInformationFormik.errors.country ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.country}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">State <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"state\"\r\n                        {...userInformationFormik.getFieldProps('state')} />\r\n                      {\r\n                        userInformationFormik.touched.state && userInformationFormik.errors.state ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.state}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">City <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"city\"\r\n                        {...userInformationFormik.getFieldProps('city')} />\r\n                      {\r\n                        userInformationFormik.touched.city && userInformationFormik.errors.city ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.city}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">PIN code</div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"pincode\"\r\n                        {...userInformationFormik.getFieldProps('pincode')} />\r\n                      {\r\n                        userInformationFormik.touched.pincode && userInformationFormik.errors.pincode ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.pincode}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-1-1\">\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Flat, House no., Building, Company, Apartment  <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"addressLineOne\"\r\n                        {...userInformationFormik.getFieldProps('addressLineOne')} />\r\n                      {\r\n                        userInformationFormik.touched.addressLineOne && userInformationFormik.errors.addressLineOne ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.addressLineOne}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-1-1\">\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Area, Colony, Street, Sector, Village</div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"addressLineTwo\"\r\n                        {...userInformationFormik.getFieldProps('addressLineTwo')} />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-1-1\">\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Landmark</div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"addressLineThree\"\r\n                        {...userInformationFormik.getFieldProps('addressLineThree')} />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          {\r\n            props.user &&\r\n            <NotificationContainer {...props.user}/>\r\n          }\r\n          \r\n          <button disabled={isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              isLoading &&\r\n              <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserInformation\r\n}\r\n","import React, { useState } from 'react';\r\n\r\ninterface Props {\r\n  toggelDetails: Function;\r\n  showSettings: boolean;\r\n  showPersonal: boolean;\r\n  showOrders: boolean;\r\n}\r\n\r\nconst UserNav: React.FunctionComponent<Props> = (props: Props)=> {\r\n\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-1-4@m tm-aside-column user-nave-sticky\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\" uk-sticky=\"offset: 50; bottom: true; width-element: true\">\r\n        <div className=\"uk-card-header\">\r\n          <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div>\r\n              <div className=\"uk-grid-small uk-flex-center\" uk-grid=\"true\">\r\n                <div>\r\n                  <a className=\"uk-button uk-button-default uk-button-small\"><span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: cog; ratio: .75;\"></span><span>Quick Links</span></a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <nav>\r\n            <ul className=\"uk-nav uk-nav-default tm-nav quick-links\">\r\n              <li className={props.showPersonal ? 'uk-active' : ''}>\r\n                <a onClick={(): void => {props.toggelDetails('personal')}}>Personal Information</a>\r\n              </li>\r\n              <li className={props.showOrders ? 'uk-active' : ''}>\r\n                <a onClick={(): void => {props.toggelDetails('orders')}}>Orders</a>\r\n              </li>\r\n              <li className={props.showSettings ? 'uk-active' : ''}>\r\n                <a onClick={(): void => {props.toggelDetails('settings')}}>Settings</a>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { UserNav };","import React from 'react';\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { UserSetting, saveUserSettings } from 'reducers';\r\nimport { useDispatch } from 'react-redux';\r\nimport { UserSettings as UserSettingType } from 'types';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\n\r\ninterface Props {\r\n  user?: UserSetting;\r\n}\r\n\r\nconst UserSettings: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const user = props.user;\r\n  const isLoading = props.user?._isLoading;\r\n  const dispatch = useDispatch();\r\n  const userSettingFormik = useFormik({\r\n    initialValues: {\r\n      emailAddress: user?.data?.emailAddress || '',\r\n      currentPassword: '',\r\n      newPassword: '',\r\n      confirmPassword: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      emailAddress: Yup.string().required('Required'),\r\n      currentPassword: Yup.string().required('Required'),\r\n      newPassword: Yup.string().required('Required'),\r\n      confirmPassword: Yup.string().required('Required').oneOf([Yup.ref('newPassword'), ''], 'Password should match')\r\n    }),\r\n    onSubmit: (value: UserSettingType) => {\r\n      dispatch(saveUserSettings(value));\r\n      userSettingFormik.resetForm();\r\n    },\r\n\r\n    enableReinitialize: true\r\n  });\r\n\r\n\r\n  return (\r\n    <form onSubmit={userSettingFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <header className=\"uk-card-header\"><h1 className=\"uk-h2\">Settings</h1></header>\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Email</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Current Email</div>\r\n                      <input className=\"uk-input\" id=\"emailAddress\" type=\"email\" disabled\r\n                        {...userSettingFormik.getFieldProps('emailAddress')} />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Password</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Current Password</div>\r\n                      <input className=\"uk-input \" id=\"currentPassword\" type=\"password\"\r\n                        {...userSettingFormik.getFieldProps('currentPassword')} />\r\n                      {\r\n                        userSettingFormik.touched.currentPassword && userSettingFormik.errors.currentPassword ? (\r\n                          <span className=\"uk-text-danger\">{userSettingFormik.errors.currentPassword}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">New Password</div>\r\n                      <input className=\"uk-input \" type=\"password\"\r\n                        {...userSettingFormik.getFieldProps('newPassword')} />\r\n                      {\r\n                        userSettingFormik.touched.newPassword && userSettingFormik.errors.newPassword ? (\r\n                          <span className=\"uk-text-danger\">{userSettingFormik.errors.newPassword}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Confirm Password</div>\r\n                      <input className=\"uk-input \" type=\"password\"\r\n                        {...userSettingFormik.getFieldProps('confirmPassword')} />\r\n                      {\r\n                        userSettingFormik.touched.confirmPassword && userSettingFormik.errors.confirmPassword ? (\r\n                          <span className=\"uk-text-danger\">{userSettingFormik.errors.confirmPassword}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n        {\r\n            props.user &&\r\n            <NotificationContainer {...props.user}/>\r\n          }\r\n          <button disabled={isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              isLoading &&\r\n              <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n            }\r\n            <span>update password</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserSettings\r\n}","import React, { useEffect, useState, useRef } from 'react';\r\nimport { CustomerOrders, getCustomerOrders, customerProductReturn, defaulOrderReturn } from 'reducers/Order';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport jsPDF from 'jspdf';\r\n\r\nimport { AppState, UserLocation, getShippers, UserInformation } from 'reducers';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { pageSize, scaledServerImagePath, AllowReturn } from 'appConstants';\r\nimport { Invoice, InvoiceItems, Order, OrderItems, OrderShipper } from 'types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { calculateUserDiscount, getCurrencyIcon, returnInvoiceHtml, userOrderDiscountPrice } from 'services';\r\n\r\nconst Orders: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [hasMoreOrders, setHasMoreOrders] = useState(false);\r\n  const [selectedReason, setSelectedReason] = useState('');\r\n  const [showOrderDetailIndex, setShowOrderDetailIndex] = useState<number[]>([]);\r\n  const [returnOrderDetailId, setReturnOrderDetailId] = useState('');\r\n  const [returnOrderNumber, setReturnOrderNumber] = useState('');\r\n  const [returnProductName, setReturnProductName] = useState('');\r\n  const [showReturnError, setShowReturnError] = useState(false);\r\n  const returnModalRef = useRef<HTMLDivElement>(null);\r\n  const returnButtonRef = useRef<HTMLButtonElement>(null);\r\n  const orders = useSelector<AppState, CustomerOrders>(state => state.customerOrders || []);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const shipperData = useSelector<AppState, OrderShipper[]>(state => state.shipper.data || []);\r\n  const userData = useSelector<AppState, UserInformation>(state => state.user);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCustomerOrders(orders.data?.length || 0, pageSize));\r\n    dispatch(getShippers());\r\n  }, [])\r\n  const fetchNextOrders = () => {\r\n    dispatch(getCustomerOrders(orders.data?.length || 0, pageSize));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (orders._isOrderUpdate && returnModalRef.current?.getBoundingClientRect().top !== 0) {\r\n      const that = returnButtonRef.current;\r\n      setTimeout(() => {\r\n        that?.click();\r\n      }, 1000);\r\n    }\r\n  }, [orders._isOrderUpdate])\r\n\r\n  useEffect(() => {\r\n    setHasMoreOrders(orders._hasMoreOrders || false);\r\n  }, [orders._hasMoreOrders]);\r\n\r\n\r\n  const toggleShowOrderDetails = (orderId: number) => {\r\n    if (showOrderDetailIndex.indexOf(orderId) > -1) {\r\n      setShowOrderDetailIndex(showOrderDetailIndex.filter((id) => id !== orderId))\r\n    } else {\r\n      setShowOrderDetailIndex([...showOrderDetailIndex, orderId]);\r\n    }\r\n  }\r\n\r\n  const getShipmentLink = (shipper?: string, trackingNumber?: string) => {\r\n    if (shipper && trackingNumber) {\r\n      const shipperInfo = shipperData.filter(({ shipperId }) => shipperId === shipper);\r\n      if (shipperInfo[0]) {\r\n        return (\r\n          <>\r\n            <li>Shipper Link: <a target=\"blank\" href={shipperInfo[0].trackingLink} className=\"uk-text-capitalize\">{shipperInfo[0].shipperName}</a></li>\r\n            <li>Tracking Number: <span>{trackingNumber}</span></li>\r\n          </>\r\n        )\r\n        // return <a target=\"_blank\" href={shipperInfo[0].trackingLink + trackingNumber}>Track Package</a>\r\n      }\r\n    }\r\n    return <li>Status: <span>Order Received</span></li>\r\n  }\r\n\r\n  const checkReturnEligibilty = (deliveryDate: string, categoryId: string) => {\r\n    if (AllowReturn.indexOf(categoryId.toString()) > -1) {\r\n      const dateDifference = (new Date()).getTime() - (new Date(deliveryDate)).getTime();\r\n      const differenceInDays = dateDifference / (1000 * 3600 * 24);\r\n      return Math.ceil(differenceInDays) <= 30;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const returnOrder = (orderDetailId?: string, reason?: string,\r\n    orderNumber?: string, productName?: string) => {\r\n    if (selectedReason || reason) {\r\n      setShowReturnError(false);\r\n      dispatch(customerProductReturn(Number(orderDetailId) || Number(returnOrderDetailId),\r\n        reason || selectedReason, orderNumber || returnOrderNumber, productName || returnProductName, userData.data?.firstName));\r\n    } else {\r\n      setShowReturnError(true);\r\n    }\r\n  }\r\n\r\n  const downloadInvoice = async (invoiceNumber: string, productList: InvoiceItems[], userDiscount?: string, couponDiscount?: string, paymentMode?: string, isInternaltionalOrderStandard?: boolean) => {\r\n    var doc = new jsPDF('l', 'px', 'a4', true)\r\n    const invoiceData: Invoice = {\r\n      clientName: userData.data?.firstName + ' ' + userData.data?.lastName,\r\n      invoiceDate: (new Date).toLocaleDateString(\"en-US\"),\r\n      clientAddress: userData.data?.addressLineOne + ' ' + userData.data?.addressLineTwo + ' ' +\r\n        userData.data?.addressLineThree + ' ' + userData.data?.city + ' ' + userData.data?.state +\r\n        ' ' + userData.data?.pincode + ' ' + userData.data?.country,\r\n      invoiceNumber,\r\n      productList,\r\n      userDiscount,\r\n      couponDiscount,\r\n      isInternaltionalOrder: paymentMode ? paymentMode.toLowerCase() === 'paypal' : false,\r\n      isInternaltionalOrderStandard: isInternaltionalOrderStandard || false\r\n    }\r\n    await doc.html(returnInvoiceHtml(invoiceData), { x: 10, y: 10 })\r\n    doc.save( invoiceNumber+\".pdf\")\r\n  }\r\n\r\n  // const userOrderDiscountPrice = (totalPrice: string, quantity: string, userDiscount?: string, couponDiscount?: string)=> {\r\n  //   let mainTotal = Number(totalPrice) * Number(quantity);\r\n  //   if(userDiscount){\r\n  //     mainTotal = Number(calculateUserDiscount(userDiscount,mainTotal.toString()))\r\n  //   } \r\n  //   if(couponDiscount){\r\n  //     mainTotal = Number(calculateUserDiscount(couponDiscount,mainTotal.toString()))\r\n  //   }\r\n  //   return mainTotal\r\n  // }\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card  uk-card-small tm-ignore-container\">\r\n        {\r\n          orders.data && orders.data.length === 0 ?\r\n            <div className=\"uk-card uk-card-default uk-grid-collapse uk-child-width-1-1@s uk-margin\" uk-grid=\"true\">\r\n              <div>\r\n                <div className=\"uk-card-body uk-nav-center\">\r\n                  <p>You haven't ordered anything. Start some shopping now !!</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            :\r\n            <InfiniteScroll\r\n              dataLength={orders.data && orders.data.length || 0}\r\n              next={fetchNextOrders}\r\n              hasMore={hasMoreOrders}\r\n              loader={\r\n                <div style={{ textAlign: \"center\", marginTop: \"10px\" }}>\r\n                  <h4>Loading...</h4>\r\n                </div>\r\n              }\r\n              endMessage={\r\n                <p style={{ textAlign: \"center\" }}>\r\n                  <b>That's all for now !</b>\r\n                </p>\r\n              }\r\n            >\r\n              {\r\n                orders && orders.data &&\r\n                orders.data.map((order: Order, index: number) => {\r\n                  return (\r\n                    <div key={index} className=\"uk-card uk-card-hover uk-card-default uk-width-1-1@m\">\r\n                      <div className=\"uk-card-header\">\r\n                        <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                          <div className=\"uk-width-expand\">\r\n                            <div className=\"uk-float-left\">\r\n                              <h3 className=\"uk-card-title uk-margin-remove-bottom\">#{order.orderNumber}</h3>\r\n                              <p className=\"uk-text-meta uk-margin-remove-top\"><time>Ordered on {order.paymentDate.split(' ')[0]}</time></p>\r\n                            </div>\r\n                            <div className=\"uk-float-right\">\r\n                            <p className=\"uk-text-normal uk-margin-remove-top uk-float-right uk-margin-remove-bottom\"><time>Order Cost: {getCurrencyIcon(userLocation.data || 'IN')} {order.totalPrice}</time></p>\r\n                            {\r\n                              (order.userDiscount || order.couponDiscount) && \r\n                              <p className=\"uk-text-meta uk-margin-remove-top\">\r\n                              <time>\r\n                                Discount Included: {\r\n                                order.userDiscount && order.couponDiscount ? \r\n                                  order.userDiscount + '% + ' + order.couponDiscount +'%' : \r\n                                  order.userDiscount ? order.userDiscount + '%' :\r\n                                  order.couponDiscount ? order.couponDiscount + '%' : ''}\r\n                              </time>\r\n                            </p>\r\n                            }\r\n                            \r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {\r\n                        showOrderDetailIndex.indexOf(Number(order.orderId)) === -1 &&\r\n                        <div className=\"uk-card uk-grid-collapse uk-child-width-1-3@s uk-margin uk-margin-remove-top\" uk-grid=\"true\">\r\n                          <div className=\"uk-card-media-left\">\r\n                            <div className=\"tm-ratio tm-ratio-16-9\">\r\n                              <a className=\"tm-media-box\" onClick={() => history.push('/productDetails/' + order.orderItems[0].productId)}>\r\n                                <figure className=\"tm-media-box-wrap\"><img src={scaledServerImagePath + order.orderItems[0].productImage} alt={order.orderItems[0].productImage} /> </figure>\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"uk-card-body\">\r\n                              {/* <h3 className=\"uk-card-title\">Media Left</h3> */}\r\n                              <ul className=\"uk-list\">\r\n                                <li>Product : <a onClick={() => history.push('/productDetails/' + order.orderItems[0].productId)}>{order.orderItems[0].productName}</a></li>\r\n                                <li>Quantity: {order.orderItems[0].quantity}</li>\r\n                                <li>Price: {getCurrencyIcon(userLocation.data || 'IN')} \r\n                                {/* {' ' + userOrderDiscountPrice(order.orderItems[0].productPrice, order.orderItems[0].quantity, order.userDiscount, order.couponDiscount)} */}\r\n                                {Math.ceil(Number(order.orderItems[0].productPrice))}\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"uk-card-body\">\r\n                              {\r\n                                (order.orderItems[0].shipmentDetails?.returnStatus ||\r\n                                  order.orderItems[0].shipmentDetails?.paymentReturned) ?\r\n                                  <ul className=\"uk-list\">\r\n                                    {\r\n                                      order.orderItems[0].shipmentDetails?.paymentReturned === 'Yes' ?\r\n                                        <li>Return Status: <span className=\"uk-label uk-label-success\">Retured</span></li>\r\n                                        : order.orderItems[0].shipmentDetails?.paymentReturned === 'No' ?\r\n                                          <li>Return Status: <span className=\"uk-label uk-label-danger\">Declined</span></li>\r\n                                          : <li>Return Status: <span className=\"uk-label uk-label-warning\">{order.orderItems[0].shipmentDetails?.returnStatus}</span></li>\r\n                                    }\r\n                                  </ul>\r\n                                  :\r\n                                  order.orderItems[0].shipmentDetails?.deliveryDate ?\r\n                                    <ul className=\"uk-list\">\r\n                                      <li>Status : <span className=\"uk-label uk-label-success\">Delivered</span></li>\r\n                                      <li>Delivery Date: <span>{order.orderItems[0].shipmentDetails?.deliveryDate}</span></li>\r\n                                      {\r\n                                        checkReturnEligibilty(order.orderItems[0].shipmentDetails?.deliveryDate, order.orderItems[0].categoryId) &&\r\n                                        <li><button className=\"uk-button uk-button-primary uk-button-small\" uk-toggle=\"target: #return-modal\"\r\n                                          onClick={() => {\r\n                                            setSelectedReason('');\r\n                                            dispatch(defaulOrderReturn());\r\n                                            setReturnOrderDetailId(order.orderItems[0].orderDetailId);\r\n                                            setReturnProductName(order.orderItems[0].productName);\r\n                                            setReturnOrderNumber(order.orderNumber);\r\n                                          }}>Return</button></li>\r\n                                      }\r\n                                      <li>Invoice : <a onClick={() => downloadInvoice(order.orderNumber + order.orderItems[0].orderDetailId,[order.orderItems[0]], order.userDiscount, order.couponDiscount, order.paymentMode, order.standardShipping)}>Download</a></li>\r\n                                    </ul>\r\n                                    :\r\n                                    <ul className=\"uk-list\">\r\n                                      {getShipmentLink(order.orderItems[0].shipmentDetails?.shipper, order.orderItems[0].shipmentDetails?.trackingNumber)}\r\n                                      {/* <li>Status : {getShipmentLink(order.orderItems[0].shipmentDetails?.shipper, order.orderItems[0].shipmentDetails?.trackingNumber)}</li> */}\r\n                                      <li>Shipment Date: <span>{order.orderItems[0].shipmentDetails?.shippingDate ? order.orderItems[0].shipmentDetails?.shippingDate : 'Awaited'}</span></li>\r\n                                      <li>\r\n                                        <button className=\"uk-button uk-button-primary uk-button-small\"\r\n                                          disabled={orders._isLoading}\r\n                                          {...(order.orderItems[0].shipmentDetails?.shippingDate && 'uk-toggle=\"target: #return-modal\"')}\r\n                                          onClick={() => {\r\n                                            if (order.orderItems[0].shipmentDetails?.shippingDate) {\r\n                                              setSelectedReason('');\r\n                                              dispatch(defaulOrderReturn())\r\n                                              setReturnOrderDetailId(order.orderItems[0].orderDetailId);\r\n                                              setReturnProductName(order.orderItems[0].productName);\r\n                                              setReturnOrderNumber(order.orderNumber);\r\n                                            } else {\r\n                                              setSelectedReason('Order Canceled before shipping');\r\n                                              setReturnOrderDetailId(order.orderItems[0].orderDetailId);\r\n                                              setReturnProductName(order.orderItems[0].productName);\r\n                                              setReturnOrderNumber(order.orderNumber);\r\n                                              returnOrder(order.orderItems[0].orderDetailId,\r\n                                                'Order Canceled before shipping', order.orderNumber, order.orderItems[0].productName);\r\n                                            }\r\n\r\n                                          }}>\r\n                                          {\r\n                                            orders._isLoading && <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n                                          }\r\n                                          {order.orderItems[0].shipmentDetails?.shippingDate ? 'Return' : 'Cancel'}\r\n                                        </button></li>\r\n                                    </ul>\r\n                              }\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      }\r\n                      {\r\n                        order.orderItems.length > 1 &&\r\n                        <ul uk-accordion=\"true\">\r\n                          <li>\r\n                            <a\r\n                              className=\"uk-accordion-title uk-nav-center uk-padding-bottom\"\r\n                              onClick={() => toggleShowOrderDetails(Number(order.orderId))}>\r\n                              {showOrderDetailIndex.indexOf(Number(order.orderId)) === -1 ? \"View More\" : \"View Less\"}</a>\r\n                            <div className=\"uk-accordion-content\">\r\n                              {\r\n                                order.orderItems.map((orderItem: OrderItems, index: number) => {\r\n                                  return (\r\n                                    <div key={index} className=\"uk-card uk-grid-collapse uk-child-width-1-3@s uk-margin uk-margin-remove-top\" uk-grid=\"true\">\r\n                                      <div className=\"uk-card-media-left\">\r\n                                        <div className=\"tm-ratio tm-ratio-16-9\">\r\n                                          <a className=\"tm-media-box\" onClick={() => history.push('/productDetails/' + orderItem.productId)}>\r\n                                            <figure className=\"tm-media-box-wrap\"><img src={scaledServerImagePath + orderItem.productImage} alt={orderItem.productImage} /> </figure>\r\n                                          </a>\r\n                                        </div>\r\n                                      </div>\r\n                                      <div>\r\n                                        <div className=\"uk-card-body\">\r\n                                          <ul className=\"uk-list\">\r\n                                            <li>Product : <a onClick={() => history.push('/productDetails/' + orderItem.productId)}>{orderItem.productName}</a></li>\r\n                                            <li>Quantity: {orderItem.quantity}</li>\r\n                                            <li>Price: {getCurrencyIcon(userLocation.data || 'IN')} \r\n                                            {/* {' ' +userOrderDiscountPrice(orderItem.productPrice, orderItem.quantity, order.userDiscount, order.couponDiscount)} */}\r\n                                            {Math.ceil(Number(orderItem.productPrice))}\r\n                                            </li>\r\n                                          </ul>\r\n                                        </div>\r\n                                      </div>\r\n                                      <div>\r\n                                        <div className=\"uk-card-body\">\r\n                                          {\r\n                                            (orderItem.shipmentDetails?.returnStatus ||\r\n                                              orderItem.shipmentDetails?.paymentReturned) ?\r\n                                              <ul className=\"uk-list\">\r\n                                                {\r\n                                                  orderItem.shipmentDetails?.paymentReturned === 'Yes' ?\r\n                                                    <li>Return Status: <span className=\"uk-label uk-label-success\">Retured</span></li>\r\n                                                    : orderItem.shipmentDetails?.paymentReturned === 'No' ?\r\n                                                      <li>Return Status: <span className=\"uk-label uk-label-danger\">Declined</span></li>\r\n                                                      : <li>Return Status: <span className=\"uk-label uk-label-warning\">{orderItem.shipmentDetails?.returnStatus}</span></li>\r\n                                                }\r\n                                              </ul>\r\n                                              :\r\n                                              orderItem.shipmentDetails?.deliveryDate ?\r\n                                                <ul className=\"uk-list\">\r\n                                                  <li>Status : <span className=\"uk-label uk-label-success\">Delivered</span></li>\r\n                                                  <li>Delivery Date: <span>{orderItem.shipmentDetails?.deliveryDate}</span></li>\r\n                                                  {\r\n                                                    checkReturnEligibilty(orderItem.shipmentDetails?.deliveryDate, order.orderItems[0].categoryId) &&\r\n                                                    <li><button className=\"uk-button uk-button-primary uk-button-small\" uk-toggle=\"target: #return-modal\"\r\n                                                      onClick={() => {\r\n                                                        setSelectedReason('');\r\n                                                        dispatch(defaulOrderReturn());\r\n                                                        setReturnOrderDetailId(orderItem.orderDetailId);\r\n                                                        setReturnProductName(orderItem.productName);\r\n                                                        setReturnOrderNumber(order.orderNumber);\r\n                                                      }}>Return</button></li>\r\n                                                  }\r\n                                                  <li>Invoice : <a onClick={() => downloadInvoice(order.orderNumber + orderItem.orderDetailId,[orderItem], order.userDiscount, order.couponDiscount,order.paymentMode, order.standardShipping)}>Download</a></li>\r\n                                                </ul>\r\n                                                :\r\n                                                <ul className=\"uk-list\">\r\n                                                  {getShipmentLink(orderItem.shipmentDetails?.shipper, orderItem.shipmentDetails?.trackingNumber)}\r\n                                                  {/* <li>Status : {getShipmentLink(orderItem.shipmentDetails?.shipper, orderItem.shipmentDetails?.trackingNumber)}</li> */}\r\n                                                  <li>Shipment Date: <span>{orderItem.shipmentDetails?.shippingDate ? orderItem.shipmentDetails?.shippingDate : 'Awaited'}</span></li>\r\n                                                  <li>\r\n                                                    <button className=\"uk-button uk-button-primary uk-button-small\"\r\n                                                      disabled={orders._isLoading}\r\n                                                      {...(orderItem.shipmentDetails?.shippingDate && 'uk-toggle=\"target: #return-modal\"')}\r\n                                                      onClick={() => {\r\n                                                        if (orderItem.shipmentDetails?.shippingDate) {\r\n                                                          setSelectedReason('');\r\n                                                          setReturnOrderDetailId(orderItem.orderDetailId);\r\n                                                          setReturnProductName(orderItem.productName);\r\n                                                          setReturnOrderNumber(order.orderNumber);\r\n                                                          dispatch(defaulOrderReturn())\r\n                                                        } else {\r\n                                                          setSelectedReason('Order Canceled before shipping');\r\n                                                          setReturnOrderDetailId(orderItem.orderDetailId);\r\n                                                          setReturnProductName(orderItem.productName);\r\n                                                          setReturnOrderNumber(order.orderNumber);\r\n                                                          returnOrder(orderItem.orderDetailId, 'Order Canceled before shipping',\r\n                                                            order.orderNumber, orderItem.productName);\r\n                                                        }\r\n                                                      }\r\n                                                      }>\r\n                                                      {\r\n                                                        orders._isLoading && <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n                                                      }\r\n                                                      {orderItem.shipmentDetails?.shippingDate ? 'Return' : 'Cancel'}</button></li>\r\n                                                </ul>\r\n                                          }\r\n                                        </div>\r\n                                      </div>\r\n\r\n                                    </div>\r\n                                  )\r\n                                })\r\n                              }\r\n                            </div>\r\n                          </li>\r\n                        </ul>\r\n                      }\r\n\r\n                    </div>\r\n                  )\r\n                })\r\n\r\n              }\r\n            </InfiniteScroll>\r\n        }\r\n\r\n      </div>\r\n      <button ref={returnButtonRef} uk-toggle=\"target: #return-modal\" style={{ visibility: \"hidden\" }}></button>\r\n      <div id=\"return-modal\" uk-modal=\"true\">\r\n        <div className=\"uk-modal-dialog uk-modal-body\">\r\n          <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n          <h2 className=\"uk-modal-title\">Thank you for ordering!</h2>\r\n          <p>Please choose the correct reason for return. This information will help us to improve our site</p>\r\n          <div ref={returnModalRef} className=\"uk-form-stacked\">\r\n            <div className=\"uk-margin\">\r\n              <div className=\"uk-form-controls\">\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Defective product')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Defective product\" checked={selectedReason === 'Defective product'} /><span className=\"coupon-message\">Defective product</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Image shown did not match the actual product')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Image shown did not match the actual product\" checked={selectedReason === 'Image shown did not match the actual product'} /><span className=\"coupon-message\">Image shown did not match the actual product</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Quality Issues')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Quality Issues\" checked={selectedReason === 'Quality Issues'} /><span className=\"coupon-message\">Quality Issues</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('I changed my mind')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"I changed my mind\" checked={selectedReason === 'I changed my mind'} /><span className=\"coupon-message\">I changed my mind</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Size or fit issues')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Size or fit issues\" checked={selectedReason === 'Size or fit issues'} /><span className=\"coupon-message\">Size or fit issues</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Other')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Other\" checked={selectedReason === 'Other'} /><span className=\"coupon-message\">Other</span></label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <p><span className=\"uk-badge\">Note:</span> You confirm that the product is unused with the original tags intact.</p>\r\n          {\r\n            showReturnError &&\r\n            <p className=\"uk-text-danger\">Please select one of the above reason.</p>\r\n          }\r\n          <p className=\"uk-text-right\">\r\n            {\r\n              !orders._isOrderUpdate ?\r\n                <button disabled={orders._isLoading}\r\n                  className=\"uk-button uk-button-primary\" type=\"button\" onClick={() => returnOrder()}>\r\n                  {\r\n                    orders._isLoading &&\r\n                    <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n                  }\r\n               Confirm Return</button>\r\n                :\r\n                <button disabled={orders._isOrderUpdate}\r\n                  className=\"uk-button uk-label-success\" type=\"button\" >\r\n                  <span uk-icon=\"icon:check\" />\r\n                Return Initaled.</button>\r\n            }\r\n\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  Orders\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { UserInformation, UserNav, UserSettings } from '.';\r\nimport { AppState, getUserSettings } from 'reducers';\r\nimport { Orders } from './Orders';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst UserContainer: React.FunctionComponent = () => {\r\n\r\n  /**\r\n   * Hooks\r\n   */\r\n  const { userTab } = useParams();\r\n  const [showSettings, setShowSettings] = useState(false);\r\n  const [showPersonal, setShowPersonal] = useState(false);\r\n  const [showOrders, setShowOrders] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const userData = useSelector((state: AppState) => state.user);\r\n\r\n  const userSettings = useSelector((state: AppState) => state.userSettings)\r\n  useEffect(() => {\r\n    dispatch(getUserSettings());\r\n    toggelDetails(userTab || '')\r\n  },[]);\r\n\r\n  useEffect(() => {\r\n    toggelDetails(userTab || '')\r\n  },[userTab])\r\n  /**\r\n   * Local Methods\r\n   */\r\n  const toggelDetails = (selected: string): void => {\r\n    if(selected === 'orders') {\r\n      setShowSettings(false);\r\n      setShowPersonal(false);\r\n      setShowOrders(true);\r\n    } else if(selected === 'settings') {\r\n      setShowSettings(true);\r\n      setShowPersonal(false);\r\n      setShowOrders(false);\r\n    } else {\r\n      setShowSettings(false);\r\n      setShowPersonal(true);\r\n      setShowOrders(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main>\r\n        <section className=\"uk-section uk-section-small\">\r\n          <div className=\"uk-container\">\r\n            <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n              <UserNav toggelDetails={toggelDetails}\r\n                showPersonal={showPersonal} \r\n                showSettings={showSettings} \r\n                showOrders={showOrders} />\r\n                {showPersonal && <UserInformation user={userData} />}\r\n                {showSettings &&  <UserSettings user={userSettings}/>}\r\n                {showOrders &&  <Orders/>}\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserContainer\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { Login, CustomerCart } from 'types'\r\nimport { CountryCodes } from 'appConstants';\r\nimport { useDispatch, useSelector, } from 'react-redux';\r\nimport { userLogin, AppState, defaultLoginRegister, userRegister, getUser, getCart, forgetPassword, addUpdateCart } from 'reducers';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst UserLogin: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector<AppState, boolean>(state => state.userLogin._isLoading);\r\n  const isError = useSelector<AppState, boolean>(state => state.userLogin._isError);\r\n  const _isSuccess = useSelector<AppState, boolean>(state => state.userLogin._isSuccess);\r\n  const responseMessage = useSelector<AppState, string | undefined>(state => state.userLogin.message);\r\n  const [loginRedirect, setLoginRedirect] = useState(false)\r\n\r\n  const loginFormik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n      mobile: '+91-',\r\n      isRegistration: false,\r\n      forgetPassword: false,\r\n      countryCode: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .required('Required')\r\n        .email('Invalid email address'),\r\n      password: Yup.string().when('forgetPassword',{\r\n        is: false,\r\n        then: Yup.string()\r\n        .required('Required')\r\n      }),\r\n      mobile: Yup.string().when('isRegistration', {\r\n        is: true,\r\n        then: Yup.string().required('Required')\r\n          .matches(/^((\\+)(\\d{1,4}[-]))(\\d{10}){1}?$/\r\n            , 'Valid Format e.g., +91-9876543210')\r\n      })\r\n    }),\r\n    onSubmit: (values: Login) => {\r\n      if (!loginFormik.values.isRegistration) {\r\n        if(loginFormik.values.forgetPassword){\r\n          dispatch(forgetPassword(values));\r\n        } else {\r\n          dispatch(userLogin({ email: values.email, password: values.password }));\r\n        }\r\n      } else {\r\n        dispatch(userRegister({ email: values.email, password: values.password, mobile: values.mobile }));\r\n      }\r\n    },\r\n  });\r\n\r\n  const onCountryChange = (event: React.FormEvent<HTMLSelectElement>): void => {\r\n    loginFormik.setFieldValue('mobile', event.currentTarget.value + '-')\r\n  };\r\n\r\n  const toggleLoginRegister = (isRegistration: boolean): void => {\r\n    loginFormik.resetForm();\r\n    loginFormik.setFieldValue('isRegistration', isRegistration);\r\n    loginFormik.setFieldValue('forgetPassword', false);\r\n    dispatch(defaultLoginRegister());\r\n  }\r\n\r\n  const onForgetPassword = () => {\r\n    loginFormik.setFieldValue('forgetPassword', true);\r\n  };\r\n\r\n  const addToDBCartAfterLogin = () => {\r\n    const cartData = JSON.parse(localStorage.getItem(\"basicKart-loggedOutCart\") || '[]');\r\n    cartData.forEach((cart: CustomerCart) => {\r\n      dispatch(addUpdateCart({\r\n        productDetailId: cart.productDetailId,\r\n        productQuantity: cart.productQuantity,\r\n        currencyType: cart.currencyType,\r\n        cartId: '0',\r\n        productImage: cart.productImage,\r\n        productImagePath: cart.productImagePath,\r\n        productName: cart.productName,\r\n        subcategory: cart.subcategory,\r\n        productPrice: '0',\r\n        productId: cart.productId,\r\n      },true))\r\n    });\r\n    localStorage.setItem('basicKart-loggedOutCart','[]');\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (loginFormik.values.isRegistration) {\r\n      loginFormik.setFieldValue('isRegistration', false);\r\n      loginFormik.setFieldValue('email', '');\r\n      loginFormik.setFieldValue('password', '');\r\n      loginFormik.touched.password = false;\r\n      loginFormik.touched.email = false;\r\n    } else {\r\n      if (_isSuccess) {\r\n        if(!loginFormik.values.forgetPassword){\r\n          setLoginRedirect(true);\r\n          dispatch(getUser());\r\n          dispatch(getCart());\r\n          addToDBCartAfterLogin();\r\n        }\r\n      }\r\n    }\r\n  }, [_isSuccess])\r\n\r\n  if (loginRedirect) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={loginFormik.handleSubmit} className=\"uk-form-stacked\">\r\n      <main>\r\n        <section className=\"uk-section uk-section-small\">\r\n          <div className=\"uk-container\">\r\n            <div className=\"uk-grid-medium justify-content-center \" uk-grid=\"true\">\r\n              <div className=\"uk-width-1-1 uk-width-1-3@m tm-aside-column user-nave-sticky\">\r\n                <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\" uk-sticky=\"offset: 80; bottom: true;\">\r\n                  <div className=\"uk-card-header\">\r\n                    <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                      <div>\r\n                        <div className=\"uk-grid-small uk-flex-center\" uk-grid=\"true\">\r\n                          <div>\r\n                            <a className={'uk-button uk-button-default uk-button-small ' + (!loginFormik.values.isRegistration ? 'login-register-active-button uk-active' : '')} onClick={(): void => toggleLoginRegister(false)}>\r\n                              <span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: sign-in; ratio: .75;\"></span>\r\n                              <span>Login</span>\r\n                            </a>\r\n                          </div>\r\n                          <div>\r\n                            <a className={'uk-button uk-button-default uk-button-small ' + (loginFormik.values.isRegistration ? 'login-register-active-button uk-active' : '')} onClick={(): void => toggleLoginRegister(true)}>\r\n                              <span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: pencil; ratio: .75;\"></span>\r\n                              <span>Register</span>\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    {\r\n                      isError &&\r\n                      <div className=\"login-error-message\">\r\n                        <span className=\"uk-notification-message-danger\"> {responseMessage} </span>\r\n                      </div>\r\n                    }\r\n                    {\r\n                      _isSuccess &&\r\n                      <div className=\"forget-password-message\">\r\n                        <span className=\"uk-notification-message-success\"> {responseMessage} </span>\r\n                      </div>\r\n                    }\r\n                    <nav>\r\n                      <ul className=\"uk-nav uk-nav-default tm-nav\">\r\n                        <li>\r\n                          <div className=\"uk-card-body\">\r\n                            <div className=\"uk-form-stacked\">\r\n                              <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n                                <fieldset className=\"uk-fieldset\">\r\n                                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                                    <div>\r\n                                      <label>\r\n                                        <div className=\"uk-form-label\">Email</div>\r\n                                        <input className=\"uk-input\" id=\"email\" type=\"text\"\r\n                                          {...loginFormik.getFieldProps('email')} />\r\n                                        {\r\n                                          loginFormik.touched.email && loginFormik.errors.email ? (\r\n                                            <span className=\"uk-text-danger\">{loginFormik.errors.email}</span>\r\n                                          ) : ''\r\n                                        }\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                </fieldset>\r\n                                {loginFormik.values.isRegistration &&\r\n                                  <fieldset className=\"uk-fieldset\">\r\n                                    <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                                      <div className=\"uk-width-1-3 uk-width-1-3@s\">\r\n                                        <label>\r\n                                          <div className=\"uk-form-label\">Country</div>\r\n                                          <select className=\"uk-select\" id=\"countryCode\"\r\n                                            onChange={onCountryChange}>\r\n                                            {\r\n                                              CountryCodes.map((country, index) => {\r\n                                                return <option key={index} value={country.Iso} selected={country.default}>{country.name}</option>\r\n                                              })\r\n                                            }\r\n                                          </select>\r\n                                        </label>\r\n                                      </div>\r\n                                      <div className=\"uk-width-expand\">\r\n                                        <label>\r\n                                          <div className=\"uk-form-label\">Mobile Number</div>\r\n                                          <input className=\"uk-input\" type=\"text\" id=\"mobile\"\r\n                                            {...loginFormik.getFieldProps('mobile')} />\r\n                                          {\r\n                                            loginFormik.touched.mobile && loginFormik.errors.mobile ? (\r\n                                              <span className=\"uk-text-danger\">{loginFormik.errors.mobile}</span>\r\n                                            ) : ''\r\n                                          }\r\n                                        </label>\r\n                                      </div>\r\n                                    </div>\r\n                                  </fieldset>\r\n                                }\r\n                                {\r\n                                  !loginFormik.values.forgetPassword &&\r\n                                  <fieldset className=\"uk-fieldset\">\r\n                                    <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                                      <div>\r\n                                        <label>\r\n                                          <div className=\"uk-form-label\">Password</div>\r\n                                          <input className=\"uk-input\" type=\"password\" id=\"password\"\r\n                                            {...loginFormik.getFieldProps('password')} />\r\n                                          {\r\n                                            loginFormik.touched.password && loginFormik.errors.password ? (\r\n                                              <span className=\"uk-text-danger\">{loginFormik.errors.password}</span>\r\n                                            ) : ''\r\n                                          }\r\n                                        </label>\r\n                                      </div>\r\n                                    </div>\r\n                                  </fieldset>\r\n                                }\r\n\r\n                              </div>\r\n                              {\r\n                                !loginFormik.values.isRegistration &&\r\n                                <div className=\"uk-text-right uk-margin-xsmall-top\">\r\n                                  <a className=\"uk-text-danger\" onClick={() => onForgetPassword()}> Forget Password ?</a>\r\n                                </div>\r\n                              }\r\n\r\n                              <div className=\"uk-card-footer uk-text-center top-border-none\">\r\n                                <button id=\"loginbtn\" disabled={isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                                  {\r\n                                    isLoading &&\r\n                                    <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                                  }\r\n                                  <span>Submit</span>\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </nav>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserLogin\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst MainFooter: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <footer>\r\n      <section id=\"main-footer\" className=\"uk-section uk-section-secondary uk-section-small uk-light\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1 uk-child-width-1-4@m\" uk-grid=\"true\">\r\n            <div>\r\n              <a className=\"uk-logo\" onClick={()=> history.push('/')}><img src=\"/logo.png\" alt=\"Logo\" width=\"150\" /></a>\r\n              <p className=\"uk-text-small\"></p>\r\n              {/* <ul className=\"uk-iconnav\">\r\n                <li><a href=\"#\" title=\"Facebook\" uk-icon=\"facebook\"></a></li>\r\n                <li><a href=\"#\" title=\"Twitter\" uk-icon=\"twitter\"></a></li>\r\n                <li><a href=\"#\" title=\"YouTube\" uk-icon=\"youtube\"></a></li>\r\n                <li><a href=\"#\" title=\"Instagram\" uk-icon=\"instagram\"></a></li>\r\n              </ul> */}\r\n            </div>\r\n            <div>\r\n              <nav className=\"uk-grid-small uk-child-width-1-2\" uk-grid=\"true\">\r\n                <div>\r\n                  <ul className=\"uk-nav uk-nav-default\">\r\n                    <li><a onClick={() => history.push('/product/lingerie')}>Lingerie</a></li>\r\n                    <li><a onClick={() => history.push('/product/footwear')}>Footwear</a></li>\r\n                    <li><a onClick={() => history.push('/product/bindi')}>Bindi</a></li>\r\n                    <li><a onClick={() => history.push('/product/home essential')}>Home Essential</a></li>\r\n                    <li><a onClick={() => history.push('/product/cosmetics')}>Cosmetics</a></li>\r\n                    <li><a onClick={() => history.push('/product/fashion accessories')}>Fashion Accessories</a></li>\r\n                  </ul>\r\n                </div>\r\n                <div>\r\n                  <ul className=\"uk-nav uk-nav-default\">\r\n                    <li><a onClick={()=> history.push('/about')}>About</a></li>\r\n                    <li><a onClick={() => history.push('/contactus')}>Contact Us</a></li>\r\n                    <li><a onClick={() => history.push('/shoppolicy')}>Shop Policy</a></li>\r\n                  </ul>\r\n                </div>\r\n              </nav>\r\n            </div>\r\n            <div>\r\n              <ul className=\"uk-list uk-text-small\">\r\n                {/* <li>\r\n                  <a className=\"uk-link-muted\" href=\"#\"><span className=\"uk-margin-small-right\" uk-icon=\"receiver\"></span><span className=\"tm-pseudo\">8 800 799 99 99</span></a>\r\n                </li> */}\r\n                <li>\r\n                  <a className=\"uk-link-muted\" href=\"mailto:support@basickart.com\"><span className=\"uk-margin-small-right\" uk-icon=\"mail\"></span><span className=\"tm-pseudo\">support@basickart.com</span></a>\r\n                </li>\r\n                {/* <li>\r\n                  <div className=\"uk-text-muted\"><span className=\"uk-margin-small-right\" uk-icon=\"location\"></span><span>Sadar Bazar, Old Delhi</span></div>\r\n                </li>\r\n                <li>\r\n                  <div className=\"uk-text-muted\"><span className=\"uk-margin-small-right\" uk-icon=\"clock\"></span><span>Daily 10:00–21:00</span></div>\r\n                </li> */}\r\n              </ul>\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-margin uk-text-small uk-text-muted\">Technical partner KPWorks</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport {\r\n  MainFooter\r\n};","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { getSubCategory, AppState, SubCategory, getActiveProductCount, Cart, getCart, getUser, getUserLocation, getCustomerProducts, UserLocation, setLoggedCart, defaultUser, PreSelectedFilters, defaultPreSelectedFitler } from 'reducers';\r\nimport { SubCategories, pageSize } from 'appConstants';\r\nimport { filterSubcategories } from 'services';\r\nimport { ProductSubCategory, Search } from 'types';\r\nimport { MobileNavigation, SideCart } from '.';\r\nimport { searchDefault, setSearch } from 'reducers/Search';\r\n\r\n\r\n\r\nconst Navigation: React.FunctionComponent = () => {\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [cartCount, setCartCount] = useState(0);\r\n  const [enteredSearchText, setEnteredSearchText] = useState('');\r\n  const [cartCountCssFlag, setCartCountCssFlag] = useState(false);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n  const search = useSelector<AppState, Search>(state => state.search.data || {} as Search);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const sideCartRef = useRef<HTMLAnchorElement>(null);\r\n  const mobileNavigationRef = useRef<HTMLButtonElement>(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(getSubCategory());\r\n    dispatch(getActiveProductCount());\r\n    if(localStorage.getItem(\"biktoken\")){\r\n      dispatch(getCart());\r\n      dispatch(getUser());\r\n    }\r\n    dispatch(getUserLocation());\r\n    if(localStorage.getItem(\"basicKart-loggedOutCart\")){\r\n      dispatch(setLoggedCart(JSON.parse(localStorage.getItem(\"basicKart-loggedOutCart\") || '[]')))\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setCartCount(cart.data?.length || 0);\r\n    setCartCountCssFlag(true);\r\n    setTimeout(()=>{\r\n      setCartCountCssFlag(false);\r\n    },400)\r\n  },[cart.data])\r\n\r\n  const searchProduct = (searchText: string, doRedirect = true) => {\r\n    \r\n      if(searchText === ''){\r\n        setEnteredSearchText('');\r\n      }\r\n      if(\r\n        (search.categoryId && search.categoryId.length >0) ||\r\n        (search.colourId && search.colourId.length >0) ||\r\n        (search.sizeId && search.sizeId.length >0) ||\r\n        (search.subCategoryId && search.subCategoryId.length >0) ||\r\n         search.endPrice || search.startPrice || searchText\r\n      ){\r\n      dispatch(setSearch({\r\n        categoryId: search.categoryId || 0,\r\n        colourId: search.colourId || [],\r\n        currency: userLocation.data || 'IN',\r\n        endPrice: search.endPrice||'',\r\n        sizeId: search.sizeId || [],\r\n        startPrice: search.startPrice || '',\r\n        subCategoryId: search.subCategoryId || [],\r\n        searchText: searchText\r\n      }));\r\n      dispatch(getCustomerProducts(0, pageSize, search.categoryId || 0, search.subCategoryId || [], search.colourId || [], search.sizeId || [], search.startPrice || '', search.endPrice||'', userLocation.data || 'IN', searchText || '' , true));\r\n      if(doRedirect){\r\n        history.push('/product/search')\r\n      }\r\n    }\r\n    \r\n  }\r\n  const navigateTo = (event: React.SyntheticEvent ,categoryPath: string, subcategoryPath?: string) => {\r\n    event.preventDefault();\r\n    history.push('/product/'+ categoryPath.toLowerCase() + (subcategoryPath ? '/'+ subcategoryPath.toLowerCase() : ''));\r\n  };\r\n  const getCategoryAndSubCategory = () => {\r\n    return Object.keys(SubCategories).map((key: string, index: number) => {\r\n      return (\r\n        SubCategories[key] != 1 &&\r\n        <li key={index}>\r\n          <a className=\"desktop-nav-padding\" onClick={(e) => {navigateTo(e,key);dispatch(searchDefault());setEnteredSearchText('')}}>{key}<span className=\"uk-margin-xsmall-left\" uk-icon=\"icon: chevron-down; ratio: .75;\"></span></a>\r\n          <div\r\n            className=\"uk-navbar-dropdown uk-margin-remove uk-padding-remove-vertical\"\r\n            uk-drop=\"pos: bottom-justify;delay-show: 125;delay-hide: 50;duration: 75;boundary: .tm-navbar-container;boundary-align: true;pos: bottom-justify;flip: x\"\r\n          >\r\n            <div className=\"uk-container uk-container-small uk-margin-top uk-margin-bottom\">\r\n              <ul className=\"uk-nav uk-nav-default uk-column-1-3\">\r\n                {\r\n                  filterSubcategories(subCategories, Number(SubCategories[key])).map((subcategory: ProductSubCategory, index: number) => {\r\n                    return <li key={index}><a onClick={(e) => {navigateTo(e,key,subcategory.code);dispatch(searchDefault());setEnteredSearchText('')}}>{subcategory.code}</a></li>\r\n                  })\r\n                }\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      )\r\n    });\r\n  };\r\n\r\n  const logout = () => {\r\n    dispatch(defaultUser());\r\n    window.localStorage.removeItem('biktoken');\r\n    history.push('/');\r\n  };\r\n  return (\r\n    <header>\r\n      <MobileNavigation mobileNavigationRef={mobileNavigationRef} setEnteredSearchText={setEnteredSearchText}/>\r\n      <div className=\"uk-navbar-container tm-navbar-container\" uk-sticky=\"cls-active: tm-navbar-container-fixed\">\r\n        <div className=\"uk-container\" uk-navbar=\"true\">\r\n          <div className=\"uk-navbar-left\">\r\n            <button ref={mobileNavigationRef} className=\"uk-navbar-toggle uk-hidden@m\" uk-toggle=\"target: #nav-offcanvas\" uk-navbar-toggle-icon=\"true\"></button>\r\n            <a className=\"uk-navbar-item uk-logo\" onClick={() => {history.push('/'); searchProduct('',false)}}><img src=\"/logo.png\" width=\"67\" alt=\"Logo\" /></a>\r\n            <nav className=\"uk-visible@m\">\r\n              <ul className=\"uk-navbar-nav\">\r\n                {\r\n                  getCategoryAndSubCategory()\r\n                }\r\n                <li><a onClick={()=> {history.push('/about');searchProduct('',false)}}>About</a></li>\r\n                <li><a onClick={()=> {history.push('/contactus');searchProduct('',false)}}>Contact Us</a></li>\r\n                {\r\n                  userData.data?.isAdmin && \r\n                  <li><a onClick={()=>{history.push('/admin');searchProduct('',false)}}>Admin</a></li>\r\n                }\r\n               \r\n              </ul>\r\n            </nav>\r\n          </div>\r\n          <div className=\"uk-navbar-right\">\r\n            <a className={`${enteredSearchText !== '' ? 'search-color uk-navbar-toggle tm-navbar-button' : 'uk-navbar-toggle tm-navbar-button'}`} href=\"#\" uk-search-icon=\"true\">\r\n            </a>\r\n            <div className=\"uk-navbar-dropdown uk-padding-small uk-margin-remove\" uk-drop=\"mode: click;cls-drop: uk-navbar-dropdown;boundary: .tm-navbar-container;boundary-align: true;pos: bottom-justify;flip: x\">\r\n              <div className=\"uk-container\">\r\n                <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-expand\">\r\n                    <div className=\"uk-search uk-search-navbar uk-width-1-1\">\r\n                      <input className=\"uk-search-input\" type=\"search\" placeholder=\"Search…\"\r\n                        value={enteredSearchText}\r\n                        onChange={(e) => setEnteredSearchText(e.currentTarget.value)}\r\n                        onKeyPress={(e)=> {e.key === 'Enter' &&  searchProduct(e.currentTarget.value)}} />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-width-auto\" onClick={()=>searchProduct('')}><a className=\"uk-navbar-dropdown-close\" uk-close=\"true\"></a></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <a className=\"uk-navbar-item uk-link-muted tm-navbar-button\"  uk-icon=\"user\"></a>\r\n            <div className=\"uk-padding-small uk-margin-remove\" uk-dropdown=\"pos: bottom-right; offset: -10; delay-hide: 200;\" style={{ minWidth: '150px' }}>\r\n              <ul className=\"uk-nav uk-dropdown-nav\">\r\n                <li>\r\n                  <a onClick={() => userData.data?.userId ?  history.push('/userinformation/orders') : history.push('/login')}>Orders</a>\r\n                </li>\r\n                <li><a onClick={()=> userData.data?.userId ? history.push('/userinformation/default') : history.push('/login')}>Personal</a></li>\r\n                <li><a onClick={()=> userData.data?.userId ? history.push('/userinformation/settings'): history.push('/login')}>Settings</a></li>\r\n                <li className=\"uk-nav-divider\"></li>\r\n                {\r\n                   userData.data?.userId ? \r\n                   <li><a onClick={()=> logout()}>Log out</a></li> :\r\n                   <li><a onClick={()=>history.push('/login')}>Login</a></li>\r\n                }\r\n                \r\n              </ul>\r\n            </div>\r\n            <a ref={sideCartRef} className=\"uk-navbar-item uk-link-muted tm-navbar-button\" href=\"#\" uk-toggle=\"target: #cart-offcanvas\">\r\n              <span uk-icon=\"cart\"></span>\r\n              {\r\n                cartCount > 0 &&\r\n                <span className={cartCountCssFlag ? \"uk-badge  cart-popup\" : \"uk-badge \"}>{cartCount}</span>\r\n              }\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <SideCart\r\n      sideCartRef={sideCartRef}\r\n      cartData={cart.data || []}/>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport { Navigation };","import React, { RefObject, useEffect, useState } from 'react';\r\nimport { CustomerCart, ProductCoupon } from 'types';\r\nimport { scaledServerImagePath } from 'appConstants';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteCartItem, AppState, UserLocation } from 'reducers';\r\nimport { getCurrencyIcon, calculateUserDiscount, calculateUserDiscountPrice } from 'services';\r\n\r\ninterface Props {\r\n  cartData: CustomerCart[];\r\n  sideCartRef: RefObject<HTMLAnchorElement>\r\n}\r\n\r\nconst SideCart: React.FunctionComponent<Props> = (props: Props) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [mainTotal, setMainTotal] = useState(0);\r\n  const [userDiscountTotal, setUserDiscountTotal] = useState('0');\r\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState('0');\r\n  const [discountedTotal, setDiscountedTotal] = useState('0');\r\n  const [userCouponTotal, setUserCouponTotal] = useState('0');\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const couponData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const {\r\n    cartData,\r\n    sideCartRef\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    let cartPrice = 0;\r\n    cartData.forEach(({ totalPrice }) => {\r\n      cartPrice += Number(totalPrice)\r\n    });\r\n    setMainTotal(cartPrice);\r\n    if (couponData.length === 1) {\r\n      let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString());\r\n      let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString());\r\n      let couponPrice = calculateUserDiscountPrice(couponData[0].value, priceAfterDiscount.toString());\r\n      let priceAfterCoupon = calculateUserDiscount(couponData[0].value || '0', priceAfterDiscount.toString());\r\n      setDiscountedTotal(priceAfterDiscount);\r\n      setUserDiscountTotal(discountPrice);\r\n      setUserCouponTotal(couponPrice);\r\n      setTotalAfterDiscount(priceAfterCoupon);\r\n    } else {\r\n      let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString());\r\n      let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString());\r\n      setUserDiscountTotal(discountPrice);\r\n      setTotalAfterDiscount(priceAfterDiscount);\r\n    }\r\n    // setUserDiscountTotal(calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString()));\r\n    // setTotalAfterDiscount(calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString()))\r\n  }, [cartData, userData.data,couponData])\r\n\r\n  const deleteCart = (cartItem: CustomerCart) => {\r\n    dispatch(deleteCartItem(cartItem, false));\r\n  };\r\n\r\n  return (\r\n    <div id=\"cart-offcanvas\" uk-offcanvas=\"overlay: true; flip: true\">\r\n      <aside className=\"uk-offcanvas-bar uk-padding-remove\">\r\n        <div className=\"uk-card uk-card-default uk-card-small uk-height-1-1 uk-flex uk-flex-column tm-shadow-remove\">\r\n          <header className=\"uk-card-header uk-flex uk-flex-middle\">\r\n            <div className=\"uk-grid-small uk-flex-1\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand\"><div className=\"uk-h3\">Cart</div></div>\r\n              <button className=\"uk-offcanvas-close\" type=\"button\" uk-close=\"true\"></button>\r\n            </div>\r\n          </header>\r\n          <div className=\"uk-card-body cart-scroll-for-non-mobile\">\r\n            <ul className=\"uk-list uk-list-divider\">\r\n              {\r\n                cartData.map((cart: CustomerCart, index: number) => {\r\n                  return (\r\n                    <li key={index} className=\"uk-visible-toggle\">\r\n                      <article>\r\n                        <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                          <div className=\"uk-width-1-4\">\r\n                            <div className=\"tm-ratio tm-ratio-4-3\">\r\n                              <a className=\"tm-media-box\" onClick={() => {history.push('/productDetails/' + cart.productId); sideCartRef.current?.click()}}>\r\n                                <figure className=\"tm-media-box-wrap\"><img src={scaledServerImagePath + cart.productImagePath} alt={cart.productImage} /></figure>\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"uk-width-expand\">\r\n                            <div className=\"uk-text-meta uk-text-xsmall\">{cart.subcategory}</div>\r\n                            <a className=\"uk-link-heading uk-text-small\" onClick={() => {history.push('/productDetails/' + cart.productId); sideCartRef.current?.click()}}>{cart.productName}</a>\r\n                            <div className=\"uk-margin-xsmall uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                              <div className=\"uk-text-bolder uk-text-small\">{getCurrencyIcon(userLocation.data || 'IN')} {cart.totalPrice}</div>\r\n                              {/* <del className=\"uk-text-bolder uk-text-small uk-text-meta\">123</del> */}\r\n                              <div className=\"uk-text-meta uk-text-xsmall\">{cart.productQuantity} × {getCurrencyIcon(userLocation.data || 'IN')} {cart.productPrice}</div>\r\n                            </div>\r\n                          </div>\r\n                          {\r\n                            !userData.data?.userId && \r\n                            <div>\r\n                              <a className=\"uk-icon-link uk-text-danger uk-invisible-hover\"\r\n                              uk-icon=\"icon: close; ratio: .75\"\r\n                              uk-tooltip=\"Remove\"\r\n                              onClick={() => { deleteCart(cart)}}></a>\r\n                            </div>\r\n                          }\r\n                          \r\n                        </div>\r\n                      </article>\r\n                    </li>\r\n                  )\r\n                })\r\n              }\r\n              {\r\n                cartData.length === 0 &&\r\n                <li className=\"uk-visible-toggle\">\r\n                  <article>\r\n                    <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                      <div className=\"uk-width-1-4\">\r\n                        <div className=\"tm-ratio tm-ratio-4-3\">\r\n                          {/* <a className=\"tm-media-box\">\r\n                            <figure className=\"tm-media-box-wrap\"><img src={scaledServerImagePath + cart.productImagePath} alt={cart.productImage} /></figure>\r\n                          </a> */}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"uk-width-expand\">\r\n                        {/* <div className=\"uk-text-meta uk-text-xsmall\">{cart.subcategory}</div> */}\r\n                        <span className=\"uk-link-heading uk-text-small\" >Cart is empty.</span>\r\n                        <div className=\"uk-margin-xsmall uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                          <div className=\"uk-text-bolder uk-text-small\">Add in some good stuff !!</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </article>\r\n                </li>\r\n              }\r\n            </ul>\r\n          </div>\r\n          <footer className=\"uk-card-footer\">\r\n            {\r\n              (userData.data?.discount && userData.data?.discount !== '0' || couponData.length === 1) &&\r\n              <>\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-expand uk-text-muted uk-text-small\">Subtotal</div>\r\n                  <div className=\"uk-text-muted\">{getCurrencyIcon(userLocation.data || 'IN')} {mainTotal}</div>\r\n                </div>\r\n                {\r\n                  userData.data?.discount && userData.data?.discount !== '0' &&\r\n                  <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                    <div className=\"uk-width-expand uk-text-muted uk-text-small\">Discount ({userData.data?.discount}%)</div>\r\n                    <div className=\"uk-text-danger\">- {getCurrencyIcon(userLocation.data || 'IN')} {userDiscountTotal}</div>\r\n                  </div>\r\n                }\r\n              </>\r\n            }\r\n            {\r\n              couponData.length === 1 &&\r\n              <>\r\n                {\r\n                  userData.data?.discount && userData.data?.discount !== '0' &&\r\n                  <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                    <div className=\"uk-width-expand uk-text-muted\">Discounted Total</div>\r\n                    <div>{getCurrencyIcon(userLocation.data || 'IN')} {discountedTotal}</div>\r\n                  </div>\r\n                }\r\n\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-expand uk-text-muted\">Coupon ({couponData[0] && couponData[0].value}%)</div>\r\n                  <div className=\"uk-text-danger\">− {getCurrencyIcon(userLocation.data || 'IN')} {userCouponTotal}</div>\r\n                </div>\r\n              </>\r\n            }\r\n\r\n            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand uk-text-muted uk-h4\">Total</div>\r\n              <div className=\"uk-h4 uk-text-bolder\">{getCurrencyIcon(userLocation.data || 'IN')} {totalAfterDiscount}</div>\r\n            </div>\r\n            <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@m uk-margin-small\" uk-grid=\"true\">\r\n             <div></div>\r\n              <div >\r\n                <button className=\"uk-button  uk-button-primary uk-button-default uk-margin-small uk-width-1-1\"\r\n                  onClick={() => { \r\n                    userData.data?.userId ? history.push('/cart') :  history.push('/login'); sideCartRef.current?.click();}}\r\n                  disabled={mainTotal === 0}\r\n                >\r\n                  Continue\r\n                </button>\r\n              </div>\r\n              {/* <div>\r\n                <button className=\"uk-button uk-button-primary uk-margin-small uk-width-1-1\"\r\n                  onClick={() => { history.push('/checkout') }}\r\n                  disabled={mainTotal === 0}>\r\n                  checkout\r\n                </button>\r\n              </div> */}\r\n            </div>\r\n          </footer>\r\n        </div>\r\n      </aside>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  SideCart\r\n}","import { SubCategories } from 'appConstants';\r\nimport React, { Dispatch, RefObject, SetStateAction } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AppState, SubCategory } from 'reducers';\r\nimport { searchDefault } from 'reducers/Search';\r\nimport { filterSubcategories } from 'services';\r\nimport { ProductSubCategory } from 'types';\r\n\r\ninterface Props{\r\n  mobileNavigationRef: RefObject<HTMLButtonElement>;\r\n  setEnteredSearchText: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\nconst MobileNavigation: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const navigateTo = (event: React.SyntheticEvent, categoryPath: string, subcategoryPath?: string) => {\r\n    event.preventDefault();\r\n    history.push('/product/' + categoryPath.toLowerCase() + (subcategoryPath ? '/' + subcategoryPath.toLowerCase() : ''));\r\n    props.mobileNavigationRef.current?.click();\r\n  }\r\n  const {\r\n    setEnteredSearchText\r\n  } = props;\r\n  const getCategoryAndSubCategory = () => {\r\n\r\n    return Object.keys(SubCategories).map((key: string, index: number) => {\r\n      return (\r\n        SubCategories[key] != 1 &&\r\n        <li className=\"uk-parent\" key={index}>\r\n          <a onClick={(e) => {e.preventDefault();setEnteredSearchText('');dispatch(searchDefault())}}>{key}</a>\r\n          <ul className=\"uk-nav-sub uk-list-divider\">\r\n            {\r\n              filterSubcategories(subCategories, Number(SubCategories[key])).map((subcategory: ProductSubCategory, index: number) => {\r\n                return <li key={index}><a onClick={(e) => {navigateTo(e, key, subcategory.code);setEnteredSearchText('');dispatch(searchDefault())}}>{subcategory.code}</a></li>\r\n              })\r\n            }\r\n            <li className=\"uk-text-center\">\r\n                    <a onClick={(e) => {navigateTo(e, key);setEnteredSearchText('');dispatch(searchDefault())}} className=\"uk-link-muted uk-text-uppercase tm-link-to-all\"><span>entire range</span><span uk-icon=\"icon: chevron-right; ratio: .75;\"></span></a>\r\n                  </li>\r\n          </ul>\r\n        </li>\r\n      )\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div id=\"nav-offcanvas\" uk-offcanvas=\"overlay: true\">\r\n      <aside className=\"uk-offcanvas-bar uk-padding-remove\">\r\n        <div className=\"uk-card uk-card-default uk-card-small tm-shadow-remove\">\r\n          <header className=\"uk-card-header uk-flex uk-flex-middle\">\r\n            <div>\r\n              <a className=\"uk-link-muted uk-text-bold\" onClick={(e) => {e.preventDefault();setEnteredSearchText('')}}>Basic Kart</a>\r\n              {/* <div className=\"uk-text-xsmall uk-text-muted\" style={{ marginTop: \"-2px\" }}>\r\n                <div>Basic Kart</div>\r\n              </div> */}\r\n            </div>\r\n          </header>\r\n          <nav className=\"uk-card-small uk-card-body\">\r\n            <ul className=\"uk-nav-default uk-nav-parent-icon uk-list-divider\" uk-nav=\"true\">\r\n              {/* <li className=\"uk-parent\">\r\n                <a href=\"#\">Bindi</a>\r\n                <ul className=\"uk-nav-sub uk-list-divider\">\r\n                  <li><a href=\"bindi-category.html\">Fancy</a></li>\r\n                  <li><a href=\"bindi-category.html\">Bridal</a></li>\r\n                  <li><a href=\"bindi-category.html\">Stone</a></li>\r\n                  <li><a href=\"bindi-category.html\">Round</a></li>\r\n                  <li><a href=\"bindi-category.html\">Square</a></li>\r\n                  <li className=\"uk-text-center\">\r\n                    <a className=\"uk-link-muted uk-text-uppercase tm-link-to-all\" href=\"bindi-category.html\"><span>entire ranage</span><span uk-icon=\"icon: chevron-right; ratio: .75;\"></span></a>\r\n                  </li>\r\n                </ul>\r\n              </li> */}\r\n              {getCategoryAndSubCategory()}\r\n              <li><a onClick={()=> {history.push('/about');props.mobileNavigationRef.current?.click();setEnteredSearchText('')}}>About</a></li>\r\n              <li><a onClick={()=> {history.push('/contactus'); props.mobileNavigationRef.current?.click();setEnteredSearchText('')}}>Contact Us</a></li>\r\n            </ul>\r\n          </nav>\r\n          {/* <nav className=\"uk-card-body\">\r\n            <ul className=\"uk-iconnav uk-flex-center\">\r\n              <li><a href=\"#\" title=\"Facebook\" uk-icon=\"facebook\"></a></li>\r\n              <li><a href=\"#\" title=\"Twitter\" uk-icon=\"twitter\"></a></li>\r\n              <li><a href=\"#\" title=\"YouTube\" uk-icon=\"youtube\"></a></li>\r\n              <li><a href=\"#\" title=\"Instagram\" uk-icon=\"instagram\"></a></li>\r\n            </ul>\r\n          </nav> */}\r\n        </div>\r\n      </aside>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  MobileNavigation\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { SubProducts } from 'appConstants';\r\n\r\ninterface Props{\r\n  subProductToggle: Function;\r\n  addEditToggle: Function;\r\n}\r\n\r\nconst AdminNav: React.FunctionComponent<Props> = (props: Props) => {\r\n  const { subProductToggle, addEditToggle } = props;\r\n  const history = useHistory();\r\n  const [selectedTab, setSelectedTab] = useState(1);\r\n  const [isOnList, setIsOnList] = useState(true);\r\n\r\n  const {product, productId} = useParams();\r\n\r\n  useEffect(() => {\r\n    if(product == 'product' && productId){\r\n      setSelectedTab(SubProducts.PRODUCT)\r\n    }\r\n  },[product, productId])\r\n\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-1-4@m tm-aside-column\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\" uk-sticky=\"offset: 90; bottom: true; media: @m;\">\r\n        <div className=\"uk-card-header\">\r\n          <div className=\"uk-grid-small uk-flex-center\" uk-grid=\"true\">\r\n            <div>\r\n              <a className={`${isOnList? 'uk-button uk-button-default uk-button-small uk-active' : 'uk-button uk-button-default uk-button-small'}`}\r\n              onClick={() => {addEditToggle(false);setIsOnList(true); history.push('/admin')}}>\r\n                <span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: cog; ratio: .75;\"></span>\r\n                <span>List</span>\r\n              </a>\r\n            </div>\r\n            <div>\r\n              <button className={`${!isOnList? 'uk-button uk-button-default uk-button-small uk-active' : 'uk-button uk-button-default uk-button-small'}`}\r\n               title=\"Add\"\r\n                onClick={() => {addEditToggle(true); ;setIsOnList(false)}}\r\n                disabled={selectedTab === SubProducts.USERS || selectedTab === SubProducts.ORDERS}\r\n                >\r\n                <span uk-icon=\"icon: sign-out; ratio: .75;\"></span>\r\n                <span>Add</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <nav>\r\n            <ul className=\"uk-nav uk-nav-default tm-nav\">\r\n              <li className={`${selectedTab === SubProducts.USERS ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.USERS);setIsOnList(true);addEditToggle(false);setSelectedTab(SubProducts.USERS)}}>Users</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.ORDERS ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.ORDERS);setIsOnList(true);addEditToggle(false);setSelectedTab(SubProducts.ORDERS)}}>Orders</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.PRODUCT ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.PRODUCT);setSelectedTab(SubProducts.PRODUCT)}}>Products</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.SUB_PRODUCT ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.SUB_PRODUCT);setSelectedTab(SubProducts.SUB_PRODUCT)}}>Sub-Category</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.SIZE ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.SIZE);setSelectedTab(SubProducts.SIZE)}}>Size</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.COLOUR ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.COLOUR);setSelectedTab(SubProducts.COLOUR)}}>Colour</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.COUPONS ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.COUPONS);setSelectedTab(SubProducts.COUPONS)}}>Coupons</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.SHIPPER ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.SHIPPER);setSelectedTab(SubProducts.SHIPPER)}}>Shipper</a>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  AdminNav\r\n}","import React, { useEffect, useState } from 'react';\r\nimport DataTable, { IDataTableColumn } from 'react-data-table-component';\r\nimport { getColour, getSize, getSubCategory, getCoupon, getProducts, getShippers, getAllUser, AppState, getAdminOrderDataCsv, setAdminOrderCsvDefault } from 'reducers';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ProductColor, ProductSize, ProductCoupon, ProductSubCategory, Order, OrderShipper, User, ProductItem, AdminOrderDataCsv } from 'types';\r\nimport { SubProducts } from 'appConstants';\r\nimport { getAdminOrders } from 'reducers/Order';\r\nimport { countHighlightProducts, downloadCSV } from 'services';\r\n\r\ninterface Props {\r\n  productType: number;\r\n  productColumns: IDataTableColumn[];\r\n  ExpandableComponent?: React.FunctionComponent<any>;\r\n  stateData: ProductColor[] | ProductSize[] | ProductCoupon[] | ProductSubCategory[] | Order[] | OrderShipper[] | User[];\r\n  searchPlaceholder: string;\r\n  expandableRows: boolean;\r\n  sortByColumn?: string;\r\n  defaultSortAsc?: boolean;\r\n}\r\n\r\nconst AdminProductList: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [tabName, setTabName] = useState('');\r\n  const [isDownloadDone, setIsDownloadDone] = useState(true);\r\n  const productList = useSelector<AppState, ProductItem[]>(state => state.product.data || []);\r\n  const adminOrderDataCsv = useSelector<AppState, AdminOrderDataCsv[]>(state => state.adminOrderCsv.data || []);\r\n  const [tableData, setTableData] = useState<\r\n    ProductColor[] | ProductSize[] | ProductCoupon[] | ProductSubCategory[] | Order[] | OrderShipper[] | User[]\r\n  >([]);\r\n\r\n  let stateData: ProductColor[] | ProductSize[] | ProductCoupon[] | ProductSubCategory[] | Order[] | OrderShipper[] | User[] = [];\r\n  const columns = props.productColumns;\r\n\r\n  if (props.productType === SubProducts.COLOUR ||\r\n    props.productType === SubProducts.SIZE ||\r\n    props.productType === SubProducts.SUB_PRODUCT ||\r\n    props.productType === SubProducts.COUPONS ||\r\n    props.productType === SubProducts.PRODUCT ||\r\n    props.productType === SubProducts.ORDERS ||\r\n    props.productType === SubProducts.SHIPPER ||\r\n    props.productType === SubProducts.USERS) {\r\n    stateData = props.stateData\r\n  } else {\r\n    stateData = []\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.productType === SubProducts.COLOUR) {\r\n      dispatch(getColour());\r\n      setTabName('Colour');\r\n    } else if (props.productType === SubProducts.SIZE) {\r\n      dispatch(getSize());\r\n      setTabName('Size');\r\n    } else if (props.productType === SubProducts.SUB_PRODUCT) {\r\n      dispatch(getSubCategory());\r\n      setTabName('SubCategories');\r\n    } else if (props.productType === SubProducts.COUPONS) {\r\n      dispatch(getCoupon());\r\n      setTabName('Coupons');\r\n    } else if (props.productType === SubProducts.PRODUCT) {\r\n      dispatch(getProducts());\r\n      setTabName('Products');\r\n    } else if (props.productType === SubProducts.ORDERS) {\r\n      dispatch(getAdminOrders());\r\n      setTabName('Orders');\r\n    } else if (props.productType === SubProducts.SHIPPER) {\r\n      dispatch(getShippers());\r\n      setTabName('Shippers');\r\n    } else if (props.productType === SubProducts.USERS) {\r\n      dispatch(getAllUser());\r\n      setTabName('Users');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTableData(stateData || [])\r\n  }, [stateData]);\r\n\r\n  useEffect(() => {\r\n    if (stateData && stateData.length > 0) {\r\n      const data = (stateData as any[]).filter(({\r\n        value, code,\r\n        name, productCategoryName,\r\n        orderNumber, shipperName,\r\n        emailAddress, mobile, paymentMode }) => {\r\n        return (value && value.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (code && code.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (name && name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (productCategoryName && productCategoryName.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (orderNumber && orderNumber.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (shipperName && shipperName.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (emailAddress && emailAddress.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (mobile && mobile.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (paymentMode && paymentMode.toLowerCase().includes(searchTerm.toLowerCase()));\r\n      })\r\n      setTableData(data)\r\n    }\r\n  }, [searchTerm]);\r\n\r\n\r\n  const getOrdersCsvData = () => {\r\n    setIsDownloadDone(false);\r\n    dispatch(getAdminOrderDataCsv());\r\n  }\r\n  useEffect(() => {\r\n    if(!isDownloadDone && adminOrderDataCsv.length > 0){\r\n      downloadCSV(adminOrderDataCsv);\r\n      setIsDownloadDone(true);\r\n      dispatch(setAdminOrderCsvDefault())\r\n    }\r\n  },[JSON.stringify(adminOrderDataCsv)])\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n\r\n            <div className=\"asd\">\r\n              <DataTable\r\n                title={tabName}\r\n                columns={columns}\r\n                data={tableData}\r\n                defaultSortField={props.sortByColumn || \"code\"}\r\n                defaultSortAsc={props.defaultSortAsc !== undefined ? props.defaultSortAsc : true}\r\n                selectableRows={false}\r\n                selectableRowsNoSelectAll={false}\r\n                selectableRowsHighlight={true}\r\n                selectableRowsVisibleOnly={false}\r\n                expandableRows={props.expandableRows}\r\n                expandOnRowClicked={false}\r\n                expandableRowsComponent={props.ExpandableComponent && <props.ExpandableComponent />}\r\n                pagination={true}\r\n                highlightOnHover={true}\r\n                striped={true}\r\n                pointerOnHover={false}\r\n                dense={false}\r\n                noTableHead={false}\r\n                persistTableHead={true}\r\n                progressPending={false}\r\n                noHeader={false}\r\n                subHeader={true}\r\n                subHeaderComponent={\r\n                  (\r\n                    <div className=\"uk-grid-medium uk-child-width-1-1 uk-width-1-1\" uk-grid=\"true\">\r\n                      <div className={`${props.productType === SubProducts.ORDERS ? 'uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s' : 'uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s'}`} uk-grid=\"true\">\r\n                        {\r\n                          props.productType === SubProducts.ORDERS &&\r\n                          <>\r\n                            <div>\r\n                              <label>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: cart;\" /> : Shipped</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: check;\" /> : Delivered</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: plus-circle;\" /> : Return Accepted</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: lifesaver;\" /> : Payment Returned</span>\r\n\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"orange\" }} uk-icon=\"icon: history;\" /> : Return In Progress</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"red\" }} uk-icon=\"icon: minus-circle;\" /> : Return Declined</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"red\" }} uk-icon=\"icon: warning;\" /> : Payment Declined</span>\r\n                              </label>\r\n                            </div>\r\n                          </>\r\n                        }\r\n\r\n                        {\r\n                          props.expandableRows &&\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\"><span><span uk-icon=\"chevron-right\"></span>: Click in table for quick actions</span></div>\r\n                              {\r\n                                props.productType === SubProducts.PRODUCT &&\r\n                                <>\r\n                                  <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: bolt;\" /> : Trending ({countHighlightProducts(productList,true)})</span>\r\n                                  <span className=\"uk-form-label\"><span style={{ color: \"orange\" }} uk-icon=\"icon: star;\" /> : Latest ({countHighlightProducts(productList,false)})</span>\r\n                                </>\r\n                              }\r\n                            </label>\r\n                          </div>\r\n                        }\r\n                        {\r\n                          (!props.expandableRows && props.productType !== SubProducts.ORDERS) &&\r\n                          <div></div>\r\n                        }\r\n                        <div className=\"align-right\">\r\n                          <input className=\"uk-input uk-form-width-medium uk-form-small\" value={searchTerm} onChange={event => setSearchTerm(event.target.value)} type=\"text\" placeholder={props.searchPlaceholder} />\r\n                          {\r\n                            props.productType === SubProducts.ORDERS &&\r\n                            <span className=\"download-margin\" uk-icon=\"icon: cloud-download\"\r\n                          onClick={()=>getOrdersCsvData()}></span>\r\n                          }\r\n                          \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    // <div className=\"admin-search-header\">\r\n                    //   {\r\n                    //     props.expandableRows &&\r\n                    //     <div className=\"\">\r\n                    //       <div className=\"\">\r\n                    //         <span>Click <span uk-icon=\"chevron-right\"></span> in table for quick actions</span>\r\n                    //       </div>\r\n                    //     </div>\r\n                    //   }\r\n                    //   <div className=\"uk-float-right\">\r\n                    //     <input className=\"uk-input uk-form-width-medium uk-form-small\" value={searchTerm} onChange={event => setSearchTerm(event.target.value)} type=\"text\" placeholder={props.searchPlaceholder} />\r\n                    //   </div>\r\n                    //   <div>\r\n                    //     <div className=\"\"><span style={{ color: \"green\" }} uk-icon=\"icon: bolt;\" /> : Trending</div>\r\n\r\n\r\n                    //   </div>\r\n\r\n                    //   <div className=\"\">\r\n\r\n                    //     <span style={{ color: \"orange\" }} uk-icon=\"icon: star;\" /> : Latest\r\n                    //           </div>\r\n                    // </div>\r\n                  )\r\n                }\r\n                fixedHeader={true}\r\n                fixedHeaderScrollHeight=\"800px\"\r\n                direction={\"ltr\"}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport {\r\n  AdminProductList\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductColor } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateColour, Colour } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { code, value, colourId }: ProductColor = data;\r\n  const colourActionStatus = useSelector<AppState, Colour>(state => state.colour);\r\n\r\n  const colourQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      code,\r\n      value,\r\n      colourId\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (value: ProductColor) => {\r\n      dispatch(updateColour(value))\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={colourQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Colour Code</div>\r\n              <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                {...colourQuickViewFormik.getFieldProps('code')} />\r\n              {\r\n                colourQuickViewFormik.touched.code && colourQuickViewFormik.errors.code ? (\r\n                  <span className=\"uk-text-danger\">{colourQuickViewFormik.errors.code}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Colour Name</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...colourQuickViewFormik.getFieldProps('value')} />\r\n              {\r\n                colourQuickViewFormik.touched.value && colourQuickViewFormik.errors.value ? (\r\n                  <span className=\"uk-text-danger\">{colourQuickViewFormik.errors.value}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Colour Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  colourActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n        {colourQuickViewFormik.isSubmitting && <NotificationContainer {...colourActionStatus}/>}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst ColourList: React.FunctionComponent = () => {\r\n\r\n  const stateData = useSelector<AppState, ProductColor[]>(state => state.colour.data || []);  \r\n  const productColumns = [\r\n    {\r\n      name: 'ColourId',\r\n      selector: 'colourId',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Colour Code',\r\n      selector: 'code',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Colour Value',\r\n      selector: 'value',\r\n      sortable: true,\r\n    },\r\n  ]\r\n\r\n  return(\r\n    <AdminProductList \r\n      productColumns={productColumns} \r\n      productType={SubProducts.COLOUR} \r\n      ExpandableComponent= {ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Colour Value\"\r\n      expandableRows = {true}/>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport {\r\n  ColourList,\r\n  ExpandableComponent\r\n}","import React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, Colour, saveColour } from 'reducers';\r\nimport { ProductColor } from 'types';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst ProductColour: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const colourFormik = useFormik({\r\n    initialValues: {\r\n      code: '',\r\n      value: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (values: ProductColor) => {\r\n      dispatch(saveColour(values));\r\n    }\r\n  });\r\n  const colourActionStatus = useSelector<AppState, Colour>(state => state.colour);\r\n  useEffect(() => {\r\n    if (colourActionStatus._isSuccess) {\r\n      colourFormik.resetForm();\r\n    }\r\n  }, [colourActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={colourFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Colour</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Colour Code</div>\r\n                      <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                        {...colourFormik.getFieldProps('code')} />\r\n                      {\r\n                        colourFormik.touched.code && colourFormik.errors.code ? (\r\n                          <span className=\"uk-text-danger\">{colourFormik.errors.code}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Colour Name</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...colourFormik.getFieldProps('value')} />\r\n                      {\r\n                        colourFormik.touched.value && colourFormik.errors.value ? (\r\n                          <span className=\"uk-text-danger\">{colourFormik.errors.value}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...colourActionStatus}/>\r\n          <button disabled={colourActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              colourActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductColour\r\n}","import React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, addUpdateSize , Size } from 'reducers';\r\nimport { ProductSize as ProductSizeType } from 'types';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\n\r\nconst ProductSize: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const sizeFormik = useFormik({\r\n    initialValues: {\r\n      code: '',\r\n      value: '',\r\n      productCategory: 1,\r\n      sizeId: '0'\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required'),\r\n      productCategory: Yup.number().required('Required')\r\n    }),\r\n    onSubmit: (values: ProductSizeType) => {\r\n      dispatch(addUpdateSize (values));\r\n    }\r\n  });\r\n  const sizeActionStatus = useSelector<AppState, Size>(state => state.size);\r\n  useEffect(() => {\r\n    if (sizeActionStatus._isSuccess) {\r\n      sizeFormik.resetForm();\r\n    }\r\n  }, [sizeActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={sizeFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Size</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n                <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Product Category</div>\r\n                      <select className=\"uk-select\" id=\"productCategory\"\r\n                        {...sizeFormik.getFieldProps('productCategory')}>\r\n                          <option key='1' value={1}>Lingerie</option>\r\n                          <option key='2' value={2}>Footwear</option>\r\n                          <option key='3' value={3}>Bindi</option>\r\n                          <option key='4' value={8}>Home Essential</option>\r\n                          <option key='5' value={9}>Cosmetics</option>\r\n                          <option key='6' value={10}>Fashion Accessories</option>\r\n                        </select>\r\n                      {\r\n                        sizeFormik.touched.productCategory && sizeFormik.errors.productCategory ? (\r\n                          <span className=\"uk-text-danger\">{sizeFormik.errors.productCategory}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Size Code</div>\r\n                      <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                        {...sizeFormik.getFieldProps('code')} />\r\n                      {\r\n                        sizeFormik.touched.code && sizeFormik.errors.code ? (\r\n                          <span className=\"uk-text-danger\">{sizeFormik.errors.code}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Size Value</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...sizeFormik.getFieldProps('value')} />\r\n                      {\r\n                        sizeFormik.touched.value && sizeFormik.errors.value ? (\r\n                          <span className=\"uk-text-danger\">{sizeFormik.errors.value}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...sizeActionStatus}/>\r\n          <button disabled={sizeActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              sizeActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductSize\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductSize } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateColour, Colour, addUpdateSize, Size } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst SizeList: React.FunctionComponent = () => {\r\n\r\n  const stateData = useSelector<AppState, ProductSize[]>(state => state.size.data || []);\r\n  const productColumns = [\r\n    {\r\n      name: 'SizeId',\r\n      selector: 'sizeId',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Product Category',\r\n      selector: 'productCategoryName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Size Code',\r\n      selector: 'code',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Size Value',\r\n      selector: 'value',\r\n      sortable: true,\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.SIZE}\r\n      ExpandableComponent={ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Size Value\"\r\n      expandableRows={true} />\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { code, value, sizeId, productCategory }: ProductSize = data;\r\n  const sizeActionStatus = useSelector<AppState, Size>(state => state.size);\r\n\r\n  const sizeQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      code,\r\n      value,\r\n      sizeId,\r\n      productCategory,\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required'),\r\n      productCategory: Yup.number().required('Required')\r\n    }),\r\n    onSubmit: (value: ProductSize) => {\r\n      dispatch(addUpdateSize(value))\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={sizeQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Product Category</div>\r\n              <select className=\"uk-select\" id=\"productCategory\"\r\n                {...sizeQuickViewFormik.getFieldProps('productCategory')}>\r\n                <option key='1' value={1}>Lingerie</option>\r\n                <option key='2' value={2}>Footwear</option>\r\n                <option key='3' value={3}>Bindi</option>\r\n                <option key='4' value={8}>Home Essential</option>\r\n                <option key='5' value={9}>Cosmetics</option>\r\n                <option key='6' value={10}>Fashion Accessories</option>\r\n              </select>\r\n              {\r\n                sizeQuickViewFormik.touched.productCategory && sizeQuickViewFormik.errors.productCategory ? (\r\n                  <span className=\"uk-text-danger\">{sizeQuickViewFormik.errors.productCategory}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Size Code</div>\r\n              <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                {...sizeQuickViewFormik.getFieldProps('code')} />\r\n              {\r\n                sizeQuickViewFormik.touched.code && sizeQuickViewFormik.errors.code ? (\r\n                  <span className=\"uk-text-danger\">{sizeQuickViewFormik.errors.code}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Size Value</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...sizeQuickViewFormik.getFieldProps('value')} />\r\n              {\r\n                sizeQuickViewFormik.touched.value && sizeQuickViewFormik.errors.value ? (\r\n                  <span className=\"uk-text-danger\">{sizeQuickViewFormik.errors.value}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Size Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  sizeActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n          {sizeQuickViewFormik.isSubmitting && <NotificationContainer {...sizeActionStatus} />}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  SizeList,\r\n  ExpandableComponent\r\n}","import React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, addUpdateSize, Size, addUpdateSubCategory, SubCategory } from 'reducers';\r\nimport { ProductSubCategory as ProductSubCategoryType } from 'types';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\n\r\nconst ProductSubCategory: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const subCategoryFormik = useFormik({\r\n    initialValues: {\r\n      code: '',\r\n      value: '',\r\n      productCategoryId: 0,\r\n      subCategoryId: '0'\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required'),\r\n      productCategoryId: Yup.number().required('Required').moreThan(0, 'Required')\r\n    }),\r\n    onSubmit: (values: ProductSubCategoryType) => {\r\n      dispatch(addUpdateSubCategory(values));\r\n    }\r\n  });\r\n  const subCategoryActionStatus = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  useEffect(() => {\r\n    if (subCategoryActionStatus._isSuccess) {\r\n      subCategoryFormik.resetForm();\r\n    }\r\n  }, [subCategoryActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={subCategoryFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">SubCategory</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Product Category</div>\r\n                      <select className=\"uk-select\" id=\"productCategoryId\"\r\n                        {...subCategoryFormik.getFieldProps('productCategoryId')}>\r\n                        <option key='0' value={0}>Select</option>\r\n                        <option key='1' value={1}>Lingerie</option>\r\n                        <option key='2' value={2}>Footwear</option>\r\n                        <option key='3' value={3}>Bindi</option>\r\n                        <option key='4' value={8}>Home Essential</option>\r\n                        <option key='5' value={9}>Cosmetics</option>\r\n                        <option key='6' value={10}>Fashion Accessories</option>\r\n                      </select>\r\n                      {\r\n                        subCategoryFormik.touched.productCategoryId && subCategoryFormik.errors.productCategoryId ? (\r\n                          <span className=\"uk-text-danger\">{subCategoryFormik.errors.productCategoryId}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">SubCategory Name</div>\r\n                      <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                        {...subCategoryFormik.getFieldProps('code')} />\r\n                      {\r\n                        subCategoryFormik.touched.code && subCategoryFormik.errors.code ? (\r\n                          <span className=\"uk-text-danger\">{subCategoryFormik.errors.code}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">SubCategory Description</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...subCategoryFormik.getFieldProps('value')} />\r\n                      {\r\n                        subCategoryFormik.touched.value && subCategoryFormik.errors.value ? (\r\n                          <span className=\"uk-text-danger\">{subCategoryFormik.errors.value}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...subCategoryActionStatus} />\r\n          <button disabled={subCategoryActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              subCategoryActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductSubCategory\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductSubCategory } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateColour, Colour, addUpdateSize, Size, SubCategory, addUpdateSubCategory } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst SubCategoryList: React.FunctionComponent = () => {\r\n\r\n  const stateData = useSelector<AppState, ProductSubCategory[]>(state => state.subCategory.data || []);\r\n  const productColumns = [\r\n    {\r\n      name: 'SubCategoryId',\r\n      selector: 'subCategoryId',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Product Category',\r\n      selector: 'productCategoryName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Product CategoryID',\r\n      selector: 'productCategoryId',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Subcategory',\r\n      selector: 'code',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Subcategory Description',\r\n      selector: 'value',\r\n      sortable: true,\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.SUB_PRODUCT}\r\n      ExpandableComponent={ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Subcategory Value\"\r\n      expandableRows={true} />\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { code, value, subCategoryId, productCategoryId }: ProductSubCategory = data;\r\n  const subCategoryActionStatus = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n\r\n  const subCategoryQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      code,\r\n      value,\r\n      subCategoryId,\r\n      productCategoryId\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required'),\r\n      productCategoryId: Yup.number().required('Required')\r\n    }),\r\n    onSubmit: (value: ProductSubCategory) => {\r\n      dispatch(addUpdateSubCategory(value))\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={subCategoryQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Product Category</div>\r\n              <select className=\"uk-select\" id=\"productCategoryId\"\r\n                {...subCategoryQuickViewFormik.getFieldProps('productCategoryId')}>\r\n                <option key='1' value={1}>Lingerie</option>\r\n                <option key='2' value={2}>Footwear</option>\r\n                <option key='3' value={3}>Bindi</option>\r\n                <option key='4' value={8}>Home Essential</option>\r\n                <option key='5' value={9}>Cosmetics</option>\r\n                <option key='6' value={10}>Fashion Accessories</option>\r\n              </select>\r\n              {\r\n                subCategoryQuickViewFormik.touched.productCategoryId && subCategoryQuickViewFormik.errors.productCategoryId ? (\r\n                  <span className=\"uk-text-danger\">{subCategoryQuickViewFormik.errors.productCategoryId}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">SubCategory Name</div>\r\n              <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                {...subCategoryQuickViewFormik.getFieldProps('code')} />\r\n              {\r\n                subCategoryQuickViewFormik.touched.code && subCategoryQuickViewFormik.errors.code ? (\r\n                  <span className=\"uk-text-danger\">{subCategoryQuickViewFormik.errors.code}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">SubCategory Description</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...subCategoryQuickViewFormik.getFieldProps('value')} />\r\n              {\r\n                subCategoryQuickViewFormik.touched.value && subCategoryQuickViewFormik.errors.value ? (\r\n                  <span className=\"uk-text-danger\">{subCategoryQuickViewFormik.errors.value}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">SubCategory Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  subCategoryActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n          {subCategoryQuickViewFormik.isSubmitting && <NotificationContainer {...subCategoryActionStatus} />}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  SubCategoryList,\r\n  ExpandableComponent\r\n}","import React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, Coupon, saveCoupon } from 'reducers';\r\nimport { ProductCoupon as ProductCouponType } from 'types';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst ProductCoupon: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const couponFormik = useFormik({\r\n    initialValues: {\r\n      code: '',\r\n      value: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (values: ProductCouponType) => {\r\n      dispatch(saveCoupon(values));\r\n    }\r\n  });\r\n  const couponActionStatus = useSelector<AppState, Coupon>(state => state.coupon);\r\n  useEffect(() => {\r\n    if (couponActionStatus._isSuccess) {\r\n      couponFormik.resetForm();\r\n    }\r\n  }, [couponActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={couponFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Coupon</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Coupon Code</div>\r\n                      <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                        {...couponFormik.getFieldProps('code')} />\r\n                      {\r\n                        couponFormik.touched.code && couponFormik.errors.code ? (\r\n                          <span className=\"uk-text-danger\">{couponFormik.errors.code}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Discount Percentage</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...couponFormik.getFieldProps('value')} />\r\n                      {\r\n                        couponFormik.touched.value && couponFormik.errors.value ? (\r\n                          <span className=\"uk-text-danger\">{couponFormik.errors.value}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...couponActionStatus}/>\r\n          <button disabled={couponActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              couponActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductCoupon\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductCoupon } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateCoupon, Coupon } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst CouponList: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const deleteCoupon = (couponId:  number, code:string, value:string) => {\r\n    const input = window.confirm('Sure want to delete?');\r\n    if(input)dispatch(updateCoupon({couponId,value,code},true));\r\n  } \r\n  const stateData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);  \r\n  const productColumns = [\r\n    {\r\n      name: 'CouponId',\r\n      selector: 'couponId',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Coupon Code',\r\n      selector: 'code',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Coupon Value',\r\n      selector: 'value',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Delete',\r\n      sortable: false,\r\n      cell: (row: { couponId: number, code: string, value: string }) => {\r\n        return  <button type=\"submit\" className=\"uk-button-small uk-button-danger\" onClick={() => deleteCoupon(row.couponId, row.value, row.code)}>\r\n                   <span>Delete</span>\r\n                </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return(\r\n    <AdminProductList \r\n      productColumns={productColumns} \r\n      productType={SubProducts.COUPONS} \r\n      ExpandableComponent= {ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Coupon Code\"\r\n      expandableRows = {true}/>\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { code, value, couponId }: ProductCoupon = data;\r\n  const couponActionStatus = useSelector<AppState, Coupon>(state => state.coupon);\r\n\r\n  const couponQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      code,\r\n      value,\r\n      couponId\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (value: ProductCoupon) => {\r\n      dispatch(updateCoupon(value));\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={couponQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Coupon Code</div>\r\n              <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                {...couponQuickViewFormik.getFieldProps('code')} />\r\n              {\r\n                couponQuickViewFormik.touched.code && couponQuickViewFormik.errors.code ? (\r\n                  <span className=\"uk-text-danger\">{couponQuickViewFormik.errors.code}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Discount Percentage</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...couponQuickViewFormik.getFieldProps('value')} />\r\n              {\r\n                couponQuickViewFormik.touched.value && couponQuickViewFormik.errors.value ? (\r\n                  <span className=\"uk-text-danger\">{couponQuickViewFormik.errors.value}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Coupon Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  couponActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n        {couponQuickViewFormik.isSubmitting && <NotificationContainer {...couponActionStatus}/>}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  CouponList,\r\n  ExpandableComponent\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport {\r\n  AppState, SubCategory, getSubCategory, getSize, getColour, Size,\r\n  Colour, Product, addUpdateProduct, setDefaulState, getProduct\r\n} from 'reducers';\r\nimport { ProductSubCategory, ProductSize, ProductItem as ProductItemType, sizeColourQuantityComboObject } from 'types';\r\nimport { scaledServerImagePath, SubCategories } from 'appConstants';\r\nimport { filterSubcategories } from 'services';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst ProductItem: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [sizeColourQuantity, setSizeColourQuantity] = useState<sizeColourQuantityComboObject[]>([]);\r\n  const [selectedSizes, setSelectedSizes] = useState<Array<string>>([]);\r\n  const [sizeColourQuantityErrorMessage, setSizeColourQuantityErrorMessage] = useState('')\r\n\r\n  const {\r\n    name, description, productCategoryId,\r\n    subCategory, quantity, productDetailId,\r\n    priceINR, priceUSD, productId, productCategoryName,\r\n    sizeId, colourId, imageNames, imagePaths, size, colour, sizeColourQuantityCombo\r\n  } = useSelector<AppState, ProductItemType>(state => state.product.singleData || {} as ProductItemType)\r\n\r\n  const checkForProductCategory = (subCategory: string) => {\r\n    const filteredKey = Object.keys(SubCategories).filter((key) => key === subCategory);\r\n    if (filteredKey[0]) {\r\n      return Number(SubCategories[filteredKey[0]])\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  const productItemFormik = useFormik({\r\n    initialValues: {\r\n      name: name || '',\r\n      description: description || '',\r\n      productCategoryId: productCategoryId || productCategoryName ? checkForProductCategory(productCategoryName || '') : 0,\r\n      subCategory: subCategory || 0,\r\n      size: sizeId ? sizeId.toString() : '0',\r\n      colour: colourId ? colourId.toString() : '',\r\n      quantity: quantity || '',\r\n      priceINR: priceINR ? priceINR.split(',')[0] : '',\r\n      priceUSD: priceUSD ? priceUSD.split(',')[0] : '',\r\n      productImageBlob: null,\r\n      productId: productId || '0',\r\n      deletedImagePath: [],\r\n      updatedImageName: [],\r\n      code: '',\r\n      value: '',\r\n      imagePaths: imagePaths || '',\r\n      imageNames: imageNames || '',\r\n      adminProductCombo: sizeId ? sizeId.split(',').length : 1,\r\n      deletedProductDetailIds: [],\r\n      productDetailIdArray: productDetailId ? productDetailId.split(',') : [],\r\n    },\r\n    validationSchema: Yup.object({\r\n      name: Yup.string().required('Required'),\r\n      description: Yup.string().required('Required'),\r\n      productCategoryId: Yup.number().required('Required').moreThan(0, 'Required'),\r\n      subCategory: Yup.number().required('Required').moreThan(0, 'Required'),\r\n      //size: Yup.string().required('Required').matches(/[^0]/, 'Required'),\r\n      //colour: Yup.string().required('Required'),\r\n      // quantity: Yup.string().required('Required'),\r\n      priceINR: Yup.string().required('Required'),\r\n      priceUSD: Yup.string().required('Required'),\r\n      // productImageBlob: Yup.mixed().required('Required'),\r\n    }),\r\n    onSubmit: (values: ProductItemType) => {\r\n      if(sizeColourQuantity.length === 0  || sizeColourQuantity.some((item) => Object.keys(item).length < 3)){\r\n        setSizeColourQuantityErrorMessage('Please enter data for all the row(s)');\r\n        setTimeout(()=>{\r\n          setSizeColourQuantityErrorMessage('');\r\n        },3000);\r\n      }else {\r\n        dispatch(addUpdateProduct(values, 0, sizeColourQuantity));\r\n      }\r\n    },\r\n    enableReinitialize: true\r\n  });\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const productSize = useSelector<AppState, Size>(state => state.size);\r\n  const productColour = useSelector<AppState, Colour>(state => state.colour);\r\n  const productActionStatus = useSelector<AppState, Product>(state => state.product);\r\n  useEffect(() => {\r\n    dispatch(getSubCategory());\r\n    dispatch(getSize());\r\n    dispatch(getColour());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (productActionStatus._isSuccess) {\r\n      setTimeout(()=>{\r\n        dispatch(setDefaulState());\r\n      productItemFormik.resetForm();\r\n      setSizeColourQuantity([]);\r\n      history.push(\"/admin\");\r\n      },2000)\r\n    }\r\n  }, [productActionStatus._isSuccess]);\r\n\r\n  useEffect(() => {\r\n    if(sizeId && colourId && quantity && sizeId.length > 0){\r\n      const sizeArray = sizeId.split(',');\r\n      const colourArray = colourId.split(',');\r\n      const quantityArray = quantity.split(',');\r\n\r\n      const editSizeColourQuantityCombo : sizeColourQuantityComboObject[] = sizeArray.map((sizeItem, index) => {\r\n        return {\r\n          size: sizeItem,\r\n          colour: colourArray[index],\r\n          quantity: quantityArray[index]\r\n        }\r\n      });\r\n\r\n      setSizeColourQuantity(editSizeColourQuantityCombo);\r\n      setSelectedSizes(sizeArray);\r\n    }\r\n  },[sizeId, colourId, quantity])\r\n\r\n  const filteredSubcategories: ProductSubCategory[] = filterSubcategories(subCategories, productItemFormik.values.productCategoryId);\r\n\r\n  const filteredProductSize: ProductSize[] = (productSize.data &&\r\n    productSize.data.filter((size) => {\r\n      return size.productCategory === Number(productItemFormik.values.productCategoryId)\r\n    })) || [];\r\n\r\n  const checkForMaxFileUpload = (files: FileList | null) => {\r\n    let currentNumberOfFile = 0;\r\n    if (productItemFormik.values.productId !== '0' && productItemFormik.values.imagePaths) {\r\n      currentNumberOfFile += productItemFormik.values.imagePaths.split(', ').length;\r\n    }\r\n    if (files && Array.from(productItemFormik.values.productImageBlob || []).length + currentNumberOfFile !== 5) {\r\n      const currentFiles = Array.from(productItemFormik.values.productImageBlob || []);\r\n      let filesArray = Array.from(files);\r\n      filesArray.splice(5 - (currentFiles.length + currentNumberOfFile), filesArray.length - 1);\r\n      productItemFormik.setFieldValue(\"productImageBlob\", [...currentFiles, ...filesArray]);\r\n    }\r\n  };\r\n\r\n  const removeImage = (name: string) => {\r\n    const productImageBlob = Array.from(productItemFormik.values.productImageBlob || []);\r\n    productItemFormik.setFieldValue(\"productImageBlob\",\r\n      productImageBlob.filter((img: File) => {\r\n        return img.name != name\r\n      })\r\n    )\r\n  };\r\n\r\n  const removeCurrentImage = (name: string, path: string) => {\r\n    if (productItemFormik.values.deletedImagePath && productItemFormik.values.imagePaths && productItemFormik.values.imageNames) {\r\n      productItemFormik.setFieldValue(\"deletedImagePath\", [...productItemFormik.values.deletedImagePath, path]);\r\n      productItemFormik.setFieldValue(\"imagePaths\",\r\n        productItemFormik.values.imagePaths.split(',').filter((imagePath) => imagePath != path).join(',')\r\n      );\r\n      productItemFormik.setFieldValue(\"imageNames\",\r\n        productItemFormik.values.imageNames.split(',').filter((imageName) => imageName != name).join(',')\r\n      )\r\n    }\r\n  };\r\n\r\n  const getFileNameAndPath = (fileName?: string, filePath?: string) => {\r\n    if (fileName && filePath && fileName.length > 0 && filePath.length > 0) {\r\n      const fileNames = fileName.split(',');\r\n      const filePaths = filePath.split(',');\r\n\r\n      return filePaths.map((path: string, index: number) => {\r\n        return <div key={index} className=\"uk-inline product-uploader-container\">\r\n          <img key={index} src={scaledServerImagePath + path} alt={fileNames[index]} />\r\n          <div className=\"uk-overlay-primary uk-position-cover\">\r\n            <div className=\"uk-position-center\">\r\n              <span uk-icon=\"icon: close\" onClick={() => removeCurrentImage(fileNames[index], path)} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      })\r\n    }\r\n  }\r\n\r\n  const addProductComboLength = () => {\r\n    const availableSizes = filteredProductSize.filter(({sizeId}) => selectedSizes.indexOf(sizeId?.toString() || '') === -1);\r\n    if(availableSizes.length > 0 && productItemFormik.values.adminProductCombo){\r\n      productItemFormik.setFieldValue('adminProductCombo', \r\n      productItemFormik.values.adminProductCombo + 1)\r\n    } else if(availableSizes.length === 0){\r\n      setSizeColourQuantityErrorMessage('No more sizes available');\r\n      setTimeout(()=>{\r\n        setSizeColourQuantityErrorMessage('');\r\n      },3000);\r\n    }\r\n  }\r\n\r\n  const reduceProductComboLength = (index: number) => {\r\n    if(productItemFormik.values.deletedProductDetailIds && productItemFormik.values.productDetailIdArray){\r\n      productItemFormik.setFieldValue('deletedProductDetailIds', \r\n      [...productItemFormik.values.deletedProductDetailIds,productItemFormik.values.productDetailIdArray[index]])\r\n    }\r\n    selectedSizes.splice(index,1);\r\n    sizeColourQuantity.splice(index,1);\r\n    const newPDArray = [...productItemFormik.values.productDetailIdArray];\r\n    newPDArray.splice(index,1)\r\n    productItemFormik.setFieldValue('productDetailIdArray', [...newPDArray]);\r\n    setSelectedSizes([...selectedSizes]);\r\n    setSizeColourQuantity([...sizeColourQuantity]);\r\n    if(productItemFormik.values.adminProductCombo && productItemFormik.values.adminProductCombo > 1) {\r\n      productItemFormik.setFieldValue('adminProductCombo', \r\n      productItemFormik.values.adminProductCombo - 1)\r\n    }\r\n  }\r\n\r\n  const updatedSizeColourQuantityArray = (index: number, field: string, value: string) => {\r\n    // let currentItem = productItemFormik.values.sizeColourQuantityCombo || [];\r\n    let currentItem  = [...sizeColourQuantity] as sizeColourQuantityComboObject[];\r\n    if(!currentItem[index]){\r\n      currentItem[index] = {} as sizeColourQuantityComboObject\r\n    }\r\n        if(field === 'size') {\r\n          if(currentItem[index].size){\r\n            selectedSizes.splice(selectedSizes.indexOf(value), 1);\r\n          }\r\n            currentItem[index].size = value;\r\n            setSelectedSizes([...selectedSizes, value]);\r\n        } else if (field === 'colour') {\r\n          currentItem[index].colour = value;\r\n          // currentItem.forEach((item) => item.colour = value);\r\n        } else if (field === 'quantity') {\r\n          currentItem[index].quantity = value;\r\n        }\r\n\r\n        if(currentItem.length> 1){\r\n          if(field === 'colour'){\r\n            currentItem.forEach((item) => item.colour = value);\r\n          } else {\r\n            currentItem.forEach((item) => item.colour = currentItem[0].colour);\r\n          }\r\n        }\r\n\r\n        if(productItemFormik.values.productDetailIdArray[index]){\r\n          currentItem[index].productDetailId  = productItemFormik.values.productDetailIdArray[index];\r\n        } else {\r\n          currentItem[index].productDetailId = '0'\r\n        }\r\n      setSizeColourQuantity(currentItem);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={productItemFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Product</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Name</div>\r\n                      <input className=\"uk-input \" id=\"name\" type=\"input\"\r\n                        {...productItemFormik.getFieldProps('name')} />\r\n                      {\r\n                        productItemFormik.touched.name && productItemFormik.errors.name ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.name}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Description</div>\r\n                      <textarea className=\"uk-textarea\" id=\"description\" cols={30}\r\n                        {...productItemFormik.getFieldProps('description')} />\r\n                      {\r\n                        productItemFormik.touched.description && productItemFormik.errors.description ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.description}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Product Category</div>\r\n                      <select className=\"uk-select\" id=\"productCategoryId\"\r\n                        onChange={(e) => { productItemFormik.handleChange(e); productItemFormik.setFieldValue('subCategory', 0); setSizeColourQuantity([]); setSelectedSizes([]); productItemFormik.setFieldValue('adminProductCombo',1)}}\r\n                        onBlur={productItemFormik.handleBlur}\r\n                        value={productItemFormik.values.productCategoryId}\r\n                      >\r\n                        {/* {...productItemFormik.getFieldProps('productCategoryId')} */}\r\n                        <option key='0' value={0}>Select</option>\r\n                        <option key='1' value={1}>Lingerie</option>\r\n                        <option key='2' value={2}>Footwear</option>\r\n                        <option key='3' value={3}>Bindi</option>\r\n                        <option key='4' value={8}>Home Essential</option>\r\n                        <option key='5' value={9}>Cosmetics</option>\r\n                        <option key='6' value={10}>Fashion Accessories</option>\r\n                      </select>\r\n                      {\r\n                        productItemFormik.touched.productCategoryId && productItemFormik.errors.productCategoryId ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.productCategoryId}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">SubCategory</div>\r\n                      <select className=\"uk-select\" id=\"subCategory\"\r\n                        onChange={(e) => { productItemFormik.handleChange(e)}} // productItemFormik.setFieldValue('size', 0) \r\n                        onBlur={productItemFormik.handleBlur}\r\n                        value={productItemFormik.values.subCategory}>\r\n                        <option key='0' value={0}>Select</option>\r\n                        {\r\n                          filteredSubcategories.map((subCategory, index) => {\r\n                            return <option key={index} value={subCategory.subCategoryId}>{subCategory.code}</option>\r\n                          })\r\n                        }\r\n                      </select>\r\n                      {\r\n                        productItemFormik.touched.subCategory && productItemFormik.errors.subCategory ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.subCategory}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-placeholder uk-text-center\">\r\n                  {\r\n                    Array(productItemFormik.values.adminProductCombo).fill(1).map((value, index) => {\r\n                      return (\r\n                        <div key={index} className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\">Size</div>\r\n                              <select className=\"uk-select\" id=\"size\"  \r\n                              value = {sizeColourQuantity[index] ? sizeColourQuantity[index].size : 0}\r\n                              onChange={(e) => {updatedSizeColourQuantityArray(index, 'size', e.currentTarget.value)}}>\r\n                                {/* {...productItemFormik.getFieldProps('size')}> */}\r\n                                <option key='0' value={0}>Select</option>\r\n                                {\r\n                                  filteredProductSize.filter((size) => {\r\n                                    return size.sizeId && index === selectedSizes.indexOf(size.sizeId.toString()) ? true : size.sizeId && selectedSizes.indexOf(size.sizeId.toString()) === -1\r\n                                           \r\n                                  })\r\n                                    .map((size, index) => {\r\n                                    return <option key={index} value={size.sizeId} >{size.value}</option>\r\n                                  })\r\n                                }\r\n                              </select>\r\n                              {/* {\r\n                                productItemFormik.touched.size && productItemFormik.errors.size ? (\r\n                                  <span className=\"uk-text-danger\">{productItemFormik.errors.size}</span>\r\n                                ) : ''\r\n                              } */}\r\n                            </label>\r\n                          </div>\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\">Colour</div>\r\n                              <select className=\"uk-select\" id=\"colour\" \r\n                              value={sizeColourQuantity && sizeColourQuantity[0] && sizeColourQuantity[0].colour || '0'}\r\n                              onChange={(e) => {updatedSizeColourQuantityArray(index, 'colour', e.currentTarget.value)}}>\r\n                                {/* {...productItemFormik.getFieldProps('colour')}> */}\r\n                                <option key='0' value={0}>Select</option>\r\n                                {\r\n                                  Array.isArray(productColour.data) &&\r\n                                  productColour.data.map((colour, index) => {\r\n                                    return <option key={index} value={colour.colourId}>{colour.value}</option>\r\n                                  })\r\n                                }\r\n                              </select>\r\n                            </label>\r\n                          </div>\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\">Quantity</div>\r\n                              <input className=\"uk-input \" id=\"quantity\" type=\"number\"\r\n                              value ={sizeColourQuantity[index] ? sizeColourQuantity[index].quantity : ''}\r\n                              onChange={(e) => {updatedSizeColourQuantityArray(index, 'quantity', e.currentTarget.value)}}/>\r\n                                {/* {...productItemFormik.getFieldProps('quantity')} /> */}\r\n                              {/* {\r\n                                productItemFormik.touched.quantity && productItemFormik.errors.quantity ? (\r\n                                  <span className=\"uk-text-danger\">{productItemFormik.errors.quantity}</span>\r\n                                ) : ''\r\n                              } */}\r\n                            </label>\r\n                          </div>\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\"></div>\r\n                              <button disabled={productItemFormik.values.adminProductCombo === 1} className=\"uk-button uk-button-danger admin-add-more-combo\" onClick={() => reduceProductComboLength(index)}>Delete</button>\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    })\r\n                  }\r\n                  <div className=\"uk-nav-center admin-add-more-combo\">\r\n                  <span className=\"uk-text-danger \">{sizeColourQuantityErrorMessage}</span>\r\n                  </div>\r\n                  \r\n                  <button className=\"uk-button uk-button-primary\" disabled={sizeColourQuantity.length === 0 || sizeColourQuantity.length !== productItemFormik.values.adminProductCombo  } onClick={(e) => {e.preventDefault(); addProductComboLength()}}>Add More</button>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Price INR</div>\r\n                      <input className=\"uk-input \" id=\"priceINR\" type=\"input\"\r\n                        {...productItemFormik.getFieldProps('priceINR')} />\r\n                      {\r\n                        productItemFormik.touched.priceINR && productItemFormik.errors.priceINR ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.priceINR}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Price USD</div>\r\n                      <input className=\"uk-input \" id=\"priceUSD\" type=\"input\"\r\n                        {...productItemFormik.getFieldProps('priceUSD')} />\r\n                      {\r\n                        productItemFormik.touched.priceUSD && productItemFormik.errors.priceUSD ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.priceUSD}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                  <label id=\"product-upload\" htmlFor=\"productImageBlob\" className=\"uk-placeholder uk-text-center\">\r\n                    <span className=\"upload-icon-margin\" uk-icon=\"icon: cloud-upload; ratio: 1.25;\" />\r\n                     Click this banner to upload the images <input id=\"productImageBlob\" type=\"file\" multiple={true}\r\n                      onChange={(event) => { checkForMaxFileUpload(event.currentTarget.files) }} />\r\n                    {\r\n                      productItemFormik.touched.productImageBlob && productItemFormik.errors.productImageBlob ? (\r\n                        <span className=\"uk-text-danger\">{productItemFormik.errors.productImageBlob}</span>\r\n                      ) : ''\r\n                    }\r\n                  </label>\r\n                </div>\r\n              </fieldset>\r\n              {\r\n                 productItemFormik.values.productId !== '0' &&\r\n                 <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-form-label\">Current Images</div>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-5@s\" uk-grid=\"true\">\r\n\r\n                  {\r\n                    getFileNameAndPath(productItemFormik.values.imageNames, productItemFormik.values.imagePaths)\r\n                  }\r\n                  {/* {\r\n                      productItemFormik.values.imagePaths &&\r\n                      productItemFormik.values.imagePaths.split(',').map((path, i) => {\r\n                      return <div className=\"uk-inline product-uploader-container\">\r\n                      <img key={i} src={apiServerHost+path} alt={file.name} />\r\n                      <div className=\"uk-overlay-primary uk-position-cover\">\r\n                        <div className=\"uk-position-center\">\r\n                          <span uk-icon=\"icon: close\" onClick={() => removeImage(file.name)}/>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                     })\r\n                    [].map.call(productItemFormik.values.imagePaths, (file: any, i) => {\r\n                      return <div className=\"uk-inline product-uploader-container\">\r\n                        <img key={i} src={URL.createObjectURL(file)} alt={file.name} />\r\n                        <div className=\"uk-overlay-primary uk-position-cover\">\r\n                          <div className=\"uk-position-center\">\r\n                            <span uk-icon=\"icon: close\" onClick={() => removeImage(file.name)}/>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    }) */}\r\n\r\n                  {/* <img src={'http://127.0.0.1:5000/images/1c508610-eee5-4360-8f76-f0e70fa5ca92.png'} alt={\"a\"} /> */}\r\n                </div>\r\n              </fieldset>\r\n              }\r\n              \r\n              {\r\n                <fieldset className=\"uk-fieldset\">\r\n                  <div className=\"uk-form-label\">New Images</div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-5@s\" uk-grid=\"true\">\r\n                    {/* <div> */}\r\n                    {/* <label> */}\r\n                    {productItemFormik.values.productImageBlob &&\r\n                      [].map.call(productItemFormik.values.productImageBlob, (file: any, i) => {\r\n                        return <div className=\"uk-inline product-uploader-container\">\r\n                          <img key={i} src={URL.createObjectURL(file)} alt={file.name} />\r\n                          <div className=\"uk-overlay-primary uk-position-cover\">\r\n                            <div className=\"uk-position-center\">\r\n                              <span uk-icon=\"icon: close\" onClick={() => removeImage(file.name)} />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      })\r\n                    }\r\n                    {/* <img src={'http://127.0.0.1:5000/images/1c508610-eee5-4360-8f76-f0e70fa5ca92.png'} alt={\"a\"} /> */}\r\n                    {/* </label> */}\r\n                    {/* </div> */}\r\n                  </div>\r\n                </fieldset>\r\n              }\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...productActionStatus} />\r\n          <button disabled={productActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              productActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductItem\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { scaledServerImagePath, SubProducts } from 'appConstants';\r\nimport { ProductItem } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AppState, addUpdateProduct, Coupon, updateProductHighLight, Product, errorProduct, setDefaulState } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport { countHighlightProducts } from 'services';\r\n\r\ninterface Props {\r\n  addEditToggle: Function;\r\n}\r\n\r\nconst ProductList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const deleteProduct = (productId: string, subcategoryId: number) => {\r\n    const input = window.confirm('Sure want to delete?');\r\n    const name = '', code = '', priceINR = '0', priceUSD = '0', value = '', subCategory = subcategoryId, deletedImagePath = [''], productDetailIdArray = [''], deletedProductDetailIds = ['']\r\n    if (input) dispatch(addUpdateProduct({ productId, name, code, priceUSD, priceINR, value, deletedImagePath, subCategory, productDetailIdArray, deletedProductDetailIds }, 1, []));\r\n  }\r\n  const stateData = useSelector<AppState, ProductItem[]>(state => state.product.data || []);\r\n  const productColumns = [\r\n    // {\r\n    //   name: 'ProductId',\r\n    //   selector: 'productId',\r\n    //   sortable: false,\r\n    // },<span className=\"uk-label uk-label-warning uk-margin-xsmall-right\">top selling</span>\r\n    {\r\n      name: 'Category',\r\n      selector: 'productCategoryName',\r\n      sortable: true,\r\n      cell: (row: { trending: boolean, latest: boolean, productCategoryName: string }) => {\r\n        return (\r\n          row.trending ? <>\r\n            <span style={{ color: \"green\" }} uk-icon=\"icon: bolt;\" />\r\n            <span style={{ marginLeft: \"5px\" }}>\r\n              {row.productCategoryName}\r\n            </span>\r\n          </> :\r\n            row.latest ? <>\r\n              <span style={{ color: \"orange\" }} uk-icon=\"icon: star;\" />\r\n              <span style={{ marginLeft: \"5px\" }}>\r\n                {row.productCategoryName}\r\n              </span>\r\n            </> :\r\n              <span style={{ marginLeft: \"25px\" }}>\r\n                {row.productCategoryName}\r\n              </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      name: 'Product Name',\r\n      selector: 'name',\r\n      sortable: true,\r\n    },\r\n    // {\r\n    //   name: 'Price INR',\r\n    //   selector: 'priceInr',\r\n    //   sortable: true,\r\n    // },\r\n    // {\r\n    //   name: 'Price USD',\r\n    //   selector: 'priceUsd',\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      name: 'Quantity',\r\n      selector: 'quantity',\r\n      sortable: true,\r\n    },\r\n    // {\r\n    //   name: 'Colour',\r\n    //   selector: 'colour',\r\n    //   sortable: true,\r\n    // },\r\n    // {\r\n    //   name: 'Size',\r\n    //   selector: 'size',\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      name: 'Delete',\r\n      sortable: false,\r\n      cell: (row: { productId: number, name: string, code: string, priceUSD: string, priceINR: string, value: string, subCategory: number }) => {\r\n        return <button type=\"submit\" className=\"uk-button-small uk-button-danger\" onClick={() => deleteProduct(row.productId.toString(), row.subCategory)}>\r\n          <span>Delete</span>\r\n        </button>\r\n      }\r\n    },\r\n    {\r\n      name: 'Edit',\r\n      sortable: false,\r\n      cell: (row: { productId: number, code: string, value: string }) => {\r\n        return <button type=\"submit\" className=\"uk-button-small uk-button-danger\" onClick={() => { props.addEditToggle(true); history.push(\"/admin/product/\" + row.productId) }}>\r\n          <span>Edit</span>\r\n        </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.PRODUCT}\r\n      ExpandableComponent={ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Product Name\"\r\n      expandableRows={true} />\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { trending, latest, productId, listSingleImage }: ProductItem = data;\r\n  const productActionStatus = useSelector<AppState, Product>(state => state.product);\r\n\r\n  const productQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      productId,\r\n      highlight: trending ? '1' : latest ? '2' : ''\r\n    } as ProductItem,\r\n    onSubmit: (value: ProductItem) => {\r\n      if (value.highlight === '1' && countHighlightProducts(productActionStatus.data || [], true) === 12) {\r\n        dispatch(errorProduct('Max trending product count of 12 reached.'));\r\n        setTimeout(() => {\r\n          productQuickViewFormik.setSubmitting(false)\r\n        }, 2000);\r\n      } else if (value.highlight === '2' && countHighlightProducts(productActionStatus.data || [], false) === 12) {\r\n        dispatch(errorProduct('Max latest product count of 12 reached.'));\r\n        setTimeout(() => {\r\n          productQuickViewFormik.setSubmitting(false)\r\n        }, 2000);\r\n      } else {\r\n        dispatch(updateProductHighLight(value.highlight || '', value.productId))\r\n      }\r\n      // dispatch(updateCoupon(value));\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={productQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Product Image</div>\r\n              <div className=\"tm-product-card-media\">\r\n                <div className=\"tm-ratio tm-ratio-16-9\">\r\n                  <div className=\"tm-media-box\">\r\n                  <figure className=\"tm-media-box-wrap\"><img src={scaledServerImagePath + listSingleImage} alt={listSingleImage} /></figure>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Product Highlight</div>\r\n              <div>\r\n              <select className=\"uk-select\" id=\"highlight\"\r\n                {...productQuickViewFormik.getFieldProps('highlight')}>\r\n                <option key='1' value=\"\">None</option>\r\n                <option key='2' value=\"1\">Trending</option>\r\n                <option key='3' value=\"2\">Latest</option>\r\n              </select>\r\n              {\r\n                productQuickViewFormik.touched.highlight && productQuickViewFormik.errors.highlight ? (\r\n                  <span className=\"uk-text-danger\">{productQuickViewFormik.errors.highlight}</span>\r\n                ) : ''\r\n              }\r\n              </div>\r\n              \r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Product Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  productActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n          {productQuickViewFormik.isSubmitting && <NotificationContainer {...productActionStatus} />}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductList\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppState, Coupon, updateCoupon } from 'reducers';\r\nimport { CustomerOrders, singleOrder } from 'reducers/Order';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductCoupon, Order, OrderItems } from 'types';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport { getIconForAdminOrder } from 'services';\r\n\r\ninterface Props{\r\n  addEditToggle: Function;\r\n}\r\n\r\nconst OrderList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  // const deleteCoupon = (couponId: number, code: string, value: string) => {\r\n  //   const input = window.confirm('Sure want to delete?');\r\n  //   if (input) dispatch(updateCoupon({ couponId, value, code }, true));\r\n  // }\r\n  const stateData = useSelector<AppState, Order[]>(state => state.customerOrders.data || []);\r\n  const productColumns = [\r\n    {\r\n      name: 'Order Number',\r\n      sortable: true,\r\n      wrap: true,\r\n      cell: (row: { orderItems: OrderItems[], orderNumber: string}) => {\r\n        const icon = getIconForAdminOrder(row.orderItems);\r\n        return (\r\n          icon !== '' ?\r\n          <>\r\n            {icon === 'lifesaver' ?  <span style={{ color: \"green\" }} uk-icon=\"icon: lifesaver;\" /> \r\n            : icon === 'plus-circle' ? <span style={{ color: \"green\" }} uk-icon=\"icon: plus-circle;\" /> \r\n            : icon === 'check' ? <span style={{ color: \"green\" }} uk-icon=\"icon: check;\" />\r\n            : icon === 'cart' ? <span style={{ color: \"green\" }} uk-icon=\"icon: cart;\" /> \r\n            : icon === 'history' ? <span style={{ color: \"orange\" }} uk-icon=\"icon: history;\" />\r\n            : icon === 'minus-circle' ? <span style={{ color: \"red\" }} uk-icon=\"icon: minus-circle;\" />\r\n            : icon === 'warning' ? <span style={{ color: \"red\" }} uk-icon=\"icon: warning;\" />\r\n            : ''\r\n          }\r\n            <span style={{marginLeft:\"5px\", whiteSpace:\"nowrap\"}}>\r\n              {row.orderNumber}\r\n            </span>\r\n          </> :\r\n          <span  style={{marginLeft:\"25px\"}}>\r\n          {row.orderNumber}\r\n        </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      name: 'Order Date',\r\n      selector: 'paymentDate',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Total Price-Mode',\r\n      sortable: false,\r\n      cell: (row: { totalPrice: string, paymentMode: string}) => {\r\n      return  <span>{row.paymentMode === 'PAYPAL'? '$' : '₹'} {row.totalPrice} ({row.paymentMode})</span>\r\n      }\r\n    },\r\n    {\r\n      name: 'View Details',\r\n      sortable: false,\r\n      cell: (row: Order) => {\r\n        return <button type=\"submit\" className=\"uk-button-small uk-button-primary\" onClick={() => {dispatch(singleOrder(row)) ;props.addEditToggle(true)}}>\r\n          <span>View</span>\r\n        </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.ORDERS}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Order Number\"\r\n      expandableRows={false}\r\n      sortByColumn=\"paymentDate\" \r\n      defaultSortAsc={false}/>\r\n  )\r\n}\r\nexport {\r\n  OrderList\r\n}","import React, { useEffect, useState, Fragment } from 'react';\r\nimport { Invoice, InvoiceItems, Order, OrderUpdateAdmin } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, getShippers, Shipper, Shipment, updateOrderAdmin } from 'reducers';\r\nimport { scaledServerImagePath } from 'appConstants';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport { calculateUserDiscount, getPaypalTransactionId, returnInvoiceHtml, userOrderDiscountPrice } from 'services';\r\nimport jsPDF from 'jspdf';\r\n\r\n\r\nconst OrderDetails: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  // const [productItemCount, setProductItemCount] = useState(0);\r\n  const [adminShipmentData, setAdminShipmentData] = useState<OrderUpdateAdmin[]>([]);\r\n  const [orginalTrackingLink, setOrginalTrackingLink] = useState<string[]>([]);\r\n  const [sameShippingData, setSameShippingData] = useState<number[]>([]);\r\n  const [sameShippingEmail, setSameShippingEmail] = useState<boolean[]>([]);\r\n  const stateData = useSelector<AppState, Order>(state => state.customerOrders.singleData || {} as Order);\r\n  const shippers = useSelector<AppState, Shipper>(state => state.shipper || {} as Shipper);\r\n  const shipmentStatus = useSelector<AppState, Shipment>(state => state.shipment);\r\n  useEffect(() => {\r\n    if (stateData && stateData.orderItems) {\r\n      let tempShipmentData: OrderUpdateAdmin[] = [];\r\n      let tempTrackingLink: string[] = [];\r\n      stateData.orderItems.forEach(orderItems => {\r\n        tempShipmentData.push(\r\n          {\r\n            orderDetailId: orderItems.orderDetailId,\r\n            deliveryDate: orderItems.shipmentDetails?.deliveryDate,\r\n            paymentReturned: orderItems.shipmentDetails?.paymentReturned,\r\n            returnStatus: orderItems.shipmentDetails?.returnStatus,\r\n            shipmentId: orderItems.shipmentDetails?.shipmentId || '0',\r\n            shipper: orderItems.shipmentDetails?.shipper,\r\n            shippingDate: orderItems.shipmentDetails?.shippingDate,\r\n            trackingNumber: orderItems.shipmentDetails?.trackingNumber\r\n          } as OrderUpdateAdmin);\r\n        tempTrackingLink.push(orderItems.shipmentDetails?.trackingNumber || '')\r\n      });\r\n      setAdminShipmentData(tempShipmentData);\r\n      setOrginalTrackingLink(tempTrackingLink);\r\n      setSameShippingEmail(Array(stateData.orderItems.length).fill(true));\r\n    }\r\n  }, [stateData]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getShippers());\r\n  }, [])\r\n\r\n  const updateShipmentData = (index: number, key: string, value: string) => {\r\n    let shipmentDataCopy = [...adminShipmentData];\r\n    if (sameShippingData.indexOf(index) > -1 && sameShippingData.length > 1) {\r\n      sameShippingData.forEach((i) => {\r\n        const shipmentDataToUpdate = shipmentDataCopy.splice(i, 1);\r\n        const updatedShipmentData = { ...shipmentDataToUpdate[0], [key]: value };\r\n        shipmentDataCopy.splice(i, 0, updatedShipmentData);\r\n      });\r\n    } else {\r\n      const shipmentDataToUpdate = shipmentDataCopy.splice(index, 1);\r\n      const updatedShipmentData = { ...shipmentDataToUpdate[0], [key]: value };\r\n      shipmentDataCopy.splice(index, 0, updatedShipmentData);\r\n    }\r\n    setAdminShipmentData(shipmentDataCopy);\r\n  };\r\n\r\n  const updateOrderStatus = (index: number) => {\r\n    const isTrackingChanged = adminShipmentData[index].trackingNumber !== orginalTrackingLink[index];\r\n    if (isTrackingChanged) {\r\n      let orginalTrackingLinkCopy = [...orginalTrackingLink];\r\n      orginalTrackingLinkCopy[index] = adminShipmentData[index].trackingNumber || '';\r\n      setOrginalTrackingLink(orginalTrackingLinkCopy);\r\n    }\r\n    dispatch(updateOrderAdmin(\r\n      {\r\n        ...adminShipmentData[index],\r\n        orderNumber: stateData.orderNumber,\r\n        customerEmail: stateData.userDetails?.emailAddress,\r\n        customerName: stateData.userDetails?.firstName\r\n      }, (isTrackingChanged && sameShippingEmail[index])))\r\n  }\r\n\r\n  const downloadInvoice = async (invoiceNumber: string, productList: InvoiceItems[], userDiscount?: string, couponDiscount?: string) => {\r\n    var doc = new jsPDF('l', 'px', 'a4', true)\r\n    const invoiceData: Invoice = {\r\n      clientName: stateData.userDetails?.firstName + ' ' + stateData.userDetails?.lastName,\r\n      invoiceDate: (new Date).toLocaleDateString(\"en-US\"),\r\n      clientAddress: stateData.userDetails?.addressLineOne + ' ' + stateData.userDetails?.addressLineTwo + ' ' +\r\n        stateData.userDetails?.addressLineThree + ' ' + stateData.userDetails?.city + ' ' + stateData.userDetails?.state +\r\n        ' ' + stateData.userDetails?.pincode + ' ' + stateData.userDetails?.country,\r\n      invoiceNumber,\r\n      productList,\r\n      userDiscount,\r\n      couponDiscount,\r\n      isInternaltionalOrder: stateData.paymentMode ? stateData.paymentMode.toLowerCase() === 'paypal' : false,\r\n      isInternaltionalOrderStandard: stateData.standardShipping || false\r\n    }\r\n    await doc.html(returnInvoiceHtml(invoiceData), { x: 10, y: 10 })\r\n    doc.save(invoiceNumber + \".pdf\")\r\n  }\r\n\r\n  const selectItem = (index: number) => {\r\n    let tempSameShippingData = [];\r\n    if (sameShippingData.indexOf(index) > -1) {\r\n      tempSameShippingData = sameShippingData.filter((i) => i !== index);\r\n    } else {\r\n      tempSameShippingData = [...sameShippingData, index];\r\n    }\r\n    setSameShippingData(tempSameShippingData);\r\n    let tempSameShippingEmail = Array(stateData.orderItems.length).fill(true);\r\n    tempSameShippingData.forEach((val, index) => {\r\n      if (index !== 0) {\r\n        tempSameShippingEmail[val] = false;\r\n      }\r\n    });\r\n    setSameShippingEmail([...tempSameShippingEmail]);\r\n  }\r\n\r\n  // const userOrderDiscountPrice = (totalPrice: string, quantity: string, userDiscount?: string, couponDiscount?: string)=> {\r\n  //   let mainTotal = Number(totalPrice) * Number(quantity);\r\n  //   if(userDiscount){\r\n  //     mainTotal = Number(calculateUserDiscount(userDiscount,mainTotal.toString()))\r\n  //   } \r\n  //   if(couponDiscount){\r\n  //     mainTotal = Number(calculateUserDiscount(couponDiscount,mainTotal.toString()))\r\n  //   }\r\n  //   return mainTotal\r\n  // }\r\n  return (\r\n    <form className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <header className=\"uk-card-header\"><h1 className=\"uk-h2\">Order Summay</h1></header>\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">#Order Details</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Order Number</div>\r\n                      <span className=\"uk-text-small\">{stateData.orderNumber}</span>\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Order Date</div>\r\n                      <span className=\"uk-text-small\">{stateData.paymentDate}</span>\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Order Cost</div>\r\n                      <span className=\"uk-text-small\">{stateData.paymentMode && stateData.paymentMode.toLowerCase() === 'paypal' ? '$' : '₹'}{stateData.totalPrice}</span>\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Payment Mode</div>\r\n                      <span className=\"uk-text-small\">{stateData.paymentMode}</span>\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Applied User Discount</div>\r\n                      <span className=\"uk-text-small\">{stateData.userDiscount || 0}%</span>\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Applied Coupon Discount</div>\r\n                      <span className=\"uk-text-small\">{stateData.couponDiscount || 0}%</span>\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Payment Transaction Id</div>\r\n                      <span className=\"uk-text-small\">{stateData.paymentMode && stateData.paymentMode.toLowerCase() === 'paypal' ? getPaypalTransactionId(stateData.paypalResponse) : stateData.razorpayPaymentId}</span>\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Invoice</div>\r\n                      <span className=\"admin-complete-invoice\" uk-icon=\"icon: cloud-download\"\r\n                        onClick={(e) => {\r\n                          downloadInvoice(\r\n                            stateData.orderNumber,\r\n                            stateData.orderItems,\r\n                            stateData.userDiscount,\r\n                            stateData.couponDiscount,\r\n                          ); e.preventDefault()\r\n                        }}></span>\r\n                    </label>\r\n                  </div>\r\n                  {\r\n                    stateData.paymentMode && stateData.paymentMode.toLowerCase() === 'paypal' &&\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Shippment Type</div>\r\n                        <span className=\"uk-text-small\">{stateData.standardShipping === false ? 'Express' : 'Standard'}</span>\r\n                      </label>\r\n                    </div>\r\n                  }\r\n\r\n                </div>\r\n                <div className=\"uk-divider-icon\"></div>\r\n              </fieldset>\r\n              {\r\n                stateData.userDetails &&\r\n                <fieldset className=\"uk-fieldset\">\r\n                  <legend className=\"uk-h4\">#User Details</legend>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Name</div>\r\n                        <span className=\"uk-text-small\">\r\n                          {stateData.userDetails.firstName + ' ' + stateData.userDetails.lastName}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Mobile</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.mobile}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Email</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.emailAddress}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Current Discount</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.discount || 0}%</span>\r\n                      </label>\r\n                    </div>\r\n                    {/* <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Gender</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.gender}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Date of birth</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.dob}</span>\r\n                      </label>\r\n                    </div> */}\r\n                  </div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Country</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.country}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">State</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.state}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">City</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.city}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Pincode</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.pincode}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Address</div>\r\n                        <span className=\"uk-text-small\">\r\n                          {\r\n                            stateData.userDetails.addressLineOne\r\n                            + ' ' +\r\n                            stateData.userDetails.addressLineTwo\r\n                            + ' ' +\r\n                            stateData.userDetails.addressLineThree\r\n                          }\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-divider-icon\"></div>\r\n                </fieldset>\r\n              }\r\n              {\r\n                stateData.orderItems && stateData.orderItems.length > 0 &&\r\n                <fieldset className=\"uk-fieldset\">\r\n                  <legend className=\"uk-h4\">#Order Items</legend>\r\n                  {\r\n                    stateData.orderItems.map((product, index) => {\r\n                      return (\r\n                        <Fragment key={index}>\r\n                          <div className=\"uk-margin uk-grid-small uk-child-width-auto uk-grid\">\r\n                            <label className=\"cursor-pointer\">\r\n                              <input className=\"uk-checkbox\" type=\"checkbox\"\r\n                                checked={sameShippingData.indexOf(index) > -1}\r\n                                onChange={() => selectItem(index)} />\r\n                              Item #{index + 1}\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Product Image</div>\r\n                                <div className=\"tm-ratio tm-ratio-16-9\">\r\n                                  <a className=\"tm-media-box\" onClick={() => history.push('/productDetails/' + product.productId)}>\r\n                                    <figure className=\"tm-media-box-wrap\"><img src={scaledServerImagePath + product.productImage} alt={product.productImage} /></figure>\r\n                                  </a>\r\n                                </div>\r\n                                {/* <img src={scaledServerImagePath + product.productImage} alt={product.productImage} /> */}\r\n                              </label>\r\n                            </div>\r\n\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Name-(Size)</div>\r\n                                <span className=\"uk-text-small\">{product.productName} - ({product.size})</span>\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Quantity</div>\r\n                                <span className=\"uk-text-small\">{product.quantity}</span>\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Price</div>\r\n                                <span className=\"uk-text-small\">\r\n                                  {product.quantity} X {product.productPrice} =  {product.currency.toString() !== '1' ? '$' : '₹'}\r\n                                  {Number(product.productPrice) * Number(product.quantity)}\r\n                                  {/* {userOrderDiscountPrice(product.productPrice,product.quantity,stateData.userDiscount, stateData.couponDiscount)} */}\r\n                                </span>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div uk-grid=\"true\" className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" >\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Shipper</div>\r\n                                <select className=\"uk-select shipper-max-width\" name=\"shipper\" id=\"shipper\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].shipper || '0'}\r\n                                  onChange={(e) => updateShipmentData(index, 'shipper', e.currentTarget.value)}\r\n                                >\r\n                                  <option key='0' value={0}>Select</option>\r\n                                  {\r\n                                    shippers.data?.map((shipper, index) => {\r\n                                      return <option key={index} value={shipper.shipperId}>{shipper.shipperName}</option>\r\n                                    })\r\n                                  }\r\n                                </select>\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Tracking Number</div>\r\n                                <input className=\"uk-input shipper-max-width\" id=\"trackingNumber\" type=\"text\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].trackingNumber || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'trackingNumber', e.currentTarget.value)}\r\n                                />\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Shipping Date</div>\r\n                                <input className=\"uk-input shipper-max-width\" id=\"shippingDate\" type=\"date\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].shippingDate || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'shippingDate', e.currentTarget.value)} />\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Delivery Date</div>\r\n                                <input className=\"uk-input shipper-max-width\" id=\"deliveryDate\" type=\"date\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].deliveryDate || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'deliveryDate', e.currentTarget.value)}\r\n                                />\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div uk-grid=\"true\" className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" >\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Return Status</div>\r\n                                <select className=\"uk-select shipper-max-width\" name=\"returnStatus\" id=\"returnStatus\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].returnStatus || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'returnStatus', e.currentTarget.value)}\r\n                                >\r\n                                  <option key='0' value={0}>Select</option>\r\n                                  <option key='1' value='In Progress'>In Progress</option>\r\n                                  <option key='2' value='Accepted'>Accepted</option>\r\n                                  <option key='3' value='Declined'>Declined</option>\r\n                                </select>\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Payment Returned</div>\r\n                                <select className=\"uk-select shipper-max-width\" name=\"paymentReturned\" id=\"paymentReturned\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].paymentReturned || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'paymentReturned', e.currentTarget.value)}\r\n                                >\r\n                                  <option key='0' value={0}>Select</option>\r\n                                  <option key='1' value='No'>No</option>\r\n                                  <option key='2' value='Yes'>Yes</option>\r\n                                </select>\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label className=\"cursor-pointer\">\r\n                                <div className=\"uk-form-label\">Send Email</div>\r\n                                <input className=\"uk-checkbox\" type=\"checkbox\"\r\n                                  checked={sameShippingEmail[index]}\r\n                                  onChange={() => {\r\n                                    sameShippingEmail[index] = !sameShippingEmail[index];\r\n                                    setSameShippingEmail([...sameShippingEmail]);\r\n                                  }}\r\n                                />\r\n\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Invoice</div>\r\n                                <span className=\"admin-complete-invoice\" uk-icon=\"icon: cloud-download\"\r\n                                  onClick={(e) => {\r\n                                    downloadInvoice(\r\n                                      stateData.orderNumber + product.orderDetailId,\r\n                                      [product],\r\n                                      stateData.userDiscount,\r\n                                      stateData.couponDiscount,\r\n                                    ); e.preventDefault()\r\n                                  }}></span>\r\n                              </label>\r\n                            </div>\r\n                            {/* <div>\r\n                            </div> */}\r\n\r\n                          </div>\r\n                          <div uk-grid=\"true\" className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" >\r\n                            <div className=\"uk-nav-center\">\r\n                              {\r\n                                shipmentStatus.data?.orderDetailId?.toString() === product.orderDetailId.toString() &&\r\n                                <NotificationContainer {...shipmentStatus} />\r\n                              }\r\n                              <label>\r\n                                {/* <div className=\"uk-form-label\">Save Details</div> */}\r\n                                <button className=\"uk-button uk-button-primary \"\r\n                                  disabled={shipmentStatus.data?.orderDetailId?.toString() === product.orderDetailId.toString() && shipmentStatus._isLoading}\r\n                                  onClick={(e) => { updateOrderStatus(index); e.preventDefault() }}>\r\n                                  {\r\n                                    shipmentStatus.data?.orderDetailId?.toString() === product.orderDetailId.toString() &&\r\n                                    shipmentStatus._isLoading &&\r\n                                    <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                                  }\r\n                                    Submit\r\n                                </button>\r\n                              </label>\r\n                              \r\n                            </div>\r\n                          </div>\r\n                          <div className=\"uk-divider-order-items\"></div>\r\n                        </Fragment>\r\n                      )\r\n                    })\r\n                  }\r\n                </fieldset>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          {/* <NotificationContainer {...sizeActionStatus} />\r\n          <button disabled={sizeActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              sizeActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button> */}\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  OrderDetails\r\n}","import React, { useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, Shipper, saveShipper } from 'reducers';\r\nimport { OrderShipper } from 'types';\r\n\r\nconst ShipperDetails: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const shipperActionStatus = useSelector<AppState, Shipper>(state => state.shipper);\r\n  const shipperFormik = useFormik({\r\n    initialValues: {\r\n      shipperName: '',\r\n      trackingLink: '',\r\n      shipperId: '0'\r\n    },\r\n    validationSchema: Yup.object({\r\n      shipperName: Yup.string().required('Required'),\r\n      trackingLink: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (values: OrderShipper) => {\r\n      dispatch(saveShipper(values));\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (shipperActionStatus._isSuccess) {\r\n      shipperFormik.resetForm();\r\n    }\r\n  }, [shipperActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={shipperFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Shipper</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Shipper Name</div>\r\n                      <input className=\"uk-input \" id=\"shipperName\" type=\"input\"\r\n                        {...shipperFormik.getFieldProps('shipperName')} />\r\n                      {\r\n                        shipperFormik.touched.shipperName && shipperFormik.errors.shipperName ? (\r\n                          <span className=\"uk-text-danger\">{shipperFormik.errors.shipperName}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Tracking Link</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...shipperFormik.getFieldProps('trackingLink')} />\r\n                      {\r\n                        shipperFormik.touched.trackingLink && shipperFormik.errors.trackingLink ? (\r\n                          <span className=\"uk-text-danger\">{shipperFormik.errors.trackingLink}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...shipperActionStatus} />\r\n          <button disabled={shipperActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              shipperActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ShipperDetails\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductCoupon, OrderShipper } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateCoupon, Coupon, Shipper, updateShipper } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst ShipperList: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const deleteShipper = (shipperId: string, shipperName:string, trackingLink:string) => {\r\n    const input = window.confirm('Sure want to delete?');\r\n    if(input)dispatch(updateShipper({shipperId,shipperName,trackingLink},true));\r\n  } \r\n  const stateData = useSelector<AppState, OrderShipper[]>(state => state.shipper.data || []);  \r\n  const productColumns = [\r\n    {\r\n      name: 'Shipper Name',\r\n      selector: 'shipperName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Tracking Link',\r\n      selector: 'trackingLink',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Delete',\r\n      sortable: false,\r\n      cell: (row: { shipperName: string, trackingLink: string, shipperId: string }) => {\r\n        return  <button type=\"submit\" className=\"uk-button-small uk-button-danger\" onClick={() => deleteShipper(row.shipperId, row.shipperName, row.trackingLink)}>\r\n                   <span>Delete</span>\r\n                </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return(\r\n    <AdminProductList \r\n      productColumns={productColumns} \r\n      productType={SubProducts.SHIPPER} \r\n      ExpandableComponent= {ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Shipper Name\"\r\n      expandableRows = {true}\r\n      sortByColumn=\"shipperName\"/>\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const {shipperId,shipperName,trackingLink }: OrderShipper = data;\r\n  const shipperActionStatus = useSelector<AppState, Shipper>(state => state.shipper);\r\n\r\n  const shipperQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      shipperId,\r\n      shipperName,\r\n      trackingLink\r\n    },\r\n    validationSchema: Yup.object({\r\n      shipperName: Yup.string().required('Required'),\r\n      trackingLink: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (value: OrderShipper) => {\r\n      dispatch(updateShipper(value));\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={shipperQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Shipper Name</div>\r\n              <input className=\"uk-input \" id=\"shipperName\" type=\"input\"\r\n                {...shipperQuickViewFormik.getFieldProps('shipperName')} />\r\n              {\r\n                shipperQuickViewFormik.touched.shipperName && shipperQuickViewFormik.errors.shipperName ? (\r\n                  <span className=\"uk-text-danger\">{shipperQuickViewFormik.errors.shipperName}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Tracking Link</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...shipperQuickViewFormik.getFieldProps('trackingLink')} />\r\n              {\r\n                shipperQuickViewFormik.touched.trackingLink && shipperQuickViewFormik.errors.trackingLink ? (\r\n                  <span className=\"uk-text-danger\">{shipperQuickViewFormik.errors.trackingLink}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Shipper Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  shipperActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Update</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n        {shipperQuickViewFormik.isSubmitting && <NotificationContainer {...shipperActionStatus}/>}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ShipperList,\r\n  ExpandableComponent\r\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, setUser, UserInformation, updateUserDiscount } from 'reducers';\r\nimport { User } from 'types';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\ninterface Props{\r\n  addEditToggle: Function;\r\n}\r\n\r\nconst UserList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const stateData = useSelector<AppState, User[]>(state => state.user.allUsers || []);\r\n  const productColumns = [\r\n    {\r\n      name: 'Email',\r\n      selector: 'emailAddress',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Mobile',\r\n      selector: 'mobile',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'First Name',\r\n      selector: 'firstName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Last Name',\r\n      selector: 'lastName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'View Details',\r\n      sortable: false,\r\n      cell: (row:  User) => {\r\n        return <button type=\"submit\" className=\"uk-button-small uk-button-primary\" onClick={() => {dispatch(setUser(row));props.addEditToggle(true)}}>\r\n          <span>View</span>\r\n        </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.USERS}\r\n      stateData={stateData}\r\n      ExpandableComponent={ExpandableComponent}\r\n      searchPlaceholder=\"Search Email / Mobile\"\r\n      expandableRows={true} />\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { emailAddress, discount }: User = data;\r\n  const userActionStatus = useSelector<AppState, UserInformation>(state => state.user);\r\n\r\n  const userDiscountQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      emailAddress: emailAddress || '',\r\n      discount: discount || ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      emailAddress: Yup.string().required('Required'),\r\n      discount: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (value) => {\r\n      dispatch(updateUserDiscount(value.discount || '0', value.emailAddress.toString()));\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={userDiscountQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Discount Percentage</div>\r\n              <input className=\"uk-input \" id=\"discount\" type=\"input\"\r\n                {...userDiscountQuickViewFormik.getFieldProps('discount')} />\r\n              {\r\n                userDiscountQuickViewFormik.touched.discount && userDiscountQuickViewFormik.errors.discount ? (\r\n                  <span className=\"uk-text-danger\">{userDiscountQuickViewFormik.errors.discount}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  userActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n        {userDiscountQuickViewFormik.isSubmitting && <NotificationContainer {...userActionStatus}/>}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserList\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState } from 'reducers';\r\nimport { User } from 'types';\r\n\r\nconst UserDetails: React.FunctionComponent = () => {\r\n  const userData = useSelector<AppState, User>(state => state.user.data || {} as User);\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <header className=\"uk-card-header\"><h1 className=\"uk-h2\">Order Summay</h1></header>\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <fieldset className=\"uk-fieldset\">\r\n                  <legend className=\"uk-h4\">#User Details</legend>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Name</div>\r\n                        <span className=\"uk-text-small\">\r\n                          {userData.firstName + ' ' + userData.lastName}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Mobile</div>\r\n                        <span className=\"uk-text-small\">{userData.mobile}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Email</div>\r\n                        <span className=\"uk-text-small\">{userData.emailAddress}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Discount</div>\r\n                        <span className=\"uk-text-small\">{userData.discount || 0}%</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Country</div>\r\n                        <span className=\"uk-text-small\">{userData.country}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">State</div>\r\n                        <span className=\"uk-text-small\">{userData.state}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">City</div>\r\n                        <span className=\"uk-text-small\">{userData.city}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Pincode</div>\r\n                        <span className=\"uk-text-small\">{userData.pincode}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Address</div>\r\n                        <span className=\"uk-text-small\">\r\n                          {\r\n                            userData.addressLineOne\r\n                            + ' ' +\r\n                            userData.addressLineTwo\r\n                            + ' ' +\r\n                            userData.addressLineThree\r\n                          }\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-divider-icon\"></div>\r\n                </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserDetails\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from \"react-router\";\r\nimport { AdminNav } from '.';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ColourList, ProductColour } from './subComponents/colour';\r\nimport { ProductSize, SizeList } from './subComponents/size';\r\nimport { ProductSubCategory, SubCategoryList } from './subComponents/subCategory';\r\nimport { ProductCoupon, CouponList } from './subComponents/coupon';\r\nimport { ProductItem, ProductList } from './subComponents/product';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getProduct, setDefaulState } from 'reducers';\r\nimport { OrderList, OrderDetails } from './subComponents/orders';\r\nimport { ShipperDetails, ShipperList } from './subComponents/shippers';\r\nimport { UserList, UserDetails } from './subComponents/users';\r\n\r\n\r\n\r\nconst MainContainer: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const {product, productId} = useParams();\r\n\r\n  useEffect(() => {\r\n    if(product == 'product' && productId){\r\n      dispatch(getProduct(Number(productId)));\r\n      setIsOnAdd(true);\r\n      setSubProductId(SubProducts.PRODUCT)\r\n    } else {\r\n      dispatch(setDefaulState());\r\n    }\r\n  },[product, productId])\r\n\r\n  const [isOnAdd, setIsOnAdd] = useState(false);\r\n  const [subProductId, setSubProductId] = useState(SubProducts.ORDERS);\r\n\r\n  const subProductToggle = (subProductId: number) => {\r\n    setSubProductId(subProductId);\r\n  }\r\n  const addEditToggle = (isOnAdd: boolean) => {\r\n    setIsOnAdd(isOnAdd);\r\n  }\r\n\r\n  const showSubProductComponent = () => {\r\n    switch (subProductId) {\r\n      case SubProducts.COLOUR:\r\n        return isOnAdd ? <ProductColour /> : <ColourList/>\r\n      case SubProducts.SIZE:\r\n        return isOnAdd ? <ProductSize/> : <SizeList/>\r\n      case SubProducts.SUB_PRODUCT:\r\n        return isOnAdd ? <ProductSubCategory/> : <SubCategoryList/>\r\n      case SubProducts.COUPONS:\r\n        return isOnAdd ? <ProductCoupon/> : <CouponList/>\r\n      case SubProducts.PRODUCT:\r\n        return isOnAdd ? <ProductItem/> : <ProductList addEditToggle={addEditToggle}/>\r\n      case SubProducts.ORDERS:\r\n        return isOnAdd ? <OrderDetails/> : <OrderList addEditToggle={addEditToggle}/>\r\n      case SubProducts.SHIPPER:\r\n        return isOnAdd ? <ShipperDetails/> : <ShipperList/>\r\n      case SubProducts.USERS:\r\n        return isOnAdd ? <UserDetails/> : <UserList addEditToggle={addEditToggle}/>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n            <AdminNav subProductToggle={subProductToggle} addEditToggle={addEditToggle} />\r\n            { showSubProductComponent() }\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  MainContainer\r\n}","import React, { Dispatch, SetStateAction, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport queryString from 'query-string';\r\n\r\nimport { getCustomerProducts, Product, setDefaulState } from 'reducers/Product';\r\nimport { AppState, SubCategory, Size, Colour, addUpdateCart, Cart, UserLocation, PreSelectedFilters, setPreSelectedFilter } from 'reducers';\r\nimport { scaledServerImagePath, pageSize } from 'appConstants';\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport { ProductItem, CustomerCart, Search, SelectedFilters } from 'types';\r\nimport { calculateUserDiscount, getCurrencyIcon, showINRUSD } from 'services';\r\nimport { LoadingProductArticle } from 'components/shared';\r\nimport { setSearch } from 'reducers/Search';\r\n\r\n\r\ninterface Props {\r\n  categoryId: number[];\r\n  colourId?: number[];\r\n  sizeId?: number[];\r\n  subCategoryId?: number[];\r\n  startPrice?: string;\r\n  endPrice?: string;\r\n}\r\n\r\nconst CustomerProductList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const {product,filterOn} = useParams();\r\n  const [hasMoreProducts, setHasMoreProducts] = useState(false);\r\n\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const productSize = useSelector<AppState, Size>(state => state.size);\r\n  const productColour = useSelector<AppState, Colour>(state => state.colour);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const search = useSelector<AppState, Search>(state => state.search.data || {} as Search);\r\n  const preSelectedFilter = useSelector<AppState, SelectedFilters>(state => state.preSelectedFilters.data || {scrollTill: '0'} as SelectedFilters);\r\n\r\n\r\n  // useEffect(() => {\r\n  //   if (props.categoryId !== 0) {\r\n  //     console.log('effect list')\r\n  //     dispatch(getCustomerProducts(0, pageSize, props.categoryId, props.subCategoryId || [], [], []));\r\n  //     setHasMoreProducts(true);\r\n  //   }\r\n  // }, [props.categoryId]);\r\n\r\n  useEffect(() => {\r\n    if(!products._isLoading && props.categoryId.length >0  && !subCategories._isLoading && !productSize._isLoading && !productColour._isLoading){\r\n      dispatch(setDefaulState());\r\n      dispatch(getCustomerProducts( 0, Number(preSelectedFilter.scrollTill) + pageSize, props.categoryId, props.subCategoryId || [], \r\n        props.colourId || [], props.sizeId || [], props.startPrice || '', props.endPrice||'', \r\n        userLocation.data || 'IN',\r\n        search.searchText || queryString.parse(window.location.search.split('?')[1])['searchText']?.toString() || '' \r\n        , true));\r\n\r\n      dispatch(setSearch({\r\n        categoryId: props.categoryId,\r\n        colourId: props.colourId || [],\r\n        currency: userLocation.data || 'IN',\r\n        endPrice: props.endPrice||'',\r\n        sizeId: props.sizeId || [],\r\n        startPrice: props.startPrice || '',\r\n        subCategoryId: props.subCategoryId || [],\r\n        searchText: search.searchText || \r\n        queryString.parse(window.location.search.split('?')[1])['searchText']?.toString() || ''\r\n      }));\r\n    }\r\n    if(props.colourId?.toString() || props.sizeId?.toString() || props.subCategoryId?.toString() \r\n        || props.startPrice || props.endPrice || search.searchText || queryString.parse(window.location.search.split('?')[1])['searchText']?.toString()) {\r\n          let searchArray = [];\r\n           if(props.colourId?.toString()){\r\n             searchArray.push(\"colourId=\"+props.colourId.toString())\r\n           }\r\n           if(props.sizeId?.toString()){\r\n            searchArray.push(\"sizeId=\"+props.sizeId.toString())\r\n          } \r\n          if(props.subCategoryId?.toString()){\r\n            searchArray.push(\"subCategoryId=\"+props.subCategoryId.toString())\r\n          } \r\n          if(props.startPrice?.toString()){\r\n            searchArray.push(\"startPrice=\"+props.startPrice.toString())\r\n          } \r\n          if(props.endPrice?.toString()){\r\n            searchArray.push(\"endPrice=\"+props.endPrice.toString())\r\n          } \r\n          if(search.searchText?.toString() || queryString.parse(window.location.search.split('?')[1])['searchText']?.toString() ){\r\n            searchArray.push(\"searchText=\"+(search.searchText?.toString() || queryString.parse(window.location.search.split('?')[1])['searchText']?.toString() ))\r\n          }\r\n\r\n        history.push({\r\n          pathname: '/product/'+ product + `${filterOn ? \"/\"+filterOn: \"\"}`,\r\n          search: '?' + `${searchArray.length === 1 ? searchArray[0] :  searchArray.join('&')}`\r\n        })\r\n      }else{\r\n        history.push({\r\n          pathname: '/product/'+ product + `${filterOn ? \"/\"+filterOn: \"\"}`\r\n        })\r\n      }\r\n  },[props.sizeId,props.categoryId,props.colourId,props.subCategoryId,props.startPrice,props.endPrice, subCategories._isLoading, productSize._isLoading, productColour._isLoading])\r\n\r\n  useEffect(()=> {\r\n    return () => {\r\n      dispatch(setSearch({\r\n        categoryId: [],\r\n        colourId: [],\r\n        currency: userLocation.data || 'IN',\r\n        endPrice: '',\r\n        sizeId:  [],\r\n        startPrice: '',\r\n        subCategoryId:  [],\r\n        searchText: ''\r\n      }));\r\n    }\r\n  },[]);\r\n\r\n  const fetchNextProducts = () => {\r\n    if (!products._isLoading && stateData && props.categoryId.length >0 ) {\r\n      dispatch(getCustomerProducts(stateData.length, pageSize, props.categoryId, props.subCategoryId || [], props.colourId || [], props.sizeId || [], props.startPrice || '', props.endPrice||'', userLocation.data || 'IN',search.searchText || ''));\r\n      dispatch(setSearch({\r\n        categoryId: props.categoryId,\r\n        colourId: props.colourId || [],\r\n        currency: userLocation.data || 'IN',\r\n        endPrice: props.endPrice||'',\r\n        sizeId: props.sizeId || [],\r\n        startPrice: props.startPrice || '',\r\n        subCategoryId: props.subCategoryId || [],\r\n        searchText: search.searchText || ''\r\n      }));\r\n    }\r\n  }\r\n\r\n  const products = useSelector<AppState, Product>(state => state.product || []);\r\n  useEffect(() => {\r\n    setHasMoreProducts(products._hasMoreProducts || false);\r\n  }, [products._hasMoreProducts]);\r\n\r\n\r\n  useEffect(() => {\r\n    if(!products._isLoading){\r\n      if(preSelectedFilter.lastViewedProductId){\r\n        const lastViewdProduct = document.getElementById(preSelectedFilter.lastViewedProductId);\r\n        if(lastViewdProduct){\r\n          lastViewdProduct.scrollIntoView({behavior: \"smooth\", block: \"center\"});\r\n          dispatch(setPreSelectedFilter('lastViewedProductId',''));\r\n        }\r\n      }\r\n    }\r\n  },[products._isLoading])\r\n\r\n  const stateData = products.data;\r\n\r\n  const addToCart = (product: ProductItem)=> {\r\n    if(!userData.data?.userId){\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: product.productDetailId,\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: showINRUSD(userLocation.data || 'IN', product),\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, false))\r\n    }else {\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: '0',\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: '0',\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, true))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"uk-width-expand\">\r\n      <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n        <div>\r\n          <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n            <div className=\"uk-grid-collapse uk-child-width-1-1\" id=\"products\" uk-grid=\"true\">\r\n              <div className=\"uk-card-header uk-hidden@m product-list-filter-bg\"  uk-sticky=\"offset: 60;bottom: #offset\">\r\n                <div className=\"uk-grid-small uk-flex-middle uk-flex-center\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-1-1 uk-width-auto@s uk-flex uk-flex-center uk-flex-middle\">\r\n                    <button className=\"uk-button uk-button-default uk-button-small uk-hidden@m\"  uk-toggle=\"target: #filters\">\r\n                      <span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: settings; ratio: .75;\"></span>Filters\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div>\r\n\r\n                <InfiniteScroll\r\n                  dataLength={stateData && stateData.length || 0}\r\n                  next={fetchNextProducts}\r\n                  hasMore={hasMoreProducts}\r\n                  loader={\r\n                    <div style={{ textAlign: \"center\", marginTop: \"10px\" }}>\r\n                      <h4>Loading...</h4>\r\n                    </div>\r\n                  }\r\n                  endMessage={\r\n                    <p style={{ textAlign: \"center\" }}>\r\n                      <b>That's all for now. Do check back after some time for more products.</b>\r\n                    </p>\r\n                  }\r\n                >\r\n                  <div className=\"uk-grid-collapse uk-child-width-custom tm-products-grid js-products-grid\" uk-grid=\"true\">\r\n                    {\r\n                       stateData && stateData.length > 0 ? stateData.map((product, index) => {\r\n                        return (\r\n                          <article className=\"tm-product-card\" key={index} id ={product.productId}>\r\n                            <div className=\"tm-product-card-media product-list-media\">\r\n                              <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                <a className=\"tm-media-box\" onClick={()=> {\r\n                                    dispatch(setPreSelectedFilter('lastViewedProductId',product.productId.toString() || ''));\r\n                                    dispatch(setPreSelectedFilter('scrollTill',stateData.length.toString() || '0'));\r\n                                    dispatch(setDefaulState());\r\n                                    history.push('/productDetails/'+ product.productId)}\r\n                                  }>\r\n                                  \r\n                                  <figure className=\"tm-media-box-wrap\"><img src={scaledServerImagePath + product.imagePaths} alt={product.imageNames}/></figure>\r\n                                </a>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"tm-product-card-body\">\r\n                              <div className=\"tm-product-card-info\">\r\n                                {/* <div className=\"uk-text-meta uk-margin-xsmall-bottom\">{product.productCategoryName}</div> */}\r\n                                <p className=\"tm-product-card-title\"><a className=\"uk-link-heading\" onClick={()=> {\r\n                                    dispatch(setPreSelectedFilter('lastViewedProductId',product.productId.toString() || ''));\r\n                                    dispatch(setPreSelectedFilter('scrollTill',stateData.length.toString() || '0'));\r\n                                    dispatch(setDefaulState());\r\n                                    history.push('/productDetails/'+ product.productId)}}>\r\n                                      {product.name}</a></p>\r\n                              </div>\r\n                              <div className=\"tm-product-card-shop\">\r\n                                <div className=\"tm-product-card-prices\">\r\n                                  {\r\n                                    userData.data?.discount && userData.data?.discount !== '0' &&\r\n                                    <del className=\"uk-text-meta\">{getCurrencyIcon(userLocation.data || 'IN')} {showINRUSD(userLocation.data || 'IN', product)}</del>\r\n                                  }\r\n                                  <div className=\"tm-product-card-price\">\r\n                                    {getCurrencyIcon(userLocation.data || 'IN')} {calculateUserDiscount(userData.data?.discount ||'0', showINRUSD(userLocation.data || 'IN', product))}\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"tm-product-card-add\">\r\n                                  <button className=\"uk-button uk-button-primary tm-product-card-add-button tm-shine js-add-to-cart\">\r\n                                    {\r\n                                      cart._isLoading && <span uk-spinner=\"true\"></span>\r\n                                    }\r\n                                    {\r\n                                      !cart._isLoading && (\r\n                                        <>\r\n                                        <span className=\"tm-product-card-add-button-icon\" uk-icon=\"cart\" onClick={() => addToCart(product)}></span>\r\n                                        <span className=\"tm-product-card-add-button-text\">add to cart</span>\r\n                                        </>\r\n                                      )\r\n                                    }\r\n                                    \r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </article>\r\n                        )\r\n                      }) : products._hasMoreProducts  && Array(pageSize).fill(1).map((value, index) => <LoadingProductArticle key={index} keyIndex={index}/>)\r\n                    }\r\n                  </div>\r\n                </InfiniteScroll>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerProductList\r\n}","import React, { Dispatch, SetStateAction, useState, useEffect } from 'react';\r\nimport { ProductSubCategory, ActiveProductCount, ProductColor, ProductSize } from 'types';\r\nimport { ProductCount, AppState, Size, Colour, getCustomerProducts, setPreSelectedFilter, defaultPreSelectedFitler, PreSelectedFilters, setAllFilters } from 'reducers';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// import { Size } from 'reducers/Size';\r\n// import { Colour } from 'reducers/Colour';\r\nimport { filterSize } from 'services';\r\nimport { pageSize } from 'appConstants';\r\nimport { setDefaulState } from 'reducers/Product';\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport { Search, setSearch } from 'reducers/Search';\r\n// import { getCustomerProducts } from 'reducers/Product';\r\n\r\n\r\ninterface Props {\r\n  filterSelected: ProductSubCategory[];\r\n  subCategories: ProductSubCategory[];\r\n  activeProductCount: ProductCount;\r\n  categoryId: number[];\r\n  setColourId: Dispatch<SetStateAction<number[]>>;\r\n  setSizeId: Dispatch<SetStateAction<number[]>>;\r\n  setSubCategoryId: Dispatch<SetStateAction<number[]>>;\r\n  setStartPrice: Dispatch<SetStateAction<string>>;\r\n  setEndPrice: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\n\r\nconst CustomerProductFilter: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const { product } = useParams();\r\n  const preSelectedFilter = useSelector<AppState, PreSelectedFilters>(state => state.preSelectedFilters);\r\n  const search = useSelector<AppState, Search>(state => state.search || {} as Search);\r\n  const [filterColourId, setFilterColourId] = useState<number[]>([]);\r\n  const [filterSizeId, setFilterSizeId] = useState<number[]>([]);\r\n  const [filterSubCategory, setFilterSubCategory] = useState<number[]>([]);\r\n  const [filterStartPrice, setFilterStartPrice] = useState('');\r\n  const [filterEndPrice, setFilterEndPrice] = useState('');\r\n  const [startPriceTimer, setStartPriceTimer] = useState(0);\r\n  const [endPriceTimer, setEndPriceTimer] = useState(0);\r\n  const productSize = useSelector<AppState, Size>(state => state.size);\r\n  const productColour = useSelector<AppState, Colour>(state => state.colour);\r\n\r\n  const getProductCount = (id=0) => {\r\n    let count = 0;\r\n    const activeProducts = props.activeProductCount.data\r\n    if(activeProducts){\r\n      const selectedColour = filterColourId.length > 0 ? filterColourId : productColour.data && productColour.data.length> 0 ?  productColour.data.map(({colourId}) => Number(colourId)) : [];\r\n      const selectedSize = filterSizeId.length > 0 ? filterSizeId  : [];\r\n      const selectedSubCat = activeProducts[id];\r\n      if(selectedSubCat){\r\n        if (selectedSize.length === 0) {\r\n            selectedColour.forEach((colour) => {\r\n              if(selectedSubCat[colour]){\r\n                count += selectedSubCat[colour].count\r\n              }\r\n            })\r\n        } else {\r\n            selectedColour.forEach((colour) => {\r\n              let localCount = 0;\r\n              for(var i =0; i< selectedSize.length; i++){\r\n                if(selectedSubCat[colour] && selectedSubCat[colour].size && selectedSubCat[colour].size[selectedSize[i]]){\r\n                  if(selectedSubCat[colour].size[selectedSize[i]] === selectedSubCat[colour].count){\r\n                    localCount = selectedSubCat[colour].count;\r\n                    break;\r\n                  }else{\r\n                    localCount +=selectedSubCat[colour].size[selectedSize[i]];\r\n                  }\r\n                }\r\n              }\r\n              count+=localCount;\r\n            })\r\n        }\r\n      }\r\n    }\r\n    return count\r\n  }\r\n\r\n  const toggleAddingRemovingId = (ids: number[], newId: number) => {\r\n    const index = ids.indexOf(newId);\r\n    if (index > -1){\r\n      ids.splice(index,1);\r\n    } else {\r\n      ids.push(newId);\r\n    }\r\n    return ids;\r\n  }\r\n  const getFilteredProduct = (colour: number, size: number, subCategory?: number, startPrice?: string, endPrice?: string) => {\r\n    if(colour != 0){\r\n      const updatedColourFilter = toggleAddingRemovingId(filterColourId, colour);\r\n      setFilterColourId([...updatedColourFilter]);\r\n      props.setColourId([...updatedColourFilter]);\r\n      dispatch(setPreSelectedFilter('coloudId',[...updatedColourFilter]));\r\n    } else if (size != 0){\r\n      const updatedSizeFilter = toggleAddingRemovingId(filterSizeId, size);\r\n      setFilterSizeId([...updatedSizeFilter]);\r\n      props.setSizeId([...updatedSizeFilter]);\r\n      dispatch(setPreSelectedFilter('sizeId',[...updatedSizeFilter]));\r\n    } else if (subCategory && subCategory != 0){\r\n      const updatedSubCategory = toggleAddingRemovingId(filterSubCategory, subCategory);\r\n      setFilterSubCategory([...updatedSubCategory]);\r\n      props.setSubCategoryId([...updatedSubCategory]);\r\n      dispatch(setPreSelectedFilter('subcategoryId',[...updatedSubCategory]));\r\n    } else if(startPrice!=='0' && !endPrice){\r\n      setFilterStartPrice(startPrice || '');\r\n      window.clearTimeout(startPriceTimer);\r\n      setStartPriceTimer(window.setTimeout(() => {\r\n        props.setStartPrice(startPrice || '')\r\n        dispatch(setPreSelectedFilter('startPrice',startPrice|| ''));\r\n      },1000));\r\n    } else if(endPrice || (!endPrice && filterEndPrice)){\r\n      setFilterEndPrice(endPrice || '');\r\n      window.clearTimeout(endPriceTimer);\r\n      setEndPriceTimer(window.setTimeout(() => {\r\n        props.setEndPrice(endPrice || '')\r\n        dispatch(setPreSelectedFilter('endPrice',endPrice || ''));\r\n      },1000));\r\n    }\r\n  }\r\n\r\n  const restFilter = () => {\r\n    setFilterColourId([]);\r\n    props.setColourId([]);\r\n    setFilterSizeId([]);\r\n    props.setSizeId([]);\r\n    setFilterSubCategory([]);\r\n    props.setSubCategoryId([]);\r\n    dispatch(defaultPreSelectedFitler());\r\n    setFilterStartPrice('');\r\n    props.setStartPrice('');\r\n    setFilterEndPrice('');\r\n    props.setEndPrice('');\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(search._navigationReset){\r\n      restFilter()\r\n    }\r\n\r\n  },[search._navigationReset])\r\n\r\n  const convertQueryParamsToNumber = (query: string | undefined) => {\r\n    if(query){\r\n      return query.split(',').map((id) => Number(id));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(preSelectedFilter.data?.subcategoryname.toString() !==\"\" && product.toString().toLowerCase() !== preSelectedFilter.data?.subcategoryname.toLowerCase()){\r\n      restFilter();\r\n      // dispatch(defaultPreSelectedFitler());\r\n      dispatch(setPreSelectedFilter('subcategoryname',product));\r\n    }else {\r\n    const queryPramas = window.location.search.split('?')[1];\r\n    const filterPrams = queryString.parse(queryPramas);\r\n    const colourFilter = convertQueryParamsToNumber(filterPrams['colourId']?.toString()) || preSelectedFilter.data?.coloudId || []\r\n    const sizeFilter = convertQueryParamsToNumber(filterPrams['sizeId']?.toString()) ||preSelectedFilter.data?.sizeId || [];\r\n    const subCategoryFilter = convertQueryParamsToNumber(filterPrams['subCategoryId']?.toString()) ||preSelectedFilter.data?.subcategoryId || [];\r\n    const startPriceFilter = filterPrams['startPrice']?.toString() || preSelectedFilter.data?.startPrice || '';\r\n    const endPriceFilter = filterPrams['endPrice']?.toString() || preSelectedFilter.data?.endPrice || '';\r\n    setFilterColourId(colourFilter);\r\n    setFilterSizeId(sizeFilter);\r\n    setFilterSubCategory(subCategoryFilter);\r\n    setFilterStartPrice(startPriceFilter);\r\n    setFilterEndPrice(endPriceFilter);\r\n    dispatch(setAllFilters({\r\n      subcategoryId:subCategoryFilter,\r\n      coloudId:colourFilter,\r\n      sizeId:sizeFilter,\r\n      startPrice:startPriceFilter,\r\n      endPrice:endPriceFilter,\r\n      subcategoryname: product.toString().toLowerCase(),\r\n      searchText: filterPrams['searchText']?.toString() || '',\r\n      scrollTill: preSelectedFilter.data?.scrollTill || '0',\r\n      lastViewedProductId: preSelectedFilter.data?.lastViewedProductId || '',\r\n    }))\r\n    props.setColourId([...colourFilter]);\r\n    props.setSizeId([...sizeFilter]);\r\n    props.setSubCategoryId([...subCategoryFilter]);\r\n    props.setStartPrice(startPriceFilter);\r\n    props.setEndPrice(endPriceFilter);\r\n    }\r\n  },[product]);\r\n  // useEffect(() => {\r\n  //   console.log('filter on effect')\r\n  //   if(props.filterSelected && props.filterSelected.length > 0){\r\n  //     if(filterSubCategory.length> 0){\r\n  //       setFilterSubCategory([]);\r\n  //     }\r\n  //     const updatedSubCategory = toggleAddingRemovingId(filterSubCategory, Number(props.filterSelected[0].subCategoryId));\r\n  //     setFilterSubCategory([...updatedSubCategory]);\r\n  //   }\r\n  // },[props.filterSelected]);\r\n\r\n  useEffect(() => {\r\n    if(props.filterSelected.length>0){\r\n      // const updatedSubCategory = toggleAddingRemovingId(filterSubCategory, Number(props.filterSelected[0].subCategoryId));\r\n      setFilterSubCategory([Number(props.filterSelected[0].subCategoryId)]);\r\n      dispatch(setPreSelectedFilter('subcategoryId',[Number(props.filterSelected[0].subCategoryId)]));\r\n      // props.setSubCategoryId([Number(props.filterSelected[0].subCategoryId)]);\r\n    }\r\n  }, [props.filterSelected]);\r\n\r\n  // useEffect(() => {\r\n  //   // dispatch(setDefaulState());\r\n  //   if(props.categoryId != 0){\r\n  //     console.log(filterColourId,filterSizeId, filterSubCategory)\r\n  //     console.log('effect filter')\r\n  //     dispatch(getCustomerProducts(0, pageSize, props.categoryId,filterSubCategory, filterColourId , filterSizeId, true));\r\n  //   }\r\n  // }, [filterColourId,filterSizeId, filterSubCategory,props.categoryId]);\r\n\r\n  return (\r\n    <aside className=\"uk-width-1-4 tm-aside-column tm-filters\" id=\"filters\" uk-offcanvas=\"overlay: true; container: false;\">\r\n      <div className=\"uk-offcanvas-bar uk-padding-remove\">\r\n        <div className=\"uk-card uk-card-default uk-card-small uk-flex uk-flex-column uk-height-1-1\">\r\n          <header className=\"uk-card-header uk-flex uk-flex-middle\">\r\n            <div className=\"uk-grid-small uk-flex-1\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand\"><h3>Filters</h3></div>\r\n              <button className=\"uk-offcanvas-close\" type=\"button\" uk-close=\"true\"></button>\r\n            </div>\r\n          </header>\r\n          <div className=\"uk-margin-remove uk-flex-1\" uk-accordion=\"multiple: true; targets: &gt; .js-accordion-section\" style={{ flexBasis: \"auto\" }}>\r\n            <section className=\"uk-card-body uk-open js-accordion-section\">\r\n              <h4 className=\"uk-accordion-title uk-margin-remove\">Prices</h4>\r\n              <div className=\"uk-accordion-content\">\r\n                <div className=\"uk-grid-small uk-child-width-1-2 uk-text-small\" uk-grid=\"true\">\r\n                  <div>\r\n                    <div className=\"uk-inline\">\r\n                      <span className=\"uk-form-icon uk-text-xsmall\">from</span>\r\n                      <input className=\"uk-input\" type=\"number\" placeholder=\"₹₹₹\"\r\n                      value={filterStartPrice} \r\n                      onChange={(e) => getFilteredProduct(0,0,0,e.currentTarget.value)}/>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"uk-inline\">\r\n                      <span className=\"uk-form-icon uk-text-xsmall\">to</span>\r\n                      <input className=\"uk-input\" type=\"text\" placeholder=\"₹₹₹\" \r\n                      value={filterEndPrice}\r\n                      onChange={(e) => getFilteredProduct(0,0,0,'0',e.currentTarget.value)}/>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n            {\r\n              props.subCategories.length > 0 &&\r\n              <section className=\"uk-card-body js-accordion-section uk-open\">\r\n              <h4 className=\"uk-accordion-title uk-margin-remove\">Categories</h4>\r\n              <div className=\"uk-accordion-content\">\r\n                <ul className=\"uk-list tm-scrollbox\">\r\n                  {\r\n                    props.subCategories.map((subcategory: ProductSubCategory) => {\r\n                      return (\r\n                        <li key={subcategory.code}>\r\n                          <input \r\n                            className=\"tm-checkbox\"\r\n                            id={\"subproduct\" + subcategory.code}\r\n                            name=\"subproduct\"\r\n                            value={subcategory.code}\r\n                            checked={filterSubCategory.indexOf(Number(subcategory.subCategoryId)) > -1}\r\n                            type=\"checkbox\"\r\n                            onChange={() => getFilteredProduct(0, 0, Number(subcategory.subCategoryId))}\r\n                            />\r\n                          <label htmlFor={\"subproduct\" + subcategory.code}>\r\n                            <span>{subcategory.code} <span className=\"uk-text-meta uk-text-small\">{getProductCount(Number(subcategory.subCategoryId))}</span></span>\r\n                          </label>\r\n                        </li>\r\n                      )\r\n                    })\r\n                  }\r\n                </ul>\r\n              </div>\r\n            </section>\r\n            }\r\n            \r\n            {\r\n              productColour.data && productColour.data.length > 0 &&\r\n              <section className=\"uk-card-body js-accordion-section uk-open\">\r\n                <h4 className=\"uk-accordion-title uk-margin-remove\">Colour</h4>\r\n                <div className=\"uk-accordion-content\">\r\n                  <ul className=\"uk-list tm-scrollbox\">\r\n                    {\r\n                      productColour.data.map((colour: ProductColor) => {\r\n                        return (\r\n                          <li key={colour.colourId}>\r\n                            <input \r\n                              className=\"tm-checkbox\" \r\n                              id={\"colour\" + colour.colourId} \r\n                              name=\"colour\" \r\n                              value={colour.colourId} \r\n                              type=\"checkbox\"\r\n                              checked={filterColourId.indexOf(Number(colour.colourId)) > -1}\r\n                              onChange={() => getFilteredProduct(Number(colour.colourId), 0, 0)} \r\n                            />\r\n                            <label htmlFor={\"colour\" + colour.colourId}>\r\n                              <span>{colour.value} </span>\r\n                            </label>\r\n                          </li>\r\n                        )\r\n                      })\r\n                    }\r\n                  </ul>\r\n                </div>\r\n              </section>\r\n            }\r\n            {\r\n              productSize.data && productSize.data.length > 0 &&\r\n              !(filterSize(productSize,props.categoryId).length === 1 && \r\n              filterSize(productSize,props.categoryId)[0].value.toLowerCase() === 'default') &&\r\n              <section className=\"uk-card-body js-accordion-section uk-open\">\r\n                <h4 className=\"uk-accordion-title uk-margin-remove\">Size</h4>\r\n                <div className=\"uk-accordion-content\">\r\n                  <ul className=\"uk-list tm-scrollbox\">\r\n                    {\r\n                      filterSize(productSize,props.categoryId).map((size: ProductSize) => {\r\n                        return (\r\n                          size.value.toLowerCase() !== 'default' &&\r\n                          <li key={size.sizeId}>\r\n                            <input \r\n                              className=\"tm-checkbox\"\r\n                              id={\"size\" + size.sizeId}\r\n                              name=\"size\"\r\n                              value={size.sizeId}\r\n                              type=\"checkbox\"\r\n                              checked={filterSizeId.indexOf(Number(size.sizeId)) > -1}\r\n                              onChange={() => getFilteredProduct(0,Number(size.sizeId), 0)} \r\n                              />\r\n                            <label htmlFor={\"size\" + size.sizeId}>\r\n                              <span>{size.value} </span>\r\n                            </label>\r\n                          </li>\r\n                        )\r\n                      })\r\n                    }\r\n                  </ul>\r\n                </div>\r\n              </section>\r\n            }\r\n            <div className=\"uk-card-body\">\r\n              <button className=\"uk-button uk-button-default uk-width-1-1\" onClick={() => restFilter()}><span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: close; ratio: .75;\"></span>Reset all filters</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerProductFilter\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProduct, setDefaulState } from 'reducers/Product';\r\nimport { AppState, addUpdateCart, Cart, UserLocation } from 'reducers';\r\nimport { ProductItem, CustomerCart } from 'types';\r\nimport { AllowReturn, scaledServerImagePath } from 'appConstants';\r\nimport { CustomerProductDetailsLoading } from '.';\r\nimport { calculateUserDiscount, getCurrencyIcon, showINRUSD } from 'services';\r\nimport { QuickProductList } from 'components/shared';\r\n\r\ninterface cartQuantity {\r\n  [key: string]: string;\r\n};\r\n\r\n\r\ninterface Props {\r\n  mainSlider: JSX.Element[] | undefined;\r\n  smallSlider: JSX.Element[] | undefined;\r\n  productCategoryName: string;\r\n  name: string;\r\n  priceINR: string;\r\n  priceUSD: string;\r\n  description: string;\r\n  size: string;\r\n  sizeId: string;\r\n  quantity: string;\r\n  productId: string;\r\n  productDetailId: string;\r\n  imageName: string;\r\n  imagePath: string;\r\n  cartProductQuantity: cartQuantity;\r\n  isActive: boolean;\r\n  subCategory: number\r\n};\r\n\r\nconst CustomerProductDetails: React.FunctionComponent<Props> = (props: Props) => {\r\n  const {\r\n    priceINR,\r\n    priceUSD,\r\n    quantity,\r\n    size,\r\n    sizeId,\r\n    productId,\r\n    productDetailId,\r\n    imageName,\r\n    imagePath,\r\n    productCategoryName,\r\n    name,\r\n    cartProductQuantity,\r\n    isActive\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const relatedProducts = useSelector<AppState, ProductItem[]>(state => state.relatedProduct.data || []);\r\n\r\n  const [pINR, setPINR] = useState('0');\r\n  const [pUSD, setPUSD] = useState('0');\r\n  const [pQuantity, setPQuantity] = useState(['']);\r\n  const [pSize, setPSize] = useState(['']);\r\n  const [pSizeId, setPSizeId] = useState(['']);\r\n  const [pDetailId, setPDetailId] = useState(['']);\r\n  const [selectedSize, setSelectedSize] = useState('0');\r\n  const [selectedQuantity, setSelectedQuantity] = useState('1');\r\n  const [selectedProductDetailId, setSelectedProductDetailId] = useState('0');\r\n  const [maxQuantity, setMaxQuantity] = useState('0');\r\n  const [showInch, setShowInch] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setPINR(priceINR.split(',')[0]);\r\n    setPUSD(priceUSD.split(',')[0]);\r\n  }, [priceINR, priceUSD]);\r\n\r\n\r\n  useEffect(() => {\r\n    setPQuantity(quantity.split(','));\r\n    setPSize(size.split(','));\r\n    setPSizeId(sizeId.split(','));\r\n    setSelectedSize(sizeId.split(',')[0].toString());\r\n    const defaultProductDetail = productDetailId.split(',')[0];\r\n    setMaxQuantity((Number(quantity.split(',')[0]) - Number(cartProductQuantity[defaultProductDetail.toString()] || 0)).toString());\r\n    setPDetailId(productDetailId.split(','));\r\n    setSelectedProductDetailId(defaultProductDetail);\r\n  }, [quantity, size, sizeId, productDetailId]);\r\n\r\n  useEffect(() => {\r\n    if (maxQuantity !== '0') {\r\n      const productIndex = pDetailId.indexOf(selectedProductDetailId);\r\n      setMaxQuantity((Number(pQuantity[productIndex]) - Number(cartProductQuantity[selectedProductDetailId] || '0')).toString());\r\n      onChangeQuantity(cartProductQuantity[selectedProductDetailId] || '0', Number(pQuantity[productIndex]) - Number(cartProductQuantity[selectedProductDetailId]));\r\n    }\r\n  }, [cartProductQuantity]);\r\n\r\n  const toggleQuantity = (isIncrement: boolean) => {\r\n    if (isIncrement) {\r\n      if (Number(selectedQuantity) <= Number(maxQuantity)) {\r\n        setSelectedQuantity((Number(selectedQuantity) + 1).toString());\r\n      }\r\n    } else {\r\n      if (selectedQuantity !== '1') {\r\n        setSelectedQuantity((Number(selectedQuantity) - 1).toString());\r\n      }\r\n    }\r\n  }\r\n\r\n  const setSize = (sizeId: string) => {\r\n    setSelectedSize(sizeId);\r\n    const selectedIndex = pSizeId.indexOf(sizeId);\r\n    const maxQ = pQuantity[selectedIndex];\r\n    const pdId = pDetailId[selectedIndex];\r\n    setSelectedProductDetailId(pdId);\r\n    setMaxQuantity((Number(maxQ) - Number(cartProductQuantity[pdId] || 0)).toString());\r\n    if (Number(selectedQuantity) > Number(maxQ)) {\r\n      setSelectedQuantity(maxQ);\r\n    }\r\n  }\r\n\r\n  const onChangeQuantity = (quantity: string, maxQaun = -1) => {\r\n    if (Number(quantity) > Number(maxQaun !== -1 ? maxQaun : maxQuantity)) {\r\n      setSelectedQuantity(Number(maxQaun !== -1 ? maxQaun : maxQuantity).toString())\r\n    } else {\r\n      setSelectedQuantity(Number(quantity).toString())\r\n    }\r\n  };\r\n\r\n  const onBlurQuantity = (quantity: string) => {\r\n    if (quantity === '' || Number(quantity) === 0) {\r\n      setSelectedQuantity('1')\r\n    }\r\n  };\r\n\r\n  const addToCart = () => {\r\n    if (!userData.data?.userId) {\r\n      const cartData = {\r\n        productDetailId: selectedProductDetailId,\r\n        productQuantity: selectedQuantity,\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: selectedProductDetailId.toString(),\r\n        productImage: imageName,\r\n        productImagePath: imagePath,\r\n        productName: name,\r\n        subcategory: productCategoryName,\r\n        productPrice: showINRUSD(userLocation.data || 'IN', { priceINR: pINR, priceUSD: pUSD }),\r\n        productId: productId,\r\n      } as CustomerCart;\r\n\r\n      dispatch(addUpdateCart(cartData, false))\r\n    } else {\r\n      const cartData = {\r\n        productDetailId: selectedProductDetailId,\r\n        productQuantity: selectedQuantity,\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: '0',\r\n        productImage: imageName,\r\n        productImagePath: imagePath,\r\n        productName: name,\r\n        subcategory: productCategoryName,\r\n        productPrice: '0',\r\n        productId: productId,\r\n      } as CustomerCart;\r\n\r\n      dispatch(addUpdateCart(cartData, true))\r\n    }\r\n  }\r\n\r\n  const checkForDefaultSize = (sizeList: string[]) => {\r\n    return sizeList.length === 1 && sizeList[0].toLowerCase() === 'default';\r\n  }\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a onClick={() => history.push('/')}>Home</a></li>\r\n                <li><a onClick={() => history.push('/product/' + props.productCategoryName)}>{props.productCategoryName}</a></li>\r\n                <li className=\"visibility-none\"></li>\r\n              </ul>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom\">{props.name}</h1>\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n                <div>\r\n                  <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n                    <div className=\"uk-grid-small uk-grid-collapse uk-grid-match\" uk-grid=\"true\">\r\n                      <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n                        <div className=\"uk-grid-collapse uk-child-width-1-1\" uk-slideshow=\"finite: true; ratio: 4:3;\" uk-grid=\"true\">\r\n                          <div>\r\n                            <ul className=\"uk-slideshow-items\" uk-lightbox=\"animation: slide; pause-on-hover: true\">\r\n                              {\r\n                                props.mainSlider\r\n                              }\r\n                            </ul>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"uk-card-body uk-flex uk-flex-center\">\r\n                              <div className=\"uk-width-1-2 uk-visible@s\">\r\n                                <div uk-slider=\"finite: true\">\r\n                                  <div className=\"uk-position-relative\">\r\n                                    <div className=\"uk-slider-container\">\r\n                                      <ul className=\"tm-slider-items uk-slider-items uk-child-width-1-4 uk-grid uk-grid-small\">\r\n                                        {\r\n                                          props.smallSlider\r\n                                        }\r\n                                      </ul>\r\n                                      <div>\r\n                                        <a className=\"uk-position-center-left-out uk-position-small\" href=\"#\" uk-slider-item=\"previous\" uk-slidenav-previous=\"true\"></a>\r\n                                        <a className=\"uk-position-center-right-out uk-position-small\" href=\"#\" uk-slider-item=\"next\" uk-slidenav-next=\"true\"></a>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <ul className=\"uk-slideshow-nav uk-dotnav uk-hidden@s\"></ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"uk-width-1-1 uk-width-1-3@m tm-product-info\">\r\n                        <div className=\"uk-card-body\">\r\n                          <div className=\"uk-margin\">\r\n                            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"uk-margin\">\r\n                            <div className=\"uk-padding-small uk-background-primary-lighten uk-border-rounded\">\r\n                              <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                                <div>\r\n                                  {\r\n                                    userData.data?.discount && userData.data?.discount !== '0' &&\r\n                                    <del className=\"uk-text-meta\">{getCurrencyIcon(userLocation.data || 'IN')} {showINRUSD(userLocation.data || 'IN', { priceINR: pINR, priceUSD: pUSD })}</del>\r\n                                  }\r\n                                  <div className=\"tm-product-price\">{getCurrencyIcon(userLocation.data || 'IN')} {calculateUserDiscount(userData.data?.discount || '0', showINRUSD(userLocation.data || 'IN', { priceINR: pINR, priceUSD: pUSD }))}</div>\r\n                                </div>\r\n                                <div>\r\n                                  <div className=\"uk-grid-small uk-child-width-1-2\" uk-grid=\"true\">\r\n                                    <div className={`${checkForDefaultSize(pSize) ? 'default-product-size' : ''}`}>\r\n                                      <label>\r\n                                        <div className=\"uk-form-label\">Size</div>\r\n                                        <select className=\"uk-select\"\r\n                                          value={selectedSize}\r\n                                          id=\"selectedSize\"\r\n                                          onChange={(e) => { setSize(e.currentTarget.value) }}>\r\n                                          {\r\n                                            pSize.map((size, index) => {\r\n                                              return <option key={index} value={pSizeId[index]}>{size}</option>\r\n                                            })\r\n                                          }\r\n\r\n                                        </select>\r\n                                      </label>\r\n                                    </div>\r\n                                    <div>\r\n                                      <label>\r\n                                        <div className=\"uk-form-label\">Quantity {selectedSize !== '0' && <span className=\"uk-notification-message-danger uk-text-meta\">(Max {isActive ? maxQuantity : 0})</span>}</div>\r\n                                        <div>\r\n                                          <div className=\"uk-inline\">\r\n                                            {Number(maxQuantity) > 0 && isActive &&\r\n                                              <>\r\n                                                {Number(selectedQuantity) === 1 && <a className=\"uk-form-icon\"></a>}\r\n                                                {Number(selectedQuantity) > 1 && <a className=\"uk-form-icon\" onClick={() => toggleQuantity(false)} uk-icon=\"icon: minus\"></a>}\r\n                                                {Number(selectedQuantity) < Number(maxQuantity) && <a className=\"uk-form-icon uk-form-icon-flip\" onClick={() => toggleQuantity(true)} uk-icon=\"icon: plus\"></a>}\r\n                                                {Number(selectedQuantity) === Number(maxQuantity) && <a className=\"uk-form-icon uk-form-icon-flip\"></a>}\r\n                                              </>\r\n                                            }\r\n\r\n                                            <input className=\"uk-input uk-text-center\"\r\n                                              onChange={(e) => onChangeQuantity(e.currentTarget.value)}\r\n                                              onBlur={(e) => onBlurQuantity(e.currentTarget.value)}\r\n                                              type=\"number\"\r\n                                              disabled={Number(maxQuantity) === 0 || !isActive}\r\n                                              value={selectedQuantity} />\r\n                                          </div>\r\n                                        </div>\r\n                                      </label>\r\n                                    </div>\r\n                                    <div className={`${checkForDefaultSize(pSize) ? 'single-size-cart-button' : ''}`}>\r\n                                      <button\r\n                                        disabled={Number(maxQuantity) === 0 || !isActive}\r\n                                        className=\"uk-button uk-button-primary tm-product-add-button tm-shine js-add-to-cart\"\r\n                                        onClick={() => addToCart()}>\r\n                                        {Number(maxQuantity) === 0 || !isActive ? 'out of stock' : 'add to cart'}\r\n                                      </button>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div>\r\n                                  {\r\n                                    props.productCategoryName.toLowerCase() === 'footwear'&&\r\n                                    <a uk-toggle=\"target: #product-footwear-size-model\" className=\"uk-margin-xsmall-right uk-notification-message-danger\"><span uk-icon=\"file-text\"></span> Size Chart </a>\r\n                                  }\r\n                                  {\r\n                                    props.subCategory.toString() === '1' &&\r\n                                    <a uk-toggle=\"target: #product-bra-size-model\" className=\"uk-margin-xsmall-right uk-notification-message-danger\"><span uk-icon=\"file-text\"></span> Size Chart </a>\r\n                                  }\r\n                                  {\r\n                                    props.subCategory.toString() === '3' &&\r\n                                    <a uk-toggle=\"target: #product-camisole-size-model\" className=\"uk-margin-xsmall-right uk-notification-message-danger\"><span uk-icon=\"file-text\"></span> Size Chart </a>\r\n                                  }\r\n                                </div>\r\n                                {\r\n                                  !(props.productCategoryName.toLowerCase() === 'footwear' || props.productCategoryName.toLowerCase() === 'home essential') &&\r\n                                  <span className=\"uk-text-small\">This item is non-returnable</span>\r\n                                }\r\n                                \r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"uk-margin\">\r\n                            <div className=\"uk-padding-small uk-background-muted uk-border-rounded\">\r\n                              <div className=\"uk-grid-small uk-child-width-1-1 uk-text-small\" uk-grid=\"true\">\r\n                                <div>\r\n                                  <div className=\"uk-grid-collapse\" uk-grid=\"true\">\r\n                                    {/* <span className=\"uk-margin-xsmall-right\" uk-icon=\"chevron-right\"></span> */}\r\n                                    <div>\r\n                                      <div className=\"uk-text-bolder\">Product Details</div>\r\n                                      <div className=\"uk-text-small\">\r\n                                        {props.description}\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      {/* <div className=\"uk-width-1-1 tm-product-description\" id=\"description\">\r\n                        <header>\r\n                          <nav className=\"tm-product-nav\" uk-sticky=\"offset: 60; bottom: #description; cls-active: tm-product-nav-fixed;\">\r\n                            <ul className=\"uk-subnav uk-subnav-pill js-product-switcher\" uk-switcher=\"connect: .js-tabs\">\r\n                              <li><a className=\"js-scroll-to-description\" href=\"#description\">Overview</a></li>\r\n                            </ul>\r\n                          </nav>\r\n                        </header>\r\n                        <div className=\"uk-card-body\">\r\n                          <div className=\"uk-switcher js-product-switcher js-tabs\">\r\n                            <section>\r\n                              <article className=\"uk-article\">\r\n                                <div className=\"uk-article-body\">\r\n                                  <p>\r\n                                    {props.description}\r\n                                  </p>\r\n\r\n                                </div>\r\n                              </article>\r\n                            </section>\r\n                          </div>\r\n                        </div>\r\n                      </div> */}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {\r\n                  relatedProducts.length > 0 &&\r\n                  <QuickProductList productList={relatedProducts} />\r\n                }\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      {\r\n        props.subCategory.toString() === '1' &&\r\n        <div id=\"product-bra-size-model\" uk-modal=\"true\">\r\n          <div className='uk-modal-dialog uk-modal-body uk-margin-auto-vertical size-chart-width lingerie-modal-big'>\r\n            <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n\r\n                <ul className=\"uk-subnav uk-subnav-pill\" uk-switcher=\"true\">\r\n                  <li><a onClick={() => setShowInch(false)}>cm</a></li>\r\n                  <li><a onClick={() => setShowInch(true)}>in</a></li>\r\n                </ul>\r\n                {\r\n                  showInch ?\r\n                    <>\r\n                      <img className=\"uk-hidden@s\" src=\"/mobile-bra-in-measure.jpg\" alt=\"mobile-bra-in-measure\" />\r\n                      <img className=\"uk-visible@s\" src=\"/big-bra-in-measure-combo.jpg\" alt=\"big-bra-in-measure-combo\" />\r\n                    </>\r\n                    : <>\r\n                      <img className=\"uk-hidden@s\" src=\"/mobile-bra-cm-measure.jpg\" alt=\"mobile-bra-cm-measure\" />\r\n                      <img className=\"uk-visible@s\" src=\"/big-bra-cm-measure-combo.jpg\" alt=\"big-bra-cm-measure-combo\" />\r\n                    </>\r\n\r\n                }\r\n\r\n                <img className=\"uk-hidden@s\" src=\"/mobile-bra-measure.jpg\" alt=\"mobile-bra-measure\" />\r\n\r\n          </div>\r\n        </div>\r\n      }\r\n      {\r\n        props.productCategoryName.toLowerCase() === 'footwear' &&\r\n        <div id=\"product-footwear-size-model\" uk-modal=\"true\">\r\n          <div className='uk-modal-dialog uk-modal-body uk-margin-auto-vertical size-chart-width'>\r\n            <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n          \r\n                <img className=\"uk-visible@s\" src=\"/footwear_size_chart.jpg\" alt=\"footwear-size-chart\" />\r\n                <img className=\"uk-hidden@s\" src=\"/footwear_size_chart_mobile_1.jpg\" alt=\"footwear-size-chart\" />\r\n                <img className=\"uk-hidden@s\" src=\"/footwear_size_chart_mobile_2.jpg\" alt=\"footwear-size-chart\" />\r\n              \r\n\r\n          </div>\r\n        </div>\r\n      }\r\n      {\r\n        props.subCategory.toString() === '3' &&\r\n        <div id=\"product-camisole-size-model\" uk-modal=\"true\">\r\n          <div className='uk-modal-dialog uk-modal-body uk-margin-auto-vertical size-chart-width'>\r\n            <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n          \r\n                <img className=\"uk-visible@s\" src=\"/big-camisole.jpg\" alt=\"footwear-size-chart\" />\r\n                <img className=\"uk-hidden@s\" src=\"/mobile-camisole-size-measure.jpg\" alt=\"footwear-size-chart\" />\r\n                <img className=\"uk-hidden@s\" src=\"/mobile-camisole-measure.jpg\" alt=\"footwear-size-chart\" />\r\n              \r\n\r\n          </div>\r\n        </div>\r\n      }\r\n\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerProductDetails\r\n}","import React from 'react';\r\n\r\nconst CustomerProductDetailsLoading: React.FunctionComponent = () => {\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a href=\"#\">Home</a></li>\r\n                <li><span>Product</span></li>\r\n              </ul>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom\"></h1>\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n                <div>\r\n                  <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n                    <div className=\"uk-grid-small uk-grid-collapse uk-grid-match\" uk-grid=\"true\">\r\n                      <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n                        <div className=\"uk-grid-collapse uk-child-width-1-1\" uk-slideshow=\"finite: true; ratio: 4:3;\" uk-grid=\"true\">\r\n                          <div>\r\n                            {/* <div className=\"ph-item\">\r\n                            <div className=\"ph-col-12\">\r\n                              <div className=\"ph-picture-big\"></div>\r\n                            </div>\r\n                          </div> */}\r\n                            <ul className=\"uk-slideshow-items\" uk-lightbox=\"true\">\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"uk-card-body uk-flex uk-flex-center\">\r\n                              <div className=\"uk-width-1-2 uk-visible@s\">\r\n                                <div uk-slider=\"finite: true\">\r\n                                  <div className=\"uk-position-relative\">\r\n                                    <div className=\"uk-slider-container\">\r\n                                      <ul className=\"tm-slider-items uk-slider-items uk-child-width-1-4 uk-grid uk-grid-small loading-small-slider\">\r\n                                        <li uk-slideshow-item=\"0\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                        <li uk-slideshow-item=\"1\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                        <li uk-slideshow-item=\"2\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                        <li uk-slideshow-item=\"3\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                        <li uk-slideshow-item=\"4\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                      </ul>\r\n                                      {/* {\r\n                                        <div className=\"ph-item\">\r\n                                          <div className=\"ph-col-12\">\r\n                                            <div className=\"ph-picture\"></div>\r\n                                          </div>\r\n                                        </div>\r\n                                        // getFileNameAndPathSmall(imageNames, imagePaths)\r\n                                      } */}\r\n                                      <div>\r\n                                        <a className=\"uk-position-center-left-out uk-position-small\" href=\"#\" uk-slider-item=\"previous\" uk-slidenav-previous=\"true\"></a>\r\n                                        <a className=\"uk-position-center-right-out uk-position-small\" href=\"#\" uk-slider-item=\"next\" uk-slidenav-next=\"true\"></a>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <ul className=\"uk-slideshow-nav uk-dotnav uk-hidden@s\"></ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"uk-width-1-1 uk-width-1-3@m tm-product-info\">\r\n                        <div className=\"uk-card-body\">\r\n                          {/* <div className=\"uk-margin\">\r\n                            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                              <div><span className=\"uk-label uk-label-warning uk-margin-xsmall-right\">top selling</span><span className=\"uk-label uk-label-danger uk-margin-xsmall-right\">trade-in</span></div>\r\n                            </div>\r\n                          </div> */}\r\n                          <div className=\"uk-margin\">\r\n                            <div className=\"uk-padding-small uk-background-primary-lighten uk-border-rounded\">\r\n                              <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                                <div>\r\n                                  {/* <del className=\"uk-text-meta\">$1899.00</del> */}\r\n                                  <div className=\"tm-product-price\"></div>\r\n                                </div>\r\n                                <div>\r\n                                  <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                                    <div>\r\n                                      <a uk-icon=\"icon: minus; ratio: .75\"></a>\r\n                                      <input className=\"uk-input tm-quantity-input\" id=\"product-1\" type=\"text\" onChange={()=>{}} value=\"1\" />\r\n                                      <a uk-icon=\"icon: plus; ratio: .75\"></a>\r\n                                    </div>\r\n                                    <div><button className=\"uk-button uk-button-primary tm-product-add-button tm-shine js-add-to-cart\" disabled={true}>add to cart</button></div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          {/*<div className=\"uk-margin\">\r\n                            <div className=\"uk-padding-small uk-background-muted uk-border-rounded\">\r\n                               <div className=\"uk-grid-small uk-child-width-1-1 uk-text-small\" uk-grid=\"true\">\r\n                                <div>\r\n                                  <div className=\"uk-grid-collapse\" uk-grid=\"true\">\r\n                                    <span className=\"uk-margin-xsmall-right\" uk-icon=\"cart\"></span>\r\n                                    <div>\r\n                                      <div className=\"uk-text-bolder\">Delivery</div>\r\n                                      <div className=\"uk-text-xsmall uk-text-muted\">In stock, free, tomorrow</div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div>\r\n                                  <div className=\"uk-grid-collapse\" uk-grid=\"true\">\r\n                                    <span className=\"uk-margin-xsmall-right\" uk-icon=\"location\"></span>\r\n                                    <div>\r\n                                      <div className=\"uk-text-bolder\">Pick up from store</div>\r\n                                      <div className=\"uk-text-xsmall uk-text-muted\">In stock, free, tomorrow</div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div> */}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"uk-width-1-1 tm-product-description\" id=\"description\">\r\n                        <header>\r\n                          <nav className=\"tm-product-nav\" uk-sticky=\"offset: 60; bottom: #description; cls-active: tm-product-nav-fixed;\">\r\n                            <ul className=\"uk-subnav uk-subnav-pill js-product-switcher\" uk-switcher=\"connect: .js-tabs\">\r\n                              <li><a className=\"js-scroll-to-description\" href=\"#description\">Overview</a></li>\r\n                            </ul>\r\n                          </nav>\r\n                        </header>\r\n                        <div className=\"uk-card-body\">\r\n                          <div className=\"uk-switcher js-product-switcher js-tabs\">\r\n                            <section>\r\n                              <article className=\"uk-article\">\r\n                                <div className=\"uk-article-body\">\r\n                                  <p>\r\n\r\n                                  </p>\r\n\r\n                                </div>\r\n                              </article>\r\n                            </section>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerProductDetailsLoading\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProduct } from 'reducers/Product';\r\nimport { AppState, Cart, getRelatedProduct } from 'reducers';\r\nimport { ProductItem } from 'types';\r\nimport { originalServerImagePath, scaledServerImagePath } from 'appConstants';\r\nimport { CustomerProductDetails } from './CustomerProductDetails';\r\nimport { CustomerProductDetailsLoading } from './CustomerProductDetailsLoading';\r\n\r\ninterface cartQuantity {\r\n  [key: string]: string;\r\n};\r\n\r\nconst CustomerProductDetailsConstainer: React.FunctionComponent = () => {\r\n\r\n  const { product, queryProductId } = useParams();\r\n  const [ mainSlider, setMainSlider] = useState<JSX.Element[] | undefined>(undefined);\r\n  const [ smallSlider, setSmallSlider] = useState<JSX.Element[] | undefined>(undefined);\r\n  const [cartProductQuantity, setCartProductQuantity] = useState<cartQuantity>({});\r\n  const [cartProductFlag, setCartProductFlag] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getProduct(Number(queryProductId)));\r\n    setSmallSlider(undefined);\r\n  }, [queryProductId]);\r\n\r\n  const {\r\n    name, description, productCategoryId,\r\n    subCategory, quantity,\r\n    priceINR, priceUSD, productId, productCategoryName,\r\n    sizeId, size, colourId, imageNames, imagePaths, productDetailId, isActive\r\n  } = useSelector<AppState, ProductItem>(state => state.product.singleData || {} as ProductItem);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n\r\n  useEffect(()=>{\r\n      if (imageNames && imagePaths && imageNames.length > 0 && imagePaths.length > 0) {\r\n        const imageName = imageNames.split(',');\r\n        const imagePath = imagePaths.split(',');\r\n  \r\n        setMainSlider(imagePath.map((path: string, index: number) => {\r\n          return <li key={index}>\r\n            <a className=\"uk-card-body tm-media-box tm-media-box-zoom\" href={originalServerImagePath + path}>\r\n              <figure className=\"tm-media-box-wrap\"><img src={scaledServerImagePath + path} alt={imageName[index]} /></figure>\r\n            </a>\r\n          </li>\r\n        }))\r\n\r\n        setSmallSlider(imagePath.map((path: string, index: number) => {\r\n          return <li uk-slideshow-item={index} tabIndex={-1} key={index}>\r\n            <div className=\"tm-ratio tm-ratio-1-1\">\r\n              <a className=\"tm-media-box tm-media-box-frame\" href=\"#\">\r\n                <figure className=\"tm-media-box-wrap\">\r\n                  <img src={scaledServerImagePath + path} alt={imageName[index]} />\r\n                </figure>\r\n              </a>\r\n            </div>\r\n          </li>\r\n        }))\r\n      }\r\n  },[imageNames,imagePaths])\r\n\r\n  useEffect(()=>{\r\n    if(cart.data){\r\n      const cartProductCount = {} as cartQuantity;\r\n      cart.data.forEach(({productDetailId,productQuantity}) => {\r\n        cartProductCount[productDetailId] = productQuantity;\r\n      });\r\n      setCartProductQuantity(cartProductCount);\r\n      setCartProductFlag(true);\r\n    }\r\n  },[cart.data]);\r\n\r\n  useEffect(() => {\r\n    if(subCategory && queryProductId){\r\n      dispatch(getRelatedProduct(subCategory, Number(queryProductId)));\r\n    }\r\n  },[subCategory, queryProductId]);\r\n\r\n  return (\r\n    smallSlider && cartProductFlag  ? \r\n    <CustomerProductDetails \r\n      smallSlider={smallSlider}\r\n      mainSlider={mainSlider}\r\n      description={description || ''}\r\n      name={name || ''}\r\n      priceINR={priceINR || ''}\r\n      priceUSD={priceUSD || ''}\r\n      productCategoryName={productCategoryName || ''}\r\n      quantity={quantity || ''}\r\n      sizeId={sizeId || ''}\r\n      size={size || ''}\r\n      productId={productId || ''}\r\n      productDetailId={productDetailId || ''}\r\n      imageName={imageNames && imageNames.split(',')[0] || ''}\r\n      imagePath={imagePaths && imagePaths.split(',')[0] || ''}\r\n      cartProductQuantity={cartProductQuantity}\r\n      isActive={isActive || false}\r\n      subCategory={subCategory || 0}\r\n      /> \r\n    : <CustomerProductDetailsLoading/>\r\n  )\r\n};\r\n\r\nexport {\r\n  CustomerProductDetailsConstainer\r\n}","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { getCart, AppState, Cart, deleteCartItem, addUpdateCart, UserLocation, validateCoupon, Coupon, updateCartQuantity } from 'reducers';\r\nimport { scaledServerImagePath } from 'appConstants';\r\nimport { CustomerCart } from 'types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getCurrencyIcon } from 'services';\r\n\r\n\r\ninterface Quantity {\r\n  [key: string]: string\r\n}\r\nconst CartDetails: React.FunctionComponent = () => {\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [quantity, setQuantity] = useState<Quantity>();\r\n  const [enteredCoupon, setEnteredCoupon] = useState('');\r\n  const [quantityCheckMessage, setQuantityCheckMessage] = useState('Getting your data.');\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const couponStatus = useSelector<AppState, Coupon>(state => state.coupon);\r\n  const [deboucedId, setDeboucedId] = useState('');\r\n  const [quantityChanged, setQuantityChanged] = useState(false);\r\n  const [quantityChangedProductId, setQuantityChangedProductId] = useState('');\r\n  const orderQuantityCheckButtonRef = useRef<HTMLButtonElement>(null);\r\n  const orderQuantityCheckModalRef = useRef<HTMLDivElement>(null);\r\n  \r\n\r\n  useEffect(() => {\r\n    dispatch(getCart());\r\n    if (couponStatus.data?.length === 1) {\r\n      setEnteredCoupon(couponStatus.data[0].code);\r\n    }\r\n  }, []);\r\n\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n\r\n  useEffect(() => {\r\n    let qt: Quantity = {};\r\n    if (cart.data && cart.data.length > 0) {\r\n      cart.data.forEach((product: CustomerCart) => {\r\n        qt[product.productDetailId] = product.productQuantity || '0';\r\n      });\r\n      setQuantity(qt);\r\n      checkForAvailableQuantity(cart.data)\r\n    }\r\n  }, [cart.data]);\r\n  const deleteCart = (cartItem: CustomerCart) => {\r\n    dispatch(deleteCartItem(cartItem,true));\r\n  };\r\n\r\n  const checkForAvailableQuantity = (cartData: CustomerCart[]) => {\r\n    const orderDetailId = cartData.map((cartItem) => {\r\n      if (Number(cartItem.availableQuantity) < Number(cartItem.productQuantity)) {\r\n        setQuantityChanged(true);\r\n        return cartItem.cartId\r\n      } else {\r\n        return 0\r\n      }\r\n    })\r\n    setQuantityChangedProductId(orderDetailId.toString());\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(quantityChanged){\r\n      orderQuantityCheckButtonRef.current?.click();\r\n      dispatch(updateCartQuantity(quantityChangedProductId));\r\n    }\r\n  },[quantityChanged])\r\n\r\n  useEffect(() => {\r\n    if(cart._quantityUpdate && orderQuantityCheckModalRef.current?.getBoundingClientRect().top !== 0) {\r\n      dispatch(getCart());\r\n      setQuantityCheckMessage('We updated your cart based on the product availability.');\r\n      setTimeout(() => {\r\n        orderQuantityCheckButtonRef.current?.click();\r\n      },5000)\r\n      \r\n    }\r\n  },[cart._quantityUpdate])\r\n\r\n  const updateCart = (cartId: string, quantity: string, productDetailId: string) => {\r\n    dispatch(addUpdateCart({\r\n      productDetailId,\r\n      productQuantity: quantity,\r\n      currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n      cartId,\r\n      productPrice: '',\r\n      productId: ''\r\n    }, true));\r\n  };\r\n\r\n  const updateQantity = (cartId: string, productDetailId: string, availableQuantity: string, isIncrement: boolean, changedQuantity?: string) => {\r\n    if (quantity) {\r\n      if (changedQuantity) {\r\n        let chqty = changedQuantity\r\n        if (Number(chqty) > Number(availableQuantity)) {\r\n          chqty = availableQuantity\r\n        }\r\n        const newQuantity = { ...quantity, ...{ [productDetailId]: chqty.toString() } };\r\n        setDeboucedId(cartId + '-' + window.setTimeout(() => {\r\n          updateCart(cartId, chqty.toString(), productDetailId)\r\n        }, 500).toString());\r\n        setQuantity(newQuantity);\r\n      } else if (isIncrement) {\r\n        let updatedQuantity = Number(quantity[productDetailId]) + 1;\r\n        if (updatedQuantity > Number(availableQuantity)) {\r\n          updatedQuantity = Number(availableQuantity)\r\n        }\r\n        const newQuantity = { ...quantity, ...{ [productDetailId]: updatedQuantity.toString() } };\r\n        setDeboucedId(cartId + '-' + window.setTimeout(() => {\r\n          updateCart(cartId, updatedQuantity.toString(), productDetailId)\r\n        }, 500).toString());\r\n        setQuantity(newQuantity);\r\n      } else {\r\n        let updatedQuantity = Number(quantity[productDetailId]) - 1;\r\n        if (updatedQuantity < 0) {\r\n          updatedQuantity = 0\r\n        }\r\n        const newQuantity = { ...quantity, ...{ [productDetailId]: updatedQuantity.toString() } };\r\n        setDeboucedId(cartId + '-' + window.setTimeout(() => {\r\n          updateCart(cartId, updatedQuantity.toString(), productDetailId)\r\n        }, 500).toString());\r\n        setQuantity(newQuantity);\r\n      }\r\n\r\n      if (deboucedId !== '' && deboucedId.split('-')[0] === cartId.toString()) {\r\n        window.clearTimeout(Number(deboucedId.split('-')[1]));\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkCouponValidity = () => {\r\n    dispatch(validateCoupon(enteredCoupon));\r\n  }\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <header className=\"uk-card-header uk-text-uppercase uk-text-muted uk-text-center uk-text-small uk-visible@m\">\r\n          <div className=\"uk-grid-small uk-child-width-1-2\" uk-grid=\"true\">\r\n            <div>product</div>\r\n            <div>\r\n              <div className=\"uk-grid-small uk-child-width-expand\" uk-grid=\"true\">\r\n                <div>price</div>\r\n                <div className=\"tm-quantity-column\">quantity</div>\r\n                <div>sum</div>\r\n                <div className=\"uk-width-auto\"><div style={{ width: \"20px\" }}></div></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        {\r\n          cart.data && cart.data.map((cartItem: CustomerCart, index: number) => {\r\n            return <div className=\"uk-card-body\" key={index}>\r\n              <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@m uk-flex-middle\" uk-grid=\"true\">\r\n                <div>\r\n                  <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                    <div className=\"uk-width-1-3\">\r\n                      <div className=\"tm-ratio tm-ratio-4-3\">\r\n                        <a className=\"tm-media-box\" onClick={() => history.push('/productDetails/' + cartItem.productId)}>\r\n                          <figure className=\"tm-media-box-wrap\"><img src={scaledServerImagePath + cartItem.productImagePath} alt={cartItem.productImagePath}/></figure>\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"uk-width-expand\">\r\n                      <div className=\"uk-text-meta\">{cartItem.subcategory}</div>\r\n                      <a className=\"uk-link-heading\" onClick={() => history.push('/productDetails/' + cartItem.productId)}>{cartItem.productName}</a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-expand@s uk-text-center\" uk-grid=\"true\">\r\n                    <div>\r\n                      <div className=\"uk-text-muted uk-hidden@m\">Price</div>\r\n                      <div>{getCurrencyIcon(userLocation.data || 'IN')} {cartItem.productPrice}</div>\r\n                    </div>\r\n                    <div>\r\n                      <label className=\"uk-text-center\">\r\n                        <div className=\"cart-quantity cart-margin-auto\">\r\n                          <div className=\"uk-inline\">\r\n                            <a className=\"uk-form-icon\" uk-icon=\"icon: minus\"\r\n                              onClick={() => {\r\n                                updateQantity(cartItem.cartId, cartItem.productDetailId, cartItem.availableQuantity || '0', false)\r\n                              }}>\r\n                            </a>\r\n                            <a className=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: plus\"\r\n                              onClick={() => {\r\n                                updateQantity(cartItem.cartId, cartItem.productDetailId, cartItem.availableQuantity || '0', true)\r\n                              }}>\r\n                            </a>\r\n                            <input className=\"uk-input uk-text-center\"\r\n                              type=\"number\"\r\n                              value={quantity && quantity[cartItem.productDetailId] || 0}\r\n                              onChange={(e) => {\r\n                                updateQantity(cartItem.cartId, cartItem.productDetailId, cartItem.availableQuantity || '0', false, e.currentTarget.value)\r\n                              }} />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"uk-form-label\"><span className=\"uk-text-meta uk-text-primary colour-default\">(Max {cartItem.availableQuantity})</span></div>\r\n                      </label>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <div className=\"uk-text-muted uk-hidden@m\">Sum</div>\r\n                      <div>{getCurrencyIcon(userLocation.data || 'IN')} {cartItem.totalPrice}</div>\r\n                    </div>\r\n                    <div className=\"uk-width-auto@s\">\r\n                      {cart._isLoading && <span uk-spinner=\"true\"></span>}\r\n                      {!cart._isLoading && <a className=\"uk-text-danger\" onClick={() => deleteCart(cartItem)} uk-tooltip=\"Remove\"><span uk-icon=\"trash\"></span></a>}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          })\r\n        }\r\n        <div className=\"uk-card-footer\">\r\n          <label>\r\n            <span className=\"uk-form-label uk-margin-small-right\">Promo Code</span>\r\n            <div className=\"uk-inline\">\r\n              <a className=\"uk-form-icon uk-form-icon-flip\" onClick={() => checkCouponValidity()} uk-icon=\"arrow-right\"></a>\r\n              <input className=\"uk-input uk-form-width-small\" type=\"text\"\r\n                value={enteredCoupon}\r\n                onChange={(e) => setEnteredCoupon(e.currentTarget.value)}\r\n              />\r\n            </div>\r\n            {couponStatus._isSuccess && <span className=\"login-error-message coupon-message uk-label uk-label-success\"><span uk-icon=\"check\"></span> Coupon is valid !</span>}\r\n            {couponStatus._isError && <span className=\"login-error-message coupon-message uk-label uk-label-danger\"><span uk-icon=\"ban\"></span> Coupon is Invalid.</span>}\r\n          </label>\r\n        </div>\r\n        <button ref={orderQuantityCheckButtonRef} id=\"payment-loading\" uk-toggle=\"target: #my-id\" type=\"button\"></button>\r\n        <div id=\"my-id\" uk-modal=\"true; esc-close: false; bg-close: false\">\r\n          <div className=\"uk-modal-dialog uk-modal-body uk-margin-auto-vertical\">\r\n            {\r\n              !cart._isLoading && <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n            }\r\n            <div ref={orderQuantityCheckModalRef}  className=\"uk-modal-body uk-nav-center\">\r\n              <p>{quantityCheckMessage}</p>\r\n              {\r\n                cart._isLoading && <div uk-spinner=\"true\"></div>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport {\r\n  CartDetails\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState, Cart, UserLocation } from 'reducers';\r\nimport { CustomerCart, ProductCoupon } from 'types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getCurrencyIcon, calculateUserDiscountPrice, calculateUserDiscount } from 'services';\r\n\r\nconst CartPrice: React.FunctionComponent = () => {\r\n\r\n  const [cartTotal, setCartTotal] = useState(0);\r\n  const [userDiscountTotal, setUserDiscountTotal] = useState('0');\r\n  const [userCouponTotal, setUserCouponTotal] = useState('0');\r\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState('0');\r\n  const [discountedTotal, setDiscountedTotal] = useState('0');\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const couponData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (cart.data && cart.data.length > 0) {\r\n      let total = 0;\r\n      cart.data.forEach((cart: CustomerCart) => {\r\n        if (cart.totalPrice) {\r\n          total += Number(cart.totalPrice);\r\n        }\r\n      });\r\n      setCartTotal(total);\r\n      if (couponData.length === 1) {\r\n        let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', total.toString());\r\n        let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', total.toString());\r\n        let couponPrice = calculateUserDiscountPrice(couponData[0].value, priceAfterDiscount.toString());\r\n        let priceAfterCoupon = calculateUserDiscount(couponData[0].value || '0', priceAfterDiscount.toString());\r\n        setDiscountedTotal(priceAfterDiscount);\r\n        setUserDiscountTotal(discountPrice);\r\n        setUserCouponTotal(couponPrice);\r\n        setTotalAfterDiscount(priceAfterCoupon);\r\n      } else {\r\n        let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', total.toString());\r\n        let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', total.toString());\r\n        setUserDiscountTotal(discountPrice);\r\n        setTotalAfterDiscount(priceAfterDiscount);\r\n      }\r\n    } else {\r\n      setCartTotal(0);\r\n      setUserDiscountTotal('0');\r\n      setTotalAfterDiscount('0');\r\n      setDiscountedTotal('0');\r\n      setUserCouponTotal('0');\r\n    }\r\n  }, [cart.data,couponData]);\r\n\r\n  return (\r\n    <div className=\"uk-width-1-1 tm-aside-column uk-width-1-4@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\" uk-sticky=\"offset: 30; bottom: true; media: @m;\">\r\n        {\r\n          (userData.data?.discount && userData.data?.discount !== '0' || couponData.length === 1 ) &&\r\n          <div className=\"uk-card-body\">\r\n            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand uk-text-muted\">Subtotal</div>\r\n              <div>{getCurrencyIcon(userLocation.data || 'IN')} {cartTotal}</div>\r\n            </div>\r\n            {\r\n              userData.data?.discount && userData.data?.discount !== '0' &&\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand uk-text-muted\">Discount ({userData.data?.discount}%)</div>\r\n              <div className=\"uk-text-danger\">− {getCurrencyIcon(userLocation.data || 'IN')} {userDiscountTotal}</div>\r\n            </div>\r\n            }\r\n            \r\n          </div>\r\n        }\r\n        {\r\n          couponData.length === 1 &&\r\n          <div className=\"uk-card-body\">\r\n            {\r\n              userData.data?.discount && userData.data?.discount !== '0' &&\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand uk-text-muted\">Discounted Total</div>\r\n                <div>{getCurrencyIcon(userLocation.data || 'IN')} {discountedTotal}</div>\r\n              </div>\r\n            }\r\n\r\n            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand uk-text-muted\">Coupon ({couponData[0] && couponData[0].value}%)</div>\r\n              <div className=\"uk-text-danger\">− {getCurrencyIcon(userLocation.data || 'IN')} {userCouponTotal}</div>\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n            <div className=\"uk-width-expand uk-text-muted\">Total</div>\r\n            <div className=\"uk-text-lead uk-text-bolder\">{getCurrencyIcon(userLocation.data || 'IN')} {totalAfterDiscount}</div>\r\n          </div>\r\n          <button className=\"uk-button uk-button-primary uk-margin-small uk-width-1-1\"\r\n            disabled={cartTotal === 0}\r\n            onClick={() => { history.push('/checkout') }}\r\n          >\r\n            checkout\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  CartPrice\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CartDetails } from './CartDetails';\r\nimport { CartPrice } from './CartPrice';\r\n\r\nconst CustomerCartContainer: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a onClick={()=>history.push('/')}>Home</a></li>\r\n                <li><span>Cart</span></li>\r\n              </ul>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom\">Cart</h1>\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n                <CartDetails/>\r\n                <CartPrice/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport {\r\n  CustomerCartContainer\r\n}","import React, { useState, useEffect, useRef, Dispatch, SetStateAction } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, Cart, getRazorPayOrder, saveRazorPayOrder, getCart, errorCheckout, getCodOrder, saveCodOrder, UserLocation, defaultCheckout, setShippingPrice } from 'reducers';\r\nimport { CustomerCart, ProductCoupon, CustomerShippment } from 'types';\r\nimport { PayPalButton, PayPalPayment, CashOnDeliveryPayment } from 'components/shared';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getCurrencyIcon, calculateUserDiscountPrice, calculateUserDiscount } from 'services';\r\n\r\ninterface Props {\r\n  paymentMode: string;\r\n  shippingType: string;\r\n  setCartTotal: Dispatch<SetStateAction<number>>;\r\n};\r\ndeclare global {\r\n  interface Window { Razorpay: any; }\r\n}\r\nwindow.Razorpay = window.Razorpay || {};\r\n\r\nconst CheckoutPrice: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [cartTotalPrice, setCartTotalPrice] = useState(0);\r\n  const [userDiscountTotal, setUserDiscountTotal] = useState('0');\r\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState('0');\r\n  const [userCouponTotal, setUserCouponTotal] = useState('0');\r\n  const [discountedTotal, setDiscountedTotal] = useState('0');\r\n  const [priceAfterShipping, setPriceAfterShipping] = useState('0');\r\n  const [quantityCount, setQuantityCount] = useState(0);\r\n  const [cartOrderId, setCartOrderId] = useState(0);\r\n  const [paymentMessage, setPaymentMessage] = useState(\"Please don't close this window while we process your payment.\")\r\n  const [paymentError, setPaymentError] = useState(false);\r\n  const [paymentSuccess, setPaymentSuccess] = useState(false);\r\n  const [errorHappendAt, setErrorHappendAt] = useState('close');\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n  const checkout = useSelector((state: AppState) => state.checkout);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const couponData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);\r\n  const shippingCost = useSelector<AppState, CustomerShippment>(state => state.customerShippment.data || {} as CustomerShippment);\r\n  const paymentLoadingRef = useRef<HTMLButtonElement>(null);\r\n  const [containerIsCard, setContainerIsCard] = useState(false);\r\n  const [ukSticky, setUkSicky] = useState({});\r\n  const [showCodContainer, setShowCodContainer] = useState(false);\r\n  const [noAddressError, setNoAddressError] = useState(false);\r\n  const [enteredOTP, setEnteredOTP] = useState('');\r\n  const [didPriceChanged, setDidPriceChanged] = useState(false);\r\n  const [timeForShowPriceChange, setTimeForShowPriceChange] = useState(5);\r\n  let timer: NodeJS.Timer;\r\n\r\n  useEffect(() => {\r\n    let cartPrice = 0;\r\n    if (cart.data && cart.data.length > 0) {\r\n      cart.data.forEach(({ totalPrice }) => {\r\n        cartPrice += Number(totalPrice)\r\n      });\r\n      setCartTotalPrice(cartPrice);\r\n      props.setCartTotal(cartPrice);\r\n      if (couponData.length === 1) {\r\n        let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString());\r\n        let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString());\r\n        let couponPrice = calculateUserDiscountPrice(couponData[0].value, priceAfterDiscount.toString());\r\n        let priceAfterCoupon = calculateUserDiscount(couponData[0].value || '0', priceAfterDiscount.toString());\r\n        setDiscountedTotal(priceAfterDiscount);\r\n        setUserDiscountTotal(discountPrice);\r\n        setUserCouponTotal(couponPrice);\r\n        setTotalAfterDiscount(priceAfterCoupon);\r\n        calculateShippingCost(cart.data, priceAfterCoupon);\r\n\r\n      } else {\r\n        let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString());\r\n        let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString());\r\n        setUserDiscountTotal(discountPrice);\r\n        setTotalAfterDiscount(priceAfterDiscount);\r\n        calculateShippingCost(cart.data, priceAfterDiscount);\r\n      }\r\n      setCartOrderId(Number(cart.data[0].orderId));\r\n    } else {\r\n      setCartTotalPrice(0);\r\n      setUserDiscountTotal('0');\r\n      setTotalAfterDiscount('0');\r\n      setPriceAfterShipping('0')\r\n      props.setCartTotal(0);\r\n    }\r\n    if (didPriceChanged) {\r\n      setDidPriceChanged(false);\r\n      if (timeForShowPriceChange === 0) {\r\n        paymentLoadingRef.current?.click();\r\n      } else {\r\n        clearTimeout(timer);\r\n        timer = setTimeout(() => {\r\n          paymentLoadingRef.current?.click();\r\n          clearTimeout(timer);\r\n        }, 5000)\r\n      }\r\n    }\r\n  }, [cart.data, userData.data, props.shippingType]);\r\n\r\n  useEffect(() => {\r\n    if (userLocation.data === 'IN') {\r\n      if (checkout.data && checkout.data.orderId && props.paymentMode === 'online') {\r\n        const {\r\n          key,\r\n          currency,\r\n          orderId,\r\n          name\r\n        } = checkout.data\r\n        var options = {\r\n          \"key\": key,\r\n          \"currency\": currency,\r\n          \"name\": name,\r\n          \"description\": \"\",\r\n          \"order_id\": orderId,\r\n          \"handler\": function (response: any) {\r\n            paymentLoadingRef.current?.click();\r\n            successRazorPay(response.razorpay_payment_id, response.razorpay_order_id, response.razorpay_signature)\r\n          },\r\n          \"modal\": {\r\n            \"ondismiss\": function () {\r\n              setPaymentError(true);\r\n              dispatch(errorCheckout(''));\r\n            }\r\n          },\r\n          \"prefill\": {\r\n            \"name\": userData.data?.firstName || '' + userData.data?.lastName,\r\n            \"email\": userData.data?.emailAddress,\r\n            \"contact\": userData.data?.mobile\r\n          },\r\n          \"notes\": {\r\n            \"address\": \"Razorpay Corporate Office\"\r\n          },\r\n          \"theme\": {\r\n            \"color\": \"#F37254\"\r\n          }\r\n        };\r\n        var rzp1 = new window.Razorpay(options);\r\n        rzp1.on('payment.failed', function (response: any) {\r\n          setErrorHappendAt('failed');\r\n          console.log('code', response.error.code);\r\n          console.log('desc', response.error.description);\r\n          console.log('source', response.error.source);\r\n          console.log('step', response.error.step);\r\n          console.log('reason', response.error.reason);\r\n          console.log('metadata', response.error.metadata);\r\n        });\r\n        rzp1.open();\r\n      } else if (checkout.data && checkout.data.otp && props.paymentMode === 'cod') {\r\n        setShowCodContainer(true);\r\n      }\r\n    }\r\n  }, [checkout.data]);\r\n\r\n  useEffect(() => {\r\n    if (checkout._priceChanged && (props.paymentMode === 'online' || props.paymentMode === 'cod')) {\r\n      setPaymentMessage(checkout.message || '');\r\n      dispatch(getCart());\r\n      paymentLoadingRef.current?.click();\r\n      setDidPriceChanged(true);\r\n      timer = setInterval(() => {\r\n        if (timeForShowPriceChange > 0) {\r\n          setTimeForShowPriceChange(timeForShowPriceChange - 1);\r\n        }\r\n      }, 1000);\r\n    }\r\n  }, [checkout._priceChanged]);\r\n\r\n  useEffect(() => {\r\n    if (paymentError && props.paymentMode === 'online') {\r\n      if (errorHappendAt === 'failed') {\r\n        setPaymentMessage('Payment failure from Razorpay, please try again.');\r\n        paymentLoadingRef.current?.click();\r\n      } else if (errorHappendAt === 'close') {\r\n        setPaymentMessage('Payment incomplete, please try again.');\r\n        paymentLoadingRef.current?.click();\r\n      }\r\n    }\r\n  }, [paymentError]);\r\n\r\n  useEffect(() => {\r\n    if (checkout._isPaymentSucceess &&\r\n      (props.paymentMode === 'online' || props.paymentMode === 'cod')) {\r\n        if(props.paymentMode === 'cod'){\r\n          setPaymentMessage('Order placed !!');\r\n        }else{\r\n          setPaymentMessage('Payment is successful !!');\r\n        }\r\n      setPaymentSuccess(true);\r\n      setPaymentError(false);\r\n      dispatch(getCart());\r\n      setShowCodContainer(false);\r\n      setTimeout(() => {\r\n        dispatch(defaultCheckout());\r\n        paymentLoadingRef.current?.click();\r\n        history.push('userinformation/orders');\r\n      }, 5000);\r\n    }\r\n  }, [checkout._isPaymentSucceess]);\r\n\r\n  useEffect(() => {\r\n    if (!paymentError) {\r\n      if (checkout._isError && props.paymentMode === 'online') {\r\n        setPaymentMessage(checkout.message || '');\r\n        setPaymentSuccess(false);\r\n        setPaymentError(true);\r\n        setErrorHappendAt('DB');\r\n      } else if (checkout._isError && props.paymentMode === 'cod') {\r\n        setPaymentMessage(checkout.message || '');\r\n        setPaymentSuccess(false);\r\n        setPaymentError(true);\r\n        setShowCodContainer(true);\r\n      }\r\n    }\r\n  }, [checkout._isError])\r\n\r\n  useEffect(()=>{\r\n    if(props.paymentMode !== 'cod'){\r\n      setShowCodContainer(false)\r\n    }\r\n  },[props.paymentMode])\r\n  const successRazorPay = (razorpayPaymentId: string, razorpayOrderId: string, razorpaySignature: string) => {\r\n    dispatch(saveRazorPayOrder({\r\n      razorpayPaymentId,\r\n      razorpayOrderId,\r\n      razorpaySignature,\r\n      orderId: cartOrderId,\r\n      orderNumber: checkout.data && checkout.data.receipt || '',\r\n      addressId: userData.data && userData.data.addressId || '',\r\n      couponId: couponData && couponData[0] && couponData[0].couponId,\r\n      userAddress: userData.data?.addressLineOne + ' ' + userData.data?.addressLineTwo + ' ' +\r\n      userData.data?.addressLineThree + ' ' + userData.data?.city + ' ' + userData.data?.state +\r\n      ' ' + userData.data?.pincode + ' ' + userData.data?.country,\r\n      userName: userData.data?.firstName + ' ' + userData.data?.lastName\r\n    }));\r\n  }\r\n  const proceedWithPayment = () => {\r\n    if(userData.data?.addressId){\r\n      if (props.paymentMode === 'online') {\r\n        setPaymentError(false);\r\n        dispatch(getRazorPayOrder(totalAfterDiscount.toString(), cartOrderId, couponData && couponData[0] && couponData[0].couponId))\r\n      } else if (props.paymentMode === 'cod') {\r\n        setPaymentError(false);\r\n        dispatch(getCodOrder(totalAfterDiscount.toString(), cartOrderId, couponData && couponData[0] && couponData[0].couponId));\r\n      }\r\n    } else{\r\n      setNoAddressError(true);\r\n      setTimeout(() => {\r\n        setNoAddressError(false);\r\n      },5000) \r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (containerIsCard) {\r\n      setUkSicky({});\r\n    } else {\r\n      setUkSicky({\r\n        'uk-sticky': \"offset: 60; bottom: true; media: @m;\"\r\n      })\r\n    }\r\n  }, [containerIsCard])\r\n\r\n  const successCod = () => {\r\n    dispatch(saveCodOrder({\r\n      otp: enteredOTP,\r\n      orderId: cartOrderId,\r\n      addressId: userData.data && userData.data.addressId || '',\r\n      couponId: couponData && couponData[0] && couponData[0].couponId,\r\n      userAddress: userData.data?.addressLineOne + ' ' + userData.data?.addressLineTwo + ' ' +\r\n      userData.data?.addressLineThree + ' ' + userData.data?.city + ' ' + userData.data?.state +\r\n      ' ' + userData.data?.pincode + ' ' + userData.data?.country,\r\n      userName: userData.data?.firstName + ' ' + userData.data?.lastName\r\n    }));\r\n    setPaymentMessage(\"Please don't close this window while we process your payment.\");\r\n    setPaymentSuccess(false);\r\n    setPaymentError(false);\r\n    paymentLoadingRef.current?.click();\r\n  }\r\n\r\n  const calculateShippingCost = (cartData: CustomerCart[], totalAfterDiscount: string) => {\r\n    let itemCount = cartData.reduce((accumulator, cart) => ({ 'productQuantity': (Number(accumulator.productQuantity) + Number(cart.productQuantity)).toString() } as CustomerCart));\r\n    setQuantityCount(Number(itemCount.productQuantity));\r\n    if (props.shippingType === 'standard') {\r\n      if (Number(itemCount.productQuantity) > 1) {\r\n        const cost = (10 + ((Number(itemCount.productQuantity) - 1) * 6));\r\n        dispatch(setShippingPrice({ 'shippmentPrice': cost.toString() } as CustomerShippment));\r\n        setPriceAfterShipping((Number(totalAfterDiscount) + cost).toString());\r\n      } else {\r\n        dispatch(setShippingPrice({ 'shippmentPrice': '10' } as CustomerShippment));\r\n        setPriceAfterShipping((Number(totalAfterDiscount) + 10).toString());\r\n      }\r\n    } else {\r\n      if (Number(itemCount.productQuantity) > 1) {\r\n        const cost = (18 + ((Number(itemCount.productQuantity) - 1) * 10));\r\n        dispatch(setShippingPrice({ 'shippmentPrice': cost.toString() } as CustomerShippment));\r\n        setPriceAfterShipping((Number(totalAfterDiscount) + cost).toString());\r\n      } else {\r\n        dispatch(setShippingPrice({ 'shippmentPrice': '18' } as CustomerShippment));\r\n        setPriceAfterShipping((Number(totalAfterDiscount) + 18).toString());\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"uk-width-1-1 uk-width-1-4@m tm-aside-column\">\r\n\r\n        <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\"\r\n          {\r\n          ...(\r\n            ukSticky\r\n          )\r\n          }\r\n        >\r\n          <section className=\"uk-card-body\">\r\n            <h4>Items in order</h4>\r\n            {\r\n              cart.data && cart.data.map((cartItem: CustomerCart, index: number) => {\r\n                return (\r\n                  <div key={index} className=\"uk-grid-small\" uk-grid=\"true\">\r\n                    <div className=\"uk-width-expand\">\r\n                      <div className=\"uk-text-small\">{cartItem.productName}</div>\r\n                      <div className=\"uk-text-meta\">{cartItem.productQuantity} × {getCurrencyIcon(userLocation.data || 'IN')} {cartItem.productPrice}</div>\r\n                    </div>\r\n                    <div className=\"uk-text-right\"><div>{getCurrencyIcon(userLocation.data || 'IN')} {cartItem.totalPrice}</div></div>\r\n                  </div>\r\n                )\r\n              })\r\n            }\r\n          </section>\r\n          {\r\n            userData.data?.discount && userData.data?.discount !== '0' &&\r\n            <section className=\"uk-card-body\">\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Subtotal</div></div>\r\n                <div className=\"uk-text-right\"><div>{getCurrencyIcon(userLocation.data || 'IN')} {cartTotalPrice || 0}</div></div>\r\n              </div>\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Discount ({userData.data?.discount}%)</div></div>\r\n                <div className=\"uk-text-right\"><div className=\"uk-text-danger\">- {getCurrencyIcon(userLocation.data || 'IN')} {userDiscountTotal}</div></div>\r\n              </div>\r\n            </section>\r\n\r\n          }\r\n          {\r\n            couponData.length === 1 &&\r\n            <section className=\"uk-card-body\">\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Discounted Total</div></div>\r\n                <div className=\"uk-text-right\"><div>{getCurrencyIcon(userLocation.data || 'IN')} {discountedTotal}</div></div>\r\n              </div>\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Coupon ({couponData[0] && couponData[0].value}%)</div></div>\r\n                <div className=\"uk-text-right\"><div className=\"uk-text-danger\">- {getCurrencyIcon(userLocation.data || 'IN')} {userCouponTotal}</div></div>\r\n              </div>\r\n            </section>\r\n          }\r\n          {\r\n            userLocation.data !== 'IN' &&\r\n            <section className=\"uk-card-body\">\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Subtotal</div></div>\r\n                <div className=\"uk-text-right\"><div>{getCurrencyIcon(userLocation.data || 'IN')} {totalAfterDiscount}</div></div>\r\n              </div>\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Shipping</div></div>\r\n                <div className=\"uk-text-right\"><div className=\"uk-text-success\">+ {getCurrencyIcon(userLocation.data || 'IN')} {shippingCost.shippmentPrice}</div></div>\r\n              </div>\r\n            </section>\r\n          }\r\n\r\n          {\r\n            showCodContainer && props.paymentMode==='cod' &&\r\n            <CashOnDeliveryPayment showOtpContainer={showCodContainer} setEnteredOTP={setEnteredOTP} />\r\n          }\r\n          <section className=\"uk-card-body\">\r\n            {\r\n              <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Total</div></div>\r\n                {\r\n                  userLocation.data === 'IN' ?\r\n                    <div className=\"uk-text-right\"><div className=\"uk-text-lead uk-text-bolder\">{getCurrencyIcon(userLocation.data || 'IN')} {totalAfterDiscount}</div></div>\r\n                    : <div className=\"uk-text-right\"><div className=\"uk-text-lead uk-text-bolder\">{getCurrencyIcon(userLocation.data || 'IN')} {priceAfterShipping}</div></div>\r\n                }\r\n\r\n              </div>\r\n            }\r\n\r\n            {\r\n              props.paymentMode === 'paypal' &&\r\n              cartTotalPrice !== 0 &&\r\n              <PayPalPayment\r\n                cartTotalPrice={totalAfterDiscount}\r\n                cartTotalWithShipping={priceAfterShipping}\r\n                quantityCount={quantityCount}\r\n                isStandard={props.shippingType === 'standard'}\r\n                paymentMode={props.paymentMode}\r\n                setContainerIsCard={setContainerIsCard}\r\n                cartOrderId={cartOrderId}\r\n                setNoAddressError={setNoAddressError} />\r\n            }\r\n            {\r\n              noAddressError && \r\n              <div className=\"login-error-message\">\r\n                    <span className=\"uk-notification-message-danger\"> Please add contact and shipping information </span>\r\n              </div>\r\n            }\r\n            {\r\n              props.paymentMode !== 'paypal' && !showCodContainer &&\r\n              <>\r\n              {\r\n                  !checkout._isFetchCodCodeSuccess && checkout._isError &&\r\n                  <div className=\"login-error-message\">\r\n                    <span className=\"uk-notification-message-danger\"> {checkout.message} </span>\r\n                  </div>\r\n                }\r\n                <button\r\n                  disabled={checkout._isLoading || cartTotalPrice === 0}\r\n                  className=\"uk-button uk-button-primary uk-margin-small uk-width-1-1\"\r\n                  onClick={() => proceedWithPayment()}\r\n                >{checkout._isLoading && <div uk-spinner=\"true\"></div>}\r\n              checkout</button>\r\n                \r\n              </>\r\n            } {\r\n              showCodContainer &&\r\n              <button className=\"uk-button uk-button-primary uk-margin-small uk-width-1-1\"\r\n                disabled={checkout._isLoading || cartTotalPrice === 0}\r\n                onClick={() => { checkout._isFetchCodCodeSuccess ? successCod() : proceedWithPayment() }}>\r\n                {checkout._isFetchCodCodeSuccess ? 'Place Order' : 'Checkout'}\r\n              </button>\r\n            }\r\n          </section>\r\n        </div>\r\n      </div>\r\n      {\r\n        props.paymentMode !== 'paypal' && \r\n        <>\r\n        <button ref={paymentLoadingRef} id=\"payment-loading\" uk-toggle=\"target: #my-id\" type=\"button\"></button>\r\n      <div id=\"my-id\" uk-modal=\"true; esc-close: false; bg-close: false\">\r\n        <div className=\"uk-modal-dialog uk-modal-body uk-margin-auto-vertical\">\r\n          {\r\n            (paymentSuccess || paymentError) && <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n          }\r\n          <div className=\"uk-modal-body uk-nav-center\">\r\n            <p>{paymentMessage}</p>\r\n            {\r\n              !paymentSuccess && !paymentError && <div uk-spinner=\"true\"></div>\r\n            }\r\n            {\r\n              paymentSuccess && !paymentError &&\r\n              <>\r\n                <span className=\"uk-label uk-label-success\">Redirecting to Orders <div uk-spinner=\"true\"></div></span>\r\n              </>\r\n            }\r\n            {\r\n              paymentError && <span className=\"uk-label uk-label-danger\">Payment Failed</span>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n        </>\r\n      }\r\n      \r\n    </>\r\n  )\r\n};\r\n\r\nexport {\r\n  CheckoutPrice\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { UserInformation } from 'components/user';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, UserLocation, getUser } from 'reducers';\r\nimport { CheckoutPrice } from './CheckoutPrice';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst CheckoutContainer: React.FunctionComponent = () => {\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [paymentMode, setPaymentMode] = useState('online');\r\n  const [cartTotal, setCartTotal] = useState(0);\r\n  const [internationalShipping,setInternationalShipping] = useState('standard');\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n\r\n  useEffect(() => {\r\n    if (userLocation.data === 'USD') {\r\n      setPaymentMode('paypal');\r\n    }\r\n  }, [userLocation.data]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getUser());\r\n  },[])\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <section className=\"uk-text-center\">\r\n              <a className=\"uk-link-muted uk-text-small\" onClick={()=> history.push('/cart')}><span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: arrow-left; ratio: .75;\"></span>Return to cart</a>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom\">Checkout</h1>\r\n            </section>\r\n            <section>\r\n              <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n                <div className=\"uk-form-stacked uk-width-1-1 tm-checkout uk-width-expand@m\">\r\n                  <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n                    <section>\r\n                      <h2 className=\"tm-checkout-title\">Contact And Shipping Information</h2>\r\n                      <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n                        <UserInformation user={userData} fromCart={true} />\r\n                      </div>\r\n                    </section>\r\n                    {\r\n                      userLocation.data === 'IN' &&\r\n                      <section>\r\n                        <h2 className=\"tm-checkout-title\">Payment</h2>\r\n                        <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n                          <div className=\"uk-card-body\">\r\n                            <div className=\"uk-grid-small uk-grid-match uk-child-width-1-1 uk-child-width-1-2@s uk-flex-center\" uk-switcher=\"toggle: &gt; * &gt; .tm-choose\" uk-grid=\"true\">\r\n                              <div onClick={() => setPaymentMode('online')}>\r\n                                <a className={paymentMode === \"online\" ? \"tm-choose uk-active\" : \"tm-choose\"} href=\"#\">\r\n                                  <div className=\"tm-choose-title\">Online (via Razorpay)</div>\r\n                                  <div className=\"tm-choose-description\">Visa, MasterCard, all Other Cards</div>\r\n                                </a>\r\n                              </div>\r\n                              <div onClick={() => setPaymentMode('cod')}>\r\n                                <a className={paymentMode === \"cod\" ? \"tm-choose uk-active\" : \"tm-choose\"} href=\"#\">\r\n                                  <div className=\"tm-choose-title\">Cash On Delivery</div>\r\n                                  <div className=\"tm-choose-description\">Order now pay later</div>\r\n                                </a>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      </section>\r\n                    }\r\n                    {\r\n                      userLocation.data !== 'IN' &&\r\n                      <section>\r\n                        <h2 className=\"tm-checkout-title\">Shippment</h2>\r\n                        <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n                          <div className=\"uk-card-body\">\r\n                            <div className=\"uk-grid-small uk-grid-match uk-child-width-1-1 uk-child-width-1-2@s uk-flex-center\" uk-switcher=\"toggle: &gt; * &gt; .tm-choose\" uk-grid=\"true\">\r\n                              <div onClick={()=>setInternationalShipping('standard')}>\r\n                                <a className={internationalShipping === \"standard\" ? \"tm-choose uk-active\" : \"tm-choose\"} href=\"#\">\r\n                                  <div className=\"tm-choose-title\">Standard</div>\r\n                                  <div className=\"tm-choose-description\">India Post</div>\r\n                                  <div className=\"tm-choose-description\">Shipping cost $10 first item then $6 on every additional item.</div>\r\n                                </a>\r\n                              </div>\r\n                              <div onClick={()=>setInternationalShipping('express')}>\r\n                                <a className={internationalShipping === \"express\" ? \"tm-choose uk-active\" : \"tm-choose\"} href=\"#\">\r\n                                  <div className=\"tm-choose-title\">Express</div>\r\n                                  <div className=\"tm-choose-description\">Blue Dart/Fedex/DHL/Others</div>\r\n                                  <div className=\"tm-choose-description\">Shipping cost $18 first item then $10 on every additional item.</div>\r\n                                </a>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      </section>\r\n                    }\r\n                      <section>\r\n                        <h2 className=\"tm-checkout-title\">Delivery Time</h2>\r\n                        <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n                          <div className=\"uk-card-body\">\r\n                            <div className=\"uk-grid-small uk-grid-match uk-child-width-1-1 uk-child-width-1-1@s uk-flex-center\" uk-switcher=\"toggle: &gt; * &gt; .tm-choose\" uk-grid=\"true\">\r\n                              <div> \r\n                                {\r\n                                  userLocation.data !== 'IN' && internationalShipping === \"express\" && \r\n                                  <div className=\"tm-choose-title\">The order will be dispatched in 3 to 5 working days. Delivery time 8 to 10 days after dispatch.</div>\r\n                                }\r\n                                  \r\n                                {\r\n                                  userLocation.data !== 'IN' && internationalShipping === \"standard\" && \r\n                                  <div className=\"tm-choose-title\">The order will be dispatched in 3 to 5 working days. Delivery time 15 to 20 days after dispatch.</div>\r\n                                }\r\n                                {\r\n                                  userLocation.data === 'IN' &&\r\n                                  <div className=\"tm-choose-title\">Delivery within 5 to 7 working days.</div>\r\n                                }\r\n                                  \r\n                                  <div className=\"uk-text-meta\">Notice: We are currently seeing increase in delivery time due to COVID-19. Our team is working with our delivery partners to ensure all packages are delivered as fast as possible with highest standards of hygiene.</div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      </section>\r\n                  </div>\r\n                </div>\r\n                <CheckoutPrice paymentMode={paymentMode} shippingType={internationalShipping} setCartTotal={setCartTotal} />\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  CheckoutContainer\r\n}","import React from 'react';\r\n\r\nconst Banner: React.FunctionComponent = () => {\r\n  return (\r\n    <section id=\"regular-banner\" className=\"uk-position-relative uk-visible-toggle uk-light\" uk-slideshow=\"animation: scale;ratio: 8.2:3; min-height:175;autoplay: true;autoplay-interval: 3000\">\r\n      <ul className=\"uk-slideshow-items\">\r\n        <li style={{ backgroundColor: \"#0b0a12\" }}>\r\n          <a>\r\n            <figure className=\"uk-container uk-height-1-1\"><img src=\"/banner_first.jpg\" alt=\"New Macbook\"  uk-cover=\"true\" /></figure>\r\n          </a>\r\n        </li>\r\n        <li style={{ backgroundColor: \"#0b0a12\" }}>\r\n          <a>\r\n            <figure className=\"uk-container uk-height-1-1\"><img src=\"/banner_two.jpg\" alt=\"New Macbook\"  uk-cover=\"true\" /></figure>\r\n          </a>\r\n        </li>\r\n        <li style={{ backgroundColor: \"#ce071e;\" }}>\r\n          <a>\r\n            <figure className=\"uk-container uk-height-1-1\"><img src=\"/banner_three.jpg\" alt=\"iPhone\"  uk-cover=\"true\" /></figure>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <a className=\"uk-position-center-left uk-position-small uk-hidden-hover\" uk-slideshow-item=\"previous\" uk-slidenav-previous=\"true\"></a>\r\n      <a className=\"uk-position-center-right uk-position-small uk-hidden-hover\" uk-slideshow-item=\"next\" uk-slidenav-next=\"true\"></a>\r\n      <div className=\"uk-position-bottom-center uk-position-small\"><ul className=\"uk-slideshow-nav uk-dotnav\"></ul></div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport {\r\n  Banner\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppState, UserLocation, Cart, addUpdateCart } from 'reducers';\r\nimport { ProductItem, CustomerCart } from 'types';\r\nimport { scaledServerImagePath } from 'appConstants';\r\nimport { getCurrencyIcon, calculateUserDiscount, showINRUSD } from 'services';\r\nimport { LoadingProductArticle } from 'components/shared';\r\n\r\n\r\ninterface Props {\r\n  productList: ProductItem[]\r\n}\r\n\r\nconst TrendingLatestProducts: React.FunctionComponent<Props> = (props: Props) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n\r\n  const addToCart = (product: ProductItem) => {\r\n    if(!userData.data?.userId){\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: product.productDetailId,\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: showINRUSD(userLocation.data || 'IN', product),\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, false))\r\n    } else {\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: '0',\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: '0',\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, true));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"uk-grid-collapse uk-child-width-custom tm-products-grid\" uk-grid=\"true\">\r\n      {\r\n        props.productList.length > 0 ?\r\n        props.productList.map((product) => {\r\n          return (\r\n            <article uk-scrollspy=\"cls: product-list-animation; repeat: true\" key={product.productId} className=\"tm-product-card\">\r\n              <div className=\"tm-product-card-media\">\r\n                <div className='tm-ratio tm-ratio-1-1'>\r\n                  <a className=\"tm-media-box\" onClick={() => {history.push('/productDetails/' + product.productId) }}>\r\n                    <figure className=\"tm-media-box-wrap\"><img src={scaledServerImagePath + product.imagePaths} alt={product.imageNames} /></figure>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              <div className=\"tm-product-card-body\">\r\n                <div className=\"tm-product-card-info\">\r\n                  {/* <div className=\"uk-text-meta uk-margin-xsmall-bottom\">{product.productCategoryName}</div>\r\n                  <h3 className=\"tm-product-card-title\"><a className=\"uk-link-heading\" onClick={() => history.push('/productDetails/' + product.productId)}>{product.name}</a></h3> */}\r\n                  <p className=\"tm-product-card-title\"><a className=\"uk-link-heading\" onClick={() => history.push('/productDetails/' + product.productId)}>{product.name}</a></p>\r\n                </div>\r\n                <div className=\"tm-product-card-shop\">\r\n                  <div className=\"tm-product-card-prices\">\r\n                    {\r\n                      userData.data?.discount && userData.data?.discount !== '0' &&\r\n                      <del className=\"uk-text-meta\">{getCurrencyIcon(userLocation.data || 'IN')} {showINRUSD(userLocation.data || 'IN', product)}</del>\r\n                    }\r\n                    <div className=\"tm-product-card-price\">\r\n                      {getCurrencyIcon(userLocation.data || 'IN')} {calculateUserDiscount(userData.data?.discount || '0', showINRUSD(userLocation.data || 'IN', product))}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"tm-product-card-add\">\r\n                    <button className=\"uk-button uk-button-primary tm-product-card-add-button tm-shine js-add-to-cart\">\r\n                      {\r\n                        cart._isLoading && <span uk-spinner=\"true\"></span>\r\n                      }\r\n                      {\r\n                        !cart._isLoading && (\r\n                          <>\r\n                            <span className=\"tm-product-card-add-button-icon\" uk-icon=\"cart\" onClick={() => addToCart(product)}></span>\r\n                            <span className=\"tm-product-card-add-button-text\">add to cart</span>\r\n                          </>\r\n                        )\r\n                      }\r\n\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </article>\r\n          )\r\n        }) : Array(4).fill(1).map((value, index) => <LoadingProductArticle key={index} keyIndex={index}/>)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  TrendingLatestProducts\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState } from 'reducers';\r\nimport { ProductItem } from 'types';\r\nimport { TrendingLatestProducts } from '.';\r\n\r\nconst TrendingContainer: React.FunctionComponent = () => {\r\n\r\n  const trendingProducts = useSelector<AppState, ProductItem[]>(state => state.trendingProduct.data || []);\r\n\r\n  return (\r\n    <>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <h2 className=\"uk-text-center\">Trending Items</h2>\r\n          <div className=\"uk-card uk-card-default tm-ignore-container\">\r\n           <TrendingLatestProducts productList={trendingProducts} />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nexport {\r\n  TrendingContainer\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState } from 'reducers';\r\nimport { ProductItem } from 'types';\r\nimport { TrendingLatestProducts } from '.';\r\n\r\nconst LatestContainer: React.FunctionComponent = () => {\r\n\r\n  const latestProducts = useSelector<AppState, ProductItem[]>(state => state.latestProduct.data || []);\r\n  return (\r\n    <>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <h2 className=\"uk-text-center\">Latest Items</h2>\r\n          <div className=\"uk-card uk-card-default tm-ignore-container\">\r\n           <TrendingLatestProducts productList={latestProducts} />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nexport {\r\n  LatestContainer\r\n}","import { LoadingProductArticle } from 'components/shared';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { LatestContainer, TrendingContainer } from './trendingLatest';\r\n\r\nconst PromoBanner: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <section  id=\"regular-banner\"  className=\"uk-section uk-section-small\">\r\n      <div className=\"uk-container\">\r\n        <h2 className=\"uk-text-center\"></h2>\r\n        <TrendingContainer />\r\n        <div className=\"uk-child-width-1-2 tm-ignore-container promo-banner-no-padding\" uk-grid=\"true\">\r\n          <div uk-parallax=\"opacity: 0.4,1; y: 100,0; viewport: 0.3\">\r\n            <div className=\"uk-card uk-card-hover\">\r\n              <div className=\"uk-card-media-top\">\r\n                <a onClick={() => history.push('/product/footwear')}>\r\n                  <img src=\"/footwear_promo.jpg\" alt=\"promo-footwear\" />\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div uk-parallax=\"opacity: 0.4,1; y: 100,0; viewport: 0.3\">\r\n            <div className=\"uk-card uk-card-hover\">\r\n              <div className=\"uk-card-media-top\">\r\n                <a onClick={() => history.push('/product/lingerie')}>\r\n                  <img src=\"/lingerie_promo.jpg\" alt=\"promo-lingerie\" />\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-child-width-1-2 tm-ignore-container promo-banner-no-padding\" uk-grid=\"true\">\r\n          <div uk-parallax=\"opacity: 0.4,1; y: 100,0; viewport: 0.3\">\r\n            <div className=\"uk-card uk-card-hover\">\r\n              <a onClick={() => history.push('/product/bindi')}>\r\n                <img src=\"/bindi_promo.jpg\" alt=\"promo-bindi\" />\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div uk-parallax=\"opacity: 0.4,1; y: 100,0; viewport: 0.3\">\r\n            <div className=\"uk-card uk-card-hover\">\r\n              <div className=\"uk-card-media-top\">\r\n                <a onClick={() => history.push('/product/home essential')}>\r\n                  <img src=\"/home_essential_promo.jpg\" alt=\"promo-home-essential\" />\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"uk-child-width-1-1@m tm-ignore-container promo-banner-no-padding\" uk-grid=\"true\">\r\n          <div>\r\n            <div className=\"uk-card uk-card-hover\">\r\n            <div className=\"uk-card-media-top\">\r\n              <a onClick={() => history.push('/product/cosmetics')}>\r\n                <img src=\"/cosmetic_promo.jpg\" alt=\"promo-cosmetic\" />\r\n              </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n        \r\n\r\n        <div className=\"uk-child-width-1-2 tm-ignore-container promo-banner-no-padding\" uk-grid=\"true\">\r\n          <div uk-parallax=\"opacity: 0.4,1; y: 100,0; viewport: 0.3\">\r\n            <div className=\"uk-card uk-card-hover\">\r\n              <a onClick={() => history.push('/product/cosmetics')}>\r\n                <img src=\"/cosmetic_promo_2.jpg\" alt=\"cosmetic_promo\" />\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div uk-parallax=\"opacity: 0.4,1; y: 100,0; viewport: 0.3\">\r\n            <div className=\"uk-card uk-card-hover\">\r\n              <div className=\"uk-card-media-top\">\r\n                <a onClick={() => history.push('/product/fashion accessories')}>\r\n                  <img src=\"/desktop-fashion-accessories.jpg\" alt=\"fashion-accessories\" />\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <LatestContainer />\r\n        <div className=\"uk-child-width-1-2@m tm-ignore-container promo-banner-no-padding\" uk-grid=\"true\">\r\n          <div>\r\n            <div className=\"uk-card uk-card-hover\">\r\n              <a onClick={() => history.push('/product/bindi/round%20bindi')}>\r\n                <img src=\"/round_bindi_promo.jpg\" alt=\"round_bindi_promo\" />\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div className=\"uk-card uk-card-hover\">\r\n              <div className=\"uk-card-media-top\">\r\n                <a onClick={() => history.push('/product/home%20essential/home%20decor')}>\r\n                  <img src=\"/home_decore_promo_2.jpg\" alt=\"home_decore_promo_2\" />\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport {\r\n  PromoBanner\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getTrendingProduct, getLatestProduct, AppState } from 'reducers';\r\nimport { SubBanner } from './SubBanner';\r\nimport { Banner } from './Banner';\r\nimport { PromoBanner } from './PromoBanner';\r\nimport { FooterBanner, MobileBanner, MobilePromoBanner } from '.';\r\n\r\n\r\nconst HomePageContainer: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getTrendingProduct());\r\n    dispatch(getLatestProduct());\r\n  },[])\r\n  return (\r\n    <main>\r\n      <Banner/>\r\n      <MobileBanner/>\r\n      {/* <SubBanner/> */}\r\n      <PromoBanner/>\r\n      <MobilePromoBanner/>\r\n      <FooterBanner/>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  HomePageContainer\r\n}","import React from 'react';\r\n\r\nconst MobileBanner: React.FunctionComponent = () => {\r\n  return (\r\n    <section id=\"mobile-banner\" className=\"uk-position-relative uk-visible-toggle uk-light\" uk-slideshow=\"animation: pull; min-height:450;autoplay: true;autoplay-interval: 3000\">\r\n      <ul className=\"uk-slideshow-items\">\r\n        <li style={{ backgroundColor: \"#0b0a12\" }}>\r\n          <a>\r\n            <figure className=\"uk-container uk-height-1-1\"><img src=\"/mobile-bk-banner-1.png\" alt=\"New Macbook\"  uk-cover=\"true\" /></figure>\r\n          </a>\r\n        </li>\r\n        <li style={{ backgroundColor: \"#0b0a12\" }}>\r\n          <a>\r\n            <figure className=\"uk-container uk-height-1-1\"><img src=\"/mobile-bk-banner-2.jpg\" alt=\"New Macbook\"  uk-cover=\"true\" /></figure>\r\n          </a>\r\n        </li>\r\n        <li style={{ backgroundColor: \"#ce071e;\" }}>\r\n          <a>\r\n            <figure className=\"uk-container uk-height-1-1\"><img src=\"/mobile-bk-banner-3.jpg\" alt=\"iPhone\"  uk-cover=\"true\" /></figure>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <a className=\"uk-position-center-left uk-position-small uk-hidden-hover\" uk-slideshow-item=\"previous\" uk-slidenav-previous=\"true\"></a>\r\n      <a className=\"uk-position-center-right uk-position-small uk-hidden-hover\" uk-slideshow-item=\"next\" uk-slidenav-next=\"true\"></a>\r\n      <div className=\"uk-position-bottom-center uk-position-small\"><ul className=\"uk-slideshow-nav uk-dotnav\"></ul></div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport {\r\n  MobileBanner\r\n}","import { LoadingProductArticle } from 'components/shared';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { LatestContainer, TrendingContainer } from './trendingLatest';\r\n\r\nconst MobilePromoBanner: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <section  id=\"mobile-banner\"  className=\"uk-section uk-section-small\">\r\n      <div className=\"uk-container\">\r\n        <h2 className=\"uk-text-center\"></h2>\r\n        {/* <div uk-scrollspy=\"cls: trends; repeat: false\"> */}\r\n          <TrendingContainer />\r\n        {/* </div> */}\r\n        <h2 className=\"uk-text-center\">Browse products by category</h2>\r\n        <div className=\"uk-child-width-1-2 tm-ignore-container promo-banner-no-padding\" uk-grid=\"true\">\r\n          <div uk-parallax=\"opacity: 0,1; x: 50,0; viewport: 0.3\">\r\n            <div className=\"uk-card uk-card-hover padding-three\">\r\n              <div className=\"uk-card-media-top\">\r\n                <a onClick={() => history.push('/product/footwear')}>\r\n                  <img src=\"/mobile-footwear.jpg\" alt=\"promo-footwear\" height=\"280\"/>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div uk-parallax=\"opacity: 0,1; x: -50,0; viewport: 0.3\">\r\n            <div className=\"uk-card uk-card-hover padding-three\">\r\n              <div className=\"uk-card-media-top\">\r\n                <a onClick={() => history.push('/product/lingerie')}>\r\n                  <img src=\"/mobile-lingerie.jpg\" alt=\"promo-lingerie\" height=\"280\" />\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-child-width-1-2 tm-ignore-container promo-banner-no-padding\" uk-grid=\"true\">\r\n          <div uk-parallax=\"opacity: 0,1; x: 50,0; viewport: 0.3\">\r\n            <div className=\"uk-card uk-card-hover padding-three\">\r\n              <a onClick={() => history.push('/product/bindi')}>\r\n                <img src=\"/mobile-bindi-new.jpg\" alt=\"promo-bindi\" height=\"280\"/>\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div uk-parallax=\"opacity: 0,1; x: -50,0; viewport: 0.3\">\r\n            <div className=\"uk-card uk-card-hover padding-three\">\r\n              <div className=\"uk-card-media-top\">\r\n                <a onClick={() => history.push('/product/home essential')}>\r\n                  <img src=\"/mobile-home-essential.jpg\" alt=\"promo-home-essential\" height=\"280\"/>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-child-width-1-2 tm-ignore-container promo-banner-no-padding\" uk-grid=\"true\">\r\n          <div uk-parallax=\"opacity: 0,1; x: 50,0; viewport: 0.3\">\r\n            <div className=\"uk-card uk-card-hover padding-three\">\r\n              <a onClick={() => history.push('/product/cosmetics')}>\r\n                <img src=\"/mobile-cosmetics-new.jpg\" alt=\"cosmetic_promo\"  height=\"280\"/>\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div uk-parallax=\"opacity: 0,1; x: -50,0; viewport: 0.3\">\r\n            <div className=\"uk-card uk-card-hover padding-three\">\r\n              <div className=\"uk-card-media-top\">\r\n                <a onClick={() => history.push('/product/fashion accessories')}>\r\n                  <img src=\"/mobile-fashion-accessories-new.jpg\" alt=\"heel_promo\" height=\"280\"/>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"uk-child-width-1-1@m tm-ignore-container promo-banner-no-padding\" uk-grid=\"true\">\r\n          <div>\r\n            <div className=\"uk-card uk-card-hover\">\r\n            <div className=\"uk-card-media-top\">\r\n              <a onClick={() => history.push('/product/cosmetics')}>\r\n                <img src=\"/cosmetic_promo.jpg\" alt=\"promo-cosmetic\" />\r\n              </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n        \r\n\r\n        {/* <div className=\"uk-child-width-1-2@m tm-ignore-container promo-banner-no-padding\" uk-grid=\"true\">\r\n          <div>\r\n            <div className=\"uk-card uk-card-hover\">\r\n              <a onClick={() => history.push('/product/cosmetics')}>\r\n                <img src=\"/new-cosmetic-promo.jpg\" alt=\"cosmetic_promo\" />\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div className=\"uk-card uk-card-hover\">\r\n              <div className=\"uk-card-media-top\">\r\n                <a onClick={() => history.push('/product/footwear/heel')}>\r\n                  <img src=\"/heel_promo.jpg\" alt=\"heel_promo\" />\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n        <div uk-scrollspy=\"cls: trends; repeat: true\">\r\n          <LatestContainer />\r\n        </div>\r\n        \r\n        {/* <div className=\"uk-child-width-1-2@m tm-ignore-container promo-banner-no-padding\" uk-grid=\"true\">\r\n          <div>\r\n            <div className=\"uk-card uk-card-hover\">\r\n              <a onClick={() => history.push('/product/bindi/round%20bindi')}>\r\n                <img src=\"/new-fashion-accessories-promo.jpg\" alt=\"round_bindi_promo\" />\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div className=\"uk-card uk-card-hover\">\r\n              <div className=\"uk-card-media-top\">\r\n                <a onClick={() => history.push('/product/home%20essential/home%20decor')}>\r\n                  <img src=\"/home_decore_promo_2.jpg\" alt=\"home_decore_promo_2\" />\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport {\r\n  MobilePromoBanner\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst FooterBanner: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <section className=\"uk-section uk-section-default uk-section-small\">\r\n      <figure className=\"align-center\"><img src=\"/long-banner-2-1.jpg\" alt=\"footwear\" /></figure>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport {\r\n  FooterBanner\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { Router, Switch, Route } from \"react-router-dom\";\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport './index.css';\r\nimport { UserContainer } from 'components/user';\r\nimport { UserLogin } from 'components/login'\r\nimport { MainFooter } from 'components/footer';\r\nimport { Navigation } from 'components/pilot';\r\nimport { MainContainer } from 'components/admin/MainContainer';\r\nimport { CustomerContainer } from 'components/customer';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { store } from 'reducers';\r\nimport { CustomerProductDetails } from 'components/customer/ProductDetails';\r\nimport { CustomerProductDetailsConstainer } from 'components/customer/ProductDetails/CustomerProductDetailsContainer';\r\nimport { CustomerCartContainer } from 'components/customer/Cart';\r\nimport { CheckoutContainer } from 'components/customer/Checkout';\r\nimport { HomePageContainer } from 'components/customer/Home';\r\nimport {About, ContactUs, ReturnPolicy, ScrollToTop} from 'components/shared';\r\n\r\n\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <Router history={createBrowserHistory()}>\r\n      <ScrollToTop />\r\n        <Navigation />\r\n          <Switch>\r\n          <Route path=\"/\" exact>\r\n              <HomePageContainer />\r\n            </Route>\r\n            <Route path=\"/userinformation/:userTab?\" exact>\r\n              <UserContainer />\r\n            </Route>\r\n            <Route path=\"/login\" exact>\r\n              <UserLogin />\r\n            </Route>\r\n            <Route path=\"/admin/:product?/:productId?\" exact>\r\n              <MainContainer />\r\n            </Route>\r\n            <Route path=\"/product/:product/:filterOn?\" component={CustomerContainer} exact/>\r\n              {/* <CustomerContainer /> */}\r\n            {/* </Route> */}\r\n            <Route path=\"/productDetails/:queryProductId\" exact>\r\n              <CustomerProductDetailsConstainer />\r\n            </Route>\r\n            <Route path=\"/cart\" exact>\r\n              <CustomerCartContainer/>\r\n            </Route>\r\n            <Route path=\"/checkout\" exact>\r\n              <CheckoutContainer/>\r\n            </Route>\r\n            <Route path=\"/contactus\" exact>\r\n              <ContactUs/>\r\n            </Route>\r\n            <Route path=\"/about\" exact>\r\n              <About/>\r\n            </Route>\r\n            <Route path=\"/shoppolicy\" exact>\r\n              <ReturnPolicy/>\r\n            </Route>\r\n          </Switch>\r\n        <MainFooter />\r\n      </Router>\r\n    </React.StrictMode>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(\r\n  app,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { CustomerProductFilter } from '.';\r\nimport { AppState, ProductCount, getActiveProductCount, defaultPreSelectedFitler, PreSelectedFilters, setPreSelectedFilter } from 'reducers';\r\nimport { SubCategory, getSubCategory } from 'reducers/SubCategory';\r\nimport { ProductSubCategory, ProductSize, ProductColor, Search } from 'types';\r\nimport { filterSubcategories } from 'services';\r\nimport { SubCategories } from 'appConstants';\r\nimport { CustomerProductList } from './CustomerProductList';\r\nimport { setDefaulState } from 'reducers/Product';\r\nimport { getSize, Size } from 'reducers/Size';\r\nimport { getColour, Colour } from 'reducers/Colour';\r\nimport queryString from 'query-string';\r\n\r\n\r\n\r\n\r\nconst CustomerContainer: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { product, filterOn } = useParams();\r\n  const [colourId, setColourId] = useState<number[]>([]);\r\n  const [sizeId, setSizeId] = useState<number[]>([]);\r\n  const [subCategoryId, setSubCategoryId] = useState<number[]>([]);\r\n  const [startPrice, setStartPrice] = useState('');\r\n  const [endPrice, setEndPrice] = useState('');\r\n  const [categoryId, setcategoryId] = useState<number[]>([]);\r\n  const [subCategoryQueryParam, setSubCategoryQueryParam] = useState<ProductSubCategory[]>([]);\r\n  const productSize = useSelector<AppState, ProductSize[]>(state => state.size.data || []);\r\n  const productColour = useSelector<AppState, ProductColor[]>(state => state.colour.data || []);\r\n  const search = useSelector<AppState, Search>(state => state.search.data || {} as Search);\r\n  const preSelectedFilter = useSelector<AppState, PreSelectedFilters>(state => state.preSelectedFilters);\r\n  let querySearch = useLocation().search; \r\n  \r\n  const [ locationKeys, setLocationKeys ] = useState([''])\r\n  \r\n  useEffect(() => {\r\n    dispatch(getSubCategory());\r\n    dispatch(getSize());\r\n    dispatch(getColour());\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   return () => {\r\n  //     dispatch(defaultPreSelectedFitler());\r\n  //   }\r\n  // })\r\n\r\n// Code added to fix back/forward issue for \r\n// product list page\r\n  useEffect(() => {\r\n    return history.listen(location => {\r\n      if (history.action === 'PUSH' && location.key) {\r\n        setLocationKeys([location.key])\r\n      }\r\n      if (history.action === 'POP' && location.key) {\r\n        if (locationKeys[1] === location.key) {\r\n          setLocationKeys(([ _, ...keys ]) => keys)\r\n          history.goForward();\r\n        } else {\r\n          setLocationKeys((keys) => [ location.key || '', ...keys ])\r\n          history.goBack();\r\n        }\r\n      }\r\n    })\r\n  }, [ locationKeys, ])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(setDefaulState());\r\n    const filteredKey = Object.keys(SubCategories).filter((key) => key.toLowerCase() === product.toLowerCase());\r\n    if (filteredKey[0]) {\r\n      setcategoryId([SubCategories[filteredKey[0]]]);\r\n    } else {\r\n      const subCateId: number[] = [];\r\n      for (let key in SubCategories) {\r\n        subCateId.push(SubCategories[key])\r\n      }\r\n      setcategoryId(subCateId)\r\n    }\r\n    if(preSelectedFilter.data?.subcategoryname.toString() !==\"\" &&product.toString().toLowerCase() !== preSelectedFilter.data?.subcategoryname.toLowerCase()){\r\n      setColourId([])\r\n      setSizeId([])\r\n      setStartPrice('')\r\n      setEndPrice('')\r\n      // dispatch(defaultPreSelectedFitler());\r\n      // dispatch(setPreSelectedFilter('subcategoryname',product));\r\n    }\r\n\r\n    const queryPramas = querySearch.split('?')[1];\r\n    const filterPrams = queryString.parse(queryPramas);\r\n    if (!filterOn && preSelectedFilter.data?.subcategoryId.length === 0 && !filterPrams['subCategoryId']?.toString()) {\r\n      setSubCategoryId([]);\r\n    }\r\n\r\n  }, [product]);\r\n\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const activeProductCount = useSelector<AppState, ProductCount>(state => state.productCount);\r\n  const productKey = Object.keys(SubCategories).find((subcategory) => subcategory.toLowerCase() === product.toLowerCase()) || '';\r\n  let filteredSubcategories = filterSubcategories(subCategories, SubCategories[productKey]);;\r\n  if (product.toLowerCase() === 'search') {\r\n    filteredSubcategories = subCategories.data || []\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (filterOn && !subCategories._isLoading && subCategories.data && subCategories.data.length > 0) {\r\n      setSubCategoryId([Number(subCategories.data?.filter(({ code }) => code.toLowerCase() === filterOn.toLowerCase())[0].subCategoryId)]);\r\n      setSubCategoryQueryParam(subCategories.data?.filter(({ code }) => code.toLowerCase() === filterOn.toLowerCase()) || [])\r\n    }\r\n  }, [filterOn, subCategories._isLoading])\r\n\r\n  const getTotalProductCount = () => {\r\n    let count = 0;\r\n    const activeProducts = activeProductCount.data\r\n    if (activeProducts) {\r\n      const selectedSubCat = subCategoryId.length > 0 ? subCategoryId : filteredSubcategories.map(({ subCategoryId }) => Number(subCategoryId));\r\n      const selectedColour = colourId.length > 0 ? colourId : productColour.length > 0 ? productColour.map(({ colourId }) => Number(colourId)) : [];\r\n      const selectedSize = sizeId.length > 0 ? sizeId : [];\r\n      // const selectedColour = colourId.length > 0 ? colourId : productColour.length> 0 ?  productColour.map(({colourId}) => Number(colourId)) : [];\r\n      // const selectedSize = sizeId.length > 0 ? sizeId : productSize.length > 0 ? productSize.map(({sizeId}) => Number(sizeId)) : [];\r\n      if (selectedSize.length === 0) {\r\n        selectedSubCat.forEach((subCategory) => {\r\n          if(activeProducts[subCategory]){\r\n            selectedColour.forEach((colour) => {\r\n              if(activeProducts[subCategory][colour] && activeProducts[subCategory][colour].count){\r\n                count += activeProducts[subCategory][colour].count\r\n              }\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        selectedSubCat.forEach((subCategory) => {\r\n          if(activeProducts[subCategory]){\r\n            selectedColour.forEach((colour) => {\r\n              if(activeProducts[subCategory][colour]){\r\n                let localCount = 0;\r\n                for(var i =0; i< selectedSize.length; i++){\r\n                  if(activeProducts[subCategory][colour].size[selectedSize[i]]){\r\n                    if(activeProducts[subCategory][colour].size[selectedSize[i]] === activeProducts[subCategory][colour].count){\r\n                      localCount = activeProducts[subCategory][colour].count;\r\n                      break;\r\n                    }else{\r\n                      localCount +=activeProducts[subCategory][colour].size[selectedSize[i]];\r\n                    }\r\n                  }\r\n                }\r\n                count+=localCount;\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    }\r\n    return count;\r\n  };\r\n\r\n  // const getIdsForfilter = () => {\r\n  //   const filteredKey = Object.keys(SubCategories).filter((key) => key.toLowerCase() === product.toLowerCase());\r\n  //   if(filteredKey[0]){\r\n  //     setcategoryId(Number(SubCategories[filteredKey[0]]));\r\n  //   }\r\n  // }\r\n\r\n  // getIdsForfilter()\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a onClick={() => history.push('/')}>Home</a></li>\r\n                <li><span>Product</span></li>\r\n              </ul>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom customer-product\">{product}</h1>\r\n              {\r\n                search.searchText === '' && <div className=\"uk-text-meta uk-margin-xsmall-top\">{getTotalProductCount()} items</div>\r\n              }\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n                {\r\n                  <CustomerProductFilter\r\n                    subCategories={filteredSubcategories}\r\n                    activeProductCount={activeProductCount}\r\n                    filterSelected={subCategoryQueryParam}\r\n                    categoryId={categoryId}\r\n                    setColourId={setColourId}\r\n                    setSizeId={setSizeId}\r\n                    setSubCategoryId={setSubCategoryId}\r\n                    setStartPrice={setStartPrice}\r\n                    setEndPrice={setEndPrice}\r\n                  />\r\n                }\r\n                {\r\n                  <CustomerProductList\r\n                    categoryId={categoryId}\r\n                    colourId={colourId}\r\n                    sizeId={sizeId}\r\n                    subCategoryId={subCategoryId}\r\n                    startPrice={startPrice}\r\n                    endPrice={endPrice}\r\n                  />\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerContainer\r\n}"],"sourceRoot":""}