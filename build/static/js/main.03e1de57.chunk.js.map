{"version":3,"sources":["appConstants/AxiosConstants.ts","appConstants/CountryCodes.ts","appConstants/SubProducts.ts","reducers/UserInformation.ts","appConstants/ApiServerConstants.ts","services/axiosBase.ts","services/axios.ts","services/Misc.ts","reducers/Login.ts","reducers/UserSettings.ts","reducers/Colour.ts","reducers/Size.ts","reducers/SubCategory.ts","reducers/Coupon.ts","reducers/Product.ts","reducers/ProductCount.ts","appConstants/ProductsConstants.ts","reducers/Cart.ts","reducers/Checkout.ts","reducers/UserLocation.ts","reducers/Order.ts","reducers/Shipper.ts","reducers/Shipment.ts","reducers/RelatedProducts.ts","reducers/TrendingProducts.ts","reducers/LatestProducts.ts","reducers/Search.ts","reducers/CustomerShippment.ts","reducers/PreSelectedFilters.ts","reducers/AdminOrderCsv.ts","reducers/index.ts","components/shared/NotificationContainer.tsx","components/shared/PayPalContainer.tsx","components/shared/PayPalPayment.tsx","components/shared/CashOnDeliveryPayment.tsx","components/shared/QuickProductList.tsx","components/shared/LoadingProductArticle.tsx","components/shared/ScrollToTop.tsx","components/shared/ContactUs.tsx","components/shared/About.tsx","components/shared/ReturnPolicy.tsx","components/user/UserInformation.tsx","components/user/UserNav.tsx","components/user/UserSettings.tsx","components/user/Orders.tsx","components/user/UserContainer.tsx","components/login/login.tsx","components/footer/MainFooter.tsx","components/pilot/Navigation.tsx","components/pilot/SideCart.tsx","components/pilot/MobileNavigation.tsx","components/admin/AdminNav.tsx","components/admin/AdminProductList.tsx","components/admin/subComponents/colour/ColourList.tsx","components/admin/subComponents/colour/ProductColour.tsx","components/admin/subComponents/size/ProductSize.tsx","components/admin/subComponents/size/SizeList.tsx","components/admin/subComponents/subCategory/ProductSubCategory.tsx","components/admin/subComponents/subCategory/SubCategoryList.tsx","components/admin/subComponents/coupon/ProductCoupon.tsx","components/admin/subComponents/coupon/CouponList.tsx","components/admin/subComponents/product/ProductItem.tsx","components/admin/subComponents/product/ProductList.tsx","components/admin/subComponents/orders/OrderList.tsx","components/admin/subComponents/orders/OrderDetails.tsx","components/admin/subComponents/shippers/ShipperDetails.tsx","components/admin/subComponents/shippers/ShipperList.tsx","components/admin/subComponents/users/UserList.tsx","components/admin/subComponents/users/UserDetails.tsx","components/admin/MainContainer.tsx","components/customer/CustomerProductList.tsx","components/customer/CustomerContainer.tsx","components/customer/CustomerProductFilter.tsx","serviceWorker.ts","components/customer/ProductDetails/CustomerProductDetails.tsx","components/customer/ProductDetails/CustomerProductDetailsLoading.tsx","components/customer/ProductDetails/CustomerProductDetailsContainer.tsx","components/customer/Cart/CartDetails.tsx","components/customer/Cart/CartPrice.tsx","components/customer/Cart/CustomerCartContainer.tsx","components/customer/Checkout/CheckoutPrice.tsx","components/customer/Checkout/CheckoutContianer.tsx","components/customer/Home/SubBanner.tsx","components/customer/Home/Banner.tsx","components/customer/Home/trendingLatest/TrendingLatestProduct.tsx","components/customer/Home/trendingLatest/TrendingLatestContainer.tsx","components/customer/Home/PromoBanner.tsx","components/customer/Home/HomePageContainer.tsx","components/customer/Home/FooterBanner.tsx","index.tsx"],"names":["HttpRequest","HttpStatusCode","SubProducts","CountryCodes","Actions","SubCategories","AllowReturn","serverImagePath","apiServerHost","axios","create","baseURL","headers","api","url","makeRequest","method","GET","data","POST","config","a","defaults","window","localStorage","getItem","request","response","status","removeItem","location","href","message","getSubCategoryFromId","id","filterSubcategories","subCategories","categoryId","filter","subCategory","productCategoryId","Number","filterSize","sizes","size","indexOf","productCategory","calculateUserDiscount","discount","price","Math","ceil","toString","calculateUserDiscountPrice","getCurrencyIcon","currency","showINRUSD","userLocation","priceINR","priceUSD","createActiveProductCountList","activeProducts","resultList","forEach","product","subcategoryId","colourId","count","sizeObj","sizeArray","resultSize","sizeCheck","sizeId","name","colourName","reduce","b","subcategoryName","countHighlightProducts","products","isTrending","trending","length","latest","downloadCSV","array","link","document","createElement","csv","result","keys","Object","join","item","ctr","key","convertArrayOfObjectsToCSV","match","setAttribute","encodeURI","click","remove","returnInvoiceHtml","clientName","invoiceDate","clientAddress","invoiceNumber","productName","quantity","totalAmount","rate","initialState","isAdmin","allUsers","_isError","_isLoading","_isSuccess","setUser","user","type","SET_USER","loadingUser","LOADING_USER","errorUser","ERROR_USER","updateDiscount","emailAddress","UPDATE_USER_DISCOUNT","getUser","disptach","OK","loadingRegister","LOADING_REGISTER","errorRegister","ERROR_REGISTER","successRegister","SUCCESS_REGISTER","setUserSetting","userSettings","SET_USER_SETTINGS","loadingUserSettings","LOADING_USER_SETTINGS","errorUserSettings","ERROR_USER_SETTINGS","loadingColour","LOADING_COLOUR","errorColour","ERROR_COLOUR","getColour","dispatch","res","SET_COLOUR","loadingSize","LOADING_SIZE","successSize","SUCCESS_SIZE","errorSize","addUpdateSize","product_size","value","product_size_code","code","product_category","size_id","productCategoryIndex","productCategoryName","UPDATE_SIZE","getSize","SET_SIZE","loadingSubCategory","LOADING_SUBCATEGORY","successSubCategory","SUCCESS_SUBCATEGORY","errorSubCategory","ERROR_SUBCATEGORY","addUpdateSubCategory","product_name","product_desc","product_category_id","subcategory_id","subCategoryId","UPDATE_SUBCATEGORY","getSubCategory","SET_SUBCATEGORY","loadingCoupon","LOADING_COUPON","errorCoupon","ERROR_COUPON","setCoupon","SET_COUPON","updateCouponSuccess","UPDATE_COUPON_SUCCESS","deleteCouponSuccess","DELETE_COUPON_SUCCESS","updateCoupon","coupon","isDelete","coupon_code","coupon_value","coupon_id","couponId","loadingProduct","LOADING_PRODUCT","successProduct","SUCCESS_PRODUCT","errorProduct","ERROR_PRODUCT","setProducts","_hasMoreProducts","SET_PRODUCT","setDefaulState","SET_DEFAULT_PRODUCT","deleteProductSuccess","DELETE_PRODUCT_SUCCESS","setCustomerProducts","SET_CUSTOMER_PRODUCT","setProductHighlight","productId","SET_PRODUCT_HIGHLIGHT","singleData","addUpdateProduct","sizeColourQuantity","formData","FormData","productImageBlob","Array","from","element","index","append","colour","description","JSON","stringify","deletedImagePath","deletedProductDetailIds","getProduct","SET_SINGLE_PRODUCT","getCustomerProducts","offset","limit","startPrice","endPrice","searchText","freshData","_quantityUpdate","loadingCart","LOADING_CART","errorCart","ERROR_CART","updateCartSuccess","UPDATE_CART_SUCCESS","deleteCartProduct","DELETE_CART_PRODUCT","addUpdateCart","cart","isLoggedIn","newCart","totalPrice","productPrice","productQuantity","UPDATE_CART_LOGGED_OUT","product_detail_id","productDetailId","order_quantity","price_id","currencyType","orderdetail_id","cartId","delete_flag","productImage","productImagePath","subcategory","getCart","ADD_CART_SUCCESS","deleteCartItem","DELETE_CART_PRODUCT_LOGGED_OUT","_isPaymentSucceess","_priceChanged","_isFetchCodCodeSuccess","loadingCheckout","LOADING_CHECKOUT","successCheckoutOrder","SUCCESS_CHECKOUT_ORDER","errorCheckout","ERROR_CHECKOUT","defaultCheckout","DEFAULT_CHECKOUT","successPayment","SUCCESS_PAYMENT","priceChanged","PRICE_CHANGED","getPayPalOrder","amount","displayAmount","orderId","PARTIAL_INFO","setUserLocation","SET_USER_LOCATION","loadingOrder","LOADING_ORDER","successOrder","_hasMoreOrders","SUCCESS_ORDER","adminSuccessOrder","ADMIN_SUCCESS_ORDER","errorOrder","ERROR_ORDER","customerReturn","orderDetailsId","CUSTOMER_RETURN","defaulOrderReturn","DEFAULT_ORDER_RETURN","_isOrderUpdate","getCustomerOrders","loadingShipper","LOADING_SHIPPER","errorShipper","ERROR_SHIPPER","updateShipperSuccess","UPDATE_SHIPPER_SUCCESS","deleteShipperSuccess","DELETE_SHIPPER_SUCCESS","getShippers","SET_SHIPPER","updateShipper","shipper","shipper_name","shipperName","shipper_link","trackingLink","shipper_id","shipperId","successShipment","SUCCESS_SHIPMENT","setSearch","SET_SEARCH","shippmentPrice","setShippingPrice","SET_SHIPPING_PRICE","coloudId","subcategoryname","defaultPreSelectedFitler","DEFAULT_FILTER","setPreSelectedFilter","SUCCESS_FILTERS","reducers","state","action","DEFAULT_USER","SET_ALL_USER","map","toLowerCase","userLogin","LOADING_LOGIN","ERROR_LOGIN","SUCCESS_LOGIN","DEFAULT_STATE","SUCCESS_COLOUR","UPDATE_COLOUR_SUCCESS","originalState","updatedValue","updatedState","d","DEFAULT_COLOUR","ERROR_SIZE","SUCCESS_COUPON","orgState","updValue","updState","DEFAULT_COUPON","concat","productCount","LOADING_PRODUCT_COUNT","ERROR_PRODUCT_COUNT","SET_PRODUCT_COUNT","SUCCESS_CART","SET_CART","SET_LOGGED_CART","og","newProduct","originalStatelo","oglo","newProductlo","setItem","DEFAULT_CART","CART_GET_UPDATED_QUANTITY","CART_QUANTITY_FINE","checkout","LOADING_USER_LOCATION","customerOrders","SINGLE_DATA","singleOrder","updatedOrder","orderItems","order","orderDetailId","shipmentDetails","returnStatus","SUCCESS_SHIPPER","DEFAULT_SHIPPER","shipment","LOADING_SHIPMENT","ERROR_SHIPMENT","relatedProduct","SUCCESS_RELATED_PRODUCT","LOADING_RELATED_PRODUCT","ERROR_RELATED_PRODUCT","SET_RELATED_PRODUCT","trendingProduct","SUCCESS_TRENDING_PRODUCT","LOADING_TRENDING_PRODUCT","ERROR_TRENDING_PRODUCT","SET_TRENDING_PRODUCT","latestProduct","SUCCESS_LATEST_PRODUCT","LOADING_LATEST_PRODUCT","ERROR_LATEST_PRODUCT","SET_LATEST_PRODUCT","search","LOADING_SEARCH","ERROR_SEARCH","customerShippment","preSelectedFilters","actions","SET_ALL_FILTER","adminOrderCsv","LOADING_ADMIN_ORDER_CSV","ERROR_ADMIN_ORDER_CSV","SET_ADMIN_ORDER_CSV","SET_ADMIN_ORDER_CSV_DEFAULT","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunkMiddleware","NotificationContainer","props","className","isSdkReady","undefined","paypal","this","addPaypalSdk","onButtonReady","options","shippingPreference","purchase_units","currency_code","application_context","shipping_preference","capture","then","details","onSuccess","catch","err","catchError","error","onCancel","createOrder","createSubscription","onApprove","style","Button","Buttons","driver","React","ReactDOM","createOrderFn","queryParams","entries","split","push","script","src","async","onload","setState","onerror","Error","body","appendChild","Component","defaultProps","clientId","PayPalPayment","useDispatch","history","useHistory","paypalPaymentLoadingRef","useRef","paypalModalRef","useSelector","userData","couponData","useState","paypalPaymentMessage","setPaypalPaymentMessage","setPayPalOrderId","paymentErroredOut","setPaymentErroredOut","paymentSuccess","setPaymentSuccess","setIsCard","useEffect","paymentMode","paypalOrderId","cartTotalPrice","paypalButton","close","current","didPriceChanged","togglePaymenModal","fundingType","successPaypalPayment","onClick","fundingSource","cartTotalWithShipping","cartOrderId","onError","console","log","render","setTimeout","go","tt","funding","innerWidth","scrollTo","top","behavior","setContainerIsCard","orderData","paymentData","paypalData","paypalResponse","addressId","quantityCount","isStandard","userAddress","addressLineOne","addressLineTwo","addressLineThree","city","pincode","country","userName","firstName","lastName","ref","uk-toggle","uk-modal","uk-close","uk-spinner","CashOnDeliveryPayment","showOtpContainer","timeLeft","setTimeLeft","enteredOTP","setEnteredOTP","timer","setInterval","clearTimeout","resendOtpToCustomer","uk-grid","onChange","e","currentTarget","QuickProductList","uk-slider","uk-slider-item","uk-slidenav-previous","uk-slidenav-next","productList","imagePaths","alt","imageNames","uk-icon","userId","cartData","addToCart","LoadingProductArticle","keyIndex","ScrollToTop","withRouter","unlisten","listen","pathname","ContactUs","About","ReturnPolicy","UserInformation","isLoading","userInformationFormik","useFormik","initialValues","mobile","dob","gender","default","countryCode","validationSchema","Yup","required","matches","onSubmit","enableReinitialize","handleSubmit","fromCart","getFieldProps","touched","errors","disabled","UserNav","uk-sticky","showPersonal","toggelDetails","showOrders","showSettings","UserSettings","userSettingFormik","currentPassword","newPassword","confirmPassword","oneOf","resetForm","Orders","hasMoreOrders","setHasMoreOrders","selectedReason","setSelectedReason","showOrderDetailIndex","setShowOrderDetailIndex","returnOrderDetailId","setReturnOrderDetailId","returnOrderNumber","setReturnOrderNumber","returnProductName","setReturnProductName","showReturnError","setShowReturnError","returnModalRef","returnButtonRef","orders","shipperData","getBoundingClientRect","that","getShipmentLink","trackingNumber","shipperInfo","target","checkReturnEligibilty","deliveryDate","differenceInDays","Date","getTime","returnOrder","reason","orderNumber","returnReason","customerProductReturn","downloadInvoice","doc","jsPDF","invoiceData","toLocaleDateString","html","x","y","save","dataLength","next","hasMore","loader","textAlign","marginTop","endMessage","paymentDate","paymentReturned","shippingDate","uk-accordion","orderItem","visibility","checked","UserContainer","userTab","useParams","setShowSettings","setShowPersonal","setShowOrders","selected","UserLogin","isError","responseMessage","loginRedirect","setLoginRedirect","loginFormik","email","password","isRegistration","forgetPassword","when","is","values","registerationData","loginData","loginDetails","access_token","toggleLoginRegister","setFieldValue","parse","to","event","Iso","MainFooter","width","Navigation","cartCount","setCartCount","enteredSearchText","setEnteredSearchText","cartCountCssFlag","setCartCountCssFlag","sideCartRef","mobileNavigationRef","Intl","DateTimeFormat","resolvedOptions","timeZone","getTimezoneOffset","searchProduct","navigateTo","categoryPath","subcategoryPath","preventDefault","logout","uk-navbar","uk-navbar-toggle-icon","uk-drop","uk-search-icon","placeholder","onKeyPress","uk-dropdown","minWidth","SideCart","mainTotal","setMainTotal","userDiscountTotal","setUserDiscountTotal","totalAfterDiscount","setTotalAfterDiscount","discountedTotal","setDiscountedTotal","userCouponTotal","setUserCouponTotal","cartPrice","discountPrice","priceAfterDiscount","couponPrice","priceAfterCoupon","uk-offcanvas","uk-tooltip","MobileNavigation","uk-nav","AdminNav","subProductToggle","addEditToggle","selectedTab","setSelectedTab","isOnList","setIsOnList","PRODUCT","title","USERS","ORDERS","SUB_PRODUCT","SIZE","COLOUR","COUPONS","SHIPPER","AdminProductList","searchTerm","setSearchTerm","tabName","setTabName","isDownloadDone","setIsDownloadDone","adminOrderDataCsv","tableData","setTableData","stateData","columns","productColumns","productType","getAdminOrders","includes","getOrdersCsvData","defaultSortField","sortByColumn","defaultSortAsc","selectableRows","selectableRowsNoSelectAll","selectableRowsHighlight","selectableRowsVisibleOnly","expandableRows","expandOnRowClicked","expandableRowsComponent","ExpandableComponent","pagination","highlightOnHover","striped","pointerOnHover","dense","noTableHead","persistTableHead","progressPending","noHeader","subHeader","subHeaderComponent","color","searchPlaceholder","fixedHeader","fixedHeaderScrollHeight","direction","colourActionStatus","colourQuickViewFormik","product_color_code","product_color","colour_id","isSubmitting","ColourList","selector","sortable","ProductColour","colourFormik","ProductSize","sizeFormik","sizeActionStatus","SizeList","sizeQuickViewFormik","ProductSubCategory","subCategoryFormik","moreThan","subCategoryActionStatus","SubCategoryList","subCategoryQuickViewFormik","ProductCoupon","couponFormik","couponActionStatus","CouponList","cell","row","confirm","couponQuickViewFormik","ProductItem","setSizeColourQuantity","selectedSizes","setSelectedSizes","sizeColourQuantityErrorMessage","setSizeColourQuantityErrorMessage","productItemFormik","sizeColourQuantityCombo","filteredKey","checkForProductCategory","updatedImageName","adminProductCombo","productDetailIdArray","some","productSize","productColour","productActionStatus","colourArray","quantityArray","editSizeColourQuantityCombo","sizeItem","filteredSubcategories","filteredProductSize","updatedSizeColourQuantityArray","field","currentItem","splice","cols","handleChange","onBlur","handleBlur","fill","isArray","newPDArray","reduceProductComboLength","availableSizes","addProductComboLength","htmlFor","multiple","files","currentNumberOfFile","currentFiles","filesArray","checkForMaxFileUpload","fileName","filePath","fileNames","path","imagePath","imageName","removeCurrentImage","getFileNameAndPath","call","file","i","URL","createObjectURL","img","removeImage","ProductList","marginLeft","listSingleImage","productQuickViewFormik","highlight","setSubmitting","updateProductHighLight","OrderList","wrap","icon","orderLength","getIconForAdminOrder","whiteSpace","OrderDetails","adminShipmentData","setAdminShipmentData","orginalTrackingLink","setOrginalTrackingLink","shippers","shipmentStatus","tempShipmentData","tempTrackingLink","shipmentId","updateShipmentData","shipmentDataCopy","shipmentDataToUpdate","updatedShipmentData","updateOrderStatus","orderUpdate","sendTrackingEmail","isTrackingChanged","orginalTrackingLinkCopy","customerEmail","userDetails","customerName","payaplResponse","transactionId","payments","captures","getPaypalTransactionId","razorpayPaymentId","standardShipping","ShipperDetails","shipperActionStatus","shipperFormik","ShipperList","shipperQuickViewFormik","UserList","userActionStatus","userDiscountQuickViewFormik","updateUserDiscount","UserDetails","MainContainer","setIsOnAdd","setSubProductId","isOnAdd","subProductId","showSubProductComponent","CustomerProductList","filterOn","hasMoreProducts","setHasMoreProducts","queryString","searchArray","CustomerContainer","setColourId","setSizeId","setSubCategoryId","setStartPrice","setEndPrice","setcategoryId","subCategoryQueryParam","setSubCategoryQueryParam","preSelectedFilter","querySearch","useLocation","subCateId","queryPramas","filterPrams","activeProductCount","productKey","find","selectedSubCat","selectedColour","selectedSize","localCount","getTotalProductCount","filterSelected","CustomerProductFilter","filterColourId","setFilterColourId","filterSizeId","setFilterSizeId","filterSubCategory","setFilterSubCategory","filterStartPrice","setFilterStartPrice","filterEndPrice","setFilterEndPrice","startPriceTimer","setStartPriceTimer","endPriceTimer","setEndPriceTimer","toggleAddingRemovingId","ids","newId","getFilteredProduct","updatedColourFilter","updatedSizeFilter","updatedSubCategory","restFilter","convertQueryParamsToNumber","query","colourFilter","sizeFilter","subCategoryFilter","startPriceFilter","endPriceFilter","flexBasis","getProductCount","Boolean","hostname","CustomerProductDetails","cartProductQuantity","isActive","relatedProducts","pINR","setPINR","pUSD","setPUSD","pQuantity","setPQuantity","pSize","setPSize","pSizeId","setPSizeId","pDetailId","setPDetailId","setSelectedSize","selectedQuantity","setSelectedQuantity","selectedProductDetailId","setSelectedProductDetailId","maxQuantity","setMaxQuantity","showInch","setShowInch","defaultProductDetail","productIndex","onChangeQuantity","toggleQuantity","isIncrement","maxQaun","checkForDefaultSize","sizeList","uk-slideshow","uk-lightbox","mainSlider","smallSlider","selectedIndex","maxQ","pdId","setSize","onBlurQuantity","uk-switcher","CustomerProductDetailsLoading","uk-slideshow-item","CustomerProductDetailsConstainer","queryProductId","setMainSlider","setSmallSlider","setCartProductQuantity","cartProductFlag","setCartProductFlag","tabIndex","cartProductCount","getRelatedProduct","CartDetails","setQuantity","enteredCoupon","setEnteredCoupon","quantityCheckMessage","setQuantityCheckMessage","couponStatus","deboucedId","setDeboucedId","quantityChanged","setQuantityChanged","quantityChangedProductId","setQuantityChangedProductId","orderQuantityCheckButtonRef","orderQuantityCheckModalRef","qt","checkForAvailableQuantity","cartItem","availableQuantity","updateCart","updateQantity","changedQuantity","chqty","newQuantity","updatedQuantity","checkCouponValidity","deleteCart","CartPrice","cartTotal","setCartTotal","total","CustomerCartContainer","Razorpay","CheckoutPrice","setCartTotalPrice","priceAfterShipping","setPriceAfterShipping","setQuantityCount","setCartOrderId","paymentMessage","setPaymentMessage","paymentError","setPaymentError","errorHappendAt","setErrorHappendAt","shippingCost","paymentLoadingRef","containerIsCard","ukSticky","setUkSicky","showCodContainer","setShowCodContainer","noAddressError","setNoAddressError","setDidPriceChanged","timeForShowPriceChange","setTimeForShowPriceChange","calculateShippingCost","shippingType","successRazorPay","razorpay_payment_id","razorpay_order_id","razorpay_signature","rzp1","on","source","step","metadata","open","otp","razorpayOrderId","razorpaySignature","razorpayData","receipt","proceedWithPayment","getCodOrder","successCod","codData","itemCount","accumulator","cost","CheckoutContainer","setPaymentMode","internationalShipping","setInternationalShipping","SubBanner","Banner","backgroundColor","uk-cover","TrendingLatestProducts","TrendingLatestContainer","latestProducts","trendingProducts","PromoBanner","HomePageContainer","FooterBanner","app","StrictMode","createBrowserHistory","exact","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+KAAKA,EAQAC,E,mIARAD,K,UAAAA,E,YAAAA,E,gBAAAA,E,eAAAA,M,cAQAC,O,aAAAA,I,yBAAAA,I,iCAAAA,I,+BAAAA,I,4BAAAA,M,KCRL,ICAKC,EDACC,EAAe,CACnB,CACE,KAAQ,cACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,mBACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,iBACR,IAAO,QACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,WACR,IAAO,QACP,YAAe,MAEjB,CACE,KAAQ,aACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,sBACR,IAAO,QACP,YAAe,MAEjB,CACE,KAAQ,YACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,QACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,YACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,aACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,QACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,aACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,WACR,IAAO,QACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,QACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,QACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,0CACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,yBACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,WACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,gBACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,iCACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,oBACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,WACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,eACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,WACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,WACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,KACP,YAAe,MAEjB,CACE,KAAQ,aACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,iBACR,IAAO,QACP,YAAe,MAEjB,CACE,KAAQ,2BACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,OACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,QACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,QACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,mBACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,0BACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,WACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,QACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,8CACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,eACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,aACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,gBACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,OACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,iBACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,WACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,WACR,IAAO,QACP,YAAe,MAEjB,CACE,KAAQ,qBACR,IAAO,QACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,QACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,cACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,oBACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,WACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,8BACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,gBACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,OACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,gBACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,mBACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,8BACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,QACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,QACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,YACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,YACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,QACP,YAAe,MAEjB,CACE,KAAQ,aACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,OACR,IAAO,QACP,YAAe,MAEjB,CACE,KAAQ,YACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,WACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,gBACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,QACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,oCACR,IAAO,KACP,YAAe,MAEjB,CACE,KAAQ,gCACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,WACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,YACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,QACR,IAAO,MACP,YAAe,KACf,SAAY,GAEd,CACE,KAAQ,YACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,yCACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,OACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,cACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,QACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,QACP,YAAe,MAEjB,CACE,KAAQ,QACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,aACR,IAAO,KACP,YAAe,MAEjB,CACE,KAAQ,QACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,WACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,+CACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,iCACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,aACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,OACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,yBACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,gBACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,YACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,aACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,QACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,YACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,aACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,WACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,WACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,OACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,QACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,mBACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,aACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,aACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,YACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,6CACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,WACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,aACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,aACR,IAAO,QACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,aACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,QACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,QACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,cACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,uBACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,gBACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,cACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,YACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,QACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,OACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,iBACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,2BACR,IAAO,QACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,OACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,WACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,QACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,kCACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,mBACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,WACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,OACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,cACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,WACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,WACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,cACR,IAAO,QACP,YAAe,MAEjB,CACE,KAAQ,QACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,KACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,mBACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,+CACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,wBACR,IAAO,QACP,YAAe,MAEjB,CACE,KAAQ,cACR,IAAO,QACP,YAAe,MAEjB,CACE,KAAQ,eACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,4BACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,mCACR,IAAO,QACP,YAAe,MAEjB,CACE,KAAQ,QACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,aACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,wBACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,eACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,aACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,eACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,YACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,WACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,WACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,kBACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,eACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,cACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,+CACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,QACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,YACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,QACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,WACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,yBACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,YACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,cACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,uBACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,aACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,wCACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,WACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,cACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,OACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,QACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,sBACR,IAAO,QACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,eACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,2BACR,IAAO,QACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,uBACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,iBACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,gBACR,IAAO,KACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,aACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,8CACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,UACR,IAAO,MACP,YAAe,MAEjB,CACE,KAAQ,0BACR,IAAO,QACP,YAAe,MAEjB,CACE,KAAQ,uBACR,IAAO,QACP,YAAe,MAEjB,CACE,KAAQ,oBACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,QACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,SACR,IAAO,OACP,YAAe,MAEjB,CACE,KAAQ,WACR,IAAO,OACP,YAAe,Q,SC9sCdD,O,mBAAAA,I,mBAAAA,I,eAAAA,I,6BAAAA,I,qBAAAA,I,qBAAAA,I,iBAAAA,I,sBAAAA,M,KAWL,IC4BKE,ED5BCC,EAAwC,CAC5C,SAAY,EACZ,SAAY,EACZ,MAAS,EACT,iBAAkB,EAClB,UAAa,GAOTC,EAAc,CAAC,IAAI,KErBnBC,EAAkBC,oC,SCCTC,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,2BACTC,QAAS,CACP,OAAU,iCACV,cAAiB,MCEfC,EACC,SAACC,GACJ,OAAOC,EAAY,CACjBC,OAAQhB,EAAYiB,IACpBH,SAJAD,EAQE,SAACC,EAAaI,GAClB,OAAOH,EAAY,CACjBC,OAAQhB,EAAYmB,KACpBL,MACAI,UAKAH,EAAW,uCAAG,WAAOK,GAAP,eAAAC,EAAA,sEApBlBZ,EAAMa,SAASV,QAAf,cAA0C,UAAYW,OAAOC,aAAaC,QAAQ,YAoBhE,SAGOhB,EAAMiB,QAAQN,GAHrB,cAGVO,EAHU,yBAITA,GAJS,mCAMa,MAA1B,KAAMA,SAASC,QAA4C,MAA1B,KAAMD,SAASC,QAA4C,MAA1B,KAAMD,SAASC,OANpE,wBAOdL,OAAOC,aAAaK,WAAW,YAC/BN,OAAOO,SAASC,KAAO,SART,kBASP,CACLC,QAAS,KAAML,SAAST,KAAKc,SAAW,eACxCd,KAAM,KAXM,iCAcP,CACLc,QAAS,KAAML,SAAST,KAAKc,SAAW,oBACxCJ,OAAQ,KAAMD,SAASC,QAAU,IACjCV,KAAM,KAjBM,iEAAH,sD,QCtBXe,EAAuB,SAACC,GAC5B,OAAQA,GACN,KAAK,EACH,MAAO,WACT,KAAK,EACH,MAAO,WACT,KAAK,EACH,MAAO,QACT,KAAK,EACH,MAAO,iBACT,KAAK,EACH,MAAO,cAIPC,EAAsB,SAACC,GAAgD,IAApBC,EAAmB,uDAAN,EACpE,OAAQD,EAAclB,MACpBkB,EAAclB,KAAKoB,QAAO,SAACC,GACzB,OAAOA,EAAYC,oBAAsBC,OAAOJ,OAC3C,IAGLK,EAAa,SAACC,EAAaN,GAC/B,OAAQM,EAAMzB,MACZyB,EAAMzB,KAAKoB,QAAO,SAACM,GACjB,OAAQP,EAAWQ,QAASD,EAAKE,iBAAmB,IAAO,MACtD,IAGLC,EAAwB,SAACC,EAAkBC,GAC/C,OAAOC,KAAKC,KAAKV,OAAOQ,GAAUR,OAAOQ,IAAUR,OAAOO,GAAY,MAAOI,YAGzEC,EAA6B,SAACL,EAAkBC,GACpD,OAAOC,KAAKC,KAAKV,OAAOQ,GAAUR,OAAOO,GAAa,KAAKI,YAGvDE,EAAkB,SAACC,GACvB,MAAoB,OAAbA,EAAoB,SAAM,KAG7BC,EAAa,SAACC,EAAsBR,GACxC,MAAwB,OAAjBQ,EAAwBR,EAAMS,SAAWT,EAAMU,UAalDC,EAA+B,SAACC,GACpC,IAAIC,EAAa,GAyBjB,OAxBAD,EAAeE,SAAQ,SAACC,GACiB,IAAD,EAAlCF,EAAWE,EAAQC,eAUjBH,EAAWE,EAAQC,eAAeD,EAAQE,WAO5CJ,EAAWE,EAAQC,eAAeD,EAAQE,UAAUC,OAAS,EAC7DL,EAAWE,EAAQC,eAAeD,EAAQE,UAAUtB,KA/B1C,SAACwB,EAAmCC,GACpD,IAAIC,EAAa,GAMjB,OALAD,EAAUN,SAAQ,SAACnB,GACdwB,EAAQxB,KACT0B,EAAW1B,GAAQwB,EAAQxB,GAAQ,MAGhC0B,EAyBCC,CAAUT,EAAWE,EAAQC,eAAeD,EAAQE,UAAUtB,KAAKoB,EAAQQ,SAR7EV,EAAWE,EAAQC,eAAeD,EAAQE,UAAW,CACnDO,KAAMT,EAAQU,WACdP,MAAO,EACPvB,KAAOoB,EAAQQ,OAAOG,QAAO,SAACtD,EAAEuD,GAAH,OAASvD,EAAEuD,GAAG,EAAEvD,IAAG,KAbpDyC,EAAWE,EAAQC,gBAAnB,mBACGD,EAAQE,SAAY,CACnBO,KAAMT,EAAQU,WACdP,MAAO,EACPvB,KAAOoB,EAAQQ,OAAOG,QAAO,SAACtD,EAAEuD,GAAH,OAASvD,EAAEuD,GAAG,EAAEvD,IAAG,MAJpD,qBAMQ2C,EAAQa,iBANhB,MAsBGf,GAqCHgB,EAAyB,SAACC,EAAyBC,GACvD,OAAGA,EACMD,EAASzC,QAAO,qBAAE2C,YAAwBC,OAE1CH,EAASzC,QAAO,qBAAE6C,UAAoBD,QAoF3CE,EAAc,SAACC,GACnB,IAAMC,EAAOC,SAASC,cAAc,KAChCC,EA5B6B,SAACJ,GAClC,IAAIK,EAIAC,EAAOC,OAAOD,KAAKN,EAAM,IAkB7B,OAhBAK,EAAS,GACTA,GAAUC,EAAKE,KALS,KAMxBH,GALsB,KAOtBL,EAAMtB,SAAQ,SAAC+B,GACb,IAAIC,EAAM,EACVJ,EAAK5B,SAAQ,SAAAiC,GACPD,EAAM,IAAGL,GAXO,KAapBA,GAAUI,EAAKE,GAEfD,OAEFL,GAhBoB,QAmBfA,EAKGO,CAA2BZ,GACrC,GAAW,MAAPI,EAAJ,CAIKA,EAAIS,MAAM,sBACbT,EAAG,sCAAkCA,IAGvCH,EAAKa,aAAa,OAAQC,UAAUX,IACpCH,EAAKa,aAAa,WAPD,uBAQjBb,EAAKe,QACLf,EAAKgB,WAGDC,EAAoB,SAAC,GAA2G,IAA1GC,EAAyG,EAAzGA,WAAWC,EAA8F,EAA9FA,YAAYC,EAAkF,EAAlFA,cAAcC,EAAoE,EAApEA,cAAcC,EAAsD,EAAtDA,YAAYC,EAA0C,EAA1CA,SAASC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,KAC/G,MAAM,w2EAAN,OAgD6HP,EAhD7H,kUAkD6HC,EAlD7H,0VAsD+GC,EAtD/G,wSAwD+GC,EAxD/G,kiDAkFqCC,EAlFrC,uDAmFqCC,EAnFrC,uDAoFqCE,EApFrC,uDAqFqCD,EArFrC,oaA4FqCA,EA5FrC,4qBA2GkDA,EA3GlD,u2BAkIsIL,EAlItI,ktBJ3MIO,EAAgB,CACpB9F,KAAM,CACJ+F,SAAS,GAEXC,SAAU,GACVC,UAAU,EACVC,YAAY,EACZC,YAAY,EACZrF,QAAS,K,SAMN5B,K,oBAAAA,E,4BAAAA,E,wBAAAA,E,4BAAAA,E,4CAAAA,E,6BAAAA,M,KASL,IKpBKA,ELoBCkH,EAAU,SAACC,EAAWvF,GAAZ,MAAkC,CAChDwF,KAAMpH,EAAQqH,SACdvG,KAAMqG,EACNvF,YAQI0F,EAAc,iBAAO,CACzBF,KAAMpH,EAAQuH,eAOVC,EAAY,SAAC5F,GAAD,MAAsB,CACtCwF,KAAMpH,EAAQyH,WACd7F,YAGI8F,EAAiB,SAACC,EAAqB/E,EAAkBhB,GAAxC,MAA6D,CAClFwF,KAAMpH,EAAQ4H,qBACd9G,KAAM,CAAC6G,eAAc/E,YACrBhB,YAmEIiG,EAAU,yDAAO,WAAOC,GAAP,eAAA7G,EAAA,6DACrB6G,EAASR,KADY,SAGG7G,EAAQ,aAHX,QAGfc,EAHe,QAKRC,SAAW3B,EAAekI,GACrCD,EAASZ,EAAQ3F,EAAST,KAAKA,OAE/BgH,EAASN,EAAU,mCARA,2CAAP,uDKzHVZ,EAAe,CACnBI,YAAa,EACbD,UAAU,EACVE,YAAY,EACZrF,QAAS,K,SAGN5B,K,8BAAAA,E,0BAAAA,E,8BAAAA,E,oCAAAA,E,gCAAAA,E,oCAAAA,E,+BAAAA,M,KAUL,ICNKA,EDmBCgI,EAAkB,iBAAO,CAC7BZ,KAAOpH,EAAQiI,mBAGXC,EAAgB,SAACtG,GAAD,MAAsB,CAC1CwF,KAAOpH,EAAQmI,eACfrH,KAAMc,IAGFwG,EAAkB,SAACxG,GAAD,MAAsB,CAC5CwF,KAAOpH,EAAQqI,iBACfvH,KAAMc,IC1CFgF,GAAe,CACnB9F,KAAO,CACL6G,aAAe,IAEjBX,YAAY,EACZD,UAAU,EACVE,YAAY,EACZrF,QAAS,K,SAKN5B,K,sCAAAA,E,8CAAAA,E,2CAAAA,M,KAML,ICPKA,GDOCsI,GAAiB,SAACC,EAA4B3G,GAA7B,MAAmD,CACxEwF,KAAMpH,EAAQwI,kBACd1H,KAAMyH,EACN3G,YAGI6G,GAAsB,iBAAO,CACjCrB,KAAMpH,EAAQ0I,wBAGVC,GAAoB,SAAC/G,GAAD,MAAuB,CAC/CwF,KAAMpH,EAAQ4I,oBACdhH,Y,QC3BIgF,GAAe,CACnBI,YAAY,EACZD,UAAU,EACVE,YAAY,EACZrF,QAAS,GACTd,KAAM,K,SAGHd,K,gCAAAA,E,4BAAAA,E,gCAAAA,E,gCAAAA,E,wBAAAA,E,+CAAAA,Q,KASL,IChBKA,GDgBC6I,GAAgB,iBAAO,CAC3BzB,KAAMpH,GAAQ8I,iBAQVC,GAAc,SAACnH,GAAD,MAAsB,CACxCwF,KAAMpH,GAAQgJ,aACdpH,YAkGIqH,GAAY,yDAAM,WAAOC,GAAP,iBAAAjI,EAAA,6DACtBiI,EAASL,MADa,SAGCpI,EAAQ,kBAHT,QAGhBc,EAHgB,QAIVC,SAAW3B,EAAekI,IAC9BoB,EAAM5H,EAAST,KACrBoI,GAjGepI,EAiGIqI,EAAIrI,MAAQ,GAjGU,CAC3CsG,KAAMpH,GAAQoJ,WACdtI,WAkGEoI,EAASH,GADGxH,EACaK,SAAW,KAThB,iCA3FN,IAACd,IA2FK,OAAN,wD,SC7Hbd,K,4BAAAA,E,4BAAAA,E,wBAAAA,E,oBAAAA,E,2BAAAA,Q,KAQL,ICTKA,GDSCqJ,GAAa,iBAAO,CACxBjC,KAAMpH,GAAQsJ,eAGVC,GAAa,SAAC3H,GAAD,MAAsB,CACvCwF,KAAMpH,GAAQwJ,aACd5H,YAGI6H,GAAW,SAAC7H,GAAD,MAAsB,CACrCwF,KAAMpH,GAAQwJ,aACd5H,YAcIgF,GAAe,CACnBK,YAAY,EACZD,YAAY,EACZD,UAAU,EACVnF,QAAS,GACTd,KAAK,IA8DD4I,GAAgB,SAAClH,GAAD,8CAAuB,WAAO0G,GAAP,mBAAAjI,EAAA,6DAC3CiI,EAASG,MADkC,SAGpB5I,EAAS,eAC9B,CACEkJ,aAAanH,EAAKoH,MAClBC,kBAAmBrH,EAAKsH,KACxBC,iBAAkB1H,OAAOG,EAAKE,iBAC9BsH,QAASxH,EAAK4B,SARyB,QAGrC7C,EAHqC,QAW/BC,SAAW3B,EAAekI,IAC9BoB,EAAM5H,EAAST,KACH,KAAf0B,EAAK4B,QACA6F,EAAwBzH,EAAKE,gBAAkBF,EAAKE,gBAAkB,EAC5EwG,GAxFapI,EAwFO,CAAC,2BAAI0B,GAAL,IAAW0H,oBAAqBrI,EAAqBQ,OAAO4H,OAxF9CrI,EAwFwEuH,EAAIvH,SAAW,GAxFlE,CAC3DwF,KAAMpH,GAAQmK,YACdrJ,OACAc,cAuFIsH,EAASK,GAAYJ,EAAIvH,SAAW,MAItCsH,EAASO,GADGlI,EACWK,SAAW,KArBO,iCAzE3B,IAACd,EAAqBc,IAyEK,OAAvB,uDAyBhBwI,GAAS,yDAAM,WAAOlB,GAAP,iBAAAjI,EAAA,6DACnBiI,EAASG,MADU,SAGI5I,EAAQ,gBAHZ,QAGbc,EAHa,QAKPC,SAAW3B,EAAekI,IAC9BoB,EAAM5H,EAAST,KACrBoI,GA9GYpI,EA8GKqI,EAAIrI,MAAQ,GA9GQ,CACvCsG,KAAMpH,GAAQqK,SACdvJ,WA+GEoI,EAASO,GADGlI,EACWK,SAAW,KAVjB,iCAvGN,IAACd,IAuGK,OAAN,wD,SC9HVd,K,0CAAAA,E,0CAAAA,E,sCAAAA,E,kCAAAA,E,yCAAAA,Q,KAQL,ICAKA,GDACsK,GAAoB,iBAAO,CAC/BlD,KAAMpH,GAAQuK,sBAGVC,GAAoB,SAAC5I,GAAD,MAAsB,CAC9CwF,KAAMpH,GAAQyK,oBACd7I,YAGI8I,GAAkB,SAAC9I,GAAD,MAAsB,CAC5CwF,KAAMpH,GAAQ2K,kBACd/I,YAcIgF,GAAe,CACnBK,YAAY,EACZD,YAAY,EACZD,UAAU,EACVnF,QAAS,GACTd,KAAK,IA6DD8J,GAAuB,SAACzI,GAAD,8CAAqC,WAAO+G,GAAP,qBAAAjI,EAAA,6DAChEiI,EAASoB,MADuD,SAGzC7J,EAAS,sBAC9B,CACEoK,aAAa1I,EAAY2H,KACzBgB,aAAc3I,EAAYyH,MAC1BmB,oBAAqB1I,OAAOF,EAAYC,mBACxC4I,eAAc,UAAE7I,EAAY8I,qBAAd,aAAE,EAA2BjI,aARiB,QAG1DzB,EAH0D,QAWpDC,SAAW3B,EAAekI,IAC9BoB,EAAM5H,EAAST,KACW,KAA7BqB,EAAY8I,eACPhB,EAAwB9H,EAAYC,kBAAoBD,EAAYC,kBAAoB,EAC9F8G,GAvFoBpI,EAuFO,CAAC,2BAAIqB,GAAL,IAAkB+H,oBAAqBrI,EAAqBQ,OAAO4H,OAvF9CrI,EAuFwEuH,EAAIvH,SAAW,GAvFlE,CACzEwF,KAAMpH,GAAQkL,mBACdpK,OACAc,cAsFIsH,EAASsB,GAAmBrB,EAAIvH,SAAW,MAI7CsH,EAASwB,GADGnJ,EACkBK,SAAW,KArBqB,iCAxEzC,IAACd,EAA4Bc,IAwEY,OAArC,uDA0BvBuJ,GAAgB,yDAAM,WAAOjC,GAAP,iBAAAjI,EAAA,6DAC1BiI,EAASoB,MADiB,SAGH7J,EAAQ,uBAHL,QAGpBc,EAHoB,QAKdC,SAAW3B,EAAekI,IAC9BoB,EAAM5H,EAAST,KACrBoI,GA9GmBpI,EA8GKqI,EAAIrI,MAAQ,GA9Ge,CACrDsG,KAAMpH,GAAQoL,gBACdtK,WA+GEoI,EAASwB,GADGnJ,EACkBK,SAAW,KAVjB,iCAvGN,IAACd,IAuGK,OAAN,uDC7HhB8F,GAAe,CACnBI,YAAY,EACZD,UAAU,EACVE,YAAY,EACZrF,QAAS,GACTd,KAAM,K,SAGHd,K,gCAAAA,E,4BAAAA,E,gCAAAA,E,gCAAAA,E,wBAAAA,E,8CAAAA,E,+CAAAA,Q,KAUL,ICXKA,GDWCqL,GAAgB,iBAAO,CAC3BjE,KAAMpH,GAAQsL,iBAQVC,GAAc,SAAC3J,GAAD,MAAsB,CACxCwF,KAAMpH,GAAQwL,aACd5J,YAOI6J,GAAY,SAAC3K,EAAuBc,GAAxB,MAA8C,CAC9DwF,KAAMpH,GAAQ0L,WACd5K,OACAc,YAGI+J,GAAsB,SAAC7K,EAAuBc,GAAxB,MAA6C,CACvEwF,KAAMpH,GAAQ4L,sBACd9K,OACAc,YAGIiK,GAAsB,SAAC/K,EAAuBc,GAAxB,MAA6C,CACvEwF,KAAMpH,GAAQ8L,sBACdhL,OACAc,YAkHImK,GAAe,SAACC,GAAD,IAAwBC,EAAxB,sGAA4C,WAAO/C,GAAP,iBAAAjI,EAAA,6DAC/DiI,EAASmC,MADsD,SAGxC5K,EAAS,iBAAkB,CAChDyL,YAAaF,EAAOlC,KACpBqC,aAAcH,EAAOpC,MACrBwC,UAAWJ,EAAOK,SAClBJ,aAP6D,QAGzD1K,EAHyD,QAUlDC,SAAW3B,EAAekI,IAC/BoB,EAAM5H,EAAST,KAEnBoI,EADC+C,EACQJ,GAAoB,CAACG,GAAS7C,EAAIvH,SAAW,IAE7C+J,GAAoB,CAACK,GAAS7C,EAAIvH,SAAW,MAIxDsH,EAASqC,GADGhK,EACaK,SAAW,KAnByB,2CAA5C,wD,SC9JhB5B,K,kCAAAA,E,kCAAAA,E,8BAAAA,E,0BAAAA,E,4CAAAA,E,gCAAAA,E,wCAAAA,E,0CAAAA,E,gDAAAA,E,+CAAAA,Q,KAaL,ICZKA,GDYCsM,GAAiB,iBAAO,CAC5BlF,KAAMpH,GAAQuM,kBAGVC,GAAiB,SAAC5K,GAAD,MAAsB,CAC3CwF,KAAMpH,GAAQyM,gBACd7K,YAGI8K,GAAe,SAAC9K,GAAD,MAAsB,CACzCwF,KAAMpH,GAAQ2M,cACd/K,YAGIgL,GAAc,SAAC9L,EAAqB+L,GAAtB,MAAqD,CACvEzF,KAAMpH,GAAQ8M,YACdhM,OACA+L,qBAQIE,GAAiB,iBAAO,CAC5B3F,KAAMpH,GAAQgN,sBAGVC,GAAuB,SAACnM,EAAqBc,GAAtB,MAA2C,CACtEwF,KAAMpH,GAAQkN,uBACdpM,OACAc,YAGIuL,GAAsB,SAACrM,EAAqB+L,GAAtB,MAAqD,CAC/EzF,KAAMpH,GAAQoN,qBACdtM,OACA+L,qBAGIQ,GAAsB,SAACxI,EAAmBE,EAAiBuI,EAAmB1L,GAAxD,MAA8E,CACxGwF,KAAMpH,GAAQuN,sBACd3L,UACA4L,WAAY,CACV3I,WACAE,SACAuI,eAIE1G,GAAe,CACnBK,YAAY,EACZD,YAAY,EACZD,UAAU,EACV8F,kBAAkB,EAClBjL,QAAS,GACTd,KAAM,GACN0M,WAAY,IA6FRC,GAAmB,SAAC7J,GAAD,IAAuBqI,EAAvB,uDAAkC,EAAGyB,EAArC,qFAA6F,WAAOxE,GAAP,mBAAAjI,EAAA,6DACpHiI,EAASoD,MACLqB,EAAW,IAAIC,SACfhK,EAAQiK,kBACVC,MAAMC,KAAKnK,EAAQiK,kBAAkBlK,SAAQ,SAACqK,EAASC,GACrDN,EAASO,OAAT,wBAAiCD,GAASD,MAG9CL,EAASO,OAAO,oBAAqBtK,EAAQN,UAC7CqK,EAASO,OAAO,oBAAqBtK,EAAQL,UAC7CoK,EAASO,OAAO,oBAAqBtK,EAAQpB,MAAQ,KACrDmL,EAASO,OAAO,qBAAsBtK,EAAQuK,QAAU,KACxDR,EAASO,OAAO,cAAetK,EAAQ6C,UAAY,KACnDkH,EAASO,OAAO,eAAgBtK,EAAQS,MACxCsJ,EAASO,OAAO,eAAgBtK,EAAQwK,aAAe,IACvDT,EAASO,OAAO,0BAA2BtK,EAAQzB,aAAe,IAAIa,YACtE2K,EAASO,OAAO,UAAWtK,EAAQ0J,WACnCK,EAASO,OAAO,oBAAqBjC,EAASjJ,YAC9C2K,EAASO,OAAO,sBAAuBG,KAAKC,UAAU1K,EAAQ2K,mBAC9DZ,EAASO,OAAO,6BAA+BG,KAAKC,UAAUZ,IAC9DC,EAASO,OAAO,4BAA8BG,KAAKC,UAAU1K,EAAQ4K,0BApB+C,UAqB7F/N,EAAS,eAAgBkN,GArBoE,SAqB9GpM,EArB8G,QAuBvGC,SAAW3B,EAAekI,IAC/BoB,EAAM5H,EAAST,KACI,KAArB8C,EAAQ0J,UAERpE,EADE+C,EACOgB,GAAqB,CAACrJ,GAAUuF,EAAIvH,SAAW,IAE/C4K,GAAerD,EAAIvH,SAAW,KAGzCsH,EAASsD,GAAerD,EAAIvH,SAAW,MAIzCsH,EAASwD,GADGnL,EACcK,SAAW,KApC6E,4CAA7F,uDAsDnB6M,GAAa,SAACnB,GAAD,8CAAuB,WAAOpE,GAAP,iBAAAjI,EAAA,6DACxCiI,EAASoD,MAD+B,SAEjB7L,EAAQ,0BAA4B6M,GAFnB,QAElC/L,EAFkC,QAI3BC,SAAW3B,EAAekI,IAC/BoB,EAAM5H,EAAST,KACrBoI,GA/LuBsE,EA+LIrE,EAAIqE,YAAc,GA/LO,CACtDpG,KAAMpH,GAAQ0O,mBACdlB,iBAgMEtE,EAASwD,GADGnL,EACcK,SAAW,KATC,iCAzLhB,IAAC4L,IAyLe,OAAvB,uDAabmB,GAAsB,SAC1BC,EACAC,EACA5M,EACAgJ,EACAnH,EACAM,EACA0K,EACAC,EACA5L,EACA6L,GAV0B,IAW1BC,EAX0B,yGAWJ,WAAO/F,GAAP,mBAAAjI,EAAA,6DACpBiI,EAASoD,MADW,SAGG7L,EAAA,sCACUmO,EADV,kBAC0BC,EAD1B,wBAC+C5M,EAD/C,qBACsE6B,EADtE,mBACyFM,EADzF,0BACiH6G,EADjH,uBAC6I6D,EAD7I,qBACoKC,EADpK,qBACyL5L,EADzL,uBACgN6L,IAJnN,QAGdzN,EAHc,QAMPC,SAAW3B,EAAekI,IAC/BoB,EAAM5H,EAAST,KACf+L,EAAmB1D,EAAIrI,MExRlB,KFwR0BqI,EAAIrI,KAAKgE,SAAuB,EAEnEoE,EADC+F,EACQrC,GAAYzD,EAAIrI,MAAQ,GAAI+L,GAE5BM,GAAoBhE,EAAIrI,MAAQ,GAAI+L,KAK/C3D,EAASwD,GADGnL,EACcK,SAAW,KAjBnB,2CAXI,uDC9OtBgF,GAAe,CACnBI,YAAY,EACZD,UAAU,EACVE,YAAY,EACZrF,QAAS,GACTd,KAAM,K,SAGHd,K,8CAAAA,E,0CAAAA,E,uCAAAA,Q,KAML,IECKA,GATC4G,GAAe,CACnBI,YAAY,EACZD,UAAU,EACVE,YAAY,EACZiI,iBAAiB,EACjBtN,QAAS,GACTd,KAAM,K,SAGHd,K,4BAAAA,E,wBAAAA,E,4BAAAA,E,4BAAAA,E,oBAAAA,E,kCAAAA,E,0CAAAA,E,oCAAAA,E,gDAAAA,E,0CAAAA,E,wCAAAA,E,sDAAAA,E,iEAAAA,Q,KAgBL,ICjBKA,GDiBCmP,GAAc,iBAAO,CACzB/H,KAAMpH,GAAQoP,eAQVC,GAAY,SAACzN,GAAD,MAAsB,CACtCwF,KAAMpH,GAAQsP,WACd1N,YAiBI2N,GAAoB,SAACzO,EAAsBc,GAAvB,MAA4C,CACpEwF,KAAMpH,GAAQwP,oBACd1O,OACAc,YAeI6N,GAAoB,SAAC3O,EAAsBc,GAAvB,MAA4C,CACpEwF,KAAMpH,GAAQ0P,oBACd5O,OACAc,YAyLI+N,GAAgB,SAACC,EAAoBC,GAArB,8CACpB,WAAO3G,GAAP,uBAAAjI,EAAA,yDACEiI,EAASiG,MACJU,EAFP,gBAQcC,EARd,2BASaF,GATb,IAUUG,YAAa1N,OAAOuN,EAAKI,cAAgB3N,OAAOuN,EAAKK,kBAAkBjN,aAEzEkG,GA/MuBpI,EA+MU,CAACgP,GA/MWlO,EA+MF,GA/MuB,CAC1EwF,KAAMpH,GAAQkQ,uBACdpP,OACAc,aAgMA,uCAc2BnB,EAAS,QAC9B,CACE0P,kBAAmBP,EAAKQ,gBAAgBpN,WACxCqN,eAAgBT,EAAKK,gBACrBK,SAAUV,EAAKW,aACfC,eAAgBZ,EAAKa,OAAOzN,WAC5B0N,aAAa,IApBrB,QAcUnP,EAdV,QAuBiBC,SAAW3B,EAAekI,IAC/BoB,EAAM5H,EAAST,KACF,KAAf8O,EAAKa,QACDnL,EAAS6D,EAAIrI,MAAQ,GACE,MAAzB8O,EAAKK,gBACP/G,EAASuG,GAAkB,CAACG,GAAOzG,EAAIvH,SAAW,KAElDsH,EAASqG,GAAkB,CAACjK,GAAS6D,EAAIvH,SAAW,QAGhD0D,EAAS6D,EAAIrI,MAAQ,IACpB6P,aAAef,EAAKe,aAC3BrL,EAAOsL,iBAAmBhB,EAAKgB,iBAC/BtL,EAAOkB,YAAcoJ,EAAKpJ,YAC1BlB,EAAOuL,YAAcjB,EAAKiB,YAC1BvL,EAAOgI,UAAYsC,EAAKtC,UACxBpE,EAASqG,GAAkB,CAACjK,GAAS6D,EAAIvH,SAAW,OAItDsH,EAASmG,GADG9N,EACWK,SAAW,KA3CxC,kCAnM8B,IAACd,EAAsBc,IAmMrD,OADoB,uDAiDhBkP,GAAU,yDAAM,WAAO5H,GAAP,iBAAAjI,EAAA,6DACpBiI,EAASiG,MADW,SAGG1O,EAAQ,SAHX,QAGdc,EAHc,QAIPC,SAAW3B,EAAekI,IAC/BoB,EAAM5H,EAAST,KACrBoI,GA/PoBpI,EA+PIqI,EAAIrI,MAAQ,GA/PMc,EA+PFuH,EAAIvH,SAAW,GA/PQ,CACjEwF,KAAMpH,GAAQ+Q,iBACdjQ,OACAc,cA+PEsH,EAASmG,GADG9N,EACWK,SAAW,KAThB,iCAzPC,IAACd,EAAsBc,IAyPxB,OAAN,uDAaVoP,GAAiB,SAACpB,EAAoBC,GAArB,8CAA8C,WAAO3G,GAAP,iBAAAjI,EAAA,yDACnEiI,EAASiG,MAELU,EAH+D,gBAIjE3G,GAhPyBpI,EAgPI,CAAC8O,GAhPoB,CACpDxI,KAAMpH,GAAQiR,+BACdnQ,UA0OmE,sCAM1CL,EAAS,QAAS,CACvC+P,eAAgBZ,EAAKa,OACrBN,kBAAmBP,EAAKQ,gBAAgBpN,WACxCqN,eAAgBT,EAAKK,gBACrBK,SAAU,IACVI,aAAa,IAXkD,QAM3DnP,EAN2D,QAapDC,SAAW3B,EAAekI,IAC/BoB,EAAM5H,EAAST,KACrBoI,EAASuG,GAAkB,CAACG,GAAOzG,EAAIvH,SAAW,MAGlDsH,EAASmG,GADG9N,EACWK,SAAW,KAlB6B,iCA5OzC,IAACd,IA4OwC,OAA9C,uDCpUjB8F,GAAe,CACnBI,YAAY,EACZD,UAAU,EACVE,YAAY,EACZiK,oBAAoB,EACpBC,eAAe,EACfC,wBAAwB,EACxBxP,QAAS,GACTd,KAAM,K,SAGHd,K,oCAAAA,E,gCAAAA,E,gDAAAA,E,oCAAAA,E,4BAAAA,E,kDAAAA,E,kCAAAA,E,+BAAAA,Q,KAWL,IC/BKA,GD+BCqR,GAAkB,iBAAO,CAC7BjK,KAAMpH,GAAQsR,mBAGVC,GAAuB,SAACzQ,EAAwBc,GAAzB,MAA+C,CAC1EwF,KAAMpH,GAAQwR,uBACd1Q,OACAc,YAGI6P,GAAgB,SAAC7P,GAAD,MAAsB,CAC1CwF,KAAMpH,GAAQ0R,eACd9P,YAGI+P,GAAkB,iBAAO,CAC7BvK,KAAMpH,GAAQ4R,mBAGVC,GAAgB,SAACjQ,GAAD,MAAqB,CACzCwF,KAAMpH,GAAQ8R,gBACdlQ,YAGImQ,GAAe,SAACnQ,GAAD,MAAqB,CACxCwF,KAAMpH,GAAQgS,cACdpQ,YA0GIqQ,GAAiB,SAACC,EAAgBC,EAAuBC,EAAiB/F,GAAzD,8CAAgF,WAAOnD,GAAP,mBAAAjI,EAAA,6DACrGiI,EAASmI,MAD4F,SAE9E5Q,EAAS,eAChC,CACEyR,SACAC,gBACAC,UACA/F,aAPmG,QAE/F9K,EAF+F,QASxFC,SAAW3B,EAAekI,IAC/BoB,EAAM5H,EAAST,KACrBoI,EAASqI,GAAqBpI,EAAIrI,KAA0BqI,EAAIvH,SAAW,MACnEL,EAASC,SAAW3B,EAAewS,cACrClJ,EAAM5H,EAAST,KACrBoI,EAAS6I,GAAa5I,EAAIvH,SAAW,MAGrCsH,EAASuI,GADGlQ,EACeK,SAAW,KAjB6D,2CAAhF,wD,SCnKlB5B,K,8CAAAA,E,uCAAAA,Q,KAKL,ICQKA,GDJCsS,GAAkB,SAACxR,GAAD,MAAmB,CACzCsG,KAAMpH,GAAQuS,kBACdzR,SAGI8F,GAAe,CACnBK,YAAY,EACZD,YAAY,EACZD,UAAU,EACVnF,QAAS,GACTd,KAAK,K,SCNFd,K,8BAAAA,E,8BAAAA,E,0CAAAA,E,0BAAAA,E,0BAAAA,E,kCAAAA,E,6CAAAA,Q,KAUL,ICTKA,GDSCwS,GAAc,iBAAO,CACzBpL,KAAMpH,GAAQyS,gBAGVC,GAAc,SAAC5R,EAAe6R,GAAhB,MAA6C,CAC/DvL,KAAMpH,GAAQ4S,cACd9R,OACA6R,mBAGIE,GAAmB,SAAC/R,GAAD,MAAoB,CAC3CsG,KAAMpH,GAAQ8S,oBACdhS,SAGIiS,GAAY,SAACnR,GAAD,MAAsB,CACtCwF,KAAMpH,GAAQgT,YACdpR,YAQIqR,GAAiB,SAACC,GAAD,MAA6B,CAClD9L,KAAMpH,GAAQmT,gBACd3F,WAAY,CACX4E,QAASc,EAAelQ,cAIrBoQ,GAAoB,iBAAO,CAC/BhM,KAAMpH,GAAQqT,uBAGVzM,GAAe,CACnBK,YAAY,EACZD,YAAY,EACZD,UAAU,EACV4L,gBAAgB,EAChBW,gBAAgB,EAChB1R,QAAS,GACTd,KAAK,GACL0M,WAAY,IAyFR+F,GAAoB,SAAC3E,EAAgBC,GAAjB,8CAAmC,WAAM3F,GAAN,mBAAAjI,EAAA,6DAC3DiI,EAASsJ,MADkD,SAEpC/R,EAAQ,4BAA4BoO,EAAM,WAAWD,GAFjB,QAErDrN,EAFqD,QAI/CC,SAAW3B,EAAekI,IAC9BoB,EAAM5H,EAAST,KACf6R,EAAiBxJ,EAAIrI,MJnLd,KImLsBqI,EAAIrI,KAAKgE,SAAuB,EACnEoE,EAASwJ,GAAavJ,EAAIrI,MAAQ,GAAI6R,KAGtCzJ,EAAS6J,GADGxR,EACYK,SAAW,KAVsB,2CAAnC,uDCtJpBgF,GAAe,CACnBI,YAAY,EACZD,UAAU,EACVE,YAAY,EACZrF,QAAS,GACTd,KAAM,K,SAGHd,K,kCAAAA,E,8BAAAA,E,kCAAAA,E,kCAAAA,E,0BAAAA,E,gDAAAA,E,iDAAAA,Q,KAUL,ICjBKA,GDiBCwT,GAAiB,iBAAO,CAC5BpM,KAAMpH,GAAQyT,kBAQVC,GAAe,SAAC9R,GAAD,MAAsB,CACzCwF,KAAMpH,GAAQ2T,cACd/R,YAYIgS,GAAuB,SAAC9S,EAAsBc,GAAvB,MAA4C,CACvEwF,KAAMpH,GAAQ6T,uBACd/S,OACAc,YAGIkS,GAAuB,SAAChT,EAAsBc,GAAvB,MAA4C,CACvEwF,KAAMpH,GAAQ+T,uBACdjT,OACAc,YAsGIoS,GAAc,yDAAM,WAAO9K,GAAP,iBAAAjI,EAAA,6DACxBiI,EAASsK,MADe,SAGD/S,EAAQ,YAHP,QAGlBc,EAHkB,QAIZC,SAAW3B,EAAekI,IAC9BoB,EAAM5H,EAAST,KACrBoI,GA1HgBpI,EA0HIqI,EAAIrI,MAAQ,GA1HU,CAC5CsG,KAAMpH,GAAQiU,YACdnT,WA2HEoI,EAASwK,GADGnS,EACcK,SAAW,KATf,iCApHP,IAACd,IAoHM,OAAN,uDAadoT,GAAgB,SAACC,GAAD,IAAwBzD,EAAxB,sGAA+C,WAAOxH,GAAP,iBAAAjI,EAAA,6DACnEiI,EAASsK,MAD0D,SAG5C/S,EAAS,WAAY,CAC1C2T,aAAcD,EAAQE,YACtBC,aAAcH,EAAQI,aACtBC,WAAYL,EAAQM,UACpB/D,gBAPiE,QAG7DnP,EAH6D,QAUtDC,SAAW3B,EAAekI,IAC/BoB,EAAM5H,EAAST,KAEnBoI,EADCwH,EACQoD,GAAqB,CAACK,GAAUhL,EAAIvH,SAAW,IAE/CgS,GAAqB,CAACO,GAAUhL,EAAIvH,SAAW,MAI1DsH,EAASwK,GADGnS,EACcK,SAAW,KAnB4B,2CAA/C,wD,SCpKjB5B,K,oCAAAA,E,oCAAAA,E,iCAAAA,Q,KAML,ICNKA,GDWC0U,GAAiB,SAAC5T,EAAwBc,GAAzB,MAA8C,CACnEwF,KAAMpH,GAAQ2U,iBACd7T,OACAc,YAQIgF,GAAe,CACnBK,YAAY,EACZD,YAAY,EACZD,UAAU,EACV4L,gBAAgB,EAChB/Q,QAAS,GACTd,KAAK,K,SC5BFd,K,kDAAAA,E,kDAAAA,E,8CAAAA,E,2CAAAA,Q,KAOL,ICPKA,GD2BC4G,GAAe,CACnBK,YAAY,EACZD,YAAY,EACZD,UAAU,EACVnF,QAAS,GACTd,KAAK,K,SChCFd,K,oDAAAA,E,oDAAAA,E,gDAAAA,E,6CAAAA,Q,KAOL,ICPKA,GD2BC4G,GAAe,CACnBK,YAAY,EACZD,YAAY,EACZD,UAAU,EACVnF,QAAS,GACTd,KAAK,K,SChCFd,K,gDAAAA,E,gDAAAA,E,4CAAAA,E,yCAAAA,Q,KAOL,ICRKA,GD4BC4G,GAAe,CACnBK,YAAY,EACZD,YAAY,EACZD,UAAU,EACVnF,QAAS,GACTd,KAAK,K,SCjCFd,K,gCAAAA,E,wBAAAA,E,6BAAAA,Q,KAML,ICZKA,GDiBC4U,GAAW,SAAC9T,GAAD,MAA0B,CACzCsG,KAAMpH,GAAQ6U,WACd/T,SAQI8F,GAAe,CACnBK,YAAY,EACZD,YAAY,EACZD,UAAU,EACVnF,QAAS,GACTd,KAAK,ICtCD8F,GAAe,CACnB9F,KAAM,CACJgU,eAAgB,M,SAIf9U,K,yCAAAA,Q,KAIL,ICOKA,GDPC+U,GAAmB,SAACjU,GAAD,MAAkC,CACzDsG,KAAMpH,GAAQgV,mBACdlU,SCTI8F,GAAe,CACnBI,YAAY,EACZC,YAAY,EACZnG,KAAM,CACJ+C,cAAc,GACdoR,SAAS,GACT7Q,OAAO,GACP0K,WAAW,GACXC,SAAS,GACTmG,gBAAiB,GACjBlG,WAAW,M,SAIVhP,K,kCAAAA,E,kCAAAA,E,wBAAAA,E,gCAAAA,E,iCAAAA,Q,KAQL,ICLKA,GDaCmV,GAA2B,iBAAO,CACtC/N,KAAMpH,GAAQoV,iBAGVC,GAAsB,SAACzP,EAAY9E,GAAb,MAA0C,CACpEsG,KAAMpH,GAAQsV,gBACd1P,MACA9E,SC5BI8F,GAAe,CACnBI,YAAY,EACZD,UAAU,EACVE,YAAY,EACZrF,QAAS,GACTd,KAAM,K,SAGHd,K,kDAAAA,E,8CAAAA,E,0CAAAA,E,2DAAAA,Q,KAOL,ICcMuV,GAAW,CACfpO,K3B4B6B,WAA2E,IAAD,EAAzEqO,EAAyE,uDAAjE5O,EAAc6O,EAAmD,uCACvG,OAAQA,EAAOrO,MACb,KAAKpH,EAAQuH,aACX,OAAO,2BACFiO,GADL,IAEExO,YAAY,EACZD,UAAU,EACVE,YAAY,IAEhB,KAAKjH,EAAQqH,SACX,OAAO,2BACFmO,GADL,IAEE1U,KAAO2U,EAAO3U,KACdiG,UAAU,EACVC,YAAY,EACZC,YAAY,EACZrF,QAAS6T,EAAO7T,UAEpB,KAAK5B,EAAQ0V,aACX,OAAO,2BACFF,GACA5O,GAEP,KAAK5G,EAAQ2V,aACX,OAAO,2BACFH,GADL,IAEE1O,SAAW2O,EAAO3O,SAClBC,UAAU,EACVC,YAAY,EACZC,YAAY,EACZrF,QAAS6T,EAAO7T,UAEpB,KAAK5B,EAAQ4H,qBACX,OAAO,2BACF4N,GADL,IAEEzO,UAAU,EACVC,YAAY,EACZC,YAAY,EACZrF,QAAS6T,EAAO7T,QAChBkF,SAAQ,UAAG0O,EAAM1O,gBAAT,aAAG,EAAgB8O,KAAI,SAACzO,GAAU,IAAD,IAC2B,EAAlE,OAAG,UAAAA,EAAKQ,oBAAL,eAAmBkO,kBAAnB,UAAqCJ,EAAO3U,YAA5C,aAAqC,EAAa6G,cAC5C,2BAAIR,GAAX,IAAiBvE,SAAQ,UAAC6S,EAAO3U,YAAR,aAAC,EAAa8B,WAElCuE,OAGb,KAAKnH,EAAQyH,WACX,kCACK+N,GADL,IAEExO,YAAY,EACZD,UAAU,EACVE,YAAY,EACZrF,QAAS6T,EAAO7T,UAEpB,QACE,OAAO4T,I2BlFXM,UtBgBuB,WAAgF,IAA/EN,EAA8E,uDAAtE5O,EAAc6O,EAAwD,uCAEtG,OAAQA,EAAOrO,MACb,KAAKpH,EAAQ+V,cACb,KAAK/V,EAAQiI,iBACX,OAAO,2BACFuN,GADL,IAEExO,YAAY,EACZD,UAAU,EACVE,YAAY,IAEhB,KAAKjH,EAAQgW,YACb,KAAKhW,EAAQmI,eACX,OAAO,2BACFqN,GADL,IAEExO,YAAY,EACZD,UAAU,EACVE,YAAY,EACZrF,QAAS6T,EAAO3U,OAEpB,KAAKd,EAAQiW,cACb,KAAKjW,EAAQqI,iBACX,OAAO,2BACFmN,GADL,IAEExO,YAAY,EACZD,UAAU,EACVE,YAAY,EACZrF,QAAS6T,EAAO3U,OAEpB,KAAKd,EAAQkW,cACX,OAAO,2BACFV,GADL,IAEExO,YAAY,EACZD,UAAU,EACVE,YAAY,IAEhB,QACE,OAAOuO,IsBpDXjN,arBF0B,WAAuD,IAAtDiN,EAAqD,uDAA7C5O,GAAc6O,EAA+B,uCAChF,OAAOA,EAAOrO,MACZ,KAAKpH,EAAQwI,kBACX,OAAO,2BACFgN,GADL,IAEE1U,KAAM2U,EAAO3U,KACbkG,YAAY,EACZD,UAAU,EACVE,YAAY,EACZrF,QAAS6T,EAAO7T,UAEpB,KAAK5B,EAAQ0I,sBACX,kCACK8M,GADL,IAEExO,YAAY,EACZD,UAAU,EACVE,YAAY,IAEhB,KAAKjH,EAAQ4I,oBACX,kCACK4M,GADL,IAEExO,YAAY,EACZD,UAAU,EACVE,YAAY,EACZrF,QAAS6T,EAAO7T,UAEpB,QACE,OAAO4T,IqBxBXrH,OpBaoB,WAAyD,IAAxDqH,EAAuD,uDAA/C5O,GAAc6O,EAAiC,uCAC5E,OAAQA,EAAOrO,MACb,KAAKpH,GAAQ8I,eACX,OAAO,2BACF0M,GADL,IAEExO,YAAY,EACZD,UAAU,EACVE,YAAW,EACXrF,QAAS,KAEb,KAAK5B,GAAQmW,eACX,OAAO,2BACFX,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZpF,QAAS6T,EAAO7T,UAEpB,KAAK5B,GAAQgJ,aACX,OAAO,2BACFwM,GADL,IAEEzO,UAAU,EACVC,YAAY,EACZC,YAAY,EACZrF,QAAS6T,EAAO7T,UAEpB,KAAK5B,GAAQoJ,WACX,OAAO,2BACFoM,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZpF,QAAS6T,EAAO7T,QAChBd,KAAM2U,EAAO3U,OAEjB,KAAKd,GAAQoW,sBACX,IAAMC,EAAgBb,EAAM1U,MAAQ,GAC9BwV,EAAeb,EAAO3U,MAAQ,GAC9ByV,EAAeF,EAAcnU,QAAO,SAAAsU,GACxC,OAAOA,EAAE1S,UAAYwS,EAAa,GAAGxS,YAEvC,OAAO,2BACF0R,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZpF,QAAS6T,EAAO7T,QAChBd,KAAK,GAAD,oBACCyV,GADD,aAECD,MAGT,KAAKtW,GAAQyW,eACX,OAAO,2BACFjB,GACA5O,IAEP,QACE,OAAO4O,IoBtEXhT,KnBSkB,WAAoD,IAAnDgT,EAAkD,uDAA3C5O,GAAc6O,EAA6B,uCACrE,OAAOA,EAAOrO,MACZ,KAAKpH,GAAQwJ,aACX,OAAO,2BACFgM,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZpF,QAAS6T,EAAO7T,UAEpB,KAAK5B,GAAQsJ,aACX,OAAO,2BACFkM,GADL,IAEExO,YAAY,EACZD,UAAU,EACVE,YAAY,IAEhB,KAAKjH,GAAQ0W,WACX,OAAO,2BACFlB,GADL,IAEEzO,UAAU,EACVE,YAAY,EACZD,YAAY,EACZpF,QAAS6T,EAAO7T,UAEpB,KAAK5B,GAAQqK,SACX,OAAO,2BACFmL,GADL,IAEExO,YAAY,EACZC,YAAY,EACZF,UAAU,EACVnF,QAAS,GACTd,KAAM2U,EAAO3U,OAEjB,KAAKd,GAAQmK,YACX,IAAMkM,EAAgBb,EAAM1U,MAAQ,GAC9BwV,EAAeb,EAAO3U,MAAQ,GAC9ByV,EAAeF,EAAcnU,QAAO,SAAAsU,GACxC,OAAOA,EAAEpS,QAAUkS,EAAa,GAAGlS,UAErC,OAAO,2BACFoR,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZpF,QAAS6T,EAAO7T,QAChBd,KAAK,GAAD,oBACCyV,GADD,aAECD,MAGT,QACE,OAAOd,ImB5DXrT,YlBMyB,WAAkE,IAAjEqT,EAAgE,uDAAzD5O,GAAc6O,EAA2C,uCAC1F,OAAOA,EAAOrO,MACZ,KAAKpH,GAAQyK,oBACX,OAAO,2BACF+K,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZpF,QAAS6T,EAAO7T,UAEpB,KAAK5B,GAAQuK,oBACX,OAAO,2BACFiL,GADL,IAEExO,YAAY,EACZD,UAAU,EACVE,YAAY,IAEhB,KAAKjH,GAAQ2K,kBACX,OAAO,2BACF6K,GADL,IAEEzO,UAAU,EACVE,YAAY,EACZD,YAAY,EACZpF,QAAS6T,EAAO7T,UAEpB,KAAK5B,GAAQoL,gBACX,OAAO,2BACFoK,GADL,IAEExO,YAAY,EACZC,YAAY,EACZF,UAAU,EACVnF,QAAS,GACTd,KAAM2U,EAAO3U,OAEjB,KAAKd,GAAQkL,mBACX,IAAMmL,EAAgBb,EAAM1U,MAAQ,GAC9BwV,EAAeb,EAAO3U,MAAQ,GAC9ByV,EAAeF,EAAcnU,QAAO,SAAAsU,GACxC,OAAOA,EAAEvL,eAAiBqL,EAAa,GAAGrL,iBAE5C,OAAO,2BACFuK,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZpF,QAAS6T,EAAO7T,QAChBd,KAAK,GAAD,oBACCyV,GADD,aAECD,MAGT,QACE,OAAOd,IkBzDXxJ,OjBkBoB,WAAyD,IAAxDwJ,EAAuD,uDAA/C5O,GAAc6O,EAAiC,uCAC5E,OAAQA,EAAOrO,MACb,KAAKpH,GAAQsL,eACX,OAAO,2BACFkK,GADL,IAEExO,YAAY,EACZD,UAAU,EACVE,YAAW,EACXrF,QAAS,KAEb,KAAK5B,GAAQ2W,eACX,OAAO,2BACFnB,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZpF,QAAS6T,EAAO7T,UAEpB,KAAK5B,GAAQwL,aACX,OAAO,2BACFgK,GADL,IAEEzO,UAAU,EACVC,YAAY,EACZC,YAAY,EACZrF,QAAS6T,EAAO7T,QAChBd,KAAM,KAEV,KAAKd,GAAQ0L,WACX,OAAO,2BACF8J,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZpF,QAAS6T,EAAO7T,QAChBd,KAAM2U,EAAO3U,OAEjB,KAAKd,GAAQ4L,sBACX,IAAMyK,EAAgBb,EAAM1U,MAAQ,GAC9BwV,EAAeb,EAAO3U,MAAQ,GAC9ByV,EAAeF,EAAcnU,QAAO,SAAAsU,GACxC,OAAOA,EAAEnK,UAAYiK,EAAa,GAAGjK,YAEvC,OAAO,2BACFmJ,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZpF,QAAS6T,EAAO7T,QAChBd,KAAK,GAAD,oBACCyV,GADD,aAECD,MAGT,KAAKtW,GAAQ8L,sBACX,IAAM8K,EAAWpB,EAAM1U,MAAQ,GACzB+V,EAAWpB,EAAO3U,MAAQ,GAC1BgW,EAAWF,EAAS1U,QAAO,SAAAsU,GAC/B,OAAOA,EAAEnK,UAAYwK,EAAS,GAAGxK,YAEnC,OAAO,2BACFmJ,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZpF,QAAS6T,EAAO7T,QAChBd,KAAK,aACAgW,KAGT,KAAK9W,GAAQ+W,eACX,OAAO,2BACFvB,GACA5O,IAEP,QACE,OAAO4O,IiB5FX5R,QhB4CqB,WAA2D,IAAD,IAAzD4R,EAAyD,uDAAjD5O,GAAc6O,EAAmC,uCAC/E,OAAQA,EAAOrO,MACb,KAAKpH,GAAQuM,gBACX,OAAO,2BACFiJ,GADL,IAEExO,YAAY,EACZD,UAAU,EACVE,YAAY,IAEhB,KAAKjH,GAAQyM,gBACX,OAAO,2BACF+I,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZpF,QAAS6T,EAAO7T,UAEpB,KAAK5B,GAAQ2M,cACX,OAAO,2BACF6I,GADL,IAEEzO,UAAU,EACVE,YAAY,EACZD,YAAY,EACZpF,QAAS6T,EAAO7T,UAEpB,KAAK5B,GAAQ8M,YACX,OAAO,2BACF0I,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZlG,KAAM2U,EAAO3U,KACb+L,iBAAkB4I,EAAO5I,mBAE7B,KAAK7M,GAAQoN,qBACT,OAAO,2BACFoI,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZlG,KAAI,UAAE0U,EAAM1U,YAAR,aAAE,EAAYkW,OAAOvB,EAAO3U,MAAQ,IACxC+L,iBAAkB4I,EAAO5I,mBAE/B,KAAK7M,GAAQ0O,mBACX,OAAO,2BACF8G,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZwG,WAAYiI,EAAOjI,aAEvB,KAAKxN,GAAQkN,uBACX,IAAM0J,EAAWpB,EAAM1U,MAAQ,GACzB+V,EAAWpB,EAAO3U,MAAQ,GAC1BgW,EAAWF,EAAS1U,QAAO,SAAAsU,GAC/B,OAAOA,EAAElJ,WAAauJ,EAAS,GAAGvJ,aAEpC,MAAO,CACLrG,YAAY,EACZF,UAAU,EACVC,YAAY,EACZlG,KAAK,aACAgW,IAGT,KAAK9W,GAAQuN,sBACX,MAAO,CACLtG,YAAY,EACZF,UAAU,EACVC,YAAY,EACZpF,QAAS6T,EAAO7T,QAChBd,KAAI,UAAE0U,EAAM1U,YAAR,aAAE,EAAY8U,KAAI,SAAChS,GAAa,IAAD,EACjC,OAAGA,EAAQ0J,UAAUtK,cAAlB,UAAiCyS,EAAOjI,kBAAxC,aAAiC,EAAmBF,UAAUtK,YACxD,2BAAIY,GAAX,IAAoBiB,SAAU4Q,EAAOjI,WAAW3I,SAAUE,OAAQ0Q,EAAOjI,WAAWzI,SAE/EnB,MAGb,KAAK5D,GAAQgN,oBACX,OAAO,2BACFwI,GACA5O,IAEP,QACE,OAAO4O,IgB/HXyB,afV0B,WAAoE,IAAnEzB,EAAkE,uDAA3D5O,GAAc6O,EAA6C,uCAC7F,OAAOA,EAAOrO,MACZ,KAAKpH,GAAQkX,sBACX,OAAO,2BACF1B,GADL,IAEExO,YAAY,EACZD,UAAU,EACVE,YAAW,EACXrF,QAAS,KAEb,KAAK5B,GAAQmX,oBACX,OAAO,2BACF3B,GADL,IAEEzO,UAAU,EACVC,YAAY,EACZC,YAAY,EACZrF,QAAS6T,EAAO7T,UAEpB,KAAK5B,GAAQoX,kBACX,OAAO,2BACF5B,GADL,IAEEzO,UAAU,EACVC,YAAY,EACZC,YAAY,EACZrF,QAAS6T,EAAO7T,QAChBd,KAAO2U,EAAO3U,OAElB,QACE,OAAO0U,IejBX5F,KbyDkB,WAAqD,IAAD,IAAnD4F,EAAmD,uDAA3C5O,GAAc6O,EAA6B,uCACtE,OAAQA,EAAOrO,MACb,KAAKpH,GAAQoP,aACX,OAAO,2BACFoG,GADL,IAEExO,YAAY,EACZD,UAAU,EACVE,YAAY,EACZiI,iBAAiB,EACjBtN,QAAS,KAEb,KAAK5B,GAAQqX,aACX,OAAO,2BACF7B,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZkI,iBAAiB,EACjBtN,QAAS6T,EAAO7T,UAEpB,KAAK5B,GAAQsP,WACX,OAAO,2BACFkG,GADL,IAEEzO,UAAU,EACVC,YAAY,EACZC,YAAY,EACZiI,iBAAiB,EACjBtN,QAAS6T,EAAO7T,UAEpB,KAAK5B,GAAQsX,SAUb,KAAKtX,GAAQuX,gBACX,OAAO,2BACF/B,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZkI,iBAAiB,EACjBtN,QAAS6T,EAAO7T,QAChBd,KAAM2U,EAAO3U,OAEjB,KAAKd,GAAQwP,oBACX,IAAM6G,EAAgBb,EAAM1U,MAAQ,GAChC0W,EAAK,GACLC,GAAa,EAkBjB,OAjBIhC,EAAO3U,MAAiC,IAAzBuV,EAAcvR,OAC/B0S,EAAE,aAAO/B,EAAO3U,OAEhB0W,EAAKnB,EAAcT,KAAI,SAAChS,GACtB,OAAI6R,EAAO3U,MAAQ8C,EAAQ6M,SAAWgF,EAAO3U,KAAK,GAAG2P,QACnD7M,EAAQqM,gBAAkBwF,EAAO3U,KAAK,GAAGmP,gBACzCrM,EAAQmM,WAAa0F,EAAO3U,KAAK,GAAGiP,WACpCnM,EAAQ6M,OAASgF,EAAO3U,KAAK,GAAG2P,OAChCgH,GAAa,EACN7T,GAEFA,KAEL6T,GAAchC,EAAO3U,OACvB0W,EAAE,uBAAOA,GAAP,aAAc/B,EAAO3U,SAGpB,2BACF0U,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZkI,iBAAiB,EACjBtN,QAAS6T,EAAO7T,QAChBd,KAAM0W,IAEV,KAAKxX,GAAQkQ,uBACX,IAAMwH,EAAkBlC,EAAM1U,MAAQ,GAClC6W,EAAO,GACPC,GAAe,EAmBnB,OAlBInC,EAAO3U,MAAmC,IAA3B4W,EAAgB5S,OACjC6S,EAAI,aAAOlC,EAAO3U,OAElB6W,EAAOD,EAAgB9B,KAAI,SAAChS,GAC1B,OAAI6R,EAAO3U,MAAQ8C,EAAQ6M,SAAWgF,EAAO3U,KAAK,GAAG2P,QACnD7M,EAAQqM,iBAAmB5N,OAAOoT,EAAO3U,KAAK,GAAGmP,iBAAmB5N,OAAOuB,EAAQqM,kBAAkBjN,WACrGY,EAAQmM,YAAe1N,OAAOuB,EAAQqM,iBAAoB5N,OAAOoT,EAAO3U,KAAK,GAAGkP,eAAehN,WAC/FY,EAAQ6M,OAASgF,EAAO3U,KAAK,GAAG2P,OAChCmH,GAAe,EACRhU,GAEFA,KAELgU,GAAgBnC,EAAO3U,OACzB6W,EAAI,uBAAOA,GAAP,aAAgBlC,EAAO3U,SAG/BM,aAAayW,QAAQ,0BAA2BxJ,KAAKC,UAAUqJ,IACxD,2BACFnC,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZkI,iBAAiB,EACjBtN,QAAS6T,EAAO7T,QAChBd,KAAM6W,IAEV,KAAK3X,GAAQ+Q,iBACX,OAAO,2BACFyE,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZkI,iBAAiB,EACjBtN,QAAS6T,EAAO7T,QAChBd,KAAM2U,EAAO3U,OAEjB,KAAKd,GAAQiR,+BACX,IAAM9H,EAAG,UAAGqM,EAAM1U,YAAT,aAAG,EAAYoB,QAAO,gBAAGuO,EAAH,EAAGA,OAAH,OAAgBgF,EAAO3U,MAAQ2P,IAAWgF,EAAO3U,KAAK,GAAG2P,UAExF,OADArP,aAAayW,QAAQ,0BAA2BxJ,KAAKC,UAAUnF,IACxD,2BACFqM,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZkI,iBAAiB,EACjBtN,QAAS6T,EAAO7T,QAChBd,KAAMqI,IAEV,KAAKnJ,GAAQ0P,oBACX,OAAO,2BACF8F,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZkI,iBAAiB,EACjBtN,QAAS6T,EAAO7T,QAChBd,KAAI,UAAE0U,EAAM1U,YAAR,aAAE,EAAYoB,QAAO,gBAAGuO,EAAH,EAAGA,OAAH,OAAgBgF,EAAO3U,MAAQ2P,IAAWgF,EAAO3U,KAAK,GAAG2P,YAEtF,KAAKzQ,GAAQ8X,aACX,OAAO,2BACFtC,GACA5O,IAEP,KAAK5G,GAAQ+X,0BACX,OAAO,2BACFvC,GADL,IAEEzO,UAAU,EACVC,YAAY,EACZC,YAAY,EACZiI,iBAAiB,EACjBtN,QAAS6T,EAAO7T,UAEpB,KAAK5B,GAAQgY,mBACX,OAAO,2BACFxC,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZkI,iBAAiB,IAErB,QACE,OAAOsG,Ia7NXyC,SZcsB,WAA8D,IAA7DzC,EAA4D,uDAApD5O,GAAc6O,EAAsC,uCACnF,OAAOA,EAAOrO,MACZ,KAAKpH,GAAQsR,iBACX,kCACKkE,GADL,IAEExO,YAAY,EACZD,UAAU,EACVE,YAAW,EACXiK,oBAAoB,EACpBC,eAAe,EACfvP,QAAS,KAEb,KAAK5B,GAAQwR,uBACX,kCACKgE,GADL,IAEExO,YAAY,EACZD,UAAU,EACVE,YAAW,EACXiK,oBAAoB,EACpBC,eAAe,EACfC,wBAAwB,EACxBxP,QAAS6T,EAAO7T,QAChBd,KAAM2U,EAAO3U,OAEjB,KAAKd,GAAQgS,cACX,kCACKwD,GADL,IAEExO,YAAY,EACZD,UAAU,EACVE,YAAW,EACXiK,oBAAoB,EACpBC,eAAe,EACfvP,QAAS6T,EAAO7T,UAEpB,KAAK5B,GAAQ0R,eACX,OAAO,2BACF8D,GADL,IAEEzO,UAAU,EACVC,YAAY,EACZC,YAAY,EACZiK,oBAAoB,EACpBC,eAAe,EACfC,wBAAwB,EACxBxP,QAAS6T,EAAO7T,UAEpB,KAAK5B,GAAQ4R,iBACX,OAAO,uCACF4D,GACA5O,IAFL,IAGEsK,oBAAoB,EACpBC,eAAe,EACfC,wBAAwB,IAE5B,KAAKpR,GAAQ8R,gBACX,OAAO,2BACF0D,GADL,IAEEzO,UAAU,EACVC,YAAY,EACZC,YAAY,EACZiK,oBAAoB,EACpBC,eAAe,EACfvP,QAAS6T,EAAO7T,UAEpB,QACE,OAAO4T,IY7EXnS,aXzB0B,WAAoE,IAAnEmS,EAAkE,uDAA3D5O,GAAc6O,EAA6C,uCAC7F,OAAOA,EAAOrO,MACZ,KAAKpH,GAAQkY,sBACX,kCACK1C,GADL,IAEExO,YAAY,EACZD,UAAU,EACVE,YAAY,IAEhB,KAAKjH,GAAQuS,kBACX,kCACKiD,GADL,IAEExO,YAAY,EACZD,UAAU,EACVE,YAAY,EACZnG,KAAM2U,EAAO3U,OAEjB,QACE,OAAO0U,IWQX2C,eVsB4B,WAAuE,IAAD,IAArE3C,EAAqE,uDAA9D5O,GAAc6O,EAAgD,uCAClG,OAAOA,EAAOrO,MACZ,KAAKpH,GAAQyS,cACX,OAAO,2BACF+C,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZ2L,gBAAgB,EAChBW,gBAAgB,IAEpB,KAAKtT,GAAQ4S,cACX,OAAO,2BACF4C,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZsM,gBAAgB,EAChB1R,QAAS6T,EAAO7T,QAChBd,KAAI,UAAE0U,EAAM1U,YAAR,aAAE,EAAYkW,OAAOvB,EAAO3U,MAAQ,IACxC6R,eAAgB8C,EAAO9C,iBAE3B,KAAK3S,GAAQ8S,oBACb,OAAO,2BACF0C,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZsM,gBAAgB,EAChB1R,QAAS6T,EAAO7T,QAChBd,KAAM2U,EAAO3U,OAEf,KAAKd,GAAQoY,YACX,kCACK5C,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZ2L,gBAAgB,EAChBW,gBAAgB,EAChB9F,WAAYiI,EAAOjI,aAEvB,KAAKxN,GAAQgT,YACX,OAAO,2BACFwC,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZpF,QAAS6T,EAAO7T,QAChB+Q,gBAAgB,EAChBW,gBAAgB,IAEpB,KAAKtT,GAAQqT,qBACX,OAAO,2BACFmC,GADL,IAEElC,gBAAgB,IAEpB,KAAKtT,GAAQmT,gBACX,OAAO,2BACFqC,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZsM,gBAAgB,EAChB1R,QAAS6T,EAAO7T,QAChBd,KAAI,UAAE0U,EAAM1U,YAAR,aAAE,EAAY8U,KAAI,SAACyC,GACrB,IAAMC,EAAeD,EAAYE,WAAW3C,KAAI,SAAC4C,GAAW,IAAD,EACzD,OAAGA,EAAMC,cAAczV,cAApB,UAAmCyS,EAAOjI,kBAA1C,aAAmC,EAAmB4E,QAAQpP,YACxD,2BAAIwV,GAAX,IAAkBE,gBAAgB,2BAAKF,EAAME,iBAAZ,IAA6BC,aAAc,kBAErEH,KAGX,OAAO,2BACFH,GADL,IAEEE,WAAaD,SAIrB,QACE,OAAO9C,IUrGXrB,QTUqB,WAA2D,IAA1DqB,EAAyD,uDAAjD5O,GAAc6O,EAAmC,uCAC/E,OAAQA,EAAOrO,MACb,KAAKpH,GAAQyT,gBACX,OAAO,2BACF+B,GADL,IAEExO,YAAY,EACZD,UAAU,EACVE,YAAW,EACXrF,QAAS,KAEb,KAAK5B,GAAQ4Y,gBACX,OAAO,2BACFpD,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZpF,QAAS6T,EAAO7T,UAEpB,KAAK5B,GAAQ2T,cACX,OAAO,2BACF6B,GADL,IAEEzO,UAAU,EACVC,YAAY,EACZC,YAAY,EACZrF,QAAS6T,EAAO7T,UAEpB,KAAK5B,GAAQiU,YACX,OAAO,2BACFuB,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZpF,QAAS6T,EAAO7T,QAChBd,KAAM2U,EAAO3U,OAEjB,KAAKd,GAAQ6T,uBACX,IAAMwC,EAAgBb,EAAM1U,MAAQ,GAC9BwV,EAAeb,EAAO3U,MAAQ,GAC9ByV,EAAeF,EAAcnU,QAAO,SAAAsU,GACxC,OAAOA,EAAE/B,WAAa6B,EAAa,GAAG7B,aAExC,OAAO,2BACFe,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZpF,QAAS6T,EAAO7T,QAChBd,KAAK,GAAD,oBACCyV,GADD,aAECD,MAGT,KAAKtW,GAAQ+T,uBACX,IAAM6C,EAAWpB,EAAM1U,MAAQ,GACzB+V,EAAWpB,EAAO3U,MAAQ,GAC1BgW,EAAWF,EAAS1U,QAAO,SAAAsU,GAC/B,OAAOA,EAAE/B,WAAaoC,EAAS,GAAGpC,aAEpC,OAAO,2BACFe,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZpF,QAAS6T,EAAO7T,QAChBd,KAAK,aACAgW,KAGT,KAAK9W,GAAQ6Y,gBACX,OAAO,2BACFrD,GACA5O,IAEP,QACE,OAAO4O,ISnFXsD,SRZsB,WAA4D,IAA3DtD,EAA0D,uDAAnD5O,GAAc6O,EAAqC,uCACjF,OAAOA,EAAOrO,MACZ,KAAKpH,GAAQ+Y,iBACX,OAAO,2BACFvD,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZlG,KAAM2U,EAAO3U,OAEjB,KAAKd,GAAQ2U,iBACX,OAAO,2BACFa,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZpF,QAAS6T,EAAO7T,QAChBd,KAAM2U,EAAO3U,OAEjB,KAAKd,GAAQgZ,eACX,OAAO,2BACFxD,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZpF,QAAS6T,EAAO7T,UAEpB,QACE,OAAO4T,IQfXyD,ePR4B,WAAwE,IAAvEzD,EAAsE,uDAA/D5O,GAAc6O,EAAiD,uCACnG,OAAOA,EAAOrO,MACZ,KAAKpH,GAAQkZ,wBACX,OAAO,2BACF1D,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZpF,QAAS6T,EAAO7T,UAEpB,KAAK5B,GAAQmZ,wBACX,OAAO,2BACF3D,GADL,IAEExO,YAAY,EACZD,UAAU,EACVE,YAAY,IAEhB,KAAKjH,GAAQoZ,sBACX,OAAO,2BACF5D,GADL,IAEEzO,UAAU,EACVE,YAAY,EACZD,YAAY,EACZpF,QAAS6T,EAAO7T,UAEpB,KAAK5B,GAAQqZ,oBACX,OAAO,2BACF7D,GADL,IAEExO,YAAY,EACZC,YAAY,EACZF,UAAU,EACVnF,QAAS,GACTd,KAAM2U,EAAO3U,OAEjB,QACE,OAAO0U,IO1BX8D,gBNT6B,WAA0E,IAAzE9D,EAAwE,uDAAjE5O,GAAc6O,EAAmD,uCACtG,OAAOA,EAAOrO,MACZ,KAAKpH,GAAQuZ,yBACX,OAAO,2BACF/D,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZpF,QAAS6T,EAAO7T,UAEpB,KAAK5B,GAAQwZ,yBACX,OAAO,2BACFhE,GADL,IAEExO,YAAY,EACZD,UAAU,EACVE,YAAY,IAEhB,KAAKjH,GAAQyZ,uBACX,OAAO,2BACFjE,GADL,IAEEzO,UAAU,EACVE,YAAY,EACZD,YAAY,EACZpF,QAAS6T,EAAO7T,UAEpB,KAAK5B,GAAQ0Z,qBACX,OAAO,2BACFlE,GADL,IAEExO,YAAY,EACZC,YAAY,EACZF,UAAU,EACVnF,QAAS,GACTd,KAAM2U,EAAO3U,OAEjB,QACE,OAAO0U,IMzBXmE,cLV2B,WAAsE,IAArEnE,EAAoE,uDAA7D5O,GAAc6O,EAA+C,uCAChG,OAAOA,EAAOrO,MACZ,KAAKpH,GAAQ4Z,uBACX,OAAO,2BACFpE,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZpF,QAAS6T,EAAO7T,UAEpB,KAAK5B,GAAQ6Z,uBACX,OAAO,2BACFrE,GADL,IAEExO,YAAY,EACZD,UAAU,EACVE,YAAY,IAEhB,KAAKjH,GAAQ8Z,qBACX,OAAO,2BACFtE,GADL,IAEEzO,UAAU,EACVE,YAAY,EACZD,YAAY,EACZpF,QAAS6T,EAAO7T,UAEpB,KAAK5B,GAAQ+Z,mBACX,OAAO,2BACFvE,GADL,IAEExO,YAAY,EACZC,YAAY,EACZF,UAAU,EACVnF,QAAS,GACTd,KAAM2U,EAAO3U,OAEjB,QACE,OAAO0U,IKxBXwE,OJnBoB,WAAwD,IAAvDxE,EAAsD,uDAA/C5O,GAAc6O,EAAiC,uCAC3E,OAAOA,EAAOrO,MACZ,KAAKpH,GAAQia,eACX,OAAO,2BACFzE,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZlG,KAAM2U,EAAO3U,OAEjB,KAAKd,GAAQ6U,WACX,OAAO,2BACFW,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZpF,QAAS6T,EAAO7T,QAChBd,KAAM2U,EAAO3U,OAEjB,KAAKd,GAAQka,aACX,OAAO,2BACF1E,GADL,IAEEvO,YAAY,EACZF,UAAU,EACVC,YAAY,EACZpF,QAAS6T,EAAO7T,UAEpB,QACE,OAAO4T,IIRX2E,kBH9C+B,WAA+E,IAAD,EAA7E3E,EAA6E,uDAArE5O,GAAc6O,EAAuD,uCAC7G,OAAOA,EAAOrO,MACZ,KAAKpH,GAAQgV,mBACX,kCACKQ,GADL,IAEE1U,KAAK,CACHgU,gBAAgB,UAAAW,EAAO3U,YAAP,eAAagU,iBAAkB,MAGrD,QACE,OAAOU,IGqCX4E,mBFdgC,WAA+E,IAA9E5E,EAA6E,uDAAtE5O,GAAcyT,EAAwD,uCAC9G,OAAOA,EAAQjT,MACb,KAAKpH,GAAQsV,gBACX,OAAO,2BACFE,GADL,IAEE1U,KAAI,2BACC0U,EAAM1U,MADP,kBAEDuZ,EAAQzU,IAAMyU,EAAQvZ,SAG7B,KAAKd,GAAQsa,eACX,OAAO,2BACF9E,GADL,IAEE1U,KAAOuZ,EAAQvZ,OAEnB,KAAKd,GAAQoV,eACX,MAAO,CACLpO,YAAY,EACZC,YAAY,EACZnG,KAAM,CACJ+C,cAAc,GACdoR,SAAS,GACT7Q,OAAO,GACP0K,WAAW,GACXC,SAAS,GACTmG,gBAAiB,GACjBlG,WAAW,KAGjB,QACE,OAAOwG,IEfX+E,cDlB2B,WAAuE,IAAtE/E,EAAqE,uDAA7D5O,GAAc6O,EAA+C,uCACjG,OAAQA,EAAOrO,MACb,KAAKpH,GAAQwa,wBACX,OAAO,2BACFhF,GADL,IAEExO,YAAY,EACZD,UAAU,EACVE,YAAY,IAEhB,KAAKjH,GAAQya,sBACX,OAAO,2BACFjF,GADL,IAEEzO,UAAU,EACVC,YAAY,EACZC,YAAY,EACZrF,QAAS6T,EAAO7T,UAEpB,KAAK5B,GAAQ0a,oBACX,OAAO,2BACFlF,GADL,IAEExO,YAAY,EACZD,UAAU,EACVE,YAAY,EACZnG,KAAM2U,EAAO3U,OAEjB,KAAKd,GAAQ2a,4BACX,kCACKnF,GACA5O,IAEP,QACE,OAAO4O,KCoBPoF,GAAmBzZ,OAAO0Z,sCAAwCC,IAElEC,GAAQC,YACZC,YAAgB1F,IAChBqF,GAAiBM,YAAgBC,O,QCvG7BC,GAAyD,SAACC,GAAkB,IAE9EtU,EAGEsU,EAHFtU,SACAE,EAEEoU,EAFFpU,WACArF,EACEyZ,EADFzZ,QAEF,OACE,oCAEEmF,GACA,yBAAKuU,UAAU,uBACb,0BAAMA,UAAU,kCAAhB,IAAmD1Z,EAAnD,MAIFqF,GACA,yBAAKqU,UAAU,uBACb,0BAAMA,UAAU,mCAAhB,IAAoD1Z,EAApD,Q,qGC0CN,WAAYyZ,GAA2B,IAAD,+BAClC,cAAMA,IAED7F,MAAQ,CACT+F,YAAY,GAJkB,E,iEAUZ,qBAAXpa,aACIqa,IAAXra,aACkBqa,IAAlBra,OAAOsa,OAEPC,KAAKC,eAGa,qBAAXxa,aACIqa,IAAXra,aACkBqa,IAAlBra,OAAOsa,QACPC,KAAKL,MAAMO,eAEXF,KAAKL,MAAMO,kB,kCAIP9a,EAAWuZ,GAAe,IAAD,EAEyBqB,KAAKL,MAAvDlY,EAFyB,EAEzBA,SAAU0Y,EAFe,EAEfA,QAAS3J,EAFM,EAENA,OAAQ4J,EAFF,EAEEA,mBAEnC,OAAOzB,EAAQ7B,MAAMlY,OAAO,CAC1Byb,eAAgB,CACd,CACE7J,OAAQ,CACN8J,cAAe7Y,IAEX0Y,GAAWA,EAAQ1Y,SACnB0Y,EAAQ1Y,SACR,OACJyG,MAAOsI,GAAUA,EAAOlP,cAI9BiZ,oBAAqB,CACnBC,oBAAqBJ,O,gCAKnBhb,EAAWuZ,GAAe,IAAD,OAC/B,OAAOA,EAAQ7B,MACV2D,UACAC,MAAK,SAACC,GACH,GAAI,EAAKhB,MAAMiB,UACX,OAAO,EAAKjB,MAAMiB,UAAUD,EAASvb,MAG5Cyb,OAAM,SAACC,GACJ,GAAI,EAAKnB,MAAMoB,WACX,OAAO,EAAKpB,MAAMoB,WAAWD,Q,+BAKpCE,GACJhB,KAAKL,MAAMsB,UACZjB,KAAKL,MAAMsB,SAASD,K,+BAId,IAAD,SASDhB,KAAKL,MAPLnJ,EAFC,EAEDA,OACAoK,EAHC,EAGDA,UACAM,EAJC,EAIDA,YACAC,EALC,EAKDA,mBACAC,EANC,EAMDA,UACAC,EAPC,EAODA,MACAJ,EARC,EAQDA,SAIJ,IAFuBjB,KAAKlG,MAApB+F,aAIe,qBAAXpa,aAA4Cqa,IAAlBra,OAAOsa,QAEzC,OAAO,KAGX,IAAMuB,EAAS7b,OAAOsa,OAAOwB,QAAQC,OAAO,QAAS,CACjDC,UACAC,eAGEC,EACFnL,IAAW0K,EACL,SAAC9b,EAAWuZ,GAAZ,OAA6B,EAAKuC,YAAY9b,EAAMuZ,IACpD,SAACvZ,EAAWuZ,GAAZ,OAA6BuC,GAAeA,EAAY9b,EAAMuZ,IAExE,OACI,kBAAC2C,EAAD,iBACQtB,KAAKL,MADb,CAEIuB,YAAaC,OAAqBrB,EAAY6B,EAC9CR,mBAAoBA,EACpBF,SACEA,EAAW,SAACD,GAAD,OAAeC,EAASD,IACnC,SAACA,GAAD,OAAe,EAAKC,SAASD,IAC/BI,UACIR,EACM,SAACxb,EAAWuZ,GAAZ,OAA6B,EAAKyC,UAAUhc,EAAMuZ,IAClD,SAACvZ,EAAWuZ,GAAZ,OAA6ByC,GAAaA,EAAUhc,EAAMuZ,IAEpE0C,MAAOA,O,qCAKK,IAAD,SACgBrB,KAAKL,MAAhCQ,EADW,EACXA,QAASD,EADE,EACFA,cACX0B,EAAwB,GAG/B,GAAGzB,EACF,cAA2BrW,OAAO+X,QAAQ1B,GAA1C,eAAoD,CAAC,IAAD,uBAAxCjW,EAAwC,KAAnCgE,EAAmC,KAC5CvF,EAAOuB,EAAI4X,MAAM,aAAa/X,KAAK,KAAKoQ,cAC9CyH,EAAYG,KAAZ,UAAoBpZ,EAApB,YAA4BuF,IAQ9B,IAAM8T,EAASvY,SAASC,cAAc,UACtCsY,EAAOtW,KAAO,kBACdsW,EAAOC,IAAP,wCAA8CL,EAAY7X,KAAK,MAC/DiY,EAAOE,OAAQ,EACfF,EAAOG,OAAS,WACZ,EAAKC,SAAS,CAAEvC,YAAY,IAExBK,GACAA,KAGR8B,EAAOK,QAAU,WACb,MAAM,IAAIC,MAAM,oCAGpB7Y,SAAS8Y,KAAKC,YAAYR,O,GA9MLP,IAAMgB,YAiDxBC,aAAe,CAClBrB,MAAO,GACPlB,QAAS,CACLwC,SAAU,KACVlb,SAAU,OAEd2Y,mBAAoB,iBC9C1B,IAAMwC,GAAiD,SAACjD,GAEtD,IAAMnS,EAAWqV,cACXC,EAAUC,cACVC,EAA0BC,iBAA0B,MACpDC,EAAiBD,iBAAuB,MACxC1G,EAAW4G,aAAY,SAACrJ,GAAD,OAAqBA,EAAMyC,YAClD6G,EAAWD,aAAY,SAACrJ,GAAD,OAAqBA,EAAMrO,QAClD4X,EAAaF,aAAuC,SAAArJ,GAAK,OAAIA,EAAMxJ,OAAOlL,MAAQ,MARjB,EASfke,mBAAS,iEATM,oBAShEC,EATgE,KAS1CC,EAT0C,OAU7BF,mBAAS,IAVoB,oBAUjDG,GAViD,aAWrBH,oBAAS,GAXY,oBAWhEI,EAXgE,KAW7CC,EAX6C,OAY3BL,oBAAS,GAZkB,oBAYhEM,EAZgE,KAYhDC,EAZgD,OAa3CP,oBAAS,GAbkC,oBAaxDQ,GAbwD,WAevEC,qBAAU,WACiB,WAAtBpE,EAAMqE,aAA4BzH,EAASnX,MAAQmX,EAASnX,KAAKsR,UAClE+M,EAAiBlH,EAASnX,KAAKsR,SAC/BjR,OAAOwe,cAAgB1H,EAASnX,KAAKsR,WAEvC,CAAC6F,EAASnX,OAEZ2e,qBAAU,WACoB,MAAzBpE,EAAMuE,iBACHze,OAAO0e,eACT1e,OAAO0e,aAAaC,eACb3e,OAAO0e,cAKhB1e,OAAO0e,aAAe1e,OAAOsa,OAAOwB,QAAQ,CAC1CL,YAAa,WAMH,IAAD,EALP,OAAIzb,OAAOwe,eAMT,UAAAjB,EAAwBqB,eAAxB,SAAiC9Z,QAC1B9E,OAAOwe,gBANVxe,OAAO6e,iBACTC,EAAkB,MAEb,IAMXtD,SAAU,SAAUH,GAClB0D,EAAY,UACZ/e,OAAOwe,cAAgB,IAEzB7C,UAAU,SAAShc,EAASuZ,GAE1B,OADA4F,EAAkB,KACX5F,EAAQ7B,MAAM2D,UAAUC,MAAK,SAASC,GAC3C8D,EAAqBrf,EAAKub,OAG9B+D,QAAQ,WAAD,4BAAE,WAAgB5J,GAAhB,SAAAvV,EAAA,6DACPE,OAAOwe,cAAgB,GACvBO,EAAY1J,EAAE6J,eACdJ,EAAkB,KAHX,SAID/W,EAAS+I,GAAeoJ,EAAMuE,eAAe5c,WAAYqY,EAAMiF,sBAAsBtd,WAAWqY,EAAMkF,YAAYxB,GAAcA,EAAW,IAAMA,EAAW,GAAG1S,WAJ9J,2CAAF,mDAAC,GAMRmU,QAAS,SAAS1f,GAChB2f,QAAQC,IAAI,SACZD,QAAQC,IAAI5f,MAGhBK,OAAO0e,aAAac,OAAO,+BAG7B,CAACtF,EAAMuE,eAAevE,EAAMiF,wBAE9Bb,qBAAU,WACLxH,EAAS9G,eAAuC,WAAtBkK,EAAMqE,cACjCve,OAAO6e,iBAAiB,EACxBd,EAAwBjH,EAASrW,SAAW,IAC5Cgf,YAAW,WACTzf,OAAO6e,iBAAkB,EACzBxB,EAAQqC,GAAG,GACXZ,EAAkB,OAClB,QAEJ,CAAChI,EAAS9G,gBAEZ,IAAM8O,EAAoB,SAACa,GAAgB,IAAD,EACxC,UAAApC,EAAwBqB,eAAxB,SAAiC9Z,SAG7Bia,EAAc,SAACa,GACnBN,QAAQC,IAAIK,GACG,SAAZA,GACDvB,GAAU,GACPre,OAAO6f,WAAa,KACrB7f,OAAO8f,SAAS,CACdC,IAAK,IACLC,SAAU,WAGd9F,EAAM+F,oBAAmB,KAGtBjgB,OAAO6f,WAAa,KACrB7f,OAAO8f,SAAS,EAAE,GAEpBL,YAAW,WACTpB,GAAU,GACZnE,EAAM+F,oBAAmB,KAEzB,MAEAlC,EAAwB,iEACxBG,GAAqB,GACrBE,GAAkB,IAItBE,qBAAU,WACLxH,EAAS/G,oBACVmO,GAAqB,GACrBE,GAAkB,GAClBL,EAAwBjH,EAASrW,SAAW,IAC5Cgf,YAAW,WACT1X,EAASyI,MACTsO,EAAkB,KAClBzB,EAAQf,KAAK,4BACZ,OACMxF,EAAS/G,oBAAsB+G,EAASlR,WACjDsY,GAAqB,GACrBE,GAAkB,GAClBL,EAAwBjH,EAASrW,SAAW,OAE9C,CAACqW,EAAS/G,mBAAmB+G,EAASlR,WACxC,IAAMoZ,EAAuB,SAACkB,EAAmBC,GAAyB,IAAD,kBfsDlDC,EepDrBrY,GfoDqBqY,EepDI,CACvBC,eAAgB,CACdH,YACAC,eAEFlP,QAASiJ,EAAMkF,YACfkB,UAAW3C,EAAShe,MAAQge,EAAShe,KAAK2gB,WAAa,GACvDhb,SAAU4U,EAAMqG,cAChBrV,SAAU0S,GAAcA,EAAW,IAAMA,EAAW,GAAG1S,SACvDsV,WAAYtG,EAAMsG,WAClBC,aAAa,UAAA9C,EAAShe,YAAT,eAAe+gB,gBAAiB,KAAhC,UAAsC/C,EAAShe,YAA/C,aAAsC,EAAeghB,gBAAiB,KAAtE,UACbhD,EAAShe,YADI,aACb,EAAeihB,kBAAmB,KADrB,UAC2BjD,EAAShe,YADpC,aAC2B,EAAekhB,MAAO,KADjD,UACuDlD,EAAShe,YADhE,aACuD,EAAe0U,OACnF,KAFa,UAEPsJ,EAAShe,YAFF,aAEP,EAAemhB,SAAU,KAFlB,UAEwBnD,EAAShe,YAFjC,aAEwB,EAAeohB,SACpDC,UAAU,UAAArD,EAAShe,YAAT,eAAeshB,WAAY,KAA3B,UAAiCtD,EAAShe,YAA1C,aAAiC,EAAeuhB,WfuCxC,uCAA+B,WAAOnZ,GAAP,iBAAAjI,EAAA,6DACrDiI,EAASmI,MAD4C,SAE9B5Q,EAAS,kBAAkB8gB,GAFG,QAE/ChgB,EAF+C,QAGtCC,SAAW3B,EAAekI,IAC/BoB,EAAM5H,EAAST,KACrBoI,EAAS2I,GAAe1I,EAAIvH,SAAW,MAGvCsH,EAASuI,GADGlQ,EACeK,SAAW,KARW,2CAA/B,yDenCtB,OACE,oCACE,yBAAKE,GAAG,4BACR,4BAAQwgB,IAAK5D,EAAyB5c,GAAG,kBAAkBygB,YAAU,sBAAsBnb,KAAK,UAAhG,SACA,yBAAKtF,GAAG,aAAa0gB,WAAS,2CAC5B,yBAAKlH,UAAU,0DAEZgE,GAAkBF,IAAwB,4BAAQ9D,UAAU,yBAAyBlU,KAAK,SAASqb,WAAS,SAE/G,yBAAKH,IAAK1D,EAAgBtD,UAAU,+BAClC,2BAAI2D,IAECK,IAAmBF,GAAqB,yBAAMsD,aAAW,SAG1DpD,IAAmBF,GACnB,oCACA,0BAAM9D,UAAU,6BAAhB,yBAAkE,yBAAMoH,aAAW,WAInFtD,GAAqB,0BAAM9D,UAAU,4BAAhB,uBCjL7BqH,GAAwD,SAACtH,GAAkB,IAE7EuH,EACEvH,EADFuH,iBAGI1Z,EAAWqV,cAL6D,EAM9CS,mBAAS,IANqC,oBAMvE6D,EANuE,KAM7DC,EAN6D,OAO1C9D,mBAAS,IAPiC,oBAOvE+D,EAPuE,KAO3DC,EAP2D,KAQxE/K,EAAW4G,aAAY,SAACrJ,GAAD,OAAqBA,EAAMyC,YAExDwH,qBAAU,WACR,GAAGmD,EAAiB,CAClB,IAAMK,EAAQC,aAAY,WACrBL,EAAW,GACZC,EAAYD,EAAW,KAEzB,KACF,OAAO,kBAAMM,aAAaF,QAI9B,IAAMG,EAAsB,WAC1Bla,EhBsNc,uCAAM,WAAOA,GAAP,iBAAAjI,EAAA,6DACtBiI,EAASmI,MADa,SAEC5Q,EAAQ,yBAFT,QAEhBc,EAFgB,QAGTC,SAAW3B,EAAekI,IAC/BoB,EAAM5H,EAAST,KACrBoI,EAASqI,GAAqBpI,EAAIrI,KAA0BqI,EAAIvH,SAAW,MAG3EsH,EAASuI,GADGlQ,EACeK,SAAW,KARlB,2CAAN,uDgBrNdkhB,EAAY,KAEd,OACE,6BAASxH,UAAU,gBACjB,yBAAKA,UAAU,yDAAyD+H,UAAQ,QAC9E,yBAAK/H,UAAU,mBACb,yBAAKA,UAAU,iBAAf,aAEEuH,EAAW,IAAM5K,EAASlR,UAC1B,yBAAKuU,UAAU,6CAAf,YAAqEuH,EAArE,QAGJ,yBAAKvH,UAAU,iBACb,2BACEA,UAAU,WACVlU,KAAK,OACLwC,MAAOmZ,EACPO,SAAU,SAACC,GAAOP,EAAcO,EAAEC,cAAc5Z,OAAQyR,EAAM2H,cAAcO,EAAEC,cAAc5Z,UAE9E,IAAbiZ,IAAmB5K,EAASlR,UAC5B,uBACDuU,UAAU,2DACV8E,QAAS,kBAAKgD,MAFb,gBAOLnL,EAASlR,UACX,yBAAKuU,UAAU,6CAA6CrD,EAASrW,SAGnEqW,EAAS7G,wBACT,yBAAKkK,UAAU,uBACf,0BAAMA,UAAU,8EAAhB,IAA+FrD,EAASrW,QAAxG,QCtDF6hB,GAAmD,SAACpI,GACxD,IAAMmD,EAAUC,cACVvV,EAAWqV,cACXlb,EAAewb,aAAoC,SAAArJ,GAAK,OAAIA,EAAMnS,gBAClEyb,EAAWD,aAAY,SAACrJ,GAAD,OAAqBA,EAAMrO,QAClDyI,EAAOiP,aAA4B,SAAArJ,GAAK,OAAIA,EAAM5F,QAoCxD,OACE,iCACE,yBAAK8T,YAAU,gBACb,yBAAKpI,UAAU,gDAAgD+H,UAAQ,QACrE,wBAAI/H,UAAU,iDAAd,oBACA,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,cAAc3Z,KAAK,IAAIgiB,iBAAe,WAAWC,uBAAqB,SACnF,uBAAGtI,UAAU,cAAc3Z,KAAK,IAAIgiB,iBAAe,OAAOE,mBAAiB,WAG/E,yBAAKvI,UAAU,6DACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,2EAEXD,EAAMyI,YAAYlO,KAAI,SAAChS,EAASqK,GAAW,IAAD,MACxC,OACE,6BAASrI,IAAKqI,EAAOqN,UAAU,mBAC7B,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,yBACb,uBAAGA,UAAU,eAAe8E,QAAS,WAAOjf,OAAO8f,SAAS,CAACC,IAAI,EAAGC,SAAS,WAAY3C,EAAQf,KAAK,mBAAqB7Z,EAAQ0J,aACjI,4BAAQgO,UAAU,qBAAoB,yBAAKqC,IAAKxd,EAAkByD,EAAQmgB,WAAYC,IAAKpgB,EAAQqgB,iBAIzG,yBAAK3I,UAAU,wBACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,wCAAwC1X,EAAQsG,qBAC/D,wBAAIoR,UAAU,yBAAwB,uBAAGA,UAAU,kBAAkB8E,QAAS,kBAAM5B,EAAQf,KAAK,mBAAqB7Z,EAAQ0J,aAAa1J,EAAQS,QAErJ,yBAAKiX,UAAU,wBACb,yBAAKA,UAAU,2BAEX,UAAAwD,EAAShe,YAAT,eAAe8B,WAAwC,OAA5B,UAAAkc,EAAShe,YAAT,eAAe8B,WAC1C,yBAAK0Y,UAAU,gBAAgBpY,EAAgBG,EAAavC,MAAQ,MAApE,IAA4EsC,EAAWC,EAAavC,MAAQ,KAAM8C,IAEpH,yBAAK0X,UAAU,yBACZpY,EAAgBG,EAAavC,MAAQ,MADxC,IACgD6B,GAAsB,UAAAmc,EAAShe,YAAT,eAAe8B,WAAY,IAAKQ,EAAWC,EAAavC,MAAQ,KAAM8C,MAG9I,yBAAK0X,UAAU,uBACb,4BAAQA,UAAU,kFAEd1L,EAAK5I,YAAc,0BAAM0b,aAAW,UAGnC9S,EAAK5I,YACJ,oCACE,0BAAMsU,UAAU,kCAAkC4I,UAAQ,OAAO9D,QAAS,kBAlF5F,SAACxc,GAAyB,IAAD,EACzC,GAAG,UAACkb,EAAShe,YAAV,aAAC,EAAeqjB,OAeZ,CACL,IAAMC,EAAW,CACfhU,gBAAiBxM,EAAQwM,gBACzBH,gBAAiB,IACjBM,aAAoC,OAAtBlN,EAAavC,KAAgB,EAAI,EAC/C2P,OAAQ,IACRE,aAAc/M,EAAQqgB,WACtBrT,iBAAkBhN,EAAQmgB,WAC1Bvd,YAAa5C,EAAQS,KACrBwM,YAAajN,EAAQsG,oBACrB8F,aAAc,IACd1C,UAAW1J,EAAQ0J,WAGrBpE,EAASyG,GAAcyU,GAAU,QA7BT,CACxB,IAAMA,EAAW,CACfhU,gBAAiBxM,EAAQwM,gBACzBH,gBAAiB,IACjBM,aAAoC,OAAtBlN,EAAavC,KAAgB,EAAI,EAC/C2P,OAAQ7M,EAAQwM,gBAChBO,aAAc/M,EAAQqgB,WACtBrT,iBAAkBhN,EAAQmgB,WAC1Bvd,YAAa5C,EAAQS,KACrBwM,YAAajN,EAAQsG,oBACrB8F,aAAc5M,EAAWC,EAAavC,MAAQ,KAAM8C,GACpD0J,UAAW1J,EAAQ0J,WAGrBpE,EAASyG,GAAcyU,GAAU,KAmE+EC,CAAUzgB,MAC1F,0BAAM0X,UAAU,mCAAhB,0BAgB1B,wBAAIA,UAAU,0ECjHpBgJ,GAAwD,SAACjJ,GAC7D,OACE,6BAASzV,IAAKyV,EAAMkJ,SAAUjJ,UAAU,mBACtC,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,yBACb,uBAAGA,UAAU,gBACX,4BAAQA,UAAU,qBAChB,yBAAKA,UAAU,WACb,yBAAKA,UAAU,oBAMzB,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,wCACb,yBAAKA,UAAU,WACb,6BACE,yBAAKA,UAAU,UACb,yBAAKA,UAAU,aACf,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,aACf,yBAAKA,UAAU,mBAEf,yBAAKA,UAAU,sBAGnB,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qBCVzBkJ,GAAcC,aAnBkC,WACpD,IAAMjG,EAAUC,cACVvV,EAAWqV,cAcjB,OAbAkB,qBAAU,WAER,IAAMiF,EAAWlG,EAAQmG,QAAO,YACsB,IAAjDxjB,OAAOO,SAASkjB,SAASniB,QAAQ,YAClCyG,EAASiM,MAEXhU,OAAO8f,SAAS,EAAG,MAErB,OAAO,WACLyD,OAED,IAEK,QClBJG,GAAqC,WACzC,IAAMrG,EAAUC,cAChB,OACE,8BACE,6BAASnD,UAAU,+BACjB,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,oCAAoC+H,UAAQ,QACzD,yBAAK/H,UAAU,kBACb,wBAAIA,UAAU,iDACZ,4BAAI,uBAAG8E,QAAS,kBAAI5B,EAAQf,KAAK,OAA7B,SACJ,4BAAI,4CAEN,wBAAInC,UAAU,+CAAd,aAEF,6BACE,yBAAKA,UAAU,iBAAiB+H,UAAQ,QACtC,6BAAS/H,UAAU,kCACjB,6BAASA,UAAU,qFACjB,yBAAKA,UAAU,wDAAwD+H,UAAQ,QAC7E,iCACE,qCACA,wBAAI/H,UAAU,WAOZ,4BACE,6BAAK,0BAAMA,UAAU,wBAAwB4I,UAAQ,aAAkB,4DAEzE,4BACE,6BAAK,0BAAM5I,UAAU,wBAAwB4I,UAAQ,UAAe,4DAI1E,iCACE,wCACA,wBAAI5I,UAAU,uBACZ,uCACA,4BAAI,uBAAGA,UAAU,gBAAgB3Z,KAAK,gCAAlC,sCCvCxBmjB,GAAiC,WACrC,IAAMtG,EAAUC,cAChB,OACE,8BACE,6BAASnD,UAAU,+BACjB,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,oCAAoC+H,UAAQ,QACzD,6BAAS/H,UAAU,kBACjB,wBAAIA,UAAU,iDACZ,4BAAI,uBAAG8E,QAAS,kBAAK5B,EAAQf,KAAK,OAA9B,SACJ,4BAAI,0CAGR,iCACE,6BACE,6BAASnC,UAAU,uEACjB,4BAAQA,UAAU,kBAAiB,wBAAIA,UAAU,oBAAd,UACnC,yBAAKA,UAAU,mBACb,8dAMA,wBAAIA,UAAU,kBAAd,wCCzBdyJ,GAAwC,WAC5C,IAAMvG,EAAUC,cAChB,OACE,8BACE,6BAASnD,UAAU,+BACjB,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,oCAAoC+H,UAAQ,QACzD,6BAAS/H,UAAU,kBACjB,wBAAIA,UAAU,iDACZ,4BAAI,uBAAG8E,QAAS,kBAAM5B,EAAQf,KAAK,OAA/B,SACJ,4BAAI,kDAGR,iCACE,6BACE,6BAASnC,UAAU,uEAEjB,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,kBAAd,4BACA,wFAEE,6BACA,6BAHF,yHAKE,6BACA,6BANF,qKAQE,6BACA,6BATF,kDAWE,4BACE,qFAGA,yDAGA,2JAOJ,wBAAIA,UAAU,kBAAd,2BACA,wFAEA,6BACE,6BAHF,4PAKA,6BAAM,6BALN,2IAQA,wBAAIA,UAAU,kBAAd,kBACA,qPAIA,6BAAM,6BAJN,8MCxCd0J,GAAkD,SAAC3J,GAAkB,IAAD,4BAElEnS,EAAWqV,cACXO,EAAWzD,EAAMlU,KACjB8d,EAAS,UAAG5J,EAAMlU,YAAT,aAAG,EAAYH,WAExBke,EAAwBC,aAAU,CACtCC,cAAe,CACbhD,WAAmB,OAARtD,QAAQ,IAARA,GAAA,UAAAA,EAAUhe,YAAV,eAAgBshB,YAAa,GACxCC,UAAkB,OAARvD,QAAQ,IAARA,GAAA,UAAAA,EAAUhe,YAAV,eAAgBuhB,WAAY,GACtCgD,QAAgB,OAARvG,QAAQ,IAARA,GAAA,UAAAA,EAAUhe,YAAV,eAAgBukB,SAAU,GAClCC,KAAa,OAARxG,QAAQ,IAARA,GAAA,UAAAA,EAAUhe,YAAV,eAAgBwkB,MAAO,GAC5BC,QAAgB,OAARzG,QAAQ,IAARA,GAAA,UAAAA,EAAUhe,YAAV,eAAgBykB,SAAU,GAClCrD,SAAiB,OAARpD,QAAQ,IAARA,GAAA,UAAAA,EAAUhe,YAAV,eAAgBohB,UAAWniB,EAAamC,QAAO,SAAAggB,GAAO,OAAIA,EAAQsD,WAAS,GAAGC,YACvFjQ,OAAe,OAARsJ,QAAQ,IAARA,GAAA,UAAAA,EAAUhe,YAAV,eAAgB0U,QAAS,GAChCwM,MAAc,OAARlD,QAAQ,IAARA,GAAA,UAAAA,EAAUhe,YAAV,eAAgBkhB,OAAQ,GAC9BC,SAAiB,OAARnD,QAAQ,IAARA,GAAA,UAAAA,EAAUhe,YAAV,eAAgBmhB,UAAW,GACpCJ,gBAAwB,OAAR/C,QAAQ,IAARA,GAAA,UAAAA,EAAUhe,YAAV,eAAgB+gB,iBAAkB,GAClDC,gBAAwB,OAARhD,QAAQ,IAARA,GAAA,UAAAA,EAAUhe,YAAV,eAAgBghB,iBAAkB,GAClDC,kBAA0B,OAARjD,QAAQ,IAARA,GAAA,UAAAA,EAAUhe,YAAV,eAAgBihB,mBAAoB,GACtDN,WAAmB,OAAR3C,QAAQ,IAARA,GAAA,UAAAA,EAAUhe,YAAV,eAAgB2gB,YAAa,IAG1CiE,iBAAkBC,IAAW,CAC3BvD,UAAWuD,MAAaC,SAAS,YACjCP,OAAQM,MAAaC,SAAS,YAAYC,QAAQ,mCAAoC,qCACtF3D,QAASyD,MAAaC,SAAS,YAC/BpQ,MAAOmQ,MAAaC,SAAS,YAC7B5D,KAAM2D,MAAaC,SAAS,YAC5B3D,QAAS0D,MAAaC,SAAS,YAC/B/D,eAAgB8D,MAAaC,SAAS,cAGxCE,SAAU,SAAClc,GAAiB,IAAD,EtCwGb9I,EsCvGZoI,GtCuGYpI,EsCvGM,2BAAI8I,GAAL,IAAYhH,SAAQ,OAAEkc,QAAF,IAAEA,GAAF,UAAEA,EAAUhe,YAAZ,aAAE,EAAgB8B,WtCuG5C,uCAAiB,WAAOkF,GAAP,iBAAA7G,EAAA,6DAChC6G,EAASR,KADuB,SAGR7G,EAAS,YAAaK,GAHd,QAG1BS,EAH0B,QAInBC,SAAW3B,EAAekI,IAC/BoB,EAAM5H,EAAST,KAAKA,KAC1BgH,EAASZ,EAAQ,2BACZpG,GADW,IAEd2gB,UAAYtY,IACH5H,EAAST,KAAKc,WAEzBkG,EAASN,EAAU,mCAXW,2CAAjB,yDsCpGbue,oBAAoB,IAGtB,OACE,0BAAMD,SAAUZ,EAAsBc,aAAc1K,UAAU,kCAC5D,yBAAKA,UAAU,8DAEVD,EAAM4K,UAAY,4BAAQ3K,UAAU,kBAAiB,wBAAIA,UAAU,SAAd,yBAExD,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,oCAAoC+H,UAAQ,QACzD,8BAAU/H,UAAU,eAClB,4BAAQA,UAAU,SAAlB,WACA,yBAAKA,UAAU,wDAAwD+H,UAAQ,QAC7E,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,cAA0C,0BAAMA,UAAU,kBAAhB,MAC1C,yCAAOA,UAAU,WAAWlU,KAAK,OAAOtF,GAAG,aACrCojB,EAAsBgB,cAAc,eAExChB,EAAsBiB,QAAQ/D,WAAa8C,EAAsBkB,OAAOhE,UACtE,0BAAM9G,UAAU,kBAAkB4J,EAAsBkB,OAAOhE,WAC7D,KAIV,6BACE,+BACE,yBAAK9G,UAAU,iBAAf,aAAyC,0BAAMA,UAAU,kBAAhB,MACzC,yCAAOA,UAAU,WAAWlU,KAAK,OAAOtF,GAAG,YACrCojB,EAAsBgB,cAAc,iBAIhD,yBAAK5K,UAAU,wDAAwD+H,UAAQ,QAC7E,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,gBAA4C,0BAAMA,UAAU,kBAAhB,MAC5C,yCAAOA,UAAU,WAAWlU,KAAK,MAAMtF,GAAG,UACpCojB,EAAsBgB,cAAc,YAExChB,EAAsBiB,QAAQd,QAAUH,EAAsBkB,OAAOf,OACnE,0BAAM/J,UAAU,kBAAkB4J,EAAsBkB,OAAOf,QAC7D,KAIV,6BACE,+BACE,yBAAK/J,UAAU,iBAAf,iBACA,yCAAOA,UAAU,WAAWlU,KAAK,OAAOtF,GAAG,OACrCojB,EAAsBgB,cAAc,WAG9C,6BACE,+BACE,yBAAK5K,UAAU,iBAAf,UACA,0CAAQA,UAAU,YAAYxZ,GAAG,UAC3BojB,EAAsBgB,cAAc,WACxC,4BAAQtc,MAAM,IAAd,UACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,UACA,4BAAQA,MAAM,KAAd,cAMV,8BAAU0R,UAAU,eAClB,4BAAQA,UAAU,SAAlB,WACA,yBAAKA,UAAU,wDAAwD+H,UAAQ,QAC7E,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,WAAuC,0BAAMA,UAAU,kBAAhB,MACvC,0CAAQA,UAAU,YAAYxZ,GAAG,WAC3BojB,EAAsBgB,cAAc,YAEtCnmB,EAAa6V,KAAI,SAACsM,EAASjU,GACzB,OAAO,4BAAQrI,IAAKqI,EAAOrE,MAAOsY,EAAQuD,aAAcvD,EAAQ7d,UAKpE6gB,EAAsBiB,QAAQjE,SAAWgD,EAAsBkB,OAAOlE,QACpE,0BAAM5G,UAAU,kBAAkB4J,EAAsBkB,OAAOlE,SAC7D,KAIV,6BACE,+BACE,yBAAK5G,UAAU,iBAAf,SAAqC,0BAAMA,UAAU,kBAAhB,MACrC,yCAAOA,UAAU,WAAWlU,KAAK,OAAOtF,GAAG,SACrCojB,EAAsBgB,cAAc,WAExChB,EAAsBiB,QAAQ3Q,OAAS0P,EAAsBkB,OAAO5Q,MAClE,0BAAM8F,UAAU,kBAAkB4J,EAAsBkB,OAAO5Q,OAC7D,MAKZ,yBAAK8F,UAAU,wDAAwD+H,UAAQ,QAC7E,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,QAAoC,0BAAMA,UAAU,kBAAhB,MACpC,yCAAOA,UAAU,WAAWlU,KAAK,OAAOtF,GAAG,QACrCojB,EAAsBgB,cAAc,UAExChB,EAAsBiB,QAAQnE,MAAQkD,EAAsBkB,OAAOpE,KACjE,0BAAM1G,UAAU,kBAAkB4J,EAAsBkB,OAAOpE,MAC7D,KAIV,6BACE,+BACE,yBAAK1G,UAAU,iBAAf,YACA,yCAAOA,UAAU,WAAWlU,KAAK,OAAOtF,GAAG,WACrCojB,EAAsBgB,cAAc,aAExChB,EAAsBiB,QAAQlE,SAAWiD,EAAsBkB,OAAOnE,QACpE,0BAAM3G,UAAU,kBAAkB4J,EAAsBkB,OAAOnE,SAC7D,MAKZ,yBAAK3G,UAAU,gBAAgB+H,UAAQ,QACrC,yBAAK/H,UAAU,gBACb,+BACE,yBAAKA,UAAU,iBAAf,kDAA8E,0BAAMA,UAAU,kBAAhB,MAC9E,yCAAOA,UAAU,WAAWlU,KAAK,OAAOtF,GAAG,kBACrCojB,EAAsBgB,cAAc,oBAExChB,EAAsBiB,QAAQtE,gBAAkBqD,EAAsBkB,OAAOvE,eAC3E,0BAAMvG,UAAU,kBAAkB4J,EAAsBkB,OAAOvE,gBAC7D,MAKZ,yBAAKvG,UAAU,gBAAgB+H,UAAQ,QACrC,yBAAK/H,UAAU,gBACb,+BACE,yBAAKA,UAAU,iBAAf,yCACA,yCAAOA,UAAU,WAAWlU,KAAK,OAAOtF,GAAG,kBACrCojB,EAAsBgB,cAAc,uBAIhD,yBAAK5K,UAAU,gBAAgB+H,UAAQ,QACrC,yBAAK/H,UAAU,gBACb,+BACE,yBAAKA,UAAU,iBAAf,YACA,yCAAOA,UAAU,WAAWlU,KAAK,OAAOtF,GAAG,oBACrCojB,EAAsBgB,cAAc,6BAQxD,yBAAK5K,UAAU,iCAEXD,EAAMlU,MACN,kBAAC,GAA0BkU,EAAMlU,MAGnC,4BAAQkf,SAAUpB,EAAW7d,KAAK,SAASkU,UAAU,gCAEjD2J,GACA,yBAAK3J,UAAU,uBAAuBqC,IAAI,mBAE5C,2CC7NN2I,GAA0C,SAACjL,GAE/C,OACE,yBAAKC,UAAU,gEACb,yBAAKA,UAAU,4DAA4DiL,YAAU,iDACnF,yBAAKjL,UAAU,kBACb,yBAAKA,UAAU,mCAAmC+H,UAAQ,QACxD,6BACE,yBAAK/H,UAAU,+BAA+B+H,UAAQ,QACpD,6BACE,uBAAG/H,UAAU,+CAA8C,0BAAMA,UAAU,yBAAyB4I,UAAQ,2BAAgC,mDAMtJ,6BACE,6BACE,wBAAI5I,UAAU,4CACZ,wBAAIA,UAAWD,EAAMmL,aAAe,YAAc,IAChD,uBAAGpG,QAAS,WAAa/E,EAAMoL,cAAc,cAA7C,yBAEF,wBAAInL,UAAWD,EAAMqL,WAAa,YAAc,IAC9C,uBAAGtG,QAAS,WAAa/E,EAAMoL,cAAc,YAA7C,WAEF,wBAAInL,UAAWD,EAAMsL,aAAe,YAAc,IAChD,uBAAGvG,QAAS,WAAa/E,EAAMoL,cAAc,cAA7C,mBCtBVG,GAA+C,SAACvL,GAAkB,IAAD,IAE/DlU,EAAOkU,EAAMlU,KACb8d,EAAS,UAAG5J,EAAMlU,YAAT,aAAG,EAAYH,WACxBkC,EAAWqV,cACXsI,EAAoB1B,aAAU,CAClCC,cAAe,CACbzd,cAAkB,OAAJR,QAAI,IAAJA,GAAA,UAAAA,EAAMrG,YAAN,eAAY6G,eAAgB,GAC1Cmf,gBAAiB,GACjBC,YAAa,GACbC,gBAAiB,IAEnBtB,iBAAkBC,IAAW,CAC3Bhe,aAAcge,MAAaC,SAAS,YACpCkB,gBAAiBnB,MAAaC,SAAS,YACvCmB,YAAapB,MAAaC,SAAS,YACnCoB,gBAAiBrB,MAAaC,SAAS,YAAYqB,MAAM,CAACtB,IAAQ,eAAgB,IAAK,2BAEzFG,SAAU,SAAClc,GlCoEU,IAAC9I,EkCnEpBoI,GlCmEoBpI,EkCnEM8I,ElCmEP,uCAAwB,WAAO9B,GAAP,eAAA7G,EAAA,6DAC/C6G,EAASW,MADsC,SAGvBhI,EAAS,kBAAmBK,GAHL,QAGzCS,EAHyC,QAKlCC,SAAW3B,EAAekI,GACrCD,EAASQ,GAAe,CAACX,aAAe7G,EAAK6G,aAAcmf,gBAAiB,GAAIC,YAAa,IAAoBxlB,EAAST,KAAKc,SAAU,KAEzIkG,EAASa,GAAmBpH,EAAiBK,SAAU,KARV,2CAAxB,wDkClEnBilB,EAAkBK,aAGpBnB,oBAAoB,IAItB,OACE,0BAAMD,SAAUe,EAAkBb,aAAc1K,UAAU,kCACxD,yBAAKA,UAAU,6DACb,4BAAQA,UAAU,kBAAiB,wBAAIA,UAAU,SAAd,aACnC,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,oCAAoC+H,UAAQ,QACzD,8BAAU/H,UAAU,eAClB,4BAAQA,UAAU,SAAlB,SACA,yBAAKA,UAAU,mCAAmC+H,UAAQ,QACxD,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,iBACA,yCAAOA,UAAU,WAAWxZ,GAAG,eAAesF,KAAK,QAAQif,UAAQ,GAC7DQ,EAAkBX,cAAc,sBAK9C,8BAAU5K,UAAU,eAClB,4BAAQA,UAAU,SAAlB,YACA,yBAAKA,UAAU,mCAAmC+H,UAAQ,QACxD,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,oBACA,yCAAOA,UAAU,YAAYxZ,GAAG,kBAAkBsF,KAAK,YACjDyf,EAAkBX,cAAc,qBAEpCW,EAAkBV,QAAQW,iBAAmBD,EAAkBT,OAAOU,gBACpE,0BAAMxL,UAAU,kBAAkBuL,EAAkBT,OAAOU,iBACzD,KAIV,6BACE,+BACE,yBAAKxL,UAAU,iBAAf,gBACA,yCAAOA,UAAU,YAAYlU,KAAK,YAC5Byf,EAAkBX,cAAc,iBAEpCW,EAAkBV,QAAQY,aAAeF,EAAkBT,OAAOW,YAChE,0BAAMzL,UAAU,kBAAkBuL,EAAkBT,OAAOW,aACzD,KAIV,6BACE,+BACE,yBAAKzL,UAAU,iBAAf,oBACA,yCAAOA,UAAU,YAAYlU,KAAK,YAC5Byf,EAAkBX,cAAc,qBAEpCW,EAAkBV,QAAQa,iBAAmBH,EAAkBT,OAAOY,gBACpE,0BAAM1L,UAAU,kBAAkBuL,EAAkBT,OAAOY,iBACzD,UASpB,yBAAK1L,UAAU,iCAEXD,EAAMlU,MACN,kBAAC,GAA0BkU,EAAMlU,MAEnC,4BAAQkf,SAAUpB,EAAW7d,KAAK,SAASkU,UAAU,gCAEjD2J,GACA,yBAAK3J,UAAU,uBAAuBqC,IAAI,mBAE5C,sD,mBCrGNwJ,GAAkC,WAEtC,IAAMje,EAAWqV,cACXC,EAAUC,cAH4B,EAIFO,oBAAS,GAJP,oBAIrCoI,EAJqC,KAItBC,EAJsB,OAKArI,mBAAS,IALT,oBAKrCsI,EALqC,KAKrBC,EALqB,OAMYvI,mBAAmB,IAN/B,oBAMrCwI,EANqC,KAMfC,EANe,OAOUzI,mBAAS,IAPnB,oBAOrC0I,EAPqC,KAOhBC,EAPgB,OAQM3I,mBAAS,IARf,oBAQrC4I,EARqC,KAQlBC,EARkB,OASM7I,mBAAS,IATf,oBASrC8I,EATqC,KASlBC,EATkB,OAUE/I,oBAAS,GAVX,oBAUrCgJ,EAVqC,KAUpBC,EAVoB,KAWtCC,EAAiBvJ,iBAAuB,MACxCwJ,EAAkBxJ,iBAA0B,MAC5CyJ,EAASvJ,aAAsC,SAAArJ,GAAK,OAAIA,EAAM2C,gBAAkB,MAChF9U,EAAewb,aAAoC,SAAArJ,GAAK,OAAIA,EAAMnS,gBAClEglB,EAAcxJ,aAAsC,SAAArJ,GAAK,OAAIA,EAAMrB,QAAQrT,MAAQ,MACnFge,EAAWD,aAAuC,SAAArJ,GAAK,OAAIA,EAAMrO,QAEvEsY,qBAAU,WAAO,IAAD,EACdvW,EAASqK,IAAkB,UAAA6U,EAAOtnB,YAAP,eAAagE,SAAU,E5B/BrC,K4BgCboE,EAAS8K,QACR,IAKHyL,qBAAU,WAAO,IAAD,EACd,GAAI2I,EAAO9U,gBAA0E,KAAxD,UAAA4U,EAAenI,eAAf,eAAwBuI,wBAAwBpH,KAAW,CACtF,IAAMqH,EAAOJ,EAAgBpI,QAC7Ba,YAAW,WACL,OAAJ2H,QAAI,IAAJA,KAAMtiB,UACL,QAEJ,CAACmiB,EAAO9U,iBAEXmM,qBAAU,WACR4H,EAAiBe,EAAOzV,iBAAkB,KACzC,CAACyV,EAAOzV,iBAGX,IAQM6V,EAAkB,SAACrU,EAAkBsU,GACzC,GAAItU,GAAWsU,EAAgB,CAC7B,IAAMC,EAAcL,EAAYnmB,QAAO,qBAAGuS,YAA8BN,KACxE,GAAIuU,EAAY,GACd,OAAO,uBAAGC,OAAO,SAAShnB,KAAM+mB,EAAY,GAAGnU,aAAekU,GAAvD,iBAGX,MAAO,iBAGHG,EAAwB,SAACC,EAAsB5mB,GACnD,GAAI/B,EAAYuC,QAAQR,EAAWe,aAAe,EAAG,CACnD,IACM8lB,IADkB,IAAIC,MAAQC,UAAa,IAAID,KAAKF,GAAeG,WAClC,MACvC,OAAOlmB,KAAKC,KAAK+lB,IAAqB,GAExC,OAAO,GAGHG,EAAc,SAACxQ,EAAwByQ,EAC3CC,EAAsB3iB,GACS,IAAD,EAA1B8gB,GAAkB4B,GACpBjB,GAAmB,GACnB/e,ExBqHwB,SAACgK,EAAwBkW,EACrDD,EAAsB3iB,EAAsB2b,GADhB,8CACsC,WAAMjZ,GAAN,eAAAjI,EAAA,6DAClEiI,EAASsJ,MADyD,SAE3C/R,EAAS,yBAAyB,CACvDyS,iBACAkW,eACAD,cACA3iB,cACA2b,aAPgE,QAE5D5gB,EAF4D,QAStDC,SAAW3B,EAAekI,IACxBxG,EAAST,KACrBoI,EAAS+J,GAAeC,KAGxBhK,EAAS6J,GADGxR,EACYK,SAAW,KAd6B,2CADtC,sDwBrHfynB,CAAsBhnB,OAAOoW,IAAkBpW,OAAOqlB,GAC7DwB,GAAU5B,EAAgB6B,GAAevB,EAAmBphB,GAAeshB,EAD/C,UACkEhJ,EAAShe,YAD3E,aACkE,EAAeshB,aAE/G6F,GAAmB,IAIjBqB,EAAe,uCAAG,WAAO/iB,EAAuBC,EAAqBC,EAAkBC,GAArE,mCAAAzF,EAAA,6DAClBsoB,EAAM,IAAIC,KAAM,IAAK,KAAM,MAAM,GAC/BC,EAAuB,CAC3BrjB,YAAY,UAAA0Y,EAAShe,YAAT,eAAeshB,WAAY,KAA3B,UAAiCtD,EAAShe,YAA1C,aAAiC,EAAeuhB,UAC5Dhc,aAAc,IAAI0iB,MAAMW,mBAAmB,SAC3CpjB,eAAe,UAAAwY,EAAShe,YAAT,eAAe+gB,gBAAiB,KAAhC,UAAsC/C,EAAShe,YAA/C,aAAsC,EAAeghB,gBAAiB,KAAtE,UACbhD,EAAShe,YADI,aACb,EAAeihB,kBAAmB,KADrB,UAC2BjD,EAAShe,YADpC,aAC2B,EAAekhB,MAAO,KADjD,UACuDlD,EAAShe,YADhE,aACuD,EAAe0U,OACnF,KAFa,UAEPsJ,EAAShe,YAFF,aAEP,EAAemhB,SAAU,KAFlB,UAEwBnD,EAAShe,YAFjC,aAEwB,EAAeohB,SACtD3b,gBACAC,cACAC,WACAC,cACAC,KAAM7D,KAAKC,KAAKV,OAAOqE,GAAerE,OAAOoE,IAAWzD,YAZpC,SAchBumB,EAAII,KAAKxjB,EAAkBsjB,GAAc,CAAEG,EAAG,GAAIC,EAAG,KAdrC,OAetBN,EAAIO,KAAMvjB,EAAc,QAfF,2CAAH,4DAiBrB,OACE,yBAAK+U,UAAU,kCACb,yBAAKA,UAAU,8CAEX8M,EAAOtnB,MAA+B,IAAvBsnB,EAAOtnB,KAAKgE,OACzB,yBAAKwW,UAAU,0EAA0E+H,UAAQ,QAC/F,6BACE,yBAAK/H,UAAU,8BACb,0FAKN,kBAAC,KAAD,CACEyO,WAAY3B,EAAOtnB,MAAQsnB,EAAOtnB,KAAKgE,QAAU,EACjDklB,KAxFY,WAAO,IAAD,EAC5B9gB,EAASqK,IAAkB,UAAA6U,EAAOtnB,YAAP,eAAagE,SAAU,E5BnCrC,M4B2HHmlB,QAAS7C,EACT8C,OACE,yBAAKnN,MAAO,CAAEoN,UAAW,SAAUC,UAAW,SAC5C,2CAGJC,WACE,uBAAGtN,MAAO,CAAEoN,UAAW,WACrB,qDAKF/B,GAAUA,EAAOtnB,MACjBsnB,EAAOtnB,KAAK8U,KAAI,SAAC4C,EAAcvK,GAAmB,IAAD,4BAC/C,OACE,yBAAKrI,IAAKqI,EAAOqN,UAAU,wDACzB,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,+BAA+B+H,UAAQ,QACpD,yBAAK/H,UAAU,mBACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,yCAAd,IAAwD9C,EAAM2Q,aAC9D,uBAAG7N,UAAU,qCAAoC,4CAAkB9C,EAAM8R,YAAY9M,MAAM,KAAK,MAElG,uBAAGlC,UAAU,sDAAqD,6CAAmBpY,EAAgBG,EAAavC,MAAQ,MAAxD,IAAgE0X,EAAMzI,iBAMnF,IAAzDyX,EAAqB/kB,QAAQJ,OAAOmW,EAAMpG,WAC1C,yBAAKkJ,UAAU,+EAA+E+H,UAAQ,QACpG,yBAAK/H,UAAU,sBACb,yBAAKA,UAAU,0BACb,uBAAGA,UAAU,eAAe8E,QAAS,kBAAM5B,EAAQf,KAAK,mBAAqBjF,EAAMD,WAAW,GAAGjL,aAC/F,4BAAQgO,UAAU,qBAAoB,yBAAKqC,IAAKxd,EAAkBqY,EAAMD,WAAW,GAAG5H,aAAcqT,IAAKxL,EAAMD,WAAW,GAAG5H,eAA7H,QAIN,6BACE,yBAAK2K,UAAU,gBAEb,wBAAIA,UAAU,WACZ,yCAAc,uBAAG8E,QAAS,kBAAM5B,EAAQf,KAAK,mBAAqBjF,EAAMD,WAAW,GAAGjL,aAAakL,EAAMD,WAAW,GAAG/R,cACvH,yCAAegS,EAAMD,WAAW,GAAG9R,UACnC,sCAAYvD,EAAgBG,EAAavC,MAAQ,MAAjD,IAAyD0X,EAAMD,WAAW,GAAGvI,iBAInF,6BACE,yBAAKsL,UAAU,iBAEV,UAAA9C,EAAMD,WAAW,GAAGG,uBAApB,eAAqCC,gBAArC,UACCH,EAAMD,WAAW,GAAGG,uBADrB,aACC,EAAqC6R,iBACrC,wBAAIjP,UAAU,WAE+C,SAAzD,UAAA9C,EAAMD,WAAW,GAAGG,uBAApB,eAAqC6R,iBACnC,8CAAmB,0BAAMjP,UAAU,6BAAhB,YACwC,QAAzD,UAAA9C,EAAMD,WAAW,GAAGG,uBAApB,eAAqC6R,iBACrC,8CAAmB,0BAAMjP,UAAU,4BAAhB,aACjB,8CAAmB,0BAAMA,UAAU,6BAAhB,UAA6C9C,EAAMD,WAAW,GAAGG,uBAAjE,aAA6C,EAAqCC,iBAI/G,UAAAH,EAAMD,WAAW,GAAGG,uBAApB,eAAqCmQ,cACnC,wBAAIvN,UAAU,WACZ,wCAAa,0BAAMA,UAAU,6BAAhB,cACb,8CAAmB,wCAAO9C,EAAMD,WAAW,GAAGG,uBAA3B,aAAO,EAAqCmQ,eAE7DD,EAAqB,UAACpQ,EAAMD,WAAW,GAAGG,uBAArB,aAAC,EAAqCmQ,aAAcrQ,EAAMD,WAAW,GAAGtW,aAC7F,4BAAI,4BAAQqZ,UAAU,8CAA8CiH,YAAU,wBAC5EnC,QAAS,WACPmH,EAAkB,IAClBre,EAASkK,MACTuU,EAAuBnP,EAAMD,WAAW,GAAGE,eAC3CsP,EAAqBvP,EAAMD,WAAW,GAAG/R,aACzCqhB,EAAqBrP,EAAM2Q,eAN3B,WASN,yCAAc,uBAAG/I,QAAS,kBAAMkJ,EAAgB9Q,EAAM2Q,YAAY3Q,EAAMD,WAAW,GAAG/R,YAAYgS,EAAMD,WAAW,GAAG9R,SAAS+R,EAAMD,WAAW,GAAGvI,gBAArI,cAGhB,wBAAIsL,UAAU,WACZ,wCAAckN,EAAe,UAAChQ,EAAMD,WAAW,GAAGG,uBAArB,aAAC,EAAqCvE,QAAtC,UAA+CqE,EAAMD,WAAW,GAAGG,uBAAnE,aAA+C,EAAqC+P,iBACjH,8CAAmB,+BAAO,UAAAjQ,EAAMD,WAAW,GAAGG,uBAApB,eAAqC8R,cAArC,UAAoDhS,EAAMD,WAAW,GAAGG,uBAAxE,aAAoD,EAAqC8R,aAAe,YAClI,4BACE,0CAAQlP,UAAU,8CAChB+K,SAAU+B,EAAOphB,aACZ,UAAAwR,EAAMD,WAAW,GAAGG,uBAApB,eAAqC8R,eAAgB,oCAF5D,CAGEpK,QAAS,WAAO,IAAD,GACb,UAAI5H,EAAMD,WAAW,GAAGG,uBAAxB,aAAI,EAAqC8R,eACvCjD,EAAkB,IAClBre,EAASkK,MACTuU,EAAuBnP,EAAMD,WAAW,GAAGE,eAC3CsP,EAAqBvP,EAAMD,WAAW,GAAG/R,aACzCqhB,EAAqBrP,EAAM2Q,eAE3B5B,EAAkB,kCAClBI,EAAuBnP,EAAMD,WAAW,GAAGE,eAC3CsP,EAAqBvP,EAAMD,WAAW,GAAG/R,aACzCqhB,EAAqBrP,EAAM2Q,aAC3BF,EAAYzQ,EAAMD,WAAW,GAAGE,cAC9B,iCAAkCD,EAAM2Q,YAAa3Q,EAAMD,WAAW,GAAG/R,iBAK7E4hB,EAAOphB,YAAc,yBAAKsU,UAAU,uBAAuBqC,IAAI,oBAEhE,UAAAnF,EAAMD,WAAW,GAAGG,uBAApB,eAAqC8R,cAAe,SAAW,eAUlFhS,EAAMD,WAAWzT,OAAS,GAC1B,wBAAI2lB,eAAa,QACf,4BACE,uBACEnP,UAAU,qDACV8E,QAAS,kBAnMLhO,EAmMkC/P,OAAOmW,EAAMpG,cAlMzEoV,EAAqB/kB,QAAQ2P,IAAY,EAC3CqV,EAAwBD,EAAqBtlB,QAAO,SAACJ,GAAD,OAAQA,IAAOsQ,MAEnEqV,EAAwB,GAAD,oBAAKD,GAAL,CAA2BpV,MAJvB,IAACA,KAoMsD,IAAzDoV,EAAqB/kB,QAAQJ,OAAOmW,EAAMpG,UAAmB,YAAc,aAC9E,yBAAKkJ,UAAU,wBAEX9C,EAAMD,WAAW3C,KAAI,SAAC8U,EAAuBzc,GAAmB,IAAD,4BAC7D,OACE,yBAAKrI,IAAKqI,EAAOqN,UAAU,+EAA+E+H,UAAQ,QAChH,yBAAK/H,UAAU,sBACb,yBAAKA,UAAU,0BACb,uBAAGA,UAAU,eAAe8E,QAAS,kBAAM5B,EAAQf,KAAK,mBAAqBiN,EAAUpd,aACrF,4BAAQgO,UAAU,qBAAoB,yBAAKqC,IAAKxd,EAAkBuqB,EAAU/Z,aAAcqT,IAAK0G,EAAU/Z,eAAzG,QAIN,6BACE,yBAAK2K,UAAU,gBACb,wBAAIA,UAAU,WACZ,yCAAc,uBAAG8E,QAAS,kBAAM5B,EAAQf,KAAK,mBAAqBiN,EAAUpd,aAAaod,EAAUlkB,cACnG,yCAAekkB,EAAUjkB,UACzB,sCAAYvD,EAAgBG,EAAavC,MAAQ,MAAjD,IAAyD4pB,EAAU1a,iBAIzE,6BACE,yBAAKsL,UAAU,iBAEV,UAAAoP,EAAUhS,uBAAV,eAA2BC,gBAA3B,UACC+R,EAAUhS,uBADX,aACC,EAA2B6R,iBAC3B,wBAAIjP,UAAU,WAEqC,SAA/C,UAAAoP,EAAUhS,uBAAV,eAA2B6R,iBACzB,8CAAmB,0BAAMjP,UAAU,6BAAhB,YAC8B,QAA/C,UAAAoP,EAAUhS,uBAAV,eAA2B6R,iBAC3B,8CAAmB,0BAAMjP,UAAU,4BAAhB,aACjB,8CAAmB,0BAAMA,UAAU,6BAAhB,UAA6CoP,EAAUhS,uBAAvD,aAA6C,EAA2BC,iBAIrG,UAAA+R,EAAUhS,uBAAV,eAA2BmQ,cACzB,wBAAIvN,UAAU,WACZ,wCAAa,0BAAMA,UAAU,6BAAhB,cACb,8CAAmB,wCAAOoP,EAAUhS,uBAAjB,aAAO,EAA2BmQ,eAEnDD,EAAqB,UAAC8B,EAAUhS,uBAAX,aAAC,EAA2BmQ,aAAcrQ,EAAMD,WAAW,GAAGtW,aACnF,4BAAI,4BAAQqZ,UAAU,8CAA8CiH,YAAU,wBAC5EnC,QAAS,WACPmH,EAAkB,IAClBre,EAASkK,MACTuU,EAAuB+C,EAAUjS,eACjCsP,EAAqB2C,EAAUlkB,aAC/BqhB,EAAqBrP,EAAM2Q,eAN3B,WASN,yCAAc,uBAAG/I,QAAS,kBAAMkJ,EAAgB9Q,EAAM2Q,YAAYuB,EAAUlkB,YAAYkkB,EAAUjkB,SAASikB,EAAU1a,gBAAvG,cAGhB,wBAAIsL,UAAU,WACZ,wCAAckN,EAAe,UAACkC,EAAUhS,uBAAX,aAAC,EAA2BvE,QAA5B,UAAqCuW,EAAUhS,uBAA/C,aAAqC,EAA2B+P,iBAC7F,8CAAmB,+BAAO,UAAAiC,EAAUhS,uBAAV,eAA2B8R,cAA3B,UAA0CE,EAAUhS,uBAApD,aAA0C,EAA2B8R,aAAe,YAC9G,4BACE,0CAAQlP,UAAU,8CAChB+K,SAAU+B,EAAOphB,aACZ,UAAA0jB,EAAUhS,uBAAV,eAA2B8R,eAAgB,oCAFlD,CAGEpK,QAAS,WAAO,IAAD,GACb,UAAIsK,EAAUhS,uBAAd,aAAI,EAA2B8R,eAC7BjD,EAAkB,IAClBI,EAAuB+C,EAAUjS,eACjCsP,EAAqB2C,EAAUlkB,aAC/BqhB,EAAqBrP,EAAM2Q,aAC3BjgB,EAASkK,QAETmU,EAAkB,kCAClBI,EAAuB+C,EAAUjS,eACjCsP,EAAqB2C,EAAUlkB,aAC/BqhB,EAAqBrP,EAAM2Q,aAC3BF,EAAYyB,EAAUjS,cAAe,iCACnCD,EAAM2Q,YAAauB,EAAUlkB,iBAKjC4hB,EAAOphB,YAAc,yBAAKsU,UAAU,uBAAuBqC,IAAI,oBAEhE,UAAA+M,EAAUhS,uBAAV,eAA2B8R,cAAe,SAAW,2BAwBtG,4BAAQlI,IAAK6F,EAAiB5F,YAAU,wBAAwBxF,MAAO,CAAE4N,WAAY,YACrF,yBAAK7oB,GAAG,eAAe0gB,WAAS,QAC9B,yBAAKlH,UAAU,iCACb,4BAAQA,UAAU,yBAAyBlU,KAAK,SAASqb,WAAS,SAClE,wBAAInH,UAAU,kBAAd,2BACA,6HACA,yBAAKgH,IAAK4F,EAAgB5M,UAAU,mBAClC,yBAAKA,UAAU,aACb,yBAAKA,UAAU,oBACb,2BAAOA,UAAU,mBAAmB8E,QAAS,kBAAMmH,EAAkB,uBAAsB,2BAAOjM,UAAU,WAAWlU,KAAK,QAAQ/C,KAAK,eAAeuF,MAAM,oBAAoBghB,QAA4B,sBAAnBtD,IAA0C,0BAAMhM,UAAU,kBAAhB,sBACrO,2BAAOA,UAAU,mBAAmB8E,QAAS,kBAAMmH,EAAkB,kDAAiD,2BAAOjM,UAAU,WAAWlU,KAAK,QAAQ/C,KAAK,eAAeuF,MAAM,+CAA+CghB,QAA4B,iDAAnBtD,IAAqE,0BAAMhM,UAAU,kBAAhB,iDACtT,2BAAOA,UAAU,mBAAmB8E,QAAS,kBAAMmH,EAAkB,oBAAmB,2BAAOjM,UAAU,WAAWlU,KAAK,QAAQ/C,KAAK,eAAeuF,MAAM,iBAAiBghB,QAA4B,mBAAnBtD,IAAuC,0BAAMhM,UAAU,kBAAhB,mBAC5N,2BAAOA,UAAU,mBAAmB8E,QAAS,kBAAMmH,EAAkB,uBAAsB,2BAAOjM,UAAU,WAAWlU,KAAK,QAAQ/C,KAAK,eAAeuF,MAAM,oBAAoBghB,QAA4B,sBAAnBtD,IAA0C,0BAAMhM,UAAU,kBAAhB,sBACrO,2BAAOA,UAAU,mBAAmB8E,QAAS,kBAAMmH,EAAkB,wBAAuB,2BAAOjM,UAAU,WAAWlU,KAAK,QAAQ/C,KAAK,eAAeuF,MAAM,qBAAqBghB,QAA4B,uBAAnBtD,IAA2C,0BAAMhM,UAAU,kBAAhB,uBACxO,2BAAOA,UAAU,mBAAmB8E,QAAS,kBAAMmH,EAAkB,WAAU,2BAAOjM,UAAU,WAAWlU,KAAK,QAAQ/C,KAAK,eAAeuF,MAAM,QAAQghB,QAA4B,UAAnBtD,IAA8B,0BAAMhM,UAAU,kBAAhB,aAIvM,2BAAG,0BAAMA,UAAU,YAAhB,SAAH,0EAEE0M,GACA,uBAAG1M,UAAU,kBAAb,0CAEF,uBAAGA,UAAU,iBAER8M,EAAO9U,eASN,4BAAQ+S,SAAU+B,EAAO9U,eACvBgI,UAAU,6BAA6BlU,KAAK,UAC5C,0BAAM8c,UAAQ,eAFhB,oBARA,4BAAQmC,SAAU+B,EAAOphB,WACvBsU,UAAU,8BAA8BlU,KAAK,SAASgZ,QAAS,kBAAM6I,MAEnEb,EAAOphB,YACP,yBAAKsU,UAAU,uBAAuBqC,IAAI,mBAJ9C,uBCpXVkN,GAAyC,WAAM,IAK3CC,EAAYC,cAAZD,QAL2C,EAMX9L,oBAAS,GANE,oBAM5C2H,EAN4C,KAM9BqE,EAN8B,OAOXhM,oBAAS,GAPE,oBAO5CwH,EAP4C,KAO9ByE,EAP8B,OAQfjM,oBAAS,GARM,oBAQ5C0H,EAR4C,KAQhCwE,EARgC,KAS7ChiB,EAAWqV,cACXO,EAAWD,aAAY,SAACrJ,GAAD,OAAqBA,EAAMrO,QAElDoB,EAAesW,aAAY,SAACrJ,GAAD,OAAqBA,EAAMjN,gBAC5DkX,qBAAU,WACRvW,EpCgEoB,uCAAM,WAAOpB,GAAP,eAAA7G,EAAA,6DAC5B6G,EAASW,MADmB,SAGJhI,EAAQ,mBAHJ,QAGtBc,EAHsB,QAKfC,SAAW3B,EAAekI,GACrCD,EAASQ,GAAe/G,EAAST,KAAKA,OAEtCgH,EAASa,GAAkBpH,EAAST,KAAKc,SAAU,KARzB,2CAAN,uDoC/DpB6kB,EAAcqE,GAAW,MACzB,IAEFrL,qBAAU,WACRgH,EAAcqE,GAAW,MACzB,CAACA,IAIH,IAAMrE,EAAgB,SAAC0E,GACL,WAAbA,GACDH,GAAgB,GAChBC,GAAgB,GAChBC,GAAc,IACO,aAAbC,GACRH,GAAgB,GAChBC,GAAgB,GAChBC,GAAc,KAEdF,GAAgB,GAChBC,GAAgB,GAChBC,GAAc,KAIlB,OACE,8BACI,6BAAS5P,UAAU,+BACjB,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,iBAAiB+H,UAAQ,QACtC,kBAAC,GAAD,CAASoD,cAAeA,EACtBD,aAAcA,EACdG,aAAcA,EACdD,WAAYA,IACXF,GAAgB,kBAAC,GAAD,CAAiBrf,KAAM2X,IACvC6H,GAAiB,kBAAC,GAAD,CAAcxf,KAAMoB,IACrCme,GAAe,kBAAC,GAAD,WChD1B0E,GAAqC,WAEzC,IAAMliB,EAAWqV,cACX0G,EAAYpG,aAA+B,SAAArJ,GAAK,OAAIA,EAAMM,UAAU9O,cACpEqkB,EAAUxM,aAA+B,SAAArJ,GAAK,OAAIA,EAAMM,UAAU/O,YAClEE,EAAa4X,aAA+B,SAAArJ,GAAK,OAAIA,EAAMM,UAAU7O,cACrEqkB,EAAkBzM,aAA0C,SAAArJ,GAAK,OAAIA,EAAMM,UAAUlU,WAN5C,EAOLod,oBAAS,GAPJ,oBAOxCuM,EAPwC,KAOzBC,EAPyB,KASzCC,EAActG,aAAU,CAC5BC,cAAe,CACbsG,MAAO,GACPC,SAAU,GACVtG,OAAQ,OACRuG,gBAAgB,EAChBC,gBAAgB,EAChBpG,YAAa,IAEfC,iBAAkBC,IAAW,CAC3B+F,MAAO/F,MACJC,SAAS,YACT8F,MAAM,yBACTC,SAAUhG,MAAamG,KAAK,iBAAiB,CAC3CC,IAAI,EACJ3P,KAAMuJ,MACLC,SAAS,cAEZP,OAAQM,MAAamG,KAAK,iBAAkB,CAC1CC,IAAI,EACJ3P,KAAMuJ,MAAaC,SAAS,YACzBC,QAAQ,mCACL,yCAGVC,SAAU,SAACkG,GtCkFM,IAACC,EAfHC,EA4BKC,EsC9FbV,EAAYO,OAAOJ,eAOtB1iB,GtC0Ec+iB,EsC1EQ,CAAEP,MAAOM,EAAON,MAAOC,SAAUK,EAAOL,SAAUtG,OAAQ2G,EAAO3G,QtC0E1E,uCAA8B,WAAOnc,GAAP,iBAAAjI,EAAA,6DACjDiI,EAASlB,KADwC,SAE1BvH,EAAS,gBAAiBwrB,GAFA,QAE3C1qB,EAF2C,QAIpCC,SAAW3B,EAAekI,IAC/BoB,EAAM5H,EAAST,KACrBoI,EAASd,EAAgBe,EAAIvH,WAG7BsH,EAAShB,EADG3G,EACeK,UAToB,2CAA9B,wDsChFV6pB,EAAYO,OAAOH,eACpB3iB,GtC4FcijB,EsC5FUH,EtC4FX,uCAAyB,WAAO9iB,GAAP,iBAAAjI,EAAA,6DAC9CiI,EAASlB,KADqC,SAEvBvH,EAAS,kBAAmB0rB,GAFL,QAExC5qB,EAFwC,QAIjCC,SAAW3B,EAAekI,IAC/BoB,EAAM5H,EAAST,KACrBoI,EAASd,EAAgBe,EAAIvH,WAG7BsH,EAAShB,EADG3G,EACeK,UATiB,2CAAzB,wDsC1FbsH,GtC8DSgjB,EsC9DU,CAAER,MAAOM,EAAON,MAAOC,SAAUK,EAAOL,UtC8DnD,uCAAuB,WAAOziB,GAAP,iBAAAjI,EAAA,6DAEvCiI,EA5E0B,CAC1B9B,KAAOpH,EAAQ+V,gBAyEwB,SAGftV,EAAS,SAAUyrB,GAHJ,QAGjC3qB,EAHiC,QAK1BC,SAAW3B,EAAekI,IAC/BoB,EAAM5H,EAAST,KACrBK,OAAOC,aAAayW,QAAQ,WAAY1O,EAAIijB,cAAgB,IAC5DljB,EAzEwB,CAC1B9B,KAAOpH,EAAQiW,iBA2Eb/M,GAjFgBtH,EAgFJL,EACYK,QAjFa,CACvCwF,KAAOpH,EAAQgW,YACflV,KAAMc,KAoEiC,iCAtEtB,IAACA,IAsEqB,OAAvB,2DsClDVyqB,EAAsB,SAACT,GAC3BH,EAAYvE,YACZuE,EAAYa,cAAc,iBAAkBV,GAC5CH,EAAYa,cAAc,kBAAkB,GAC5CpjB,EtCDgC,CAClC9B,KAAMpH,EAAQkW,iBsC6Cd,OAnBAuJ,qBAAU,WACJgM,EAAYO,OAAOJ,gBACrBH,EAAYa,cAAc,kBAAkB,GAC5Cb,EAAYa,cAAc,QAAS,IACnCb,EAAYa,cAAc,WAAY,IACtCb,EAAYtF,QAAQwF,UAAW,EAC/BF,EAAYtF,QAAQuF,OAAQ,GAExBzkB,IACEwkB,EAAYO,OAAOH,iBACrBL,GAAiB,GACjBtiB,EAASrB,KACTqB,EAAS4H,MA9BEzC,KAAKke,MAAMnrB,aAAaC,QAAQ,4BAA8B,MACtEsC,SAAQ,SAACiM,GAChB1G,EAASyG,GAAc,CACrBS,gBAAiBR,EAAKQ,gBACtBH,gBAAiBL,EAAKK,gBACtBM,aAAcX,EAAKW,aACnBE,OAAQ,IACRE,aAAcf,EAAKe,aACnBC,iBAAkBhB,EAAKgB,iBACvBpK,YAAaoJ,EAAKpJ,YAClBqK,YAAajB,EAAKiB,YAClBb,aAAc,IACd1C,UAAWsC,EAAKtC,YAChB,OAEJlM,aAAayW,QAAQ,0BAA0B,UAoB9C,CAAC5Q,IAEAskB,EACK,kBAAC,IAAD,CAAUiB,GAAG,MAIpB,0BAAM1G,SAAU2F,EAAYzF,aAAc1K,UAAU,mBAClD,8BACE,6BAASA,UAAU,+BACjB,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,yCAAyC+H,UAAQ,QAC9D,yBAAK/H,UAAU,gEACb,yBAAKA,UAAU,4DAA4DiL,YAAU,6BACnF,yBAAKjL,UAAU,kBACb,yBAAKA,UAAU,mCAAmC+H,UAAQ,QACxD,6BACE,yBAAK/H,UAAU,+BAA+B+H,UAAQ,QACpD,6BACE,uBAAG/H,UAAW,gDAAmDmQ,EAAYO,OAAOJ,eAA4D,GAA3C,0CAAgDxL,QAAS,kBAAYiM,GAAoB,KAC5L,0BAAM/Q,UAAU,yBAAyB4I,UAAQ,+BACjD,yCAGJ,6BACE,uBAAG5I,UAAW,gDAAkDmQ,EAAYO,OAAOJ,eAAiB,yCAA2C,IAAKxL,QAAS,kBAAYiM,GAAoB,KAC3L,0BAAM/Q,UAAU,yBAAyB4I,UAAQ,8BACjD,gDAOZ,6BAEImH,GACA,yBAAK/P,UAAU,uBACb,0BAAMA,UAAU,kCAAhB,IAAmDgQ,EAAnD,MAIFrkB,GACA,yBAAKqU,UAAU,2BACb,0BAAMA,UAAU,mCAAhB,IAAoDgQ,EAApD,MAGJ,6BACE,wBAAIhQ,UAAU,gCACZ,4BACE,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,oCAAoC+H,UAAQ,QACzD,8BAAU/H,UAAU,eAClB,yBAAKA,UAAU,wDAAwD+H,UAAQ,QAC7E,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,SACA,yCAAOA,UAAU,WAAWxZ,GAAG,QAAQsF,KAAK,QACtCqkB,EAAYvF,cAAc,WAE9BuF,EAAYtF,QAAQuF,OAASD,EAAYrF,OAAOsF,MAC9C,0BAAMpQ,UAAU,kBAAkBmQ,EAAYrF,OAAOsF,OACnD,OAMbD,EAAYO,OAAOJ,gBAClB,8BAAUtQ,UAAU,eAClB,yBAAKA,UAAU,gBAAgB+H,UAAQ,QACrC,yBAAK/H,UAAU,+BACb,+BACE,yBAAKA,UAAU,iBAAf,WACA,4BAAQA,UAAU,YAAYxZ,GAAG,cAC/BwhB,SA/HlB,SAACmJ,GACvBhB,EAAYa,cAAc,SAAUG,EAAMjJ,cAAc5Z,MAAQ,OAgItB7J,EAAa6V,KAAI,SAACsM,EAASjU,GACzB,OAAO,4BAAQrI,IAAKqI,EAAOrE,MAAOsY,EAAQwK,IAAKvB,SAAUjJ,EAAQsD,SAAUtD,EAAQ7d,YAM7F,yBAAKiX,UAAU,mBACb,+BACE,yBAAKA,UAAU,iBAAf,iBACA,yCAAOA,UAAU,WAAWlU,KAAK,OAAOtF,GAAG,UACrC2pB,EAAYvF,cAAc,YAE9BuF,EAAYtF,QAAQd,QAAUoG,EAAYrF,OAAOf,OAC/C,0BAAM/J,UAAU,kBAAkBmQ,EAAYrF,OAAOf,QACnD,QAQboG,EAAYO,OAAOH,gBACpB,8BAAUvQ,UAAU,eAClB,yBAAKA,UAAU,wDAAwD+H,UAAQ,QAC7E,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,YACA,yCAAOA,UAAU,WAAWlU,KAAK,WAAWtF,GAAG,YACzC2pB,EAAYvF,cAAc,cAE9BuF,EAAYtF,QAAQwF,UAAYF,EAAYrF,OAAOuF,SACjD,0BAAMrQ,UAAU,kBAAkBmQ,EAAYrF,OAAOuF,UACnD,SAUfF,EAAYO,OAAOJ,gBACpB,yBAAKtQ,UAAU,sCACb,uBAAGA,UAAU,iBAAiB8E,QAAS,WAnKrEqL,EAAYa,cAAc,kBAAkB,KAmKd,uBAIJ,yBAAKhR,UAAU,iDACb,4BAAQxZ,GAAG,WAAWukB,SAAUpB,EAAW7d,KAAK,SAASkU,UAAU,gCAE/D2J,GACA,yBAAK3J,UAAU,uBAAuBqC,IAAI,kBAE5C,wDC/O5BgP,GAAsC,WAC1C,IAAMnO,EAAUC,cAChB,OACE,gCACE,6BAASnD,UAAU,6DACjB,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,yDAAyD+H,UAAQ,QAC9E,6BACE,uBAAG/H,UAAU,UAAU8E,QAAS,kBAAK5B,EAAQf,KAAK,OAAM,yBAAKE,IAAI,YAAYqG,IAAI,OAAO4I,MAAM,SAC9F,uBAAGtR,UAAU,mBAQf,6BACE,yBAAKA,UAAU,mCAAmC+H,UAAQ,QACxD,6BACE,wBAAI/H,UAAU,yBACZ,4BAAI,uBAAG8E,QAAS,kBAAM5B,EAAQf,KAAK,uBAA/B,aACJ,4BAAI,uBAAG2C,QAAS,kBAAM5B,EAAQf,KAAK,uBAA/B,aACJ,4BAAI,uBAAG2C,QAAS,kBAAM5B,EAAQf,KAAK,oBAA/B,UACJ,4BAAI,uBAAG2C,QAAS,kBAAM5B,EAAQf,KAAK,6BAA/B,qBAGR,6BACE,wBAAInC,UAAU,yBACZ,4BAAI,uBAAG8E,QAAS,kBAAK5B,EAAQf,KAAK,YAA9B,UACJ,4BAAI,uBAAG2C,QAAS,kBAAM5B,EAAQf,KAAK,gBAA/B,aACJ,4BAAI,uBAAG2C,QAAS,kBAAM5B,EAAQf,KAAK,mBAA/B,sBAKZ,6BACE,wBAAInC,UAAU,yBAIZ,4BACE,uBAAGA,UAAU,gBAAgB3Z,KAAK,gCAA+B,0BAAM2Z,UAAU,wBAAwB4I,UAAQ,SAAc,0BAAM5I,UAAU,aAAhB,6BAUrI,6BACE,yBAAKA,UAAU,yCAAf,mCC5CRuR,GAAsC,WAAO,IAAD,IAE1CrO,EAAUC,cACVvV,EAAWqV,cAH+B,EAIdS,mBAAS,GAJK,oBAIzC8N,EAJyC,KAI9BC,EAJ8B,OAKE/N,mBAAS,IALX,oBAKzCgO,EALyC,KAKtBC,EALsB,OAMAjO,oBAAS,GANT,oBAMzCkO,EANyC,KAMvBC,EANuB,KAO1CrO,EAAWD,aAAY,SAACrJ,GAAD,OAAqBA,EAAMrO,QAClDnF,EAAgB6c,aAAmC,SAAArJ,GAAK,OAAIA,EAAMrT,eAClEyN,EAAOiP,aAA4B,SAAArJ,GAAK,OAAIA,EAAM5F,QAClDoK,EAAS6E,aAA8B,SAAArJ,GAAK,OAAIA,EAAMwE,OAAOlZ,MAAQ,MACrEuC,EAAewb,aAAoC,SAAArJ,GAAK,OAAIA,EAAMnS,gBAClE+pB,EAAczO,iBAA0B,MACxC0O,EAAsB1O,iBAA0B,MAEtDc,qBAAU,W/BiDU,IAAC3e,E+BhDnBoI,EAASiC,MACTjC,EjCuD0B,uCAAM,WAAMA,GAAN,iBAAAjI,EAAA,6DAClCiI,EAjDiC,CACjC9B,KAAMpH,GAAQkX,wBA+CoB,SAGXzW,EAAQ,iBAHG,QAG5Bc,EAH4B,QAItBC,SAAW3B,EAAekI,IAC9BoB,EAAM5H,EAAST,KACrBoI,GA7CqBpI,EA6CI0C,EAA6B2F,EAAIrI,MAAM,IA7Cf,CACnDsG,KAAMpH,GAAQoX,kBACdtW,WA8CEoI,GArDuBtH,EAoDXL,EACmBK,SAAW,GArDE,CAC9CwF,KAAMpH,GAAQmX,oBACdvV,aA0CkC,iCA5CV,IAACA,EAKFd,IAuCW,OAAN,uDiCtDvBM,aAAaC,QAAQ,cACtB6H,EAAS4H,MACT5H,EAASrB,MAEXqB,E7B2BoB,uCAAM,WAAOA,GAAP,eAAAjI,EAAA,sDAC5BiI,EAzCiC,CACjC9B,KAAMpH,GAAQkY,wBA0Cd,KACQ7U,EAAeiqB,KAAKC,iBAAiBC,kBAAkBC,WAC1CpqB,EAAawS,gBAHN,gBAG4CA,cACpE3M,EAASoJ,GAAgB,OACfjP,IAAoD,OAAnC,IAAI0lB,MAAM2E,oBAGrCxkB,EAASoJ,GAAgB,QAFzBpJ,EAASoJ,GAAgB,OAI3B,MAAOoK,GACPxT,EAASoJ,GAAgB,OAbC,2CAAN,uD6B1BjBlR,aAAaC,QAAQ,4BACtB6H,G/BwCiBpI,E+BxCMuN,KAAKke,MAAMnrB,aAAaC,QAAQ,4BAA8B,M/BwC1C,CAC/C+F,KAAMpH,GAAQuX,gBACdzW,Y+BxCG,IAEH2e,qBAAU,WAAO,IAAD,EACdsN,GAAa,UAAAnd,EAAK9O,YAAL,eAAWgE,SAAU,GAClCqoB,GAAoB,GACpBvM,YAAW,WACTuM,GAAoB,KACpB,OACF,CAACvd,EAAK9O,OAER,IAAM6sB,EAAgB,SAAC3e,GAED,KAAfA,GACDie,EAAqB,KAGpBjT,EAAO/X,YAAc+X,EAAO/X,WAAW6C,OAAQ,GAC/CkV,EAAOlW,UAAYkW,EAAOlW,SAASgB,OAAQ,GAC3CkV,EAAO5V,QAAU4V,EAAO5V,OAAOU,OAAQ,GACvCkV,EAAO/O,eAAiB+O,EAAO/O,cAAcnG,OAAQ,GACrDkV,EAAOjL,UAAYiL,EAAOlL,YAAcE,KAE3C9F,EAAS0L,GAAU,CACjB3S,WAAY+X,EAAO/X,YAAc,EACjC6B,SAAUkW,EAAOlW,UAAY,GAC7BX,SAAUE,EAAavC,MAAQ,KAC/BiO,SAAUiL,EAAOjL,UAAU,GAC3B3K,OAAQ4V,EAAO5V,QAAU,GACzB0K,WAAYkL,EAAOlL,YAAc,GACjC7D,cAAe+O,EAAO/O,eAAiB,GACvC+D,WAAYA,KAEd9F,EAASyF,GAAoB,EhCvElB,GgCuE+BqL,EAAO/X,YAAc,EAAG+X,EAAO/O,eAAiB,GAAI+O,EAAOlW,UAAY,GAAIkW,EAAO5V,QAAU,GAAI4V,EAAOlL,YAAc,GAAIkL,EAAOjL,UAAU,GAAI1L,EAAavC,MAAQ,KAAMkO,GAAc,IAAK,IACtOwP,EAAQf,KAAK,qBAIXmQ,EAAa,SAACnB,EAA6BoB,EAAsBC,GACrErB,EAAMsB,iBACNvP,EAAQf,KAAK,YAAaoQ,EAAahY,eAAiBiY,EAAkB,IAAKA,EAAgBjY,cAAgB,MA0B3GmY,EAAS,WACb9kB,E7C1CuB,CACzB9B,KAAMpH,EAAQ0V,e6C0CZvU,OAAOC,aAAaK,WAAW,YAC/B+c,EAAQf,KAAK,MAEf,OACE,gCACE,kBAAC,GAAD,CAAkB4P,oBAAqBA,IACvC,yBAAK/R,UAAU,0CAA0CiL,YAAU,yCACjE,yBAAKjL,UAAU,eAAe2S,YAAU,QACtC,yBAAK3S,UAAU,kBACb,4BAAQgH,IAAK+K,EAAqB/R,UAAU,+BAA+BiH,YAAU,yBAAyB2L,wBAAsB,SACpI,uBAAG5S,UAAU,yBAAyB8E,QAAS,kBAAM5B,EAAQf,KAAK,OAAM,yBAAKE,IAAI,YAAYiP,MAAM,KAAK5I,IAAI,UAC5G,yBAAK1I,UAAU,gBACb,wBAAIA,UAAU,iBArCjB9V,OAAOD,KAAKtF,GAAe2V,KAAI,SAAChQ,EAAaqI,GAClD,OACE,wBAAIrI,IAAKqI,GACP,uBAAGmS,QAAS,SAACmD,GAAD,OAAOqK,EAAWrK,EAAE3d,KAAOA,EAAI,0BAAM0V,UAAU,wBAAwB4I,UAAQ,qCAC3F,yBACE5I,UAAU,iEACV6S,UAAQ,mJAER,yBAAK7S,UAAU,kEACb,wBAAIA,UAAU,uCAEVvZ,EAAoBC,EAAeK,OAAOpC,EAAc2F,KAAOgQ,KAAI,SAAC/E,EAAiC5C,GACnG,OAAO,wBAAIrI,IAAKqI,GAAO,uBAAGmS,QAAS,SAACmD,GAAD,OAAOqK,EAAWrK,EAAE3d,EAAIiL,EAAY/G,QAAQ+G,EAAY/G,iBA6B/F,4BAAI,uBAAGsW,QAAS,kBAAK5B,EAAQf,KAAK,YAA9B,UACJ,4BAAI,uBAAG2C,QAAS,kBAAK5B,EAAQf,KAAK,gBAA9B,aAEF,UAAAqB,EAAShe,YAAT,eAAe+F,UACf,4BAAI,uBAAGuZ,QAAS,kBAAI5B,EAAQf,KAAK,YAA7B,aAMZ,yBAAKnC,UAAU,mBACb,uBAAGA,UAAS,UAA2B,KAAtB0R,EAA2B,iDAAmD,qCAAuCrrB,KAAK,IAAIysB,iBAAe,SAE9J,yBAAK9S,UAAU,uDAAuD6S,UAAQ,4HAC5E,yBAAK7S,UAAU,gBACb,yBAAKA,UAAU,+BAA+B+H,UAAQ,QACpD,yBAAK/H,UAAU,mBACb,yBAAKA,UAAU,2CACb,2BAAOA,UAAU,kBAAkBlU,KAAK,SAASinB,YAAY,eAC3DzkB,MAAOojB,EACP1J,SAAU,SAACC,GAAD,OAAO0J,EAAqB1J,EAAEC,cAAc5Z,QACtD0kB,WAAY,SAAC/K,GAAgB,UAAVA,EAAE3d,KAAoB+nB,EAAcpK,EAAEC,cAAc5Z,YAG7E,yBAAK0R,UAAU,gBAAgB8E,QAAS,kBAAIuN,EAAc,MAAK,uBAAGrS,UAAU,2BAA2BmH,WAAS,aAItH,uBAAGnH,UAAU,gDAAiD4I,UAAQ,SACtE,yBAAK5I,UAAU,oCAAoCiT,cAAY,mDAAmDxR,MAAO,CAAEyR,SAAU,UACnI,wBAAIlT,UAAU,0BACZ,4BACE,uBAAG8E,QAAS,wBAAM,UAAAtB,EAAShe,YAAT,eAAeqjB,QAAU3F,EAAQf,KAAK,2BAA6Be,EAAQf,KAAK,YAAlG,WAEF,4BAAI,uBAAG2C,QAAS,wBAAK,UAAAtB,EAAShe,YAAT,eAAeqjB,QAAS3F,EAAQf,KAAK,4BAA8Be,EAAQf,KAAK,YAAjG,aACJ,4BAAI,uBAAG2C,QAAS,wBAAK,UAAAtB,EAAShe,YAAT,eAAeqjB,QAAS3F,EAAQf,KAAK,6BAA8Be,EAAQf,KAAK,YAAjG,aACJ,wBAAInC,UAAU,oBAEX,UAAAwD,EAAShe,YAAT,eAAeqjB,QACf,4BAAI,uBAAG/D,QAAS,kBAAK4N,MAAjB,YACJ,4BAAI,uBAAG5N,QAAS,kBAAI5B,EAAQf,KAAK,YAA7B,YAKX,uBAAG6E,IAAK8K,EAAa9R,UAAU,gDAAgD3Z,KAAK,IAAI4gB,YAAU,2BAChG,0BAAM2B,UAAQ,SAEZ4I,EAAY,GACZ,0BAAMxR,UAAW4R,EAAmB,uBAAyB,aAAcJ,OAMrF,kBAAC,GAAD,CACAM,YAAaA,EACbhJ,SAAUxU,EAAK9O,MAAQ,OCtKvB2tB,GAA2C,SAACpT,GAAkB,IAAD,cAC3DmD,EAAUC,cACVvV,EAAWqV,cAFgD,EAG/BS,mBAAS,GAHsB,oBAG1D0P,EAH0D,KAG/CC,EAH+C,OAIf3P,mBAAS,KAJM,oBAI1D4P,EAJ0D,KAIvCC,EAJuC,OAKb7P,mBAAS,KALI,oBAK1D8P,EAL0D,KAKtCC,EALsC,OAMnB/P,mBAAS,KANU,oBAM1DgQ,EAN0D,KAMzCC,EANyC,OAOnBjQ,mBAAS,KAPU,oBAO1DkQ,EAP0D,KAOzCC,EAPyC,KAQ3D9rB,EAAewb,aAAoC,SAAArJ,GAAK,OAAIA,EAAMnS,gBAClE0b,EAAaF,aAAuC,SAAArJ,GAAK,OAAIA,EAAMxJ,OAAOlL,MAAQ,MAClFge,EAAWD,aAAY,SAACrJ,GAAD,OAAqBA,EAAMrO,QAEtDid,EAEE/I,EAFF+I,SACAgJ,EACE/R,EADF+R,YAGF3N,qBAAU,WACR,IAAI2P,EAAY,EAKhB,GAJAhL,EAASzgB,SAAQ,YAAqB,IAAlBoM,EAAiB,EAAjBA,WAClBqf,GAAa/sB,OAAO0N,MAEtB4e,EAAaS,GACa,IAAtBrQ,EAAWja,OAAc,CAAC,IAAD,IACvBuqB,EAAgBpsB,GAA2B,UAAA6b,EAAShe,YAAT,eAAe8B,WAAY,IAAKwsB,EAAUpsB,YACrFssB,EAAqB3sB,GAAsB,UAAAmc,EAAShe,YAAT,eAAe8B,WAAY,IAAKwsB,EAAUpsB,YACrFusB,EAActsB,EAA2B8b,EAAW,GAAGnV,MAAO0lB,EAAmBtsB,YACjFwsB,EAAmB7sB,EAAsBoc,EAAW,GAAGnV,OAAS,IAAK0lB,EAAmBtsB,YAC5FisB,EAAmBK,GACnBT,EAAqBQ,GACrBF,EAAmBI,GACnBR,EAAsBS,OACjB,CAAC,IAAD,IACDH,EAAgBpsB,GAA2B,UAAA6b,EAAShe,YAAT,eAAe8B,WAAY,IAAKwsB,EAAUpsB,YACrFssB,EAAqB3sB,GAAsB,UAAAmc,EAAShe,YAAT,eAAe8B,WAAY,IAAKwsB,EAAUpsB,YACzF6rB,EAAqBQ,GACrBN,EAAsBO,MAIvB,CAAClL,EAAUtF,EAAShe,KAAKie,IAM5B,OACE,yBAAKjd,GAAG,iBAAiB2tB,eAAa,6BACpC,2BAAOnU,UAAU,sCACf,yBAAKA,UAAU,+FACb,4BAAQA,UAAU,yCAChB,yBAAKA,UAAU,0BAA0B+H,UAAQ,QAC/C,yBAAK/H,UAAU,mBAAkB,yBAAKA,UAAU,SAAf,SACjC,4BAAQA,UAAU,qBAAqBlU,KAAK,SAASqb,WAAS,WAGlE,yBAAKnH,UAAU,2CACb,wBAAIA,UAAU,2BAEV8I,EAASxO,KAAI,SAAChG,EAAoB3B,GAAmB,IAAD,EAClD,OACE,wBAAIrI,IAAKqI,EAAOqN,UAAU,qBACxB,iCACE,yBAAKA,UAAU,gBAAgB+H,UAAQ,QACrC,yBAAK/H,UAAU,gBACb,yBAAKA,UAAU,yBACb,uBAAGA,UAAU,eAAe8E,QAAS,WAAO,IAAD,EAAC5B,EAAQf,KAAK,mBAAqB7N,EAAKtC,WAAY,UAAA8f,EAAYrN,eAAZ,SAAqB9Z,UAClH,4BAAQqV,UAAU,qBAAoB,yBAAKqC,IAAKxd,EAAkByP,EAAKgB,iBAAkBoT,IAAKpU,EAAKe,mBAIzG,yBAAK2K,UAAU,mBACb,yBAAKA,UAAU,+BAA+B1L,EAAKiB,aACnD,uBAAGyK,UAAU,gCAAgC8E,QAAS,WAAO,IAAD,EAAC5B,EAAQf,KAAK,mBAAqB7N,EAAKtC,WAAY,UAAA8f,EAAYrN,eAAZ,SAAqB9Z,UAAW2J,EAAKpJ,aACrJ,yBAAK8U,UAAU,gDAAgD+H,UAAQ,QACrE,yBAAK/H,UAAU,gCAAgCpY,EAAgBG,EAAavC,MAAQ,MAApF,IAA4F8O,EAAKG,YAEjG,yBAAKuL,UAAU,+BAA+B1L,EAAKK,gBAAnD,SAAuE/M,EAAgBG,EAAavC,MAAQ,MAA5G,IAAoH8O,EAAKI,kBAI3H,UAAC8O,EAAShe,YAAV,aAAC,EAAeqjB,SAChB,6BACE,uBAAG7I,UAAU,iDACb4I,UAAQ,0BACRwL,aAAW,SACXtP,QAAS,WA3CnClX,EAAS8H,GA2C6CpB,GA3CpB,cAsDF,IAApBwU,EAAStf,QACT,wBAAIwW,UAAU,qBACZ,iCACE,yBAAKA,UAAU,gBAAgB+H,UAAQ,QACrC,yBAAK/H,UAAU,gBACb,yBAAKA,UAAU,2BAMjB,yBAAKA,UAAU,mBAEb,0BAAMA,UAAU,iCAAhB,kBACA,yBAAKA,UAAU,gDAAgD+H,UAAQ,QACrE,yBAAK/H,UAAU,gCAAf,oCAShB,4BAAQA,UAAU,oBAEb,UAAAwD,EAAShe,YAAT,eAAe8B,WAAwC,OAA5B,UAAAkc,EAAShe,YAAT,eAAe8B,WAA0C,IAAtBmc,EAAWja,SAC1E,oCACE,yBAAKwW,UAAU,gBAAgB+H,UAAQ,QACrC,yBAAK/H,UAAU,+CAAf,YACA,yBAAKA,UAAU,iBAAiBpY,EAAgBG,EAAavC,MAAQ,MAArE,IAA6E4tB,KAG7E,UAAA5P,EAAShe,YAAT,eAAe8B,WAAwC,OAA5B,UAAAkc,EAAShe,YAAT,eAAe8B,WAC1C,yBAAK0Y,UAAU,gBAAgB+H,UAAQ,QACrC,yBAAK/H,UAAU,+CAAf,uBAAwEwD,EAAShe,YAAjF,aAAwE,EAAe8B,SAAvF,MACA,yBAAK0Y,UAAU,kBAAf,KAAmCpY,EAAgBG,EAAavC,MAAQ,MAAxE,IAAgF8tB,KAMhE,IAAtB7P,EAAWja,QACX,qCAEI,UAAAga,EAAShe,YAAT,eAAe8B,WAAwC,OAA5B,UAAAkc,EAAShe,YAAT,eAAe8B,WAC1C,yBAAK0Y,UAAU,gBAAgB+H,UAAQ,QACrC,yBAAK/H,UAAU,iCAAf,oBACA,6BAAMpY,EAAgBG,EAAavC,MAAQ,MAA3C,IAAmDkuB,IAIvD,yBAAK1T,UAAU,gBAAgB+H,UAAQ,QACrC,yBAAK/H,UAAU,iCAAf,WAAwDyD,EAAW,IAAMA,EAAW,GAAGnV,MAAvF,MACA,yBAAK0R,UAAU,kBAAf,UAAmCpY,EAAgBG,EAAavC,MAAQ,MAAxE,IAAgFouB,KAKtF,yBAAK5T,UAAU,gBAAgB+H,UAAQ,QACrC,yBAAK/H,UAAU,uCAAf,SACA,yBAAKA,UAAU,wBAAwBpY,EAAgBG,EAAavC,MAAQ,MAA5E,IAAoFguB,IAEtF,yBAAKxT,UAAU,wEAAwE+H,UAAQ,QAC9F,8BACC,6BACE,4BAAQ/H,UAAU,8EAChB8E,QAAS,WAAO,IAAD,KACb,UAAAtB,EAAShe,YAAT,eAAeqjB,QAAS3F,EAAQf,KAAK,SAAYe,EAAQf,KAAK,UAAW,UAAA2P,EAAYrN,eAAZ,SAAqB9Z,SAChGogB,SAAwB,IAAdqI,GAHZ,mBCnKViB,GAAmD,SAACtU,GAExD,IAAMmD,EAAUC,cACVzc,EAAgB6c,aAAmC,SAAArJ,GAAK,OAAIA,EAAMrT,eAClEyrB,EAAa,SAACnB,EAA6BoB,EAAsBC,GAA8B,IAAD,EAClGrB,EAAMsB,iBACNvP,EAAQf,KAAK,YAAcoQ,EAAahY,eAAiBiY,EAAkB,IAAMA,EAAgBjY,cAAgB,KACjH,UAAAwF,EAAMgS,oBAAoBtN,eAA1B,SAAmC9Z,SAuBrC,OACE,yBAAKnE,GAAG,gBAAgB2tB,eAAa,iBACnC,2BAAOnU,UAAU,sCACf,yBAAKA,UAAU,0DACb,4BAAQA,UAAU,yCAChB,6BACE,uBAAGA,UAAU,6BAA6B8E,QAAS,SAACmD,GAAD,OAAOA,EAAEwK,mBAA5D,gBAMJ,yBAAKzS,UAAU,8BACb,wBAAIA,UAAU,oDAAoDsU,SAAO,QAhC1EpqB,OAAOD,KAAKtF,GAAe2V,KAAI,SAAChQ,EAAaqI,GAClD,OACE,wBAAIqN,UAAU,YAAY1V,IAAKqI,GAC7B,uBAAGmS,QAAS,SAACmD,GAAD,OAAOA,EAAEwK,mBAAmBnoB,GACxC,wBAAI0V,UAAU,8BAEVvZ,EAAoBC,EAAeK,OAAOpC,EAAc2F,KAAOgQ,KAAI,SAAC/E,EAAiC5C,GACnG,OAAO,wBAAIrI,IAAKqI,GAAO,uBAAGmS,QAAS,SAACmD,GAAD,OAAOqK,EAAWrK,EAAG3d,EAAKiL,EAAY/G,QAAQ+G,EAAY/G,UAGjG,wBAAIwR,UAAU,kBACN,uBAAG8E,QAAS,SAACmD,GAAD,OAAOqK,EAAWrK,EAAG3d,IAAM0V,UAAU,kDAAiD,+CAA0B,0BAAM4I,UAAQ,4CAoChJ,4BAAI,uBAAG9D,QAAS,WAAM,IAAD,EAAC5B,EAAQf,KAAK,UAAU,UAAApC,EAAMgS,oBAAoBtN,eAA1B,SAAmC9Z,UAA5E,UACJ,4BAAI,uBAAGma,QAAS,WAAM,IAAD,EAAC5B,EAAQf,KAAK,cAAe,UAAApC,EAAMgS,oBAAoBtN,eAA1B,SAAmC9Z,UAAjF,kBC9DZ4pB,GAA2C,SAACxU,GAAkB,IAC1DyU,EAAoCzU,EAApCyU,iBAAkBC,EAAkB1U,EAAlB0U,cACpBvR,EAAUC,cAFiD,EAG3BO,mBAAS,GAHkB,oBAG1DgR,EAH0D,KAG7CC,EAH6C,OAIjCjR,oBAAS,GAJwB,oBAI1DkR,EAJ0D,KAIhDC,EAJgD,OAMpCpF,cAAtBnnB,EAN0D,EAM1DA,QAAS0J,EANiD,EAMjDA,UAQhB,OANAmS,qBAAU,WACM,WAAX7b,GAAwB0J,GACzB2iB,EAAenwB,EAAYswB,WAE7B,CAACxsB,EAAS0J,IAGV,yBAAKgO,UAAU,+CACb,yBAAKA,UAAU,4DAA4DiL,YAAU,wCACnF,yBAAKjL,UAAU,kBACb,yBAAKA,UAAU,+BAA+B+H,UAAQ,QACpD,6BACE,uBAAG/H,UAAS,UAAK4U,EAAU,wDAA0D,+CACrF9P,QAAS,WAAO2P,GAAc,GAAOI,GAAY,GAAO3R,EAAQf,KAAK,YACnE,0BAAMnC,UAAU,yBAAyB4I,UAAQ,2BACjD,wCAGJ,6BACE,4BAAQ5I,UAAS,UAAM4U,EAAoE,8CAA1D,yDAChCG,MAAM,MACLjQ,QAAS,WAAO2P,GAAc,GAAQI,GAAY,IAClD9J,SAAU2J,IAAgBlwB,EAAYwwB,OAASN,IAAgBlwB,EAAYywB,QAE3E,0BAAMrM,UAAQ,gCACd,yCAKR,6BACE,6BACE,wBAAI5I,UAAU,gCACZ,wBAAIA,UAAS,UAAK0U,IAAgBlwB,EAAYwwB,MAAQ,YAAa,KACjE,uBAAGlQ,QAAS,WAAO0P,EAAiBhwB,EAAYwwB,OAAOH,GAAY,GAAMJ,GAAc,GAAOE,EAAenwB,EAAYwwB,SAAzH,UAEF,wBAAIhV,UAAS,UAAK0U,IAAgBlwB,EAAYywB,OAAS,YAAa,KAClE,uBAAGnQ,QAAS,WAAO0P,EAAiBhwB,EAAYywB,QAAQJ,GAAY,GAAMJ,GAAc,GAAOE,EAAenwB,EAAYywB,UAA1H,WAEF,wBAAIjV,UAAS,UAAK0U,IAAgBlwB,EAAYswB,QAAU,YAAa,KACnE,uBAAGhQ,QAAS,WAAO0P,EAAiBhwB,EAAYswB,SAASH,EAAenwB,EAAYswB,WAApF,aAEF,wBAAI9U,UAAS,UAAK0U,IAAgBlwB,EAAY0wB,YAAc,YAAa,KACvE,uBAAGpQ,QAAS,WAAO0P,EAAiBhwB,EAAY0wB,aAAaP,EAAenwB,EAAY0wB,eAAxF,iBAEF,wBAAIlV,UAAS,UAAK0U,IAAgBlwB,EAAY2wB,KAAO,YAAa,KAChE,uBAAGrQ,QAAS,WAAO0P,EAAiBhwB,EAAY2wB,MAAMR,EAAenwB,EAAY2wB,QAAjF,SAEF,wBAAInV,UAAS,UAAK0U,IAAgBlwB,EAAY4wB,OAAS,YAAa,KAClE,uBAAGtQ,QAAS,WAAO0P,EAAiBhwB,EAAY4wB,QAAQT,EAAenwB,EAAY4wB,UAAnF,WAEF,wBAAIpV,UAAS,UAAK0U,IAAgBlwB,EAAY6wB,QAAU,YAAa,KACnE,uBAAGvQ,QAAS,WAAO0P,EAAiBhwB,EAAY6wB,SAASV,EAAenwB,EAAY6wB,WAApF,YAEF,wBAAIrV,UAAS,UAAK0U,IAAgBlwB,EAAY8wB,QAAU,YAAa,KACnE,uBAAGxQ,QAAS,WAAO0P,EAAiBhwB,EAAY8wB,SAASX,EAAenwB,EAAY8wB,WAApF,kB,qBCpDVC,GAAmD,SAACxV,GAExD,IAAMnS,EAAWqV,cAFwD,EAGrCS,mBAAS,IAH4B,oBAGlE8R,EAHkE,KAGtDC,EAHsD,OAI3C/R,mBAAS,IAJkC,oBAIlEgS,EAJkE,KAIzDC,EAJyD,OAK7BjS,oBAAS,GALoB,oBAKlEkS,EALkE,KAKlDC,EALkD,KAMnErN,EAAcjF,aAAqC,SAAArJ,GAAK,OAAIA,EAAM5R,QAAQ9C,MAAQ,MAClFswB,EAAoBvS,aAA2C,SAAArJ,GAAK,OAAIA,EAAM+E,cAAczZ,MAAQ,MAPjC,EAQvCke,mBAEhC,IAVuE,oBAQlEqS,EARkE,KAQvDC,EARuD,KAYrEC,EAAyH,GACvHC,EAAUnW,EAAMoW,eAUpBF,EARElW,EAAMqW,cAAgB5xB,EAAY4wB,QACpCrV,EAAMqW,cAAgB5xB,EAAY2wB,MAClCpV,EAAMqW,cAAgB5xB,EAAY0wB,aAClCnV,EAAMqW,cAAgB5xB,EAAY6wB,SAClCtV,EAAMqW,cAAgB5xB,EAAYswB,SAClC/U,EAAMqW,cAAgB5xB,EAAYywB,QAClClV,EAAMqW,cAAgB5xB,EAAY8wB,SAClCvV,EAAMqW,cAAgB5xB,EAAYwwB,MACtBjV,EAAMkW,UAEN,GAGd9R,qBAAU,WACJpE,EAAMqW,cAAgB5xB,EAAY4wB,QACpCxnB,EAASD,MACTgoB,EAAW,WACF5V,EAAMqW,cAAgB5xB,EAAY2wB,MAC3CvnB,EAASkB,MACT6mB,EAAW,SACF5V,EAAMqW,cAAgB5xB,EAAY0wB,aAC3CtnB,EAASiC,MACT8lB,EAAW,kBACF5V,EAAMqW,cAAgB5xB,EAAY6wB,SAC3CznB,EvCoHY,uCAAM,WAAOA,GAAP,iBAAAjI,EAAA,6DACtBiI,EAASmC,MADa,SAGC5K,EAAQ,kBAHT,QAGhBc,EAHgB,QAIVC,SAAW3B,EAAekI,IAC9BoB,EAAM5H,EAAST,KACrBoI,EAASuC,GAAUtC,EAAIrI,MAAQ,MAG/BoI,EAASqC,GADGhK,EACaK,SAAW,KAThB,2CAAN,uDuCnHZqvB,EAAW,YACF5V,EAAMqW,cAAgB5xB,EAAYswB,SAC3ClnB,EtC6Kc,uCAAM,WAAOA,GAAP,iBAAAjI,EAAA,6DACxBiI,EAASoD,MADe,SAED7L,EAAQ,gBAFP,QAElBc,EAFkB,QAIXC,SAAW3B,EAAekI,IAC/BoB,EAAM5H,EAAST,KACrBoI,EAAS0D,GAAYzD,EAAIrI,MAAQ,IAAI,KAGrCoI,EAASwD,GADGnL,EACcK,SAAW,KATf,2CAAN,uDsC5KdqvB,EAAW,aACF5V,EAAMqW,cAAgB5xB,EAAYywB,QAC3CrnB,EhC0HiB,eAACib,EAAD,uDAAQ,EAAR,8CAAc,WAAMjb,GAAN,iBAAAjI,EAAA,6DACnCiI,EAASsJ,MAD0B,SAEZ/R,EAAQ,0BAA0B0jB,GAFtB,QAE7B5iB,EAF6B,QAIvBC,SAAW3B,EAAekI,IAC9BoB,EAAM5H,EAAST,KACrBoI,EAAS2J,GAAkB1J,EAAIrI,MAAQ,MAGvCoI,EAAS6J,GADGxR,EACYK,SAAW,KATF,2CAAd,sDgC1HR+vB,IACTV,EAAW,WACF5V,EAAMqW,cAAgB5xB,EAAY8wB,SAC3C1nB,EAAS8K,MACTid,EAAW,aACF5V,EAAMqW,cAAgB5xB,EAAYwwB,QAC3CpnB,EjDkGa,uCAAO,WAAOpB,GAAP,eAAA7G,EAAA,6DACxB6G,EAASR,KADe,SAGA7G,EAAQ,uBAHR,QAGlBc,EAHkB,QAKXC,SAAW3B,EAAekI,GACrCD,GAzHgBX,EAyHI5F,EAAST,KAAKA,KAzHA,CACpCsG,KAAMpH,EAAQ2V,aACd7O,SAAUK,KAyHRW,EAASN,EAAU,mCARG,iCAnHP,IAACL,IAmHM,OAAP,uDiDjGb8pB,EAAW,YAEZ,IAEHxR,qBAAU,WACR6R,EAAaC,GAAa,MACzB,CAACA,IAEJ9R,qBAAU,WACR,GAAI8R,GAAaA,EAAUzsB,OAAS,EAAG,CACrC,IAAMhE,EAAQywB,EAAoBrvB,QAAO,YAIE,IAHzC0H,EAGwC,EAHxCA,MAAOE,EAGiC,EAHjCA,KACPzF,EAEwC,EAFxCA,KAAM6F,EAEkC,EAFlCA,oBACNif,EACwC,EADxCA,YAAa9U,EAC2B,EAD3BA,YACb1M,EAAwC,EAAxCA,aAAc0d,EAA0B,EAA1BA,OAAQ3F,EAAkB,EAAlBA,YACtB,OAAQ9V,GAASA,EAAMiM,cAAc+b,SAASd,EAAWjb,gBACnD/L,GAAQA,EAAK+L,cAAc+b,SAASd,EAAWjb,gBAC/CxR,GAAQA,EAAKwR,cAAc+b,SAASd,EAAWjb,gBAC/C3L,GAAuBA,EAAoB2L,cAAc+b,SAASd,EAAWjb,gBAC7EsT,GAAeA,EAAYtT,cAAc+b,SAASd,EAAWjb,gBAC7DxB,GAAeA,EAAYwB,cAAc+b,SAASd,EAAWjb,gBAC7DlO,GAAgBA,EAAakO,cAAc+b,SAASd,EAAWjb,gBAC/DwP,GAAUA,EAAOxP,cAAc+b,SAASd,EAAWjb,gBACnD6J,GAAeA,EAAY7J,cAAc+b,SAASd,EAAWjb,kBAErEyb,EAAaxwB,MAEd,CAACgwB,IAGJ,IAAMe,EAAmB,WACvBV,GAAkB,GAClBjoB,EvBXyB,uCAAM,WAAOA,GAAP,iBAAAjI,EAAA,6DACjCiI,EAxDkC,CAClC9B,KAAMpH,GAAQwa,0BAsDmB,SAEV/Z,EAAQ,oBAFE,QAE3Bc,EAF2B,QAIpBC,SAAW3B,EAAekI,IAC/BoB,EAAM5H,EAAST,KACrB2f,QAAQC,IAAIvX,GACZD,GArDsBpI,EAqDIqI,EAAIrI,MAAQ,GArDe,CACvDsG,KAAMpH,GAAQ0a,oBACd5Z,WAsDEoI,GA7DwBtH,EA4DZL,EACoBK,SAAW,GA7DE,CAC/CwF,KAAMpH,GAAQya,sBACd7Y,aAiDiC,iCAnDR,IAACA,EAKFd,IA8CS,OAAN,wDuBoB3B,OAPA2e,qBAAU,YACJyR,GAAkBE,EAAkBtsB,OAAS,IAC/CE,EAAYosB,GACZD,GAAkB,GAClBjoB,EvB1DiC,CACrC9B,KAAMpH,GAAQ2a,iCuB2DZ,CAACtM,KAAKC,UAAU8iB,KAEhB,yBAAK9V,UAAU,kCACb,yBAAKA,UAAU,6DAEb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,mBAEb,yBAAKA,UAAU,OACb,kBAAC,KAAD,CACE+U,MAAOW,EACPQ,QAASA,EACT1wB,KAAMuwB,EACNS,iBAAkBzW,EAAM0W,cAAgB,OACxCC,oBAAyCxW,IAAzBH,EAAM2W,gBAA+B3W,EAAM2W,eAC3DC,gBAAgB,EAChBC,2BAA2B,EAC3BC,yBAAyB,EACzBC,2BAA2B,EAC3BC,eAAgBhX,EAAMgX,eACtBC,oBAAoB,EACpBC,wBAAyBlX,EAAMmX,qBAAuB,kBAACnX,EAAMmX,oBAAP,MACtDC,YAAY,EACZC,kBAAkB,EAClBC,SAAS,EACTC,gBAAgB,EAChBC,OAAO,EACPC,aAAa,EACbC,kBAAkB,EAClBC,iBAAiB,EACjBC,UAAU,EACVC,WAAW,EACXC,mBAEI,yBAAK7X,UAAU,iDAAiD+H,UAAQ,QACtE,yBAAK/H,UAAS,UAAKD,EAAMqW,cAAgB5xB,EAAYywB,OAAS,wDAA0D,yDAA2DlN,UAAQ,QAEvLhI,EAAMqW,cAAgB5xB,EAAYywB,QAClC,oCACE,6BACE,+BACE,0BAAMjV,UAAU,iBAAgB,0BAAMyB,MAAO,CAAEqW,MAAO,SAAWlP,UAAQ,gBAAzE,cACA,0BAAM5I,UAAU,iBAAgB,0BAAMyB,MAAO,CAAEqW,MAAO,SAAWlP,UAAQ,iBAAzE,gBACA,0BAAM5I,UAAU,iBAAgB,0BAAMyB,MAAO,CAAEqW,MAAO,SAAWlP,UAAQ,uBAAzE,sBACA,0BAAM5I,UAAU,iBAAgB,0BAAMyB,MAAO,CAAEqW,MAAO,SAAWlP,UAAQ,qBAAzE,yBAIJ,6BACE,+BACE,0BAAM5I,UAAU,iBAAgB,0BAAMyB,MAAO,CAAEqW,MAAO,UAAYlP,UAAQ,mBAA1E,yBACA,0BAAM5I,UAAU,iBAAgB,0BAAMyB,MAAO,CAAEqW,MAAO,OAASlP,UAAQ,wBAAvE,sBACA,0BAAM5I,UAAU,iBAAgB,0BAAMyB,MAAO,CAAEqW,MAAO,OAASlP,UAAQ,mBAAvE,0BAON7I,EAAMgX,gBACN,6BACE,+BACE,yBAAK/W,UAAU,iBAAgB,8BAAM,0BAAM4I,UAAQ,kBAApB,uCAE7B7I,EAAMqW,cAAgB5xB,EAAYswB,SAClC,oCACE,0BAAM9U,UAAU,iBAAgB,0BAAMyB,MAAO,CAAEqW,MAAO,SAAWlP,UAAQ,gBAAzE,gBAAuGxf,EAAuBof,GAAY,GAA1I,KACA,0BAAMxI,UAAU,iBAAgB,0BAAMyB,MAAO,CAAEqW,MAAO,UAAYlP,UAAQ,gBAA1E,cAAsGxf,EAAuBof,GAAY,GAAzI,SAONzI,EAAMgX,gBAAkBhX,EAAMqW,cAAgB5xB,EAAYywB,QAC5D,8BAEF,yBAAKjV,UAAU,eACb,2BAAOA,UAAU,8CAA8C1R,MAAOknB,EAAYxN,SAAU,SAAAmJ,GAAK,OAAIsE,EAActE,EAAM9D,OAAO/e,QAAQxC,KAAK,OAAOinB,YAAahT,EAAMgY,oBAErKhY,EAAMqW,cAAgB5xB,EAAYywB,QAClC,0BAAMjV,UAAU,kBAAkB4I,UAAQ,uBAC5C9D,QAAS,kBAAIyR,UAgCvByB,aAAa,EACbC,wBAAwB,QACxBC,UAAW,cCzNrBhB,GAAoD,SAAC,GAAc,IAAZ1xB,EAAW,EAAXA,KACrDoI,EAAWqV,cACTzU,EAAwChJ,EAAxCgJ,KAAMF,EAAkC9I,EAAlC8I,MAAO9F,EAA2BhD,EAA3BgD,SACf2vB,EAAqB5U,aAA8B,SAAArJ,GAAK,OAAIA,EAAMrH,UAElEulB,EAAwBvO,aAAU,CACtCC,cAAe,CACbtb,OACAF,QACA9F,YAEF4hB,iBAAkBC,IAAW,CAC3B7b,KAAM6b,MAAaC,SAAS,YAC5Bhc,MAAO+b,MAAaC,SAAS,cAE/BE,SAAU,SAAClc,G3CwIM,IAACuE,E2CvIhBjF,G3CuIgBiF,E2CvIMvE,E3CuIP,uCAA0B,WAAOV,GAAP,iBAAAjI,EAAA,6DAC7CiI,EAASL,MADoC,SAGtBpI,EAAS,iBAAkB,CAChDkzB,mBAAoBxlB,EAAOrE,KAC3B8pB,cAAezlB,EAAOvE,MACtBiqB,UAAW1lB,EAAOrK,WANyB,QAGvCvC,EAHuC,QAShCC,SAAW3B,EAAekI,IAC/BoB,EAAM5H,EAAST,KACrBoI,GA9GyBpI,EA8GI,CAACqN,GA9GiBvM,EA8GRuH,EAAIvH,SAAW,GA9Gc,CACtEwF,KAAMpH,GAAQoW,sBACdtV,OACAc,cA8GEsH,EAASH,GADGxH,EACaK,SAAW,KAdO,iCAnGnB,IAACd,EAAsBc,IAmGJ,OAA1B,2D2CpInB,OACE,0BAAMkkB,SAAU4N,EAAsB1N,aAAc1K,UAAU,qDAAqD+H,UAAQ,QACzH,8BAAU/H,UAAU,eAClB,yBAAKA,UAAU,wDAAwD+H,UAAQ,QAC7E,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,eACA,yCAAOA,UAAU,YAAYxZ,GAAG,OAAOsF,KAAK,SACtCssB,EAAsBxN,cAAc,UAExCwN,EAAsBvN,QAAQrc,MAAQ4pB,EAAsBtN,OAAOtc,KACjE,0BAAMwR,UAAU,kBAAkBoY,EAAsBtN,OAAOtc,MAC7D,KAIV,6BACE,+BACE,yBAAKwR,UAAU,iBAAf,eACA,yCAAOA,UAAU,YAAYlU,KAAK,SAC5BssB,EAAsBxN,cAAc,WAExCwN,EAAsBvN,QAAQvc,OAAS8pB,EAAsBtN,OAAOxc,MAClE,0BAAM0R,UAAU,kBAAkBoY,EAAsBtN,OAAOxc,OAC7D,KAIV,6BACE,+BACE,yBAAK0R,UAAU,iBAAf,iBACA,4BAAQlU,KAAK,SAASkU,UAAU,gCAE5BmY,EAAmBzsB,YACnB,yBAAKsU,UAAU,uBAAuBqC,IAAI,kBAE5C,0CAKR,yBAAKrC,UAAU,mCACdoY,EAAsBI,cAAgB,kBAAC,GAA0BL,OAOpEM,GAAsC,WAE1C,IAAMxC,EAAY1S,aAAsC,SAAArJ,GAAK,OAAIA,EAAMrH,OAAOrN,MAAQ,MAmBtF,OACE,kBAAC,GAAD,CACE2wB,eApBmB,CACrB,CACEptB,KAAM,WACN2vB,SAAU,WACVC,UAAU,GAEZ,CACE5vB,KAAM,cACN2vB,SAAU,OACVC,UAAU,GAEZ,CACE5vB,KAAM,eACN2vB,SAAU,QACVC,UAAU,IAOVvC,YAAa5xB,EAAY4wB,OACzB8B,oBAAsBA,GACtBjB,UAAWA,EACX8B,kBAAkB,sBAClBhB,gBAAkB,KCnGlB6B,GAAyC,WAE7C,IAAMhrB,EAAWqV,cACX4V,EAAehP,aAAU,CAC7BC,cAAe,CACbtb,KAAM,GACNF,MAAO,IAET8b,iBAAkBC,IAAW,CAC3B7b,KAAM6b,MAAaC,SAAS,YAC5Bhc,MAAO+b,MAAaC,SAAS,cAE/BE,SAAU,SAACkG,G5C+GI,IAAC7d,E4C9GdjF,G5C8GciF,E4C9GM6d,E5C8GP,uCAA0B,WAAO9iB,GAAP,iBAAAjI,EAAA,6DAC3CiI,EAASL,MADkC,SAEpBpI,EAAS,iBAC9B,CACEkzB,mBAAoBxlB,EAAOrE,KAC3B8pB,cAAezlB,EAAOvE,MACtBiqB,UAAW,IAN4B,QAErCtyB,EAFqC,QAS9BC,SAAW3B,EAAekI,IAC/BoB,EAAM5H,EAAST,KACrBoI,GAlGmBtH,EAkGIuH,EAAIvH,SAAW,GAlGE,CAC1CwF,KAAMpH,GAAQmW,eACdvU,cAmGEsH,EAASH,GADGxH,EACaK,SAAW,KAdK,iCAvFvB,IAACA,IAuFsB,OAA1B,2D4C3GX6xB,EAAqB5U,aAA8B,SAAArJ,GAAK,OAAIA,EAAMrH,UAMxE,OALAsR,qBAAU,WACJgU,EAAmBxsB,YACrBktB,EAAajN,cAEd,CAACuM,EAAmBxsB,aAErB,0BAAM6e,SAAUqO,EAAanO,aAAc1K,UAAU,kCACnD,yBAAKA,UAAU,6DACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,oCAAoC+H,UAAQ,QACzD,8BAAU/H,UAAU,eAClB,4BAAQA,UAAU,SAAlB,UACA,yBAAKA,UAAU,wDAAwD+H,UAAQ,QAC7E,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,eACA,yCAAOA,UAAU,YAAYxZ,GAAG,OAAOsF,KAAK,SACtC+sB,EAAajO,cAAc,UAE/BiO,EAAahO,QAAQrc,MAAQqqB,EAAa/N,OAAOtc,KAC/C,0BAAMwR,UAAU,kBAAkB6Y,EAAa/N,OAAOtc,MACpD,KAIV,6BACE,+BACE,yBAAKwR,UAAU,iBAAf,eACA,yCAAOA,UAAU,YAAYlU,KAAK,SAC5B+sB,EAAajO,cAAc,WAE/BiO,EAAahO,QAAQvc,OAASuqB,EAAa/N,OAAOxc,MAChD,0BAAM0R,UAAU,kBAAkB6Y,EAAa/N,OAAOxc,OACpD,UASpB,yBAAK0R,UAAU,iCACb,kBAAC,GAA0BmY,GAC3B,4BAAQpN,SAAUoN,EAAmBzsB,WAAYI,KAAK,SAASkU,UAAU,gCAErEmY,EAAmBzsB,YACnB,yBAAKsU,UAAU,uBAAuBqC,IAAI,kBAE5C,2CClENyW,GAAuC,WAE3C,IAAMlrB,EAAWqV,cACX8V,EAAalP,aAAU,CAC3BC,cAAe,CACbtb,KAAM,GACNF,MAAO,GACPlH,gBAAiB,EACjB0B,OAAQ,KAEVshB,iBAAkBC,IAAW,CAC3B7b,KAAM6b,MAAaC,SAAS,YAC5Bhc,MAAO+b,MAAaC,SAAS,YAC7BljB,gBAAiBijB,MAAaC,SAAS,cAEzCE,SAAU,SAACkG,GACT9iB,EAASQ,GAAesiB,OAGtBsI,EAAmBzV,aAA4B,SAAArJ,GAAK,OAAIA,EAAMhT,QAMpE,OALAid,qBAAU,WACJ6U,EAAiBrtB,YACnBotB,EAAWnN,cAEZ,CAACoN,EAAiBrtB,aAEnB,0BAAM6e,SAAUuO,EAAWrO,aAAc1K,UAAU,kCACjD,yBAAKA,UAAU,6DACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,oCAAoC+H,UAAQ,QACzD,8BAAU/H,UAAU,eAClB,4BAAQA,UAAU,SAAlB,QACA,yBAAKA,UAAU,wDAAwD+H,UAAQ,QAC/E,6BACI,+BACE,yBAAK/H,UAAU,iBAAf,oBACA,0CAAQA,UAAU,YAAYxZ,GAAG,mBAC3BuyB,EAAWnO,cAAc,oBAC3B,4BAAQtgB,IAAI,IAAIgE,MAAO,GAAvB,YACA,4BAAQhE,IAAI,IAAIgE,MAAO,GAAvB,YACA,4BAAQhE,IAAI,IAAIgE,MAAO,GAAvB,SACA,4BAAQhE,IAAI,IAAIgE,MAAO,GAAvB,kBACA,4BAAQhE,IAAI,IAAIgE,MAAO,GAAvB,cAGFyqB,EAAWlO,QAAQzjB,iBAAmB2xB,EAAWjO,OAAO1jB,gBACtD,0BAAM4Y,UAAU,kBAAkB+Y,EAAWjO,OAAO1jB,iBAClD,KAIV,6BACE,+BACE,yBAAK4Y,UAAU,iBAAf,aACA,yCAAOA,UAAU,YAAYxZ,GAAG,OAAOsF,KAAK,SACtCitB,EAAWnO,cAAc,UAE7BmO,EAAWlO,QAAQrc,MAAQuqB,EAAWjO,OAAOtc,KAC3C,0BAAMwR,UAAU,kBAAkB+Y,EAAWjO,OAAOtc,MAClD,KAIV,6BACE,+BACE,yBAAKwR,UAAU,iBAAf,cACA,yCAAOA,UAAU,YAAYlU,KAAK,SAC5BitB,EAAWnO,cAAc,WAE7BmO,EAAWlO,QAAQvc,OAASyqB,EAAWjO,OAAOxc,MAC5C,0BAAM0R,UAAU,kBAAkB+Y,EAAWjO,OAAOxc,OAClD,UASpB,yBAAK0R,UAAU,iCACb,kBAAC,GAA0BgZ,GAC3B,4BAAQjO,SAAUiO,EAAiBttB,WAAYI,KAAK,SAASkU,UAAU,gCAEnEgZ,EAAiBttB,YACjB,yBAAKsU,UAAU,uBAAuBqC,IAAI,kBAE5C,2CCvFN4W,GAAoC,WAExC,IAAMhD,EAAY1S,aAAqC,SAAArJ,GAAK,OAAIA,EAAMhT,KAAK1B,MAAQ,MAwBnF,OACE,kBAAC,GAAD,CACE2wB,eAzBmB,CACrB,CACEptB,KAAM,SACN2vB,SAAU,SACVC,UAAU,GAEZ,CACE5vB,KAAM,mBACN2vB,SAAU,sBACVC,UAAU,GAEZ,CACE5vB,KAAM,YACN2vB,SAAU,OACVC,UAAU,GAEZ,CACE5vB,KAAM,aACN2vB,SAAU,QACVC,UAAU,IAOVvC,YAAa5xB,EAAY2wB,KACzB+B,oBAAqBA,GACrBjB,UAAWA,EACX8B,kBAAkB,oBAClBhB,gBAAgB,KAIhBG,GAAoD,SAAC,GAAc,IAAZ1xB,EAAW,EAAXA,KACrDoI,EAAWqV,cACTzU,EAAsDhJ,EAAtDgJ,KAAMF,EAAgD9I,EAAhD8I,MAAOxF,EAAyCtD,EAAzCsD,OAAQ1B,EAAiC5B,EAAjC4B,gBACvB4xB,EAAmBzV,aAA4B,SAAArJ,GAAK,OAAIA,EAAMhT,QAE9DgyB,EAAsBrP,aAAU,CACpCC,cAAe,CACbtb,OACAF,QACAxF,SACA1B,mBAEFgjB,iBAAkBC,IAAW,CAC3B7b,KAAM6b,MAAaC,SAAS,YAC5Bhc,MAAO+b,MAAaC,SAAS,YAC7BljB,gBAAiBijB,MAAaC,SAAS,cAEzCE,SAAU,SAAClc,GACTV,EAASQ,GAAcE,OAG3B,OACE,0BAAMkc,SAAU0O,EAAoBxO,aAAc1K,UAAU,qDAAqD+H,UAAQ,QACvH,8BAAU/H,UAAU,eAClB,yBAAKA,UAAU,wDAAwD+H,UAAQ,QAC7E,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,oBACA,0CAAQA,UAAU,YAAYxZ,GAAG,mBAC3B0yB,EAAoBtO,cAAc,oBACtC,4BAAQtgB,IAAI,IAAIgE,MAAO,GAAvB,YACA,4BAAQhE,IAAI,IAAIgE,MAAO,GAAvB,YACA,4BAAQhE,IAAI,IAAIgE,MAAO,GAAvB,SACA,4BAAQhE,IAAI,IAAIgE,MAAO,GAAvB,kBACA,4BAAQhE,IAAI,IAAIgE,MAAO,GAAvB,cAGA4qB,EAAoBrO,QAAQzjB,iBAAmB8xB,EAAoBpO,OAAO1jB,gBACxE,0BAAM4Y,UAAU,kBAAkBkZ,EAAoBpO,OAAO1jB,iBAC3D,KAIV,6BACE,+BACE,yBAAK4Y,UAAU,iBAAf,aACA,yCAAOA,UAAU,YAAYxZ,GAAG,OAAOsF,KAAK,SACtCotB,EAAoBtO,cAAc,UAEtCsO,EAAoBrO,QAAQrc,MAAQ0qB,EAAoBpO,OAAOtc,KAC7D,0BAAMwR,UAAU,kBAAkBkZ,EAAoBpO,OAAOtc,MAC3D,KAIV,6BACE,+BACE,yBAAKwR,UAAU,iBAAf,cACA,yCAAOA,UAAU,YAAYlU,KAAK,SAC5BotB,EAAoBtO,cAAc,WAEtCsO,EAAoBrO,QAAQvc,OAAS4qB,EAAoBpO,OAAOxc,MAC9D,0BAAM0R,UAAU,kBAAkBkZ,EAAoBpO,OAAOxc,OAC3D,KAIV,6BACE,+BACE,yBAAK0R,UAAU,iBAAf,eACA,4BAAQlU,KAAK,SAASkU,UAAU,gCAE5BgZ,EAAiBttB,YACjB,yBAAKsU,UAAU,uBAAuBqC,IAAI,kBAE5C,0CAKR,yBAAKrC,UAAU,mCACZkZ,EAAoBV,cAAgB,kBAAC,GAA0BQ,OCvHpEG,GAA8C,WAElD,IAAMvrB,EAAWqV,cACXmW,EAAoBvP,aAAU,CAClCC,cAAe,CACbtb,KAAM,GACNF,MAAO,GACPxH,kBAAmB,EACnB6I,cAAe,KAEjBya,iBAAkBC,IAAW,CAC3B7b,KAAM6b,MAAaC,SAAS,YAC5Bhc,MAAO+b,MAAaC,SAAS,YAC7BxjB,kBAAmBujB,MAAaC,SAAS,YAAY+O,SAAS,EAAG,cAEnE7O,SAAU,SAACkG,GACT9iB,EAAS0B,GAAqBohB,OAG5B4I,EAA0B/V,aAAmC,SAAArJ,GAAK,OAAIA,EAAMrT,eAMlF,OALAsd,qBAAU,WACJmV,EAAwB3tB,YAC1BytB,EAAkBxN,cAEnB,CAAC0N,EAAwB3tB,aAE1B,0BAAM6e,SAAU4O,EAAkB1O,aAAc1K,UAAU,kCACxD,yBAAKA,UAAU,6DACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,oCAAoC+H,UAAQ,QACzD,8BAAU/H,UAAU,eAClB,4BAAQA,UAAU,SAAlB,eACA,yBAAKA,UAAU,wDAAwD+H,UAAQ,QAC7E,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,oBACA,0CAAQA,UAAU,YAAYxZ,GAAG,qBAC3B4yB,EAAkBxO,cAAc,sBACpC,4BAAQtgB,IAAI,IAAIgE,MAAO,GAAvB,UACA,4BAAQhE,IAAI,IAAIgE,MAAO,GAAvB,YACA,4BAAQhE,IAAI,IAAIgE,MAAO,GAAvB,YACA,4BAAQhE,IAAI,IAAIgE,MAAO,GAAvB,SACA,4BAAQhE,IAAI,IAAIgE,MAAO,GAAvB,kBACA,4BAAQhE,IAAI,IAAIgE,MAAO,GAAvB,cAGA8qB,EAAkBvO,QAAQ/jB,mBAAqBsyB,EAAkBtO,OAAOhkB,kBACtE,0BAAMkZ,UAAU,kBAAkBoZ,EAAkBtO,OAAOhkB,mBACzD,KAIV,6BACE,+BACE,yBAAKkZ,UAAU,iBAAf,oBACA,yCAAOA,UAAU,YAAYxZ,GAAG,OAAOsF,KAAK,SACtCstB,EAAkBxO,cAAc,UAEpCwO,EAAkBvO,QAAQrc,MAAQ4qB,EAAkBtO,OAAOtc,KACzD,0BAAMwR,UAAU,kBAAkBoZ,EAAkBtO,OAAOtc,MACzD,KAIV,6BACE,+BACE,yBAAKwR,UAAU,iBAAf,2BACA,yCAAOA,UAAU,YAAYlU,KAAK,SAC5BstB,EAAkBxO,cAAc,WAEpCwO,EAAkBvO,QAAQvc,OAAS8qB,EAAkBtO,OAAOxc,MAC1D,0BAAM0R,UAAU,kBAAkBoZ,EAAkBtO,OAAOxc,OACzD,UASpB,yBAAK0R,UAAU,iCACb,kBAAC,GAA0BsZ,GAC3B,4BAAQvO,SAAUuO,EAAwB5tB,WAAYI,KAAK,SAASkU,UAAU,gCAE1EsZ,EAAwB5tB,YACxB,yBAAKsU,UAAU,uBAAuBqC,IAAI,kBAE5C,2CCxFNkX,GAA2C,WAE/C,IAAMtD,EAAY1S,aAA4C,SAAArJ,GAAK,OAAIA,EAAMrT,YAAYrB,MAAQ,MA6BjG,OACE,kBAAC,GAAD,CACE2wB,eA9BmB,CACrB,CACEptB,KAAM,gBACN2vB,SAAU,gBACVC,UAAU,GAEZ,CACE5vB,KAAM,mBACN2vB,SAAU,sBACVC,UAAU,GAEZ,CACE5vB,KAAM,qBACN2vB,SAAU,oBACVC,UAAU,GAEZ,CACE5vB,KAAM,cACN2vB,SAAU,OACVC,UAAU,GAEZ,CACE5vB,KAAM,0BACN2vB,SAAU,QACVC,UAAU,IAOVvC,YAAa5xB,EAAY0wB,YACzBgC,oBAAqBA,GACrBjB,UAAWA,EACX8B,kBAAkB,2BAClBhB,gBAAgB,KAIhBG,GAAoD,SAAC,GAAc,IAAZ1xB,EAAW,EAAXA,KACrDoI,EAAWqV,cACTzU,EAAsEhJ,EAAtEgJ,KAAMF,EAAgE9I,EAAhE8I,MAAOqB,EAAyDnK,EAAzDmK,cAAe7I,EAA0CtB,EAA1CsB,kBAC9BwyB,EAA0B/V,aAAmC,SAAArJ,GAAK,OAAIA,EAAMrT,eAE5E2yB,EAA6B3P,aAAU,CAC3CC,cAAe,CACbtb,OACAF,QACAqB,gBACA7I,qBAEFsjB,iBAAkBC,IAAW,CAC3B7b,KAAM6b,MAAaC,SAAS,YAC5Bhc,MAAO+b,MAAaC,SAAS,YAC7BxjB,kBAAmBujB,MAAaC,SAAS,cAE3CE,SAAU,SAAClc,GACTV,EAAS0B,GAAqBhB,OAGlC,OACE,0BAAMkc,SAAUgP,EAA2B9O,aAAc1K,UAAU,qDAAqD+H,UAAQ,QAC9H,8BAAU/H,UAAU,eAClB,yBAAKA,UAAU,wDAAwD+H,UAAQ,QAC7E,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,oBACA,0CAAQA,UAAU,YAAYxZ,GAAG,qBAC3BgzB,EAA2B5O,cAAc,sBAC7C,4BAAQtgB,IAAI,IAAIgE,MAAO,GAAvB,YACA,4BAAQhE,IAAI,IAAIgE,MAAO,GAAvB,YACA,4BAAQhE,IAAI,IAAIgE,MAAO,GAAvB,SACA,4BAAQhE,IAAI,IAAIgE,MAAO,GAAvB,kBACA,4BAAQhE,IAAI,IAAIgE,MAAO,GAAvB,cAGAkrB,EAA2B3O,QAAQ/jB,mBAAqB0yB,EAA2B1O,OAAOhkB,kBACxF,0BAAMkZ,UAAU,kBAAkBwZ,EAA2B1O,OAAOhkB,mBAClE,KAIV,6BACE,+BACE,yBAAKkZ,UAAU,iBAAf,oBACA,yCAAOA,UAAU,YAAYxZ,GAAG,OAAOsF,KAAK,SACtC0tB,EAA2B5O,cAAc,UAE7C4O,EAA2B3O,QAAQrc,MAAQgrB,EAA2B1O,OAAOtc,KAC3E,0BAAMwR,UAAU,kBAAkBwZ,EAA2B1O,OAAOtc,MAClE,KAIV,6BACE,+BACE,yBAAKwR,UAAU,iBAAf,2BACA,yCAAOA,UAAU,YAAYlU,KAAK,SAC5B0tB,EAA2B5O,cAAc,WAE7C4O,EAA2B3O,QAAQvc,OAASkrB,EAA2B1O,OAAOxc,MAC5E,0BAAM0R,UAAU,kBAAkBwZ,EAA2B1O,OAAOxc,OAClE,KAIV,6BACE,+BACE,yBAAK0R,UAAU,iBAAf,sBACA,4BAAQlU,KAAK,SAASkU,UAAU,gCAE5BsZ,EAAwB5tB,YACxB,yBAAKsU,UAAU,uBAAuBqC,IAAI,kBAE5C,0CAKR,yBAAKrC,UAAU,mCACZwZ,EAA2BhB,cAAgB,kBAAC,GAA0Bc,OC7H3EG,GAAyC,WAE7C,IAAM7rB,EAAWqV,cACXyW,EAAe7P,aAAU,CAC7BC,cAAe,CACbtb,KAAM,GACNF,MAAO,IAET8b,iBAAkBC,IAAW,CAC3B7b,KAAM6b,MAAaC,SAAS,YAC5Bhc,MAAO+b,MAAaC,SAAS,cAE/BE,SAAU,SAACkG,G9CwII,IAAChgB,E8CvId9C,G9CuIc8C,E8CvIMggB,E9CuIP,uCAA2B,WAAO9iB,GAAP,iBAAAjI,EAAA,6DAC5CiI,EAASmC,MADmC,SAErB5K,EAAS,iBAC9B,CACEyL,YAAaF,EAAOlC,KACpBqC,aAAcH,EAAOpC,MACrBwC,UAAW,EACXH,UAAU,IAP8B,QAEtC1K,EAFsC,QAU/BC,SAAW3B,EAAekI,IAC/BoB,EAAM5H,EAAST,KACrBoI,GA3HmBtH,EA2HIuH,EAAIvH,SAAW,GA3HE,CAC1CwF,KAAMpH,GAAQ2W,eACd/U,cA4HEsH,EAASqC,GADGhK,EACaK,SAAW,KAfM,iCA/GxB,IAACA,IA+GuB,OAA3B,2D8CpIXqzB,EAAqBpW,aAA8B,SAAArJ,GAAK,OAAIA,EAAMxJ,UAMxE,OALAyT,qBAAU,WACJwV,EAAmBhuB,YACrB+tB,EAAa9N,cAEd,CAAC+N,EAAmBhuB,aAErB,0BAAM6e,SAAUkP,EAAahP,aAAc1K,UAAU,kCACnD,yBAAKA,UAAU,6DACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,oCAAoC+H,UAAQ,QACzD,8BAAU/H,UAAU,eAClB,4BAAQA,UAAU,SAAlB,UACA,yBAAKA,UAAU,wDAAwD+H,UAAQ,QAC7E,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,eACA,yCAAOA,UAAU,YAAYxZ,GAAG,OAAOsF,KAAK,SACtC4tB,EAAa9O,cAAc,UAE/B8O,EAAa7O,QAAQrc,MAAQkrB,EAAa5O,OAAOtc,KAC/C,0BAAMwR,UAAU,kBAAkB0Z,EAAa5O,OAAOtc,MACpD,KAIV,6BACE,+BACE,yBAAKwR,UAAU,iBAAf,uBACA,yCAAOA,UAAU,YAAYlU,KAAK,SAC5B4tB,EAAa9O,cAAc,WAE/B8O,EAAa7O,QAAQvc,OAASorB,EAAa5O,OAAOxc,MAChD,0BAAM0R,UAAU,kBAAkB0Z,EAAa5O,OAAOxc,OACpD,UASpB,yBAAK0R,UAAU,iCACb,kBAAC,GAA0B2Z,GAC3B,4BAAQ5O,SAAU4O,EAAmBjuB,WAAYI,KAAK,SAASkU,UAAU,gCAErE2Z,EAAmBjuB,YACnB,yBAAKsU,UAAU,uBAAuBqC,IAAI,kBAE5C,2CCjENuX,GAAsC,WAC1C,IAAMhsB,EAAWqV,cAKXgT,EAAY1S,aAAuC,SAAArJ,GAAK,OAAIA,EAAMxJ,OAAOlL,MAAQ,MACjF2wB,EAAiB,CACrB,CACEptB,KAAM,WACN2vB,SAAU,WACVC,UAAU,GAEZ,CACE5vB,KAAM,cACN2vB,SAAU,OACVC,UAAU,GAEZ,CACE5vB,KAAM,eACN2vB,SAAU,QACVC,UAAU,GAEZ,CACE5vB,KAAM,SACN4vB,UAAU,EACVkB,KAAM,SAACC,GACL,OAAQ,4BAAQhuB,KAAK,SAASkU,UAAU,mCAAmC8E,QAAS,kBAzBpE/T,EAyBuF+oB,EAAI/oB,SAzBxEvC,EAyBkFsrB,EAAIxrB,MAzBzEA,EAyBgFwrB,EAAItrB,UAxB1H3I,OAAOk0B,QAAQ,yBACpBnsB,EAAS6C,GAAa,CAACM,WAASzC,QAAME,SAAM,KAFlC,IAACuC,EAAmBvC,EAAaF,IA0BrC,4CAMjB,OACE,kBAAC,GAAD,CACE6nB,eAAgBA,EAChBC,YAAa5xB,EAAY6wB,QACzB6B,oBAAsBA,GACtBjB,UAAWA,EACX8B,kBAAkB,qBAClBhB,gBAAkB,KAIlBG,GAAoD,SAAC,GAAc,IAAZ1xB,EAAW,EAAXA,KACrDoI,EAAWqV,cACTzU,EAAyChJ,EAAzCgJ,KAAMF,EAAmC9I,EAAnC8I,MAAOyC,EAA4BvL,EAA5BuL,SACf4oB,EAAqBpW,aAA8B,SAAArJ,GAAK,OAAIA,EAAMxJ,UAElEspB,EAAwBnQ,aAAU,CACtCC,cAAe,CACbtb,OACAF,QACAyC,YAEFqZ,iBAAkBC,IAAW,CAC3B7b,KAAM6b,MAAaC,SAAS,YAC5Bhc,MAAO+b,MAAaC,SAAS,cAE/BE,SAAU,SAAClc,GACTV,EAAS6C,GAAanC,OAG1B,OACE,0BAAMkc,SAAUwP,EAAsBtP,aAAc1K,UAAU,qDAAqD+H,UAAQ,QACzH,8BAAU/H,UAAU,eAClB,yBAAKA,UAAU,wDAAwD+H,UAAQ,QAC7E,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,eACA,yCAAOA,UAAU,YAAYxZ,GAAG,OAAOsF,KAAK,SACtCkuB,EAAsBpP,cAAc,UAExCoP,EAAsBnP,QAAQrc,MAAQwrB,EAAsBlP,OAAOtc,KACjE,0BAAMwR,UAAU,kBAAkBga,EAAsBlP,OAAOtc,MAC7D,KAIV,6BACE,+BACE,yBAAKwR,UAAU,iBAAf,uBACA,yCAAOA,UAAU,YAAYlU,KAAK,SAC5BkuB,EAAsBpP,cAAc,WAExCoP,EAAsBnP,QAAQvc,OAAS0rB,EAAsBlP,OAAOxc,MAClE,0BAAM0R,UAAU,kBAAkBga,EAAsBlP,OAAOxc,OAC7D,KAIV,6BACE,+BACE,yBAAK0R,UAAU,iBAAf,iBACA,4BAAQlU,KAAK,SAASkU,UAAU,gCAE5B2Z,EAAmBjuB,YACnB,yBAAKsU,UAAU,uBAAuBqC,IAAI,kBAE5C,0CAKR,yBAAKrC,UAAU,mCACdga,EAAsBxB,cAAgB,kBAAC,GAA0BmB,OCtGpEM,GAAuC,WAC3C,IAAMrsB,EAAWqV,cACXC,EAAUC,cAFiC,EAGGO,mBAA0C,IAH7C,oBAG1CtR,EAH0C,KAGtB8nB,EAHsB,OAIPxW,mBAAwB,IAJjB,oBAI1CyW,EAJ0C,KAI3BC,EAJ2B,OAK2B1W,mBAAS,IALpC,oBAK1C2W,EAL0C,KAKVC,EALU,OAY7C/W,aAAuC,SAAArJ,GAAK,OAAIA,EAAM5R,QAAQ4J,YAAc,MAJ9EnJ,EAR+C,EAQ/CA,KAAM+J,EARyC,EAQzCA,YAAahM,EAR4B,EAQ5BA,kBACnBD,EAT+C,EAS/CA,YAAasE,EATkC,EASlCA,SAAU2J,EATwB,EASxBA,gBACvB9M,EAV+C,EAU/CA,SAAUC,EAVqC,EAUrCA,SAAU+J,EAV2B,EAU3BA,UAAWpD,EAVgB,EAUhBA,oBAC/B9F,EAX+C,EAW/CA,OAAQN,EAXuC,EAWvCA,SAAUmgB,EAX6B,EAW7BA,WAAYF,EAXiB,EAWjBA,WAW1B8R,GAtB2C,EAWLrzB,KAXK,EAWC2L,OAXD,EAWS2nB,wBAWhC3Q,aAAU,CAClCC,cAAe,CACb/gB,KAAMA,GAAQ,GACd+J,YAAaA,GAAe,GAC5BhM,kBAAmBA,GAAqB8H,EAZZ,SAAC/H,GAC/B,IAAM4zB,EAAcvwB,OAAOD,KAAKtF,GAAeiC,QAAO,SAAC0D,GAAD,OAASA,IAAQzD,KACvE,OAAI4zB,EAAY,GACP1zB,OAAOpC,EAAc81B,EAAY,KAEnC,EAOyDC,CAAwB9rB,GAAuB,IAAM,EACnH/H,YAAaA,GAAe,EAC5BK,KAAM4B,EAASA,EAAOpB,WAAa,IACnCmL,OAAQrK,EAAWA,EAASd,WAAa,GACzCyD,SAAUA,GAAY,GACtBnD,SAAUA,EAAWA,EAASka,MAAM,KAAK,GAAK,GAC9Cja,SAAUA,EAAWA,EAASia,MAAM,KAAK,GAAK,GAC9C3P,iBAAkB,KAClBP,UAAWA,GAAa,IACxBiB,iBAAkB,GAClB0nB,iBAAkB,GAClBnsB,KAAM,GACNF,MAAO,GACPma,WAAYA,GAAc,GAC1BE,WAAYA,GAAc,GAC1BiS,kBAAmB9xB,EAASA,EAAOoZ,MAAM,KAAK1Y,OAAS,EACvD0J,wBAAyB,GACzB2nB,qBAAsB/lB,EAAkBA,EAAgBoN,MAAM,KAAO,IAEvEkI,iBAAkBC,IAAW,CAC3BthB,KAAMshB,MAAaC,SAAS,YAC5BxX,YAAauX,MAAaC,SAAS,YACnCxjB,kBAAmBujB,MAAaC,SAAS,YAAY+O,SAAS,EAAG,YACjExyB,YAAawjB,MAAaC,SAAS,YAAY+O,SAAS,EAAG,YAI3DrxB,SAAUqiB,MAAaC,SAAS,YAChCriB,SAAUoiB,MAAaC,SAAS,cAGlCE,SAAU,SAACkG,GACwB,IAA9Bte,EAAmB5I,QAAiB4I,EAAmB0oB,MAAK,SAAC1wB,GAAD,OAAUF,OAAOD,KAAKG,GAAMZ,OAAS,MAClG8wB,EAAkC,wCAClChV,YAAW,WACTgV,EAAkC,MAClC,MAEF1sB,EAASuE,GAAiBue,EAAQ,EAAGte,KAGzCqY,oBAAoB,KAEhB/jB,EAAgB6c,aAAmC,SAAArJ,GAAK,OAAIA,EAAMrT,eAClEk0B,EAAcxX,aAA4B,SAAArJ,GAAK,OAAIA,EAAMhT,QACzD8zB,EAAgBzX,aAA8B,SAAArJ,GAAK,OAAIA,EAAMrH,UAC7DooB,EAAsB1X,aAA+B,SAAArJ,GAAK,OAAIA,EAAM5R,WAC1E6b,qBAAU,WACRvW,EAASiC,MACTjC,EAASkB,MACTlB,EAASD,QACR,IAEHwW,qBAAU,WACJ8W,EAAoBtvB,YACtB2Z,YAAW,WACT1X,EAAS6D,MACX8oB,EAAkB3O,YAClBsO,EAAsB,IACtBhX,EAAQf,KAAK,YACX,OAEH,CAAC8Y,EAAoBtvB,aAExBwY,qBAAU,WACR,GAAGrb,GAAUN,GAAY2C,GAAYrC,EAAOU,OAAS,EAAE,CACrD,IAAMb,EAAYG,EAAOoZ,MAAM,KACzBgZ,EAAc1yB,EAAS0Z,MAAM,KAC7BiZ,EAAgBhwB,EAAS+W,MAAM,KAE/BkZ,EAAgEzyB,EAAU2R,KAAI,SAAC+gB,EAAU1oB,GAC7F,MAAO,CACLzL,KAAMm0B,EACNxoB,OAAQqoB,EAAYvoB,GACpBxH,SAAUgwB,EAAcxoB,OAI5BunB,EAAsBkB,GACtBhB,EAAiBzxB,MAEnB,CAACG,EAAQN,EAAU2C,IAErB,IAAMmwB,EAA8C70B,EAAoBC,EAAe6zB,EAAkB7J,OAAO5pB,mBAE1Gy0B,EAAsCR,EAAYv1B,MACtDu1B,EAAYv1B,KAAKoB,QAAO,SAACM,GACvB,OAAOA,EAAKE,kBAAoBL,OAAOwzB,EAAkB7J,OAAO5pB,uBAC3D,GAqFH00B,EAAiC,SAAC7oB,EAAe8oB,EAAentB,GAEpE,IAAIotB,EAAW,aAAQtpB,GACnBspB,EAAY/oB,KACd+oB,EAAY/oB,GAAS,IAEN,SAAV8oB,GACEC,EAAY/oB,GAAOzL,MACpBizB,EAAcwB,OAAOxB,EAAchzB,QAAQmH,GAAQ,GAEnDotB,EAAY/oB,GAAOzL,KAAOoH,EAC1B8rB,EAAiB,GAAD,oBAAKD,GAAL,CAAoB7rB,MACnB,WAAVmtB,EACTC,EAAY/oB,GAAOE,OAASvE,EAET,aAAVmtB,IACTC,EAAY/oB,GAAOxH,SAAWmD,GAG7BotB,EAAYlyB,OAAQ,IACR,WAAViyB,EACDC,EAAYrzB,SAAQ,SAAC+B,GAAD,OAAUA,EAAKyI,OAASvE,KAE5CotB,EAAYrzB,SAAQ,SAAC+B,GAAD,OAAUA,EAAKyI,OAAS6oB,EAAY,GAAG7oB,WAI5D0nB,EAAkB7J,OAAOmK,qBAAqBloB,GAC/C+oB,EAAY/oB,GAAOmC,gBAAmBylB,EAAkB7J,OAAOmK,qBAAqBloB,GAEpF+oB,EAAY/oB,GAAOmC,gBAAkB,IAEzColB,EAAsBwB,IAG1B,OACE,0BAAMlR,SAAU+P,EAAkB7P,aAAc1K,UAAU,kCACxD,yBAAKA,UAAU,6DACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,oCAAoC+H,UAAQ,QACzD,8BAAU/H,UAAU,eAClB,4BAAQA,UAAU,SAAlB,WACA,yBAAKA,UAAU,wDAAwD+H,UAAQ,QAC7E,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,QACA,yCAAOA,UAAU,YAAYxZ,GAAG,OAAOsF,KAAK,SACtCyuB,EAAkB3P,cAAc,UAEpC2P,EAAkB1P,QAAQ9hB,MAAQwxB,EAAkBzP,OAAO/hB,KACzD,0BAAMiX,UAAU,kBAAkBua,EAAkBzP,OAAO/hB,MACzD,KAIV,6BACE,+BACE,yBAAKiX,UAAU,iBAAf,eACA,4CAAUA,UAAU,cAAcxZ,GAAG,cAAco1B,KAAM,IACnDrB,EAAkB3P,cAAc,iBAEpC2P,EAAkB1P,QAAQ/X,aAAeynB,EAAkBzP,OAAOhY,YAChE,0BAAMkN,UAAU,kBAAkBua,EAAkBzP,OAAOhY,aACzD,OAMd,8BAAUkN,UAAU,eAClB,yBAAKA,UAAU,wDAAwD+H,UAAQ,QAC7E,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,oBACA,4BAAQA,UAAU,YAAYxZ,GAAG,oBAC/BwhB,SAAU,SAACC,GAAQsS,EAAkBsB,aAAa5T,GAAIsS,EAAkBvJ,cAAc,cAAe,GAAIkJ,EAAsB,IAAKE,EAAiB,IAAKG,EAAkBvJ,cAAc,oBAAoB,IAC9M8K,OAAQvB,EAAkBwB,WAC1BztB,MAAOisB,EAAkB7J,OAAO5pB,mBAGhC,4BAAQwD,IAAI,IAAIgE,MAAO,GAAvB,UACA,4BAAQhE,IAAI,IAAIgE,MAAO,GAAvB,YACA,4BAAQhE,IAAI,IAAIgE,MAAO,GAAvB,YACA,4BAAQhE,IAAI,IAAIgE,MAAO,GAAvB,SACA,4BAAQhE,IAAI,IAAIgE,MAAO,GAAvB,kBACA,4BAAQhE,IAAI,IAAIgE,MAAO,GAAvB,cAGAisB,EAAkB1P,QAAQ/jB,mBAAqByzB,EAAkBzP,OAAOhkB,kBACtE,0BAAMkZ,UAAU,kBAAkBua,EAAkBzP,OAAOhkB,mBACzD,KAIV,6BACE,+BACE,yBAAKkZ,UAAU,iBAAf,eACA,4BAAQA,UAAU,YAAYxZ,GAAG,cAC/BwhB,SAAU,SAACC,GAAQsS,EAAkBsB,aAAa5T,IAClD6T,OAAQvB,EAAkBwB,WAC1BztB,MAAOisB,EAAkB7J,OAAO7pB,aAChC,4BAAQyD,IAAI,IAAIgE,MAAO,GAAvB,UAEEgtB,EAAsBhhB,KAAI,SAACzT,EAAa8L,GACtC,OAAO,4BAAQrI,IAAKqI,EAAOrE,MAAOzH,EAAY8I,eAAgB9I,EAAY2H,UAK9E+rB,EAAkB1P,QAAQhkB,aAAe0zB,EAAkBzP,OAAOjkB,YAChE,0BAAMmZ,UAAU,kBAAkBua,EAAkBzP,OAAOjkB,aACzD,OAMd,8BAAUmZ,UAAU,eAClB,yBAAKA,UAAU,iCAEXxN,MAAM+nB,EAAkB7J,OAAOkK,mBAAmBoB,KAAK,GAAG1hB,KAAI,SAAChM,EAAOqE,GACpE,OACE,yBAAKrI,IAAKqI,EAAOqN,UAAU,wDAAwD+H,UAAQ,QACzF,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,QACA,4BAAQA,UAAU,YAAYxZ,GAAG,OACjC8H,MAAS8D,EAAmBO,GAASP,EAAmBO,GAAOzL,KAAO,EACtE8gB,SAAU,SAACC,GAAOuT,EAA+B7oB,EAAO,OAAQsV,EAAEC,cAAc5Z,SAE9E,4BAAQhE,IAAI,IAAIgE,MAAO,GAAvB,UAEEitB,EAAoB30B,QAAO,SAACM,GAC1B,SAAOA,EAAK4B,QAAU6J,IAAUwnB,EAAchzB,QAAQD,EAAK4B,OAAOpB,cAAqBR,EAAK4B,SAA6D,IAAnDqxB,EAAchzB,QAAQD,EAAK4B,OAAOpB,eAGvI4S,KAAI,SAACpT,EAAMyL,GACZ,OAAO,4BAAQrI,IAAKqI,EAAOrE,MAAOpH,EAAK4B,QAAU5B,EAAKoH,aAWhE,6BACE,+BACE,yBAAK0R,UAAU,iBAAf,UACA,4BAAQA,UAAU,YAAYxZ,GAAG,SACjC8H,MAAO8D,GAAsBA,EAAmB,IAAMA,EAAmB,GAAGS,QAAU,IACtFmV,SAAU,SAACC,GAAOuT,EAA+B7oB,EAAO,SAAUsV,EAAEC,cAAc5Z,SAEhF,4BAAQhE,IAAI,IAAIgE,MAAO,GAAvB,UAEEkE,MAAMypB,QAAQjB,EAAcx1B,OAC5Bw1B,EAAcx1B,KAAK8U,KAAI,SAACzH,EAAQF,GAC9B,OAAO,4BAAQrI,IAAKqI,EAAOrE,MAAOuE,EAAOrK,UAAWqK,EAAOvE,aAMrE,6BACE,+BACE,yBAAK0R,UAAU,iBAAf,YACA,2BAAOA,UAAU,YAAYxZ,GAAG,WAAWsF,KAAK,SAChDwC,MAAQ8D,EAAmBO,GAASP,EAAmBO,GAAOxH,SAAW,GACzE6c,SAAU,SAACC,GAAOuT,EAA+B7oB,EAAO,WAAYsV,EAAEC,cAAc5Z,YASxF,6BACE,+BACE,yBAAK0R,UAAU,kBACf,4BAAQ+K,SAAyD,IAA/CwP,EAAkB7J,OAAOkK,kBAAyB5a,UAAU,kDAAkD8E,QAAS,kBAzMpI,SAACnS,GAC7B4nB,EAAkB7J,OAAOxd,yBAA2BqnB,EAAkB7J,OAAOmK,sBAC9EN,EAAkBvJ,cAAc,0BAAhC,uBACIuJ,EAAkB7J,OAAOxd,yBAD7B,CACqDqnB,EAAkB7J,OAAOmK,qBAAqBloB,MAErGwnB,EAAcwB,OAAOhpB,EAAM,GAC3BP,EAAmBupB,OAAOhpB,EAAM,GAChC,IAAMupB,EAAU,aAAO3B,EAAkB7J,OAAOmK,sBAChDqB,EAAWP,OAAOhpB,EAAM,GACxB4nB,EAAkBvJ,cAAc,uBAAhC,aAA4DkL,IAC5D9B,EAAiB,aAAID,IACrBD,EAAsB,aAAI9nB,IACvBmoB,EAAkB7J,OAAOkK,mBAAqBL,EAAkB7J,OAAOkK,kBAAoB,GAC5FL,EAAkBvJ,cAAc,oBAChCuJ,EAAkB7J,OAAOkK,kBAAoB,GA2L0HuB,CAAyBxpB,KAAxK,gBAOZ,yBAAKqN,UAAU,sCACf,0BAAMA,UAAU,mBAAmBqa,IAGnC,4BAAQra,UAAU,8BAA8B+K,SAAwC,IAA9B3Y,EAAmB5I,QAAgB4I,EAAmB5I,SAAW+wB,EAAkB7J,OAAOkK,kBAAqB9V,QAAS,SAACmD,GAAOA,EAAEwK,iBAjO9K,WAC5B,IAAM2J,EAAiBb,EAAoB30B,QAAO,gBAAEkC,EAAF,EAAEA,OAAF,OAAmE,IAArDqxB,EAAchzB,SAAc,OAAN2B,QAAM,IAANA,OAAA,EAAAA,EAAQpB,aAAc,OACzG00B,EAAe5yB,OAAS,GAAK+wB,EAAkB7J,OAAOkK,kBACvDL,EAAkBvJ,cAAc,oBAChCuJ,EAAkB7J,OAAOkK,kBAAoB,GACX,IAA1BwB,EAAe5yB,SACvB8wB,EAAkC,2BAClChV,YAAW,WACTgV,EAAkC,MAClC,MAwNwN+B,KAA9M,cAGJ,8BAAUrc,UAAU,eAClB,yBAAKA,UAAU,wDAAwD+H,UAAQ,QAC7E,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,aACA,yCAAOA,UAAU,YAAYxZ,GAAG,WAAWsF,KAAK,SAC1CyuB,EAAkB3P,cAAc,cAEpC2P,EAAkB1P,QAAQ7iB,UAAYuyB,EAAkBzP,OAAO9iB,SAC7D,0BAAMgY,UAAU,kBAAkBua,EAAkBzP,OAAO9iB,UACzD,KAIV,6BACE,+BACE,yBAAKgY,UAAU,iBAAf,aACA,yCAAOA,UAAU,YAAYxZ,GAAG,WAAWsF,KAAK,SAC1CyuB,EAAkB3P,cAAc,cAEpC2P,EAAkB1P,QAAQ5iB,UAAYsyB,EAAkBzP,OAAO7iB,SAC7D,0BAAM+X,UAAU,kBAAkBua,EAAkBzP,OAAO7iB,UACzD,OAMd,8BAAU+X,UAAU,eAClB,yBAAKA,UAAU,wDAAwD+H,UAAQ,QAC7E,2BAAOvhB,GAAG,iBAAiB81B,QAAQ,mBAAmBtc,UAAU,iCAC9D,0BAAMA,UAAU,qBAAqB4I,UAAQ,qCAD/C,0CAE0C,2BAAOpiB,GAAG,mBAAmBsF,KAAK,OAAOywB,UAAU,EACzFvU,SAAU,SAACmJ,IAzTD,SAACqL,GAC7B,IAAIC,EAAsB,EAI1B,GAH2C,MAAvClC,EAAkB7J,OAAO1e,WAAqBuoB,EAAkB7J,OAAOjI,aACzEgU,GAAuBlC,EAAkB7J,OAAOjI,WAAWvG,MAAM,MAAM1Y,QAErEgzB,GAAShqB,MAAMC,KAAK8nB,EAAkB7J,OAAOne,kBAAoB,IAAI/I,OAASizB,IAAwB,EAAG,CAC3G,IAAMC,EAAelqB,MAAMC,KAAK8nB,EAAkB7J,OAAOne,kBAAoB,IACzEoqB,EAAanqB,MAAMC,KAAK+pB,GAC5BG,EAAWhB,OAAO,GAAKe,EAAalzB,OAASizB,GAAsBE,EAAWnzB,OAAS,GACvF+wB,EAAkBvJ,cAAc,mBAAhC,uBAAwD0L,GAAxD,aAAyEC,MAgTlCC,CAAsBzL,EAAMjJ,cAAcsU,UAEjEjC,EAAkB1P,QAAQtY,kBAAoBgoB,EAAkBzP,OAAOvY,iBACrE,0BAAMyN,UAAU,kBAAkBua,EAAkBzP,OAAOvY,kBACzD,MAM8B,MAAvCgoB,EAAkB7J,OAAO1e,WACzB,8BAAUgO,UAAU,eACrB,yBAAKA,UAAU,iBAAf,kBACA,yBAAKA,UAAU,wDAAwD+H,UAAQ,QApSlE,SAAC8U,EAAmBC,GAC7C,GAAID,GAAYC,GAAYD,EAASrzB,OAAS,GAAKszB,EAAStzB,OAAS,EAAG,CACtE,IAAMuzB,EAAYF,EAAS3a,MAAM,KAGjC,OAFkB4a,EAAS5a,MAAM,KAEhB5H,KAAI,SAAC0iB,EAAcrqB,GAClC,OAAO,yBAAKrI,IAAKqI,EAAOqN,UAAU,wCAChC,yBAAK1V,IAAKqI,EAAO0P,IAAKxd,EAAkBm4B,EAAMtU,IAAKqU,EAAUpqB,KAC7D,yBAAKqN,UAAU,wCACb,yBAAKA,UAAU,sBACb,0BAAM4I,UAAQ,cAAc9D,QAAS,kBAtBtB,SAAC/b,EAAci0B,GACpCzC,EAAkB7J,OAAOzd,kBAAoBsnB,EAAkB7J,OAAOjI,YAAc8R,EAAkB7J,OAAO/H,aAC/G4R,EAAkBvJ,cAAc,mBAAhC,uBAAwDuJ,EAAkB7J,OAAOzd,kBAAjF,CAAmG+pB,KACnGzC,EAAkBvJ,cAAc,aAC9BuJ,EAAkB7J,OAAOjI,WAAWvG,MAAM,KAAKtb,QAAO,SAACq2B,GAAD,OAAeA,GAAaD,KAAM7yB,KAAK,MAE/FowB,EAAkBvJ,cAAc,aAC9BuJ,EAAkB7J,OAAO/H,WAAWzG,MAAM,KAAKtb,QAAO,SAACs2B,GAAD,OAAeA,GAAan0B,KAAMoB,KAAK,OAe5CgzB,CAAmBJ,EAAUpqB,GAAQqqB,aA6R1EI,CAAmB7C,EAAkB7J,OAAO/H,WAAY4R,EAAkB7J,OAAOjI,cA+BrF,8BAAUzI,UAAU,eAClB,yBAAKA,UAAU,iBAAf,cACA,yBAAKA,UAAU,wDAAwD+H,UAAQ,QAG5EwS,EAAkB7J,OAAOne,kBACxB,GAAG+H,IAAI+iB,KAAK9C,EAAkB7J,OAAOne,kBAAkB,SAAC+qB,EAAWC,GACjE,OAAO,yBAAKvd,UAAU,wCACpB,yBAAK1V,IAAKizB,EAAGlb,IAAKmb,IAAIC,gBAAgBH,GAAO5U,IAAK4U,EAAKv0B,OACvD,yBAAKiX,UAAU,wCACb,yBAAKA,UAAU,sBACb,0BAAM4I,UAAQ,cAAc9D,QAAS,kBAtW7C,SAAC/b,GACnB,IAAMwJ,EAAmBC,MAAMC,KAAK8nB,EAAkB7J,OAAOne,kBAAoB,IACjFgoB,EAAkBvJ,cAAc,mBAC9Bze,EAAiB3L,QAAO,SAAC82B,GACvB,OAAOA,EAAI30B,MAAQA,MAkW8C40B,CAAYL,EAAKv0B,oBAgBlF,yBAAKiX,UAAU,iCACb,kBAAC,GAA0Bib,GAC3B,4BAAQlQ,SAAUkQ,EAAoBvvB,WAAYI,KAAK,SAASkU,UAAU,gCAEtEib,EAAoBvvB,YACpB,yBAAKsU,UAAU,uBAAuBqC,IAAI,mBAE5C,2CC5fNub,GAA8C,SAAC7d,GACnD,IAAMnS,EAAWqV,cACXC,EAAUC,cAMV8S,EAAY1S,aAAqC,SAAArJ,GAAK,OAAIA,EAAM5R,QAAQ9C,MAAQ,MAChF2wB,EAAiB,CAMrB,CACEptB,KAAM,WACN2vB,SAAU,sBACVC,UAAU,EACVkB,KAAM,SAACC,GACL,OACEA,EAAIvwB,SAAW,oCACb,0BAAMkY,MAAO,CAAEqW,MAAO,SAAWlP,UAAQ,gBACzC,0BAAMnH,MAAO,CAAEoc,WAAY,QACxB/D,EAAIlrB,sBAGPkrB,EAAIrwB,OAAS,oCACX,0BAAMgY,MAAO,CAAEqW,MAAO,UAAYlP,UAAQ,gBAC1C,0BAAMnH,MAAO,CAAEoc,WAAY,QACxB/D,EAAIlrB,sBAGP,0BAAM6S,MAAO,CAAEoc,WAAY,SACxB/D,EAAIlrB,uBAKjB,CACE7F,KAAM,eACN2vB,SAAU,OACVC,UAAU,GAYZ,CACE5vB,KAAM,WACN2vB,SAAU,WACVC,UAAU,GAYZ,CACE5vB,KAAM,SACN4vB,UAAU,EACVkB,KAAM,SAACC,GACL,OAAO,4BAAQhuB,KAAK,SAASkU,UAAU,mCAAmC8E,QAAS,kBAtElE9S,EAsEsF8nB,EAAI9nB,UAAUtK,WAtEjFa,EAsE6FuxB,EAAIjzB,iBArE3HhB,OAAOk0B,QAAQ,yBAElBnsB,EAASuE,GAAiB,CAAEH,YAAWjJ,KADrC,GAC2CyF,KADhC,GACsCvG,SADP,IACiBD,SADjC,IAC2CsG,MADd,GACqB2E,iBAD+B,CAAC,IACdpM,YADrB0B,EACkCsyB,qBAD6B,CAAC,IACR3nB,wBADuC,CAAC,KACb,EAAG,MAHxJ,IAAClB,EAAmBzJ,IAuElC,2CAIN,CACEQ,KAAM,OACN4vB,UAAU,EACVkB,KAAM,SAACC,GACL,OAAO,4BAAQhuB,KAAK,SAASkU,UAAU,mCAAmC8E,QAAS,WAAQ/E,EAAM0U,eAAc,GAAOvR,EAAQf,KAAK,kBAAoB2X,EAAI9nB,aACzJ,0CAMR,OACE,kBAAC,GAAD,CACEmkB,eAAgBA,EAChBC,YAAa5xB,EAAYswB,QACzBoC,oBAAqBA,GACrBjB,UAAWA,EACX8B,kBAAkB,sBAClBhB,gBAAgB,KAIhBG,GAAoD,SAAC,GAAc,IAAZ1xB,EAAW,EAAXA,KACrDoI,EAAWqV,cACT1Z,EAA8D/D,EAA9D+D,SAAUE,EAAoDjE,EAApDiE,OAAQuI,EAA4CxM,EAA5CwM,UAAW8rB,EAAiCt4B,EAAjCs4B,gBAC/B7C,EAAsB1X,aAA+B,SAAArJ,GAAK,OAAIA,EAAM5R,WAEpEy1B,EAAyBlU,aAAU,CACvCC,cAAe,CACb9X,YACAgsB,UAAWz0B,EAAW,IAAME,EAAS,IAAM,IAE7C+gB,SAAU,SAAClc,GACe,MAApBA,EAAM0vB,WAAsF,KAAjE50B,EAAuB6xB,EAAoBz1B,MAAQ,IAAI,IACpFoI,EAASwD,GAAa,8CACtBkU,YAAW,WACTyY,EAAuBE,eAAc,KACpC,MAC0B,MAApB3vB,EAAM0vB,WAAuF,KAAlE50B,EAAuB6xB,EAAoBz1B,MAAQ,IAAI,IAC3FoI,EAASwD,GAAa,4CACtBkU,YAAW,WACTyY,EAAuBE,eAAc,KACpC,MAEHrwB,EhD2JyB,SAACowB,EAAmBhsB,GAApB,8CAA0C,WAAMpE,GAAN,qBAAAjI,EAAA,6DACvEiI,EAASoD,MACHvH,EAAwB,MAAdu0B,EACVz0B,EAAyB,MAAdy0B,EAHsD,SAIhD74B,EAAS,oBAAoB,CAClDsE,SACAF,WACAyI,cAPqE,QAIjE/L,EAJiE,QAU3DC,SAAW3B,EAAekI,IAC9BoB,EAAM5H,EAAST,KACrBoI,EAASmE,GAAoBxI,EAASE,EAAQuI,EAAWnE,EAAIvH,SAAW,MAGxEsH,EAASwD,GADGnL,EACcK,SAAW,KAfgC,2CAA1C,sDgD3JhB43B,CAAuB5vB,EAAM0vB,WAAa,GAAI1vB,EAAM0D,eAKnE,OACE,0BAAMwY,SAAUuT,EAAuBrT,aAAc1K,UAAU,qDAAqD+H,UAAQ,QAC1H,8BAAU/H,UAAU,eAClB,yBAAKA,UAAU,wDAAwD+H,UAAQ,QAC7E,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,iBACA,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,gBACf,4BAAQA,UAAU,qBAAoB,yBAAKqC,IAAKxd,EAAkBi5B,EAAiBpV,IAAKoV,UAMhG,6BACE,+BACE,yBAAK9d,UAAU,iBAAf,qBACA,6BACA,0CAAQA,UAAU,YAAYxZ,GAAG,aAC3Bu3B,EAAuBnT,cAAc,cACzC,4BAAQtgB,IAAI,IAAIgE,MAAM,IAAtB,QACA,4BAAQhE,IAAI,IAAIgE,MAAM,KAAtB,YACA,4BAAQhE,IAAI,IAAIgE,MAAM,KAAtB,WAGAyvB,EAAuBlT,QAAQmT,WAAaD,EAAuBjT,OAAOkT,UACxE,0BAAMhe,UAAU,kBAAkB+d,EAAuBjT,OAAOkT,WAC9D,MAMV,6BACE,+BACE,yBAAKhe,UAAU,iBAAf,kBACA,4BAAQlU,KAAK,SAASkU,UAAU,gCAE5Bib,EAAoBvvB,YACpB,yBAAKsU,UAAU,uBAAuBqC,IAAI,kBAE5C,0CAKR,yBAAKrC,UAAU,mCACZ+d,EAAuBvF,cAAgB,kBAAC,GAA0ByC,OChLvEkD,GAA4C,SAACpe,GACjD,IAAMnS,EAAWqV,cAKXgT,EAAY1S,aAA+B,SAAArJ,GAAK,OAAIA,EAAM2C,eAAerX,MAAQ,MACjF2wB,EAAiB,CACrB,CACEptB,KAAM,eACN4vB,UAAU,EACVyF,MAAM,EACNvE,KAAM,SAACC,GACL,IAAMuE,ExDsGe,SAACphB,GAG5B,IAFA,IAAMqhB,EAAcrhB,EAAWzT,OAC3B60B,EAAO,GACHd,EAAI,EAAIA,EAAGe,EAAaf,IAAI,CAClC,IAAMngB,EAAkBH,EAAWsgB,GAAGngB,gBACtC,GAAGA,EAAgB,CACjB,GAAGA,EAAgB6R,iBAAqE,QAAlD7R,EAAgB6R,gBAAgB1U,cAAwB,CAC5F8jB,EAAO,YACP,MACK,GAAGjhB,EAAgB6R,iBAAqE,OAAlD7R,EAAgB6R,gBAAgB1U,cAAuB,CAClG8jB,EAAO,UACP,MACK,GAAGjhB,EAAgBC,cAA+D,gBAA/CD,EAAgBC,aAAa9C,cAAgC,CACrG8jB,EAAO,UACP,MACK,GAAGjhB,EAAgBC,cAA+D,aAA/CD,EAAgBC,aAAa9C,cAA6B,CAClG8jB,EAAO,cACP,MACK,GAAGjhB,EAAgBC,cAA+D,aAA/CD,EAAgBC,aAAa9C,cAA6B,CAClG8jB,EAAO,eACP,MACK,GAAGjhB,EAAgBvE,QAAQ,CAChCwlB,EAAO,OACP,MACK,GAAGjhB,EAAgBmQ,aAAa,CACrC8Q,EAAO,QACP,QAIN,OAAOA,EwDpIYE,CAAqBzE,EAAI7c,YACtC,MACW,KAATohB,EACA,oCACY,cAATA,EAAwB,0BAAM5c,MAAO,CAAEqW,MAAO,SAAWlP,UAAQ,qBACvD,gBAATyV,EAAyB,0BAAM5c,MAAO,CAAEqW,MAAO,SAAWlP,UAAQ,uBACzD,UAATyV,EAAmB,0BAAM5c,MAAO,CAAEqW,MAAO,SAAWlP,UAAQ,iBACnD,SAATyV,EAAkB,0BAAM5c,MAAO,CAAEqW,MAAO,SAAWlP,UAAQ,gBAClD,YAATyV,EAAqB,0BAAM5c,MAAO,CAAEqW,MAAO,UAAYlP,UAAQ,mBACtD,iBAATyV,EAA0B,0BAAM5c,MAAO,CAAEqW,MAAO,OAASlP,UAAQ,wBACxD,YAATyV,EAAqB,0BAAM5c,MAAO,CAAEqW,MAAO,OAASlP,UAAQ,mBAC5D,GAEF,0BAAMnH,MAAO,CAACoc,WAAW,MAAOW,WAAW,WACxC1E,EAAIjM,cAGT,0BAAOpM,MAAO,CAACoc,WAAW,SACzB/D,EAAIjM,eAKX,CACE9kB,KAAM,aACN2vB,SAAU,cACVC,UAAU,GAEZ,CACE5vB,KAAM,mBACN4vB,UAAU,EACVkB,KAAM,SAACC,GACP,OAAQ,8BAA2B,WAApBA,EAAI1V,YAA0B,IAAM,SAA3C,IAAiD0V,EAAIrlB,WAArD,KAAmEqlB,EAAI1V,YAAvE,OAGV,CACErb,KAAM,eACN4vB,UAAU,EACVkB,KAAM,SAACC,GACL,OAAO,4BAAQhuB,KAAK,SAASkU,UAAU,oCAAoC8E,QAAS,W3CRzE,IAAC5S,E2CQ+EtE,G3CR/EsE,E2CQoG4nB,E3CR7E,CACzChuB,KAAMpH,GAAQoY,YACd5K,gB2CM6H6N,EAAM0U,eAAc,KACzI,0CAMR,OACE,kBAAC,GAAD,CACE0B,eAAgBA,EAChBC,YAAa5xB,EAAYywB,OACzBgB,UAAWA,EACX8B,kBAAkB,sBAClBhB,gBAAgB,EAChBN,aAAa,cACbC,gBAAgB,KCzEhB+H,GAAwC,WAC5C,IAAMvb,EAAUC,cACVvV,EAAWqV,cAFiC,EAIAS,mBAA6B,IAJ7B,oBAI3Cgb,EAJ2C,KAIxBC,EAJwB,OAKIjb,mBAAmB,IALvB,oBAK3Ckb,EAL2C,KAKtBC,EALsB,KAM5C5I,EAAY1S,aAA6B,SAAArJ,GAAK,OAAIA,EAAM2C,eAAe3K,YAAc,MACrF4sB,EAAWvb,aAA+B,SAAArJ,GAAK,OAAIA,EAAMrB,SAAW,MACpEkmB,EAAiBxb,aAAgC,SAAArJ,GAAK,OAAIA,EAAMsD,YACtE2G,qBAAU,WACR,GAAI8R,GAAaA,EAAUhZ,WAAY,CACrC,IAAI+hB,EAAuC,GACvCC,EAA6B,GACjChJ,EAAUhZ,WAAW5U,SAAQ,SAAA4U,GAAe,IAAD,gBACzC+hB,EAAiB7c,KACf,CACEhF,cAAeF,EAAWE,cAC1BoQ,aAAY,UAAEtQ,EAAWG,uBAAb,aAAE,EAA4BmQ,aAC1C0B,gBAAe,UAAEhS,EAAWG,uBAAb,aAAE,EAA4B6R,gBAC7C5R,aAAY,UAAEJ,EAAWG,uBAAb,aAAE,EAA4BC,aAC1C6hB,YAAY,UAAAjiB,EAAWG,uBAAX,eAA4B8hB,aAAc,IACtDrmB,QAAO,UAAEoE,EAAWG,uBAAb,aAAE,EAA4BvE,QACrCqW,aAAY,UAAEjS,EAAWG,uBAAb,aAAE,EAA4B8R,aAC1C/B,eAAc,UAAElQ,EAAWG,uBAAb,aAAE,EAA4B+P,iBAEhD8R,EAAiB9c,MAAK,UAAAlF,EAAWG,uBAAX,eAA4B+P,iBAAkB,OAEtEwR,EAAqBK,GACrBH,EAAuBI,MAExB,CAAChJ,IAEJ9R,qBAAU,WACRvW,EAAS8K,QACR,IAEH,IAAMymB,EAAqB,SAACxsB,EAAerI,EAAagE,GACtD,IAAI8wB,EAAgB,aAAOV,GACrBW,EAAuBD,EAAiBzD,OAAOhpB,EAAO,GACtD2sB,EAAmB,2BAAQD,EAAqB,IAA7B,kBAAkC/0B,EAAMgE,IACjE8wB,EAAiBzD,OAAOhpB,EAAO,EAAG2sB,GAClCX,EAAqBS,IAGjBG,EAAoB,SAAC5sB,GAAmB,IAAD,I1CmCrB6sB,EAA+BC,E0ClC/CC,EAAoBhB,EAAkB/rB,GAAOwa,iBAAmByR,EAAoBjsB,GAC1F,GAAG+sB,EAAkB,CACnB,IAAIC,EAAuB,aAAOf,GAClCe,EAAwBhtB,GAAS+rB,EAAkB/rB,GAAOwa,gBAAkB,GAC5E0R,EAAuBc,GAEzB/xB,G1C4BsB4xB,E0C5BI,2BACpBd,EAAkB/rB,IADC,IAErBkb,YAAaoI,EAAUpI,YACvB+R,cAAa,UAAE3J,EAAU4J,mBAAZ,aAAE,EAAuBxzB,aACtCyzB,aAAY,UAAE7J,EAAU4J,mBAAZ,aAAE,EAAuB/Y,Y1CwBY2Y,E0CvBhDC,E1CuBgB,uCAA+D,WAAM9xB,GAAN,yBAAAjI,EAAA,6DACtFiI,GA5DsBpI,EA4DGg6B,EA5DyB,CAClD1zB,KAAMpH,GAAQ+Y,iBACdjY,UAyDsF,SAE/DL,EAAS,YAAY,CAC1CooB,aAAciS,EAAYjS,aAC1BpQ,cAAeqiB,EAAYriB,cAC3B8R,gBAAe,UAAEuQ,EAAYvQ,uBAAd,aAAE,EAA6BvnB,WAC9C2V,aAAY,UAAEmiB,EAAYniB,oBAAd,aAAE,EAA0B3V,WACxCw3B,WAAYM,EAAYN,WACxBrmB,QAAO,UAAE2mB,EAAY3mB,eAAd,aAAE,EAAqBnR,WAC9BwnB,aAAcsQ,EAAYtQ,aAC1B/B,gBAAgB,UAAAqS,EAAYrS,sBAAZ,eAA4BzlB,aAAc,GAC1Dk4B,cAAeJ,EAAYI,cAC3B/R,YAAa2R,EAAY3R,YACzBiS,aAAcN,EAAYM,aAC1BL,sBAdoF,QAEhFx5B,EAFgF,QAgB1EC,SAAW3B,EAAekI,IAC9BoB,EAAM5H,EAAST,KACrBoI,EAASwL,GAAgBomB,EAAa3xB,EAAIvH,SAAU,MAGpDsH,GArEkBtH,EAoENL,EACeK,SAAW,GArEC,CACzCwF,KAAMpH,GAAQgZ,eACdpX,aA8CsF,iCAhDnE,IAACA,EAXEd,IA2DgE,OAA/D,yD0CrBvB,OACE,0BAAMwa,UAAU,kCACd,yBAAKA,UAAU,6DACb,4BAAQA,UAAU,kBAAiB,wBAAIA,UAAU,SAAd,iBACnC,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,oCAAoC+H,UAAQ,QACzD,8BAAU/H,UAAU,eAClB,4BAAQA,UAAU,SAAlB,kBACA,yBAAKA,UAAU,wDAAwD+H,UAAQ,QAC7E,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,gBACA,0BAAMA,UAAU,iBAAiBiW,EAAUpI,eAG/C,6BACE,+BACE,yBAAK7N,UAAU,iBAAf,cACA,0BAAMA,UAAU,iBAAiBiW,EAAUjH,eAG/C,6BACE,+BACE,yBAAKhP,UAAU,iBAAf,cACA,0BAAMA,UAAU,iBAAiBiW,EAAU7R,aAAuD,WAAxC6R,EAAU7R,YAAY7J,cAA6B,IAAM,SAAK0b,EAAUxhB,cAGtI,6BACE,+BACE,yBAAKuL,UAAU,iBAAf,gBACA,0BAAMA,UAAU,iBAAiBiW,EAAU7R,eAG/C,6BACE,+BACE,yBAAKpE,UAAU,iBAAf,0BACA,0BAAMA,UAAU,iBAAiBiW,EAAU7R,aAAuD,WAAxC6R,EAAU7R,YAAY7J,czD2DvE,SAACwlB,GAC9B,IAAIC,EAAgB,GAgBpB,OAfGD,EAAe/Z,aACb+Z,EAAe/Z,YAAYvF,gBACzBsf,EAAe/Z,YAAYvF,eAAe,IACxCsf,EAAe/Z,YAAYvF,eAAe,GAAGwf,UAC3CF,EAAe/Z,YAAYvF,eAAe,GAAGwf,SAASC,UACpDH,EAAe/Z,YAAYvF,eAAe,GAAGwf,SAASC,SAAS,IAC7DH,EAAe/Z,YAAYvF,eAAe,GAAGwf,SAASC,SAAS,GAAG15B,KACnEw5B,EAAgBD,EAAe/Z,YAAYvF,eAAe,GAAGwf,SAASC,SAAS,GAAG15B,IAQzFw5B,EyD5E0HG,CAAuBlK,EAAU/P,gBAAkB+P,EAAUmK,qBAI5KnK,EAAU7R,aAAuD,WAAxC6R,EAAU7R,YAAY7J,eAC/C,6BACE,+BACE,yBAAKyF,UAAU,iBAAf,kBACA,0BAAMA,UAAU,kBAAgD,IAA/BiW,EAAUoK,iBAA6B,UAAY,eAM5F,yBAAKrgB,UAAU,qBAGfiW,EAAU4J,aACV,8BAAU7f,UAAU,eAClB,4BAAQA,UAAU,SAAlB,iBACA,yBAAKA,UAAU,wDAAwD+H,UAAQ,QAC7E,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,QACA,0BAAMA,UAAU,iBACbiW,EAAU4J,YAAY/Y,UAAY,IAAMmP,EAAU4J,YAAY9Y,YAGrE,6BACE,+BACE,yBAAK/G,UAAU,iBAAf,UACA,0BAAMA,UAAU,iBAAiBiW,EAAU4J,YAAY9V,UAG3D,6BACE,+BACE,yBAAK/J,UAAU,iBAAf,SACA,0BAAMA,UAAU,iBAAiBiW,EAAU4J,YAAYxzB,gBAG3D,6BACE,+BACE,yBAAK2T,UAAU,iBAAf,YACA,0BAAMA,UAAU,iBAAiBiW,EAAU4J,YAAYv4B,UAAY,EAAnE,QAgBN,yBAAK0Y,UAAU,wDAAwD+H,UAAQ,QAC7E,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,WACA,0BAAMA,UAAU,iBAAiBiW,EAAU4J,YAAYjZ,WAG3D,6BACE,+BACE,yBAAK5G,UAAU,iBAAf,SACA,0BAAMA,UAAU,iBAAiBiW,EAAU4J,YAAY3lB,SAG3D,6BACE,+BACE,yBAAK8F,UAAU,iBAAf,QACA,0BAAMA,UAAU,iBAAiBiW,EAAU4J,YAAYnZ,QAG3D,6BACE,+BACE,yBAAK1G,UAAU,iBAAf,WACA,0BAAMA,UAAU,iBAAiBiW,EAAU4J,YAAYlZ,YAI7D,yBAAK3G,UAAU,wDAAwD+H,UAAQ,QAC7E,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,WACA,0BAAMA,UAAU,iBAEZiW,EAAU4J,YAAYtZ,eACpB,IACF0P,EAAU4J,YAAYrZ,eACpB,IACFyP,EAAU4J,YAAYpZ,qBAMhC,yBAAKzG,UAAU,qBAIjBiW,EAAUhZ,YAAcgZ,EAAUhZ,WAAWzT,OAAS,GACtD,8BAAUwW,UAAU,eAClB,4BAAQA,UAAU,SAAlB,gBAEEiW,EAAUhZ,WAAW3C,KAAI,SAAChS,EAASqK,GAAW,IAAD,cAC3C,OACE,kBAAC,WAAD,CAAUrI,IAAKqI,GACb,yBAAKqN,UAAU,wDAAwD+H,UAAQ,QAC7E,yBAAK/H,UAAU,uBACb,+BACE,yBAAKA,UAAU,iBAAf,iBACA,yBAAKA,UAAU,0BACb,uBAAGA,UAAU,eAAe8E,QAAS,kBAAM5B,EAAQf,KAAK,mBAAqB7Z,EAAQ0J,aACnF,4BAAQgO,UAAU,qBAAoB,yBAAKqC,IAAKxd,EAAkByD,EAAQ+M,aAAcqT,IAAKpgB,EAAQ+M,oBAO7G,yBAAK2K,UAAU,uBACb,+BACE,yBAAKA,UAAU,iBAAf,QACA,0BAAMA,UAAU,iBAAiB1X,EAAQ4C,eAG7C,yBAAK8U,UAAU,uBACb,+BACE,yBAAKA,UAAU,iBAAf,YACA,0BAAMA,UAAU,iBAAiB1X,EAAQ6C,YAG7C,6BACE,+BACE,yBAAK6U,UAAU,iBAAf,SACA,0BAAMA,UAAU,iBAAiD,MAAhC1X,EAAQT,SAASH,WAAqB,IAAM,SAAKY,EAAQoM,iBAIhG,yBAAKqT,UAAQ,OAAO/H,UAAU,yDAC5B,yBAAKA,UAAU,uBACb,+BACE,yBAAKA,UAAU,iBAAf,WACA,4BAAQA,UAAU,8BAA8BjX,KAAK,UAAUvC,GAAG,UAChE8H,MAAOowB,EAAkB/rB,IAAU+rB,EAAkB/rB,GAAOkG,SAAW,IACvEmP,SAAU,SAACC,GAAD,OAAOkX,EAAmBxsB,EAAO,UAAWsV,EAAEC,cAAc5Z,SAEtE,4BAAQhE,IAAI,IAAIgE,MAAO,GAAvB,UAJF,UAMIwwB,EAASt5B,YANb,aAMI,EAAe8U,KAAI,SAACzB,EAASlG,GAC3B,OAAO,4BAAQrI,IAAKqI,EAAOrE,MAAOuK,EAAQM,WAAYN,EAAQE,mBAMxE,yBAAKiH,UAAU,uBACb,+BACE,yBAAKA,UAAU,iBAAf,mBACA,2BAAOA,UAAU,6BAA6BxZ,GAAG,iBAAiBsF,KAAK,OACrEwC,MAAOowB,EAAkB/rB,IAAU+rB,EAAkB/rB,GAAOwa,gBAAkB,GAC9EnF,SAAU,SAACC,GAAD,OAAOkX,EAAmBxsB,EAAO,iBAAkBsV,EAAEC,cAAc5Z,YAInF,yBAAK0R,UAAU,uBACb,+BACE,yBAAKA,UAAU,iBAAf,iBACA,2BAAOA,UAAU,6BAA6BxZ,GAAG,eAAesF,KAAK,OACnEwC,MAAOowB,EAAkB/rB,IAAU+rB,EAAkB/rB,GAAOuc,cAAgB,GAC5ElH,SAAU,SAACC,GAAD,OAAOkX,EAAmBxsB,EAAO,eAAgBsV,EAAEC,cAAc5Z,YAGjF,6BACE,+BACE,yBAAK0R,UAAU,iBAAf,iBACA,2BAAOA,UAAU,6BAA6BxZ,GAAG,eAAesF,KAAK,OACnEwC,MAAOowB,EAAkB/rB,IAAU+rB,EAAkB/rB,GAAO4a,cAAgB,GAC5EvF,SAAU,SAACC,GAAD,OAAOkX,EAAmBxsB,EAAO,eAAgBsV,EAAEC,cAAc5Z,aAKnF,yBAAKyZ,UAAQ,OAAO/H,UAAU,yDAC5B,yBAAKA,UAAU,uBACb,+BACE,yBAAKA,UAAU,iBAAf,iBACA,4BAAQA,UAAU,8BAA8BjX,KAAK,eAAevC,GAAG,eACrE8H,MAAOowB,EAAkB/rB,IAAU+rB,EAAkB/rB,GAAO0K,cAAgB,GAC5E2K,SAAU,SAACC,GAAD,OAAOkX,EAAmBxsB,EAAO,eAAgBsV,EAAEC,cAAc5Z,SAE3E,4BAAQhE,IAAI,IAAIgE,MAAO,GAAvB,UACA,4BAAQhE,IAAI,IAAIgE,MAAM,eAAtB,eACA,4BAAQhE,IAAI,IAAIgE,MAAM,YAAtB,YACA,4BAAQhE,IAAI,IAAIgE,MAAM,YAAtB,eAIN,6BACE,+BACE,yBAAK0R,UAAU,iBAAf,oBACA,4BAAQA,UAAU,8BAA8BjX,KAAK,kBAAkBvC,GAAG,kBACxE8H,MAAOowB,EAAkB/rB,IAAU+rB,EAAkB/rB,GAAOsc,iBAAmB,GAC/EjH,SAAU,SAACC,GAAD,OAAOkX,EAAmBxsB,EAAO,kBAAmBsV,EAAEC,cAAc5Z,SAE9E,4BAAQhE,IAAI,IAAIgE,MAAO,GAAvB,UACA,4BAAQhE,IAAI,IAAIgE,MAAM,MAAtB,MACA,4BAAQhE,IAAI,IAAIgE,MAAM,OAAtB,WAQR,yBAAKyZ,UAAQ,OAAO/H,UAAU,yDAC5B,yBAAKA,UAAU,kBAEX,UAAA+e,EAAev5B,YAAf,mBAAqB2X,qBAArB,eAAoCzV,cAAeY,EAAQ6U,cAAczV,YACzE,kBAAC,GAA0Bq3B,GAE7B,+BAEE,4BAAQ/e,UAAU,+BAChB+K,UAAU,UAAAgU,EAAev5B,YAAf,mBAAqB2X,qBAArB,eAAoCzV,cAAeY,EAAQ6U,cAAczV,YAAcq3B,EAAerzB,WAChHoZ,QAAS,SAACmD,GAAQsX,EAAkB5sB,GAAQsV,EAAEwK,oBAE5C,UAAAsM,EAAev5B,YAAf,mBAAqB2X,qBAArB,eAAoCzV,cAAeY,EAAQ6U,cAAczV,YACzEq3B,EAAerzB,YACf,yBAAKsU,UAAU,uBAAuBqC,IAAI,kBAN9C,aAaN,yBAAKrC,UAAU,mCAUjC,yBAAKA,UAAU,qCC5VjBsgB,GAA0C,WAE9C,IAAM1yB,EAAWqV,cACXsd,EAAsBhd,aAA+B,SAAArJ,GAAK,OAAIA,EAAMrB,WACpE2nB,EAAgB3W,aAAU,CAC9BC,cAAe,CACb/Q,YAAa,GACbE,aAAc,GACdE,UAAW,KAEbiR,iBAAkBC,IAAW,CAC3BtR,YAAasR,MAAaC,SAAS,YACnCrR,aAAcoR,MAAaC,SAAS,cAEtCE,SAAU,SAACkG,G5CsIK,IAAC7X,E4CrIfjL,G5CqIeiL,E4CrIM6X,E5CqIP,uCAA2B,WAAO9iB,GAAP,iBAAAjI,EAAA,6DAC7CiI,EAASsK,MADoC,SAEtB/S,EAAS,WAC9B,CACE2T,aAAcD,EAAQE,YACtBC,aAAcH,EAAQI,aACtBC,WAAY,EACZ9D,aAAa,IAP4B,QAEvCnP,EAFuC,QAUhCC,SAAW3B,EAAekI,IAC/BoB,EAAM5H,EAAST,KACrBoI,GA3HoBtH,EA2HIuH,EAAIvH,SAAW,GA3HE,CAC3CwF,KAAMpH,GAAQ4Y,gBACdhX,cA4HEsH,EAASwK,GADGnS,EACcK,SAAW,KAfM,iCA/GxB,IAACA,IA+GuB,OAA3B,2D4C5HlB,OALA6d,qBAAU,WACJoc,EAAoB50B,YACtB60B,EAAc5U,cAEf,CAAC2U,EAAoB50B,aAEtB,0BAAM6e,SAAUgW,EAAc9V,aAAc1K,UAAU,kCACpD,yBAAKA,UAAU,6DACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,oCAAoC+H,UAAQ,QACzD,8BAAU/H,UAAU,eAClB,4BAAQA,UAAU,SAAlB,WACA,yBAAKA,UAAU,wDAAwD+H,UAAQ,QAC7E,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,gBACA,yCAAOA,UAAU,YAAYxZ,GAAG,cAAcsF,KAAK,SAC7C00B,EAAc5V,cAAc,iBAEhC4V,EAAc3V,QAAQ9R,aAAeynB,EAAc1V,OAAO/R,YACxD,0BAAMiH,UAAU,kBAAkBwgB,EAAc1V,OAAO/R,aACrD,KAIV,6BACE,+BACE,yBAAKiH,UAAU,iBAAf,iBACA,yCAAOA,UAAU,YAAYlU,KAAK,SAC5B00B,EAAc5V,cAAc,kBAEhC4V,EAAc3V,QAAQ5R,cAAgBunB,EAAc1V,OAAO7R,aACzD,0BAAM+G,UAAU,kBAAkBwgB,EAAc1V,OAAO7R,cACrD,UASpB,yBAAK+G,UAAU,iCACb,kBAAC,GAA0BugB,GAC3B,4BAAQxV,SAAUwV,EAAoB70B,WAAYI,KAAK,SAASkU,UAAU,gCAEtEugB,EAAoB70B,YACpB,yBAAKsU,UAAU,uBAAuBqC,IAAI,kBAE5C,2CCnENoe,GAAuC,WAC3C,IAAM7yB,EAAWqV,cAKXgT,EAAY1S,aAAsC,SAAArJ,GAAK,OAAIA,EAAMrB,QAAQrT,MAAQ,MACjF2wB,EAAiB,CACrB,CACEptB,KAAM,eACN2vB,SAAU,cACVC,UAAU,GAEZ,CACE5vB,KAAM,gBACN2vB,SAAU,eACVC,UAAU,GAEZ,CACE5vB,KAAM,SACN4vB,UAAU,EACVkB,KAAM,SAACC,GACL,OAAQ,4BAAQhuB,KAAK,SAASkU,UAAU,mCAAmC8E,QAAS,kBApBnE3L,EAoBuF2gB,EAAI3gB,UApBxEJ,EAoBmF+gB,EAAI/gB,YApBnEE,EAoBgF6gB,EAAI7gB,kBAnBlIpT,OAAOk0B,QAAQ,yBACpBnsB,EAASgL,GAAc,CAACO,YAAUJ,cAAYE,iBAAc,KAFjD,IAACE,EAAmBJ,EAAoBE,IAqB7C,4CAMjB,OACE,kBAAC,GAAD,CACEkd,eAAgBA,EAChBC,YAAa5xB,EAAY8wB,QACzB4B,oBAAsBA,GACtBjB,UAAWA,EACX8B,kBAAkB,sBAClBhB,gBAAkB,EAClBN,aAAa,iBAIbS,GAAoD,SAAC,GAAc,IAAZ1xB,EAAW,EAAXA,KACrDoI,EAAWqV,cACV9J,EAAqD3T,EAArD2T,UAAUJ,EAA2CvT,EAA3CuT,YAAYE,EAA+BzT,EAA/ByT,aACvBsnB,EAAsBhd,aAA+B,SAAArJ,GAAK,OAAIA,EAAMrB,WAEpE6nB,EAAyB7W,aAAU,CACvCC,cAAe,CACb3Q,YACAJ,cACAE,gBAEFmR,iBAAkBC,IAAW,CAC3BtR,YAAasR,MAAaC,SAAS,YACnCrR,aAAcoR,MAAaC,SAAS,cAEtCE,SAAU,SAAClc,GACTV,EAASgL,GAActK,OAG3B,OACE,0BAAMkc,SAAUkW,EAAuBhW,aAAc1K,UAAU,qDAAqD+H,UAAQ,QAC1H,8BAAU/H,UAAU,eAClB,yBAAKA,UAAU,wDAAwD+H,UAAQ,QAC7E,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,gBACA,yCAAOA,UAAU,YAAYxZ,GAAG,cAAcsF,KAAK,SAC7C40B,EAAuB9V,cAAc,iBAEzC8V,EAAuB7V,QAAQ9R,aAAe2nB,EAAuB5V,OAAO/R,YAC1E,0BAAMiH,UAAU,kBAAkB0gB,EAAuB5V,OAAO/R,aAC9D,KAIV,6BACE,+BACE,yBAAKiH,UAAU,iBAAf,iBACA,yCAAOA,UAAU,YAAYlU,KAAK,SAC5B40B,EAAuB9V,cAAc,kBAEzC8V,EAAuB7V,QAAQ5R,cAAgBynB,EAAuB5V,OAAO7R,aAC3E,0BAAM+G,UAAU,kBAAkB0gB,EAAuB5V,OAAO7R,cAC9D,KAIV,6BACE,+BACE,yBAAK+G,UAAU,iBAAf,kBACA,4BAAQlU,KAAK,SAASkU,UAAU,gCAE5BugB,EAAoB70B,YACpB,yBAAKsU,UAAU,uBAAuBqC,IAAI,kBAE5C,4CAKR,yBAAKrC,UAAU,mCACd0gB,EAAuBlI,cAAgB,kBAAC,GAA0B+H,OClGrEI,GAA2C,SAAC5gB,GAChD,IAAMnS,EAAWqV,cACXgT,EAAY1S,aAA8B,SAAArJ,GAAK,OAAIA,EAAMrO,KAAKL,UAAY,MAC1E2qB,EAAiB,CACrB,CACEptB,KAAM,QACN2vB,SAAU,eACVC,UAAU,GAEZ,CACE5vB,KAAM,SACN2vB,SAAU,SACVC,UAAU,GAEZ,CACE5vB,KAAM,aACN2vB,SAAU,YACVC,UAAU,GAEZ,CACE5vB,KAAM,YACN2vB,SAAU,WACVC,UAAU,GAEZ,CACE5vB,KAAM,eACN4vB,UAAU,EACVkB,KAAM,SAACC,GACL,OAAO,4BAAQhuB,KAAK,SAASkU,UAAU,oCAAoC8E,QAAS,WAAOlX,EAAShC,EAAQkuB,IAAM/Z,EAAM0U,eAAc,KACpI,0CAMR,OACE,kBAAC,GAAD,CACE0B,eAAgBA,EAChBC,YAAa5xB,EAAYwwB,MACzBiB,UAAWA,EACXiB,oBAAqBA,GACrBa,kBAAkB,wBAClBhB,gBAAgB,KAIhBG,GAAoD,SAAC,GAAc,IAAZ1xB,EAAW,EAAXA,KACrDoI,EAAWqV,cACT5W,EAAiC7G,EAAjC6G,aAAc/E,EAAmB9B,EAAnB8B,SAChBs5B,EAAmBrd,aAAuC,SAAArJ,GAAK,OAAIA,EAAMrO,QAEzEg1B,EAA8BhX,aAAU,CAC5CC,cAAe,CACbzd,aAAcA,GAAgB,GAC9B/E,SAAUA,GAAY,IAExB8iB,iBAAkBC,IAAW,CAC3Bhe,aAAcge,MAAaC,SAAS,YACpChjB,SAAU+iB,MAAaC,SAAS,cAElCE,SAAU,SAAClc,GACTV,EhE0GqB,SAACtG,EAAkB8oB,GAAnB,8CAAsC,WAAO5jB,GAAP,SAAA7G,EAAA,6DAC/D6G,EAASR,KADsD,SAGvC7G,EAAS,gBAAiB,CAChDirB,QACA9oB,aAL6D,cAQlDpB,SAAW3B,EAAekI,GACrCD,EAASJ,EAAegkB,EAAM9oB,EAAU,qBAExCkF,EAASN,EAAU,mCAX0C,2CAAtC,sDgE1GZ40B,CAAmBxyB,EAAMhH,UAAY,IAAKgH,EAAMjC,aAAa3E,gBAG1E,OACE,0BAAM8iB,SAAUqW,EAA4BnW,aAAc1K,UAAU,qDAAqD+H,UAAQ,QAC/H,8BAAU/H,UAAU,eAClB,yBAAKA,UAAU,wDAAwD+H,UAAQ,QAC7E,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,uBACA,yCAAOA,UAAU,YAAYxZ,GAAG,WAAWsF,KAAK,SAC1C+0B,EAA4BjW,cAAc,cAE9CiW,EAA4BhW,QAAQvjB,UAAYu5B,EAA4B/V,OAAOxjB,SACjF,0BAAM0Y,UAAU,kBAAkB6gB,EAA4B/V,OAAOxjB,UACnE,KAIV,6BACE,+BACE,yBAAK0Y,UAAU,iBAAf,UACA,4BAAQlU,KAAK,SAASkU,UAAU,gCAE5B4gB,EAAiBl1B,YACjB,yBAAKsU,UAAU,uBAAuBqC,IAAI,kBAE5C,0CAKR,yBAAKrC,UAAU,mCACd6gB,EAA4BrI,cAAgB,kBAAC,GAA0BoI,OCvG1EG,GAAuC,WAC3C,IAAMvd,EAAWD,aAA4B,SAAArJ,GAAK,OAAIA,EAAMrO,KAAKrG,MAAQ,MACzE,OACE,yBAAKwa,UAAU,kCACb,yBAAKA,UAAU,6DACb,4BAAQA,UAAU,kBAAiB,wBAAIA,UAAU,SAAd,iBACnC,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,oCAAoC+H,UAAQ,QAC3D,8BAAU/H,UAAU,eACd,4BAAQA,UAAU,SAAlB,iBACA,yBAAKA,UAAU,wDAAwD+H,UAAQ,QAC7E,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,QACA,0BAAMA,UAAU,iBACbwD,EAASsD,UAAY,IAAMtD,EAASuD,YAG3C,6BACE,+BACE,yBAAK/G,UAAU,iBAAf,UACA,0BAAMA,UAAU,iBAAiBwD,EAASuG,UAG9C,6BACE,+BACE,yBAAK/J,UAAU,iBAAf,SACA,0BAAMA,UAAU,iBAAiBwD,EAASnX,gBAG9C,6BACE,+BACE,yBAAK2T,UAAU,iBAAf,YACA,0BAAMA,UAAU,iBAAiBwD,EAASlc,UAAY,EAAtD,QAIN,yBAAK0Y,UAAU,wDAAwD+H,UAAQ,QAC7E,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,WACA,0BAAMA,UAAU,iBAAiBwD,EAASoD,WAG9C,6BACE,+BACE,yBAAK5G,UAAU,iBAAf,SACA,0BAAMA,UAAU,iBAAiBwD,EAAStJ,SAG9C,6BACE,+BACE,yBAAK8F,UAAU,iBAAf,QACA,0BAAMA,UAAU,iBAAiBwD,EAASkD,QAG9C,6BACE,+BACE,yBAAK1G,UAAU,iBAAf,WACA,0BAAMA,UAAU,iBAAiBwD,EAASmD,YAIhD,yBAAK3G,UAAU,wDAAwD+H,UAAQ,QAC7E,6BACE,+BACE,yBAAK/H,UAAU,iBAAf,WACA,0BAAMA,UAAU,iBAEZwD,EAAS+C,eACP,IACF/C,EAASgD,eACP,IACFhD,EAASiD,qBAMnB,yBAAKzG,UAAU,2BCpE3BghB,GAAyC,WAC7C,IAAMpzB,EAAWqV,cADkC,EAEtBwM,cAAtBnnB,EAF4C,EAE5CA,QAAS0J,EAFmC,EAEnCA,UAEhBmS,qBAAU,WACM,WAAX7b,GAAwB0J,GACzBpE,EAASuF,GAAWpM,OAAOiL,KAC3BivB,GAAW,GACXC,EAAgB18B,EAAYswB,UAE5BlnB,EAAS6D,QAEX,CAACnJ,EAAS0J,IAZuC,MAcrB0R,oBAAS,GAdY,oBAc5Cyd,EAd4C,KAcnCF,EAdmC,OAeXvd,mBAASlf,EAAYywB,QAfV,oBAe5CmM,EAf4C,KAe9BF,EAf8B,KAoB7CzM,EAAgB,SAAC0M,GACrBF,EAAWE,IAwBb,OACE,8BACE,6BAASnhB,UAAU,+BACjB,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,iBAAiB+H,UAAQ,QACtC,kBAAC,GAAD,CAAUyM,iBAjCK,SAAC4M,GACxBF,EAAgBE,IAgCsC3M,cAAeA,IA1BvC,WAC9B,OAAQ2M,GACN,KAAK58B,EAAY4wB,OACf,OAAO+L,EAAU,kBAAC,GAAD,MAAoB,kBAAC,GAAD,MACvC,KAAK38B,EAAY2wB,KACf,OAAOgM,EAAU,kBAAC,GAAD,MAAiB,kBAAC,GAAD,MACpC,KAAK38B,EAAY0wB,YACf,OAAOiM,EAAU,kBAAC,GAAD,MAAwB,kBAAC,GAAD,MAC3C,KAAK38B,EAAY6wB,QACf,OAAO8L,EAAU,kBAAC,GAAD,MAAmB,kBAAC,GAAD,MACtC,KAAK38B,EAAYswB,QACf,OAAOqM,EAAU,kBAAC,GAAD,MAAiB,kBAAC,GAAD,CAAa1M,cAAeA,IAChE,KAAKjwB,EAAYywB,OACf,OAAOkM,EAAU,kBAAC,GAAD,MAAkB,kBAAC,GAAD,CAAW1M,cAAeA,IAC/D,KAAKjwB,EAAY8wB,QACf,OAAO6L,EAAU,kBAAC,GAAD,MAAoB,kBAAC,GAAD,MACvC,KAAK38B,EAAYwwB,MACf,OAAOmM,EAAU,kBAAC,GAAD,MAAiB,kBAAC,GAAD,CAAU1M,cAAeA,KAUrD4M,Q,oBC5CRC,GAAsD,SAACvhB,GAC3D,IAAMnS,EAAWqV,cACXC,EAAUC,cAF4D,EAGjDsM,cAApBnnB,EAHqE,EAGrEA,QAAQi5B,EAH6D,EAG7DA,SAH6D,EAI9B7d,oBAAS,GAJqB,oBAIrE8d,EAJqE,KAIpDC,EAJoD,KAMtE/6B,EAAgB6c,aAAmC,SAAArJ,GAAK,OAAIA,EAAMrT,eAClEk0B,EAAcxX,aAA4B,SAAArJ,GAAK,OAAIA,EAAMhT,QACzD8zB,EAAgBzX,aAA8B,SAAArJ,GAAK,OAAIA,EAAMrH,UAC7DyB,EAAOiP,aAA4B,SAAArJ,GAAK,OAAIA,EAAM5F,QAClDvM,EAAewb,aAAoC,SAAArJ,GAAK,OAAIA,EAAMnS,gBAClEyb,EAAWD,aAAY,SAACrJ,GAAD,OAAqBA,EAAMrO,QAClD6S,EAAS6E,aAA8B,SAAArJ,GAAK,OAAIA,EAAMwE,OAAOlZ,MAAQ,MACjD+d,aAA0C,SAAArJ,GAAK,OAAIA,EAAM4E,sBAWnFqF,qBAAU,WAAO,IAAD,QAC8H,IAAxI9a,EAASqC,cAAcqU,EAAMpZ,WAAW6C,OAAQ,IAAO9C,EAAcgF,YAAeqvB,EAAYrvB,YAAesvB,EAActvB,aAC/HkC,EAAS6D,MACT7D,EAASyF,GAAoB,EtDnDlB,GsDmD+B0M,EAAMpZ,WAAYoZ,EAAMpQ,eAAiB,GACjFoQ,EAAMvX,UAAY,GAAIuX,EAAMjX,QAAU,GAAIiX,EAAMvM,YAAc,GAAIuM,EAAMtM,UAAU,GAClF1L,EAAavC,MAAQ,KACrBkZ,EAAOhL,aAAP,UAAqBguB,KAAYzQ,MAAMprB,OAAOO,SAASsY,OAAOwD,MAAM,KAAK,IAApD,kBAArB,aAAqB,EAAuExa,aAAc,IACxG,IAEJkG,EAAS0L,GAAU,CACjB3S,WAAYoZ,EAAMpZ,WAClB6B,SAAUuX,EAAMvX,UAAY,GAC5BX,SAAUE,EAAavC,MAAQ,KAC/BiO,SAAUsM,EAAMtM,UAAU,GAC1B3K,OAAQiX,EAAMjX,QAAU,GACxB0K,WAAYuM,EAAMvM,YAAc,GAChC7D,cAAeoQ,EAAMpQ,eAAiB,GACtC+D,WAAYgL,EAAOhL,aAAP,UACZguB,KAAYzQ,MAAMprB,OAAOO,SAASsY,OAAOwD,MAAM,KAAK,IAApD,kBADY,aACZ,EAAuExa,aAAc,OAGzF,IAAG,UAAAqY,EAAMvX,gBAAN,eAAgBd,cAAhB,UAA8BqY,EAAMjX,cAApC,aAA8B,EAAcpB,cAA5C,UAA0DqY,EAAMpQ,qBAAhE,aAA0D,EAAqBjI,aAC3EqY,EAAMvM,YAAcuM,EAAMtM,UAAYiL,EAAOhL,aADjD,UAC+DguB,KAAYzQ,MAAMprB,OAAOO,SAASsY,OAAOwD,MAAM,KAAK,IAApD,kBAD/D,aAC+D,EAAuExa,YAAY,CAAC,IAAD,cAiBxB,IAhBnHi6B,EAAc,GAgBlB,IAfC,UAAG5hB,EAAMvX,gBAAT,aAAG,EAAgBd,aACjBi6B,EAAYxf,KAAK,YAAYpC,EAAMvX,SAASd,aAE9C,UAAGqY,EAAMjX,cAAT,aAAG,EAAcpB,aAChBi6B,EAAYxf,KAAK,UAAUpC,EAAMjX,OAAOpB,aAE1C,UAAGqY,EAAMpQ,qBAAT,aAAG,EAAqBjI,aACtBi6B,EAAYxf,KAAK,iBAAiBpC,EAAMpQ,cAAcjI,aAExD,UAAGqY,EAAMvM,kBAAT,aAAG,EAAkB9L,aACnBi6B,EAAYxf,KAAK,cAAcpC,EAAMvM,WAAW9L,aAElD,UAAGqY,EAAMtM,gBAAT,aAAG,EAAgB/L,aACjBi6B,EAAYxf,KAAK,YAAYpC,EAAMtM,SAAS/L,aAE3C,UAAAgX,EAAOhL,kBAAP,eAAmBhM,cAAnB,UAAiCg6B,KAAYzQ,MAAMprB,OAAOO,SAASsY,OAAOwD,MAAM,KAAK,IAApD,kBAAjC,aAAiC,EAAuExa,YACzGi6B,EAAYxf,KAAK,gBAAe,UAAAzD,EAAOhL,kBAAP,eAAmBhM,cAAnB,UAAiCg6B,KAAYzQ,MAAMprB,OAAOO,SAASsY,OAAOwD,MAAM,KAAK,IAApD,kBAAjC,aAAiC,EAAuExa,cAG5Iwb,EAAQf,KAAK,CACXmH,SAAU,YAAahhB,EAAb,UAA0Bi5B,EAAW,IAAIA,EAAU,IAC7D7iB,OAAQ,cAAgC,IAAvBijB,EAAYn4B,OAAem4B,EAAY,GAAMA,EAAYx3B,KAAK,aAGjF+Y,EAAQf,KAAK,CACXmH,SAAU,YAAahhB,EAAb,UAA0Bi5B,EAAW,IAAIA,EAAU,QAGnE,CAACxhB,EAAMjX,OAAOiX,EAAMpZ,WAAWoZ,EAAMvX,SAASuX,EAAMpQ,cAAcoQ,EAAMvM,WAAWuM,EAAMtM,SAAU/M,EAAcgF,WAAYqvB,EAAYrvB,WAAYsvB,EAActvB,aAErKyY,qBAAU,WACR,OAAO,WACLvW,EAAS0L,GAAU,CACjB3S,WAAY,GACZ6B,SAAU,GACVX,SAAUE,EAAavC,MAAQ,KAC/BiO,SAAU,GACV3K,OAAS,GACT0K,WAAY,GACZ7D,cAAgB,GAChB+D,WAAYgL,EAAOhL,YAAc,SAGrC,IAEF,IAgBMrK,EAAWka,aAA+B,SAAArJ,GAAK,OAAIA,EAAM5R,SAAW,MAC1E6b,qBAAU,WACRsd,EAAmBp4B,EAASkI,mBAAoB,KAC/C,CAAClI,EAASkI,mBAGb,IAAM0kB,EAAY5sB,EAAS7D,KAoC3B,OACE,yBAAKwa,UAAU,mBACb,yBAAKA,UAAU,oCAAoC+H,UAAQ,QACzD,6BACE,yBAAK/H,UAAU,6DACb,yBAAKA,UAAU,sCAAsCxZ,GAAG,WAAWuhB,UAAQ,QACzE,yBAAK/H,UAAU,oDAAqDiL,YAAU,8BAC5E,yBAAKjL,UAAU,8CAA8C+H,UAAQ,QACnE,yBAAK/H,UAAU,sEACb,4BAAQA,UAAU,0DAA2DiH,YAAU,oBACrF,0BAAMjH,UAAU,yBAAyB4I,UAAQ,gCADnD,cAMN,6BAEE,kBAAC,KAAD,CACE6F,WAAYwH,GAAaA,EAAUzsB,QAAU,EAC7CklB,KA7EU,YACnBrlB,EAASqC,YAAcuqB,GAAalW,EAAMpZ,WAAW6C,OAAQ,IAChEoE,EAASyF,GAAoB4iB,EAAUzsB,OtDvH5B,GsDuH8CuW,EAAMpZ,WAAYoZ,EAAMpQ,eAAiB,GAAIoQ,EAAMvX,UAAY,GAAIuX,EAAMjX,QAAU,GAAIiX,EAAMvM,YAAc,GAAIuM,EAAMtM,UAAU,GAAI1L,EAAavC,MAAQ,KAAKkZ,EAAOhL,YAAc,KAC3O9F,EAAS0L,GAAU,CACjB3S,WAAYoZ,EAAMpZ,WAClB6B,SAAUuX,EAAMvX,UAAY,GAC5BX,SAAUE,EAAavC,MAAQ,KAC/BiO,SAAUsM,EAAMtM,UAAU,GAC1B3K,OAAQiX,EAAMjX,QAAU,GACxB0K,WAAYuM,EAAMvM,YAAc,GAChC7D,cAAeoQ,EAAMpQ,eAAiB,GACtC+D,WAAYgL,EAAOhL,YAAc,QAmEvBib,QAAS6S,EACT5S,OACE,yBAAKnN,MAAO,CAAEoN,UAAW,SAAUC,UAAW,SAC5C,2CAGJC,WACE,uBAAGtN,MAAO,CAAEoN,UAAW,WACrB,qGAIJ,yBAAK7O,UAAU,2EAA2E+H,UAAQ,QAE7FkO,GAAaA,EAAUzsB,OAAS,EAAIysB,EAAU3b,KAAI,SAAChS,EAASqK,GAAW,IAAD,MACrE,OACE,6BAASqN,UAAU,kBAAkB1V,IAAKqI,GACxC,yBAAKqN,UAAU,yBACb,yBAAKA,UAAU,yBACb,uBAAGA,UAAU,eAAe8E,QAAS,kBAAK5B,EAAQf,KAAK,mBAAoB7Z,EAAQ0J,aAEjF,4BAAQgO,UAAU,qBAAoB,yBAAKqC,IAAKxd,EAAkByD,EAAQmgB,WAAYC,IAAKpgB,EAAQqgB,iBAIzG,yBAAK3I,UAAU,wBACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,wCAAwC1X,EAAQsG,qBAC/D,wBAAIoR,UAAU,yBAAwB,uBAAGA,UAAU,kBAAkB8E,QAAS,kBAAK5B,EAAQf,KAAK,mBAAoB7Z,EAAQ0J,aAAa1J,EAAQS,QAEnJ,yBAAKiX,UAAU,wBACb,yBAAKA,UAAU,2BAEX,UAAAwD,EAAShe,YAAT,eAAe8B,WAAwC,OAA5B,UAAAkc,EAAShe,YAAT,eAAe8B,WAC1C,yBAAK0Y,UAAU,gBAAgBpY,EAAgBG,EAAavC,MAAQ,MAApE,IAA4EsC,EAAWC,EAAavC,MAAQ,KAAM8C,IAEpH,yBAAK0X,UAAU,yBACZpY,EAAgBG,EAAavC,MAAQ,MADxC,IACgD6B,GAAsB,UAAAmc,EAAShe,YAAT,eAAe8B,WAAW,IAAKQ,EAAWC,EAAavC,MAAQ,KAAM8C,MAG7I,yBAAK0X,UAAU,uBACb,4BAAQA,UAAU,kFAEd1L,EAAK5I,YAAc,0BAAM0b,aAAW,UAGnC9S,EAAK5I,YACJ,oCACA,0BAAMsU,UAAU,kCAAkC4I,UAAQ,OAAO9D,QAAS,kBAtG9F,SAACxc,GAAyB,IAAD,EACzC,GAAG,UAACkb,EAAShe,YAAV,aAAC,EAAeqjB,OAeb,CACJ,IAAMC,EAAW,CACfhU,gBAAiBxM,EAAQwM,gBACzBH,gBAAiB,IACjBM,aAAoC,OAAtBlN,EAAavC,KAAgB,EAAI,EAC/C2P,OAAQ,IACRE,aAAc/M,EAAQqgB,WACtBrT,iBAAkBhN,EAAQmgB,WAC1Bvd,YAAa5C,EAAQS,KACrBwM,YAAajN,EAAQsG,oBACrB8F,aAAc,IACd1C,UAAW1J,EAAQ0J,WAGrBpE,EAASyG,GAAcyU,GAAU,QA7BT,CACxB,IAAMA,EAAW,CACfhU,gBAAiBxM,EAAQwM,gBACzBH,gBAAiB,IACjBM,aAAoC,OAAtBlN,EAAavC,KAAgB,EAAI,EAC/C2P,OAAQ7M,EAAQwM,gBAChBO,aAAc/M,EAAQqgB,WACtBrT,iBAAkBhN,EAAQmgB,WAC1Bvd,YAAa5C,EAAQS,KACrBwM,YAAajN,EAAQsG,oBACrB8F,aAAc5M,EAAWC,EAAavC,MAAQ,KAAM8C,GACpD0J,UAAW1J,EAAQ0J,WAGrBpE,EAASyG,GAAcyU,GAAU,KAuFiFC,CAAUzgB,MAC1F,0BAAM0X,UAAU,mCAAhB,wBAWb3W,EAASkI,kBAAqBiB,MtD/PxC,IsD+PwDwpB,KAAK,GAAG1hB,KAAI,SAAChM,EAAOqE,GAAR,OAAkB,kBAAC,GAAD,CAAuBrI,IAAKqI,EAAOsW,SAAUtW,gBC5O9IivB,GAA6C,WAEjD,IAAMh0B,EAAWqV,cACXC,EAAUC,cAHuC,EAIzBsM,cAAtBnnB,EAJ+C,EAI/CA,QAASi5B,EAJsC,EAItCA,SAJsC,EAKvB7d,mBAAmB,IALI,oBAKhDlb,EALgD,KAKtCq5B,EALsC,OAM3Bne,mBAAmB,IANQ,oBAMhD5a,EANgD,KAMxCg5B,EANwC,OAObpe,mBAAmB,IAPN,oBAOhD/T,EAPgD,KAOjCoyB,EAPiC,OAQnBre,mBAAS,IARU,oBAQhDlQ,EARgD,KAQpCwuB,EARoC,OASvBte,mBAAS,IATc,oBAShDjQ,EATgD,KAStCwuB,EATsC,OAUnBve,mBAAmB,IAVA,oBAUhD/c,EAVgD,KAUpCu7B,EAVoC,OAWGxe,mBAA+B,IAXlC,oBAWhDye,EAXgD,KAWzBC,EAXyB,KAajDpH,GADczX,aAAqC,SAAArJ,GAAK,OAAIA,EAAMhT,KAAK1B,MAAQ,MAC/D+d,aAAsC,SAAArJ,GAAK,OAAIA,EAAMrH,OAAOrN,MAAQ,OACpFkZ,EAAS6E,aAA8B,SAAArJ,GAAK,OAAIA,EAAMwE,OAAOlZ,MAAQ,MACrE68B,EAAoB9e,aAA0C,SAAArJ,GAAK,OAAIA,EAAM4E,sBAC/EwjB,EAAcC,cAAc7jB,OAChCyF,qBAAU,WACRvW,EAASiC,MACTjC,EAASkB,MACTlB,EAASD,QACR,IAQHwW,qBAAU,WAAO,IAAD,QACdvW,EAAS6D,MACT,IAAMgpB,EAAcvwB,OAAOD,KAAKtF,GAAeiC,QAAO,SAAC0D,GAAD,OAASA,EAAIiQ,gBAAkBjS,EAAQiS,iBAC7F,GAAIkgB,EAAY,GACdyH,EAAc,CAACv9B,EAAc81B,EAAY,UACpC,CACL,IAAM+H,EAAsB,GAC5B,IAAK,IAAIl4B,KAAO3F,EACd69B,EAAUrgB,KAAKxd,EAAc2F,IAE/B43B,EAAcM,GAEyC,MAAtD,UAAAH,EAAkB78B,YAAlB,eAAwBoU,gBAAgBlS,aAAmBY,EAAQZ,WAAW6S,iBAAnB,UAAqC8nB,EAAkB78B,YAAvD,aAAqC,EAAwBoU,gBAAgBW,iBACzIsnB,EAAY,IACZC,EAAU,IACVE,EAAc,IACdC,EAAY,KAKd,IAAMQ,EAAcH,EAAYpgB,MAAM,KAAK,GACrCwgB,EAAchB,KAAYzQ,MAAMwR,GACjClB,GAA6D,KAAjD,UAAAc,EAAkB78B,YAAlB,eAAwB+C,cAAciB,UAAgB,UAACk5B,EAAW,qBAAZ,aAAC,EAA8Bh7B,aACpGq6B,EAAiB,MAGlB,CAACz5B,IAEJ,IAAM5B,EAAgB6c,aAAmC,SAAArJ,GAAK,OAAIA,EAAMrT,eAClE87B,EAAqBpf,aAAoC,SAAArJ,GAAK,OAAIA,EAAMyB,gBACxEinB,EAAa14B,OAAOD,KAAKtF,GAAek+B,MAAK,SAACttB,GAAD,OAAiBA,EAAYgF,gBAAkBjS,EAAQiS,kBAAkB,GACxH+gB,EAAwB70B,EAAoBC,EAAe/B,EAAci+B,IAC/C,WAA1Bt6B,EAAQiS,gBACV+gB,EAAwB50B,EAAclB,MAAQ,IAIhD2e,qBAAU,WAC2F,IAAD,IAA9Fod,IAAa76B,EAAcgF,YAAchF,EAAclB,MAAQkB,EAAclB,KAAKgE,OAAS,IAC7Fu4B,EAAiB,CAACh7B,OAAM,UAACL,EAAclB,YAAf,aAAC,EAAoBoB,QAAO,qBAAG4H,KAAgB+L,gBAAkBgnB,EAAShnB,iBAAe,GAAG5K,iBACpHyyB,GAAyB,UAAA17B,EAAclB,YAAd,eAAoBoB,QAAO,qBAAG4H,KAAgB+L,gBAAkBgnB,EAAShnB,mBAAkB,OAErH,CAACgnB,EAAU76B,EAAcgF,aAuD5B,OACE,8BACE,6BAASsU,UAAU,+BACjB,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,oCAAoC+H,UAAQ,QACzD,yBAAK/H,UAAU,kBACb,wBAAIA,UAAU,iDACZ,4BAAI,uBAAG8E,QAAS,kBAAM5B,EAAQf,KAAK,OAA/B,SACJ,4BAAI,2CAEN,wBAAInC,UAAU,gEAAgE1X,GAEtD,KAAtBoW,EAAOhL,YAAqB,yBAAKsM,UAAU,qCAjE5B,WAC3B,IAAIvX,EAAQ,EACNN,EAAiBw6B,EAAmBn9B,KAC1C,GAAI2C,EAAgB,CAClB,IAAM26B,EAAiBnzB,EAAcnG,OAAS,EAAImG,EAAgB2rB,EAAsBhhB,KAAI,gBAAG3K,EAAH,EAAGA,cAAH,OAAuB5I,OAAO4I,MACpHozB,EAAiBv6B,EAASgB,OAAS,EAAIhB,EAAWwyB,EAAcxxB,OAAS,EAAIwxB,EAAc1gB,KAAI,gBAAG9R,EAAH,EAAGA,SAAH,OAAkBzB,OAAOyB,MAAa,GACrIw6B,EAAel6B,EAAOU,OAAS,EAAIV,EAAS,GAGtB,IAAxBk6B,EAAax5B,OACfs5B,EAAez6B,SAAQ,SAACxB,GACnBsB,EAAetB,IAChBk8B,EAAe16B,SAAQ,SAACwK,GACnB1K,EAAetB,GAAagM,IAAW1K,EAAetB,GAAagM,GAAQpK,QAC5EA,GAASN,EAAetB,GAAagM,GAAQpK,aAMrDq6B,EAAez6B,SAAQ,SAACxB,GACnBsB,EAAetB,IAChBk8B,EAAe16B,SAAQ,SAACwK,GACtB,GAAG1K,EAAetB,GAAagM,GAAQ,CAErC,IADA,IAAIowB,EAAa,EACT1F,EAAG,EAAGA,EAAGyF,EAAax5B,OAAQ+zB,IACpC,GAAGp1B,EAAetB,GAAagM,GAAQ3L,KAAK87B,EAAazF,IAAI,CAC3D,GAAGp1B,EAAetB,GAAagM,GAAQ3L,KAAK87B,EAAazF,MAAQp1B,EAAetB,GAAagM,GAAQpK,MAAM,CACzGw6B,EAAa96B,EAAetB,GAAagM,GAAQpK,MACjD,MAEAw6B,GAAa96B,EAAetB,GAAagM,GAAQ3L,KAAK87B,EAAazF,IAIzE90B,GAAOw6B,SAOnB,OAAOx6B,EAuBqFy6B,GAApD,WAGhC,6BACE,yBAAKljB,UAAU,iBAAiB+H,UAAQ,QAEpC,kBAAC,GAAD,CACErhB,cAAe40B,EACfqH,mBAAoBA,EACpBQ,eAAgBhB,EAChBx7B,WAAYA,EACZk7B,YAAaA,EACbC,UAAWA,EACXC,iBAAkBA,EAClBC,cAAeA,EACfC,YAAaA,IAIf,kBAAC,GAAD,CACEt7B,WAAYA,EACZ6B,SAAUA,EACVM,OAAQA,EACR6G,cAAeA,EACf6D,WAAYA,EACZC,SAAUA,WC3JxB2vB,GAAwD,SAACrjB,GAE7D,IAAMnS,EAAWqV,cACT3a,EAAYmnB,cAAZnnB,QACF+5B,EAAoB9e,aAA0C,SAAArJ,GAAK,OAAIA,EAAM4E,sBAJL,EAKlC4E,mBAAmB,IALe,oBAKvE2f,EALuE,KAKvDC,EALuD,OAMtC5f,mBAAmB,IANmB,oBAMvE6f,EANuE,KAMzDC,EANyD,OAO5B9f,mBAAmB,IAPS,oBAOvE+f,EAPuE,KAOpDC,EAPoD,OAQ9BhgB,mBAAS,IARqB,oBAQvEigB,EARuE,KAQrDC,EARqD,OASlClgB,mBAAS,IATyB,oBASvEmgB,EATuE,KASvDC,EATuD,OAUhCpgB,mBAAS,GAVuB,oBAUvEqgB,EAVuE,KAUtDC,EAVsD,OAWpCtgB,mBAAS,GAX2B,oBAWvEugB,EAXuE,KAWxDC,EAXwD,KAYxEnJ,EAAcxX,aAA4B,SAAArJ,GAAK,OAAIA,EAAMhT,QACzD8zB,EAAgBzX,aAA8B,SAAArJ,GAAK,OAAIA,EAAMrH,UAqC7DsxB,EAAyB,SAACC,EAAeC,GAC7C,IAAM1xB,EAAQyxB,EAAIj9B,QAAQk9B,GAM1B,OALI1xB,GAAS,EACXyxB,EAAIzI,OAAOhpB,EAAM,GAEjByxB,EAAIjiB,KAAKkiB,GAEJD,GAEHE,EAAqB,SAACzxB,EAAgB3L,EAAcL,EAAsB2M,EAAqBC,GACnG,GAAa,GAAVZ,EAAY,CACb,IAAM0xB,EAAsBJ,EAAuBd,EAAgBxwB,GACnEywB,EAAkB,aAAIiB,IACtBxkB,EAAM8hB,YAAN,aAAsB0C,IACtB32B,EAASmM,GAAqB,WAAD,aAAgBwqB,UACxC,GAAY,GAARr9B,EAAU,CACnB,IAAMs9B,EAAoBL,EAAuBZ,EAAcr8B,GAC/Ds8B,EAAgB,aAAIgB,IACpBzkB,EAAM+hB,UAAN,aAAoB0C,IACpB52B,EAASmM,GAAqB,SAAD,aAAcyqB,UACtC,GAAI39B,GAA8B,GAAfA,EAAiB,CACzC,IAAM49B,EAAqBN,EAAuBV,EAAmB58B,GACrE68B,EAAqB,aAAIe,IACzB1kB,EAAMgiB,iBAAN,aAA2B0C,IAC3B72B,EAASmM,GAAqB,gBAAD,aAAqB0qB,SAC7B,MAAbjxB,GAAqBC,GAOrBA,IAAcA,GAAYowB,KAClCC,EAAkBrwB,GAAY,IAC9B5N,OAAOgiB,aAAaoc,GACpBC,EAAiBr+B,OAAOyf,YAAW,WACjCvF,EAAMkiB,YAAYxuB,GAAY,IAC9B7F,EAASmM,GAAqB,WAAWtG,GAAY,OACrD,QAZFmwB,EAAoBpwB,GAAc,IAClC3N,OAAOgiB,aAAakc,GACpBC,EAAmBn+B,OAAOyf,YAAW,WACnCvF,EAAMiiB,cAAcxuB,GAAc,IAClC5F,EAASmM,GAAqB,aAAavG,GAAa,OACxD,QAWAkxB,EAAa,WACjBpB,EAAkB,IAClBvjB,EAAM8hB,YAAY,IAClB2B,EAAgB,IAChBzjB,EAAM+hB,UAAU,IAChB4B,EAAqB,IACrB3jB,EAAMgiB,iBAAiB,IACvBn0B,EAASiM,MACT+pB,EAAoB,IACpB7jB,EAAMiiB,cAAc,IACpB8B,EAAkB,IAClB/jB,EAAMkiB,YAAY,KAGd0C,EAA6B,SAACC,GAClC,GAAGA,EACD,OAAOA,EAAM1iB,MAAM,KAAK5H,KAAI,SAAC9T,GAAD,OAAQO,OAAOP,OAmE/C,OA/DA2d,qBAAU,WAAO,IAAD,I5CtFK3e,E4CuFnB,GAAyD,MAAtD,UAAA68B,EAAkB78B,YAAlB,eAAwBoU,gBAAgBlS,aAAoBY,EAAQZ,WAAW6S,iBAAnB,UAAqC8nB,EAAkB78B,YAAvD,aAAqC,EAAwBoU,gBAAgBW,eAC1ImqB,IAEA92B,EAASmM,GAAqB,kBAAkBzR,QAC5C,CAAC,IAAD,sBACAm6B,EAAc58B,OAAOO,SAASsY,OAAOwD,MAAM,KAAK,GAChDwgB,EAAchB,KAAYzQ,MAAMwR,GAChCoC,EAAeF,EAA0B,UAACjC,EAAW,gBAAZ,aAAC,EAAyBh7B,cAApD,UAAmE26B,EAAkB78B,YAArF,aAAmE,EAAwBmU,WAAY,GACtHmrB,EAAaH,EAA0B,UAACjC,EAAW,cAAZ,aAAC,EAAuBh7B,cAAlD,UAAgE26B,EAAkB78B,YAAlF,aAAgE,EAAwBsD,SAAU,GAC/Gi8B,EAAoBJ,EAA0B,UAACjC,EAAW,qBAAZ,aAAC,EAA8Bh7B,cAAzD,UAAuE26B,EAAkB78B,YAAzF,aAAuE,EAAwB+C,gBAAiB,GACpIy8B,GAAmB,UAAAtC,EAAW,kBAAX,eAA2Bh7B,cAA3B,UAAyC26B,EAAkB78B,YAA3D,aAAyC,EAAwBgO,aAAc,GAClGyxB,GAAiB,UAAAvC,EAAW,gBAAX,eAAyBh7B,cAAzB,UAAuC26B,EAAkB78B,YAAzD,aAAuC,EAAwBiO,WAAY,GAClG6vB,EAAkBuB,GAClBrB,EAAgBsB,GAChBpB,EAAqBqB,GACrBnB,EAAoBoB,GACpBlB,EAAkBmB,GAClBr3B,G5CxGmBpI,E4CwGI,CACrB+C,cAAcw8B,EACdprB,SAASkrB,EACT/7B,OAAOg8B,EACPtxB,WAAWwxB,EACXvxB,SAASwxB,EACTrrB,gBAAiBtR,EAAQZ,WAAW6S,cACpC7G,YAAY,UAAAgvB,EAAW,kBAAX,eAA2Bh7B,aAAc,I5C/GV,CAC/CoE,KAAMpH,GAAQsa,eACdxZ,U4C+GEua,EAAM8hB,YAAN,aAAsBgD,IACtB9kB,EAAM+hB,UAAN,aAAoBgD,IACpB/kB,EAAMgiB,iBAAN,aAA2BgD,IAC3BhlB,EAAMiiB,cAAcgD,GACpBjlB,EAAMkiB,YAAYgD,MAElB,CAAC38B,IAYH6b,qBAAU,WACLpE,EAAMojB,eAAe35B,OAAO,IAE7Bk6B,EAAqB,CAAC38B,OAAOgZ,EAAMojB,eAAe,GAAGxzB,iBACrD/B,EAASmM,GAAqB,gBAAgB,CAAChT,OAAOgZ,EAAMojB,eAAe,GAAGxzB,qBAG/E,CAACoQ,EAAMojB,iBAYR,2BAAOnjB,UAAU,0CAA0CxZ,GAAG,UAAU2tB,eAAa,oCACnF,yBAAKnU,UAAU,sCACb,yBAAKA,UAAU,8EACb,4BAAQA,UAAU,yCAChB,yBAAKA,UAAU,0BAA0B+H,UAAQ,QAC/C,yBAAK/H,UAAU,mBAAkB,wCACjC,4BAAQA,UAAU,qBAAqBlU,KAAK,SAASqb,WAAS,WAGlE,yBAAKnH,UAAU,6BAA6BmP,eAAa,mDAAsD1N,MAAO,CAAEyjB,UAAW,SACjI,6BAASllB,UAAU,6CACjB,wBAAIA,UAAU,uCAAd,UACA,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,iDAAiD+H,UAAQ,QACtE,6BACE,yBAAK/H,UAAU,aACb,0BAAMA,UAAU,+BAAhB,QACA,2BAAOA,UAAU,WAAWlU,KAAK,SAASinB,YAAY,qBACtDzkB,MAAOq1B,EACP3b,SAAU,SAACC,GAAD,OAAOqc,EAAmB,EAAE,EAAE,EAAErc,EAAEC,cAAc5Z,YAG9D,6BACE,yBAAK0R,UAAU,aACb,0BAAMA,UAAU,+BAAhB,MACA,2BAAOA,UAAU,WAAWlU,KAAK,OAAOinB,YAAY,qBACpDzkB,MAAOu1B,EACP7b,SAAU,SAACC,GAAD,OAAOqc,EAAmB,EAAE,EAAE,EAAE,IAAIrc,EAAEC,cAAc5Z,eAOtEyR,EAAMrZ,cAAc8C,OAAS,GAC7B,6BAASwW,UAAU,6CACnB,wBAAIA,UAAU,uCAAd,cACA,yBAAKA,UAAU,wBACb,wBAAIA,UAAU,wBAEVD,EAAMrZ,cAAc4T,KAAI,SAAC/E,GACvB,OACE,wBAAIjL,IAAKiL,EAAY/G,MACnB,2BACEwR,UAAU,cACVxZ,GAAI,aAAe+O,EAAY/G,KAC/BzF,KAAK,aACLuF,MAAOiH,EAAY/G,KACnB8gB,QAASmU,EAAkBt8B,QAAQJ,OAAOwO,EAAY5F,iBAAmB,EACzE7D,KAAK,WACLkc,SAAU,kBAAMsc,EAAmB,EAAG,EAAGv9B,OAAOwO,EAAY5F,mBAE9D,2BAAO2sB,QAAS,aAAe/mB,EAAY/G,MACzC,8BAAO+G,EAAY/G,KAAnB,IAAyB,0BAAMwR,UAAU,8BAtN3C,WAAW,IAAVxZ,EAAS,uDAAN,EACtBiC,EAAQ,EACNN,EAAiB4X,EAAM4iB,mBAAmBn9B,KAChD,GAAG2C,EAAe,CAChB,IAAM46B,EAAiBM,EAAe75B,OAAS,EAAI65B,EAAiBrI,EAAcx1B,MAAQw1B,EAAcx1B,KAAKgE,OAAQ,EAAKwxB,EAAcx1B,KAAK8U,KAAI,gBAAE9R,EAAF,EAAEA,SAAF,OAAgBzB,OAAOyB,MAAa,GAC/Kw6B,EAAeO,EAAa/5B,OAAS,EAAI+5B,EAAgB,GACzDT,EAAiB36B,EAAe3B,GACnCs8B,IAC2B,IAAxBE,EAAax5B,OACbu5B,EAAe16B,SAAQ,SAACwK,GACnBiwB,EAAejwB,KAChBpK,GAASq6B,EAAejwB,GAAQpK,UAIpCs6B,EAAe16B,SAAQ,SAACwK,GAEtB,IADA,IAAIowB,EAAa,EACT1F,EAAG,EAAGA,EAAGyF,EAAax5B,OAAQ+zB,IACpC,GAAGuF,EAAejwB,IAAWiwB,EAAejwB,GAAQ3L,MAAQ47B,EAAejwB,GAAQ3L,KAAK87B,EAAazF,IAAI,CACvG,GAAGuF,EAAejwB,GAAQ3L,KAAK87B,EAAazF,MAAQuF,EAAejwB,GAAQpK,MAAM,CAC/Ew6B,EAAaH,EAAejwB,GAAQpK,MACpC,MAEAw6B,GAAaH,EAAejwB,GAAQ3L,KAAK87B,EAAazF,IAI5D90B,GAAOw6B,MAKjB,OAAOx6B,EAsLwF08B,CAAgBp+B,OAAOwO,EAAY5F,0BAYxHqrB,EAAcx1B,MAAQw1B,EAAcx1B,KAAKgE,OAAS,GAClD,6BAASwW,UAAU,6CACjB,wBAAIA,UAAU,uCAAd,UACA,yBAAKA,UAAU,wBACb,wBAAIA,UAAU,wBAEVgb,EAAcx1B,KAAK8U,KAAI,SAACzH,GACtB,OACE,wBAAIvI,IAAKuI,EAAOrK,UACd,2BACEwX,UAAU,cACVxZ,GAAI,SAAWqM,EAAOrK,SACtBO,KAAK,SACLuF,MAAOuE,EAAOrK,SACdsD,KAAK,WACLwjB,QAAS+T,EAAel8B,QAAQJ,OAAO8L,EAAOrK,YAAc,EAC5Dwf,SAAU,kBAAMsc,EAAmBv9B,OAAO8L,EAAOrK,UAAW,EAAG,MAEjE,2BAAO8zB,QAAS,SAAWzpB,EAAOrK,UAChC,8BAAOqK,EAAOvE,MAAd,aAWhBysB,EAAYv1B,MAAQu1B,EAAYv1B,KAAKgE,OAAS,KACQ,IAApDxC,EAAW+zB,EAAYhb,EAAMpZ,YAAY6C,QACyB,YAApExC,EAAW+zB,EAAYhb,EAAMpZ,YAAY,GAAG2H,MAAMiM,gBAClD,6BAASyF,UAAU,6CACjB,wBAAIA,UAAU,uCAAd,QACA,yBAAKA,UAAU,wBACb,wBAAIA,UAAU,wBAEVhZ,EAAW+zB,EAAYhb,EAAMpZ,YAAY2T,KAAI,SAACpT,GAC5C,MAC+B,YAA7BA,EAAKoH,MAAMiM,eACX,wBAAIjQ,IAAKpD,EAAK4B,QACZ,2BACEkX,UAAU,cACVxZ,GAAI,OAASU,EAAK4B,OAClBC,KAAK,OACLuF,MAAOpH,EAAK4B,OACZgD,KAAK,WACLwjB,QAASiU,EAAap8B,QAAQJ,OAAOG,EAAK4B,UAAY,EACtDkf,SAAU,kBAAMsc,EAAmB,EAAEv9B,OAAOG,EAAK4B,QAAS,MAE5D,2BAAOwzB,QAAS,OAASp1B,EAAK4B,QAC5B,8BAAO5B,EAAKoH,MAAZ,aAUlB,yBAAK0R,UAAU,gBACb,4BAAQA,UAAU,2CAA2C8E,QAAS,kBAAM4f,MAAc,0BAAM1kB,UAAU,yBAAyB4I,UAAQ,6BAA3I,2BChUMwc,QACW,cAA7Bv/B,OAAOO,SAASi/B,UAEe,UAA7Bx/B,OAAOO,SAASi/B,UAEhBx/B,OAAOO,SAASi/B,SAAS76B,MACvB,2DCkBN,IAAM86B,GAAyD,SAACvlB,GAAkB,IAAD,MAE7E/X,EAaE+X,EAbF/X,SACAC,EAYE8X,EAZF9X,SACAkD,EAWE4U,EAXF5U,SACAjE,EAUE6Y,EAVF7Y,KACA4B,EASEiX,EATFjX,OACAkJ,EAQE+N,EARF/N,UACA8C,EAOEiL,EAPFjL,gBACAooB,EAMEnd,EANFmd,UACAD,EAKEld,EALFkd,UACAruB,EAIEmR,EAJFnR,oBACA7F,EAGEgX,EAHFhX,KACAw8B,EAEExlB,EAFFwlB,oBACAC,EACEzlB,EADFylB,SAGI53B,EAAWqV,cACXC,EAAUC,cACVK,EAAWD,aAAY,SAACrJ,GAAD,OAAqBA,EAAMrO,QAClD9D,EAAewb,aAAoC,SAAArJ,GAAK,OAAIA,EAAMnS,gBAClE09B,EAAkBliB,aAAqC,SAAArJ,GAAK,OAAIA,EAAMyD,eAAenY,MAAQ,MArBpB,EAuBvDke,mBAAS,KAvB8C,oBAuBxEgiB,EAvBwE,KAuBlEC,EAvBkE,OAwBvDjiB,mBAAS,KAxB8C,oBAwBxEkiB,EAxBwE,KAwBlEC,EAxBkE,OAyB7CniB,mBAAS,CAAC,KAzBmC,oBAyBxEoiB,EAzBwE,KAyB7DC,EAzB6D,OA0BrDriB,mBAAS,CAAC,KA1B2C,oBA0BxEsiB,EA1BwE,KA0BjEC,EA1BiE,OA2BjDviB,mBAAS,CAAC,KA3BuC,oBA2BxEwiB,EA3BwE,KA2B/DC,EA3B+D,OA4B7CziB,mBAAS,CAAC,KA5BmC,oBA4BxE0iB,EA5BwE,KA4B7DC,EA5B6D,OA6BvC3iB,mBAAS,KA7B8B,qBA6BxEsf,GA7BwE,MA6B1DsD,GA7B0D,SA8B/B5iB,mBAAS,KA9BsB,sBA8BxE6iB,GA9BwE,MA8BtDC,GA9BsD,SA+BjB9iB,mBAAS,KA/BQ,sBA+BxE+iB,GA/BwE,MA+B/CC,GA/B+C,SAgCzChjB,mBAAS,KAhCgC,sBAgCxEijB,GAhCwE,MAgC3DC,GAhC2D,SAiC/CljB,oBAAS,GAjCsC,sBAiCxEmjB,GAjCwE,MAiC9DC,GAjC8D,MAmC/E3iB,qBAAU,WACRwhB,EAAQ39B,EAASka,MAAM,KAAK,IAC5B2jB,EAAQ59B,EAASia,MAAM,KAAK,MAC3B,CAACla,EAAUC,IAGdkc,qBAAU,WACR4hB,EAAa56B,EAAS+W,MAAM,MAC5B+jB,EAAS/+B,EAAKgb,MAAM,MACpBikB,EAAWr9B,EAAOoZ,MAAM,MACxBokB,GAAgBx9B,EAAOoZ,MAAM,KAAK,GAAGxa,YACrC,IAAMq/B,EAAuBjyB,EAAgBoN,MAAM,KAAK,GACxD0kB,IAAgB7/B,OAAOoE,EAAS+W,MAAM,KAAK,IAAMnb,OAAOw+B,EAAoBwB,EAAqBr/B,aAAe,IAAIA,YACpH2+B,EAAavxB,EAAgBoN,MAAM,MACnCwkB,GAA2BK,KAC1B,CAAC57B,EAAUjE,EAAM4B,EAAQgM,IAE5BqP,qBAAU,WACR,GAAoB,MAAhBwiB,GAAqB,CACvB,IAAMK,EAAeZ,EAAUj/B,QAAQs/B,IACvCG,IAAgB7/B,OAAO++B,EAAUkB,IAAiBjgC,OAAOw+B,EAAoBkB,KAA4B,MAAM/+B,YAC/Gu/B,GAAiB1B,EAAoBkB,KAA4B,IAAK1/B,OAAO++B,EAAUkB,IAAiBjgC,OAAOw+B,EAAoBkB,SAEpI,CAAClB,IAEJ,IAAM2B,GAAiB,SAACC,GAClBA,EACEpgC,OAAOw/B,KAAqBx/B,OAAO4/B,KACrCH,IAAqBz/B,OAAOw/B,IAAoB,GAAG7+B,YAG5B,MAArB6+B,IACFC,IAAqBz/B,OAAOw/B,IAAoB,GAAG7+B,aAiBnDu/B,GAAmB,SAAC97B,GAAoC,IAAlBi8B,EAAiB,wDAAN,EACjDrgC,OAAOoE,GAAYpE,QAAoB,IAAbqgC,EAAiBA,EAAUT,IACvDH,GAAoBz/B,QAAoB,IAAbqgC,EAAiBA,EAAUT,IAAaj/B,YAEnE8+B,GAAoBz/B,OAAOoE,GAAUzD,aA4CnC2/B,GAAsB,SAACC,GAC3B,OAA2B,IAApBA,EAAS99B,QAA8C,YAA9B89B,EAAS,GAAG/sB,eAE9C,OACE,8BACE,6BAASyF,UAAU,+BACjB,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,oCAAoC+H,UAAQ,QACzD,yBAAK/H,UAAU,kBACb,wBAAIA,UAAU,iDACZ,4BAAI,uBAAG8E,QAAS,kBAAM5B,EAAQf,KAAK,OAA/B,SACJ,4BAAI,uBAAG2C,QAAS,kBAAM5B,EAAQf,KAAK,YAAcpC,EAAMnR,uBAAuBmR,EAAMnR,sBACpF,wBAAIoR,UAAU,qBAEhB,wBAAIA,UAAU,+CAA+CD,EAAMhX,OAErE,6BACE,yBAAKiX,UAAU,oCAAoC+H,UAAQ,QACzD,6BACE,yBAAK/H,UAAU,6DACb,yBAAKA,UAAU,+CAA+C+H,UAAQ,QACpE,yBAAK/H,UAAU,kCACb,yBAAKA,UAAU,sCAAsCunB,eAAa,4BAA4Bxf,UAAQ,QACpG,6BACE,wBAAI/H,UAAU,qBAAqBwnB,cAAY,QAE3CznB,EAAM0nB,aAIZ,6BACE,yBAAKznB,UAAU,uCACb,yBAAKA,UAAU,6BACb,yBAAKoI,YAAU,gBACb,yBAAKpI,UAAU,wBACb,yBAAKA,UAAU,uBACb,wBAAIA,UAAU,4EAEVD,EAAM2nB,aAGV,6BACE,uBAAG1nB,UAAU,gDAAgD3Z,KAAK,IAAIgiB,iBAAe,WAAWC,uBAAqB,SACrH,uBAAGtI,UAAU,iDAAiD3Z,KAAK,IAAIgiB,iBAAe,OAAOE,mBAAiB,cAMxH,wBAAIvI,UAAU,+CAKtB,yBAAKA,UAAU,+CACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,gBAAgB+H,UAAQ,UAGzC,yBAAK/H,UAAU,aACb,yBAAKA,UAAU,oEACb,yBAAKA,UAAU,mCAAmC+H,UAAQ,QACxD,8BAEI,UAAAvE,EAAShe,YAAT,eAAe8B,WAAwC,OAA5B,UAAAkc,EAAShe,YAAT,eAAe8B,WAC1C,yBAAK0Y,UAAU,gBAAgBpY,EAAgBG,EAAavC,MAAQ,MAApE,IAA4EsC,EAAWC,EAAavC,MAAQ,KAAM,CAAEwC,SAAU09B,EAAMz9B,SAAU29B,KAEhJ,yBAAK5lB,UAAU,oBAAoBpY,EAAgBG,EAAavC,MAAQ,MAAxE,IAAgF6B,GAAsB,UAAAmc,EAAShe,YAAT,eAAe8B,WAAY,IAAKQ,EAAWC,EAAavC,MAAQ,KAAM,CAAEwC,SAAU09B,EAAMz9B,SAAU29B,OAE1M,6BACE,yBAAK5lB,UAAU,mCAAmC+H,UAAQ,QACxD,yBAAK/H,UAAS,UAAKqnB,GAAoBrB,GAAS,uBAAyB,KACvE,+BACE,yBAAKhmB,UAAU,iBAAf,QACA,4BAAQA,UAAU,YAChB1R,MAAO00B,GACPx8B,GAAG,eACHwhB,SAAU,SAACC,IA1InC,SAACnf,GACfw9B,GAAgBx9B,GAChB,IAAM6+B,EAAgBzB,EAAQ/+B,QAAQ2B,GAChC8+B,EAAO9B,EAAU6B,GACjBE,EAAOzB,EAAUuB,GACvBjB,GAA2BmB,GAC3BjB,IAAgB7/B,OAAO6gC,GAAQ7gC,OAAOw+B,EAAoBsC,IAAS,IAAIngC,YACnEX,OAAOw/B,IAAoBx/B,OAAO6gC,IACpCpB,GAAoBoB,GAkImCE,CAAQ7f,EAAEC,cAAc5Z,SAEzC03B,EAAM1rB,KAAI,SAACpT,EAAMyL,GACf,OAAO,4BAAQrI,IAAKqI,EAAOrE,MAAO43B,EAAQvzB,IAASzL,SAO7D,6BACE,+BACE,yBAAK8Y,UAAU,iBAAf,YAA0D,MAAjBgjB,IAAwB,0BAAMhjB,UAAU,+CAAhB,QAAoEwlB,EAAWmB,GAAc,EAA7F,MACjE,6BACE,yBAAK3mB,UAAU,aACZjZ,OAAO4/B,IAAe,GAAKnB,GAC1B,oCACgC,IAA7Bz+B,OAAOw/B,KAA2B,uBAAGvmB,UAAU,iBAC/CjZ,OAAOw/B,IAAoB,GAAK,uBAAGvmB,UAAU,eAAe8E,QAAS,kBAAMoiB,IAAe,IAAQte,UAAQ,gBAC1G7hB,OAAOw/B,IAAoBx/B,OAAO4/B,KAAgB,uBAAG3mB,UAAU,iCAAiC8E,QAAS,kBAAMoiB,IAAe,IAAOte,UAAQ,eAC7I7hB,OAAOw/B,MAAsBx/B,OAAO4/B,KAAgB,uBAAG3mB,UAAU,oCAItE,2BAAOA,UAAU,0BACfgI,SAAU,SAACC,GAAD,OAAOgf,GAAiBhf,EAAEC,cAAc5Z,QAClDwtB,OAAQ,SAAC7T,GAAD,OAhJ7B,SAAC9c,GACL,KAAbA,GAAwC,IAArBpE,OAAOoE,IAC5Bq7B,GAAoB,KA8ImCuB,CAAe9f,EAAEC,cAAc5Z,QAC9CxC,KAAK,SACLif,SAAkC,IAAxBhkB,OAAO4/B,MAAuBnB,EACxCl3B,MAAOi4B,SAKjB,yBAAKvmB,UAAS,UAAKqnB,GAAoBrB,GAAS,0BAA4B,KAC1E,4BACEjb,SAAkC,IAAxBhkB,OAAO4/B,MAAuBnB,EACxCxlB,UAAU,4EACV8E,QAAS,kBAtJ7B,WAAO,IAAD,EACtB,GAAI,UAACtB,EAAShe,YAAV,aAAC,EAAeqjB,OAeb,CACL,IAAMC,EAAW,CACfhU,gBAAiB2xB,GACjB9xB,gBAAiB4xB,GACjBtxB,aAAoC,OAAtBlN,EAAavC,KAAgB,EAAI,EAC/C2P,OAAQ,IACRE,aAAc6nB,EACd5nB,iBAAkB2nB,EAClB/xB,YAAanC,EACbwM,YAAa3G,EACb8F,aAAc,IACd1C,UAAWA,GAGbpE,EAASyG,GAAcyU,GAAU,QA7BP,CAC1B,IAAMA,EAAW,CACfhU,gBAAiB2xB,GACjB9xB,gBAAiB4xB,GACjBtxB,aAAoC,OAAtBlN,EAAavC,KAAgB,EAAI,EAC/C2P,OAAQsxB,GAAwB/+B,WAChC2N,aAAc6nB,EACd5nB,iBAAkB2nB,EAClB/xB,YAAanC,EACbwM,YAAa3G,EACb8F,aAAc5M,EAAWC,EAAavC,MAAQ,KAAM,CAAEwC,SAAU09B,EAAMz9B,SAAU29B,IAChF5zB,UAAWA,GAGbpE,EAASyG,GAAcyU,GAAU,KAuIgBC,KACU,IAAxBhiB,OAAO4/B,KAAuBnB,EAA4B,cAAjB,mBAKlD,6BAEgD,aAA5CzlB,EAAMnR,oBAAoB2L,eAC1B,uBAAG0M,YAAU,uCAAuCjH,UAAU,yDAAwD,0BAAM4I,UAAQ,cAApI,gBAGiC,MAAjC7I,EAAMlZ,YAAYa,YAClB,uBAAGuf,YAAU,kCAAkCjH,UAAU,yDAAwD,0BAAM4I,UAAQ,cAA/H,gBAGiC,MAAjC7I,EAAMlZ,YAAYa,YAClB,uBAAGuf,YAAU,uCAAuCjH,UAAU,yDAAwD,0BAAM4I,UAAQ,cAApI,oBAOV,yBAAK5I,UAAU,aACb,yBAAKA,UAAU,0DACb,yBAAKA,UAAU,iDAAiD+H,UAAQ,QACtE,6BACE,yBAAK/H,UAAU,mBAAmB+H,UAAQ,QAExC,6BACE,yBAAK/H,UAAU,kBAAf,mBACA,yBAAKA,UAAU,+BACZD,EAAMjN,wBAqC7B2yB,EAAgBj8B,OAAS,GACzB,kBAAC,GAAD,CAAkBgf,YAAaid,SASR,MAAjC1lB,EAAMlZ,YAAYa,YAClB,yBAAKlB,GAAG,yBAAyB0gB,WAAS,QACxC,yBAAKlH,UAAU,6FACb,4BAAQA,UAAU,yBAAyBlU,KAAK,SAASqb,WAAS,SAE9D,wBAAInH,UAAU,2BAA2BgoB,cAAY,QACnD,4BAAI,uBAAGljB,QAAS,kBAAMgiB,IAAY,KAA9B,OACJ,4BAAI,uBAAGhiB,QAAS,kBAAMgiB,IAAY,KAA9B,QAGJD,GACE,oCACE,yBAAK7mB,UAAU,cAAcqC,IAAI,6BAA6BqG,IAAI,0BAClE,yBAAK1I,UAAU,eAAeqC,IAAI,gCAAgCqG,IAAI,8BAEtE,oCACA,yBAAK1I,UAAU,cAAcqC,IAAI,6BAA6BqG,IAAI,0BAClE,yBAAK1I,UAAU,eAAeqC,IAAI,gCAAgCqG,IAAI,8BAK5E,yBAAK1I,UAAU,cAAcqC,IAAI,0BAA0BqG,IAAI,yBAM3B,aAA5C3I,EAAMnR,oBAAoB2L,eAC1B,yBAAK/T,GAAG,8BAA8B0gB,WAAS,QAC7C,yBAAKlH,UAAU,0EACb,4BAAQA,UAAU,yBAAyBlU,KAAK,SAASqb,WAAS,SAE9D,yBAAKnH,UAAU,eAAeqC,IAAI,2BAA2BqG,IAAI,wBACjE,yBAAK1I,UAAU,cAAcqC,IAAI,oCAAoCqG,IAAI,wBACzE,yBAAK1I,UAAU,cAAcqC,IAAI,oCAAoCqG,IAAI,0BAOhD,MAAjC3I,EAAMlZ,YAAYa,YAClB,yBAAKlB,GAAG,8BAA8B0gB,WAAS,QAC7C,yBAAKlH,UAAU,0EACb,4BAAQA,UAAU,yBAAyBlU,KAAK,SAASqb,WAAS,SAE9D,yBAAKnH,UAAU,eAAeqC,IAAI,oBAAoBqG,IAAI,wBAC1D,yBAAK1I,UAAU,cAAcqC,IAAI,oCAAoCqG,IAAI,wBACzE,yBAAK1I,UAAU,cAAcqC,IAAI,+BAA+BqG,IAAI,4BC3Z9Euf,GAAyD,WAC7D,OACE,8BACE,6BAASjoB,UAAU,+BACjB,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,oCAAoC+H,UAAQ,QACzD,yBAAK/H,UAAU,kBACb,wBAAIA,UAAU,iDACZ,4BAAI,uBAAG3Z,KAAK,KAAR,SACJ,4BAAI,2CAEN,wBAAI2Z,UAAU,iDAEhB,6BACE,yBAAKA,UAAU,oCAAoC+H,UAAQ,QACzD,6BACE,yBAAK/H,UAAU,6DACb,yBAAKA,UAAU,+CAA+C+H,UAAQ,QACpE,yBAAK/H,UAAU,kCACb,yBAAKA,UAAU,sCAAsCunB,eAAa,4BAA4Bxf,UAAQ,QACpG,6BAME,wBAAI/H,UAAU,qBAAqBwnB,cAAY,QAC7C,4BACE,yBAAKxnB,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,sBAIrB,4BACE,yBAAKA,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,sBAIrB,4BACE,yBAAKA,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,sBAIrB,4BACE,yBAAKA,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,sBAIrB,4BACE,yBAAKA,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,wBAMzB,6BACE,yBAAKA,UAAU,uCACb,yBAAKA,UAAU,6BACb,yBAAKoI,YAAU,gBACb,yBAAKpI,UAAU,wBACb,yBAAKA,UAAU,uBACb,wBAAIA,UAAU,iGACZ,wBAAIkoB,oBAAkB,KACpB,yBAAKloB,UAAU,yBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,mBAKvB,wBAAIkoB,oBAAkB,KACpB,yBAAKloB,UAAU,yBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,mBAKvB,wBAAIkoB,oBAAkB,KACpB,yBAAKloB,UAAU,yBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,mBAKvB,wBAAIkoB,oBAAkB,KACpB,yBAAKloB,UAAU,yBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,mBAKvB,wBAAIkoB,oBAAkB,KACpB,yBAAKloB,UAAU,yBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,oBAczB,6BACE,uBAAGA,UAAU,gDAAgD3Z,KAAK,IAAIgiB,iBAAe,WAAWC,uBAAqB,SACrH,uBAAGtI,UAAU,iDAAiD3Z,KAAK,IAAIgiB,iBAAe,OAAOE,mBAAiB,cAMxH,wBAAIvI,UAAU,+CAKtB,yBAAKA,UAAU,+CACb,yBAAKA,UAAU,gBAMb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,oEACb,yBAAKA,UAAU,mCAAmC+H,UAAQ,QACxD,6BAEE,yBAAK/H,UAAU,sBAEjB,6BACE,yBAAKA,UAAU,gBAAgB+H,UAAQ,QACrC,6BACE,uBAAGa,UAAQ,4BACX,2BAAO5I,UAAU,6BAA6BxZ,GAAG,YAAYsF,KAAK,OAAOkc,SAAU,aAAQ1Z,MAAM,MACjG,uBAAGsa,UAAQ,4BAEb,6BAAK,4BAAQ5I,UAAU,4EAA4E+K,UAAU,GAAxG,qBAMf,yBAAK/K,UAAU,aACb,yBAAKA,UAAU,0DACb,yBAAKA,UAAU,iDAAiD+H,UAAQ,QACtE,6BACE,yBAAK/H,UAAU,mBAAmB+H,UAAQ,QACxC,0BAAM/H,UAAU,yBAAyB4I,UAAQ,SACjD,6BACE,yBAAK5I,UAAU,kBAAf,YACA,yBAAKA,UAAU,gCAAf,+BAIN,6BACE,yBAAKA,UAAU,mBAAmB+H,UAAQ,QACxC,0BAAM/H,UAAU,yBAAyB4I,UAAQ,aACjD,6BACE,yBAAK5I,UAAU,kBAAf,sBACA,yBAAKA,UAAU,gCAAf,oCAShB,yBAAKA,UAAU,sCAAsCxZ,GAAG,eACtD,gCACE,yBAAKwZ,UAAU,iBAAiBiL,YAAU,uEACxC,wBAAIjL,UAAU,+CAA+CgoB,cAAY,qBACvE,4BAAI,uBAAGhoB,UAAU,2BAA2B3Z,KAAK,gBAA7C,gBAIV,yBAAK2Z,UAAU,gBACb,yBAAKA,UAAU,2CACb,iCACE,6BAASA,UAAU,cACjB,yBAAKA,UAAU,mBACb,4CChM5BmoB,GAA4D,WAAO,IAAD,EAElC1Y,cAAnB2Y,GAFqD,EAE9D9/B,QAF8D,EAErD8/B,gBAFqD,EAGjC1kB,wBAAoCxD,GAHH,oBAG9DunB,EAH8D,KAGlDY,EAHkD,OAI/B3kB,wBAAoCxD,GAJL,oBAI9DwnB,EAJ8D,KAIjDY,EAJiD,OAKhB5kB,mBAAuB,IALP,oBAK/D6hB,EAL+D,KAK1CgD,EAL0C,OAMxB7kB,oBAAS,GANe,oBAM/D8kB,EAN+D,KAM9CC,EAN8C,KAOhE76B,EAAWqV,cAEjBkB,qBAAU,WACRvW,EAASuF,GAAWpM,OAAOqhC,KAC3BE,OAAepoB,KACd,CAACkoB,IAZkE,MAmBlE7kB,aAAmC,SAAArJ,GAAK,OAAIA,EAAM5R,QAAQ4J,YAAc,MAJ1EnJ,EAfoE,EAepEA,KAAM+J,EAf8D,EAe9DA,YACNjM,GAhBoE,EAejDC,kBAfiD,EAgBpED,aAAasE,EAhBuD,EAgBvDA,SACbnD,EAjBoE,EAiBpEA,SAAUC,EAjB0D,EAiB1DA,SAAU+J,EAjBgD,EAiBhDA,UAAWpD,EAjBqC,EAiBrCA,oBAC/B9F,EAlBoE,EAkBpEA,OAAQ5B,EAlB4D,EAkB5DA,KAAgByhB,GAlB4C,EAkBtDngB,SAlBsD,EAkB5CmgB,YAAYF,EAlBgC,EAkBhCA,WAAY3T,EAlBoB,EAkBpBA,gBAAiB0wB,EAlBG,EAkBHA,SAE7DlxB,EAAOiP,aAA4B,SAAArJ,GAAK,OAAIA,EAAM5F,QA8CxD,OA5CA6P,qBAAU,WACN,GAAIwE,GAAcF,GAAcE,EAAWnf,OAAS,GAAKif,EAAWjf,OAAS,EAAG,CAC9E,IAAM0zB,EAAYvU,EAAWzG,MAAM,KAC7B+a,EAAYxU,EAAWvG,MAAM,KAEnCmmB,EAAcpL,EAAU3iB,KAAI,SAAC0iB,EAAcrqB,GACzC,OAAO,wBAAIrI,IAAKqI,GACd,uBAAGqN,UAAU,8CAA8C3Z,KAAMxB,EAAkBm4B,GACjF,4BAAQhd,UAAU,qBAAoB,yBAAKqC,IAAKxd,EAAkBm4B,EAAMtU,IAAKwU,EAAUvqB,YAK7F21B,EAAerL,EAAU3iB,KAAI,SAAC0iB,EAAcrqB,GAC1C,OAAO,wBAAIu1B,oBAAmBv1B,EAAO+1B,UAAW,EAAGp+B,IAAKqI,GACtD,yBAAKqN,UAAU,yBACb,uBAAGA,UAAU,kCAAkC3Z,KAAK,KAClD,4BAAQ2Z,UAAU,qBAChB,yBAAKqC,IAAKxd,EAAkBm4B,EAAMtU,IAAKwU,EAAUvqB,gBAO/D,CAACgW,EAAWF,IAEdtE,qBAAU,WACR,GAAG7P,EAAK9O,KAAK,CACX,IAAMmjC,EAAmB,GACzBr0B,EAAK9O,KAAK6C,SAAQ,YAAwC,IAAtCyM,EAAqC,EAArCA,gBAAgBH,EAAqB,EAArBA,gBAClCg0B,EAAiB7zB,GAAmBH,KAEtC4zB,EAAuBI,GACvBF,GAAmB,MAErB,CAACn0B,EAAK9O,OAER2e,qBAAU,WACLtd,GAAeuhC,GAChBx6B,ErD0BmB,SAACrF,EAAuByJ,GAAxB,8CAA8C,WAAOpE,GAAP,iBAAAjI,EAAA,6DACrEiI,EAxEkC,CAClC9B,KAAMpH,GAAQmZ,0BAsEuD,SAG9C1Y,EAAS,mBAAmB,CACjDoD,gBACAyJ,cALmE,QAG/D/L,EAH+D,QAQzDC,SAAW3B,EAAekI,IAC9BoB,EAAM5H,EAAST,KACrBoI,GAnEsBpI,EAmEKqI,EAAIrI,MAAQ,GAnEQ,CACjDsG,KAAMpH,GAAQqZ,oBACdvY,WAoEEoI,GA3EwBtH,EA0EZL,EACqBK,SAAW,GA3EC,CAC/CwF,KAAMpH,GAAQkZ,wBACdtX,aA4DqE,iCA9D5C,IAACA,EAKFd,IAyD6C,OAA9C,sDqD1BVojC,CAAkB/hC,EAAaE,OAAOqhC,OAEjD,CAACvhC,EAAauhC,IAGdV,GAAec,EACf,kBAAC,GAAD,CACEd,YAAaA,EACbD,WAAYA,EACZ30B,YAAaA,GAAe,GAC5B/J,KAAMA,GAAQ,GACdf,SAAUA,GAAY,GACtBC,SAAUA,GAAY,GACtB2G,oBAAqBA,GAAuB,GAC5CzD,SAAUA,GAAY,GACtBrC,OAAQA,GAAU,GAClB5B,KAAMA,GAAQ,GACd8K,UAAWA,GAAa,GACxB8C,gBAAiBA,GAAmB,GACpCooB,UAAWvU,GAAcA,EAAWzG,MAAM,KAAK,IAAM,GACrD+a,UAAWxU,GAAcA,EAAWvG,MAAM,KAAK,IAAM,GACrDqjB,oBAAqBA,EACrBC,SAAUA,IAAY,EACtB3+B,YAAaA,GAAe,IAE5B,kBAAC,GAAD,OCxFAgiC,GAAuC,WAG3C,IAAMj7B,EAAWqV,cACXC,EAAUC,cAJiC,EAKjBO,qBALiB,oBAK1CvY,EAL0C,KAKhC29B,EALgC,OAMPplB,mBAAS,IANF,oBAM1CqlB,EAN0C,KAM3BC,EAN2B,OAOOtlB,mBAAS,sBAPhB,oBAO1CulB,EAP0C,KAOpBC,EAPoB,KAQ3CnhC,EAAewb,aAAoC,SAAArJ,GAAK,OAAIA,EAAMnS,gBAClEohC,EAAe5lB,aAA8B,SAAArJ,GAAK,OAAIA,EAAMxJ,UATjB,EAUbgT,mBAAS,IAVI,oBAU1C0lB,EAV0C,KAU9BC,EAV8B,OAWH3lB,oBAAS,GAXN,oBAW1C4lB,EAX0C,KAWzBC,EAXyB,OAYe7lB,mBAAS,IAZxB,oBAY1C8lB,EAZ0C,KAYhBC,EAZgB,KAa3CC,EAA8BrmB,iBAA0B,MACxDsmB,EAA6BtmB,iBAAuB,MAG1Dc,qBAAU,WAAO,IAAD,EACdvW,EAAS4H,MACyB,KAA9B,UAAA2zB,EAAa3jC,YAAb,eAAmBgE,SACrBw/B,EAAiBG,EAAa3jC,KAAK,GAAGgJ,QAEvC,IAEH,IAAM8F,EAAOiP,aAA4B,SAAArJ,GAAK,OAAIA,EAAM5F,QAExD6P,qBAAU,WACR,IAAIylB,EAAe,GACft1B,EAAK9O,MAAQ8O,EAAK9O,KAAKgE,OAAS,IAClC8K,EAAK9O,KAAK6C,SAAQ,SAACC,GACjBshC,EAAGthC,EAAQwM,iBAAmBxM,EAAQqM,iBAAmB,OAE3Dm0B,EAAYc,GACZC,EAA0Bv1B,EAAK9O,SAEhC,CAAC8O,EAAK9O,OACT,IAIMqkC,EAA4B,SAAC/gB,GACjC,IAAM3L,EAAgB2L,EAASxO,KAAI,SAACwvB,GAClC,OAAI/iC,OAAO+iC,EAASC,mBAAqBhjC,OAAO+iC,EAASn1B,kBACvD40B,GAAmB,GACZO,EAAS30B,QAET,KAGXs0B,EAA4BtsB,EAAczV,aAG5Cyc,qBAAU,WACY,IAAD,E5DoTKhH,E4DpTrBmsB,IACD,UAAAI,EAA4BjlB,eAA5B,SAAqC9Z,QACrCiD,G5DkTsBuP,E4DlTMqsB,E5DkTP,uCAA2B,WAAO57B,GAAP,eAAAjI,EAAA,6DACpDiI,EAASiG,MAD2C,SAE7B1O,EAAS,sBAAuB,CAAEgY,kBAFL,QAE9ClX,EAF8C,QAGvCC,SAAW3B,EAAekI,GACrCmB,EAhR4B,CAC9B9B,KAAMpH,GAAQgY,qBAgRHzW,EAASC,SAAW3B,EAAewS,aAC5CnJ,EA9QkC,CACpC9B,KAAMpH,GAAQ+X,4BAgRZ7O,EAASmG,GADG9N,EACWK,SAAW,KATgB,2CAA3B,2D4DhTvB,CAACgjC,IAEHnlB,qBAAU,WAAO,IAAD,EACX7P,EAAKV,iBAAuF,KAApE,UAAA+1B,EAA2BllB,eAA3B,eAAoCuI,wBAAwBpH,OACrFhY,EAAS4H,MACT0zB,EAAwB,2DACxB5jB,YAAW,WAAO,IAAD,EACf,UAAAokB,EAA4BjlB,eAA5B,SAAqC9Z,UACrC,QAGJ,CAAC2J,EAAKV,kBAER,IAAMo2B,EAAa,SAAC70B,EAAgBhK,EAAkB2J,GACpDlH,EAASyG,GAAc,CACrBS,kBACAH,gBAAiBxJ,EACjB8J,aAAoC,OAAtBlN,EAAavC,KAAgB,EAAI,EAC/C2P,SACAT,aAAc,GACd1C,UAAW,KACV,KAGCi4B,EAAgB,SAAC90B,EAAgBL,EAAyBi1B,EAA2B5C,EAAsB+C,GAC/G,GAAI/+B,EAAU,CACZ,GAAI++B,EAAiB,CACnB,IAAIC,EAAQD,EACRnjC,OAAOojC,GAASpjC,OAAOgjC,KACzBI,EAAQJ,GAEV,IAAMK,EAAW,2BAAQj/B,GAAR,eAAwB2J,EAAkBq1B,EAAMziC,aACjE2hC,EAAcl0B,EAAS,IAAMtP,OAAOyf,YAAW,WAC7C0kB,EAAW70B,EAAQg1B,EAAMziC,WAAYoN,KACpC,KAAKpN,YACRohC,EAAYsB,QACP,GAAIjD,EAAa,CACtB,IAAIkD,EAAkBtjC,OAAOoE,EAAS2J,IAAoB,EACtDu1B,EAAkBtjC,OAAOgjC,KAC3BM,EAAkBtjC,OAAOgjC,IAE3B,IAAMK,EAAW,2BAAQj/B,GAAR,eAAwB2J,EAAkBu1B,EAAgB3iC,aAC3E2hC,EAAcl0B,EAAS,IAAMtP,OAAOyf,YAAW,WAC7C0kB,EAAW70B,EAAQk1B,EAAgB3iC,WAAYoN,KAC9C,KAAKpN,YACRohC,EAAYsB,OACP,CACL,IAAIC,EAAkBtjC,OAAOoE,EAAS2J,IAAoB,EACtDu1B,EAAkB,IACpBA,EAAkB,GAEpB,IAAMD,EAAW,2BAAQj/B,GAAR,eAAwB2J,EAAkBu1B,EAAgB3iC,aAC3E2hC,EAAcl0B,EAAS,IAAMtP,OAAOyf,YAAW,WAC7C0kB,EAAW70B,EAAQk1B,EAAgB3iC,WAAYoN,KAC9C,KAAKpN,YACRohC,EAAYsB,GAGK,KAAfhB,GAAqBA,EAAWlnB,MAAM,KAAK,KAAO/M,EAAOzN,YAC3D7B,OAAOgiB,aAAa9gB,OAAOqiC,EAAWlnB,MAAM,KAAK,OAKjDooB,EAAsB,WhE8EP,IAAC55B,EgE7EpB9C,GhE6EoB8C,EgE7EIq4B,EhE6EL,uCAAoB,WAAMn7B,GAAN,iBAAAjI,EAAA,6DACzCiI,EAASmC,MADgC,SAElB5K,EAAQ,8BAA8BuL,GAFpB,QAEnCzK,EAFmC,QAG7BC,SAAW3B,EAAekI,IAC9BoB,EAAM5H,EAAST,MACdA,KACLoI,EAASuC,GAAU,CAACtC,EAAIrI,MAAOqI,EAAIvH,SAAW,KAE9CsH,EAASqC,GAAYpC,EAAIvH,SAAW,KAItCsH,EAASqC,GADGhK,EACaK,SAAW,KAZG,2CAApB,yDgE3ErB,OACE,yBAAK0Z,UAAU,kCACb,yBAAKA,UAAU,6DACb,4BAAQA,UAAU,4FAChB,yBAAKA,UAAU,mCAAmC+H,UAAQ,QACxD,wCACA,6BACE,yBAAK/H,UAAU,sCAAsC+H,UAAQ,QAC3D,sCACA,yBAAK/H,UAAU,sBAAf,YACA,oCACA,yBAAKA,UAAU,iBAAgB,yBAAKyB,MAAO,CAAE6P,MAAO,eAM1Dhd,EAAK9O,MAAQ8O,EAAK9O,KAAK8U,KAAI,SAACwvB,EAAwBn3B,GAClD,OAAO,yBAAKqN,UAAU,eAAe1V,IAAKqI,GACxC,yBAAKqN,UAAU,uEAAuE+H,UAAQ,QAC5F,6BACE,yBAAK/H,UAAU,gBAAgB+H,UAAQ,QACrC,yBAAK/H,UAAU,gBACb,yBAAKA,UAAU,yBACb,uBAAGA,UAAU,eAAe8E,QAAS,kBAAM5B,EAAQf,KAAK,mBAAqB2nB,EAAS93B,aACpF,4BAAQgO,UAAU,qBAAoB,yBAAKqC,IAAKxd,EAAkBilC,EAASx0B,iBAAkBoT,IAAI,iEAIvG,yBAAK1I,UAAU,mBACb,yBAAKA,UAAU,gBAAgB8pB,EAASv0B,aACxC,uBAAGyK,UAAU,kBAAkB8E,QAAS,kBAAM5B,EAAQf,KAAK,mBAAqB2nB,EAAS93B,aAAa83B,EAAS5+B,gBAIrH,6BACE,yBAAK8U,UAAU,0EAA0E+H,UAAQ,QAC/F,6BACE,yBAAK/H,UAAU,6BAAf,SACA,6BAAMpY,EAAgBG,EAAavC,MAAQ,MAA3C,IAAmDskC,EAASp1B,eAE9D,6BACE,2BAAOsL,UAAU,kBACf,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,aACb,uBAAGA,UAAU,eAAe4I,UAAQ,cAClC9D,QAAS,WACPmlB,EAAcH,EAAS30B,OAAQ20B,EAASh1B,gBAAiBg1B,EAASC,mBAAqB,KAAK,MAGhG,uBAAG/pB,UAAU,iCAAiC4I,UAAQ,aACpD9D,QAAS,WACPmlB,EAAcH,EAAS30B,OAAQ20B,EAASh1B,gBAAiBg1B,EAASC,mBAAqB,KAAK,MAGhG,2BAAO/pB,UAAU,0BACflU,KAAK,SACLwC,MAAOnD,GAAYA,EAAS2+B,EAASh1B,kBAAoB,EACzDkT,SAAU,SAACC,GACTgiB,EAAcH,EAAS30B,OAAQ20B,EAASh1B,gBAAiBg1B,EAASC,mBAAqB,KAAK,EAAO9hB,EAAEC,cAAc5Z,YAI3H,yBAAK0R,UAAU,iBAAgB,0BAAMA,UAAU,+CAAhB,QAAoE8pB,EAASC,kBAA7E,QAInC,6BACE,yBAAK/pB,UAAU,6BAAf,OACA,6BAAMpY,EAAgBG,EAAavC,MAAQ,MAA3C,IAAmDskC,EAASr1B,aAE9D,yBAAKuL,UAAU,mBACZ1L,EAAK5I,YAAc,0BAAM0b,aAAW,UACnC9S,EAAK5I,YAAc,uBAAGsU,UAAU,iBAAiB8E,QAAS,kBAjK7D,SAACglB,GAClBl8B,EAAS8H,GAAeo0B,GAAS,IAgKmDS,CAAWT,IAAW1V,aAAW,UAAS,0BAAMxL,UAAQ,mBAQxI,yBAAK5I,UAAU,kBACb,+BACE,0BAAMA,UAAU,uCAAhB,cACA,yBAAKA,UAAU,aACb,uBAAGA,UAAU,iCAAiC8E,QAAS,kBAAMwlB,KAAuB1hB,UAAQ,gBAC5F,2BAAO5I,UAAU,+BAA+BlU,KAAK,OACnDwC,MAAOy6B,EACP/gB,SAAU,SAACC,GAAD,OAAO+gB,EAAiB/gB,EAAEC,cAAc5Z,WAGrD66B,EAAax9B,YAAc,0BAAMqU,UAAU,gEAA+D,0BAAM4I,UAAQ,UAA7F,sBAC3BugB,EAAa19B,UAAY,0BAAMuU,UAAU,+DAA8D,0BAAM4I,UAAQ,QAA5F,yBAG9B,4BAAQ5B,IAAK0iB,EAA6BljC,GAAG,kBAAkBygB,YAAU,iBAAiBnb,KAAK,WAC/F,yBAAKtF,GAAG,QAAQ0gB,WAAS,2CACvB,yBAAKlH,UAAU,0DAEV1L,EAAK5I,YAAc,4BAAQsU,UAAU,yBAAyBlU,KAAK,SAASqb,WAAS,SAExF,yBAAKH,IAAK2iB,EAA6B3pB,UAAU,+BAC/C,2BAAIipB,GAEF30B,EAAK5I,YAAc,yBAAK0b,aAAW,eC1O7CojB,GAAqC,WAAO,IAAD,gBAEb9mB,mBAAS,GAFI,oBAExC+mB,EAFwC,KAE7BC,EAF6B,OAGGhnB,mBAAS,KAHZ,oBAGxC4P,EAHwC,KAGrBC,EAHqB,OAID7P,mBAAS,KAJR,oBAIxCkQ,EAJwC,KAIvBC,EAJuB,OAKKnQ,mBAAS,KALd,oBAKxC8P,EALwC,KAKpBC,EALoB,OAMD/P,mBAAS,KANR,oBAMxCgQ,EANwC,KAMvBC,EANuB,KAOzCrf,EAAOiP,aAA4B,SAAArJ,GAAK,OAAIA,EAAM5F,QAClDkP,EAAWD,aAAY,SAACrJ,GAAD,OAAqBA,EAAMrO,QAClD9D,EAAewb,aAAoC,SAAArJ,GAAK,OAAIA,EAAMnS,gBAClE0b,EAAaF,aAAuC,SAAArJ,GAAK,OAAIA,EAAMxJ,OAAOlL,MAAQ,MAElF0d,EAAUC,cAmChB,OAjCAgB,qBAAU,WACR,GAAI7P,EAAK9O,MAAQ8O,EAAK9O,KAAKgE,OAAS,EAAG,CACrC,IAAImhC,EAAQ,EAOZ,GANAr2B,EAAK9O,KAAK6C,SAAQ,SAACiM,GACbA,EAAKG,aACPk2B,GAAS5jC,OAAOuN,EAAKG,gBAGzBi2B,EAAaC,GACa,IAAtBlnB,EAAWja,OAAc,CAAC,IAAD,IACvBuqB,EAAgBpsB,GAA2B,UAAA6b,EAAShe,YAAT,eAAe8B,WAAY,IAAKqjC,EAAMjjC,YACjFssB,EAAqB3sB,GAAsB,UAAAmc,EAAShe,YAAT,eAAe8B,WAAY,IAAKqjC,EAAMjjC,YACjFusB,EAActsB,EAA2B8b,EAAW,GAAGnV,MAAO0lB,EAAmBtsB,YACjFwsB,EAAmB7sB,EAAsBoc,EAAW,GAAGnV,OAAS,IAAK0lB,EAAmBtsB,YAC5FisB,EAAmBK,GACnBT,EAAqBQ,GACrBF,EAAmBI,GACnBR,EAAsBS,OACjB,CAAC,IAAD,IACDH,EAAgBpsB,GAA2B,UAAA6b,EAAShe,YAAT,eAAe8B,WAAY,IAAKqjC,EAAMjjC,YACjFssB,EAAqB3sB,GAAsB,UAAAmc,EAAShe,YAAT,eAAe8B,WAAY,IAAKqjC,EAAMjjC,YACrF6rB,EAAqBQ,GACrBN,EAAsBO,SAGxB0W,EAAa,GACbnX,EAAqB,KACrBE,EAAsB,KACtBE,EAAmB,KACnBE,EAAmB,OAEpB,CAACvf,EAAK9O,KAAKie,IAGZ,yBAAKzD,UAAU,+CACb,yBAAKA,UAAU,4DAA4DiL,YAAU,0CAEhF,UAAAzH,EAAShe,YAAT,eAAe8B,WAAwC,OAA5B,UAAAkc,EAAShe,YAAT,eAAe8B,WAA0C,IAAtBmc,EAAWja,SAC1E,yBAAKwW,UAAU,gBACb,yBAAKA,UAAU,gBAAgB+H,UAAQ,QACrC,yBAAK/H,UAAU,iCAAf,YACA,6BAAMpY,EAAgBG,EAAavC,MAAQ,MAA3C,IAAmDilC,KAGnD,UAAAjnB,EAAShe,YAAT,eAAe8B,WAAwC,OAA5B,UAAAkc,EAAShe,YAAT,eAAe8B,WAC1C,yBAAK0Y,UAAU,gBAAgB+H,UAAQ,QACvC,yBAAK/H,UAAU,iCAAf,uBAA0DwD,EAAShe,YAAnE,aAA0D,EAAe8B,SAAzE,MACA,yBAAK0Y,UAAU,kBAAf,UAAmCpY,EAAgBG,EAAavC,MAAQ,MAAxE,IAAgF8tB,KAO9D,IAAtB7P,EAAWja,QACX,yBAAKwW,UAAU,iBAEX,UAAAwD,EAAShe,YAAT,eAAe8B,WAAwC,OAA5B,UAAAkc,EAAShe,YAAT,eAAe8B,WAC1C,yBAAK0Y,UAAU,gBAAgB+H,UAAQ,QACrC,yBAAK/H,UAAU,iCAAf,oBACA,6BAAMpY,EAAgBG,EAAavC,MAAQ,MAA3C,IAAmDkuB,IAIvD,yBAAK1T,UAAU,gBAAgB+H,UAAQ,QACrC,yBAAK/H,UAAU,iCAAf,WAAwDyD,EAAW,IAAMA,EAAW,GAAGnV,MAAvF,MACA,yBAAK0R,UAAU,kBAAf,UAAmCpY,EAAgBG,EAAavC,MAAQ,MAAxE,IAAgFouB,KAKtF,yBAAK5T,UAAU,gBACb,yBAAKA,UAAU,+BAA+B+H,UAAQ,QACpD,yBAAK/H,UAAU,iCAAf,SACA,yBAAKA,UAAU,+BAA+BpY,EAAgBG,EAAavC,MAAQ,MAAnF,IAA2FguB,IAE7F,4BAAQxT,UAAU,2DAChB+K,SAAwB,IAAd0f,EACV3lB,QAAS,WAAQ5B,EAAQf,KAAK,eAFhC,gBC5FJyoB,GAAiD,WACrD,IAAM1nB,EAAUC,cAChB,OACE,8BACE,6BAASnD,UAAU,+BACjB,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,oCAAoC+H,UAAQ,QACzD,yBAAK/H,UAAU,kBACb,wBAAIA,UAAU,iDACZ,4BAAI,uBAAG8E,QAAS,kBAAI5B,EAAQf,KAAK,OAA7B,SACJ,4BAAI,wCAEN,wBAAInC,UAAU,+CAAd,SAEF,6BACE,yBAAKA,UAAU,iBAAiB+H,UAAQ,QACtC,kBAAC,GAAD,MACA,kBAAC,GAAD,aCNhBliB,OAAOglC,SAAWhlC,OAAOglC,UAAY,GAErC,IAAMC,GAAgD,SAAC/qB,GAAkB,IAAD,MA8BlE4H,EA5BE/Z,EAAWqV,cACXC,EAAUC,cAHsD,EAI1BO,mBAAS,GAJiB,oBAI/DY,EAJ+D,KAI/CymB,EAJ+C,OAKpBrnB,mBAAS,KALW,oBAK/D4P,EAL+D,KAK5CC,EAL4C,OAMlB7P,mBAAS,KANS,oBAM/D8P,EAN+D,KAM3CC,EAN2C,OAOxB/P,mBAAS,KAPe,oBAO/DkQ,EAP+D,KAO9CC,EAP8C,OAQxBnQ,mBAAS,KARe,oBAQ/DgQ,EAR+D,KAQ9CC,EAR8C,OASlBjQ,mBAAS,KATS,oBAS/DsnB,EAT+D,KAS3CC,EAT2C,OAU5BvnB,mBAAS,GAVmB,oBAU/D0C,EAV+D,KAUhD8kB,EAVgD,OAWhCxnB,mBAAS,GAXuB,oBAW/DuB,EAX+D,KAWlDkmB,EAXkD,OAY1BznB,mBAAS,iEAZiB,oBAY/D0nB,EAZ+D,KAY/CC,EAZ+C,QAa9B3nB,oBAAS,GAbqB,sBAa/D4nB,GAb+D,MAajDC,GAbiD,SAc1B7nB,oBAAS,GAdiB,sBAc/DM,GAd+D,MAc/CC,GAd+C,SAe1BP,mBAAS,SAfiB,sBAe/D8nB,GAf+D,MAe/CC,GAf+C,MAgBhEn3B,GAAOiP,aAA4B,SAAArJ,GAAK,OAAIA,EAAM5F,QAClDqI,GAAW4G,aAAY,SAACrJ,GAAD,OAAqBA,EAAMyC,YAClD6G,GAAWD,aAAY,SAACrJ,GAAD,OAAqBA,EAAMrO,QAClD9D,GAAewb,aAAoC,SAAArJ,GAAK,OAAIA,EAAMnS,gBAClE0b,GAAaF,aAAuC,SAAArJ,GAAK,OAAIA,EAAMxJ,OAAOlL,MAAQ,MAClFkmC,GAAenoB,aAAyC,SAAArJ,GAAK,OAAIA,EAAM2E,kBAAkBrZ,MAAQ,MACjGmmC,GAAoBtoB,iBAA0B,MAtBkB,GAuBxBK,oBAAS,GAvBe,sBAuB/DkoB,GAvB+D,MAuB9C9lB,GAvB8C,SAwBvCpC,mBAAS,IAxB8B,sBAwB/DmoB,GAxB+D,MAwBrDC,GAxBqD,SAyBtBpoB,oBAAS,GAzBa,sBAyB/DqoB,GAzB+D,MAyB7CC,GAzB6C,SA0B1BtoB,oBAAS,GA1BiB,sBA0B/DuoB,GA1B+D,MA0B/CC,GA1B+C,SA2BlCxoB,mBAAS,IA3ByB,sBA2B/D+D,GA3B+D,MA2BnDC,GA3BmD,SA4BxBhE,oBAAS,GA5Be,sBA4B/DgB,GA5B+D,MA4B9CynB,GA5B8C,SA6BVzoB,mBAAS,GA7BC,sBA6B/D0oB,GA7B+D,MA6BvCC,GA7BuC,MAgCtEloB,qBAAU,WACR,IAmCoC,EAnChC2P,EAAY,EAChB,GAAIxf,GAAK9O,MAAQ8O,GAAK9O,KAAKgE,OAAS,EAAG,CAMrC,GALA8K,GAAK9O,KAAK6C,SAAQ,YAAqB,IAAlBoM,EAAiB,EAAjBA,WACnBqf,GAAa/sB,OAAO0N,MAEtBs2B,EAAkBjX,GAClB/T,EAAM2qB,aAAa5W,GACO,IAAtBrQ,GAAWja,OAAc,CAAC,IAAD,IACvBuqB,EAAgBpsB,GAA2B,UAAA6b,GAAShe,YAAT,eAAe8B,WAAY,IAAKwsB,EAAUpsB,YACrFssB,EAAqB3sB,GAAsB,UAAAmc,GAAShe,YAAT,eAAe8B,WAAY,IAAKwsB,EAAUpsB,YACrFusB,EAActsB,EAA2B8b,GAAW,GAAGnV,MAAO0lB,EAAmBtsB,YACjFwsB,EAAmB7sB,EAAsBoc,GAAW,GAAGnV,OAAS,IAAK0lB,EAAmBtsB,YAC5FisB,EAAmBK,GACnBT,EAAqBQ,GACrBF,EAAmBI,GACnBR,EAAsBS,GACtBoY,GAAsBh4B,GAAK9O,KAAM0uB,OAE5B,CAAC,IAAD,IACDH,EAAgBpsB,GAA2B,UAAA6b,GAAShe,YAAT,eAAe8B,WAAY,IAAKwsB,EAAUpsB,YACrFssB,EAAqB3sB,GAAsB,UAAAmc,GAAShe,YAAT,eAAe8B,WAAY,IAAKwsB,EAAUpsB,YACzF6rB,EAAqBQ,GACrBN,EAAsBO,GACtBsY,GAAsBh4B,GAAK9O,KAAMwuB,GAEnCmX,EAAepkC,OAAOuN,GAAK9O,KAAK,GAAGsR,eAEnCi0B,EAAkB,GAClBxX,EAAqB,KACrBE,EAAsB,KACtBwX,EAAsB,KACtBlrB,EAAM2qB,aAAa,GAEjBhmB,KACFynB,IAAmB,GACY,IAA3BC,GACF,UAAAT,GAAkBlnB,eAAlB,SAA2B9Z,SAE3Bkd,aAAaF,GACbA,EAAQrC,YAAW,WAAO,IAAD,EACvB,UAAAqmB,GAAkBlnB,eAAlB,SAA2B9Z,QAC3Bkd,aAAaF,KACZ,SAGN,CAACrT,GAAK9O,KAAMge,GAAShe,KAAMua,EAAMwsB,eAEpCpoB,qBAAU,WACR,GAA0B,OAAtBpc,GAAavC,KACf,GAAImX,GAASnX,MAAQmX,GAASnX,KAAKsR,SAAiC,WAAtBiJ,EAAMqE,YAA0B,CAAC,IAAD,UAMxEzH,GAASnX,KAJX8E,EAF0E,EAE1EA,IACAzC,EAH0E,EAG1EA,SACAiP,EAJ0E,EAI1EA,QAGEyJ,EAAU,CACZ,IAAOjW,EACP,SAAYzC,EACZ,KAV0E,EAK1EkB,KAMA,YAAe,GACf,SAAY+N,EACZ,QAAW,SAAU7Q,GAAgB,IAAD,EAClC,UAAA0lC,GAAkBlnB,eAAlB,SAA2B9Z,QAC3B6hC,GAAgBvmC,EAASwmC,oBAAqBxmC,EAASymC,kBAAmBzmC,EAAS0mC,qBAErF,MAAS,CACP,UAAa,WACXpB,IAAgB,GAChB39B,EAASuI,GAAc,OAG3B,QAAW,CACT,MAAQ,UAAAqN,GAAShe,YAAT,eAAeshB,YAAa,cAAKtD,GAAShe,YAAd,aAAK,EAAeuhB,UACxD,gBAASvD,GAAShe,YAAlB,aAAS,EAAe6G,aACxB,kBAAWmX,GAAShe,YAApB,aAAW,EAAeukB,QAE5B,MAAS,CACP,QAAW,6BAEb,MAAS,CACP,MAAS,YAGT6iB,EAAO,IAAI/mC,OAAOglC,SAAStqB,GAC/BqsB,EAAKC,GAAG,kBAAkB,SAAU5mC,GAClCwlC,GAAkB,UAClBtmB,QAAQC,IAAI,OAAQnf,EAASmb,MAAM5S,MACnC2W,QAAQC,IAAI,OAAQnf,EAASmb,MAAMtO,aACnCqS,QAAQC,IAAI,SAAUnf,EAASmb,MAAM0rB,QACrC3nB,QAAQC,IAAI,OAAQnf,EAASmb,MAAM2rB,MACnC5nB,QAAQC,IAAI,SAAUnf,EAASmb,MAAMwM,QACrCzI,QAAQC,IAAI,WAAYnf,EAASmb,MAAM4rB,aAEzCJ,EAAKK,YACItwB,GAASnX,MAAQmX,GAASnX,KAAK0nC,KAA6B,QAAtBntB,EAAMqE,aACrD4nB,IAAoB,KAGvB,CAACrvB,GAASnX,OAEb2e,qBAAU,WACwF,IAAD,GAA3FxH,GAAS9G,eAAwC,WAAtBkK,EAAMqE,aAAkD,QAAtBrE,EAAMqE,cACrEinB,EAAkB1uB,GAASrW,SAAW,IACtCsH,EAAS4H,MACT,UAAAm2B,GAAkBlnB,eAAlB,SAA2B9Z,QAC3BwhC,IAAmB,GACnBxkB,EAAQC,aAAY,WACdwkB,GAAyB,GAC3BC,GAA0BD,GAAyB,KAEpD,QAEJ,CAACzvB,GAAS9G,gBAEbsO,qBAAU,WAE4B,IAAD,EADnC,GAAImnB,IAAsC,WAAtBvrB,EAAMqE,YACxB,GAAuB,WAAnBonB,GACFH,EAAkB,oDAClB,UAAAM,GAAkBlnB,eAAlB,SAA2B9Z,aACtB,GAAuB,UAAnB6gC,GAA4B,CAAC,IAAD,EACrCH,EAAkB,yCAClB,UAAAM,GAAkBlnB,eAAlB,SAA2B9Z,WAG9B,CAAC2gC,KAEJnnB,qBAAU,YACJxH,GAAS/G,oBACY,WAAtBmK,EAAMqE,aAAkD,QAAtBrE,EAAMqE,cACd,QAAtBrE,EAAMqE,YACPinB,EAAkB,mBAElBA,EAAkB,4BAEtBpnB,IAAkB,GAClBsnB,IAAgB,GAChB39B,EAAS4H,MACTw2B,IAAoB,GACpB1mB,YAAW,WAAO,IAAD,EACf1X,EAASyI,MACT,UAAAs1B,GAAkBlnB,eAAlB,SAA2B9Z,QAC3BuY,EAAQf,KAAK,4BACZ,QAEJ,CAACxF,GAAS/G,qBAEbuO,qBAAU,WACHmnB,KACC3uB,GAASlR,UAAkC,WAAtBsU,EAAMqE,aAC7BinB,EAAkB1uB,GAASrW,SAAW,IACtC2d,IAAkB,GAClBsnB,IAAgB,GAChBE,GAAkB,OACT9uB,GAASlR,UAAkC,QAAtBsU,EAAMqE,cACpCinB,EAAkB1uB,GAASrW,SAAW,IACtC2d,IAAkB,GAClBsnB,IAAgB,GAChBS,IAAoB,OAGvB,CAACrvB,GAASlR,WAEb0Y,qBAAU,WACiB,QAAtBpE,EAAMqE,aACP4nB,IAAoB,KAEtB,CAACjsB,EAAMqE,cACT,IAAMooB,GAAkB,SAACpM,EAA2B+M,EAAyBC,GAA+B,IAAD,kB9DnDlFC,E8DoDvBz/B,G9DpDuBy/B,E8DoDI,CACzBjN,oBACA+M,kBACAC,oBACAt2B,QAASmO,EACT4I,YAAalR,GAASnX,MAAQmX,GAASnX,KAAK8nC,SAAW,GACvDnnB,UAAW3C,GAAShe,MAAQge,GAAShe,KAAK2gB,WAAa,GACvDpV,SAAU0S,IAAcA,GAAW,IAAMA,GAAW,GAAG1S,SACvDuV,aAAa,UAAA9C,GAAShe,YAAT,eAAe+gB,gBAAiB,KAAhC,UAAsC/C,GAAShe,YAA/C,aAAsC,EAAeghB,gBAAiB,KAAtE,UACbhD,GAAShe,YADI,aACb,EAAeihB,kBAAmB,KADrB,UAC2BjD,GAAShe,YADpC,aAC2B,EAAekhB,MAAO,KADjD,UACuDlD,GAAShe,YADhE,aACuD,EAAe0U,OACnF,KAFa,UAEPsJ,GAAShe,YAFF,aAEP,EAAemhB,SAAU,KAFlB,UAEwBnD,GAAShe,YAFjC,aAEwB,EAAeohB,SACpDC,UAAU,UAAArD,GAAShe,YAAT,eAAeshB,WAAY,KAA3B,UAAiCtD,GAAShe,YAA1C,aAAiC,EAAeuhB,W9D/DtC,uCAAmC,WAAOnZ,GAAP,iBAAAjI,EAAA,6DAC3DiI,EAASmI,MADkD,SAEpC5Q,EAAS,oBAAoBkoC,GAFO,QAErDpnC,EAFqD,QAG5CC,SAAW3B,EAAekI,IAC/BoB,EAAM5H,EAAST,KACrBoI,EAAS2I,GAAe1I,EAAIvH,SAAW,MAGvCsH,EAASuI,GADGlQ,EACeK,SAAW,KARiB,2CAAnC,yD8DkElBinC,GAAqB,WAAO,IAAD,E9DvFT32B,EAAgBE,EAAiB/F,G8DwFvD,UAAGyS,GAAShe,YAAZ,aAAG,EAAe2gB,WACU,WAAtBpG,EAAMqE,aACRmnB,IAAgB,GAChB39B,G9D3FkBgJ,E8D2FQ4c,EAAmB9rB,W9D3FXoP,E8D2FuBmO,E9D3FNlU,E8D2FmB0S,IAAcA,GAAW,IAAMA,GAAW,GAAG1S,S9D3FlG,uCAAwD,WAAOnD,GAAP,mBAAAjI,EAAA,6DAC/EiI,EAASmI,MADsE,SAExD5Q,EAAS,YAC9B,CACEyR,SACAC,cAAeD,EACfE,UACA/F,aAP2E,QAEzE9K,EAFyE,QAShEC,SAAW3B,EAAekI,IAC/BoB,EAAM5H,EAAST,KACrBoI,EAASqI,GAAqBpI,EAAIrI,MAAQ,GAAwBqI,EAAIvH,SAAW,MACzEL,EAASC,SAAW3B,EAAewS,cACrClJ,EAAM5H,EAAST,KACrBoI,EAAS6I,GAAa5I,EAAIvH,SAAW,MAGrCsH,EAASuI,GADGlQ,EACeK,SAAW,KAjBqC,2CAAxD,yD8D4Fc,QAAtByZ,EAAMqE,cACfmnB,IAAgB,GAChB39B,E9D5BY,SAACgJ,EAAgBE,EAAiB/F,GAAlC,8CAAwD,WAAOnD,GAAP,mBAAAjI,EAAA,6DAC1EiI,EAASmI,MADiE,SAEnD5Q,EAAS,oBAAoB,CAClDyR,SACAC,cAAeD,EACfE,UACA/F,aANwE,QAEpE9K,EAFoE,QAS7DC,SAAW3B,EAAekI,IAC/BoB,EAAM5H,EAAST,KACrBoI,EAASqI,GAAqBpI,EAAIrI,KAA0BqI,EAAIvH,SAAW,MACnEL,EAASC,SAAW3B,EAAewS,cACrClJ,EAAM5H,EAAST,KACrBoI,EAAS6I,GAAa5I,EAAIvH,SAAW,MAGrCsH,EAASuI,GADGlQ,EACeK,SAAW,KAjBkC,2CAAxD,sD8D4BHknC,CAAYha,EAAmB9rB,WAAYud,EAAaxB,IAAcA,GAAW,IAAMA,GAAW,GAAG1S,aAGhHm7B,IAAkB,GAClB5mB,YAAW,WACT4mB,IAAkB,KAClB,OAIN/nB,qBAAU,WAEN2nB,GADEF,GACS,GAEA,CACT,YAAa,2CAGhB,CAACA,KAEJ,IAAM6B,GAAa,WAAO,IAAD,oB9D3BLC,E8D4BlB9/B,G9D5BkB8/B,E8D4BI,CACpBR,IAAKzlB,GACL3Q,QAASmO,EACTkB,UAAW3C,GAAShe,MAAQge,GAAShe,KAAK2gB,WAAa,GACvDpV,SAAU0S,IAAcA,GAAW,IAAMA,GAAW,GAAG1S,SACvDuV,aAAa,UAAA9C,GAAShe,YAAT,eAAe+gB,gBAAiB,KAAhC,UAAsC/C,GAAShe,YAA/C,aAAsC,EAAeghB,gBAAiB,KAAtE,UACbhD,GAAShe,YADI,aACb,EAAeihB,kBAAmB,KADrB,UAC2BjD,GAAShe,YADpC,aAC2B,EAAekhB,MAAO,KADjD,UACuDlD,GAAShe,YADhE,aACuD,EAAe0U,OACnF,KAFa,UAEPsJ,GAAShe,YAFF,aAEP,EAAemhB,SAAU,KAFlB,UAEwBnD,GAAShe,YAFjC,aAEwB,EAAeohB,SACpDC,UAAU,UAAArD,GAAShe,YAAT,eAAeshB,WAAY,KAA3B,UAAiCtD,GAAShe,YAA1C,aAAiC,EAAeuhB,W9DpC3C,uCAAyB,WAAOnZ,GAAP,iBAAAjI,EAAA,6DAC5CiI,EAASmI,MADmC,SAErB5Q,EAAS,yBAAyBuoC,GAFb,QAEtCznC,EAFsC,QAG/BC,SAAW3B,EAAekI,IAC/BoB,EAAM5H,EAAST,KACrBoI,EAAS2I,GAAe1I,EAAIvH,SAAW,MAGvCsH,EAASuI,GADGlQ,EACeK,SAAW,KARI,2CAAzB,wD8DsCjB+kC,EAAkB,iEAClBpnB,IAAkB,GAClBsnB,IAAgB,GAChB,UAAAI,GAAkBlnB,eAAlB,SAA2B9Z,SAGvB2hC,GAAwB,SAACxjB,EAA0B0K,GACvD,IAAIma,EAAY7kB,EAAS7f,QAAO,SAAC2kC,EAAat5B,GAAd,MAAwB,CAAE,iBAAoBvN,OAAO6mC,EAAYj5B,iBAAmB5N,OAAOuN,EAAKK,kBAAkBjN,eAElJ,GADAwjC,EAAiBnkC,OAAO4mC,EAAUh5B,kBACP,aAAvBoL,EAAMwsB,aACR,GAAIxlC,OAAO4mC,EAAUh5B,iBAAmB,EAAG,CACzC,IAAMk5B,EAAQ,GAAgD,GAAzC9mC,OAAO4mC,EAAUh5B,iBAAmB,GACzD/G,EAAS6L,GAAiB,CAAE,eAAkBo0B,EAAKnmC,cACnDujC,GAAuBlkC,OAAOysB,GAAsBqa,GAAMnmC,iBAE1DkG,EAAS6L,GAAiB,CAAE,eAAkB,QAC9CwxB,GAAuBlkC,OAAOysB,GAAsB,IAAI9rB,iBAG1D,GAAIX,OAAO4mC,EAAUh5B,iBAAmB,EAAG,CACzC,IAAMk5B,EAAQ,GAAgD,IAAzC9mC,OAAO4mC,EAAUh5B,iBAAmB,GACzD/G,EAAS6L,GAAiB,CAAE,eAAkBo0B,EAAKnmC,cACnDujC,GAAuBlkC,OAAOysB,GAAsBqa,GAAMnmC,iBAE1DkG,EAAS6L,GAAiB,CAAE,eAAkB,QAC9CwxB,GAAuBlkC,OAAOysB,GAAsB,IAAI9rB,aAI9D,OACE,oCACE,yBAAKsY,UAAU,+CAEb,uCAAKA,UAAU,6DAGX6rB,IAIF,6BAAS7rB,UAAU,gBACjB,8CAEE1L,GAAK9O,MAAQ8O,GAAK9O,KAAK8U,KAAI,SAACwvB,EAAwBn3B,GAClD,OACE,yBAAKrI,IAAKqI,EAAOqN,UAAU,gBAAgB+H,UAAQ,QACjD,yBAAK/H,UAAU,mBACb,yBAAKA,UAAU,iBAAiB8pB,EAAS5+B,aACzC,yBAAK8U,UAAU,gBAAgB8pB,EAASn1B,gBAAxC,SAA4D/M,EAAgBG,GAAavC,MAAQ,MAAjG,IAAyGskC,EAASp1B,eAEpH,yBAAKsL,UAAU,iBAAgB,6BAAMpY,EAAgBG,GAAavC,MAAQ,MAA3C,IAAmDskC,EAASr1B,mBAOnG,UAAA+O,GAAShe,YAAT,eAAe8B,WAAwC,OAA5B,UAAAkc,GAAShe,YAAT,eAAe8B,WAC1C,6BAAS0Y,UAAU,gBACjB,yBAAKA,UAAU,gBAAgB+H,UAAQ,QACrC,yBAAK/H,UAAU,mBAAkB,yBAAKA,UAAU,iBAAf,aACjC,yBAAKA,UAAU,iBAAgB,6BAAMpY,EAAgBG,GAAavC,MAAQ,MAA3C,IAAmD8e,GAAkB,KAEtG,yBAAKtE,UAAU,gBAAgB+H,UAAQ,QACrC,yBAAK/H,UAAU,mBAAkB,yBAAKA,UAAU,iBAAf,uBAA0CwD,GAAShe,YAAnD,aAA0C,EAAe8B,SAAzD,OACjC,yBAAK0Y,UAAU,iBAAgB,yBAAKA,UAAU,kBAAf,KAAmCpY,EAAgBG,GAAavC,MAAQ,MAAxE,IAAgF8tB,MAM7F,IAAtB7P,GAAWja,QACX,6BAASwW,UAAU,gBACjB,yBAAKA,UAAU,gBAAgB+H,UAAQ,QACrC,yBAAK/H,UAAU,mBAAkB,yBAAKA,UAAU,iBAAf,qBACjC,yBAAKA,UAAU,iBAAgB,6BAAMpY,EAAgBG,GAAavC,MAAQ,MAA3C,IAAmDkuB,KAEpF,yBAAK1T,UAAU,gBAAgB+H,UAAQ,QACrC,yBAAK/H,UAAU,mBAAkB,yBAAKA,UAAU,iBAAf,WAAwCyD,GAAW,IAAMA,GAAW,GAAGnV,MAAvE,OACjC,yBAAK0R,UAAU,iBAAgB,yBAAKA,UAAU,kBAAf,KAAmCpY,EAAgBG,GAAavC,MAAQ,MAAxE,IAAgFouB,MAK7F,OAAtB7rB,GAAavC,MACb,6BAASwa,UAAU,gBACjB,yBAAKA,UAAU,gBAAgB+H,UAAQ,QACrC,yBAAK/H,UAAU,mBAAkB,yBAAKA,UAAU,iBAAf,aACjC,yBAAKA,UAAU,iBAAgB,6BAAMpY,EAAgBG,GAAavC,MAAQ,MAA3C,IAAmDguB,KAEpF,yBAAKxT,UAAU,gBAAgB+H,UAAQ,QACrC,yBAAK/H,UAAU,mBAAkB,yBAAKA,UAAU,iBAAf,aACjC,yBAAKA,UAAU,iBAAgB,yBAAKA,UAAU,mBAAf,KAAoCpY,EAAgBG,GAAavC,MAAQ,MAAzE,IAAiFkmC,GAAalyB,mBAMjIuyB,IAAwC,QAApBhsB,EAAMqE,aAC1B,kBAAC,GAAD,CAAuBkD,iBAAkBykB,GAAkBrkB,cAAeA,KAE5E,6BAAS1H,UAAU,gBAEf,yBAAKA,UAAU,+BAA+B+H,UAAQ,QACpD,yBAAK/H,UAAU,mBAAkB,yBAAKA,UAAU,iBAAf,UAET,OAAtBjY,GAAavC,KACX,yBAAKwa,UAAU,iBAAgB,yBAAKA,UAAU,+BAA+BpY,EAAgBG,GAAavC,MAAQ,MAAnF,IAA2FguB,IACxH,yBAAKxT,UAAU,iBAAgB,yBAAKA,UAAU,+BAA+BpY,EAAgBG,GAAavC,MAAQ,MAAnF,IAA2FwlC,KAO5G,WAAtBjrB,EAAMqE,aACa,IAAnBE,GACA,kBAAC,GAAD,CACEA,eAAgBkP,EAChBxO,sBAAuBgmB,EACvB5kB,cAAeA,EACfC,WAAmC,aAAvBtG,EAAMwsB,aAClBnoB,YAAarE,EAAMqE,YACnB0B,mBAAoBA,GACpBb,YAAaA,IAGfgnB,IACA,yBAAKjsB,UAAU,uBACT,0BAAMA,UAAU,kCAAhB,kDAIgB,WAAtBD,EAAMqE,cAA6B2nB,IACnC,qCAEKpvB,GAAS7G,wBAA0B6G,GAASlR,UAC7C,yBAAKuU,UAAU,uBACb,0BAAMA,UAAU,kCAAhB,IAAmDrD,GAASrW,QAA5D,MAGJ,4BACEykB,SAAUpO,GAASjR,YAAiC,IAAnB4Y,EACjCtE,UAAU,2DACV8E,QAAS,kBAAMyoB,OACf5wB,GAASjR,YAAc,yBAAK0b,aAAW,SAJzC,aAxCN,IAiDI2kB,IACA,4BAAQ/rB,UAAU,2DAChB+K,SAAUpO,GAASjR,YAAiC,IAAnB4Y,EACjCQ,QAAS,WAAQnI,GAAS7G,uBAAyB23B,KAAeF,OACjE5wB,GAAS7G,uBAAyB,cAAgB,eAOrC,WAAtBiK,EAAMqE,aACN,oCACA,4BAAQ4C,IAAK2kB,GAAmBnlC,GAAG,kBAAkBygB,YAAU,iBAAiBnb,KAAK,WACvF,yBAAKtF,GAAG,QAAQ0gB,WAAS,2CACvB,yBAAKlH,UAAU,0DAEVgE,IAAkBsnB,KAAiB,4BAAQtrB,UAAU,yBAAyBlU,KAAK,SAASqb,WAAS,SAExG,yBAAKnH,UAAU,+BACb,2BAAIorB,IAEDpnB,KAAmBsnB,IAAgB,yBAAKlkB,aAAW,SAGpDpD,KAAmBsnB,IACnB,oCACE,0BAAMtrB,UAAU,6BAAhB,yBAAkE,yBAAKoH,aAAW,WAIpFkkB,IAAgB,0BAAMtrB,UAAU,4BAAhB,wBC7bxB8tB,GAA6C,WAEjD,IAAM5qB,EAAUC,cACVvV,EAAWqV,cAHsC,EAIjBS,mBAAS,UAJQ,oBAIhDU,EAJgD,KAInC2pB,EAJmC,OAKrBrqB,mBAAS,GALY,oBAKrCgnB,GALqC,aAMEhnB,mBAAS,YANX,oBAMhDsqB,EANgD,KAM1BC,EAN0B,KAOjDzqB,EAAWD,aAAY,SAACrJ,GAAD,OAAqBA,EAAMrO,QAClD9D,EAAewb,aAAoC,SAAArJ,GAAK,OAAIA,EAAMnS,gBAWxE,OATAoc,qBAAU,WACkB,QAAtBpc,EAAavC,MACfuoC,EAAe,YAEhB,CAAChmC,EAAavC,OAEjB2e,qBAAU,WACRvW,EAASrB,OACT,IAEA,8BACE,6BAASyT,UAAU,+BACjB,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,oCAAoC+H,UAAQ,QACzD,6BAAS/H,UAAU,kBACjB,uBAAGA,UAAU,8BAA8B8E,QAAS,kBAAK5B,EAAQf,KAAK,WAAU,0BAAMnC,UAAU,yBAAyB4I,UAAQ,kCAAjI,kBACA,wBAAI5I,UAAU,+CAAd,aAEF,iCACE,yBAAKA,UAAU,iBAAiB+H,UAAQ,QACtC,yBAAK/H,UAAU,8DACb,yBAAKA,UAAU,oCAAoC+H,UAAQ,QACzD,iCACE,wBAAI/H,UAAU,qBAAd,oCACA,yBAAKA,UAAU,iBAAiB+H,UAAQ,QACtC,kBAAC,GAAD,CAAiBlc,KAAM2X,EAAUmH,UAAU,MAIvB,OAAtB5iB,EAAavC,MACb,iCACE,wBAAIwa,UAAU,qBAAd,WACA,yBAAKA,UAAU,6DACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,qFAAqFgoB,cAAY,2BAAiCjgB,UAAQ,QACvJ,yBAAKjD,QAAS,kBAAMipB,EAAe,YACjC,uBAAG/tB,UAA2B,WAAhBoE,EAA2B,sBAAwB,YAAa/d,KAAK,KACjF,yBAAK2Z,UAAU,mBAAf,yBACA,yBAAKA,UAAU,yBAAf,uCAGJ,yBAAK8E,QAAS,kBAAMipB,EAAe,SACjC,uBAAG/tB,UAA2B,QAAhBoE,EAAwB,sBAAwB,YAAa/d,KAAK,KAC9E,yBAAK2Z,UAAU,mBAAf,oBACA,yBAAKA,UAAU,yBAAf,6BAUU,OAAtBjY,EAAavC,MACb,iCACE,wBAAIwa,UAAU,qBAAd,aACA,yBAAKA,UAAU,6DACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,qFAAqFgoB,cAAY,2BAAiCjgB,UAAQ,QACvJ,yBAAKjD,QAAS,kBAAImpB,EAAyB,cACzC,uBAAGjuB,UAAqC,aAA1BguB,EAAuC,sBAAwB,YAAa3nC,KAAK,KAC7F,yBAAK2Z,UAAU,mBAAf,YACA,yBAAKA,UAAU,yBAAf,cACA,yBAAKA,UAAU,yBAAf,oEAGJ,yBAAK8E,QAAS,kBAAImpB,EAAyB,aACzC,uBAAGjuB,UAAqC,YAA1BguB,EAAsC,sBAAwB,YAAa3nC,KAAK,KAC5F,yBAAK2Z,UAAU,mBAAf,WACA,yBAAKA,UAAU,yBAAf,8BACA,yBAAKA,UAAU,yBAAf,yEASZ,iCACE,wBAAIA,UAAU,qBAAd,iBACA,yBAAKA,UAAU,6DACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,qFAAqFgoB,cAAY,2BAAiCjgB,UAAQ,QACvJ,6BAE0B,OAAtBhgB,EAAavC,MAA2C,YAA1BwoC,GAC9B,yBAAKhuB,UAAU,mBAAf,mGAIsB,OAAtBjY,EAAavC,MAA2C,aAA1BwoC,GAC9B,yBAAKhuB,UAAU,mBAAf,oGAGsB,OAAtBjY,EAAavC,MACb,yBAAKwa,UAAU,mBAAf,wCAGA,yBAAKA,UAAU,gBAAf,gOASlB,kBAAC,GAAD,CAAeoE,YAAaA,EAAamoB,aAAcyB,EAAuBtD,aAAcA,WC5HtGwD,GAAqC,WACzB/qB,cAEhB,OACE,6BAASnD,UAAU,kDACjB,4BAAQA,UAAU,gBAAe,yBAAKqC,IAAI,qBAAqBqG,IAAI,gBCNnEylB,GAAkC,WACtC,OACE,6BAASnuB,UAAU,kDAAkDunB,eAAa,uEAChF,wBAAIvnB,UAAU,sBACZ,wBAAIyB,MAAO,CAAE2sB,gBAAiB,YAC5B,2BACE,4BAAQpuB,UAAU,8BAA6B,yBAAKqC,IAAI,oBAAoBqG,IAAI,cAAe2lB,WAAS,YAG5G,wBAAI5sB,MAAO,CAAE2sB,gBAAiB,YAC5B,2BACE,4BAAQpuB,UAAU,8BAA6B,yBAAKqC,IAAI,kBAAkBqG,IAAI,cAAe2lB,WAAS,YAG1G,wBAAI5sB,MAAO,CAAE2sB,gBAAiB,aAC5B,2BACE,4BAAQpuB,UAAU,8BAA6B,yBAAKqC,IAAI,oBAAoBqG,IAAI,SAAU2lB,WAAS,aAIzG,uBAAGruB,UAAU,4DAA4DkoB,oBAAkB,WAAW5f,uBAAqB,SAC3H,uBAAGtI,UAAU,6DAA6DkoB,oBAAkB,OAAO3f,mBAAiB,SACpH,yBAAKvI,UAAU,+CAA8C,wBAAIA,UAAU,kCCV3EsuB,GAAyD,SAACvuB,GAC9D,IAAMmD,EAAUC,cACVvV,EAAWqV,cACXlb,EAAewb,aAAoC,SAAArJ,GAAK,OAAIA,EAAMnS,gBAClEyb,EAAWD,aAAY,SAACrJ,GAAD,OAAqBA,EAAMrO,QAClDyI,EAAOiP,aAA4B,SAAArJ,GAAK,OAAIA,EAAM5F,QAoCxD,OACE,yBAAK0L,UAAU,0DAA0D+H,UAAQ,QAE7EhI,EAAMyI,YAAYhf,OAAS,EAC3BuW,EAAMyI,YAAYlO,KAAI,SAAChS,GAAa,IAAD,MACjC,OACE,6BAASgC,IAAKhC,EAAQ0J,UAAWgO,UAAU,mBACzC,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,yBACb,uBAAGA,UAAU,eAAe8E,QAAS,WAAO5B,EAAQf,KAAK,mBAAqB7Z,EAAQ0J,aACpF,4BAAQgO,UAAU,qBAAoB,yBAAKqC,IAAKxd,EAAkByD,EAAQmgB,WAAYC,IAAKpgB,EAAQqgB,iBAIzG,yBAAK3I,UAAU,wBACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,wCAAwC1X,EAAQsG,qBAC/D,wBAAIoR,UAAU,yBAAwB,uBAAGA,UAAU,kBAAkB8E,QAAS,kBAAM5B,EAAQf,KAAK,mBAAqB7Z,EAAQ0J,aAAa1J,EAAQS,QAErJ,yBAAKiX,UAAU,wBACb,yBAAKA,UAAU,2BAEX,UAAAwD,EAAShe,YAAT,eAAe8B,WAAwC,OAA5B,UAAAkc,EAAShe,YAAT,eAAe8B,WAC1C,yBAAK0Y,UAAU,gBAAgBpY,EAAgBG,EAAavC,MAAQ,MAApE,IAA4EsC,EAAWC,EAAavC,MAAQ,KAAM8C,IAEpH,yBAAK0X,UAAU,yBACZpY,EAAgBG,EAAavC,MAAQ,MADxC,IACgD6B,GAAsB,UAAAmc,EAAShe,YAAT,eAAe8B,WAAY,IAAKQ,EAAWC,EAAavC,MAAQ,KAAM8C,MAG9I,yBAAK0X,UAAU,uBACb,4BAAQA,UAAU,kFAEd1L,EAAK5I,YAAc,0BAAM0b,aAAW,UAGnC9S,EAAK5I,YACJ,oCACE,0BAAMsU,UAAU,kCAAkC4I,UAAQ,OAAO9D,QAAS,kBAvElF,SAACxc,GAA0B,IAAD,EAC1C,GAAG,UAACkb,EAAShe,YAAV,aAAC,EAAeqjB,OAeZ,CACL,IAAMC,EAAW,CACfhU,gBAAiBxM,EAAQwM,gBACzBH,gBAAiB,IACjBM,aAAoC,OAAtBlN,EAAavC,KAAgB,EAAI,EAC/C2P,OAAQ,IACRE,aAAc/M,EAAQqgB,WACtBrT,iBAAkBhN,EAAQmgB,WAC1Bvd,YAAa5C,EAAQS,KACrBwM,YAAajN,EAAQsG,oBACrB8F,aAAc,IACd1C,UAAW1J,EAAQ0J,WAGrBpE,EAASyG,GAAcyU,GAAU,QA7BT,CACxB,IAAMA,EAAW,CACfhU,gBAAiBxM,EAAQwM,gBACzBH,gBAAiB,IACjBM,aAAoC,OAAtBlN,EAAavC,KAAgB,EAAI,EAC/C2P,OAAQ7M,EAAQwM,gBAChBO,aAAc/M,EAAQqgB,WACtBrT,iBAAkBhN,EAAQmgB,WAC1Bvd,YAAa5C,EAAQS,KACrBwM,YAAajN,EAAQsG,oBACrB8F,aAAc5M,EAAWC,EAAavC,MAAQ,KAAM8C,GACpD0J,UAAW1J,EAAQ0J,WAGrBpE,EAASyG,GAAcyU,GAAU,KAwDqEC,CAAUzgB,MAC1F,0BAAM0X,UAAU,mCAAhB,wBAWfxN,MAAM,GAAGwpB,KAAK,GAAG1hB,KAAI,SAAChM,EAAOqE,GAAR,OAAkB,kBAAC,GAAD,CAAuBrI,IAAKqI,EAAOsW,SAAUtW,SClG3F47B,GAAmD,WAEvD,IAAMC,EAAiBjrB,aAAqC,SAAArJ,GAAK,OAAIA,EAAMmE,cAAc7Y,MAAQ,MAC3FipC,EAAmBlrB,aAAqC,SAAArJ,GAAK,OAAIA,EAAM8D,gBAAgBxY,MAAQ,MAErG,OACE,oCACE,6BAASwa,UAAU,+BACjB,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,kBAAd,kBACA,yBAAKA,UAAU,+CACd,kBAAC,GAAD,CAAwBwI,YAAaimB,OAI1C,6BAASzuB,UAAU,+BACjB,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,kBAAd,gBACA,yBAAKA,UAAU,+CACd,kBAAC,GAAD,CAAwBwI,YAAagmB,SCrB1CE,GAAuC,WAC3C,IAAMxrB,EAAUC,cAChB,OACE,6BAASnD,UAAU,+BACjB,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,mBACd,yBAAKA,UAAU,mEAAmE+H,UAAQ,QACxF,6BACE,yBAAK/H,UAAU,yCACf,yBAAKA,UAAU,qBACb,uBAAG8E,QAAS,kBAAM5B,EAAQf,KAAK,uBAC7B,yBAAKE,IAAI,sBAAsBqG,IAAI,uBAKzC,6BACE,yBAAK1I,UAAU,yBACb,yBAAKA,UAAU,qBACb,uBAAG8E,QAAS,kBAAM5B,EAAQf,KAAK,uBAC7B,yBAAKE,IAAI,sBAAsBqG,IAAI,wBAM7C,yBAAK1I,UAAU,mEAAmE+H,UAAQ,QACxF,6BACE,yBAAK/H,UAAU,yBACb,uBAAG8E,QAAS,kBAAM5B,EAAQf,KAAK,oBAC7B,yBAAKE,IAAI,mBAAmBqG,IAAI,mBAItC,6BACE,yBAAK1I,UAAU,yBACb,yBAAKA,UAAU,qBACb,uBAAG8E,QAAS,kBAAM5B,EAAQf,KAAK,6BAC7B,yBAAKE,IAAI,4BAA4BqG,IAAI,6BAKjD,6BACE,yBAAK1I,UAAU,yBACb,yBAAKA,UAAU,qBACb,uBAAG8E,QAAS,kBAAM5B,EAAQf,KAAK,wBAC7B,yBAAKE,IAAI,sBAAsBqG,IAAI,2BCzC/CimB,GAA6C,WAEjD,IAAM/gC,EAAWqV,cAOjB,OAJAkB,qBAAU,WACRvW,E/DsFsB,uCAAM,WAAOA,GAAP,iBAAAjI,EAAA,6DAC9BiI,EAxEmC,CACnC9B,KAAMpH,GAAQwZ,2BAsEgB,SAGP/Y,EAAQ,0BAHD,QAGxBc,EAHwB,QAKlBC,SAAW3B,EAAekI,IAC9BoB,EAAM5H,EAAST,KACrBoI,GAhEuBpI,EAgEKqI,EAAIrI,MAAQ,GAhEQ,CAClDsG,KAAMpH,GAAQ0Z,qBACd5Y,WAiEEoI,GAxEyBtH,EAuEbL,EACsBK,SAAW,GAxEC,CAChDwF,KAAMpH,GAAQuZ,yBACd3X,aA4D8B,iCA9DJ,IAACA,EAKFd,IAyDK,OAAN,uD+DrFtBoI,E9DqFoB,uCAAM,WAAOA,GAAP,iBAAAjI,EAAA,6DAC5BiI,EAxEiC,CACjC9B,KAAMpH,GAAQ6Z,yBAsEc,SAGLpZ,EAAQ,0BAHH,QAGtBc,EAHsB,QAKhBC,SAAW3B,EAAekI,IAC9BoB,EAAM5H,EAAST,KACrBoI,GAhEqBpI,EAgEKqI,EAAIrI,MAAQ,GAhEQ,CAChDsG,KAAMpH,GAAQ+Z,mBACdjZ,WAiEEoI,GAxEuBtH,EAuEXL,EACoBK,SAAW,GAxEC,CAC9CwF,KAAMpH,GAAQ4Z,uBACdhY,aA4D4B,iCA9DJ,IAACA,EAKFd,IAyDK,OAAN,yD8DpFpB,IAEA,8BACE,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,QCtBAopC,GAAwC,WAC5BzrB,cAEhB,OACE,6BAASnD,UAAU,kDACjB,4BAAQA,UAAU,gBAAe,yBAAKqC,IAAI,uBAAuBqG,IAAI,gBCiBrEmmB,GACJ,kBAAC,IAAD,CAAUpvB,MAAOA,IACf,kBAAC,IAAMqvB,WAAP,KACE,kBAAC,IAAD,CAAQ5rB,QAAS6rB,eACjB,kBAAC7lB,GAAD,MACE,kBAAC,GAAD,MACE,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAO8T,KAAK,IAAIgS,OAAK,GACjB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOhS,KAAK,6BAA6BgS,OAAK,GAC5C,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOhS,KAAK,SAASgS,OAAK,GACxB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOhS,KAAK,+BAA+BgS,OAAK,GAC9C,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOhS,KAAK,+BAA+BgS,OAAK,GAC9C,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOhS,KAAK,kCAAkCgS,OAAK,GACjD,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOhS,KAAK,QAAQgS,OAAK,GACvB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOhS,KAAK,YAAYgS,OAAK,GAC3B,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOhS,KAAK,aAAagS,OAAK,GAC5B,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOhS,KAAK,SAASgS,OAAK,GACxB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOhS,KAAK,gBAAgBgS,OAAK,GAC/B,kBAAC,GAAD,QAGN,kBAAC,GAAD,SAMRltB,IAASuD,OACPwpB,GACAhlC,SAASolC,eAAe,ShBiEpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtuB,MAAK,SAAAuuB,GACJA,EAAaC,gBAEdruB,OAAM,SAAAG,GACL+D,QAAQ/D,MAAMA,EAAM9a,c","file":"static/js/main.03e1de57.chunk.js","sourcesContent":["enum HttpRequest {\r\n  GET = \"GET\",\r\n  POST = \"POST\",\r\n  DELETE = \"DELETE\",\r\n  PATCH = \"PATCH\"\r\n};\r\n\r\n\r\nenum HttpStatusCode {\r\n  OK = 200,\r\n  ACCEPTED = 202,\r\n  PARTIAL_INFO = 203,\r\n  BAD_REQUEST = 400,\r\n  NOT_FOUND = 404\r\n}\r\n\r\nexport { HttpRequest, HttpStatusCode };","const CountryCodes = [\r\n  {\r\n    \"name\": \"Afghanistan\",\r\n    \"Iso\": \"+93\",\r\n    \"countryCode\": \"AF\"\r\n  },\r\n  {\r\n    \"name\": \"Åland Islands\",\r\n    \"Iso\": \"+358\",\r\n    \"countryCode\": \"AX\"\r\n  },\r\n  {\r\n    \"name\": \"Albania\",\r\n    \"Iso\": \"+355\",\r\n    \"countryCode\": \"AL\"\r\n  },\r\n  {\r\n    \"name\": \"Algeria\",\r\n    \"Iso\": \"+213\",\r\n    \"countryCode\": \"DZ\"\r\n  },\r\n  {\r\n    \"name\": \"American Samoa\",\r\n    \"Iso\": \"+1684\",\r\n    \"countryCode\": \"AS\"\r\n  },\r\n  {\r\n    \"name\": \"Andorra\",\r\n    \"Iso\": \"+376\",\r\n    \"countryCode\": \"AD\"\r\n  },\r\n  {\r\n    \"name\": \"Angola\",\r\n    \"Iso\": \"+244\",\r\n    \"countryCode\": \"AO\"\r\n  },\r\n  {\r\n    \"name\": \"Anguilla\",\r\n    \"Iso\": \"+1264\",\r\n    \"countryCode\": \"AI\"\r\n  },\r\n  {\r\n    \"name\": \"Antarctica\",\r\n    \"Iso\": \"+672\",\r\n    \"countryCode\": \"AQ\"\r\n  },\r\n  {\r\n    \"name\": \"Antigua and Barbuda\",\r\n    \"Iso\": \"+1268\",\r\n    \"countryCode\": \"AG\"\r\n  },\r\n  {\r\n    \"name\": \"Argentina\",\r\n    \"Iso\": \"+54\",\r\n    \"countryCode\": \"AR\"\r\n  },\r\n  {\r\n    \"name\": \"Armenia\",\r\n    \"Iso\": \"+374\",\r\n    \"countryCode\": \"AM\"\r\n  },\r\n  {\r\n    \"name\": \"Aruba\",\r\n    \"Iso\": \"+297\",\r\n    \"countryCode\": \"AW\"\r\n  },\r\n  {\r\n    \"name\": \"Australia\",\r\n    \"Iso\": \"+61\",\r\n    \"countryCode\": \"AU\"\r\n  },\r\n  {\r\n    \"name\": \"Austria\",\r\n    \"Iso\": \"+43\",\r\n    \"countryCode\": \"AT\"\r\n  },\r\n  {\r\n    \"name\": \"Azerbaijan\",\r\n    \"Iso\": \"+994\",\r\n    \"countryCode\": \"AZ\"\r\n  },\r\n  {\r\n    \"name\": \"Bahamas\",\r\n    \"Iso\": \"+1242\",\r\n    \"countryCode\": \"BS\"\r\n  },\r\n  {\r\n    \"name\": \"Bahrain\",\r\n    \"Iso\": \"+973\",\r\n    \"countryCode\": \"BH\"\r\n  },\r\n  {\r\n    \"name\": \"Bangladesh\",\r\n    \"Iso\": \"+880\",\r\n    \"countryCode\": \"BD\"\r\n  },\r\n  {\r\n    \"name\": \"Barbados\",\r\n    \"Iso\": \"+1246\",\r\n    \"countryCode\": \"BB\"\r\n  },\r\n  {\r\n    \"name\": \"Belarus\",\r\n    \"Iso\": \"+375\",\r\n    \"countryCode\": \"BY\"\r\n  },\r\n  {\r\n    \"name\": \"Belgium\",\r\n    \"Iso\": \"+32\",\r\n    \"countryCode\": \"BE\"\r\n  },\r\n  {\r\n    \"name\": \"Belize\",\r\n    \"Iso\": \"+501\",\r\n    \"countryCode\": \"BZ\"\r\n  },\r\n  {\r\n    \"name\": \"Benin\",\r\n    \"Iso\": \"+229\",\r\n    \"countryCode\": \"BJ\"\r\n  },\r\n  {\r\n    \"name\": \"Bermuda\",\r\n    \"Iso\": \"+1441\",\r\n    \"countryCode\": \"BM\"\r\n  },\r\n  {\r\n    \"name\": \"Bhutan\",\r\n    \"Iso\": \"+975\",\r\n    \"countryCode\": \"BT\"\r\n  },\r\n  {\r\n    \"name\": \"Bolivia, Plurinational State of bolivia\",\r\n    \"Iso\": \"+591\",\r\n    \"countryCode\": \"BO\"\r\n  },\r\n  {\r\n    \"name\": \"Bosnia and Herzegovina\",\r\n    \"Iso\": \"+387\",\r\n    \"countryCode\": \"BA\"\r\n  },\r\n  {\r\n    \"name\": \"Botswana\",\r\n    \"Iso\": \"+267\",\r\n    \"countryCode\": \"BW\"\r\n  },\r\n  {\r\n    \"name\": \"Bouvet Island\",\r\n    \"Iso\": \"+47\",\r\n    \"countryCode\": \"BV\"\r\n  },\r\n  {\r\n    \"name\": \"Brazil\",\r\n    \"Iso\": \"+55\",\r\n    \"countryCode\": \"BR\"\r\n  },\r\n  {\r\n    \"name\": \"British Indian Ocean Territory\",\r\n    \"Iso\": \"+246\",\r\n    \"countryCode\": \"IO\"\r\n  },\r\n  {\r\n    \"name\": \"Brunei Darussalam\",\r\n    \"Iso\": \"+673\",\r\n    \"countryCode\": \"BN\"\r\n  },\r\n  {\r\n    \"name\": \"Bulgaria\",\r\n    \"Iso\": \"+359\",\r\n    \"countryCode\": \"BG\"\r\n  },\r\n  {\r\n    \"name\": \"Burkina Faso\",\r\n    \"Iso\": \"+226\",\r\n    \"countryCode\": \"BF\"\r\n  },\r\n  {\r\n    \"name\": \"Burundi\",\r\n    \"Iso\": \"+257\",\r\n    \"countryCode\": \"BI\"\r\n  },\r\n  {\r\n    \"name\": \"Cambodia\",\r\n    \"Iso\": \"+855\",\r\n    \"countryCode\": \"KH\"\r\n  },\r\n  {\r\n    \"name\": \"Cameroon\",\r\n    \"Iso\": \"+237\",\r\n    \"countryCode\": \"CM\"\r\n  },\r\n  {\r\n    \"name\": \"Canada\",\r\n    \"Iso\": \"+1\",\r\n    \"countryCode\": \"CA\"\r\n  },\r\n  {\r\n    \"name\": \"Cape Verde\",\r\n    \"Iso\": \"+238\",\r\n    \"countryCode\": \"CV\"\r\n  },\r\n  {\r\n    \"name\": \"Cayman Islands\",\r\n    \"Iso\": \"+ 345\",\r\n    \"countryCode\": \"KY\"\r\n  },\r\n  {\r\n    \"name\": \"Central African Republic\",\r\n    \"Iso\": \"+236\",\r\n    \"countryCode\": \"CF\"\r\n  },\r\n  {\r\n    \"name\": \"Chad\",\r\n    \"Iso\": \"+235\",\r\n    \"countryCode\": \"TD\"\r\n  },\r\n  {\r\n    \"name\": \"Chile\",\r\n    \"Iso\": \"+56\",\r\n    \"countryCode\": \"CL\"\r\n  },\r\n  {\r\n    \"name\": \"China\",\r\n    \"Iso\": \"+86\",\r\n    \"countryCode\": \"CN\"\r\n  },\r\n  {\r\n    \"name\": \"Christmas Island\",\r\n    \"Iso\": \"+61\",\r\n    \"countryCode\": \"CX\"\r\n  },\r\n  {\r\n    \"name\": \"Cocos (Keeling) Islands\",\r\n    \"Iso\": \"+61\",\r\n    \"countryCode\": \"CC\"\r\n  },\r\n  {\r\n    \"name\": \"Colombia\",\r\n    \"Iso\": \"+57\",\r\n    \"countryCode\": \"CO\"\r\n  },\r\n  {\r\n    \"name\": \"Comoros\",\r\n    \"Iso\": \"+269\",\r\n    \"countryCode\": \"KM\"\r\n  },\r\n  {\r\n    \"name\": \"Congo\",\r\n    \"Iso\": \"+242\",\r\n    \"countryCode\": \"CG\"\r\n  },\r\n  {\r\n    \"name\": \"Congo, The Democratic Republic of the Congo\",\r\n    \"Iso\": \"+243\",\r\n    \"countryCode\": \"CD\"\r\n  },\r\n  {\r\n    \"name\": \"Cook Islands\",\r\n    \"Iso\": \"+682\",\r\n    \"countryCode\": \"CK\"\r\n  },\r\n  {\r\n    \"name\": \"Costa Rica\",\r\n    \"Iso\": \"+506\",\r\n    \"countryCode\": \"CR\"\r\n  },\r\n  {\r\n    \"name\": \"Cote d'Ivoire\",\r\n    \"Iso\": \"+225\",\r\n    \"countryCode\": \"CI\"\r\n  },\r\n  {\r\n    \"name\": \"Croatia\",\r\n    \"Iso\": \"+385\",\r\n    \"countryCode\": \"HR\"\r\n  },\r\n  {\r\n    \"name\": \"Cuba\",\r\n    \"Iso\": \"+53\",\r\n    \"countryCode\": \"CU\"\r\n  },\r\n  {\r\n    \"name\": \"Cyprus\",\r\n    \"Iso\": \"+357\",\r\n    \"countryCode\": \"CY\"\r\n  },\r\n  {\r\n    \"name\": \"Czech Republic\",\r\n    \"Iso\": \"+420\",\r\n    \"countryCode\": \"CZ\"\r\n  },\r\n  {\r\n    \"name\": \"Denmark\",\r\n    \"Iso\": \"+45\",\r\n    \"countryCode\": \"DK\"\r\n  },\r\n  {\r\n    \"name\": \"Djibouti\",\r\n    \"Iso\": \"+253\",\r\n    \"countryCode\": \"DJ\"\r\n  },\r\n  {\r\n    \"name\": \"Dominica\",\r\n    \"Iso\": \"+1767\",\r\n    \"countryCode\": \"DM\"\r\n  },\r\n  {\r\n    \"name\": \"Dominican Republic\",\r\n    \"Iso\": \"+1849\",\r\n    \"countryCode\": \"DO\"\r\n  },\r\n  {\r\n    \"name\": \"Ecuador\",\r\n    \"Iso\": \"+593\",\r\n    \"countryCode\": \"EC\"\r\n  },\r\n  {\r\n    \"name\": \"Egypt\",\r\n    \"Iso\": \"+20\",\r\n    \"countryCode\": \"EG\"\r\n  },\r\n  {\r\n    \"name\": \"El Salvador\",\r\n    \"Iso\": \"+503\",\r\n    \"countryCode\": \"SV\"\r\n  },\r\n  {\r\n    \"name\": \"Equatorial Guinea\",\r\n    \"Iso\": \"+240\",\r\n    \"countryCode\": \"GQ\"\r\n  },\r\n  {\r\n    \"name\": \"Eritrea\",\r\n    \"Iso\": \"+291\",\r\n    \"countryCode\": \"ER\"\r\n  },\r\n  {\r\n    \"name\": \"Estonia\",\r\n    \"Iso\": \"+372\",\r\n    \"countryCode\": \"EE\"\r\n  },\r\n  {\r\n    \"name\": \"Ethiopia\",\r\n    \"Iso\": \"+251\",\r\n    \"countryCode\": \"ET\"\r\n  },\r\n  {\r\n    \"name\": \"Falkland Islands (Malvinas)\",\r\n    \"Iso\": \"+500\",\r\n    \"countryCode\": \"FK\"\r\n  },\r\n  {\r\n    \"name\": \"Faroe Islands\",\r\n    \"Iso\": \"+298\",\r\n    \"countryCode\": \"FO\"\r\n  },\r\n  {\r\n    \"name\": \"Fiji\",\r\n    \"Iso\": \"+679\",\r\n    \"countryCode\": \"FJ\"\r\n  },\r\n  {\r\n    \"name\": \"Finland\",\r\n    \"Iso\": \"+358\",\r\n    \"countryCode\": \"FI\"\r\n  },\r\n  {\r\n    \"name\": \"France\",\r\n    \"Iso\": \"+33\",\r\n    \"countryCode\": \"FR\"\r\n  },\r\n  {\r\n    \"name\": \"French Guiana\",\r\n    \"Iso\": \"+594\",\r\n    \"countryCode\": \"GF\"\r\n  },\r\n  {\r\n    \"name\": \"French Polynesia\",\r\n    \"Iso\": \"+689\",\r\n    \"countryCode\": \"PF\"\r\n  },\r\n  {\r\n    \"name\": \"French Southern Territories\",\r\n    \"Iso\": \"+262\",\r\n    \"countryCode\": \"TF\"\r\n  },\r\n  {\r\n    \"name\": \"Gabon\",\r\n    \"Iso\": \"+241\",\r\n    \"countryCode\": \"GA\"\r\n  },\r\n  {\r\n    \"name\": \"Gambia\",\r\n    \"Iso\": \"+220\",\r\n    \"countryCode\": \"GM\"\r\n  },\r\n  {\r\n    \"name\": \"Georgia\",\r\n    \"Iso\": \"+995\",\r\n    \"countryCode\": \"GE\"\r\n  },\r\n  {\r\n    \"name\": \"Germany\",\r\n    \"Iso\": \"+49\",\r\n    \"countryCode\": \"DE\"\r\n  },\r\n  {\r\n    \"name\": \"Ghana\",\r\n    \"Iso\": \"+233\",\r\n    \"countryCode\": \"GH\"\r\n  },\r\n  {\r\n    \"name\": \"Gibraltar\",\r\n    \"Iso\": \"+350\",\r\n    \"countryCode\": \"GI\"\r\n  },\r\n  {\r\n    \"name\": \"Greece\",\r\n    \"Iso\": \"+30\",\r\n    \"countryCode\": \"GR\"\r\n  },\r\n  {\r\n    \"name\": \"Greenland\",\r\n    \"Iso\": \"+299\",\r\n    \"countryCode\": \"GL\"\r\n  },\r\n  {\r\n    \"name\": \"Grenada\",\r\n    \"Iso\": \"+1473\",\r\n    \"countryCode\": \"GD\"\r\n  },\r\n  {\r\n    \"name\": \"Guadeloupe\",\r\n    \"Iso\": \"+590\",\r\n    \"countryCode\": \"GP\"\r\n  },\r\n  {\r\n    \"name\": \"Guam\",\r\n    \"Iso\": \"+1671\",\r\n    \"countryCode\": \"GU\"\r\n  },\r\n  {\r\n    \"name\": \"Guatemala\",\r\n    \"Iso\": \"+502\",\r\n    \"countryCode\": \"GT\"\r\n  },\r\n  {\r\n    \"name\": \"Guernsey\",\r\n    \"Iso\": \"+44\",\r\n    \"countryCode\": \"GG\"\r\n  },\r\n  {\r\n    \"name\": \"Guinea\",\r\n    \"Iso\": \"+224\",\r\n    \"countryCode\": \"GN\"\r\n  },\r\n  {\r\n    \"name\": \"Guinea-Bissau\",\r\n    \"Iso\": \"+245\",\r\n    \"countryCode\": \"GW\"\r\n  },\r\n  {\r\n    \"name\": \"Guyana\",\r\n    \"Iso\": \"+592\",\r\n    \"countryCode\": \"GY\"\r\n  },\r\n  {\r\n    \"name\": \"Haiti\",\r\n    \"Iso\": \"+509\",\r\n    \"countryCode\": \"HT\"\r\n  },\r\n  {\r\n    \"name\": \"Heard Island and Mcdonald Islands\",\r\n    \"Iso\": \"+0\",\r\n    \"countryCode\": \"HM\"\r\n  },\r\n  {\r\n    \"name\": \"Holy See (Vatican City State)\",\r\n    \"Iso\": \"+379\",\r\n    \"countryCode\": \"VA\"\r\n  },\r\n  {\r\n    \"name\": \"Honduras\",\r\n    \"Iso\": \"+504\",\r\n    \"countryCode\": \"HN\"\r\n  },\r\n  {\r\n    \"name\": \"Hong Kong\",\r\n    \"Iso\": \"+852\",\r\n    \"countryCode\": \"HK\"\r\n  },\r\n  {\r\n    \"name\": \"Hungary\",\r\n    \"Iso\": \"+36\",\r\n    \"countryCode\": \"HU\"\r\n  },\r\n  {\r\n    \"name\": \"Iceland\",\r\n    \"Iso\": \"+354\",\r\n    \"countryCode\": \"IS\"\r\n  },\r\n  {\r\n    \"name\": \"India\",\r\n    \"Iso\": \"+91\",\r\n    \"countryCode\": \"IN\",\r\n    \"default\" : true\r\n  },\r\n  {\r\n    \"name\": \"Indonesia\",\r\n    \"Iso\": \"+62\",\r\n    \"countryCode\": \"ID\"\r\n  },\r\n  {\r\n    \"name\": \"Iran, Islamic Republic of Persian Gulf\",\r\n    \"Iso\": \"+98\",\r\n    \"countryCode\": \"IR\"\r\n  },\r\n  {\r\n    \"name\": \"Iraq\",\r\n    \"Iso\": \"+964\",\r\n    \"countryCode\": \"IQ\"\r\n  },\r\n  {\r\n    \"name\": \"Ireland\",\r\n    \"Iso\": \"+353\",\r\n    \"countryCode\": \"IE\"\r\n  },\r\n  {\r\n    \"name\": \"Isle of Man\",\r\n    \"Iso\": \"+44\",\r\n    \"countryCode\": \"IM\"\r\n  },\r\n  {\r\n    \"name\": \"Israel\",\r\n    \"Iso\": \"+972\",\r\n    \"countryCode\": \"IL\"\r\n  },\r\n  {\r\n    \"name\": \"Italy\",\r\n    \"Iso\": \"+39\",\r\n    \"countryCode\": \"IT\"\r\n  },\r\n  {\r\n    \"name\": \"Jamaica\",\r\n    \"Iso\": \"+1876\",\r\n    \"countryCode\": \"JM\"\r\n  },\r\n  {\r\n    \"name\": \"Japan\",\r\n    \"Iso\": \"+81\",\r\n    \"countryCode\": \"JP\"\r\n  },\r\n  {\r\n    \"name\": \"Jersey\",\r\n    \"Iso\": \"+44\",\r\n    \"countryCode\": \"JE\"\r\n  },\r\n  {\r\n    \"name\": \"Jordan\",\r\n    \"Iso\": \"+962\",\r\n    \"countryCode\": \"JO\"\r\n  },\r\n  {\r\n    \"name\": \"Kazakhstan\",\r\n    \"Iso\": \"+7\",\r\n    \"countryCode\": \"KZ\"\r\n  },\r\n  {\r\n    \"name\": \"Kenya\",\r\n    \"Iso\": \"+254\",\r\n    \"countryCode\": \"KE\"\r\n  },\r\n  {\r\n    \"name\": \"Kiribati\",\r\n    \"Iso\": \"+686\",\r\n    \"countryCode\": \"KI\"\r\n  },\r\n  {\r\n    \"name\": \"Korea, Democratic People's Republic of Korea\",\r\n    \"Iso\": \"+850\",\r\n    \"countryCode\": \"KP\"\r\n  },\r\n  {\r\n    \"name\": \"Korea, Republic of South Korea\",\r\n    \"Iso\": \"+82\",\r\n    \"countryCode\": \"KR\"\r\n  },\r\n  {\r\n    \"name\": \"Kosovo\",\r\n    \"Iso\": \"+383\",\r\n    \"countryCode\": \"XK\"\r\n  },\r\n  {\r\n    \"name\": \"Kuwait\",\r\n    \"Iso\": \"+965\",\r\n    \"countryCode\": \"KW\"\r\n  },\r\n  {\r\n    \"name\": \"Kyrgyzstan\",\r\n    \"Iso\": \"+996\",\r\n    \"countryCode\": \"KG\"\r\n  },\r\n  {\r\n    \"name\": \"Laos\",\r\n    \"Iso\": \"+856\",\r\n    \"countryCode\": \"LA\"\r\n  },\r\n  {\r\n    \"name\": \"Latvia\",\r\n    \"Iso\": \"+371\",\r\n    \"countryCode\": \"LV\"\r\n  },\r\n  {\r\n    \"name\": \"Lebanon\",\r\n    \"Iso\": \"+961\",\r\n    \"countryCode\": \"LB\"\r\n  },\r\n  {\r\n    \"name\": \"Lesotho\",\r\n    \"Iso\": \"+266\",\r\n    \"countryCode\": \"LS\"\r\n  },\r\n  {\r\n    \"name\": \"Liberia\",\r\n    \"Iso\": \"+231\",\r\n    \"countryCode\": \"LR\"\r\n  },\r\n  {\r\n    \"name\": \"Libyan Arab Jamahiriya\",\r\n    \"Iso\": \"+218\",\r\n    \"countryCode\": \"LY\"\r\n  },\r\n  {\r\n    \"name\": \"Liechtenstein\",\r\n    \"Iso\": \"+423\",\r\n    \"countryCode\": \"LI\"\r\n  },\r\n  {\r\n    \"name\": \"Lithuania\",\r\n    \"Iso\": \"+370\",\r\n    \"countryCode\": \"LT\"\r\n  },\r\n  {\r\n    \"name\": \"Luxembourg\",\r\n    \"Iso\": \"+352\",\r\n    \"countryCode\": \"LU\"\r\n  },\r\n  {\r\n    \"name\": \"Macao\",\r\n    \"Iso\": \"+853\",\r\n    \"countryCode\": \"MO\"\r\n  },\r\n  {\r\n    \"name\": \"Macedonia\",\r\n    \"Iso\": \"+389\",\r\n    \"countryCode\": \"MK\"\r\n  },\r\n  {\r\n    \"name\": \"Madagascar\",\r\n    \"Iso\": \"+261\",\r\n    \"countryCode\": \"MG\"\r\n  },\r\n  {\r\n    \"name\": \"Malawi\",\r\n    \"Iso\": \"+265\",\r\n    \"countryCode\": \"MW\"\r\n  },\r\n  {\r\n    \"name\": \"Malaysia\",\r\n    \"Iso\": \"+60\",\r\n    \"countryCode\": \"MY\"\r\n  },\r\n  {\r\n    \"name\": \"Maldives\",\r\n    \"Iso\": \"+960\",\r\n    \"countryCode\": \"MV\"\r\n  },\r\n  {\r\n    \"name\": \"Mali\",\r\n    \"Iso\": \"+223\",\r\n    \"countryCode\": \"ML\"\r\n  },\r\n  {\r\n    \"name\": \"Malta\",\r\n    \"Iso\": \"+356\",\r\n    \"countryCode\": \"MT\"\r\n  },\r\n  {\r\n    \"name\": \"Marshall Islands\",\r\n    \"Iso\": \"+692\",\r\n    \"countryCode\": \"MH\"\r\n  },\r\n  {\r\n    \"name\": \"Martinique\",\r\n    \"Iso\": \"+596\",\r\n    \"countryCode\": \"MQ\"\r\n  },\r\n  {\r\n    \"name\": \"Mauritania\",\r\n    \"Iso\": \"+222\",\r\n    \"countryCode\": \"MR\"\r\n  },\r\n  {\r\n    \"name\": \"Mauritius\",\r\n    \"Iso\": \"+230\",\r\n    \"countryCode\": \"MU\"\r\n  },\r\n  {\r\n    \"name\": \"Mayotte\",\r\n    \"Iso\": \"+262\",\r\n    \"countryCode\": \"YT\"\r\n  },\r\n  {\r\n    \"name\": \"Mexico\",\r\n    \"Iso\": \"+52\",\r\n    \"countryCode\": \"MX\"\r\n  },\r\n  {\r\n    \"name\": \"Micronesia, Federated States of Micronesia\",\r\n    \"Iso\": \"+691\",\r\n    \"countryCode\": \"FM\"\r\n  },\r\n  {\r\n    \"name\": \"Moldova\",\r\n    \"Iso\": \"+373\",\r\n    \"countryCode\": \"MD\"\r\n  },\r\n  {\r\n    \"name\": \"Monaco\",\r\n    \"Iso\": \"+377\",\r\n    \"countryCode\": \"MC\"\r\n  },\r\n  {\r\n    \"name\": \"Mongolia\",\r\n    \"Iso\": \"+976\",\r\n    \"countryCode\": \"MN\"\r\n  },\r\n  {\r\n    \"name\": \"Montenegro\",\r\n    \"Iso\": \"+382\",\r\n    \"countryCode\": \"ME\"\r\n  },\r\n  {\r\n    \"name\": \"Montserrat\",\r\n    \"Iso\": \"+1664\",\r\n    \"countryCode\": \"MS\"\r\n  },\r\n  {\r\n    \"name\": \"Morocco\",\r\n    \"Iso\": \"+212\",\r\n    \"countryCode\": \"MA\"\r\n  },\r\n  {\r\n    \"name\": \"Mozambique\",\r\n    \"Iso\": \"+258\",\r\n    \"countryCode\": \"MZ\"\r\n  },\r\n  {\r\n    \"name\": \"Myanmar\",\r\n    \"Iso\": \"+95\",\r\n    \"countryCode\": \"MM\"\r\n  },\r\n  {\r\n    \"name\": \"Namibia\",\r\n    \"Iso\": \"+264\",\r\n    \"countryCode\": \"NA\"\r\n  },\r\n  {\r\n    \"name\": \"Nauru\",\r\n    \"Iso\": \"+674\",\r\n    \"countryCode\": \"NR\"\r\n  },\r\n  {\r\n    \"name\": \"Nepal\",\r\n    \"Iso\": \"+977\",\r\n    \"countryCode\": \"NP\"\r\n  },\r\n  {\r\n    \"name\": \"Netherlands\",\r\n    \"Iso\": \"+31\",\r\n    \"countryCode\": \"NL\"\r\n  },\r\n  {\r\n    \"name\": \"Netherlands Antilles\",\r\n    \"Iso\": \"+599\",\r\n    \"countryCode\": \"AN\"\r\n  },\r\n  {\r\n    \"name\": \"New Caledonia\",\r\n    \"Iso\": \"+687\",\r\n    \"countryCode\": \"NC\"\r\n  },\r\n  {\r\n    \"name\": \"New Zealand\",\r\n    \"Iso\": \"+64\",\r\n    \"countryCode\": \"NZ\"\r\n  },\r\n  {\r\n    \"name\": \"Nicaragua\",\r\n    \"Iso\": \"+505\",\r\n    \"countryCode\": \"NI\"\r\n  },\r\n  {\r\n    \"name\": \"Niger\",\r\n    \"Iso\": \"+227\",\r\n    \"countryCode\": \"NE\"\r\n  },\r\n  {\r\n    \"name\": \"Nigeria\",\r\n    \"Iso\": \"+234\",\r\n    \"countryCode\": \"NG\"\r\n  },\r\n  {\r\n    \"name\": \"Niue\",\r\n    \"Iso\": \"+683\",\r\n    \"countryCode\": \"NU\"\r\n  },\r\n  {\r\n    \"name\": \"Norfolk Island\",\r\n    \"Iso\": \"+672\",\r\n    \"countryCode\": \"NF\"\r\n  },\r\n  {\r\n    \"name\": \"Northern Mariana Islands\",\r\n    \"Iso\": \"+1670\",\r\n    \"countryCode\": \"MP\"\r\n  },\r\n  {\r\n    \"name\": \"Norway\",\r\n    \"Iso\": \"+47\",\r\n    \"countryCode\": \"NO\"\r\n  },\r\n  {\r\n    \"name\": \"Oman\",\r\n    \"Iso\": \"+968\",\r\n    \"countryCode\": \"OM\"\r\n  },\r\n  {\r\n    \"name\": \"Pakistan\",\r\n    \"Iso\": \"+92\",\r\n    \"countryCode\": \"PK\"\r\n  },\r\n  {\r\n    \"name\": \"Palau\",\r\n    \"Iso\": \"+680\",\r\n    \"countryCode\": \"PW\"\r\n  },\r\n  {\r\n    \"name\": \"Palestinian Territory, Occupied\",\r\n    \"Iso\": \"+970\",\r\n    \"countryCode\": \"PS\"\r\n  },\r\n  {\r\n    \"name\": \"Panama\",\r\n    \"Iso\": \"+507\",\r\n    \"countryCode\": \"PA\"\r\n  },\r\n  {\r\n    \"name\": \"Papua New Guinea\",\r\n    \"Iso\": \"+675\",\r\n    \"countryCode\": \"PG\"\r\n  },\r\n  {\r\n    \"name\": \"Paraguay\",\r\n    \"Iso\": \"+595\",\r\n    \"countryCode\": \"PY\"\r\n  },\r\n  {\r\n    \"name\": \"Peru\",\r\n    \"Iso\": \"+51\",\r\n    \"countryCode\": \"PE\"\r\n  },\r\n  {\r\n    \"name\": \"Philippines\",\r\n    \"Iso\": \"+63\",\r\n    \"countryCode\": \"PH\"\r\n  },\r\n  {\r\n    \"name\": \"Pitcairn\",\r\n    \"Iso\": \"+64\",\r\n    \"countryCode\": \"PN\"\r\n  },\r\n  {\r\n    \"name\": \"Poland\",\r\n    \"Iso\": \"+48\",\r\n    \"countryCode\": \"PL\"\r\n  },\r\n  {\r\n    \"name\": \"Portugal\",\r\n    \"Iso\": \"+351\",\r\n    \"countryCode\": \"PT\"\r\n  },\r\n  {\r\n    \"name\": \"Puerto Rico\",\r\n    \"Iso\": \"+1939\",\r\n    \"countryCode\": \"PR\"\r\n  },\r\n  {\r\n    \"name\": \"Qatar\",\r\n    \"Iso\": \"+974\",\r\n    \"countryCode\": \"QA\"\r\n  },\r\n  {\r\n    \"name\": \"Romania\",\r\n    \"Iso\": \"+40\",\r\n    \"countryCode\": \"RO\"\r\n  },\r\n  {\r\n    \"name\": \"Russia\",\r\n    \"Iso\": \"+7\",\r\n    \"countryCode\": \"RU\"\r\n  },\r\n  {\r\n    \"name\": \"Rwanda\",\r\n    \"Iso\": \"+250\",\r\n    \"countryCode\": \"RW\"\r\n  },\r\n  {\r\n    \"name\": \"Reunion\",\r\n    \"Iso\": \"+262\",\r\n    \"countryCode\": \"RE\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Barthelemy\",\r\n    \"Iso\": \"+590\",\r\n    \"countryCode\": \"BL\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Helena, Ascension and Tristan Da Cunha\",\r\n    \"Iso\": \"+290\",\r\n    \"countryCode\": \"SH\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Kitts and Nevis\",\r\n    \"Iso\": \"+1869\",\r\n    \"countryCode\": \"KN\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Lucia\",\r\n    \"Iso\": \"+1758\",\r\n    \"countryCode\": \"LC\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Martin\",\r\n    \"Iso\": \"+590\",\r\n    \"countryCode\": \"MF\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Pierre and Miquelon\",\r\n    \"Iso\": \"+508\",\r\n    \"countryCode\": \"PM\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Vincent and the Grenadines\",\r\n    \"Iso\": \"+1784\",\r\n    \"countryCode\": \"VC\"\r\n  },\r\n  {\r\n    \"name\": \"Samoa\",\r\n    \"Iso\": \"+685\",\r\n    \"countryCode\": \"WS\"\r\n  },\r\n  {\r\n    \"name\": \"San Marino\",\r\n    \"Iso\": \"+378\",\r\n    \"countryCode\": \"SM\"\r\n  },\r\n  {\r\n    \"name\": \"Sao Tome and Principe\",\r\n    \"Iso\": \"+239\",\r\n    \"countryCode\": \"ST\"\r\n  },\r\n  {\r\n    \"name\": \"Saudi Arabia\",\r\n    \"Iso\": \"+966\",\r\n    \"countryCode\": \"SA\"\r\n  },\r\n  {\r\n    \"name\": \"Senegal\",\r\n    \"Iso\": \"+221\",\r\n    \"countryCode\": \"SN\"\r\n  },\r\n  {\r\n    \"name\": \"Serbia\",\r\n    \"Iso\": \"+381\",\r\n    \"countryCode\": \"RS\"\r\n  },\r\n  {\r\n    \"name\": \"Seychelles\",\r\n    \"Iso\": \"+248\",\r\n    \"countryCode\": \"SC\"\r\n  },\r\n  {\r\n    \"name\": \"Sierra Leone\",\r\n    \"Iso\": \"+232\",\r\n    \"countryCode\": \"SL\"\r\n  },\r\n  {\r\n    \"name\": \"Singapore\",\r\n    \"Iso\": \"+65\",\r\n    \"countryCode\": \"SG\"\r\n  },\r\n  {\r\n    \"name\": \"Slovakia\",\r\n    \"Iso\": \"+421\",\r\n    \"countryCode\": \"SK\"\r\n  },\r\n  {\r\n    \"name\": \"Slovenia\",\r\n    \"Iso\": \"+386\",\r\n    \"countryCode\": \"SI\"\r\n  },\r\n  {\r\n    \"name\": \"Solomon Islands\",\r\n    \"Iso\": \"+677\",\r\n    \"countryCode\": \"SB\"\r\n  },\r\n  {\r\n    \"name\": \"Somalia\",\r\n    \"Iso\": \"+252\",\r\n    \"countryCode\": \"SO\"\r\n  },\r\n  {\r\n    \"name\": \"South Africa\",\r\n    \"Iso\": \"+27\",\r\n    \"countryCode\": \"ZA\"\r\n  },\r\n  {\r\n    \"name\": \"South Sudan\",\r\n    \"Iso\": \"+211\",\r\n    \"countryCode\": \"SS\"\r\n  },\r\n  {\r\n    \"name\": \"South Georgia and the South Sandwich Islands\",\r\n    \"Iso\": \"+500\",\r\n    \"countryCode\": \"GS\"\r\n  },\r\n  {\r\n    \"name\": \"Spain\",\r\n    \"Iso\": \"+34\",\r\n    \"countryCode\": \"ES\"\r\n  },\r\n  {\r\n    \"name\": \"Sri Lanka\",\r\n    \"Iso\": \"+94\",\r\n    \"countryCode\": \"LK\"\r\n  },\r\n  {\r\n    \"name\": \"Sudan\",\r\n    \"Iso\": \"+249\",\r\n    \"countryCode\": \"SD\"\r\n  },\r\n  {\r\n    \"name\": \"Suriname\",\r\n    \"Iso\": \"+597\",\r\n    \"countryCode\": \"SR\"\r\n  },\r\n  {\r\n    \"name\": \"Svalbard and Jan Mayen\",\r\n    \"Iso\": \"+47\",\r\n    \"countryCode\": \"SJ\"\r\n  },\r\n  {\r\n    \"name\": \"Swaziland\",\r\n    \"Iso\": \"+268\",\r\n    \"countryCode\": \"SZ\"\r\n  },\r\n  {\r\n    \"name\": \"Sweden\",\r\n    \"Iso\": \"+46\",\r\n    \"countryCode\": \"SE\"\r\n  },\r\n  {\r\n    \"name\": \"Switzerland\",\r\n    \"Iso\": \"+41\",\r\n    \"countryCode\": \"CH\"\r\n  },\r\n  {\r\n    \"name\": \"Syrian Arab Republic\",\r\n    \"Iso\": \"+963\",\r\n    \"countryCode\": \"SY\"\r\n  },\r\n  {\r\n    \"name\": \"Taiwan\",\r\n    \"Iso\": \"+886\",\r\n    \"countryCode\": \"TW\"\r\n  },\r\n  {\r\n    \"name\": \"Tajikistan\",\r\n    \"Iso\": \"+992\",\r\n    \"countryCode\": \"TJ\"\r\n  },\r\n  {\r\n    \"name\": \"Tanzania, United Republic of Tanzania\",\r\n    \"Iso\": \"+255\",\r\n    \"countryCode\": \"TZ\"\r\n  },\r\n  {\r\n    \"name\": \"Thailand\",\r\n    \"Iso\": \"+66\",\r\n    \"countryCode\": \"TH\"\r\n  },\r\n  {\r\n    \"name\": \"Timor-Leste\",\r\n    \"Iso\": \"+670\",\r\n    \"countryCode\": \"TL\"\r\n  },\r\n  {\r\n    \"name\": \"Togo\",\r\n    \"Iso\": \"+228\",\r\n    \"countryCode\": \"TG\"\r\n  },\r\n  {\r\n    \"name\": \"Tokelau\",\r\n    \"Iso\": \"+690\",\r\n    \"countryCode\": \"TK\"\r\n  },\r\n  {\r\n    \"name\": \"Tonga\",\r\n    \"Iso\": \"+676\",\r\n    \"countryCode\": \"TO\"\r\n  },\r\n  {\r\n    \"name\": \"Trinidad and Tobago\",\r\n    \"Iso\": \"+1868\",\r\n    \"countryCode\": \"TT\"\r\n  },\r\n  {\r\n    \"name\": \"Tunisia\",\r\n    \"Iso\": \"+216\",\r\n    \"countryCode\": \"TN\"\r\n  },\r\n  {\r\n    \"name\": \"Turkey\",\r\n    \"Iso\": \"+90\",\r\n    \"countryCode\": \"TR\"\r\n  },\r\n  {\r\n    \"name\": \"Turkmenistan\",\r\n    \"Iso\": \"+993\",\r\n    \"countryCode\": \"TM\"\r\n  },\r\n  {\r\n    \"name\": \"Turks and Caicos Islands\",\r\n    \"Iso\": \"+1649\",\r\n    \"countryCode\": \"TC\"\r\n  },\r\n  {\r\n    \"name\": \"Tuvalu\",\r\n    \"Iso\": \"+688\",\r\n    \"countryCode\": \"TV\"\r\n  },\r\n  {\r\n    \"name\": \"Uganda\",\r\n    \"Iso\": \"+256\",\r\n    \"countryCode\": \"UG\"\r\n  },\r\n  {\r\n    \"name\": \"Ukraine\",\r\n    \"Iso\": \"+380\",\r\n    \"countryCode\": \"UA\"\r\n  },\r\n  {\r\n    \"name\": \"United Arab Emirates\",\r\n    \"Iso\": \"+971\",\r\n    \"countryCode\": \"AE\"\r\n  },\r\n  {\r\n    \"name\": \"United Kingdom\",\r\n    \"Iso\": \"+44\",\r\n    \"countryCode\": \"GB\"\r\n  },\r\n  {\r\n    \"name\": \"United States\",\r\n    \"Iso\": \"+1\",\r\n    \"countryCode\": \"US\"\r\n  },\r\n  {\r\n    \"name\": \"Uruguay\",\r\n    \"Iso\": \"+598\",\r\n    \"countryCode\": \"UY\"\r\n  },\r\n  {\r\n    \"name\": \"Uzbekistan\",\r\n    \"Iso\": \"+998\",\r\n    \"countryCode\": \"UZ\"\r\n  },\r\n  {\r\n    \"name\": \"Vanuatu\",\r\n    \"Iso\": \"+678\",\r\n    \"countryCode\": \"VU\"\r\n  },\r\n  {\r\n    \"name\": \"Venezuela, Bolivarian Republic of Venezuela\",\r\n    \"Iso\": \"+58\",\r\n    \"countryCode\": \"VE\"\r\n  },\r\n  {\r\n    \"name\": \"Vietnam\",\r\n    \"Iso\": \"+84\",\r\n    \"countryCode\": \"VN\"\r\n  },\r\n  {\r\n    \"name\": \"Virgin Islands, British\",\r\n    \"Iso\": \"+1284\",\r\n    \"countryCode\": \"VG\"\r\n  },\r\n  {\r\n    \"name\": \"Virgin Islands, U.S.\",\r\n    \"Iso\": \"+1340\",\r\n    \"countryCode\": \"VI\"\r\n  },\r\n  {\r\n    \"name\": \"Wallis and Futuna\",\r\n    \"Iso\": \"+681\",\r\n    \"countryCode\": \"WF\"\r\n  },\r\n  {\r\n    \"name\": \"Yemen\",\r\n    \"Iso\": \"+967\",\r\n    \"countryCode\": \"YE\"\r\n  },\r\n  {\r\n    \"name\": \"Zambia\",\r\n    \"Iso\": \"+260\",\r\n    \"countryCode\": \"ZM\"\r\n  },\r\n  {\r\n    \"name\": \"Zimbabwe\",\r\n    \"Iso\": \"+263\",\r\n    \"countryCode\": \"ZW\"\r\n  }\r\n]\r\n\r\nexport {\r\n  CountryCodes\r\n}","enum SubProducts {\r\n  ORDERS= 1,\r\n  COLOUR= 2,\r\n  SIZE = 3,\r\n  SUB_PRODUCT = 4,\r\n  PRODUCT = 5,\r\n  COUPONS = 6,\r\n  USERS = 7,\r\n  SHIPPER = 8 \r\n}\r\n\r\nconst SubCategories: Record<string, number> = {\r\n  'Lingerie': 1,\r\n  'Footwear': 2,\r\n  'Bindi': 3,\r\n  'Home Essential': 8,\r\n  'Cosmetics': 9\r\n}\r\n\r\n/**\r\n * Allow return for \r\n * Footwear and Home Essential\r\n */\r\nconst AllowReturn = ['2','8'];\r\n\r\nexport {\r\n  SubProducts,\r\n  SubCategories,\r\n  AllowReturn\r\n}","import { Action, Dispatch } from 'redux';\r\n\r\nimport { User } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n/* Interface */\r\nexport interface UserInformationAction extends Action {\r\n  readonly data?: User;\r\n  readonly allUsers?: User[];\r\n  readonly message?: string;\r\n};\r\n\r\n\r\nexport interface UserInformation {\r\n  readonly data?: User;\r\n  readonly allUsers?: User[];\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n};\r\n\r\n\r\n/* Initial State */\r\nconst initialState  = {\r\n  data: {\r\n    isAdmin: false,\r\n  },\r\n  allUsers :[],\r\n  _isError: false,\r\n  _isLoading: false,\r\n  _isSuccess: false,\r\n  message: ''\r\n} as UserInformation;\r\n\r\n\r\n/* Actions*/\r\n\r\nenum Actions {\r\n  SET_USER = \"SET_USER\",\r\n  LOADING_USER = \"LOADING_USER\",\r\n  ERROR_USER = \"ERROR_USER\",\r\n  SET_ALL_USER = 'SET_ALL_USER',\r\n  UPDATE_USER_DISCOUNT = 'UPDATE_USER_DISCOUNT',\r\n  DEFAULT_USER = 'DEFAULT_USER'\r\n}\r\n\r\nconst setUser = (user: User,message?: string) => ({\r\n  type: Actions.SET_USER,\r\n  data: user,\r\n  message\r\n});\r\n\r\nconst setAllUser = (user: User[]) => ({\r\n  type: Actions.SET_ALL_USER,\r\n  allUsers: user\r\n});\r\n\r\nconst loadingUser = () => ({\r\n  type: Actions.LOADING_USER\r\n});\r\n\r\nconst defaultUser = () => ({\r\n  type: Actions.DEFAULT_USER\r\n});\r\n\r\nconst errorUser = (message: string) => ({\r\n  type: Actions.ERROR_USER,\r\n  message\r\n});\r\n\r\nconst updateDiscount = (emailAddress:string, discount: string, message: string) => ({\r\n  type: Actions.UPDATE_USER_DISCOUNT,\r\n  data: {emailAddress, discount},\r\n  message\r\n});\r\n\r\n\r\n/* Reducer */\r\n\r\nconst userInformationReducer = (state = initialState, action: UserInformationAction): UserInformation => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_USER:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      };\r\n    case Actions.SET_USER:\r\n      return {\r\n        ...state,\r\n        data : action.data,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: true,\r\n        message: action.message\r\n      };\r\n    case Actions.DEFAULT_USER:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      };\r\n    case Actions.SET_ALL_USER:\r\n      return {\r\n        ...state,\r\n        allUsers : action.allUsers,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: true,\r\n        message: action.message\r\n      };\r\n    case Actions.UPDATE_USER_DISCOUNT:\r\n      return {\r\n        ...state,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: true,\r\n        message: action.message,\r\n        allUsers : state.allUsers?.map((user) => {\r\n          if(user.emailAddress?.toLowerCase() === action.data?.emailAddress){\r\n            return {...user, discount:action.data?.discount}\r\n          }\r\n          return user\r\n        }),\r\n      };\r\n    case Actions.ERROR_USER:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        message: action.message\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/* Thunk */\r\n\r\nconst getUser = () =>  async (disptach: Dispatch<UserInformationAction>) => {\r\n  disptach(loadingUser());\r\n  \r\n  const response =  await api.get('/userinfo');\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(setUser(response.data.data as User));\r\n  } else {\r\n    disptach(errorUser('Some error occured, try again.'));\r\n  }\r\n};\r\n\r\nconst saveUser = (data: User) =>  async (disptach: Dispatch<UserInformationAction>) => {\r\n  disptach(loadingUser());\r\n  \r\n  const response =  await api.post('/userinfo', data);\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data.data as User;\r\n    disptach(setUser({\r\n      ...data,\r\n      addressId : res\r\n    } as User, response.data.message));\r\n  } else {\r\n    disptach(errorUser('Some error occured, try again.'));\r\n  }\r\n};\r\n\r\nconst getAllUser = () =>  async (disptach: Dispatch<UserInformationAction>) => {\r\n  disptach(loadingUser());\r\n  \r\n  const response =  await api.get('/alluserinformation');\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(setAllUser(response.data.data as User[]));\r\n  } else {\r\n    disptach(errorUser('Some error occured, try again.'));\r\n  }\r\n};\r\n\r\nconst updateUserDiscount = (discount: string, email: string) =>  async (disptach: Dispatch<UserInformationAction>) => {\r\n  disptach(loadingUser());\r\n  \r\n  const response =  await api.post('/userdiscount', {\r\n    email,\r\n    discount\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(updateDiscount(email,discount, 'Discount Updated'));\r\n  } else {\r\n    disptach(errorUser('Some error occured, try again.'));\r\n  }\r\n};\r\n\r\nexport {\r\n  userInformationReducer,\r\n  getUser,\r\n  saveUser,\r\n  getAllUser,\r\n  setUser,\r\n  updateUserDiscount,\r\n  defaultUser\r\n};\r\n","const apiServerHost = 'https://api.basickart.com/';\r\n\r\nconst serverImagePath = apiServerHost + 'images/'\r\n\r\nexport {\r\n  apiServerHost,\r\n  serverImagePath\r\n}","import axios from 'axios';\r\n\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://basickart.com/v1',\r\n  headers: {\r\n    'Accept': 'application/json;charset=UTF-8',\r\n    'Authorization': ''\r\n  }\r\n});","import{ AxiosRequestConfig } from 'axios';\r\n\r\nimport { HttpRequest } from 'appConstants';\r\nimport axios from './axiosBase';\r\n\r\nconst setAuthToken = (): void => {\r\n  axios.defaults.headers['Authorization'] = 'Bearer ' + window.localStorage.getItem('biktoken');\r\n};\r\n\r\nconst api = {\r\n  get: (url: string) => {\r\n    return makeRequest({\r\n      method: HttpRequest.GET,\r\n      url\r\n    })\r\n  },\r\n\r\n  post: (url: string, data: object) => {\r\n    return makeRequest({\r\n      method: HttpRequest.POST,\r\n      url,\r\n      data\r\n    })\r\n  }\r\n};\r\n\r\nconst makeRequest = async (config: AxiosRequestConfig) => {\r\n  try {\r\n    setAuthToken();\r\n    const response = await axios.request(config);\r\n    return response;\r\n  } catch (error) {\r\n    if(error.response.status === 401 || error.response.status === 422 || error.response.status === 404){\r\n      window.localStorage.removeItem('biktoken')\r\n      window.location.href = '/login';\r\n      return {\r\n        message: error.response.data.message || 'Auth expired',\r\n        data: {}\r\n      }\r\n    }else {\r\n      return {\r\n        message: error.response.data.message || 'Default Api error',\r\n        status: error.response.status || 400,\r\n        data: {}\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport { api, setAuthToken };","import { ProductSubCategory, ActiveProductCount, ProductSubcategoryProperty, ProductItem, OrderItems, ProductCountList, ActiveProductCountNew, ProductColor, ProductSize, ProductCoupon, Order, OrderShipper, User, Invoice } from \"types\";\r\nimport { SubCategory, Size } from \"reducers\";\r\nimport { type } from \"os\";\r\n\r\nconst getSubCategoryFromId = (id: Number) => {\r\n  switch (id) {\r\n    case 1:\r\n      return \"Lingerie\";\r\n    case 2:\r\n      return \"Footwear\";\r\n    case 3:\r\n      return \"Bindi\";\r\n    case 8:\r\n      return \"Home Essential\";\r\n    case 9:\r\n      return \"Cosmetics\";\r\n  }\r\n};\r\n\r\nconst filterSubcategories = (subCategories: SubCategory, categoryId = 0) => {\r\n  return (subCategories.data &&\r\n    subCategories.data.filter((subCategory) => {\r\n      return subCategory.productCategoryId === Number(categoryId)\r\n    })) || [];\r\n};\r\n\r\nconst filterSize = (sizes: Size, categoryId: number[]) => {\r\n  return (sizes.data &&\r\n    sizes.data.filter((size) => {\r\n      return  categoryId.indexOf((size.productCategory || 0)) > -1\r\n    })) || [];\r\n};\r\n\r\nconst calculateUserDiscount = (discount: string, price: string) => {\r\n  return Math.ceil(Number(price) - (Number(price) * (Number(discount) / 100))).toString();\r\n};\r\n\r\nconst calculateUserDiscountPrice = (discount: string, price: string) => {\r\n  return Math.ceil(Number(price) * (Number(discount)) / 100).toString();\r\n};\r\n\r\nconst getCurrencyIcon = (currency: string) => {\r\n  return currency === 'IN' ? '₹' : '$'\r\n};\r\n\r\nconst showINRUSD = (userLocation: string, price : {priceINR: string, priceUSD: string}) => {\r\n  return userLocation === 'IN' ? price.priceINR : price.priceUSD;\r\n}\r\n\r\nconst sizeCheck = (sizeObj : { [key: string]: number},sizeArray: string[])=> {\r\n  let resultSize = {} as { [key: string]: number};\r\n  sizeArray.forEach((size: string)=>{\r\n    if(sizeObj[size]){\r\n      resultSize[size] = sizeObj[size] + 1\r\n    }\r\n  });\r\n  return resultSize;\r\n}\r\n\r\nconst createActiveProductCountList = (activeProducts: ActiveProductCountNew[]) => {\r\n  let resultList = {} as ProductCountList;\r\n  activeProducts.forEach((product: ActiveProductCountNew) => {\r\n    if(!resultList[product.subcategoryId]){\r\n      resultList[product.subcategoryId] = {\r\n        [product.colourId] : {\r\n          name: product.colourName,\r\n          count: 1,\r\n          size : product.sizeId.reduce((a,b)=> (a[b]=1,a),{} as {[key: string]: number})\r\n        },\r\n        name: product.subcategoryName\r\n      }\r\n    } else {\r\n      if(!resultList[product.subcategoryId][product.colourId]){\r\n        resultList[product.subcategoryId][product.colourId] ={\r\n          name: product.colourName,\r\n          count: 1,\r\n          size : product.sizeId.reduce((a,b)=> (a[b]=1,a),{} as {[key: string]: number})\r\n        }\r\n      } else {\r\n        resultList[product.subcategoryId][product.colourId].count += 1;\r\n        resultList[product.subcategoryId][product.colourId].size = \r\n          sizeCheck(resultList[product.subcategoryId][product.colourId].size,product.sizeId)\r\n      }\r\n    }\r\n  });\r\n  return resultList;\r\n}\r\n\r\nconst createProductCountList = (activeProducts: ActiveProductCount[]) => {\r\n  let productCountList = {} as ProductSubcategoryProperty;\r\n  activeProducts.forEach((product: ActiveProductCount) => {\r\n    if(!productCountList[product.subcategoryId]) {\r\n      productCountList[product.subcategoryId] = {\r\n        name: product.subcategoryName,\r\n        [product.colourId] : {\r\n          name: product.colourName,\r\n          [product.sizeId] : {\r\n            name: product.sizeName,\r\n            quantity: product.count\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      if(!productCountList[product.subcategoryId][product.colourId]) {\r\n        productCountList[product.subcategoryId][product.colourId] = {\r\n          name: product.colourName,\r\n          [product.sizeId] : {\r\n            name: product.sizeName,\r\n            quantity: product.count\r\n          }\r\n        }\r\n      } else {\r\n        productCountList[product.subcategoryId][product.colourId][product.sizeId] = {\r\n          name: product.sizeName,\r\n          quantity: product.count\r\n        }\r\n      }\r\n    }\r\n  });\r\n  return productCountList;\r\n};\r\n\r\nconst countHighlightProducts = (products: ProductItem[], isTrending: boolean) => {\r\n  if(isTrending){\r\n    return products.filter(({trending}) => trending).length;\r\n  } else {\r\n    return products.filter(({latest}) => latest).length;\r\n  }\r\n  \r\n};\r\n\r\nconst getIconForAdminOrder = (orderItems: OrderItems[]) => {\r\n  const orderLength = orderItems.length;\r\n  let icon = '';\r\n  for(var i = 0 ; i< orderLength; i++){\r\n    const shipmentDetails = orderItems[i].shipmentDetails;\r\n    if(shipmentDetails){\r\n      if(shipmentDetails.paymentReturned && shipmentDetails.paymentReturned.toLowerCase() === 'yes'){\r\n        icon = 'lifesaver';\r\n        break;\r\n      } else if(shipmentDetails.paymentReturned && shipmentDetails.paymentReturned.toLowerCase() === 'no'){\r\n        icon = 'warning';\r\n        break;\r\n      } else if(shipmentDetails.returnStatus && shipmentDetails.returnStatus.toLowerCase() === 'in progress'){\r\n        icon = 'history';\r\n        break;\r\n      } else if(shipmentDetails.returnStatus && shipmentDetails.returnStatus.toLowerCase() === 'accepted'){\r\n        icon = 'plus-circle';\r\n        break;\r\n      } else if(shipmentDetails.returnStatus && shipmentDetails.returnStatus.toLowerCase() === 'declined'){\r\n        icon = 'minus-circle';\r\n        break;\r\n      } else if(shipmentDetails.shipper){\r\n        icon = 'cart';\r\n        break;\r\n      } else if(shipmentDetails.deliveryDate){\r\n        icon = 'check';\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return icon;\r\n};\r\n\r\nconst getPaypalTransactionId = (payaplResponse: any) =>{\r\n  let transactionId = '';\r\n  if(payaplResponse.paymentData){\r\n    if(payaplResponse.paymentData.purchase_units){\r\n      if(payaplResponse.paymentData.purchase_units[0]){\r\n        if(payaplResponse.paymentData.purchase_units[0].payments){\r\n          if(payaplResponse.paymentData.purchase_units[0].payments.captures){\r\n            if(payaplResponse.paymentData.purchase_units[0].payments.captures[0]){\r\n              if(payaplResponse.paymentData.purchase_units[0].payments.captures[0].id){\r\n                transactionId = payaplResponse.paymentData.purchase_units[0].payments.captures[0].id;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return transactionId;\r\n};\r\n\r\nconst convertArrayOfObjectsToCSV = (array : ProductColor[] | ProductSize[] | ProductCoupon[] | ProductSubCategory[] | Order[] | OrderShipper[] | User[]) => {\r\n  let result: any;\r\n\r\n  const columnDelimiter = ',';\r\n  const lineDelimiter = '\\n';\r\n  let keys = Object.keys(array[0]);\r\n\r\n  result = '';\r\n  result += keys.join(columnDelimiter);\r\n  result += lineDelimiter;\r\n\r\n  array.forEach((item: any) => {\r\n    let ctr = 0;\r\n    keys.forEach(key => {\r\n      if (ctr > 0) result += columnDelimiter;\r\n\r\n      result += item[key];\r\n      \r\n      ctr++;\r\n    });\r\n    result += lineDelimiter;\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nconst downloadCSV = (array: ProductColor[] | ProductSize[] | ProductCoupon[] | ProductSubCategory[] | Order[] | OrderShipper[] | User[]) => {\r\n  const link = document.createElement('a');\r\n  let csv = convertArrayOfObjectsToCSV(array);\r\n  if (csv == null) return;\r\n\r\n  const filename = 'basickartOrders.csv';\r\n\r\n  if (!csv.match(/^data:text\\/csv/i)) {\r\n    csv = `data:text/csv;charset=utf-8,${csv}`;\r\n  }\r\n\r\n  link.setAttribute('href', encodeURI(csv));\r\n  link.setAttribute('download', filename);\r\n  link.click();\r\n  link.remove();\r\n}\r\n\r\nconst returnInvoiceHtml = ({clientName,invoiceDate,clientAddress,invoiceNumber,productName,quantity,totalAmount, rate} : Invoice) => {\r\n  return `\r\n  <!doctype html>\r\n<html>\r\n<head>\r\n<meta charset=\"utf-8\">\r\n<title>Untitled Document</title>\r\n</head>\r\n<body style=\"padding-left: 20px;\">\r\n<table style=\"border:1px solid #999999;\" width=\"600px\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"tb\">\r\n  <tbody>\r\n    <tr>\r\n      <td height=\"35\" colspan=\"4\" align=\"center\" class=\"txt\" style=\"border-bottom:1px solid #ddd; color:#e271a9; font-weight:800; font-family: 'Muli', sans-serif;\">BasicKart</td>\r\n    </tr>\r\n    <tr>\r\n      <td>&nbsp;</td>\r\n      <td colspan=\"2\"><table width=\"600px\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n        <tbody>\r\n          <tr>\r\n            <td height=\"49\" valign=\"bottom\" style=\" font-size:20px; color:#e271a9; font-weight:800; font-family: 'Muli', sans-serif;\">Tax Invoice</td>\r\n            </tr>\r\n          <tr>\r\n            <td style=\" font-size:13px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\" >GSTIN : 07CKLPB3987JIZP</td>\r\n            </tr>\r\n          <!--<tr>\r\n            <td style=\" font-size:13px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">Pan No : AA444111FFFF</td>\r\n            </tr> -->\r\n          <tr>\r\n            <td style=\" font-size:13px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">Office : B - 1/32, GROUND FLOOR, MAIN ROAD, N.E.A. KAROL BAGH,,<br> &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DELHI, NORTH DELHI, DELHI, 110005</td>\r\n            </tr>\r\n          <tr>\r\n            <td style=\" font-size:13px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">Email : support@basickart.com</td>\r\n            </tr>\r\n        </tbody>\r\n      </table></td>\r\n      <td>&nbsp;</td>\r\n    </tr>\r\n    <tr>\r\n      <td height=\"20\" colspan=\"4\">&nbsp;</td>\r\n    </tr>\r\n    <tr>\r\n      <td width=\"30px\">&nbsp;</td>\r\n      <td colspan=\"2\"><table width=\"600px\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"tb1\">\r\n        <tbody>\r\n          <tr>\r\n            <td><table style=\"border:1px solid #999999;\" width=\"600px\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n              <tbody>\r\n                <tr>\r\n                  <td width=\"100px\" height=\"25\"><strong><span style=\" font-size:12px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">Client Name </span></strong></td>\r\n                  <td width=\"280px\"><span style=\" font-size:12px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">${clientName}</span></td>\r\n                  <td width=\"120px\"><strong><span style=\" font-size:12px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">Invoice Date</span></strong></td>\r\n                  <td width=\"120px\"><span style=\" font-size:12px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">${invoiceDate}</span></td>\r\n                </tr>\r\n                <tr>\r\n                  <td height=\"25\"><strong><span style=\" font-size:12px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">Address</span></strong></td>\r\n                  <td><span style=\" font-size:12px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">${clientAddress}</span></td>\r\n                  <td><strong><span style=\" font-size:12px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">Invoice Number</span></strong></td>\r\n                  <td><span style=\" font-size:12px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">${invoiceNumber}</span></td>\r\n                </tr>\r\n                <tr>\r\n                  <!--<td height=\"25\"><strong><span style=\" font-size:12px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">GSTIN</span></strong></td>\r\n                  <td><span style=\" font-size:12px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">0748MJKKLLL***</span></td>-->\r\n                  <td>&nbsp;</td>\r\n                  <td>&nbsp;</td>\r\n                </tr>\r\n              </tbody>\r\n            </table></td>\r\n          </tr>\r\n          <tr>\r\n            <td height=\"55\" style=\"border-top:1px solid #999999;\">&nbsp;</td>\r\n          </tr>\r\n          <tr>\r\n            <td><table style=\"border:1px solid #999999;\" width=\"600px\" border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"tb2\">\r\n              <tbody>\r\n                <tr style=\" font-size:13px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">\r\n                  <td width=\"50px\" height=\"30\" align=\"center\"><strong>S.N</strong></td>\r\n                  <td width=\"350px\" align=\"center\"><strong>Description </strong></td>\r\n                  <td width=\"30px\" align=\"center\"><strong>Qty </strong></td>\r\n                  <td width=\"50px\" align=\"center\"><strong>Rate </strong></td>\r\n                  <td width=\"50px\" align=\"center\"><strong>Amount</strong></td>\r\n                </tr>\r\n                <tr style=\" font-size:13px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">\r\n                  <td height=\"30\" align=\"center\">1.</td>\r\n                  <td align=\"center\">${productName}</td>\r\n                  <td align=\"center\">${quantity}</td>\r\n                  <td align=\"center\">${rate}</td>\r\n                  <td align=\"center\">${totalAmount}</td>\r\n                </tr>\r\n           <!--     <tr style=\" font-size:13px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">\r\n                  <td height=\"30\" align=\"center\">&nbsp;</td>\r\n                  <td align=\"center\">&nbsp;</td>\r\n                  <td align=\"center\">&nbsp;</td>\r\n                  <td align=\"center\"><strong>TOTAL</strong></td>\r\n                  <td align=\"center\">${totalAmount}</td>\r\n                </tr> -->\r\n              </tbody>\r\n            </table></td>\r\n          </tr>\r\n          <tr>\r\n            <td>&nbsp;</td>\r\n          </tr>\r\n          <tr>\r\n            <td><table width=\"600px\" border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"tb2\">\r\n              <tbody>\r\n                <tr style=\" font-size:13px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">\r\n                  <td width=\"55px\" height=\"48\" align=\"center\">&nbsp;</td>\r\n                  <td width=\"369px\" align=\"center\">&nbsp;</td>\r\n                  <td align=\"center\">Final Amount <br>(Tax Included) :</td>\r\n                  <td width=\"52px\" align=\"center\">${totalAmount}</td>\r\n                </tr>\r\n                <!--<tr style=\" font-size:13px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\">\r\n                  <td height=\"31\" align=\"center\">&nbsp;</td>\r\n                  <td align=\"center\">&nbsp;</td>\r\n                  <td align=\"center\"><strong>Grand Total</strong></td>\r\n                  <td align=\"center\">&nbsp;</td>-->\r\n                </tr>\r\n              </tbody>\r\n            </table></td>\r\n          </tr>\r\n          <tr>\r\n            <td>&nbsp;</td>\r\n          </tr>\r\n        </tbody>\r\n      </table></td>\r\n      <td width=\"50px\">&nbsp;</td>\r\n    </tr>\r\n    <tr>\r\n      <td colspan=\"4\">&nbsp;</td>\r\n    </tr>\r\n    <tr>\r\n      <td height=\"32\">&nbsp;</td>\r\n      <td style=\" font-size:13px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\" width=\"300px\" height=\"32\"><strong>Date : ${invoiceDate}</strong></td>\r\n      <td style=\" font-size:13px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\" width=\"300px\" align=\"right\"><strong>For : Online Reciept</strong></td>\r\n      <td height=\"32\">&nbsp;</td>\r\n    </tr>\r\n    <tr>\r\n      <td colspan=\"4\">&nbsp;</td>\r\n    </tr>\r\n    <tr>\r\n      <td height=\"72\">&nbsp;</td>\r\n      <td>&nbsp;</td>\r\n      <td style=\" font-size:13px; color:#000; padding:5px; font-family: 'Muli', sans-serif;\" align=\"right\" valign=\"bottom\"><strong>It is a computer generated invoice and hence does not require any signature note.\r\n</strong></td>\r\n      <td>&nbsp;</td>\r\n    </tr>\r\n    <tr>\r\n      <td colspan=\"4\">&nbsp;</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n</body>\r\n</html>\r\n  `\r\n}\r\n\r\nexport {\r\n  getSubCategoryFromId,\r\n  filterSubcategories,\r\n  filterSize,\r\n  calculateUserDiscount,\r\n  getCurrencyIcon,\r\n  calculateUserDiscountPrice,\r\n  createProductCountList,\r\n  showINRUSD,\r\n  countHighlightProducts,\r\n  getIconForAdminOrder,\r\n  getPaypalTransactionId,\r\n  createActiveProductCountList,\r\n  convertArrayOfObjectsToCSV,\r\n  downloadCSV,\r\n  returnInvoiceHtml\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { Login } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\ninterface UserLoginRegisterAction extends Action {\r\n  data?: string;\r\n}\r\n\r\ninterface UserLoginResponse {\r\n  message: string;\r\n  access_token?: string;\r\n};\r\n\r\nexport interface UserLoginRegister {\r\n  _isLoading: boolean;\r\n  _isError: boolean;\r\n  _isSuccess: boolean;\r\n  message?: string;\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading : false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: ''\r\n} as UserLoginRegister;\r\n\r\nenum Actions {\r\n  LOADING_LOGIN = 'LOADING_LOGIN',\r\n  ERROR_LOGIN = 'ERROR_LOGIN',\r\n  SUCCESS_LOGIN = 'SUCCESS_LOGIN',\r\n  LOADING_REGISTER = 'LOADING_REGISTER',\r\n  ERROR_REGISTER = 'ERROR_REGISTER',\r\n  SUCCESS_REGISTER = 'SUCCESS_REGISTER',\r\n  DEFAULT_STATE = 'DEFAULT_STATE'\r\n};\r\n\r\nconst loadingLogin = () => ({\r\n  type : Actions.LOADING_LOGIN\r\n});\r\n\r\nconst errorLogin = (message: string) => ({\r\n  type : Actions.ERROR_LOGIN,\r\n  data: message\r\n});\r\n\r\nconst successLogin = () => ({\r\n  type : Actions.SUCCESS_LOGIN\r\n});\r\n\r\nconst loadingRegister = () => ({\r\n  type : Actions.LOADING_REGISTER\r\n});\r\n\r\nconst errorRegister = (message: string) => ({\r\n  type : Actions.ERROR_REGISTER,\r\n  data: message\r\n});\r\n\r\nconst successRegister = (message: string) => ({\r\n  type : Actions.SUCCESS_REGISTER,\r\n  data: message\r\n});\r\n\r\nconst defaultLoginRegister = () => ({\r\n  type: Actions.DEFAULT_STATE\r\n})\r\n\r\n\r\nconst userLoginReducer = (state = initialState, action: UserLoginRegisterAction): UserLoginRegister  => {\r\n  \r\n  switch (action.type) {\r\n    case Actions.LOADING_LOGIN:\r\n    case Actions.LOADING_REGISTER:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      };\r\n    case Actions.ERROR_LOGIN:\r\n    case Actions.ERROR_REGISTER:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        message: action.data\r\n      };\r\n    case Actions.SUCCESS_LOGIN:\r\n    case Actions.SUCCESS_REGISTER:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess: true,\r\n        message: action.data\r\n      };\r\n    case Actions.DEFAULT_STATE:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nconst userLogin = (loginData: Login) =>  async (dispatch: Dispatch<Action>) => {\r\n  \r\n  dispatch(loadingLogin());\r\n  const response =  await api.post('/login', loginData);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as UserLoginResponse;\r\n    window.localStorage.setItem('biktoken', res.access_token || '');\r\n    dispatch(successLogin());\r\n  } else{\r\n    const res = response as UserLoginResponse;\r\n    dispatch(errorLogin(res.message));\r\n  }\r\n};\r\n\r\nconst userRegister = (registerationData: Login) => async (dispatch: Dispatch<Action>) => {\r\n  dispatch(loadingRegister());\r\n  const response = await api.post('/registration', registerationData);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as UserLoginResponse;\r\n    dispatch(successRegister(res.message));\r\n  } else{\r\n    const res = response as UserLoginResponse;\r\n    dispatch(errorRegister(res.message));\r\n  }\r\n}\r\n\r\nconst forgetPassword = (loginDetails: Login) => async (dispatch: Dispatch<Action>) => {\r\n  dispatch(loadingRegister());\r\n  const response = await api.post('/forgetpassword', loginDetails);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as UserLoginResponse;\r\n    dispatch(successRegister(res.message));\r\n  } else{\r\n    const res = response as UserLoginResponse;\r\n    dispatch(errorRegister(res.message));\r\n  }\r\n}\r\n\r\n\r\nexport {\r\n  userLogin,\r\n  userLoginReducer,\r\n  loadingLogin,\r\n  loadingRegister,\r\n  errorLogin,\r\n  errorRegister,\r\n  successLogin,\r\n  successRegister,\r\n  defaultLoginRegister,\r\n  userRegister,\r\n  forgetPassword\r\n}","import {Action, Dispatch} from 'redux';\r\n\r\nimport { UserSettings } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n/* Interface*/\r\nexport interface UserSettingsAction extends Action {\r\n  readonly data?: UserSettings;\r\n  readonly message?: string;\r\n}\r\n\r\nexport interface UserSetting {\r\n  readonly data?: UserSettings;\r\n  _isLoading: boolean;\r\n  _isError: boolean;\r\n  _isSuccess: boolean;\r\n  message?: string;\r\n}\r\n\r\nconst initialState = {\r\n  data : {\r\n    emailAddress : '',\r\n  },\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n} as UserSetting\r\n\r\n/* Actions */\r\n\r\nenum Actions {\r\n  SET_USER_SETTINGS = \"SET_USER_SETTINGS\",\r\n  LOADING_USER_SETTINGS = \"LOADING_USER_SETTINGS\",\r\n  ERROR_USER_SETTINGS = \"ERROR_USER_SETTINGS\"\r\n}\r\n\r\nconst setUserSetting = (userSettings: UserSettings, message?: string) => ({\r\n  type: Actions.SET_USER_SETTINGS,\r\n  data: userSettings,\r\n  message\r\n});\r\n\r\nconst loadingUserSettings = () => ({\r\n  type: Actions.LOADING_USER_SETTINGS\r\n});\r\n\r\nconst errorUserSettings = (message?: string) => ({\r\n  type: Actions.ERROR_USER_SETTINGS,\r\n  message\r\n});\r\n\r\nconst userSettingsReducer = (state = initialState, action: UserSettingsAction) => {\r\n  switch(action.type) {\r\n    case Actions.SET_USER_SETTINGS:\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess: true,\r\n        message: action.message\r\n      };\r\n    case Actions.LOADING_USER_SETTINGS:\r\n      return{\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false,\r\n      };\r\n    case Actions.ERROR_USER_SETTINGS:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        message: action.message\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n/* Thunk */\r\n\r\nconst getUserSettings = () => async (disptach: Dispatch<UserSettingsAction>) => {\r\n  disptach(loadingUserSettings());\r\n  \r\n  const response =  await api.get('/passwordchange');\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(setUserSetting(response.data.data as UserSettings));\r\n  } else {\r\n    disptach(errorUserSettings(response.data.message|| ''));\r\n  }\r\n};\r\n\r\n\r\nconst saveUserSettings = (data: UserSettings) => async (disptach: Dispatch<UserSettingsAction>) => {\r\n  disptach(loadingUserSettings());\r\n  \r\n  const response =  await api.post('/passwordchange', data);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(setUserSetting({emailAddress : data.emailAddress, currentPassword: '', newPassword: ''} as UserSettings,response.data.message|| ''));\r\n  } else {\r\n    disptach(errorUserSettings((response as any).message|| ''));\r\n  }\r\n};\r\n\r\nexport {\r\n  userSettingsReducer,\r\n  getUserSettings,\r\n  saveUserSettings\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { ProductColor } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface ColourAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductColor[]\r\n}\r\n\r\nexport interface ColourResponse {\r\n  message?: string\r\n  data?: ProductColor[]\r\n}\r\n\r\nexport interface Colour {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductColor[];\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n  data: {}\r\n} as Colour;\r\n\r\nenum Actions {\r\n  LOADING_COLOUR = 'LOADING_COLOUR',\r\n  ERROR_COLOUR = 'ERROR_COLOUR',\r\n  SUCCESS_COLOUR = 'SUCCESS_COLOUR',\r\n  DEFAULT_COLOUR = 'DEFAULT_COLOUR',\r\n  SET_COLOUR = 'SET_COLOUR',\r\n  UPDATE_COLOUR_SUCCESS = 'UPDATE_COLOUR_SUCCESS'\r\n};\r\n\r\nconst loadingColour = () => ({\r\n  type: Actions.LOADING_COLOUR\r\n});\r\n\r\nconst successColour = (message: string) => ({\r\n  type: Actions.SUCCESS_COLOUR,\r\n  message\r\n});\r\n\r\nconst errorColour = (message: string) => ({\r\n  type: Actions.ERROR_COLOUR,\r\n  message\r\n});\r\n\r\nconst defaultColour = () => ({\r\n  type: Actions.DEFAULT_COLOUR\r\n});\r\n\r\nconst setColour = (data: ProductColor[]) => ({\r\n  type: Actions.SET_COLOUR,\r\n  data\r\n});\r\n\r\nconst updateColourSuccess = (data: ProductColor[], message: string) => ({\r\n  type: Actions.UPDATE_COLOUR_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst colourReducer = (state = initialState, action: ColourAction): Colour => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_COLOUR:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_COLOUR:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_COLOUR:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_COLOUR:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_COLOUR_SUCCESS:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.colourId != updatedValue[0].colourId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue\r\n        ]\r\n      }\r\n    case Actions.DEFAULT_COLOUR:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst saveColour = (colour: ProductColor) => async (dispatch: Dispatch<ColourAction>) => {\r\n  dispatch(loadingColour());\r\n  const response = await api.post('/productcolour',\r\n    {\r\n      product_color_code: colour.code,\r\n      product_color: colour.value,\r\n      colour_id: 0\r\n    });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ColourResponse\r\n    dispatch(successColour(res.message || ''));\r\n  } else {\r\n    const res = response as ColourResponse\r\n    dispatch(errorColour(res.message || ''));\r\n  }\r\n}\r\n\r\nconst getColour = () => async (dispatch: Dispatch<ColourAction>) => {\r\n  dispatch(loadingColour());\r\n\r\n  const response = await api.get('/productcolour');\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as ColourResponse;\r\n    dispatch(setColour(res.data || []));\r\n  } else {\r\n    const res = response as ColourResponse;\r\n    dispatch(errorColour(res.message || ''))\r\n  }\r\n}\r\n\r\nconst updateColour = (colour: ProductColor) => async (dispatch: Dispatch<ColourAction>) => {\r\n  dispatch(loadingColour());\r\n\r\n  const response = await api.post('/productcolour', {\r\n    product_color_code: colour.code,\r\n    product_color: colour.value,\r\n    colour_id: colour.colourId\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ColourResponse\r\n    dispatch(updateColourSuccess([colour], res.message || ''));\r\n  } else {\r\n    const res = response as ColourResponse\r\n    dispatch(errorColour(res.message || ''));\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  colourReducer,\r\n  saveColour,\r\n  defaultColour,\r\n  getColour,\r\n  updateColour\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { ProductSize } from 'types';\r\nimport { api, getSubCategoryFromId } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface SizeAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductSize[];\r\n}\r\n\r\ninterface SizeResponse {\r\n   message?: string;\r\n   data?: ProductSize[];\r\n}\r\n\r\nexport interface Size {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductSize[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_SIZE= 'LOADING_SIZE',\r\n  SUCCESS_SIZE= 'SUCCESS_SIZE',\r\n  ERROR_SIZE= 'ERROR_SIZE',\r\n  SET_SIZE= 'SET_SIZE',\r\n  UPDATE_SIZE= 'UPDATE_SIZE',\r\n}\r\n\r\nconst loadingSize= () => ({\r\n  type: Actions.LOADING_SIZE\r\n});\r\n\r\nconst successSize= (message: string) => ({\r\n  type: Actions.SUCCESS_SIZE,\r\n  message\r\n});\r\n\r\nconst errorSize= (message: string) => ({\r\n  type: Actions.SUCCESS_SIZE,\r\n  message\r\n});\r\n\r\nconst setSize= (data: ProductSize[]) => ({\r\n  type: Actions.SET_SIZE,\r\n  data\r\n});\r\n\r\nconst updateSize= (data: ProductSize[], message: string) => ({\r\n  type: Actions.UPDATE_SIZE,\r\n  data,\r\n  message\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as Size\r\n\r\n\r\nconst sizeReducer = (state= initialState, action: SizeAction): Size => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_SIZE:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_SIZE:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_SIZE:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_SIZE:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_SIZE:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.sizeId != updatedValue[0].sizeId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue,\r\n        ]\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/**Thunk */\r\n\r\nconst addUpdateSize = (size: ProductSize) => async (dispatch: Dispatch<SizeAction>) => {\r\n  dispatch(loadingSize());\r\n\r\n  const response = await api.post('/productsize',\r\n    {\r\n      product_size:size.value,\r\n      product_size_code: size.code,\r\n      product_category: Number(size.productCategory),\r\n      size_id: size.sizeId\r\n    });\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as SizeResponse;\r\n    if(size.sizeId != '0'){\r\n      const productCategoryIndex  = size.productCategory ? size.productCategory : 1;\r\n      dispatch(updateSize([{...size, productCategoryName: getSubCategoryFromId(Number(productCategoryIndex))}], res.message || ''));\r\n    } else{\r\n      dispatch(successSize(res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as SizeResponse;\r\n    dispatch(errorSize(res.message || ''));\r\n  }\r\n}\r\n\r\nconst getSize= () => async (dispatch: Dispatch<SizeAction>) => {\r\n  dispatch(loadingSize());\r\n\r\n  const response = await api.get('/productsize');\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as SizeResponse;\r\n    dispatch(setSize(res.data || []))\r\n  } else {\r\n    const res = response as SizeResponse;\r\n    dispatch(errorSize(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  addUpdateSize,\r\n  sizeReducer,\r\n  getSize\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { ProductSubCategory } from 'types';\r\nimport { api, getSubCategoryFromId } from 'services';\r\nimport { HttpStatusCode, SubCategories } from 'appConstants';\r\n\r\nexport interface SubCategoryAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductSubCategory[];\r\n}\r\n\r\ninterface SubCategoryResponse {\r\n  message?: string;\r\n  data?: ProductSubCategory[];\r\n}\r\n\r\nexport interface SubCategory {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductSubCategory[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_SUBCATEGORY= 'LOADING_SUBCATEGORY',\r\n  SUCCESS_SUBCATEGORY= 'SUCCESS_SUBCATEGORY',\r\n  ERROR_SUBCATEGORY= 'ERROR_SUBCATEGORY',\r\n  SET_SUBCATEGORY= 'SET_SUBCATEGORY',\r\n  UPDATE_SUBCATEGORY= 'UPDATE_SUBCATEGORY',\r\n}\r\n\r\nconst loadingSubCategory= () => ({\r\n  type: Actions.LOADING_SUBCATEGORY\r\n});\r\n\r\nconst successSubCategory= (message: string) => ({\r\n  type: Actions.SUCCESS_SUBCATEGORY,\r\n  message\r\n});\r\n\r\nconst errorSubCategory= (message: string) => ({\r\n  type: Actions.ERROR_SUBCATEGORY,\r\n  message\r\n});\r\n\r\nconst setSubCategory= (data: ProductSubCategory[]) => ({\r\n  type: Actions.SET_SUBCATEGORY,\r\n  data\r\n});\r\n\r\nconst updateSubCategory= (data: ProductSubCategory[], message: string) => ({\r\n  type: Actions.UPDATE_SUBCATEGORY,\r\n  data,\r\n  message\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as SubCategory\r\n\r\nconst subCategoryReducer = (state= initialState, action: SubCategoryAction): SubCategory => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_SUBCATEGORY:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_SUBCATEGORY:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_SUBCATEGORY:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_SUBCATEGORY:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_SUBCATEGORY:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.subCategoryId != updatedValue[0].subCategoryId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue,\r\n        ]\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/* Thunk */\r\n\r\nconst addUpdateSubCategory = (subCategory: ProductSubCategory) => async (dispatch: Dispatch<SubCategoryAction>) => {\r\n  dispatch(loadingSubCategory());\r\n\r\n  const response = await api.post('/productsubcategory',\r\n    {\r\n      product_name:subCategory.code,\r\n      product_desc: subCategory.value,\r\n      product_category_id: Number(subCategory.productCategoryId),\r\n      subcategory_id: subCategory.subCategoryId?.toString()\r\n    });\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as SubCategoryResponse;\r\n    if(subCategory.subCategoryId != '0'){\r\n      const productCategoryIndex  = subCategory.productCategoryId ? subCategory.productCategoryId : 1;\r\n      dispatch(updateSubCategory([{...subCategory, productCategoryName: getSubCategoryFromId(Number(productCategoryIndex))}], res.message || ''));\r\n    } else{\r\n      dispatch(successSubCategory(res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as SubCategoryResponse;\r\n    dispatch(errorSubCategory(res.message || ''));\r\n  }\r\n}\r\n\r\n\r\nconst getSubCategory= () => async (dispatch: Dispatch<SubCategoryAction>) => {\r\n  dispatch(loadingSubCategory());\r\n\r\n  const response = await api.get('/productsubcategory');\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as SubCategoryResponse;\r\n    dispatch(setSubCategory(res.data || []))\r\n  } else {\r\n    const res = response as SubCategoryResponse;\r\n    dispatch(errorSubCategory(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  subCategoryReducer,\r\n  getSubCategory,\r\n  addUpdateSubCategory\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { ProductCoupon } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface CouponAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductCoupon[]\r\n}\r\n\r\nexport interface CouponResponse {\r\n  message?: string\r\n  data?: ProductCoupon[]\r\n}\r\n\r\nexport interface Coupon {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductCoupon[];\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n  data: {}\r\n} as Coupon\r\n\r\nenum Actions {\r\n  LOADING_COUPON = 'LOADING_COUPON',\r\n  ERROR_COUPON = 'ERROR_COUPON',\r\n  SUCCESS_COUPON = 'SUCCESS_COUPON',\r\n  DEFAULT_COUPON = 'DEFAULT_COUPON',\r\n  SET_COUPON = 'SET_COUPON',\r\n  UPDATE_COUPON_SUCCESS = 'UPDATE_COUPON_SUCCESS',\r\n  DELETE_COUPON_SUCCESS = 'DELETE_COUPON_SUCCESS'\r\n}\r\n\r\nconst loadingCoupon = () => ({\r\n  type: Actions.LOADING_COUPON\r\n});\r\n\r\nconst successCoupon = (message: string) => ({\r\n  type: Actions.SUCCESS_COUPON,\r\n  message\r\n});\r\n\r\nconst errorCoupon = (message: string) => ({\r\n  type: Actions.ERROR_COUPON,\r\n  message\r\n});\r\n\r\nconst defaultCoupon = () => ({\r\n  type: Actions.DEFAULT_COUPON\r\n});\r\n\r\nconst setCoupon = (data: ProductCoupon[], message?: string) => ({\r\n  type: Actions.SET_COUPON,\r\n  data,\r\n  message\r\n});\r\n\r\nconst updateCouponSuccess = (data: ProductCoupon[], message: string) => ({\r\n  type: Actions.UPDATE_COUPON_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst deleteCouponSuccess = (data: ProductCoupon[], message: string) => ({\r\n  type: Actions.DELETE_COUPON_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst couponReducer = (state = initialState, action: CouponAction): Coupon => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_COUPON:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_COUPON:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_COUPON:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        message: action.message,\r\n        data: []\r\n      }\r\n    case Actions.SET_COUPON:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_COUPON_SUCCESS:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.couponId != updatedValue[0].couponId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue\r\n        ]\r\n      }\r\n    case Actions.DELETE_COUPON_SUCCESS:\r\n      const orgState = state.data || [];\r\n      const updValue = action.data || [];\r\n      const updState = orgState.filter(d => {\r\n        return d.couponId != updValue[0].couponId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updState\r\n        ]\r\n      }\r\n    case Actions.DEFAULT_COUPON:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst saveCoupon = (coupon: ProductCoupon) => async (dispatch: Dispatch<CouponAction>) => {\r\n  dispatch(loadingCoupon());\r\n  const response = await api.post('/productcoupon',\r\n    {\r\n      coupon_code: coupon.code,\r\n      coupon_value: coupon.value,\r\n      coupon_id: 0,\r\n      isDelete: false\r\n    });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CouponResponse\r\n    dispatch(successCoupon(res.message || ''));\r\n  } else {\r\n    const res = response as CouponResponse\r\n    dispatch(errorCoupon(res.message || ''));\r\n  }\r\n};\r\n\r\nconst getCoupon = () => async (dispatch: Dispatch<CouponAction>) => {\r\n  dispatch(loadingCoupon());\r\n\r\n  const response = await api.get('/productcoupon');\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as CouponResponse;\r\n    dispatch(setCoupon(res.data || []));\r\n  } else {\r\n    const res = response as CouponResponse;\r\n    dispatch(errorCoupon(res.message || ''))\r\n  }\r\n};\r\n\r\nconst updateCoupon = (coupon: ProductCoupon, isDelete= false) => async (dispatch: Dispatch<CouponAction>) => {\r\n  dispatch(loadingCoupon());\r\n\r\n  const response = await api.post('/productcoupon', {\r\n    coupon_code: coupon.code,\r\n    coupon_value: coupon.value,\r\n    coupon_id: coupon.couponId,\r\n    isDelete\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CouponResponse;\r\n    if(isDelete){\r\n      dispatch(deleteCouponSuccess([coupon], res.message || ''))\r\n    }else {\r\n      dispatch(updateCouponSuccess([coupon], res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as CouponResponse\r\n    dispatch(errorCoupon(res.message || ''));\r\n  }\r\n\r\n};\r\n\r\nconst validateCoupon = (coupon: string) => async(dispatch: Dispatch<CouponAction>) => {\r\n  dispatch(loadingCoupon());\r\n  const response = await api.get('/validatecoupon?couponCode='+coupon);\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data;\r\n    if(res.data){\r\n      dispatch(setCoupon([res.data], res.message || ''));\r\n    } else {\r\n      dispatch(errorCoupon(res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as CouponResponse\r\n    dispatch(errorCoupon(res.message || ''));\r\n  }\r\n};\r\n\r\nexport {\r\n  couponReducer,\r\n  saveCoupon,\r\n  defaultCoupon,\r\n  getCoupon,\r\n  updateCoupon,\r\n  validateCoupon\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { ProductItem, sizeColourQuantityComboObject } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode, pageSize } from 'appConstants';\r\nimport { boolean } from 'yup';\r\nimport { getUserLocation } from './UserLocation';\r\n\r\nexport interface ProductAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n  _hasMoreProducts?: boolean;\r\n  readonly singleData?: ProductItem;\r\n}\r\n\r\ninterface ProductResponse {\r\n  message?: string;\r\n  data?: ProductItem[];\r\n  readonly singleData?: ProductItem;\r\n}\r\n\r\nexport interface Product {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _hasMoreProducts?: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n  readonly singleData?: ProductItem;\r\n}\r\n\r\nenum Actions {\r\n  LOADING_PRODUCT = 'LOADING_PRODUCT',\r\n  SUCCESS_PRODUCT = 'SUCCESS_PRODUCT',\r\n  ERROR_PRODUCT = 'ERROR_PRODUCT',\r\n  SET_PRODUCT = 'SET_PRODUCT',\r\n  SET_CUSTOMER_PRODUCT = 'SET_CUSTOMER_PRODUCT',\r\n  UPDATE_PRODUCT = 'UPDATE_PRODUCT',\r\n  SET_SINGLE_PRODUCT = 'SET_SINGLE_PRODUCT',\r\n  SET_DEFAULT_PRODUCT = 'SET_DEFAULT_PRODUCT',\r\n  DELETE_PRODUCT_SUCCESS = 'DELETE_PRODUCT_SUCCESS',\r\n  SET_PRODUCT_HIGHLIGHT = 'SET_PRODUCT_HIGHLIGHT'\r\n}\r\n\r\nconst loadingProduct = () => ({\r\n  type: Actions.LOADING_PRODUCT\r\n});\r\n\r\nconst successProduct = (message: string) => ({\r\n  type: Actions.SUCCESS_PRODUCT,\r\n  message\r\n});\r\n\r\nconst errorProduct = (message: string) => ({\r\n  type: Actions.ERROR_PRODUCT,\r\n  message\r\n});\r\n\r\nconst setProducts = (data: ProductItem[], _hasMoreProducts: boolean) => ({\r\n  type: Actions.SET_PRODUCT,\r\n  data,\r\n  _hasMoreProducts\r\n});\r\n\r\nconst setSingleProducts = (singleData: ProductItem) => ({\r\n  type: Actions.SET_SINGLE_PRODUCT,\r\n  singleData\r\n});\r\n\r\nconst setDefaulState = () => ({\r\n  type: Actions.SET_DEFAULT_PRODUCT\r\n});\r\n\r\nconst deleteProductSuccess = (data: ProductItem[], message: string) => ({\r\n  type: Actions.DELETE_PRODUCT_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst setCustomerProducts = (data: ProductItem[], _hasMoreProducts: boolean) => ({\r\n  type: Actions.SET_CUSTOMER_PRODUCT,\r\n  data,\r\n  _hasMoreProducts\r\n});\r\n\r\nconst setProductHighlight = (trending: boolean, latest: boolean, productId: string, message: string)  => ({\r\n  type: Actions.SET_PRODUCT_HIGHLIGHT,\r\n  message,\r\n  singleData: {\r\n    trending,\r\n    latest,\r\n    productId\r\n  } as ProductItem\r\n})\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _hasMoreProducts: true,\r\n  message: '',\r\n  data: [],\r\n  singleData: {} as ProductItem\r\n} as Product\r\n\r\nconst productReducer = (state = initialState, action: ProductAction): Product => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.SUCCESS_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        data: action.data,\r\n        _hasMoreProducts: action._hasMoreProducts,\r\n      }\r\n    case Actions.SET_CUSTOMER_PRODUCT:\r\n        return {\r\n          ...state,\r\n          _isSuccess: false,\r\n          _isError: false,\r\n          _isLoading: false,\r\n          data: state.data?.concat(action.data || []),\r\n          _hasMoreProducts: action._hasMoreProducts\r\n        }\r\n    case Actions.SET_SINGLE_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        singleData: action.singleData\r\n      }\r\n    case Actions.DELETE_PRODUCT_SUCCESS:\r\n      const orgState = state.data || [];\r\n      const updValue = action.data || [];\r\n      const updState = orgState.filter(d => {\r\n        return d.productId != updValue[0].productId\r\n      });\r\n      return {\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        data: [\r\n          ...updState\r\n        ]\r\n      }\r\n    case Actions.SET_PRODUCT_HIGHLIGHT:\r\n      return {\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: state.data?.map((product) => {\r\n          if(product.productId.toString() === action.singleData?.productId.toString()){\r\n            return {...product, trending: action.singleData.trending, latest: action.singleData.latest}\r\n          }\r\n          return product\r\n        })\r\n      }\r\n    case Actions.SET_DEFAULT_PRODUCT:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/*Thunk */\r\n\r\nconst addUpdateProduct = (product: ProductItem, isDelete = 0, sizeColourQuantity: sizeColourQuantityComboObject[]) => async (dispatch: Dispatch<ProductAction>) => {\r\n  dispatch(loadingProduct());\r\n  var formData = new FormData();\r\n  if (product.productImageBlob) {\r\n    Array.from(product.productImageBlob).forEach((element, index) => {\r\n      formData.append(`product_image_${index}`, element);\r\n    });\r\n  }\r\n  formData.append('product_INR_price', product.priceINR);\r\n  formData.append('product_USD_price', product.priceUSD);\r\n  formData.append('product_size_code', product.size || '0');\r\n  formData.append('product_color_code', product.colour || '0');\r\n  formData.append('product_Qty', product.quantity || '0');\r\n  formData.append('product_name', product.name);\r\n  formData.append('product_desc', product.description || '');\r\n  formData.append('product_subcategory_id', (product.subCategory || '').toString());\r\n  formData.append('prod_id', product.productId);\r\n  formData.append('is_product_delete', isDelete.toString());\r\n  formData.append('deleted_image_paths', JSON.stringify(product.deletedImagePath));\r\n  formData.append('size_colour_quantity_combo',  JSON.stringify(sizeColourQuantity));\r\n  formData.append('deleted_product_detailIds',  JSON.stringify(product.deletedProductDetailIds));\r\n  const response = await api.post('/productinfo', formData);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ProductResponse;\r\n    if (product.productId != '0') {\r\n      if (isDelete) {\r\n        dispatch(deleteProductSuccess([product], res.message || ''))\r\n      } else {\r\n        dispatch(successProduct(res.message || ''));\r\n      }\r\n    } else {\r\n      dispatch(successProduct(res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as ProductResponse;\r\n    dispatch(errorProduct(res.message || ''));\r\n  }\r\n\r\n};\r\n\r\nconst getProducts = () => async (dispatch: Dispatch<ProductAction>) => {\r\n  dispatch(loadingProduct());\r\n  const response = await api.get('/productinfo');\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ProductResponse;\r\n    dispatch(setProducts(res.data || [], true))\r\n  } else {\r\n    const res = response as ProductResponse;\r\n    dispatch(errorProduct(res.message || ''));\r\n  }\r\n};\r\n\r\nconst getProduct = (productId: number) => async (dispatch: Dispatch<ProductAction>) => {\r\n  dispatch(loadingProduct());\r\n  const response = await api.get('/productinfo?productId=' + productId);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ProductResponse;\r\n    dispatch(setSingleProducts(res.singleData || {} as ProductItem))\r\n  } else {\r\n    const res = response as ProductResponse;\r\n    dispatch(errorProduct(res.message || ''));\r\n  }\r\n};\r\n\r\nconst getCustomerProducts = (\r\n  offset: number,\r\n  limit: number,\r\n  categoryId: number[],\r\n  subCategoryId: number[],\r\n  colourId: number[],\r\n  sizeId: number[],\r\n  startPrice: string,\r\n  endPrice: string,\r\n  currency: string,\r\n  searchText: string,\r\n  freshData = false) => async (dispatch: Dispatch<ProductAction>) => {\r\n    dispatch(loadingProduct());\r\n\r\n    const response = await api.get(\r\n      `/productlistcustomer?offset=${offset}&limit=${limit}&categorydId=${categoryId}&colourId=${colourId}&sizeId=${sizeId}&subCategoryId=${subCategoryId}&startPrice=${startPrice}&endPrice=${endPrice}&currency=${currency}&searchText=${searchText}`);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n      const res = response.data as ProductResponse;\r\n      const _hasMoreProducts = res.data && res.data.length === pageSize || false;\r\n      if(freshData){\r\n        dispatch(setProducts(res.data || [], _hasMoreProducts))\r\n      }else {\r\n        dispatch(setCustomerProducts(res.data || [], _hasMoreProducts))\r\n      }\r\n      \r\n    } else {\r\n      const res = response as ProductResponse;\r\n      dispatch(errorProduct(res.message || ''));\r\n    }\r\n  }\r\n\r\n  const updateProductHighLight = (highlight: string, productId: string) => async(dispatch: Dispatch<ProductAction>) => {\r\n    dispatch(loadingProduct());\r\n    const latest =  highlight === '2';\r\n    const trending = highlight === '1';\r\n    const response = await api.post('/producthighlight',{\r\n      latest,\r\n      trending,\r\n      productId\r\n    });\r\n\r\n    if(response.status === HttpStatusCode.OK){\r\n      const res = response.data as ProductResponse;\r\n      dispatch(setProductHighlight(trending,latest, productId, res.message || ''))\r\n    } else {\r\n      const res = response as ProductResponse;\r\n      dispatch(errorProduct(res.message || ''));\r\n    }\r\n  }\r\n\r\nexport {\r\n  addUpdateProduct,\r\n  productReducer,\r\n  getProducts,\r\n  getProduct,\r\n  setDefaulState,\r\n  getCustomerProducts,\r\n  updateProductHighLight,\r\n  errorProduct\r\n}\r\n","import { Dispatch, Action } from 'redux';\r\nimport { ActiveProductCount, ActiveProductCountNew, ProductCountList } from 'types';\r\nimport { api, createActiveProductCountList, createProductCountList } from 'services';\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface ProductCountAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductCountList;\r\n};\r\n\r\nexport interface ProductCountResponse {\r\n  readonly message?: string;\r\n  readonly data?: ActiveProductCountNew[];\r\n};\r\n\r\nexport interface ProductCount {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductCountList;\r\n};\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n  data: {}\r\n} as ProductCount;\r\n\r\nenum Actions {\r\n  LOADING_PRODUCT_COUNT= 'LOADING_PRODUCT_COUNT',\r\n  ERROR_PRODUCT_COUNT= 'ERROR_PRODUCT_COUNT',\r\n  SET_PRODUCT_COUNT= 'SET_PRODUCT_COUNT',\r\n};\r\n\r\nconst loadingProductCount = () => ({\r\n  type: Actions.LOADING_PRODUCT_COUNT\r\n});\r\n\r\nconst errorProductCount = (message: string) => ({\r\n  type: Actions.ERROR_PRODUCT_COUNT,\r\n  message\r\n});\r\n\r\nconst setProductCount = (data: ProductCountList) => ({\r\n  type: Actions.SET_PRODUCT_COUNT,\r\n  data\r\n});\r\n\r\nconst productCountReducer = (state= initialState, action: ProductCountAction): ProductCount => {\r\n  switch(action.type) {\r\n    case Actions.LOADING_PRODUCT_COUNT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        message: ''\r\n      }\r\n    case Actions.ERROR_PRODUCT_COUNT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_PRODUCT_COUNT:\r\n      return {\r\n        ...state,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: true,\r\n        message: action.message,\r\n        data : action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n/** Thunk */\r\n\r\nconst getActiveProductCount = () => async(dispatch: Dispatch<ProductCountAction>) => {\r\n  dispatch(loadingProductCount());\r\n\r\n  const response = await api.get('/productcount');\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as ProductCountResponse;\r\n    dispatch(setProductCount(createActiveProductCountList(res.data||[])));\r\n  } else {\r\n    const res = response as ProductCountResponse;\r\n    dispatch(errorProductCount(res.message || ''))\r\n  }\r\n};\r\n\r\nexport {\r\n  productCountReducer,\r\n  getActiveProductCount\r\n}","const pageSize = 25;\r\n\r\n\r\nexport {\r\n  pageSize\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { CustomerCart } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface CartAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: CustomerCart[]\r\n}\r\n\r\nexport interface CartResponse {\r\n  message?: string;\r\n  data?: CustomerCart;\r\n}\r\n\r\nexport interface CartResponseMulti {\r\n  message?: string;\r\n  data?: CustomerCart[];\r\n}\r\n\r\nexport interface Cart {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _quantityUpdate: boolean;\r\n  readonly message?: string;\r\n  readonly data?: CustomerCart[];\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  _quantityUpdate: false,\r\n  message: '',\r\n  data: []\r\n} as Cart;\r\n\r\nenum Actions {\r\n  LOADING_CART = 'LOADING_CART',\r\n  ERROR_CART = 'ERROR_CART',\r\n  SUCCESS_CART = 'SUCCESS_CART',\r\n  DEFAULT_CART = 'DEFAULT_CART',\r\n  SET_CART = 'SET_CART',\r\n  SET_LOGGED_CART = 'SET_LOGGED_CART',\r\n  UPDATE_CART_SUCCESS = 'UPDATE_CART_SUCCESS',\r\n  ADD_CART_SUCCESS = 'ADD_CART_SUCCESS',\r\n  UPDATE_CART_LOGGED_OUT = 'UPDATE_CART_LOGGED_OUT',\r\n  DELETE_CART_PRODUCT = 'DELETE_CART_PRODUCT',\r\n  CART_QUANTITY_FINE = 'CART_QUANTITY_FINE',\r\n  CART_GET_UPDATED_QUANTITY = 'CART_GET_UPDATED_QUANTITY',\r\n  DELETE_CART_PRODUCT_LOGGED_OUT = 'DELETE_CART_PRODUCT_LOGGED_OUT',\r\n};\r\n\r\nconst loadingCart = () => ({\r\n  type: Actions.LOADING_CART\r\n});\r\n\r\nconst successCart = (message: string) => ({\r\n  type: Actions.SUCCESS_CART,\r\n  message\r\n});\r\n\r\nconst errorCart = (message: string) => ({\r\n  type: Actions.ERROR_CART,\r\n  message\r\n});\r\n\r\nconst defaultCart = () => ({\r\n  type: Actions.DEFAULT_CART\r\n});\r\n\r\nconst setCart = (data: CustomerCart[]) => ({\r\n  type: Actions.SET_CART,\r\n  data\r\n});\r\n\r\nconst setLoggedCart = (data: CustomerCart[]) => ({\r\n  type: Actions.SET_LOGGED_CART,\r\n  data\r\n});\r\n\r\nconst updateCartSuccess = (data: CustomerCart[], message: string) => ({\r\n  type: Actions.UPDATE_CART_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst addCartSuccess = (data: CustomerCart[], message: string) => ({\r\n  type: Actions.ADD_CART_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst addCartSuccessLoggedOut = (data: CustomerCart[], message: string) => ({\r\n  type: Actions.UPDATE_CART_LOGGED_OUT,\r\n  data,\r\n  message\r\n});\r\n\r\nconst deleteCartProduct = (data: CustomerCart[], message: string) => ({\r\n  type: Actions.DELETE_CART_PRODUCT,\r\n  data,\r\n  message\r\n});\r\n\r\nconst cartQuantityFine = () => ({\r\n  type: Actions.CART_QUANTITY_FINE\r\n});\r\n\r\nconst cartGetUpdatedQuantity = () => ({\r\n  type: Actions.CART_GET_UPDATED_QUANTITY\r\n});\r\n\r\nconst deleteCartLoggedOut = (data: CustomerCart[]) =>({\r\n  type: Actions.DELETE_CART_PRODUCT_LOGGED_OUT,\r\n  data,\r\n})\r\n\r\nconst cartReducer = (state = initialState, action: CartAction): Cart => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_CART:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false,\r\n        _quantityUpdate: false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_CART:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_CART:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _quantityUpdate: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_CART:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.SET_LOGGED_CART:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_CART_SUCCESS:\r\n      const originalState = state.data || [];\r\n      let og = [];\r\n      let newProduct = true;\r\n      if (action.data && originalState.length === 0) {\r\n        og = [...action.data]\r\n      } else {\r\n        og = originalState.map((product) => {\r\n          if (action.data && product.cartId === action.data[0].cartId) {\r\n            product.productQuantity = action.data[0].productQuantity;\r\n            product.totalPrice = action.data[0].totalPrice;\r\n            product.cartId = action.data[0].cartId;\r\n            newProduct = false;\r\n            return product;\r\n          }\r\n          return product;\r\n        });\r\n        if (newProduct && action.data) {\r\n          og = [...og, ...action.data]\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: og\r\n      }\r\n    case Actions.UPDATE_CART_LOGGED_OUT:\r\n      const originalStatelo = state.data || [];\r\n      let oglo = [];\r\n      let newProductlo = true;\r\n      if (action.data && originalStatelo.length === 0) {\r\n        oglo = [...action.data]\r\n      } else {\r\n        oglo = originalStatelo.map((product) => {\r\n          if (action.data && product.cartId === action.data[0].cartId) {\r\n            product.productQuantity = (Number(action.data[0].productQuantity) + Number(product.productQuantity)).toString();\r\n            product.totalPrice = ((Number(product.productQuantity)) * Number(action.data[0].productPrice)).toString();\r\n            product.cartId = action.data[0].cartId;\r\n            newProductlo = false;\r\n            return product;\r\n          }\r\n          return product;\r\n        });\r\n        if (newProductlo && action.data) {\r\n          oglo = [...oglo, ...action.data]\r\n        }\r\n      }\r\n      localStorage.setItem(\"basicKart-loggedOutCart\", JSON.stringify(oglo));\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: oglo\r\n      }\r\n    case Actions.ADD_CART_SUCCESS:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.DELETE_CART_PRODUCT_LOGGED_OUT:\r\n      const res = state.data?.filter(({ cartId }) => action.data && cartId !== action.data[0].cartId)\r\n      localStorage.setItem(\"basicKart-loggedOutCart\", JSON.stringify(res));\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: res\r\n      }\r\n    case Actions.DELETE_CART_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: state.data?.filter(({ cartId }) => action.data && cartId !== action.data[0].cartId)\r\n      }\r\n    case Actions.DEFAULT_CART:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    case Actions.CART_GET_UPDATED_QUANTITY:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _quantityUpdate: true,\r\n        message: action.message\r\n      }\r\n    case Actions.CART_QUANTITY_FINE:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: true,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nconst addUpdateCart = (cart: CustomerCart, isLoggedIn?: boolean) =>\r\n  async (dispatch: Dispatch<CartAction>) => {\r\n    dispatch(loadingCart());\r\n    if (!isLoggedIn) {\r\n          // result.productImage = cart.productImage;\r\n          // result.productImagePath = cart.productImagePath;\r\n          // result.productName = cart.productName;\r\n          // result.subcategory = cart.subcategory;\r\n          // result.productId = cart.productId;\r\n          const newCart = {\r\n            ...cart,\r\n            totalPrice: (Number(cart.productPrice) * Number(cart.productQuantity)).toString(),\r\n          } as CustomerCart;\r\n          dispatch(addCartSuccessLoggedOut([newCart],''));\r\n    } else {\r\n      const response = await api.post('/cart',\r\n        {\r\n          product_detail_id: cart.productDetailId.toString(),\r\n          order_quantity: cart.productQuantity,\r\n          price_id: cart.currencyType,\r\n          orderdetail_id: cart.cartId.toString(),\r\n          delete_flag: false\r\n        });\r\n\r\n      if (response.status === HttpStatusCode.OK) {\r\n        const res = response.data as CartResponse;\r\n        if (cart.cartId != '0') {\r\n          const result = res.data || {} as CustomerCart;\r\n          if (cart.productQuantity === '0') {\r\n            dispatch(deleteCartProduct([cart], res.message || ''));\r\n          } else {\r\n            dispatch(updateCartSuccess([result], res.message || ''));\r\n          }\r\n        } else {\r\n          const result = res.data || {} as CustomerCart;\r\n          result.productImage = cart.productImage;\r\n          result.productImagePath = cart.productImagePath;\r\n          result.productName = cart.productName;\r\n          result.subcategory = cart.subcategory;\r\n          result.productId = cart.productId;\r\n          dispatch(updateCartSuccess([result], res.message || ''));\r\n        }\r\n      } else {\r\n        const res = response as CartResponse;\r\n        dispatch(errorCart(res.message || ''));\r\n      }\r\n    }\r\n  };\r\n\r\nconst getCart = () => async (dispatch: Dispatch<CartAction>) => {\r\n  dispatch(loadingCart());\r\n\r\n  const response = await api.get('/cart');\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CartResponseMulti;\r\n    dispatch(addCartSuccess(res.data || [], res.message || ''));\r\n  } else {\r\n    const res = response as CartResponse;\r\n    dispatch(errorCart(res.message || ''))\r\n  }\r\n};\r\n\r\nconst deleteCartItem = (cart: CustomerCart, isLoggedIn?: boolean) => async (dispatch: Dispatch<CartAction>) => {\r\n  dispatch(loadingCart());\r\n\r\n  if(!isLoggedIn){\r\n    dispatch(deleteCartLoggedOut([cart]));\r\n  }else {\r\n    const response = await api.post('/cart', {\r\n      orderdetail_id: cart.cartId,\r\n      product_detail_id: cart.productDetailId.toString(),\r\n      order_quantity: cart.productQuantity,\r\n      price_id: '1',\r\n      delete_flag: true\r\n    });\r\n    if (response.status === HttpStatusCode.OK) {\r\n      const res = response.data as CartResponse;\r\n      dispatch(deleteCartProduct([cart], res.message || ''));\r\n    } else {\r\n      const res = response as CartResponse;\r\n      dispatch(errorCart(res.message || ''))\r\n    }\r\n  }\r\n  \r\n};\r\n\r\nconst updateCartQuantity = (orderDetailId: string) => async (dispatch: Dispatch<CartAction>) => {\r\n  dispatch(loadingCart());\r\n  const response = await api.post('/updatecartquantity', { orderDetailId });\r\n  if (response.status === HttpStatusCode.OK) {\r\n    dispatch(cartQuantityFine());\r\n  } else if (response.status === HttpStatusCode.PARTIAL_INFO) {\r\n    dispatch(cartGetUpdatedQuantity());\r\n  } else {\r\n    const res = response as CartResponse;\r\n    dispatch(errorCart(res.message || ''))\r\n  }\r\n}\r\n\r\nexport {\r\n  cartReducer,\r\n  addUpdateCart,\r\n  getCart,\r\n  deleteCartItem,\r\n  updateCartQuantity,\r\n  setLoggedCart\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { CustomerCheckout, RazorpayPayment, PayPalPayment, CodPayment } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface CheckoutAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: CustomerCheckout;\r\n}\r\n\r\nexport interface CheckoutResponse {\r\n  message?: string\r\n  data?: CustomerCheckout;\r\n}\r\n\r\nexport interface Checkout {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _isPaymentSucceess: boolean;\r\n  readonly _priceChanged: boolean;\r\n  readonly _isFetchCodCodeSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: CustomerCheckout;\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  _isPaymentSucceess: false,\r\n  _priceChanged: false,\r\n  _isFetchCodCodeSuccess: false,\r\n  message: '',\r\n  data: {}\r\n} as Checkout;\r\n\r\nenum Actions {\r\n  LOADING_CHECKOUT = 'LOADING_CHECKOUT',\r\n  ERROR_CHECKOUT = 'ERROR_CHECKOUT',\r\n  SUCCESS_CHECKOUT_ORDER = 'SUCCESS_CHECKOUT_ORDER',\r\n  DEFAULT_CHECKOUT = 'DEFAULT_CHECKOUT',\r\n  SET_CHECKOUT = 'SET_CHECKOUT',\r\n  UPDATE_CHECKOUT_SUCCESS = 'UPDATE_CHECKOUT_SUCCESS',\r\n  SUCCESS_PAYMENT = 'SUCCESS_PAYMENT',\r\n  PRICE_CHANGED = 'PRICE_CHANGED',\r\n};\r\n\r\nconst loadingCheckout = () => ({\r\n  type: Actions.LOADING_CHECKOUT\r\n});\r\n\r\nconst successCheckoutOrder = (data: CustomerCheckout, message?: string) => ({\r\n  type: Actions.SUCCESS_CHECKOUT_ORDER,\r\n  data,\r\n  message\r\n});\r\n\r\nconst errorCheckout = (message: string) => ({\r\n  type: Actions.ERROR_CHECKOUT,\r\n  message\r\n});\r\n\r\nconst defaultCheckout = () => ({\r\n  type: Actions.DEFAULT_CHECKOUT\r\n});\r\n\r\nconst successPayment =(message:string) => ({\r\n  type: Actions.SUCCESS_PAYMENT,\r\n  message\r\n});\r\n\r\nconst priceChanged = (message:string) => ({\r\n  type: Actions.PRICE_CHANGED,\r\n  message\r\n});\r\n\r\nconst checkoutReducer = (state = initialState, action: CheckoutAction) : Checkout => {\r\n  switch(action.type){\r\n    case Actions.LOADING_CHECKOUT:\r\n      return{\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_CHECKOUT_ORDER:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: false,\r\n        _isFetchCodCodeSuccess: true,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.PRICE_CHANGED:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: true,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_CHECKOUT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: false,\r\n        _isFetchCodCodeSuccess: false,\r\n        message: action.message\r\n      }\r\n    case Actions.DEFAULT_CHECKOUT:\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: false,\r\n        _isFetchCodCodeSuccess: false,\r\n      }\r\n    case Actions.SUCCESS_PAYMENT:\r\n      return {\r\n        ...state,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isPaymentSucceess: true,\r\n        _priceChanged: false,\r\n        message: action.message\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Thunk\r\n\r\nconst getRazorPayOrder = (amount: string, orderId: number, couponId?: number) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/checkout',\r\n    {\r\n      amount,\r\n      displayAmount: amount,\r\n      orderId,\r\n      couponId\r\n    });\r\n    if (response.status === HttpStatusCode.OK) {\r\n      const res = response.data as CheckoutResponse;\r\n      dispatch(successCheckoutOrder(res.data || {} as CustomerCheckout, res.message || ''));\r\n    } else if(response.status === HttpStatusCode.PARTIAL_INFO){\r\n      const res = response.data as CheckoutResponse;\r\n      dispatch(priceChanged(res.message || ''));\r\n    } else {\r\n      const res = response as CheckoutResponse;\r\n      dispatch(errorCheckout(res.message || ''));\r\n    }\r\n};\r\n\r\nconst saveRazorPayOrder = (razorpayData: RazorpayPayment) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/payment/razorpay',razorpayData);\r\n    if (response.status === HttpStatusCode.OK) {\r\n      const res = response.data as CheckoutResponse\r\n      dispatch(successPayment(res.message || ''));\r\n    } else {\r\n      const res = response as CheckoutResponse\r\n      dispatch(errorCheckout(res.message || ''));\r\n    }\r\n};\r\n\r\nconst getPayPalOrder = (amount: string, displayAmount: string ,orderId: number, couponId?: number)  => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/paypalorder',\r\n  {\r\n    amount,\r\n    displayAmount,\r\n    orderId,\r\n    couponId\r\n  });\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CheckoutResponse\r\n    dispatch(successCheckoutOrder(res.data as CustomerCheckout, res.message || ''));\r\n  } else if(response.status === HttpStatusCode.PARTIAL_INFO){\r\n    const res = response.data as CheckoutResponse;\r\n    dispatch(priceChanged(res.message || ''));\r\n  } else {\r\n    const res = response as CheckoutResponse\r\n    dispatch(errorCheckout(res.message || ''));\r\n  }\r\n};\r\n\r\nconst savePayPalOrder = (paypalData: PayPalPayment) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/payment/paypal',paypalData);\r\n    if (response.status === HttpStatusCode.OK) {\r\n      const res = response.data as CheckoutResponse\r\n      dispatch(successPayment(res.message || ''));\r\n    } else {\r\n      const res = response as CheckoutResponse\r\n      dispatch(errorCheckout(res.message || ''));\r\n    }\r\n};\r\n\r\nconst getCodOrder = (amount: string, orderId: number, couponId?: number) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/payment/codorder',{\r\n    amount,\r\n    displayAmount: amount,\r\n    orderId,\r\n    couponId\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CheckoutResponse;\r\n    dispatch(successCheckoutOrder(res.data as CustomerCheckout, res.message || ''));\r\n  } else if(response.status === HttpStatusCode.PARTIAL_INFO){\r\n    const res = response.data as CheckoutResponse;\r\n    dispatch(priceChanged(res.message || ''));\r\n  } else {\r\n    const res = response as CheckoutResponse;\r\n    dispatch(errorCheckout(res.message || ''));\r\n  }\r\n};\r\n\r\nconst saveCodOrder = (codData: CodPayment) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/payment/codplaceorder',codData);\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CheckoutResponse\r\n    dispatch(successPayment(res.message || ''));\r\n  } else {\r\n    const res = response as CheckoutResponse\r\n    dispatch(errorCheckout(res.message || ''));\r\n  }\r\n};\r\n\r\nconst resendOTP = () => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.get('/payment/codresendotp');\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CheckoutResponse;\r\n    dispatch(successCheckoutOrder(res.data as CustomerCheckout, res.message || ''));\r\n  } else {\r\n    const res = response as CheckoutResponse;\r\n    dispatch(errorCheckout(res.message || ''));\r\n  }\r\n};\r\n\r\nexport{\r\n  getRazorPayOrder,\r\n  checkoutReducer,\r\n  saveRazorPayOrder,\r\n  errorCheckout,\r\n  getPayPalOrder,\r\n  savePayPalOrder,\r\n  getCodOrder,\r\n  saveCodOrder,\r\n  resendOTP,\r\n  defaultCheckout\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface UserLocationAction extends Action {\r\n  readonly data?: string;\r\n};\r\n\r\nexport interface UserLocation {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: string;\r\n};\r\n\r\nenum Actions{\r\n  LOADING_USER_LOCATION= 'LOADING_USER_LOCATION',\r\n  SET_USER_LOCATION= 'SET_USER_LOCATION',\r\n};\r\n\r\nconst loadingUserLocation = () => ({\r\n  type: Actions.LOADING_USER_LOCATION,\r\n});\r\n\r\nconst setUserLocation = (data: string) => ({\r\n  type: Actions.SET_USER_LOCATION,\r\n  data\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:''\r\n} as UserLocation\r\n\r\nconst userLocationReducer = (state= initialState, action: UserLocationAction): UserLocation => {\r\n  switch(action.type){\r\n    case Actions.LOADING_USER_LOCATION:\r\n      return{\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.SET_USER_LOCATION:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess: false,\r\n        data: action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n/** Thunk */\r\n\r\nconst getUserLocation = () => async (dispatch: Dispatch<UserLocationAction>) => {\r\n  dispatch(loadingUserLocation());\r\n  const defaultUserLocation = 'Asia/Calcutta';\r\n  try {\r\n    const userLocation = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n    if(userLocation && userLocation.toLowerCase() === defaultUserLocation.toLowerCase()){\r\n      dispatch(setUserLocation('IN'));\r\n    } else if (!userLocation && (new Date).getTimezoneOffset() === -330){\r\n      dispatch(setUserLocation('IN'));\r\n    } else {\r\n      dispatch(setUserLocation('USD'));\r\n    }\r\n  } catch (error) {\r\n    dispatch(setUserLocation('IN'));\r\n  }\r\n};\r\n\r\nexport {\r\n  userLocationReducer,\r\n  getUserLocation\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { Order, OrderItems, OrderUpdateAdmin } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode, pageSize } from 'appConstants';\r\n\r\nexport interface CustomerOrderAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: Order[];\r\n  readonly singleData?: Order;\r\n  readonly _hasMoreOrders?: boolean;\r\n};\r\n\r\ninterface CustomerOrderResponse {\r\n  message?: string;\r\n  data?: Order[];\r\n  singleData?: Order;\r\n  _hasMoreOrders?: boolean;\r\n};\r\n\r\nexport interface CustomerOrders {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _hasMoreOrders?: boolean;\r\n  readonly _isOrderUpdate?: boolean;\r\n  readonly message?: string;\r\n  readonly data?: Order[];\r\n  readonly singleData?: Order;\r\n};\r\n\r\nenum Actions{\r\n  LOADING_ORDER= 'LOADING_ORDER',\r\n  SUCCESS_ORDER= 'SUCCESS_ORDER',\r\n  ADMIN_SUCCESS_ORDER= 'ADMIN_SUCCESS_ORDER',\r\n  ERROR_ORDER= 'ERROR_ORDER',\r\n  SINGLE_DATA = 'SINGLE_DATA',\r\n  CUSTOMER_RETURN = 'CUSTOMER_RETURN',\r\n  DEFAULT_ORDER_RETURN = 'DEFAULT_ORDER_RETURN'\r\n};\r\n\r\nconst loadingOrder= () => ({\r\n  type: Actions.LOADING_ORDER\r\n});\r\n\r\nconst successOrder= (data: Order[], _hasMoreOrders: boolean) => ({\r\n  type: Actions.SUCCESS_ORDER,\r\n  data,\r\n  _hasMoreOrders\r\n});\r\n\r\nconst adminSuccessOrder= (data: Order[]) => ({\r\n  type: Actions.ADMIN_SUCCESS_ORDER,\r\n  data\r\n});\r\n\r\nconst errorOrder= (message: string) => ({\r\n  type: Actions.ERROR_ORDER,\r\n  message\r\n});\r\n\r\nconst singleOrder= (singleData: Order) => ({\r\n  type: Actions.SINGLE_DATA,\r\n  singleData\r\n});\r\n\r\nconst customerReturn = (orderDetailsId: number) => ({\r\n  type: Actions.CUSTOMER_RETURN,\r\n  singleData: {\r\n   orderId: orderDetailsId.toString()\r\n  } as Order\r\n});\r\n\r\nconst defaulOrderReturn = () => ({\r\n  type: Actions.DEFAULT_ORDER_RETURN\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _hasMoreOrders: false,\r\n  _isOrderUpdate: false,\r\n  message: '',\r\n  data:[],\r\n  singleData: {} as Order,\r\n} as CustomerOrders\r\n\r\nconst customerOrdersReducer = (state= initialState, action: CustomerOrderAction): CustomerOrders => {\r\n  switch(action.type){\r\n    case Actions.LOADING_ORDER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: true,\r\n        _hasMoreOrders: false,\r\n        _isOrderUpdate: false,\r\n      }\r\n    case Actions.SUCCESS_ORDER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isOrderUpdate: false,\r\n        message: action.message,\r\n        data: state.data?.concat(action.data || []),\r\n        _hasMoreOrders: action._hasMoreOrders\r\n      }\r\n    case Actions.ADMIN_SUCCESS_ORDER:\r\n    return {\r\n      ...state,\r\n      _isSuccess: true,\r\n      _isError: false,\r\n      _isLoading: false,\r\n      _isOrderUpdate: false,\r\n      message: action.message,\r\n      data: action.data\r\n    }\r\n    case Actions.SINGLE_DATA:\r\n      return{\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _hasMoreOrders: false,\r\n        _isOrderUpdate: false,\r\n        singleData: action.singleData\r\n      }\r\n    case Actions.ERROR_ORDER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        _hasMoreOrders: false,\r\n        _isOrderUpdate: false,\r\n      }\r\n    case Actions.DEFAULT_ORDER_RETURN:\r\n      return {\r\n        ...state,\r\n        _isOrderUpdate: false,\r\n      }\r\n    case Actions.CUSTOMER_RETURN:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isOrderUpdate: true,\r\n        message: action.message,\r\n        data: state.data?.map((singleOrder) => {\r\n          const updatedOrder = singleOrder.orderItems.map((order) => {\r\n            if(order.orderDetailId.toString() === action.singleData?.orderId.toString()){\r\n              return {...order, shipmentDetails: {...order.shipmentDetails, returnStatus: 'In Progress'}}\r\n            } else {\r\n              return order\r\n            }\r\n          })\r\n          return {\r\n            ...singleOrder,\r\n            orderItems : updatedOrder\r\n          }\r\n        }),\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n/** Thunk */\r\n\r\nconst getCustomerOrders = (offset: number, limit: number) => async(dispatch: Dispatch<CustomerOrderAction>) => {\r\n  dispatch(loadingOrder());\r\n  const response = await api.get('/getcustomerorders?limit='+limit+'&offset='+offset);\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as CustomerOrderResponse;\r\n    const _hasMoreOrders = res.data && res.data.length === pageSize || false;\r\n    dispatch(successOrder(res.data || [], _hasMoreOrders))\r\n  } else {\r\n    const res = response as CustomerOrderResponse;\r\n    dispatch(errorOrder(res.message || ''));\r\n  }\r\n}\r\n\r\nconst getAdminOrders = (userId=0) => async(dispatch: Dispatch<CustomerOrderAction>) => {\r\n  dispatch(loadingOrder());\r\n  const response = await api.get('/getadminorders?userId='+userId);\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as CustomerOrderResponse;\r\n    dispatch(adminSuccessOrder(res.data || []))\r\n  } else {\r\n    const res = response as CustomerOrderResponse;\r\n    dispatch(errorOrder(res.message || ''));\r\n  }\r\n};\r\n\r\nconst customerProductReturn = (orderDetailsId: number, returnReason: string,\r\n  orderNumber?: string, productName?: string, userName?: string) => async(dispatch: Dispatch<CustomerOrderAction>) => {\r\n  dispatch(loadingOrder());\r\n  const response = await api.post('/customerproductreturn',{\r\n    orderDetailsId,\r\n    returnReason,\r\n    orderNumber,\r\n    productName,\r\n    userName\r\n  });\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as CustomerOrderResponse;\r\n    dispatch(customerReturn(orderDetailsId))\r\n  } else {\r\n    const res = response as CustomerOrderResponse;\r\n    dispatch(errorOrder(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  getCustomerOrders,\r\n  customerOrdersReducer,\r\n  getAdminOrders,\r\n  singleOrder,\r\n  customerProductReturn,\r\n  defaulOrderReturn\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { OrderShipper, Order } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface ShipperAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: OrderShipper[]\r\n}\r\n\r\nexport interface ShipperResponse {\r\n  message?: string\r\n  data?: OrderShipper[]\r\n}\r\n\r\nexport interface Shipper {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: OrderShipper[];\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n  data: []\r\n} as Shipper\r\n\r\nenum Actions {\r\n  LOADING_SHIPPER = 'LOADING_SHIPPER',\r\n  ERROR_SHIPPER = 'ERROR_SHIPPER',\r\n  SUCCESS_SHIPPER = 'SUCCESS_SHIPPER',\r\n  DEFAULT_SHIPPER = 'DEFAULT_SHIPPER',\r\n  SET_SHIPPER = 'SET_SHIPPER',\r\n  UPDATE_SHIPPER_SUCCESS = 'UPDATE_SHIPPER_SUCCESS',\r\n  DELETE_SHIPPER_SUCCESS = 'DELETE_SHIPPER_SUCCESS'\r\n}\r\n\r\nconst loadingShipper = () => ({\r\n  type: Actions.LOADING_SHIPPER\r\n});\r\n\r\nconst successShipper = (message: string) => ({\r\n  type: Actions.SUCCESS_SHIPPER,\r\n  message\r\n});\r\n\r\nconst errorShipper = (message: string) => ({\r\n  type: Actions.ERROR_SHIPPER,\r\n  message\r\n});\r\n\r\nconst defaultShipper = () => ({\r\n  type: Actions.DEFAULT_SHIPPER\r\n});\r\n\r\nconst setShipper = (data: OrderShipper[]) => ({\r\n  type: Actions.SET_SHIPPER,\r\n  data\r\n});\r\n\r\nconst updateShipperSuccess = (data: OrderShipper[], message: string) => ({\r\n  type: Actions.UPDATE_SHIPPER_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst deleteShipperSuccess = (data: OrderShipper[], message: string) => ({\r\n  type: Actions.DELETE_SHIPPER_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst shipperReducer = (state = initialState, action: ShipperAction): Shipper => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_SHIPPER:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_SHIPPER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_SHIPPER:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_SHIPPER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_SHIPPER_SUCCESS:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.shipperId != updatedValue[0].shipperId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue\r\n        ]\r\n      }\r\n    case Actions.DELETE_SHIPPER_SUCCESS:\r\n      const orgState = state.data || [];\r\n      const updValue = action.data || [];\r\n      const updState = orgState.filter(d => {\r\n        return d.shipperId != updValue[0].shipperId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updState\r\n        ]\r\n      }\r\n    case Actions.DEFAULT_SHIPPER:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/** Thunk */\r\n\r\nconst saveShipper = (shipper: OrderShipper) => async (dispatch: Dispatch<ShipperAction>) => {\r\n  dispatch(loadingShipper());\r\n  const response = await api.post('/shipper',\r\n    {\r\n      shipper_name: shipper.shipperName,\r\n      shipper_link: shipper.trackingLink,\r\n      shipper_id: 0,\r\n      delete_flag: false\r\n    });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ShipperResponse\r\n    dispatch(successShipper(res.message || ''));\r\n  } else {\r\n    const res = response as ShipperResponse\r\n    dispatch(errorShipper(res.message || ''));\r\n  }\r\n}\r\n\r\nconst getShippers = () => async (dispatch: Dispatch<ShipperAction>) => {\r\n  dispatch(loadingShipper());\r\n\r\n  const response = await api.get('/shipper');\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as ShipperResponse;\r\n    dispatch(setShipper(res.data || []));\r\n  } else {\r\n    const res = response as ShipperResponse;\r\n    dispatch(errorShipper(res.message || ''))\r\n  }\r\n}\r\n\r\nconst updateShipper = (shipper: OrderShipper, delete_flag= false) => async (dispatch: Dispatch<ShipperAction>) => {\r\n  dispatch(loadingShipper());\r\n\r\n  const response = await api.post('/shipper', {\r\n    shipper_name: shipper.shipperName,\r\n    shipper_link: shipper.trackingLink,\r\n    shipper_id: shipper.shipperId,\r\n    delete_flag\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ShipperResponse;\r\n    if(delete_flag){\r\n      dispatch(deleteShipperSuccess([shipper], res.message || ''))\r\n    }else {\r\n      dispatch(updateShipperSuccess([shipper], res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as ShipperResponse\r\n    dispatch(errorShipper(res.message || ''));\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  shipperReducer,\r\n  saveShipper,\r\n  getShippers,\r\n  updateShipper\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { OrderUpdateAdmin } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode, pageSize } from 'appConstants';\r\n\r\nexport interface ShipmentAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: OrderUpdateAdmin;\r\n};\r\n\r\ninterface ShipmentResponse {\r\n  message?: string;\r\n  data?: OrderUpdateAdmin;\r\n};\r\n\r\nexport interface Shipment {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _hasMoreOrders?: boolean;\r\n  readonly message?: string;\r\n  readonly data?: OrderUpdateAdmin;\r\n};\r\n\r\nenum Actions{\r\n  LOADING_SHIPMENT= 'LOADING_SHIPMENT',\r\n  SUCCESS_SHIPMENT= 'SUCCESS_SHIPMENT',\r\n  ERROR_SHIPMENT= 'ERROR_SHIPMENT',\r\n};\r\n\r\nconst loadingShipment= (data: OrderUpdateAdmin) => ({\r\n  type: Actions.LOADING_SHIPMENT,\r\n  data\r\n});\r\n\r\nconst successShipment= (data: OrderUpdateAdmin, message: string) => ({\r\n  type: Actions.SUCCESS_SHIPMENT,\r\n  data,\r\n  message,\r\n});\r\n\r\nconst errorShipment= (message: string) => ({\r\n  type: Actions.ERROR_SHIPMENT,\r\n  message,\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _hasMoreOrders: false,\r\n  message: '',\r\n  data:{}\r\n} as Shipment\r\n\r\nconst shipmentReducer = (state= initialState, action: ShipmentAction): Shipment => {\r\n  switch(action.type){\r\n    case Actions.LOADING_SHIPMENT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: true,\r\n        data: action.data,\r\n      }\r\n    case Actions.SUCCESS_SHIPMENT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.ERROR_SHIPMENT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        message: action.message,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n/** Thunk */\r\n\r\nconst updateOrderAdmin = (orderUpdate: OrderUpdateAdmin, sendTrackingEmail: boolean) => async(dispatch: Dispatch<ShipmentAction>) => {\r\n  dispatch(loadingShipment(orderUpdate));\r\n  const response = await api.post('/shipment',{\r\n    deliveryDate: orderUpdate.deliveryDate,\r\n    orderDetailId: orderUpdate.orderDetailId,\r\n    paymentReturned: orderUpdate.paymentReturned?.toString(),\r\n    returnStatus: orderUpdate.returnStatus?.toString(),\r\n    shipmentId: orderUpdate.shipmentId,\r\n    shipper: orderUpdate.shipper?.toString(),\r\n    shippingDate: orderUpdate.shippingDate,\r\n    trackingNumber: orderUpdate.trackingNumber?.toString() || '',\r\n    customerEmail: orderUpdate.customerEmail,\r\n    orderNumber: orderUpdate.orderNumber,\r\n    customerName: orderUpdate.customerName,\r\n    sendTrackingEmail\r\n  } as OrderUpdateAdmin);\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as ShipmentResponse;\r\n    dispatch(successShipment(orderUpdate, res.message|| ''));\r\n  } else {\r\n    const res = response as ShipmentResponse;\r\n    dispatch(errorShipment(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  shipmentReducer,\r\n  updateOrderAdmin\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { ProductItem } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface RelatedProductAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\ninterface RelatedProductResponse {\r\n   message?: string;\r\n   data?: ProductItem[];\r\n}\r\n\r\nexport interface RelatedProduct {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_RELATED_PRODUCT= 'LOADING_RELATED_PRODUCT',\r\n  SUCCESS_RELATED_PRODUCT= 'SUCCESS_RELATED_PRODUCT',\r\n  ERROR_RELATED_PRODUCT= 'ERROR_RELATED_PRODUCT',\r\n  SET_RELATED_PRODUCT= 'SET_RELATED_PRODUCT',\r\n}\r\n\r\nconst loadingRelatedProduct= () => ({\r\n  type: Actions.LOADING_RELATED_PRODUCT\r\n});\r\n\r\nconst successRelatedProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_RELATED_PRODUCT,\r\n  message\r\n});\r\n\r\nconst errorRelatedProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_RELATED_PRODUCT,\r\n  message\r\n});\r\n\r\nconst setRelatedProduct= (data: ProductItem[]) => ({\r\n  type: Actions.SET_RELATED_PRODUCT,\r\n  data\r\n});\r\n\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as RelatedProduct\r\n\r\n\r\nconst relatedProductReducer = (state= initialState, action: RelatedProductAction): RelatedProduct => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_RELATED_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_RELATED_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_RELATED_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_RELATED_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/**Thunk */\r\n\r\n\r\nconst getRelatedProduct= (subcategoryId: number, productId: number) => async (dispatch: Dispatch<RelatedProductAction>) => {\r\n  dispatch(loadingRelatedProduct());\r\n\r\n  const response = await api.post('/relatedproducts',{\r\n    subcategoryId,\r\n    productId\r\n  });\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as RelatedProductResponse;\r\n    dispatch(setRelatedProduct(res.data || []))\r\n  } else {\r\n    const res = response as RelatedProductResponse;\r\n    dispatch(errorRelatedProduct(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  relatedProductReducer,\r\n  getRelatedProduct\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { ProductItem } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface TrendingProductAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\ninterface TrendingProductResponse {\r\n   message?: string;\r\n   data?: ProductItem[];\r\n}\r\n\r\nexport interface TrendingProduct {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_TRENDING_PRODUCT= 'LOADING_TRENDING_PRODUCT',\r\n  SUCCESS_TRENDING_PRODUCT= 'SUCCESS_TRENDING_PRODUCT',\r\n  ERROR_TRENDING_PRODUCT= 'ERROR_TRENDING_PRODUCT',\r\n  SET_TRENDING_PRODUCT= 'SET_TRENDING_PRODUCT',\r\n}\r\n\r\nconst loadingTrendingProduct= () => ({\r\n  type: Actions.LOADING_TRENDING_PRODUCT\r\n});\r\n\r\nconst successTrendingProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_TRENDING_PRODUCT,\r\n  message\r\n});\r\n\r\nconst errorTrendingProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_TRENDING_PRODUCT,\r\n  message\r\n});\r\n\r\nconst setTrendingProduct= (data: ProductItem[]) => ({\r\n  type: Actions.SET_TRENDING_PRODUCT,\r\n  data\r\n});\r\n\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as TrendingProduct\r\n\r\n\r\nconst trendingProductReducer = (state= initialState, action: TrendingProductAction): TrendingProduct => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_TRENDING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_TRENDING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_TRENDING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_TRENDING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/**Thunk */\r\n\r\n\r\nconst getTrendingProduct= () => async (dispatch: Dispatch<TrendingProductAction>) => {\r\n  dispatch(loadingTrendingProduct());\r\n\r\n  const response = await api.get('/trendinglatest?type=2');\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as TrendingProductResponse;\r\n    dispatch(setTrendingProduct(res.data || []))\r\n  } else {\r\n    const res = response as TrendingProductResponse;\r\n    dispatch(errorTrendingProduct(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  trendingProductReducer,\r\n  getTrendingProduct\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { ProductItem } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface LatestProductAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\ninterface LatestProductResponse {\r\n   message?: string;\r\n   data?: ProductItem[];\r\n}\r\n\r\nexport interface LatestProduct {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_LATEST_PRODUCT= 'LOADING_LATEST_PRODUCT',\r\n  SUCCESS_LATEST_PRODUCT= 'SUCCESS_LATEST_PRODUCT',\r\n  ERROR_LATEST_PRODUCT= 'ERROR_LATEST_PRODUCT',\r\n  SET_LATEST_PRODUCT= 'SET_LATEST_PRODUCT',\r\n}\r\n\r\nconst loadingLatestProduct= () => ({\r\n  type: Actions.LOADING_LATEST_PRODUCT\r\n});\r\n\r\nconst successLatestProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_LATEST_PRODUCT,\r\n  message\r\n});\r\n\r\nconst errorLatestProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_LATEST_PRODUCT,\r\n  message\r\n});\r\n\r\nconst setLatestProduct= (data: ProductItem[]) => ({\r\n  type: Actions.SET_LATEST_PRODUCT,\r\n  data\r\n});\r\n\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as LatestProduct\r\n\r\n\r\nconst latestProductReducer = (state= initialState, action: LatestProductAction): LatestProduct => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_LATEST_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_LATEST_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_LATEST_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_LATEST_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/**Thunk */\r\n\r\n\r\nconst getLatestProduct= () => async (dispatch: Dispatch<LatestProductAction>) => {\r\n  dispatch(loadingLatestProduct());\r\n\r\n  const response = await api.get('/trendinglatest?type=1');\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as LatestProductResponse;\r\n    dispatch(setLatestProduct(res.data || []))\r\n  } else {\r\n    const res = response as LatestProductResponse;\r\n    dispatch(errorLatestProduct(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  latestProductReducer,\r\n  getLatestProduct\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { Search as ProductSearch } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode, pageSize } from 'appConstants';\r\n\r\nexport interface SearchAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductSearch;\r\n};\r\n\r\ninterface SearchResponse {\r\n  message?: string;\r\n  data?: ProductSearch;\r\n};\r\n\r\nexport interface Search {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductSearch;\r\n};\r\n\r\nenum Actions{\r\n  LOADING_SEARCH= 'LOADING_SEARCH',\r\n  SET_SEARCH= 'SET_SEARCH',\r\n  ERROR_SEARCH= 'ERROR_SEARCH',\r\n};\r\n\r\nconst loadingSearch= (data: ProductSearch) => ({\r\n  type: Actions.LOADING_SEARCH,\r\n  data\r\n});\r\n\r\nconst setSearch= (data: ProductSearch) => ({\r\n  type: Actions.SET_SEARCH,\r\n  data,\r\n});\r\n\r\nconst errorSearch= (message: string) => ({\r\n  type: Actions.ERROR_SEARCH,\r\n  message,\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:{}\r\n} as Search\r\n\r\nconst searchReducer = (state= initialState, action: SearchAction): Search => {\r\n  switch(action.type){\r\n    case Actions.LOADING_SEARCH:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: true,\r\n        data: action.data,\r\n      }\r\n    case Actions.SET_SEARCH:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.ERROR_SEARCH:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        message: action.message,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n\r\n\r\nexport {\r\n  searchReducer,\r\n  setSearch\r\n}","import { Action } from \"redux\";\r\nimport { CustomerShippment as CustomerShippmentType } from \"types\";\r\n\r\nexport interface CustomerShippmentAction extends Action {\r\n  readonly data?: CustomerShippmentType\r\n}\r\n\r\nexport interface CustomerShippment {\r\n  readonly data?: CustomerShippmentType;\r\n}\r\n\r\nconst initialState = {\r\n  data: {\r\n    shippmentPrice: ''\r\n  }\r\n} as CustomerShippment;\r\n\r\nenum Actions {\r\n  SET_SHIPPING_PRICE = 'SET_SHIPPING_PRICE',\r\n}\r\n\r\nconst setShippingPrice = (data: CustomerShippmentType) => ({\r\n  type: Actions.SET_SHIPPING_PRICE,\r\n  data\r\n});\r\n\r\nconst customerShippmentReducer = (state = initialState, action: CustomerShippmentAction): CustomerShippment => {\r\n  switch(action.type){\r\n    case Actions.SET_SHIPPING_PRICE:\r\n      return{\r\n        ...state,\r\n        data:{\r\n          shippmentPrice: action.data?.shippmentPrice || ''\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport {\r\n  customerShippmentReducer,\r\n  setShippingPrice\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { SelectedFilters } from \"types\";\r\n\r\nexport interface PreSelectedFilterActions extends Action {\r\n  readonly key: string;\r\n  readonly data: number[] | string | SelectedFilters;\r\n}\r\n\r\nexport interface PreSelectedFilters {\r\n  readonly _isLoading: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly data?: SelectedFilters;\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isSuccess: false,\r\n  data: {\r\n    subcategoryId:[],\r\n    coloudId:[],\r\n    sizeId:[],\r\n    startPrice:'',\r\n    endPrice:'',\r\n    subcategoryname: '',\r\n    searchText:'',\r\n  } as SelectedFilters\r\n} as PreSelectedFilters;\r\n\r\nenum Actions {\r\n  LOADING_FILTERS = 'LOADING_FILTERS',\r\n  SUCCESS_FILTERS = 'SUCCESS_FILTERS',\r\n  SET_FILTER = 'SET_FILTER',\r\n  SET_ALL_FILTER = 'SET_ALL_FILTER',\r\n  DEFAULT_FILTER = 'DEFAULT_FILTER'\r\n}\r\n\r\nconst loadingColour = () => ({\r\n  type: Actions.LOADING_FILTERS\r\n});\r\n\r\nconst successColour = () => ({\r\n  type: Actions.SUCCESS_FILTERS,\r\n});\r\n\r\nconst defaultPreSelectedFitler = () => ({\r\n  type: Actions.DEFAULT_FILTER\r\n});\r\n\r\nconst setPreSelectedFilter =(key:string, data: number[] | string) => ({\r\n  type: Actions.SUCCESS_FILTERS,\r\n  key,\r\n  data\r\n});\r\n\r\nconst setAllFilters = (data:SelectedFilters) => ({\r\n  type: Actions.SET_ALL_FILTER,\r\n  data\r\n});\r\n\r\nconst PreSelectedFiltersReducer = (state= initialState, actions: PreSelectedFilterActions):PreSelectedFilters =>{\r\n  switch(actions.type){\r\n    case Actions.SUCCESS_FILTERS:\r\n      return {\r\n        ...state,\r\n        data :{\r\n          ...state.data,\r\n          [actions.key]: actions.data\r\n        } as SelectedFilters\r\n      }\r\n    case Actions.SET_ALL_FILTER:\r\n      return {\r\n        ...state,\r\n        data : actions.data  as SelectedFilters\r\n      }\r\n    case Actions.DEFAULT_FILTER:\r\n      return {\r\n        _isLoading: false,\r\n        _isSuccess: true,\r\n        data: {\r\n          subcategoryId:[],\r\n          coloudId:[],\r\n          sizeId:[],\r\n          startPrice:'',\r\n          endPrice:'',\r\n          subcategoryname: '',\r\n          searchText:'',\r\n        } as SelectedFilters\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport {\r\n  PreSelectedFiltersReducer,\r\n  setPreSelectedFilter,\r\n  defaultPreSelectedFitler,\r\n  setAllFilters\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { AdminOrderDataCsv } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface AdminOrderCsvAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: AdminOrderDataCsv[]\r\n}\r\n\r\nexport interface AdminOrderCsvResponse {\r\n  message?: string\r\n  data?: AdminOrderDataCsv[]\r\n}\r\n\r\nexport interface AdminOrderCsv {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: AdminOrderDataCsv[];\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n  data: []\r\n} as AdminOrderCsv;\r\n\r\nenum Actions {\r\n  LOADING_ADMIN_ORDER_CSV = 'LOADING_ADMIN_ORDER_CSV',\r\n  ERROR_ADMIN_ORDER_CSV = 'ERROR_ADMIN_ORDER_CSV',\r\n  SET_ADMIN_ORDER_CSV = 'SET_ADMIN_ORDER_CSV',\r\n  SET_ADMIN_ORDER_CSV_DEFAULT = 'SET_ADMIN_ORDER_CSV_DEFAULT'\r\n};\r\n\r\nconst loadingAdminOrderCsv = () => ({\r\n  type: Actions.LOADING_ADMIN_ORDER_CSV\r\n});\r\n\r\nconst errorAdminOrderCsv = (message: string) => ({\r\n  type: Actions.ERROR_ADMIN_ORDER_CSV,\r\n  message\r\n});\r\n\r\nconst setAdminOrderCsv = (data: AdminOrderDataCsv[]) => ({\r\n  type: Actions.SET_ADMIN_ORDER_CSV,\r\n  data\r\n});\r\n\r\nconst setAdminOrderCsvDefault = () => ({\r\n  type: Actions.SET_ADMIN_ORDER_CSV_DEFAULT\r\n});\r\n\r\nconst adminOrderCsvReducer = (state = initialState, action: AdminOrderCsvAction): AdminOrderCsv => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_ADMIN_ORDER_CSV:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false,\r\n      }\r\n    case Actions.ERROR_ADMIN_ORDER_CSV:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_ADMIN_ORDER_CSV:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess: true,\r\n        data: action.data\r\n      }\r\n    case Actions.SET_ADMIN_ORDER_CSV_DEFAULT:\r\n      return{\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n/** Thunk */\r\n\r\nconst getAdminOrderDataCsv = () => async (dispatch: Dispatch<AdminOrderCsvAction>) => {\r\n  dispatch(loadingAdminOrderCsv());\r\n  const response = await api.get('/getorderdatacsv');\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as AdminOrderCsvResponse;\r\n    console.log(res)\r\n    dispatch(setAdminOrderCsv(res.data || []));\r\n  } else {\r\n    const res = response as AdminOrderCsvResponse\r\n    dispatch(errorAdminOrderCsv(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  adminOrderCsvReducer,\r\n  getAdminOrderDataCsv,\r\n  setAdminOrderCsvDefault\r\n}","import { createStore, combineReducers, Store, applyMiddleware, compose, Action } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport { userInformationReducer, UserInformation, UserInformationAction } from './UserInformation';\r\nimport { userLoginReducer, UserLoginRegister } from './Login';\r\nimport { userSettingsReducer, UserSetting } from './UserSettings';\r\nimport { Colour, colourReducer, ColourAction } from './Colour';\r\nimport { sizeReducer, Size, SizeAction } from './Size';\r\nimport { SubCategory, subCategoryReducer, SubCategoryAction } from './SubCategory';\r\nimport { Coupon, couponReducer, CouponAction } from './Coupon';\r\nimport { Product, productReducer, ProductAction } from './Product';\r\nimport { ProductCount, productCountReducer, ProductCountAction } from './ProductCount';\r\nimport { Cart, cartReducer, CartAction } from './Cart';\r\nimport { Checkout, checkoutReducer, CheckoutAction } from './Checkout';\r\nimport { UserLocation, userLocationReducer, UserLocationAction } from './UserLocation';\r\nimport { CustomerOrders, customerOrdersReducer, CustomerOrderAction } from './Order';\r\nimport { Shipper, shipperReducer, ShipperAction } from './Shipper';\r\nimport { Shipment, shipmentReducer, ShipmentAction } from './Shipment';\r\nimport { relatedProductReducer, RelatedProduct, RelatedProductAction } from './RelatedProducts';\r\nimport { TrendingProduct, trendingProductReducer, TrendingProductAction } from './TrendingProducts';\r\nimport { LatestProduct, latestProductReducer, LatestProductAction } from './LatestProducts';\r\nimport { searchReducer, SearchAction, Search } from './Search';\r\nimport { CustomerShippment, customerShippmentReducer, CustomerShippmentAction } from './CustomerShippment';\r\nimport { PreSelectedFilterActions, PreSelectedFilters, PreSelectedFiltersReducer } from './PreSelectedFilters';\r\nimport { AdminOrderCsv, AdminOrderCsvAction, adminOrderCsvReducer } from './AdminOrderCsv';\r\n\r\n\r\nexport type AppState = {\r\n  user: UserInformation;\r\n  userLogin: UserLoginRegister;\r\n  userSettings: UserSetting;\r\n  colour: Colour;\r\n  size: Size;\r\n  subCategory: SubCategory;\r\n  coupon: Coupon;\r\n  product: Product;\r\n  productCount: ProductCount;\r\n  cart: Cart;\r\n  checkout: Checkout;\r\n  userLocation: UserLocation;\r\n  customerOrders: CustomerOrders;\r\n  shipper: Shipper;\r\n  shipment: Shipment;\r\n  relatedProduct: RelatedProduct;\r\n  trendingProduct: TrendingProduct;\r\n  latestProduct: LatestProduct;\r\n  search: Search;\r\n  customerShippment: CustomerShippment;\r\n  preSelectedFilters: PreSelectedFilters;\r\n  adminOrderCsv: AdminOrderCsv;\r\n}\r\n\r\nconst reducers = {\r\n  user: userInformationReducer,\r\n  userLogin: userLoginReducer,\r\n  userSettings: userSettingsReducer,\r\n  colour: colourReducer,\r\n  size: sizeReducer,\r\n  subCategory: subCategoryReducer,\r\n  coupon: couponReducer,\r\n  product: productReducer,\r\n  productCount: productCountReducer,\r\n  cart: cartReducer,\r\n  checkout: checkoutReducer,\r\n  userLocation: userLocationReducer,\r\n  customerOrders: customerOrdersReducer,\r\n  shipper: shipperReducer,\r\n  shipment: shipmentReducer,\r\n  relatedProduct: relatedProductReducer,\r\n  trendingProduct: trendingProductReducer,\r\n  latestProduct: latestProductReducer,\r\n  search: searchReducer,\r\n  customerShippment: customerShippmentReducer,\r\n  preSelectedFilters: PreSelectedFiltersReducer,\r\n  adminOrderCsv: adminOrderCsvReducer,\r\n};\r\n\r\ninterface AppActions {\r\n  user: UserInformationAction;\r\n  colour: ColourAction;\r\n  size: SizeAction;\r\n  subcategory: SubCategoryAction;\r\n  coupon: CouponAction;\r\n  product: ProductAction;\r\n  productCount: ProductCountAction;\r\n  cart: CartAction;\r\n  checkout: CheckoutAction;\r\n  userLocation: UserLocationAction;\r\n  customerOrders: CustomerOrderAction;\r\n  shipper: ShipperAction;\r\n  shipment: ShipmentAction;\r\n  relatedProduct: RelatedProductAction;\r\n  trendingProduct: TrendingProductAction;\r\n  latestProduct: LatestProductAction;\r\n  search: SearchAction;\r\n  customerShippment: CustomerShippmentAction;\r\n  preSelectedFilters: PreSelectedFilterActions;\r\n  adminOrderCsv: AdminOrderCsvAction;\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: Function;\r\n    store: Store<AppState>;\r\n  }\r\n};\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore<AppState, Action<AppActions>, any, any>(\r\n  combineReducers(reducers), \r\n  composeEnhancers(applyMiddleware(thunkMiddleware)\r\n  ));\r\n\r\nexport { store };\r\nexport * from './UserInformation';\r\nexport * from './Login';\r\nexport * from './UserSettings';\r\nexport * from './Colour';\r\nexport * from './Size';\r\nexport * from './SubCategory';\r\nexport * from './Coupon';\r\nexport * from './Product';\r\nexport * from './ProductCount';\r\nexport * from './Cart';\r\nexport * from './Checkout';\r\nexport * from './UserLocation';\r\nexport * from './Order';\r\nexport * from './Shipper';\r\nexport * from './Shipment';\r\nexport * from './RelatedProducts';\r\nexport * from './TrendingProducts';\r\nexport * from './LatestProducts';\r\nexport * from './CustomerShippment';\r\nexport * from './PreSelectedFilters';\r\nexport * from './AdminOrderCsv';","import React from 'react';\r\n\r\ninterface Props {\r\n  _isError: boolean,\r\n  _isSuccess: boolean,\r\n  message?: string\r\n}\r\n\r\nconst NotificationContainer : React.FunctionComponent<Props> = (props: Props) => {\r\n  const { \r\n    _isError,\r\n    _isSuccess,\r\n    message\r\n  } = props;\r\n  return (\r\n    <>\r\n    {\r\n      _isError &&\r\n      <div className=\"login-error-message\">\r\n        <span className=\"uk-notification-message-danger\"> {message} </span>\r\n      </div>\r\n    }\r\n    {\r\n      _isSuccess &&\r\n      <div className=\"login-error-message\">\r\n        <span className=\"uk-notification-message-success\"> {message} </span>\r\n      </div>\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\nexport {\r\n  NotificationContainer\r\n}","import React from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { PayPalButtonProps, PayPalButtonState } from 'types';\r\n\r\ndeclare global {\r\n  interface Window { paypal: any }\r\n}\r\n\r\nclass PayPalButton extends React.Component<PayPalButtonProps, PayPalButtonState> {\r\n  static propTypes = {\r\n      amount: PropTypes.oneOfType([\r\n          PropTypes.number,\r\n          PropTypes.string,\r\n      ]),\r\n      currency: PropTypes.oneOfType([\r\n          PropTypes.number,\r\n          PropTypes.string,\r\n      ]),\r\n      shippingPreference: PropTypes.string,\r\n      onSuccess: PropTypes.func,\r\n      catchError: PropTypes.func,\r\n      onError: PropTypes.func,\r\n      createOrder: PropTypes.func,\r\n      createSubscription: PropTypes.func,\r\n      onApprove: PropTypes.func,\r\n      onCancel: PropTypes.func,\r\n      style: PropTypes.object,\r\n      options: PropTypes.shape({\r\n          clientId: PropTypes.string,\r\n          merchantId: PropTypes.string,\r\n          currency: PropTypes.oneOfType([\r\n              PropTypes.number,\r\n              PropTypes.string,\r\n          ]),\r\n          intent: PropTypes.string,\r\n          commit: PropTypes.oneOfType([\r\n              PropTypes.bool,\r\n              PropTypes.string\r\n          ]),\r\n          vault: PropTypes.oneOfType([\r\n              PropTypes.bool,\r\n              PropTypes.string\r\n          ]),\r\n          component: PropTypes.string,\r\n          disableFunding: PropTypes.string,\r\n          disableCard: PropTypes.string,\r\n          integrationDate: PropTypes.string,\r\n          locale: PropTypes.string,\r\n          buyerCountry: PropTypes.string,\r\n          debug: PropTypes.oneOfType([\r\n              PropTypes.bool,\r\n              PropTypes.string\r\n          ])\r\n      }),\r\n      onButtonReady: PropTypes.func,\r\n  }\r\n\r\n  static defaultProps = {\r\n      style: {},\r\n      options: {\r\n          clientId: \"sb\",\r\n          currency: \"USD\"\r\n      },\r\n      shippingPreference: \"GET_FROM_FILE\",\r\n  }\r\n\r\n  constructor(props: PayPalButtonProps) {\r\n      super(props);\r\n\r\n      this.state = {\r\n          isSdkReady: false,\r\n      };\r\n  }\r\n\r\n  componentDidMount() {\r\n      if (\r\n          typeof window !== \"undefined\" &&\r\n          window !== undefined &&\r\n          window.paypal === undefined\r\n      ) {\r\n          this.addPaypalSdk();\r\n      }\r\n      else if (\r\n          typeof window !== \"undefined\" &&\r\n          window !== undefined &&\r\n          window.paypal !== undefined &&\r\n          this.props.onButtonReady\r\n      ) {\r\n          this.props.onButtonReady();\r\n      }\r\n  }\r\n\r\n  createOrder(data: any, actions: any) {\r\n\r\n      const { currency, options, amount, shippingPreference } = this.props;\r\n\r\n      return actions.order.create({\r\n        purchase_units: [\r\n          {\r\n            amount: {\r\n              currency_code: currency\r\n                ? currency\r\n                : options && options.currency\r\n                ? options.currency\r\n                : \"USD\",\r\n              value: amount && amount.toString()\r\n            }\r\n          }\r\n        ],\r\n        application_context: {\r\n          shipping_preference: shippingPreference\r\n        }\r\n      });\r\n  }\r\n\r\n  onApprove(data: any, actions: any) {\r\n      return actions.order\r\n          .capture()\r\n          .then((details: any) => {\r\n              if (this.props.onSuccess) {\r\n                  return this.props.onSuccess(details, data);\r\n              }\r\n          })\r\n          .catch((err: any) => {\r\n              if (this.props.catchError) {\r\n                  return this.props.catchError(err);\r\n              }\r\n          });\r\n  }\r\n\r\n  onCancel(error:any){\r\n    if(this.props.onCancel){\r\n      this.props.onCancel(error);\r\n    }\r\n\r\n  }\r\n  render() {\r\n      const {\r\n          amount,\r\n          onSuccess,\r\n          createOrder,\r\n          createSubscription,\r\n          onApprove,\r\n          style,\r\n          onCancel,\r\n      } = this.props;\r\n      const { isSdkReady } = this.state;\r\n\r\n      if (\r\n          !isSdkReady &&\r\n          (typeof window === \"undefined\" || window.paypal === undefined)\r\n      ) {\r\n          return null;\r\n      }\r\n\r\n      const Button = window.paypal.Buttons.driver(\"react\", {\r\n          React,\r\n          ReactDOM,\r\n      });\r\n\r\n      const createOrderFn =\r\n          amount && !createOrder\r\n              ? (data: any, actions: any) => this.createOrder(data, actions)\r\n              : (data: any, actions: any) => createOrder && createOrder(data, actions);\r\n\r\n      return (\r\n          <Button\r\n              {...this.props}\r\n              createOrder={createSubscription ? undefined : createOrderFn}\r\n              createSubscription={createSubscription}\r\n              onCancel={\r\n                onCancel ? (error:any) => onCancel(error) : \r\n                (error:any) => this.onCancel(error)}\r\n              onApprove={\r\n                  onSuccess\r\n                      ? (data: any, actions: any) => this.onApprove(data, actions)\r\n                      : (data: any, actions: any) => onApprove && onApprove(data, actions)\r\n              }\r\n              style={style}\r\n          />\r\n      );\r\n  }\r\n\r\n  private addPaypalSdk() {\r\n      const { options, onButtonReady } = this.props;\r\n      const queryParams: string[] = [];\r\n\r\n      // replacing camelCase with dashes\r\n     if(options){\r\n      for (const [key, value] of Object.entries(options)) {\r\n        const name = key.split(/(?=[A-Z])/).join(\"-\").toLowerCase();\r\n        queryParams.push(`${name}=${value}`);\r\n      }\r\n      //   Object.keys(options).forEach(k => {\r\n      //     const name = k.split(/(?=[A-Z])/).join(\"-\").toLowerCase();\r\n      //     queryParams.push(`${name}=${options[k]}`);\r\n      // });\r\n     }\r\n\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?${queryParams.join(\"&\")}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n          this.setState({ isSdkReady: true });\r\n\r\n          if (onButtonReady) {\r\n              onButtonReady();\r\n          }\r\n      };\r\n      script.onerror = () => {\r\n          throw new Error(\"Paypal SDK could not be loaded.\");\r\n      };\r\n  \r\n      document.body.appendChild(script);\r\n  }\r\n}\r\nexport {\r\n  PayPalButton\r\n}","import React, { useEffect, useRef, useState, Dispatch, SetStateAction } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getPayPalOrder, AppState, savePayPalOrder, getCart, defaultCheckout } from 'reducers';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ProductCoupon } from 'types';\r\ndeclare global {\r\n  interface Window { paypal: any,paypalOrderId:any, didPriceChanged: boolean, paypalButton: any }\r\n}\r\n\r\ninterface Props {\r\n  cartTotalPrice: string;\r\n  cartTotalWithShipping: string;\r\n  quantityCount: number;\r\n  isStandard: boolean;\r\n  paymentMode: string;\r\n  setContainerIsCard: Dispatch<SetStateAction<boolean>>;\r\n  cartOrderId:number;\r\n}\r\nconst PayPalPayment : React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const paypalPaymentLoadingRef = useRef<HTMLButtonElement>(null);\r\n  const paypalModalRef = useRef<HTMLDivElement>(null)\r\n  const checkout = useSelector((state: AppState) => state.checkout);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const couponData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);\r\n  const [paypalPaymentMessage, setPaypalPaymentMessage] = useState(\"Please don't close this window while we process your payment.\");\r\n  const [paypalOrderId, setPayPalOrderId] = useState('');\r\n  const [paymentErroredOut, setPaymentErroredOut] = useState(false);\r\n  const [paymentSuccess, setPaymentSuccess] = useState(false);\r\n  const [isCard, setIsCard] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    if(props.paymentMode === 'paypal' && checkout.data && checkout.data.orderId){\r\n      setPayPalOrderId(checkout.data.orderId);\r\n      window.paypalOrderId = checkout.data.orderId\r\n    }\r\n  },[checkout.data]);\r\n\r\n  useEffect(() => {\r\n    if(props.cartTotalPrice !== '0'){\r\n      if (window.paypalButton) {\r\n        window.paypalButton.close();\r\n        delete window.paypalButton;\r\n        // setTimeout(()=>{\r\n        //   history.go(0)\r\n        // })\r\n      }\r\n      window.paypalButton = window.paypal.Buttons({\r\n        createOrder: function () {\r\n          if(!window.paypalOrderId){\r\n            if(!window.didPriceChanged){\r\n              togglePaymenModal('c');\r\n            }\r\n            return false;\r\n          } else {\r\n            paypalPaymentLoadingRef.current?.click();\r\n            return window.paypalOrderId;\r\n          }\r\n        },\r\n        onCancel: function (err:any) {\r\n          fundingType('credit');\r\n          window.paypalOrderId = '';\r\n        },\r\n        onApprove:function(data:any,actions:any) {\r\n          togglePaymenModal('b');\r\n          return actions.order.capture().then(function(details:any)  {\r\n            successPaypalPayment(data,details);\r\n           });\r\n        },\r\n        onClick: async function (d: any) {\r\n          window.paypalOrderId = '';\r\n          fundingType(d.fundingSource);\r\n          togglePaymenModal('d');\r\n          await dispatch(getPayPalOrder(props.cartTotalPrice.toString(), props.cartTotalWithShipping.toString(),props.cartOrderId,couponData && couponData[0] && couponData[0].couponId))\r\n        },\r\n        onError: function(data: any){\r\n          console.log('error')\r\n          console.log(data)\r\n        }\r\n      });\r\n      window.paypalButton.render('#paypal-button-container')\r\n    }\r\n    \r\n  },[props.cartTotalPrice,props.cartTotalWithShipping]);\r\n\r\n  useEffect(()=> {\r\n    if(checkout._priceChanged && props.paymentMode === 'paypal') {\r\n      window.didPriceChanged= true;\r\n      setPaypalPaymentMessage(checkout.message || '');\r\n      setTimeout(() => {\r\n        window.didPriceChanged = false;\r\n        history.go(0);\r\n        togglePaymenModal('e');\r\n      },5000);\r\n    }\r\n  },[checkout._priceChanged]);\r\n\r\n  const togglePaymenModal = (tt?:string) => {\r\n    paypalPaymentLoadingRef.current?.click();\r\n  };\r\n\r\n  const fundingType = (funding: string) => {\r\n    console.log(funding)\r\n    if(funding === 'card'){\r\n      setIsCard(true);\r\n      if(window.innerWidth > 959){\r\n        window.scrollTo({\r\n          top: 150,\r\n          behavior: 'smooth'\r\n        })\r\n      }\r\n      props.setContainerIsCard(true);\r\n\r\n    }else {\r\n      if(window.innerWidth > 959){\r\n        window.scrollTo(0,0);\r\n      }\r\n      setTimeout(()=>{\r\n        setIsCard(false);\r\n      props.setContainerIsCard(false)\r\n      },\r\n      1000)\r\n    }\r\n      setPaypalPaymentMessage(\"Please don't close this window while we process your payment.\");\r\n      setPaymentErroredOut(false);\r\n      setPaymentSuccess(false);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if(checkout._isPaymentSucceess){\r\n      setPaymentErroredOut(false);\r\n      setPaymentSuccess(true);\r\n      setPaypalPaymentMessage(checkout.message || \"\");\r\n      setTimeout(() => {\r\n        dispatch(defaultCheckout());\r\n        togglePaymenModal('f');\r\n        history.push('userinformation/orders');\r\n      }, 5000);\r\n    } else if(!checkout._isPaymentSucceess && checkout._isError) {\r\n      setPaymentErroredOut(true);\r\n      setPaymentSuccess(false);\r\n      setPaypalPaymentMessage(checkout.message || \"\");\r\n    }\r\n  },[checkout._isPaymentSucceess,checkout._isError])\r\n  const successPaypalPayment = (orderData: string, paymentData: string) => {\r\n\r\n    dispatch(savePayPalOrder({\r\n      paypalResponse: {\r\n        orderData,\r\n        paymentData,\r\n      },\r\n      orderId: props.cartOrderId,\r\n      addressId: userData.data && userData.data.addressId || '',\r\n      quantity: props.quantityCount,\r\n      couponId: couponData && couponData[0] && couponData[0].couponId,\r\n      isStandard: props.isStandard,\r\n      userAddress: userData.data?.addressLineOne + ' ' + userData.data?.addressLineTwo + ' ' +\r\n      userData.data?.addressLineThree + ' ' + userData.data?.city + ' ' + userData.data?.state +\r\n      ' ' + userData.data?.pincode + ' ' + userData.data?.country,\r\n      userName: userData.data?.firstName + ' ' + userData.data?.lastName\r\n    }))\r\n  };\r\n\r\n  return(\r\n    <>\r\n      <div id=\"paypal-button-container\"></div>\r\n      <button ref={paypalPaymentLoadingRef} id=\"payment-loading\" uk-toggle=\"target: #paypal-div\" type=\"button\">order</button>\r\n      <div id=\"paypal-div\" uk-modal=\"true; esc-close: false; bg-close: false\">\r\n        <div className=\"uk-modal-dialog uk-modal-body uk-margin-auto-vertical\">\r\n        {\r\n          (paymentSuccess || paymentErroredOut)  &&  <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n        }\r\n        <div ref={paypalModalRef} className=\"uk-modal-body uk-nav-center\">\r\n          <p>{paypalPaymentMessage}</p>\r\n            {\r\n              !paymentSuccess && !paymentErroredOut && <div  uk-spinner=\"true\"></div>\r\n            }\r\n            {\r\n              paymentSuccess && !paymentErroredOut && \r\n              <>\r\n              <span className=\"uk-label uk-label-success\">Redirecting to Orders <div  uk-spinner=\"true\"></div></span>\r\n              </>\r\n            }\r\n            {\r\n              paymentErroredOut && <span className=\"uk-label uk-label-danger\">Payment Failed</span> \r\n            } \r\n        </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport {\r\n  PayPalPayment\r\n}","import React, { useState, useEffect, Dispatch, SetStateAction } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppState, resendOTP } from 'reducers';\r\n\r\ninterface Props{\r\n  showOtpContainer: boolean;\r\n  setEnteredOTP: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\n\r\nconst CashOnDeliveryPayment: React.FunctionComponent<Props> = (props: Props) => {\r\n  const {\r\n    showOtpContainer\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n  const [timeLeft, setTimeLeft] = useState(30);\r\n  const [enteredOTP, setEnteredOTP] = useState('');\r\n  const checkout = useSelector((state: AppState) => state.checkout);\r\n\r\n  useEffect(()=> {\r\n    if(showOtpContainer){\r\n      const timer = setInterval(() => {\r\n        if(timeLeft > 0) {\r\n          setTimeLeft(timeLeft - 1);\r\n        }\r\n      },1000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  });\r\n\r\n  const resendOtpToCustomer = () => {\r\n    dispatch(resendOTP());\r\n    setTimeLeft(30)\r\n  };\r\n  return (\r\n    <section className=\"uk-card-body\">\r\n      <div className=\"uk-grid-small  uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n        <div className=\"uk-width-expand\">\r\n          <div className=\"uk-text-small\">Enter OTP</div>\r\n          {\r\n            timeLeft > 0 && !checkout._isError &&\r\n            <div className=\"uk-text-meta uk-text-small uk-text-danger\">Retry in {timeLeft}sec</div>\r\n          }\r\n        </div>\r\n        <div className=\"uk-text-right\">\r\n          <input \r\n            className=\"uk-input\"\r\n            type=\"text\"\r\n            value={enteredOTP}\r\n            onChange={(e) => {setEnteredOTP(e.currentTarget.value); props.setEnteredOTP(e.currentTarget.value)}}/>\r\n          {\r\n             timeLeft === 0 && !checkout._isError &&\r\n             <a \r\n            className=\"uk-text-meta uk-text-small uk-text-success uk-link-muted\"\r\n            onClick={()=> resendOtpToCustomer()}>Resend OTP</a>\r\n          }\r\n        </div>\r\n      </div>\r\n      {\r\n        checkout._isError && \r\n      <div className=\"uk-text-meta uk-text-small uk-text-danger\">{checkout.message}</div>\r\n      }\r\n      {\r\n        checkout._isFetchCodCodeSuccess && \r\n        <div className=\"login-error-message\">\r\n        <span className=\"uk-notification-message-success uk-text-meta uk-text-small uk-text-success\"> {checkout.message} </span>\r\n      </div>\r\n      }\r\n      \r\n    </section>\r\n  )\r\n}\r\n\r\nexport {\r\n  CashOnDeliveryPayment\r\n}","import React from 'react';\r\nimport { ProductItem, CustomerCart } from 'types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { getCurrencyIcon, calculateUserDiscount, showINRUSD } from 'services';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, UserLocation, Cart, addUpdateCart } from 'reducers';\r\n\r\ninterface Props {\r\n  productList: ProductItem[]\r\n}\r\n\r\nconst QuickProductList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n\r\n  const addToCart = (product: ProductItem)=> {\r\n    if(!userData.data?.userId){\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: product.productDetailId,\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: showINRUSD(userLocation.data || 'IN', product),\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, false))\r\n    } else {\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: '0',\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: '0',\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, true))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <div uk-slider=\"finite: true\">\r\n        <div className=\"uk-grid-small uk-flex-middle uk-margin-bottom\" uk-grid=\"true\">\r\n          <h2 className=\"uk-width-expand uk-text-center uk-text-left@s\">Related Products</h2>\r\n          <div className=\"uk-visible@s\">\r\n            <a className=\"tm-slidenav\" href=\"#\" uk-slider-item=\"previous\" uk-slidenav-previous=\"true\"></a>\r\n            <a className=\"tm-slidenav\" href=\"#\" uk-slider-item=\"next\" uk-slidenav-next=\"true\"></a>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n          <div className=\"uk-position-relative\">\r\n            <div className=\"uk-slider-container\">\r\n              <div className=\"uk-slider-items uk-grid-collapse uk-child-width-custom tm-products-grid\">\r\n                {\r\n                  props.productList.map((product, index) => {\r\n                    return (\r\n                      <article key={index} className=\"tm-product-card\">\r\n                        <div className=\"tm-product-card-media\">\r\n                          <div className=\"tm-ratio tm-ratio-4-3\">\r\n                            <a className=\"tm-media-box\" onClick={() => {window.scrollTo({top:0, behavior:'smooth'}); history.push('/productDetails/' + product.productId)}}>\r\n                              <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + product.imagePaths} alt={product.imageNames} /></figure>\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"tm-product-card-body\">\r\n                          <div className=\"tm-product-card-info\">\r\n                            <div className=\"uk-text-meta uk-margin-xsmall-bottom\">{product.productCategoryName}</div>\r\n                            <h3 className=\"tm-product-card-title\"><a className=\"uk-link-heading\" onClick={() => history.push('/productDetails/' + product.productId)}>{product.name}</a></h3>\r\n                          </div>\r\n                          <div className=\"tm-product-card-shop\">\r\n                            <div className=\"tm-product-card-prices\">\r\n                              {\r\n                                userData.data?.discount && userData.data?.discount !== '0' &&\r\n                                <del className=\"uk-text-meta\">{getCurrencyIcon(userLocation.data || 'IN')} {showINRUSD(userLocation.data || 'IN', product)}</del>\r\n                              }\r\n                              <div className=\"tm-product-card-price\">\r\n                                {getCurrencyIcon(userLocation.data || 'IN')} {calculateUserDiscount(userData.data?.discount || '0', showINRUSD(userLocation.data || 'IN', product))}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"tm-product-card-add\">\r\n                              <button className=\"uk-button uk-button-primary tm-product-card-add-button tm-shine js-add-to-cart\">\r\n                                {\r\n                                  cart._isLoading && <span uk-spinner=\"true\"></span>\r\n                                }\r\n                                {\r\n                                  !cart._isLoading && (\r\n                                    <>\r\n                                      <span className=\"tm-product-card-add-button-icon\" uk-icon=\"cart\" onClick={() => addToCart(product)}></span>\r\n                                      <span className=\"tm-product-card-add-button-text\">add to cart</span>\r\n                                    </>\r\n                                  )\r\n                                }\r\n\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </article>\r\n                    )\r\n                  })\r\n                }\r\n\r\n              </div>\r\n            </div>\r\n            <ul className=\"uk-slider-nav uk-dotnav uk-flex-center uk-margin-top uk-hidden@s\"></ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </section>\r\n  )\r\n}\r\n\r\nexport {\r\n  QuickProductList\r\n}","import React from 'react';\r\n\r\ninterface Props{\r\n  keyIndex: number\r\n}\r\nconst LoadingProductArticle: React.FunctionComponent<Props> = (props: Props) => {\r\n  return (\r\n    <article key={props.keyIndex} className=\"tm-product-card\">\r\n      <div className=\"tm-product-card-media\">\r\n        <div className=\"tm-ratio tm-ratio-4-3\">\r\n          <a className=\"tm-media-box\">\r\n            <figure className=\"tm-media-box-wrap\">\r\n              <div className=\"ph-item\">\r\n                <div className=\"ph-picture\"></div>\r\n              </div>\r\n            </figure>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div className=\"tm-product-card-body\">\r\n        <div className=\"tm-product-card-info\">\r\n          <div className=\"uk-text-meta uk-margin-xsmall-bottom\">\r\n            <div className=\"ph-item\">\r\n              <div>\r\n                <div className=\"ph-row\">\r\n                  <div className=\"ph-col-4\"></div>\r\n                  <div className=\"ph-col-8 empty\"></div>\r\n                  <div className=\"ph-col-6\"></div>\r\n                  <div className=\"ph-col-6 empty\"></div>\r\n\r\n                  <div className=\"ph-col-12 empty\"></div>\r\n                </div>\r\n              </div>\r\n              <div className=\"ph-col-1\">\r\n                <div className=\"ph-avatar\"></div>\r\n              </div>\r\n            </div></div>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport {\r\n  LoadingProductArticle\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter, useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport { AppState, defaultPreSelectedFitler, PreSelectedFilters } from 'reducers';\r\n\r\nconst ScrollToTopComponent: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // scrolling to top\r\n    const unlisten = history.listen(() => {\r\n      if(window.location.pathname.indexOf('product') === -1){\r\n        dispatch(defaultPreSelectedFitler());\r\n      }\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    }\r\n  }, []);\r\n\r\n  return (null);\r\n}\r\n\r\nconst ScrollToTop = withRouter(ScrollToTopComponent);\r\n\r\nexport {\r\n  ScrollToTop\r\n} ","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst ContactUs: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a onClick={()=>history.push('/')}>Home</a></li>\r\n                <li><span>Contacts</span></li>\r\n              </ul>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom\">Contacts</h1>\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n                <section className=\"uk-width-1-1 uk-width-expand@m\">\r\n                  <article className=\"uk-card uk-card-default uk-card-small uk-card-body uk-article tm-ignore-container\">\r\n                    <div className=\"uk-child-width-1-1 uk-child-width-1-2@s uk-margin-top\" uk-grid=\"true\">\r\n                      <section>\r\n                        <h3>Store</h3>\r\n                        <ul className=\"uk-list\">\r\n                          {/* <li>\r\n                            <a className=\"uk-link-heading\" href=\"#\"><span className=\"uk-margin-small-right\" uk-icon=\"receiver\"></span><span className=\"tm-pseudo\">8 800 799 99 99</span></a>\r\n                          </li>\r\n                          <li>\r\n                            <a className=\"uk-link-heading\" href=\"#\"><span className=\"uk-margin-small-right\" uk-icon=\"mail\"></span><span className=\"tm-pseudo\">example@example.com</span></a>\r\n                          </li> */}\r\n                          <li>\r\n                            <div><span className=\"uk-margin-small-right\" uk-icon=\"location\"></span><span>Karol Bagh Market, Delhi</span></div>\r\n                          </li>\r\n                          <li>\r\n                            <div><span className=\"uk-margin-small-right\" uk-icon=\"clock\"></span><span>Daily 10:00–20:00</span></div>\r\n                          </li>\r\n                        </ul>\r\n                      </section>\r\n                      <section>\r\n                        <h3>Feedback</h3>\r\n                        <dl className=\"uk-description-list\">\r\n                          <dt>Support</dt>\r\n                          <dd><a className=\"uk-link-muted\" href=\"mailto:support@basickart.com\">support@basickart.com</a></dd>\r\n                        </dl>\r\n                      </section>\r\n                      {/* <section className=\"uk-width-1-1\">\r\n                        <h2 className=\"uk-text-center\">Contact Us</h2>\r\n                        <form>\r\n                          <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label uk-form-label-required\">Name</div>\r\n                                <input className=\"uk-input\" type=\"text\" required />\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label uk-form-label-required\">Email</div>\r\n                                <input className=\"uk-input\" type=\"email\" required />\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Topic</div>\r\n                                <select className=\"uk-select\">\r\n                                  <option>Customer service</option>\r\n                                  <option>Tech support</option>\r\n                                  <option>Other</option>\r\n                                </select>\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Message</div>\r\n                                <textarea className=\"uk-textarea\"></textarea>\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"uk-text-center\"><button className=\"uk-button uk-button-primary\">Send</button></div>\r\n                          </div>\r\n                        </form>\r\n                      </section> */}\r\n                    </div>\r\n                  </article>\r\n                </section>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  ContactUs\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst About: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <section className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a onClick={()=> history.push('/')}>Home</a></li>\r\n                <li><span>About</span></li>\r\n              </ul>\r\n            </section>\r\n            <section>\r\n              <div>\r\n                <article className=\"uk-card uk-card-default uk-card-body uk-article tm-ignore-container\">\r\n                  <header className=\"uk-text-center\"><h1 className=\"uk-article-title\">About</h1></header>\r\n                  <div className=\"uk-article-body\">\r\n                    <p>\r\n                    Your style is your statement,nail it with class at Basickart.\r\nWe have curated a range of premium products to cast an impression everytime you choose us.Our focus is to bring together Multi-brand showcasing good quality products.\r\nFrom women’s bindis,shoes,lingerie to high end home accessories under one roof .\r\nYou don’t have to worry about the latest fashion trends anymore as we update our catalog every week to keep you one step ahead.\r\n                                            </p>\r\n                    <h2 className=\"uk-text-center\">Happy Shopping At Basickart</h2>\r\n                    {/* <ul className=\"uk-list uk-list-bullet\">\r\n                      <li>\r\n                        We will provide the best quality. Our quality will be top notch, we use traditonal method of handcraft.\r\n                        This gives the best result.\r\n                                                </li>\r\n                      <li>\r\n                        The rates will the cheapest you can ever get. Since we have our own production house, we are direct producer\r\n                        of each item sold here. You can expect further discount for bulk order.\r\n                                                </li>\r\n                      <li>\r\n                        We want you to grow your business and be happy. Happiness is all that we want. So, buy without any thought\r\n                        and enjoy the happiness.\r\n                                                </li>\r\n                    </ul> */}\r\n                    {/* <h2 className=\"uk-text-center\">Our team</h2>\r\n                    <div className=\"uk-child-width-1-1 uk-child-width-1-2@s uk-child-width-1-3@m\" uk-grid>\r\n                      <div>\r\n                        <div className=\"uk-grid-small uk-flex-middle\" uk-grid>\r\n                          <div><img src=\"images/about/thomas.svg\" alt=\"Thomas Bruns\" width=\"80\" height=\"80\" /></div>\r\n                          <div className=\"uk-width-expand\">\r\n                            <div>Tarun Batra</div>\r\n                            <div className=\"uk-text-meta\">Co-founder & CEO</div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div>\r\n                        <div className=\"uk-grid-small uk-flex-middle\" uk-grid>\r\n                          <div><img src=\"images/about/george.svg\" alt=\"George Clanton\" width=\"80\" height=\"80\" /></div>\r\n                          <div className=\"uk-width-expand\">\r\n                            <div>Tarun Batra</div>\r\n                            <div className=\"uk-text-meta\">Co-founder & President</div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div>\r\n                        <div className=\"uk-grid-small uk-flex-middle\" uk-grid>\r\n                          <div><img src=\"images/about/martin.svg\" alt=\"Martin Cade\" width=\"80\" height=\"80\" /></div>\r\n                          <div className=\"uk-width-expand\">\r\n                            <div>Tarun Batra</div>\r\n                            <div className=\"uk-text-meta\">Co-founder & CTO</div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <h2 className=\"uk-text-center\">Some stats</h2>\r\n                    <div className=\"uk-child-width-1-1 uk-child-width-1-3@s uk-text-center\" uk-grid>\r\n                      <div>\r\n                        <div className=\"uk-heading-primary uk-text-warning\">5+</div>\r\n                        <div className=\"uk-margin-small-top\">years on the market</div>\r\n                      </div>\r\n                      <div>\r\n                        <div className=\"uk-heading-primary uk-text-warning\">150+</div>\r\n                        <div className=\"uk-margin-small-top\">orders per day</div>\r\n                      </div>\r\n                      <div>\r\n                        <div className=\"uk-heading-primary uk-text-warning\">75000+</div>\r\n                        <div className=\"uk-margin-small-top\">clients</div>\r\n                      </div>\r\n                    </div> */}\r\n                  </div>\r\n                </article>\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  About\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst ReturnPolicy: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <section className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a onClick={() => history.push('/')}>Home</a></li>\r\n                <li><span>Refund Policy</span></li>\r\n              </ul>\r\n            </section>\r\n            <section>\r\n              <div>\r\n                <article className=\"uk-card uk-card-default uk-card-body uk-article tm-ignore-container\">\r\n                  {/* <header className=\"uk-text-center\"><h1 className=\"uk-article-title\">Refund Policy</h1></header> */}\r\n                  <div className=\"uk-article-body\">\r\n                    <h2 className=\"uk-text-center\">Exchange / Return Policy</h2>\r\n                    <p>\r\n                      Our return policy lasts 10 days from the date of purchase.\r\n                      <br />\r\n                      <br />\r\n                      To complete your return, Please log into your Basickart account and raise a return request in your order summary page.\r\n                      <br />\r\n                      <br />\r\n                      After receiving your request , we will schedule a reverse pickup from your shipping address and our courier partner will contact you for picking the product back.\r\n                      <br />\r\n                      <br />\r\n                      To be eligible for a return, your item must be:\r\n                      <ul>\r\n                        <li>\r\n                          Unused and in the same condition that you received it\r\n                        </li>\r\n                        <li>\r\n                          In the original packaging\r\n                        </li>\r\n                        <li>\r\n                          Any item not in its original condition is damaged or missing parts for reasons not due to our error will not be exchanged\r\n                        </li>\r\n                      </ul>\r\n\r\n\r\n                    </p>\r\n                    <h2 className=\"uk-text-center\">Refunds (if applicable)</h2>\r\n                    <p>\r\n                      Once your return is received, we will inspect the product.\r\n                    <br />\r\n                      <br />\r\n                    If its approved, then your refund will be initiated to your original payment method. A notification will be sent to you confirming the same.In case of cash on delivery our team will contact you and we will reverse the payment as per your directions.\r\n                    <br /><br />\r\n                    In case of rejection, We will notify you via your registered email or mobile no. You can contact us back for any further communication.\r\n                      </p>\r\n                    <h2 className=\"uk-text-center\">Cancellations </h2>\r\n                    <p>\r\n                      You can cancel your orders before it is shipped by clicking on CANCEL ITEM\r\n                      or contacting us, the full invoice amount will be refunded to your original payment method. Once the item is shipped it cannot be cancelled.\r\n\r\n                    <br /><br />\r\n                      For International returns buyer will have to pay for return postage and once we receive the product at our warehouse after inspection we will refund the payment through original payment method.\r\n                      </p>\r\n                  </div>\r\n                </article>\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n    </main>\r\n  )\r\n}\r\nexport {\r\n  ReturnPolicy\r\n}","import React from 'react';\r\nimport * as Yup from 'yup';\r\n\r\nimport { User } from 'types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { UserInformation as UserInfo, saveUser } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport { CountryCodes } from 'appConstants';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\n\r\ninterface Props {\r\n  user?: UserInfo;\r\n  fromCart? : boolean\r\n};\r\n\r\n\r\nconst UserInformation: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const userData = props.user;\r\n  const isLoading = props.user?._isLoading;\r\n\r\n  const userInformationFormik = useFormik({\r\n    initialValues: {\r\n      firstName: userData?.data?.firstName || '',\r\n      lastName: userData?.data?.lastName || '',\r\n      mobile: userData?.data?.mobile || '',\r\n      dob: userData?.data?.dob || '',\r\n      gender: userData?.data?.gender || '',\r\n      country: userData?.data?.country || CountryCodes.filter(country => country.default)[0].countryCode,\r\n      state: userData?.data?.state || '',\r\n      city: userData?.data?.city || '',\r\n      pincode: userData?.data?.pincode || '',\r\n      addressLineOne: userData?.data?.addressLineOne || '',\r\n      addressLineTwo: userData?.data?.addressLineTwo || '',\r\n      addressLineThree: userData?.data?.addressLineThree || '',\r\n      addressId: userData?.data?.addressId || ''\r\n    },\r\n\r\n    validationSchema: Yup.object({\r\n      firstName: Yup.string().required('Required'),\r\n      mobile: Yup.string().required('Required').matches(/^((\\+)(\\d{1,4}[-]))(\\d{10}){1}?$/, 'Valid Format e.g., +91-9876543210'),\r\n      country: Yup.string().required('Required'),\r\n      state: Yup.string().required('Required'),\r\n      city: Yup.string().required('Required'),\r\n      pincode: Yup.string().required('Required'),\r\n      addressLineOne: Yup.string().required('Required')\r\n    }),\r\n\r\n    onSubmit: (value: User) => {\r\n      dispatch(saveUser({...value, discount: userData?.data?.discount}));\r\n    },\r\n\r\n    enableReinitialize: true\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={userInformationFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        {\r\n          !props.fromCart && <header className=\"uk-card-header\"><h1 className=\"uk-h2\">Personal Information</h1></header>\r\n        }\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Contact</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">First Name <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"firstName\"\r\n                        {...userInformationFormik.getFieldProps(\"firstName\")} />\r\n                      {\r\n                        userInformationFormik.touched.firstName && userInformationFormik.errors.firstName ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.firstName}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Last Name <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"lastName\"\r\n                        {...userInformationFormik.getFieldProps(\"lastName\")} />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Phone Number <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"tel\" id=\"mobile\"\r\n                        {...userInformationFormik.getFieldProps('mobile')} />\r\n                      {\r\n                        userInformationFormik.touched.mobile && userInformationFormik.errors.mobile ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.mobile}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Date of Birth</div>\r\n                      <input className=\"uk-input\" type=\"date\" id=\"dob\"\r\n                        {...userInformationFormik.getFieldProps('dob')} />\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Gender</div>\r\n                      <select className=\"uk-select\" id=\"gender\"\r\n                        {...userInformationFormik.getFieldProps('gender')}>\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"M\">Male</option>\r\n                        <option value=\"F\">Female</option>\r\n                        <option value=\"O\">Other</option>\r\n                      </select>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Address</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Country <span className=\"uk-text-danger\">*</span></div>\r\n                      <select className=\"uk-select\" id=\"country\"\r\n                        {...userInformationFormik.getFieldProps('country')}>\r\n                        {\r\n                          CountryCodes.map((country, index) => {\r\n                            return <option key={index} value={country.countryCode}>{country.name}</option>\r\n                          })\r\n                        }\r\n                      </select>\r\n                      {\r\n                        userInformationFormik.touched.country && userInformationFormik.errors.country ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.country}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">State <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"state\"\r\n                        {...userInformationFormik.getFieldProps('state')} />\r\n                      {\r\n                        userInformationFormik.touched.state && userInformationFormik.errors.state ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.state}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">City <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"city\"\r\n                        {...userInformationFormik.getFieldProps('city')} />\r\n                      {\r\n                        userInformationFormik.touched.city && userInformationFormik.errors.city ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.city}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">PIN code</div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"pincode\"\r\n                        {...userInformationFormik.getFieldProps('pincode')} />\r\n                      {\r\n                        userInformationFormik.touched.pincode && userInformationFormik.errors.pincode ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.pincode}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-1-1\">\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Flat, House no., Building, Company, Apartment  <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"addressLineOne\"\r\n                        {...userInformationFormik.getFieldProps('addressLineOne')} />\r\n                      {\r\n                        userInformationFormik.touched.addressLineOne && userInformationFormik.errors.addressLineOne ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.addressLineOne}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-1-1\">\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Area, Colony, Street, Sector, Village</div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"addressLineTwo\"\r\n                        {...userInformationFormik.getFieldProps('addressLineTwo')} />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-1-1\">\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Landmark</div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"addressLineThree\"\r\n                        {...userInformationFormik.getFieldProps('addressLineThree')} />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          {\r\n            props.user &&\r\n            <NotificationContainer {...props.user}/>\r\n          }\r\n          \r\n          <button disabled={isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              isLoading &&\r\n              <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserInformation\r\n}\r\n","import React, { useState } from 'react';\r\n\r\ninterface Props {\r\n  toggelDetails: Function;\r\n  showSettings: boolean;\r\n  showPersonal: boolean;\r\n  showOrders: boolean;\r\n}\r\n\r\nconst UserNav: React.FunctionComponent<Props> = (props: Props)=> {\r\n\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-1-4@m tm-aside-column user-nave-sticky\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\" uk-sticky=\"offset: 50; bottom: true; width-element: true\">\r\n        <div className=\"uk-card-header\">\r\n          <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div>\r\n              <div className=\"uk-grid-small uk-flex-center\" uk-grid=\"true\">\r\n                <div>\r\n                  <a className=\"uk-button uk-button-default uk-button-small\"><span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: cog; ratio: .75;\"></span><span>Quick Links</span></a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <nav>\r\n            <ul className=\"uk-nav uk-nav-default tm-nav quick-links\">\r\n              <li className={props.showPersonal ? 'uk-active' : ''}>\r\n                <a onClick={(): void => {props.toggelDetails('personal')}}>Personal Information</a>\r\n              </li>\r\n              <li className={props.showOrders ? 'uk-active' : ''}>\r\n                <a onClick={(): void => {props.toggelDetails('orders')}}>Orders</a>\r\n              </li>\r\n              <li className={props.showSettings ? 'uk-active' : ''}>\r\n                <a onClick={(): void => {props.toggelDetails('settings')}}>Settings</a>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { UserNav };","import React from 'react';\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { UserSetting, saveUserSettings } from 'reducers';\r\nimport { useDispatch } from 'react-redux';\r\nimport { UserSettings as UserSettingType } from 'types';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\n\r\ninterface Props {\r\n  user?: UserSetting;\r\n}\r\n\r\nconst UserSettings: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const user = props.user;\r\n  const isLoading = props.user?._isLoading;\r\n  const dispatch = useDispatch();\r\n  const userSettingFormik = useFormik({\r\n    initialValues: {\r\n      emailAddress: user?.data?.emailAddress || '',\r\n      currentPassword: '',\r\n      newPassword: '',\r\n      confirmPassword: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      emailAddress: Yup.string().required('Required'),\r\n      currentPassword: Yup.string().required('Required'),\r\n      newPassword: Yup.string().required('Required'),\r\n      confirmPassword: Yup.string().required('Required').oneOf([Yup.ref('newPassword'), ''], 'Password should match')\r\n    }),\r\n    onSubmit: (value: UserSettingType) => {\r\n      dispatch(saveUserSettings(value));\r\n      userSettingFormik.resetForm();\r\n    },\r\n\r\n    enableReinitialize: true\r\n  });\r\n\r\n\r\n  return (\r\n    <form onSubmit={userSettingFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <header className=\"uk-card-header\"><h1 className=\"uk-h2\">Settings</h1></header>\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Email</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Current Email</div>\r\n                      <input className=\"uk-input\" id=\"emailAddress\" type=\"email\" disabled\r\n                        {...userSettingFormik.getFieldProps('emailAddress')} />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Password</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Current Password</div>\r\n                      <input className=\"uk-input \" id=\"currentPassword\" type=\"password\"\r\n                        {...userSettingFormik.getFieldProps('currentPassword')} />\r\n                      {\r\n                        userSettingFormik.touched.currentPassword && userSettingFormik.errors.currentPassword ? (\r\n                          <span className=\"uk-text-danger\">{userSettingFormik.errors.currentPassword}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">New Password</div>\r\n                      <input className=\"uk-input \" type=\"password\"\r\n                        {...userSettingFormik.getFieldProps('newPassword')} />\r\n                      {\r\n                        userSettingFormik.touched.newPassword && userSettingFormik.errors.newPassword ? (\r\n                          <span className=\"uk-text-danger\">{userSettingFormik.errors.newPassword}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Confirm Password</div>\r\n                      <input className=\"uk-input \" type=\"password\"\r\n                        {...userSettingFormik.getFieldProps('confirmPassword')} />\r\n                      {\r\n                        userSettingFormik.touched.confirmPassword && userSettingFormik.errors.confirmPassword ? (\r\n                          <span className=\"uk-text-danger\">{userSettingFormik.errors.confirmPassword}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n        {\r\n            props.user &&\r\n            <NotificationContainer {...props.user}/>\r\n          }\r\n          <button disabled={isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              isLoading &&\r\n              <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n            }\r\n            <span>update password</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserSettings\r\n}","import React, { useEffect, useState, useRef } from 'react';\r\nimport { CustomerOrders, getCustomerOrders, customerProductReturn, defaulOrderReturn } from 'reducers/Order';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport jsPDF from 'jspdf';\r\n\r\nimport { AppState, UserLocation, getShippers, UserInformation } from 'reducers';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { pageSize, serverImagePath, AllowReturn } from 'appConstants';\r\nimport { Invoice, Order, OrderItems, OrderShipper } from 'types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getCurrencyIcon, returnInvoiceHtml } from 'services';\r\n\r\nconst Orders: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [hasMoreOrders, setHasMoreOrders] = useState(false);\r\n  const [selectedReason, setSelectedReason] = useState('');\r\n  const [showOrderDetailIndex, setShowOrderDetailIndex] = useState<number[]>([]);\r\n  const [returnOrderDetailId, setReturnOrderDetailId] = useState('');\r\n  const [returnOrderNumber, setReturnOrderNumber] = useState('');\r\n  const [returnProductName, setReturnProductName] = useState('');\r\n  const [showReturnError, setShowReturnError] = useState(false);\r\n  const returnModalRef = useRef<HTMLDivElement>(null);\r\n  const returnButtonRef = useRef<HTMLButtonElement>(null);\r\n  const orders = useSelector<AppState, CustomerOrders>(state => state.customerOrders || []);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const shipperData = useSelector<AppState, OrderShipper[]>(state => state.shipper.data || []);\r\n  const userData = useSelector<AppState, UserInformation>(state => state.user);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCustomerOrders(orders.data?.length || 0, pageSize));\r\n    dispatch(getShippers());\r\n  }, [])\r\n  const fetchNextOrders = () => {\r\n    dispatch(getCustomerOrders(orders.data?.length || 0, pageSize));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (orders._isOrderUpdate && returnModalRef.current?.getBoundingClientRect().top !== 0) {\r\n      const that = returnButtonRef.current;\r\n      setTimeout(() => {\r\n        that?.click();\r\n      }, 1000);\r\n    }\r\n  }, [orders._isOrderUpdate])\r\n\r\n  useEffect(() => {\r\n    setHasMoreOrders(orders._hasMoreOrders || false);\r\n  }, [orders._hasMoreOrders]);\r\n\r\n\r\n  const toggleShowOrderDetails = (orderId: number) => {\r\n    if (showOrderDetailIndex.indexOf(orderId) > -1) {\r\n      setShowOrderDetailIndex(showOrderDetailIndex.filter((id) => id !== orderId))\r\n    } else {\r\n      setShowOrderDetailIndex([...showOrderDetailIndex, orderId]);\r\n    }\r\n  }\r\n\r\n  const getShipmentLink = (shipper?: string, trackingNumber?: string) => {\r\n    if (shipper && trackingNumber) {\r\n      const shipperInfo = shipperData.filter(({ shipperId }) => shipperId === shipper);\r\n      if (shipperInfo[0]) {\r\n        return <a target=\"_blank\" href={shipperInfo[0].trackingLink + trackingNumber}>Track Package</a>\r\n      }\r\n    }\r\n    return 'Order Recived'\r\n  }\r\n\r\n  const checkReturnEligibilty = (deliveryDate: string, categoryId: string) => {\r\n    if (AllowReturn.indexOf(categoryId.toString()) > -1) {\r\n      const dateDifference = (new Date()).getTime() - (new Date(deliveryDate)).getTime();\r\n      const differenceInDays = dateDifference / (1000 * 3600 * 24);\r\n      return Math.ceil(differenceInDays) <= 30;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const returnOrder = (orderDetailId?: string, reason?: string,\r\n    orderNumber?: string, productName?: string) => {\r\n    if (selectedReason || reason) {\r\n      setShowReturnError(false);\r\n      dispatch(customerProductReturn(Number(orderDetailId) || Number(returnOrderDetailId),\r\n        reason || selectedReason, orderNumber || returnOrderNumber, productName || returnProductName, userData.data?.firstName));\r\n    } else {\r\n      setShowReturnError(true);\r\n    }\r\n  }\r\n\r\n  const downloadInvoice = async (invoiceNumber: string, productName: string, quantity: string, totalAmount: string) => {\r\n    var doc = new jsPDF('l', 'px', 'a4', true)\r\n    const invoiceData: Invoice = {\r\n      clientName: userData.data?.firstName + ' ' + userData.data?.lastName,\r\n      invoiceDate: (new Date).toLocaleDateString(\"en-US\"),\r\n      clientAddress: userData.data?.addressLineOne + ' ' + userData.data?.addressLineTwo + ' ' +\r\n        userData.data?.addressLineThree + ' ' + userData.data?.city + ' ' + userData.data?.state +\r\n        ' ' + userData.data?.pincode + ' ' + userData.data?.country,\r\n      invoiceNumber,\r\n      productName,\r\n      quantity,\r\n      totalAmount,\r\n      rate: Math.ceil(Number(totalAmount) / Number(quantity)).toString()\r\n    }\r\n    await doc.html(returnInvoiceHtml(invoiceData), { x: 10, y: 10 })\r\n    doc.save( invoiceNumber+\".pdf\")\r\n  }\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card  uk-card-small tm-ignore-container\">\r\n        {\r\n          orders.data && orders.data.length === 0 ?\r\n            <div className=\"uk-card uk-card-default uk-grid-collapse uk-child-width-1-1@s uk-margin\" uk-grid=\"true\">\r\n              <div>\r\n                <div className=\"uk-card-body uk-nav-center\">\r\n                  <p>You haven't ordered anything. Start some shopping now !!</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            :\r\n            <InfiniteScroll\r\n              dataLength={orders.data && orders.data.length || 0}\r\n              next={fetchNextOrders}\r\n              hasMore={hasMoreOrders}\r\n              loader={\r\n                <div style={{ textAlign: \"center\", marginTop: \"10px\" }}>\r\n                  <h4>Loading...</h4>\r\n                </div>\r\n              }\r\n              endMessage={\r\n                <p style={{ textAlign: \"center\" }}>\r\n                  <b>That's all for now !</b>\r\n                </p>\r\n              }\r\n            >\r\n              {\r\n                orders && orders.data &&\r\n                orders.data.map((order: Order, index: number) => {\r\n                  return (\r\n                    <div key={index} className=\"uk-card uk-card-hover uk-card-default uk-width-1-1@m\">\r\n                      <div className=\"uk-card-header\">\r\n                        <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                          <div className=\"uk-width-expand\">\r\n                            <div className=\"uk-float-left\">\r\n                              <h3 className=\"uk-card-title uk-margin-remove-bottom\">#{order.orderNumber}</h3>\r\n                              <p className=\"uk-text-meta uk-margin-remove-top\"><time>Ordered on {order.paymentDate.split(' ')[0]}</time></p>\r\n                            </div>\r\n                            <p className=\"uk-text-normal uk-margin-remove-top uk-float-right\"><time>Order Cost: {getCurrencyIcon(userLocation.data || 'IN')} {order.totalPrice}</time></p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {\r\n                        showOrderDetailIndex.indexOf(Number(order.orderId)) === -1 &&\r\n                        <div className=\"uk-card uk-grid-collapse uk-child-width-1-3@s uk-margin uk-margin-remove-top\" uk-grid=\"true\">\r\n                          <div className=\"uk-card-media-left\">\r\n                            <div className=\"tm-ratio tm-ratio-16-9\">\r\n                              <a className=\"tm-media-box\" onClick={() => history.push('/productDetails/' + order.orderItems[0].productId)}>\r\n                                <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + order.orderItems[0].productImage} alt={order.orderItems[0].productImage} /> </figure>\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"uk-card-body\">\r\n                              {/* <h3 className=\"uk-card-title\">Media Left</h3> */}\r\n                              <ul className=\"uk-list\">\r\n                                <li>Product : <a onClick={() => history.push('/productDetails/' + order.orderItems[0].productId)}>{order.orderItems[0].productName}</a></li>\r\n                                <li>Quantity: {order.orderItems[0].quantity}</li>\r\n                                <li>Price: {getCurrencyIcon(userLocation.data || 'IN')} {order.orderItems[0].productPrice}</li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"uk-card-body\">\r\n                              {\r\n                                (order.orderItems[0].shipmentDetails?.returnStatus ||\r\n                                  order.orderItems[0].shipmentDetails?.paymentReturned) ?\r\n                                  <ul className=\"uk-list\">\r\n                                    {\r\n                                      order.orderItems[0].shipmentDetails?.paymentReturned === 'Yes' ?\r\n                                        <li>Return Status: <span className=\"uk-label uk-label-success\">Retured</span></li>\r\n                                        : order.orderItems[0].shipmentDetails?.paymentReturned === 'No' ?\r\n                                          <li>Return Status: <span className=\"uk-label uk-label-danger\">Declined</span></li>\r\n                                          : <li>Return Status: <span className=\"uk-label uk-label-warning\">{order.orderItems[0].shipmentDetails?.returnStatus}</span></li>\r\n                                    }\r\n                                  </ul>\r\n                                  :\r\n                                  order.orderItems[0].shipmentDetails?.deliveryDate ?\r\n                                    <ul className=\"uk-list\">\r\n                                      <li>Status : <span className=\"uk-label uk-label-success\">Delivered</span></li>\r\n                                      <li>Delivery Date: <span>{order.orderItems[0].shipmentDetails?.deliveryDate}</span></li>\r\n                                      {\r\n                                        checkReturnEligibilty(order.orderItems[0].shipmentDetails?.deliveryDate, order.orderItems[0].categoryId) &&\r\n                                        <li><button className=\"uk-button uk-button-primary uk-button-small\" uk-toggle=\"target: #return-modal\"\r\n                                          onClick={() => {\r\n                                            setSelectedReason('');\r\n                                            dispatch(defaulOrderReturn());\r\n                                            setReturnOrderDetailId(order.orderItems[0].orderDetailId);\r\n                                            setReturnProductName(order.orderItems[0].productName);\r\n                                            setReturnOrderNumber(order.orderNumber);\r\n                                          }}>Return</button></li>\r\n                                      }\r\n                                      <li>Invoice : <a onClick={() => downloadInvoice(order.orderNumber,order.orderItems[0].productName,order.orderItems[0].quantity,order.orderItems[0].productPrice)}>Download</a></li>\r\n                                    </ul>\r\n                                    :\r\n                                    <ul className=\"uk-list\">\r\n                                      <li>Status : {getShipmentLink(order.orderItems[0].shipmentDetails?.shipper, order.orderItems[0].shipmentDetails?.trackingNumber)}</li>\r\n                                      <li>Shipment Date: <span>{order.orderItems[0].shipmentDetails?.shippingDate ? order.orderItems[0].shipmentDetails?.shippingDate : 'Awaited'}</span></li>\r\n                                      <li>\r\n                                        <button className=\"uk-button uk-button-primary uk-button-small\"\r\n                                          disabled={orders._isLoading}\r\n                                          {...(order.orderItems[0].shipmentDetails?.shippingDate && 'uk-toggle=\"target: #return-modal\"')}\r\n                                          onClick={() => {\r\n                                            if (order.orderItems[0].shipmentDetails?.shippingDate) {\r\n                                              setSelectedReason('');\r\n                                              dispatch(defaulOrderReturn())\r\n                                              setReturnOrderDetailId(order.orderItems[0].orderDetailId);\r\n                                              setReturnProductName(order.orderItems[0].productName);\r\n                                              setReturnOrderNumber(order.orderNumber);\r\n                                            } else {\r\n                                              setSelectedReason('Order Canceled before shipping');\r\n                                              setReturnOrderDetailId(order.orderItems[0].orderDetailId);\r\n                                              setReturnProductName(order.orderItems[0].productName);\r\n                                              setReturnOrderNumber(order.orderNumber);\r\n                                              returnOrder(order.orderItems[0].orderDetailId,\r\n                                                'Order Canceled before shipping', order.orderNumber, order.orderItems[0].productName);\r\n                                            }\r\n\r\n                                          }}>\r\n                                          {\r\n                                            orders._isLoading && <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n                                          }\r\n                                          {order.orderItems[0].shipmentDetails?.shippingDate ? 'Return' : 'Cancel'}\r\n                                        </button></li>\r\n                                    </ul>\r\n                              }\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      }\r\n                      {\r\n                        order.orderItems.length > 1 &&\r\n                        <ul uk-accordion=\"true\">\r\n                          <li>\r\n                            <a\r\n                              className=\"uk-accordion-title uk-nav-center uk-padding-bottom\"\r\n                              onClick={() => toggleShowOrderDetails(Number(order.orderId))}>\r\n                              {showOrderDetailIndex.indexOf(Number(order.orderId)) === -1 ? \"View More\" : \"View Less\"}</a>\r\n                            <div className=\"uk-accordion-content\">\r\n                              {\r\n                                order.orderItems.map((orderItem: OrderItems, index: number) => {\r\n                                  return (\r\n                                    <div key={index} className=\"uk-card uk-grid-collapse uk-child-width-1-3@s uk-margin uk-margin-remove-top\" uk-grid=\"true\">\r\n                                      <div className=\"uk-card-media-left\">\r\n                                        <div className=\"tm-ratio tm-ratio-16-9\">\r\n                                          <a className=\"tm-media-box\" onClick={() => history.push('/productDetails/' + orderItem.productId)}>\r\n                                            <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + orderItem.productImage} alt={orderItem.productImage} /> </figure>\r\n                                          </a>\r\n                                        </div>\r\n                                      </div>\r\n                                      <div>\r\n                                        <div className=\"uk-card-body\">\r\n                                          <ul className=\"uk-list\">\r\n                                            <li>Product : <a onClick={() => history.push('/productDetails/' + orderItem.productId)}>{orderItem.productName}</a></li>\r\n                                            <li>Quantity: {orderItem.quantity}</li>\r\n                                            <li>Price: {getCurrencyIcon(userLocation.data || 'IN')} {orderItem.productPrice}</li>\r\n                                          </ul>\r\n                                        </div>\r\n                                      </div>\r\n                                      <div>\r\n                                        <div className=\"uk-card-body\">\r\n                                          {\r\n                                            (orderItem.shipmentDetails?.returnStatus ||\r\n                                              orderItem.shipmentDetails?.paymentReturned) ?\r\n                                              <ul className=\"uk-list\">\r\n                                                {\r\n                                                  orderItem.shipmentDetails?.paymentReturned === 'Yes' ?\r\n                                                    <li>Return Status: <span className=\"uk-label uk-label-success\">Retured</span></li>\r\n                                                    : orderItem.shipmentDetails?.paymentReturned === 'No' ?\r\n                                                      <li>Return Status: <span className=\"uk-label uk-label-danger\">Declined</span></li>\r\n                                                      : <li>Return Status: <span className=\"uk-label uk-label-warning\">{orderItem.shipmentDetails?.returnStatus}</span></li>\r\n                                                }\r\n                                              </ul>\r\n                                              :\r\n                                              orderItem.shipmentDetails?.deliveryDate ?\r\n                                                <ul className=\"uk-list\">\r\n                                                  <li>Status : <span className=\"uk-label uk-label-success\">Delivered</span></li>\r\n                                                  <li>Delivery Date: <span>{orderItem.shipmentDetails?.deliveryDate}</span></li>\r\n                                                  {\r\n                                                    checkReturnEligibilty(orderItem.shipmentDetails?.deliveryDate, order.orderItems[0].categoryId) &&\r\n                                                    <li><button className=\"uk-button uk-button-primary uk-button-small\" uk-toggle=\"target: #return-modal\"\r\n                                                      onClick={() => {\r\n                                                        setSelectedReason('');\r\n                                                        dispatch(defaulOrderReturn());\r\n                                                        setReturnOrderDetailId(orderItem.orderDetailId);\r\n                                                        setReturnProductName(orderItem.productName);\r\n                                                        setReturnOrderNumber(order.orderNumber);\r\n                                                      }}>Return</button></li>\r\n                                                  }\r\n                                                  <li>Invoice : <a onClick={() => downloadInvoice(order.orderNumber,orderItem.productName,orderItem.quantity,orderItem.productPrice)}>Download</a></li>\r\n                                                </ul>\r\n                                                :\r\n                                                <ul className=\"uk-list\">\r\n                                                  <li>Status : {getShipmentLink(orderItem.shipmentDetails?.shipper, orderItem.shipmentDetails?.trackingNumber)}</li>\r\n                                                  <li>Shipment Date: <span>{orderItem.shipmentDetails?.shippingDate ? orderItem.shipmentDetails?.shippingDate : 'Awaited'}</span></li>\r\n                                                  <li>\r\n                                                    <button className=\"uk-button uk-button-primary uk-button-small\"\r\n                                                      disabled={orders._isLoading}\r\n                                                      {...(orderItem.shipmentDetails?.shippingDate && 'uk-toggle=\"target: #return-modal\"')}\r\n                                                      onClick={() => {\r\n                                                        if (orderItem.shipmentDetails?.shippingDate) {\r\n                                                          setSelectedReason('');\r\n                                                          setReturnOrderDetailId(orderItem.orderDetailId);\r\n                                                          setReturnProductName(orderItem.productName);\r\n                                                          setReturnOrderNumber(order.orderNumber);\r\n                                                          dispatch(defaulOrderReturn())\r\n                                                        } else {\r\n                                                          setSelectedReason('Order Canceled before shipping');\r\n                                                          setReturnOrderDetailId(orderItem.orderDetailId);\r\n                                                          setReturnProductName(orderItem.productName);\r\n                                                          setReturnOrderNumber(order.orderNumber);\r\n                                                          returnOrder(orderItem.orderDetailId, 'Order Canceled before shipping',\r\n                                                            order.orderNumber, orderItem.productName);\r\n                                                        }\r\n                                                      }\r\n                                                      }>\r\n                                                      {\r\n                                                        orders._isLoading && <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n                                                      }\r\n                                                      {orderItem.shipmentDetails?.shippingDate ? 'Return' : 'Cancel'}</button></li>\r\n                                                </ul>\r\n                                          }\r\n                                        </div>\r\n                                      </div>\r\n\r\n                                    </div>\r\n                                  )\r\n                                })\r\n                              }\r\n                            </div>\r\n                          </li>\r\n                        </ul>\r\n                      }\r\n\r\n                    </div>\r\n                  )\r\n                })\r\n\r\n              }\r\n            </InfiniteScroll>\r\n        }\r\n\r\n      </div>\r\n      <button ref={returnButtonRef} uk-toggle=\"target: #return-modal\" style={{ visibility: \"hidden\" }}></button>\r\n      <div id=\"return-modal\" uk-modal=\"true\">\r\n        <div className=\"uk-modal-dialog uk-modal-body\">\r\n          <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n          <h2 className=\"uk-modal-title\">Thank you for ordering!</h2>\r\n          <p>Please choose the correct reason for return. This information will help us to improve our site</p>\r\n          <div ref={returnModalRef} className=\"uk-form-stacked\">\r\n            <div className=\"uk-margin\">\r\n              <div className=\"uk-form-controls\">\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Defective product')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Defective product\" checked={selectedReason === 'Defective product'} /><span className=\"coupon-message\">Defective product</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Image shown did not match the actual product')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Image shown did not match the actual product\" checked={selectedReason === 'Image shown did not match the actual product'} /><span className=\"coupon-message\">Image shown did not match the actual product</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Quality Issues')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Quality Issues\" checked={selectedReason === 'Quality Issues'} /><span className=\"coupon-message\">Quality Issues</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('I changed my mind')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"I changed my mind\" checked={selectedReason === 'I changed my mind'} /><span className=\"coupon-message\">I changed my mind</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Size or fit issues')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Size or fit issues\" checked={selectedReason === 'Size or fit issues'} /><span className=\"coupon-message\">Size or fit issues</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Other')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Other\" checked={selectedReason === 'Other'} /><span className=\"coupon-message\">Other</span></label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <p><span className=\"uk-badge\">Note:</span> You confirm that the product is unused with the original tags intact.</p>\r\n          {\r\n            showReturnError &&\r\n            <p className=\"uk-text-danger\">Please select one of the above reason.</p>\r\n          }\r\n          <p className=\"uk-text-right\">\r\n            {\r\n              !orders._isOrderUpdate ?\r\n                <button disabled={orders._isLoading}\r\n                  className=\"uk-button uk-button-primary\" type=\"button\" onClick={() => returnOrder()}>\r\n                  {\r\n                    orders._isLoading &&\r\n                    <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n                  }\r\n               Confirm Return</button>\r\n                :\r\n                <button disabled={orders._isOrderUpdate}\r\n                  className=\"uk-button uk-label-success\" type=\"button\" >\r\n                  <span uk-icon=\"icon:check\" />\r\n                Return Initaled.</button>\r\n            }\r\n\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  Orders\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { UserInformation, UserNav, UserSettings } from '.';\r\nimport { AppState, getUserSettings } from 'reducers';\r\nimport { Orders } from './Orders';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst UserContainer: React.FunctionComponent = () => {\r\n\r\n  /**\r\n   * Hooks\r\n   */\r\n  const { userTab } = useParams();\r\n  const [showSettings, setShowSettings] = useState(false);\r\n  const [showPersonal, setShowPersonal] = useState(false);\r\n  const [showOrders, setShowOrders] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const userData = useSelector((state: AppState) => state.user);\r\n\r\n  const userSettings = useSelector((state: AppState) => state.userSettings)\r\n  useEffect(() => {\r\n    dispatch(getUserSettings());\r\n    toggelDetails(userTab || '')\r\n  },[]);\r\n\r\n  useEffect(() => {\r\n    toggelDetails(userTab || '')\r\n  },[userTab])\r\n  /**\r\n   * Local Methods\r\n   */\r\n  const toggelDetails = (selected: string): void => {\r\n    if(selected === 'orders') {\r\n      setShowSettings(false);\r\n      setShowPersonal(false);\r\n      setShowOrders(true);\r\n    } else if(selected === 'settings') {\r\n      setShowSettings(true);\r\n      setShowPersonal(false);\r\n      setShowOrders(false);\r\n    } else {\r\n      setShowSettings(false);\r\n      setShowPersonal(true);\r\n      setShowOrders(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main>\r\n        <section className=\"uk-section uk-section-small\">\r\n          <div className=\"uk-container\">\r\n            <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n              <UserNav toggelDetails={toggelDetails}\r\n                showPersonal={showPersonal} \r\n                showSettings={showSettings} \r\n                showOrders={showOrders} />\r\n                {showPersonal && <UserInformation user={userData} />}\r\n                {showSettings &&  <UserSettings user={userSettings}/>}\r\n                {showOrders &&  <Orders/>}\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserContainer\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { Login, CustomerCart } from 'types'\r\nimport { CountryCodes } from 'appConstants';\r\nimport { useDispatch, useSelector, } from 'react-redux';\r\nimport { userLogin, AppState, defaultLoginRegister, userRegister, getUser, getCart, forgetPassword, addUpdateCart } from 'reducers';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst UserLogin: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector<AppState, boolean>(state => state.userLogin._isLoading);\r\n  const isError = useSelector<AppState, boolean>(state => state.userLogin._isError);\r\n  const _isSuccess = useSelector<AppState, boolean>(state => state.userLogin._isSuccess);\r\n  const responseMessage = useSelector<AppState, string | undefined>(state => state.userLogin.message);\r\n  const [loginRedirect, setLoginRedirect] = useState(false)\r\n\r\n  const loginFormik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n      mobile: '+91-',\r\n      isRegistration: false,\r\n      forgetPassword: false,\r\n      countryCode: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .required('Required')\r\n        .email('Invalid email address'),\r\n      password: Yup.string().when('forgetPassword',{\r\n        is: false,\r\n        then: Yup.string()\r\n        .required('Required')\r\n      }),\r\n      mobile: Yup.string().when('isRegistration', {\r\n        is: true,\r\n        then: Yup.string().required('Required')\r\n          .matches(/^((\\+)(\\d{1,4}[-]))(\\d{10}){1}?$/\r\n            , 'Valid Format e.g., +91-9876543210')\r\n      })\r\n    }),\r\n    onSubmit: (values: Login) => {\r\n      if (!loginFormik.values.isRegistration) {\r\n        if(loginFormik.values.forgetPassword){\r\n          dispatch(forgetPassword(values));\r\n        } else {\r\n          dispatch(userLogin({ email: values.email, password: values.password }));\r\n        }\r\n      } else {\r\n        dispatch(userRegister({ email: values.email, password: values.password, mobile: values.mobile }));\r\n      }\r\n    },\r\n  });\r\n\r\n  const onCountryChange = (event: React.FormEvent<HTMLSelectElement>): void => {\r\n    loginFormik.setFieldValue('mobile', event.currentTarget.value + '-')\r\n  };\r\n\r\n  const toggleLoginRegister = (isRegistration: boolean): void => {\r\n    loginFormik.resetForm();\r\n    loginFormik.setFieldValue('isRegistration', isRegistration);\r\n    loginFormik.setFieldValue('forgetPassword', false);\r\n    dispatch(defaultLoginRegister());\r\n  }\r\n\r\n  const onForgetPassword = () => {\r\n    loginFormik.setFieldValue('forgetPassword', true);\r\n  };\r\n\r\n  const addToDBCartAfterLogin = () => {\r\n    const cartData = JSON.parse(localStorage.getItem(\"basicKart-loggedOutCart\") || '[]');\r\n    cartData.forEach((cart: CustomerCart) => {\r\n      dispatch(addUpdateCart({\r\n        productDetailId: cart.productDetailId,\r\n        productQuantity: cart.productQuantity,\r\n        currencyType: cart.currencyType,\r\n        cartId: '0',\r\n        productImage: cart.productImage,\r\n        productImagePath: cart.productImagePath,\r\n        productName: cart.productName,\r\n        subcategory: cart.subcategory,\r\n        productPrice: '0',\r\n        productId: cart.productId,\r\n      },true))\r\n    });\r\n    localStorage.setItem('basicKart-loggedOutCart','[]');\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (loginFormik.values.isRegistration) {\r\n      loginFormik.setFieldValue('isRegistration', false);\r\n      loginFormik.setFieldValue('email', '');\r\n      loginFormik.setFieldValue('password', '');\r\n      loginFormik.touched.password = false;\r\n      loginFormik.touched.email = false;\r\n    } else {\r\n      if (_isSuccess) {\r\n        if(!loginFormik.values.forgetPassword){\r\n          setLoginRedirect(true);\r\n          dispatch(getUser());\r\n          dispatch(getCart());\r\n          addToDBCartAfterLogin();\r\n        }\r\n      }\r\n    }\r\n  }, [_isSuccess])\r\n\r\n  if (loginRedirect) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={loginFormik.handleSubmit} className=\"uk-form-stacked\">\r\n      <main>\r\n        <section className=\"uk-section uk-section-small\">\r\n          <div className=\"uk-container\">\r\n            <div className=\"uk-grid-medium justify-content-center \" uk-grid=\"true\">\r\n              <div className=\"uk-width-1-1 uk-width-1-3@m tm-aside-column user-nave-sticky\">\r\n                <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\" uk-sticky=\"offset: 80; bottom: true;\">\r\n                  <div className=\"uk-card-header\">\r\n                    <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                      <div>\r\n                        <div className=\"uk-grid-small uk-flex-center\" uk-grid=\"true\">\r\n                          <div>\r\n                            <a className={'uk-button uk-button-default uk-button-small ' + (!loginFormik.values.isRegistration ? 'login-register-active-button uk-active' : '')} onClick={(): void => toggleLoginRegister(false)}>\r\n                              <span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: sign-in; ratio: .75;\"></span>\r\n                              <span>Login</span>\r\n                            </a>\r\n                          </div>\r\n                          <div>\r\n                            <a className={'uk-button uk-button-default uk-button-small ' + (loginFormik.values.isRegistration ? 'login-register-active-button uk-active' : '')} onClick={(): void => toggleLoginRegister(true)}>\r\n                              <span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: pencil; ratio: .75;\"></span>\r\n                              <span>Register</span>\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    {\r\n                      isError &&\r\n                      <div className=\"login-error-message\">\r\n                        <span className=\"uk-notification-message-danger\"> {responseMessage} </span>\r\n                      </div>\r\n                    }\r\n                    {\r\n                      _isSuccess &&\r\n                      <div className=\"forget-password-message\">\r\n                        <span className=\"uk-notification-message-success\"> {responseMessage} </span>\r\n                      </div>\r\n                    }\r\n                    <nav>\r\n                      <ul className=\"uk-nav uk-nav-default tm-nav\">\r\n                        <li>\r\n                          <div className=\"uk-card-body\">\r\n                            <div className=\"uk-form-stacked\">\r\n                              <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n                                <fieldset className=\"uk-fieldset\">\r\n                                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                                    <div>\r\n                                      <label>\r\n                                        <div className=\"uk-form-label\">Email</div>\r\n                                        <input className=\"uk-input\" id=\"email\" type=\"text\"\r\n                                          {...loginFormik.getFieldProps('email')} />\r\n                                        {\r\n                                          loginFormik.touched.email && loginFormik.errors.email ? (\r\n                                            <span className=\"uk-text-danger\">{loginFormik.errors.email}</span>\r\n                                          ) : ''\r\n                                        }\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                </fieldset>\r\n                                {loginFormik.values.isRegistration &&\r\n                                  <fieldset className=\"uk-fieldset\">\r\n                                    <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                                      <div className=\"uk-width-1-3 uk-width-1-3@s\">\r\n                                        <label>\r\n                                          <div className=\"uk-form-label\">Country</div>\r\n                                          <select className=\"uk-select\" id=\"countryCode\"\r\n                                            onChange={onCountryChange}>\r\n                                            {\r\n                                              CountryCodes.map((country, index) => {\r\n                                                return <option key={index} value={country.Iso} selected={country.default}>{country.name}</option>\r\n                                              })\r\n                                            }\r\n                                          </select>\r\n                                        </label>\r\n                                      </div>\r\n                                      <div className=\"uk-width-expand\">\r\n                                        <label>\r\n                                          <div className=\"uk-form-label\">Mobile Number</div>\r\n                                          <input className=\"uk-input\" type=\"text\" id=\"mobile\"\r\n                                            {...loginFormik.getFieldProps('mobile')} />\r\n                                          {\r\n                                            loginFormik.touched.mobile && loginFormik.errors.mobile ? (\r\n                                              <span className=\"uk-text-danger\">{loginFormik.errors.mobile}</span>\r\n                                            ) : ''\r\n                                          }\r\n                                        </label>\r\n                                      </div>\r\n                                    </div>\r\n                                  </fieldset>\r\n                                }\r\n                                {\r\n                                  !loginFormik.values.forgetPassword &&\r\n                                  <fieldset className=\"uk-fieldset\">\r\n                                    <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                                      <div>\r\n                                        <label>\r\n                                          <div className=\"uk-form-label\">Password</div>\r\n                                          <input className=\"uk-input\" type=\"password\" id=\"password\"\r\n                                            {...loginFormik.getFieldProps('password')} />\r\n                                          {\r\n                                            loginFormik.touched.password && loginFormik.errors.password ? (\r\n                                              <span className=\"uk-text-danger\">{loginFormik.errors.password}</span>\r\n                                            ) : ''\r\n                                          }\r\n                                        </label>\r\n                                      </div>\r\n                                    </div>\r\n                                  </fieldset>\r\n                                }\r\n\r\n                              </div>\r\n                              {\r\n                                !loginFormik.values.isRegistration &&\r\n                                <div className=\"uk-text-right uk-margin-xsmall-top\">\r\n                                  <a className=\"uk-text-danger\" onClick={() => onForgetPassword()}> Forget Password ?</a>\r\n                                </div>\r\n                              }\r\n\r\n                              <div className=\"uk-card-footer uk-text-center top-border-none\">\r\n                                <button id=\"loginbtn\" disabled={isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                                  {\r\n                                    isLoading &&\r\n                                    <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                                  }\r\n                                  <span>Submit</span>\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </nav>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserLogin\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst MainFooter: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <footer>\r\n      <section className=\"uk-section uk-section-secondary uk-section-small uk-light\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1 uk-child-width-1-4@m\" uk-grid=\"true\">\r\n            <div>\r\n              <a className=\"uk-logo\" onClick={()=> history.push('/')}><img src=\"/logo.png\" alt=\"Logo\" width=\"150\" /></a>\r\n              <p className=\"uk-text-small\"></p>\r\n              {/* <ul className=\"uk-iconnav\">\r\n                <li><a href=\"#\" title=\"Facebook\" uk-icon=\"facebook\"></a></li>\r\n                <li><a href=\"#\" title=\"Twitter\" uk-icon=\"twitter\"></a></li>\r\n                <li><a href=\"#\" title=\"YouTube\" uk-icon=\"youtube\"></a></li>\r\n                <li><a href=\"#\" title=\"Instagram\" uk-icon=\"instagram\"></a></li>\r\n              </ul> */}\r\n            </div>\r\n            <div>\r\n              <nav className=\"uk-grid-small uk-child-width-1-2\" uk-grid=\"true\">\r\n                <div>\r\n                  <ul className=\"uk-nav uk-nav-default\">\r\n                    <li><a onClick={() => history.push('/product/lingerie')}>Lingerie</a></li>\r\n                    <li><a onClick={() => history.push('/product/footwear')}>Footwear</a></li>\r\n                    <li><a onClick={() => history.push('/product/bindi')}>Bindi</a></li>\r\n                    <li><a onClick={() => history.push('/product/home essential')}>Home Essential</a></li>\r\n                  </ul>\r\n                </div>\r\n                <div>\r\n                  <ul className=\"uk-nav uk-nav-default\">\r\n                    <li><a onClick={()=> history.push('/about')}>About</a></li>\r\n                    <li><a onClick={() => history.push('/contactus')}>Contacts</a></li>\r\n                    <li><a onClick={() => history.push('/refundpolicy')}>Refund Policy</a></li>\r\n                  </ul>\r\n                </div>\r\n              </nav>\r\n            </div>\r\n            <div>\r\n              <ul className=\"uk-list uk-text-small\">\r\n                {/* <li>\r\n                  <a className=\"uk-link-muted\" href=\"#\"><span className=\"uk-margin-small-right\" uk-icon=\"receiver\"></span><span className=\"tm-pseudo\">8 800 799 99 99</span></a>\r\n                </li> */}\r\n                <li>\r\n                  <a className=\"uk-link-muted\" href=\"mailto:support@basickart.com\"><span className=\"uk-margin-small-right\" uk-icon=\"mail\"></span><span className=\"tm-pseudo\">support@basickart.com</span></a>\r\n                </li>\r\n                {/* <li>\r\n                  <div className=\"uk-text-muted\"><span className=\"uk-margin-small-right\" uk-icon=\"location\"></span><span>Sadar Bazar, Old Delhi</span></div>\r\n                </li>\r\n                <li>\r\n                  <div className=\"uk-text-muted\"><span className=\"uk-margin-small-right\" uk-icon=\"clock\"></span><span>Daily 10:00–21:00</span></div>\r\n                </li> */}\r\n              </ul>\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-margin uk-text-small uk-text-muted\">Technical partner KPWorks</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport {\r\n  MainFooter\r\n};","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { getSubCategory, AppState, SubCategory, getActiveProductCount, Cart, getCart, getUser, getUserLocation, getCustomerProducts, UserLocation, setLoggedCart, defaultUser, PreSelectedFilters, defaultPreSelectedFitler } from 'reducers';\r\nimport { SubCategories, pageSize } from 'appConstants';\r\nimport { filterSubcategories } from 'services';\r\nimport { ProductSubCategory, Search } from 'types';\r\nimport { MobileNavigation, SideCart } from '.';\r\nimport { setSearch } from 'reducers/Search';\r\n\r\n\r\n\r\nconst Navigation: React.FunctionComponent = () => {\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [cartCount, setCartCount] = useState(0);\r\n  const [enteredSearchText, setEnteredSearchText] = useState('');\r\n  const [cartCountCssFlag, setCartCountCssFlag] = useState(false);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n  const search = useSelector<AppState, Search>(state => state.search.data || {} as Search);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const sideCartRef = useRef<HTMLAnchorElement>(null);\r\n  const mobileNavigationRef = useRef<HTMLButtonElement>(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(getSubCategory());\r\n    dispatch(getActiveProductCount());\r\n    if(localStorage.getItem(\"biktoken\")){\r\n      dispatch(getCart());\r\n      dispatch(getUser());\r\n    }\r\n    dispatch(getUserLocation());\r\n    if(localStorage.getItem(\"basicKart-loggedOutCart\")){\r\n      dispatch(setLoggedCart(JSON.parse(localStorage.getItem(\"basicKart-loggedOutCart\") || '[]')))\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setCartCount(cart.data?.length || 0);\r\n    setCartCountCssFlag(true);\r\n    setTimeout(()=>{\r\n      setCartCountCssFlag(false);\r\n    },400)\r\n  },[cart.data])\r\n\r\n  const searchProduct = (searchText: string) => {\r\n    \r\n      if(searchText === ''){\r\n        setEnteredSearchText('');\r\n      }\r\n      if(\r\n        (search.categoryId && search.categoryId.length >0) ||\r\n        (search.colourId && search.colourId.length >0) ||\r\n        (search.sizeId && search.sizeId.length >0) ||\r\n        (search.subCategoryId && search.subCategoryId.length >0) ||\r\n         search.endPrice || search.startPrice || searchText\r\n      ){\r\n      dispatch(setSearch({\r\n        categoryId: search.categoryId || 0,\r\n        colourId: search.colourId || [],\r\n        currency: userLocation.data || 'IN',\r\n        endPrice: search.endPrice||'',\r\n        sizeId: search.sizeId || [],\r\n        startPrice: search.startPrice || '',\r\n        subCategoryId: search.subCategoryId || [],\r\n        searchText: searchText\r\n      }));\r\n      dispatch(getCustomerProducts(0, pageSize, search.categoryId || 0, search.subCategoryId || [], search.colourId || [], search.sizeId || [], search.startPrice || '', search.endPrice||'', userLocation.data || 'IN', searchText || '' , true));\r\n      history.push('/product/search')\r\n    }\r\n    \r\n  }\r\n  const navigateTo = (event: React.SyntheticEvent ,categoryPath: string, subcategoryPath?: string) => {\r\n    event.preventDefault();\r\n    history.push('/product/'+ categoryPath.toLowerCase() + (subcategoryPath ? '/'+ subcategoryPath.toLowerCase() : ''));\r\n  };\r\n  const getCategoryAndSubCategory = () => {\r\n    return Object.keys(SubCategories).map((key: string, index: number) => {\r\n      return (\r\n        <li key={index}>\r\n          <a onClick={(e) => navigateTo(e,key)}>{key}<span className=\"uk-margin-xsmall-left\" uk-icon=\"icon: chevron-down; ratio: .75;\"></span></a>\r\n          <div\r\n            className=\"uk-navbar-dropdown uk-margin-remove uk-padding-remove-vertical\"\r\n            uk-drop=\"pos: bottom-justify;delay-show: 125;delay-hide: 50;duration: 75;boundary: .tm-navbar-container;boundary-align: true;pos: bottom-justify;flip: x\"\r\n          >\r\n            <div className=\"uk-container uk-container-small uk-margin-top uk-margin-bottom\">\r\n              <ul className=\"uk-nav uk-nav-default uk-column-1-3\">\r\n                {\r\n                  filterSubcategories(subCategories, Number(SubCategories[key])).map((subcategory: ProductSubCategory, index: number) => {\r\n                    return <li key={index}><a onClick={(e) => navigateTo(e,key,subcategory.code)}>{subcategory.code}</a></li>\r\n                  })\r\n                }\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      )\r\n    });\r\n  };\r\n\r\n  const logout = () => {\r\n    dispatch(defaultUser());\r\n    window.localStorage.removeItem('biktoken');\r\n    history.push('/');\r\n  };\r\n  return (\r\n    <header>\r\n      <MobileNavigation mobileNavigationRef={mobileNavigationRef}/>\r\n      <div className=\"uk-navbar-container tm-navbar-container\" uk-sticky=\"cls-active: tm-navbar-container-fixed\">\r\n        <div className=\"uk-container\" uk-navbar=\"true\">\r\n          <div className=\"uk-navbar-left\">\r\n            <button ref={mobileNavigationRef} className=\"uk-navbar-toggle uk-hidden@m\" uk-toggle=\"target: #nav-offcanvas\" uk-navbar-toggle-icon=\"true\"></button>\r\n            <a className=\"uk-navbar-item uk-logo\" onClick={() => history.push('/')}><img src=\"/logo.png\" width=\"67\" alt=\"Logo\" /></a>\r\n            <nav className=\"uk-visible@m\">\r\n              <ul className=\"uk-navbar-nav\">\r\n                {\r\n                  getCategoryAndSubCategory()\r\n                }\r\n                <li><a onClick={()=> history.push('/about')}>About</a></li>\r\n                <li><a onClick={()=> history.push('/contactus')}>Contact</a></li>\r\n                {\r\n                  userData.data?.isAdmin && \r\n                  <li><a onClick={()=>history.push('/admin')}>Admin</a></li>\r\n                }\r\n               \r\n              </ul>\r\n            </nav>\r\n          </div>\r\n          <div className=\"uk-navbar-right\">\r\n            <a className={`${enteredSearchText !== '' ? 'search-color uk-navbar-toggle tm-navbar-button' : 'uk-navbar-toggle tm-navbar-button'}`} href=\"#\" uk-search-icon=\"true\">\r\n            </a>\r\n            <div className=\"uk-navbar-dropdown uk-padding-small uk-margin-remove\" uk-drop=\"mode: click;cls-drop: uk-navbar-dropdown;boundary: .tm-navbar-container;boundary-align: true;pos: bottom-justify;flip: x\">\r\n              <div className=\"uk-container\">\r\n                <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-expand\">\r\n                    <div className=\"uk-search uk-search-navbar uk-width-1-1\">\r\n                      <input className=\"uk-search-input\" type=\"search\" placeholder=\"Search…\"\r\n                        value={enteredSearchText}\r\n                        onChange={(e) => setEnteredSearchText(e.currentTarget.value)}\r\n                        onKeyPress={(e)=> {e.key === 'Enter' &&  searchProduct(e.currentTarget.value)}} />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-width-auto\" onClick={()=>searchProduct('')}><a className=\"uk-navbar-dropdown-close\" uk-close=\"true\"></a></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <a className=\"uk-navbar-item uk-link-muted tm-navbar-button\"  uk-icon=\"user\"></a>\r\n            <div className=\"uk-padding-small uk-margin-remove\" uk-dropdown=\"pos: bottom-right; offset: -10; delay-hide: 200;\" style={{ minWidth: '150px' }}>\r\n              <ul className=\"uk-nav uk-dropdown-nav\">\r\n                <li>\r\n                  <a onClick={() => userData.data?.userId ?  history.push('/userinformation/orders') : history.push('/login')}>Orders</a>\r\n                </li>\r\n                <li><a onClick={()=> userData.data?.userId ? history.push('/userinformation/default') : history.push('/login')}>Personal</a></li>\r\n                <li><a onClick={()=> userData.data?.userId ? history.push('/userinformation/settings'): history.push('/login')}>Settings</a></li>\r\n                <li className=\"uk-nav-divider\"></li>\r\n                {\r\n                   userData.data?.userId ? \r\n                   <li><a onClick={()=> logout()}>Log out</a></li> :\r\n                   <li><a onClick={()=>history.push('/login')}>Login</a></li>\r\n                }\r\n                \r\n              </ul>\r\n            </div>\r\n            <a ref={sideCartRef} className=\"uk-navbar-item uk-link-muted tm-navbar-button\" href=\"#\" uk-toggle=\"target: #cart-offcanvas\">\r\n              <span uk-icon=\"cart\"></span>\r\n              {\r\n                cartCount > 0 &&\r\n                <span className={cartCountCssFlag ? \"uk-badge  cart-popup\" : \"uk-badge \"}>{cartCount}</span>\r\n              }\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <SideCart\r\n      sideCartRef={sideCartRef}\r\n      cartData={cart.data || []}/>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport { Navigation };","import React, { RefObject, useEffect, useState } from 'react';\r\nimport { CustomerCart, ProductCoupon } from 'types';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteCartItem, AppState, UserLocation } from 'reducers';\r\nimport { getCurrencyIcon, calculateUserDiscount, calculateUserDiscountPrice } from 'services';\r\n\r\ninterface Props {\r\n  cartData: CustomerCart[];\r\n  sideCartRef: RefObject<HTMLAnchorElement>\r\n}\r\n\r\nconst SideCart: React.FunctionComponent<Props> = (props: Props) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [mainTotal, setMainTotal] = useState(0);\r\n  const [userDiscountTotal, setUserDiscountTotal] = useState('0');\r\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState('0');\r\n  const [discountedTotal, setDiscountedTotal] = useState('0');\r\n  const [userCouponTotal, setUserCouponTotal] = useState('0');\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const couponData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const {\r\n    cartData,\r\n    sideCartRef\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    let cartPrice = 0;\r\n    cartData.forEach(({ totalPrice }) => {\r\n      cartPrice += Number(totalPrice)\r\n    });\r\n    setMainTotal(cartPrice);\r\n    if (couponData.length === 1) {\r\n      let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString());\r\n      let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString());\r\n      let couponPrice = calculateUserDiscountPrice(couponData[0].value, priceAfterDiscount.toString());\r\n      let priceAfterCoupon = calculateUserDiscount(couponData[0].value || '0', priceAfterDiscount.toString());\r\n      setDiscountedTotal(priceAfterDiscount);\r\n      setUserDiscountTotal(discountPrice);\r\n      setUserCouponTotal(couponPrice);\r\n      setTotalAfterDiscount(priceAfterCoupon);\r\n    } else {\r\n      let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString());\r\n      let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString());\r\n      setUserDiscountTotal(discountPrice);\r\n      setTotalAfterDiscount(priceAfterDiscount);\r\n    }\r\n    // setUserDiscountTotal(calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString()));\r\n    // setTotalAfterDiscount(calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString()))\r\n  }, [cartData, userData.data,couponData])\r\n\r\n  const deleteCart = (cartItem: CustomerCart) => {\r\n    dispatch(deleteCartItem(cartItem, false));\r\n  };\r\n\r\n  return (\r\n    <div id=\"cart-offcanvas\" uk-offcanvas=\"overlay: true; flip: true\">\r\n      <aside className=\"uk-offcanvas-bar uk-padding-remove\">\r\n        <div className=\"uk-card uk-card-default uk-card-small uk-height-1-1 uk-flex uk-flex-column tm-shadow-remove\">\r\n          <header className=\"uk-card-header uk-flex uk-flex-middle\">\r\n            <div className=\"uk-grid-small uk-flex-1\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand\"><div className=\"uk-h3\">Cart</div></div>\r\n              <button className=\"uk-offcanvas-close\" type=\"button\" uk-close=\"true\"></button>\r\n            </div>\r\n          </header>\r\n          <div className=\"uk-card-body cart-scroll-for-non-mobile\">\r\n            <ul className=\"uk-list uk-list-divider\">\r\n              {\r\n                cartData.map((cart: CustomerCart, index: number) => {\r\n                  return (\r\n                    <li key={index} className=\"uk-visible-toggle\">\r\n                      <article>\r\n                        <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                          <div className=\"uk-width-1-4\">\r\n                            <div className=\"tm-ratio tm-ratio-4-3\">\r\n                              <a className=\"tm-media-box\" onClick={() => {history.push('/productDetails/' + cart.productId); sideCartRef.current?.click()}}>\r\n                                <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + cart.productImagePath} alt={cart.productImage} /></figure>\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"uk-width-expand\">\r\n                            <div className=\"uk-text-meta uk-text-xsmall\">{cart.subcategory}</div>\r\n                            <a className=\"uk-link-heading uk-text-small\" onClick={() => {history.push('/productDetails/' + cart.productId); sideCartRef.current?.click()}}>{cart.productName}</a>\r\n                            <div className=\"uk-margin-xsmall uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                              <div className=\"uk-text-bolder uk-text-small\">{getCurrencyIcon(userLocation.data || 'IN')} {cart.totalPrice}</div>\r\n                              {/* <del className=\"uk-text-bolder uk-text-small uk-text-meta\">123</del> */}\r\n                              <div className=\"uk-text-meta uk-text-xsmall\">{cart.productQuantity} × {getCurrencyIcon(userLocation.data || 'IN')} {cart.productPrice}</div>\r\n                            </div>\r\n                          </div>\r\n                          {\r\n                            !userData.data?.userId && \r\n                            <div>\r\n                              <a className=\"uk-icon-link uk-text-danger uk-invisible-hover\"\r\n                              uk-icon=\"icon: close; ratio: .75\"\r\n                              uk-tooltip=\"Remove\"\r\n                              onClick={() => { deleteCart(cart)}}></a>\r\n                            </div>\r\n                          }\r\n                          \r\n                        </div>\r\n                      </article>\r\n                    </li>\r\n                  )\r\n                })\r\n              }\r\n              {\r\n                cartData.length === 0 &&\r\n                <li className=\"uk-visible-toggle\">\r\n                  <article>\r\n                    <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                      <div className=\"uk-width-1-4\">\r\n                        <div className=\"tm-ratio tm-ratio-4-3\">\r\n                          {/* <a className=\"tm-media-box\">\r\n                            <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + cart.productImagePath} alt={cart.productImage} /></figure>\r\n                          </a> */}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"uk-width-expand\">\r\n                        {/* <div className=\"uk-text-meta uk-text-xsmall\">{cart.subcategory}</div> */}\r\n                        <span className=\"uk-link-heading uk-text-small\" >Cart is empty.</span>\r\n                        <div className=\"uk-margin-xsmall uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                          <div className=\"uk-text-bolder uk-text-small\">Add in some good stuff !!</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </article>\r\n                </li>\r\n              }\r\n            </ul>\r\n          </div>\r\n          <footer className=\"uk-card-footer\">\r\n            {\r\n              (userData.data?.discount && userData.data?.discount !== '0' || couponData.length === 1) &&\r\n              <>\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-expand uk-text-muted uk-text-small\">Subtotal</div>\r\n                  <div className=\"uk-text-muted\">{getCurrencyIcon(userLocation.data || 'IN')} {mainTotal}</div>\r\n                </div>\r\n                {\r\n                  userData.data?.discount && userData.data?.discount !== '0' &&\r\n                  <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                    <div className=\"uk-width-expand uk-text-muted uk-text-small\">Discount ({userData.data?.discount}%)</div>\r\n                    <div className=\"uk-text-danger\">- {getCurrencyIcon(userLocation.data || 'IN')} {userDiscountTotal}</div>\r\n                  </div>\r\n                }\r\n              </>\r\n            }\r\n            {\r\n              couponData.length === 1 &&\r\n              <>\r\n                {\r\n                  userData.data?.discount && userData.data?.discount !== '0' &&\r\n                  <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                    <div className=\"uk-width-expand uk-text-muted\">Discounted Total</div>\r\n                    <div>{getCurrencyIcon(userLocation.data || 'IN')} {discountedTotal}</div>\r\n                  </div>\r\n                }\r\n\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-expand uk-text-muted\">Coupon ({couponData[0] && couponData[0].value}%)</div>\r\n                  <div className=\"uk-text-danger\">− {getCurrencyIcon(userLocation.data || 'IN')} {userCouponTotal}</div>\r\n                </div>\r\n              </>\r\n            }\r\n\r\n            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand uk-text-muted uk-h4\">Total</div>\r\n              <div className=\"uk-h4 uk-text-bolder\">{getCurrencyIcon(userLocation.data || 'IN')} {totalAfterDiscount}</div>\r\n            </div>\r\n            <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@m uk-margin-small\" uk-grid=\"true\">\r\n             <div></div>\r\n              <div >\r\n                <button className=\"uk-button  uk-button-primary uk-button-default uk-margin-small uk-width-1-1\"\r\n                  onClick={() => { \r\n                    userData.data?.userId ? history.push('/cart') :  history.push('/login'); sideCartRef.current?.click();}}\r\n                  disabled={mainTotal === 0}\r\n                >\r\n                  Continue\r\n                </button>\r\n              </div>\r\n              {/* <div>\r\n                <button className=\"uk-button uk-button-primary uk-margin-small uk-width-1-1\"\r\n                  onClick={() => { history.push('/checkout') }}\r\n                  disabled={mainTotal === 0}>\r\n                  checkout\r\n                </button>\r\n              </div> */}\r\n            </div>\r\n          </footer>\r\n        </div>\r\n      </aside>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  SideCart\r\n}","import { SubCategories } from 'appConstants';\r\nimport React, { RefObject } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AppState, SubCategory } from 'reducers';\r\nimport { filterSubcategories } from 'services';\r\nimport { ProductSubCategory } from 'types';\r\n\r\ninterface Props{\r\n  mobileNavigationRef: RefObject<HTMLButtonElement>\r\n}\r\n\r\nconst MobileNavigation: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const history = useHistory();\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const navigateTo = (event: React.SyntheticEvent, categoryPath: string, subcategoryPath?: string) => {\r\n    event.preventDefault();\r\n    history.push('/product/' + categoryPath.toLowerCase() + (subcategoryPath ? '/' + subcategoryPath.toLowerCase() : ''));\r\n    props.mobileNavigationRef.current?.click();\r\n  }\r\n\r\n  const getCategoryAndSubCategory = () => {\r\n    return Object.keys(SubCategories).map((key: string, index: number) => {\r\n      return (\r\n        <li className=\"uk-parent\" key={index}>\r\n          <a onClick={(e) => e.preventDefault()}>{key}</a>\r\n          <ul className=\"uk-nav-sub uk-list-divider\">\r\n            {\r\n              filterSubcategories(subCategories, Number(SubCategories[key])).map((subcategory: ProductSubCategory, index: number) => {\r\n                return <li key={index}><a onClick={(e) => navigateTo(e, key, subcategory.code)}>{subcategory.code}</a></li>\r\n              })\r\n            }\r\n            <li className=\"uk-text-center\">\r\n                    <a onClick={(e) => navigateTo(e, key)} className=\"uk-link-muted uk-text-uppercase tm-link-to-all\"><span>entire ranage</span><span uk-icon=\"icon: chevron-right; ratio: .75;\"></span></a>\r\n                  </li>\r\n          </ul>\r\n        </li>\r\n      )\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div id=\"nav-offcanvas\" uk-offcanvas=\"overlay: true\">\r\n      <aside className=\"uk-offcanvas-bar uk-padding-remove\">\r\n        <div className=\"uk-card uk-card-default uk-card-small tm-shadow-remove\">\r\n          <header className=\"uk-card-header uk-flex uk-flex-middle\">\r\n            <div>\r\n              <a className=\"uk-link-muted uk-text-bold\" onClick={(e) => e.preventDefault()}>Basic Kart</a>\r\n              {/* <div className=\"uk-text-xsmall uk-text-muted\" style={{ marginTop: \"-2px\" }}>\r\n                <div>Basic Kart</div>\r\n              </div> */}\r\n            </div>\r\n          </header>\r\n          <nav className=\"uk-card-small uk-card-body\">\r\n            <ul className=\"uk-nav-default uk-nav-parent-icon uk-list-divider\" uk-nav=\"true\">\r\n              {/* <li className=\"uk-parent\">\r\n                <a href=\"#\">Bindi</a>\r\n                <ul className=\"uk-nav-sub uk-list-divider\">\r\n                  <li><a href=\"bindi-category.html\">Fancy</a></li>\r\n                  <li><a href=\"bindi-category.html\">Bridal</a></li>\r\n                  <li><a href=\"bindi-category.html\">Stone</a></li>\r\n                  <li><a href=\"bindi-category.html\">Round</a></li>\r\n                  <li><a href=\"bindi-category.html\">Square</a></li>\r\n                  <li className=\"uk-text-center\">\r\n                    <a className=\"uk-link-muted uk-text-uppercase tm-link-to-all\" href=\"bindi-category.html\"><span>entire ranage</span><span uk-icon=\"icon: chevron-right; ratio: .75;\"></span></a>\r\n                  </li>\r\n                </ul>\r\n              </li> */}\r\n              {getCategoryAndSubCategory()}\r\n              <li><a onClick={()=> {history.push('/about');props.mobileNavigationRef.current?.click()}}>About</a></li>\r\n              <li><a onClick={()=> {history.push('/contactus'); props.mobileNavigationRef.current?.click()}}>Contact</a></li>\r\n            </ul>\r\n          </nav>\r\n          {/* <nav className=\"uk-card-body\">\r\n            <ul className=\"uk-iconnav uk-flex-center\">\r\n              <li><a href=\"#\" title=\"Facebook\" uk-icon=\"facebook\"></a></li>\r\n              <li><a href=\"#\" title=\"Twitter\" uk-icon=\"twitter\"></a></li>\r\n              <li><a href=\"#\" title=\"YouTube\" uk-icon=\"youtube\"></a></li>\r\n              <li><a href=\"#\" title=\"Instagram\" uk-icon=\"instagram\"></a></li>\r\n            </ul>\r\n          </nav> */}\r\n        </div>\r\n      </aside>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  MobileNavigation\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { SubProducts } from 'appConstants';\r\n\r\ninterface Props{\r\n  subProductToggle: Function;\r\n  addEditToggle: Function;\r\n}\r\n\r\nconst AdminNav: React.FunctionComponent<Props> = (props: Props) => {\r\n  const { subProductToggle, addEditToggle } = props;\r\n  const history = useHistory();\r\n  const [selectedTab, setSelectedTab] = useState(1);\r\n  const [isOnList, setIsOnList] = useState(true);\r\n\r\n  const {product, productId} = useParams();\r\n\r\n  useEffect(() => {\r\n    if(product == 'product' && productId){\r\n      setSelectedTab(SubProducts.PRODUCT)\r\n    }\r\n  },[product, productId])\r\n\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-1-4@m tm-aside-column\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\" uk-sticky=\"offset: 90; bottom: true; media: @m;\">\r\n        <div className=\"uk-card-header\">\r\n          <div className=\"uk-grid-small uk-flex-center\" uk-grid=\"true\">\r\n            <div>\r\n              <a className={`${isOnList? 'uk-button uk-button-default uk-button-small uk-active' : 'uk-button uk-button-default uk-button-small'}`}\r\n              onClick={() => {addEditToggle(false);setIsOnList(true); history.push('/admin')}}>\r\n                <span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: cog; ratio: .75;\"></span>\r\n                <span>List</span>\r\n              </a>\r\n            </div>\r\n            <div>\r\n              <button className={`${!isOnList? 'uk-button uk-button-default uk-button-small uk-active' : 'uk-button uk-button-default uk-button-small'}`}\r\n               title=\"Add\"\r\n                onClick={() => {addEditToggle(true); ;setIsOnList(false)}}\r\n                disabled={selectedTab === SubProducts.USERS || selectedTab === SubProducts.ORDERS}\r\n                >\r\n                <span uk-icon=\"icon: sign-out; ratio: .75;\"></span>\r\n                <span>Add</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <nav>\r\n            <ul className=\"uk-nav uk-nav-default tm-nav\">\r\n              <li className={`${selectedTab === SubProducts.USERS ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.USERS);setIsOnList(true);addEditToggle(false);setSelectedTab(SubProducts.USERS)}}>Users</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.ORDERS ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.ORDERS);setIsOnList(true);addEditToggle(false);setSelectedTab(SubProducts.ORDERS)}}>Orders</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.PRODUCT ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.PRODUCT);setSelectedTab(SubProducts.PRODUCT)}}>Products</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.SUB_PRODUCT ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.SUB_PRODUCT);setSelectedTab(SubProducts.SUB_PRODUCT)}}>Sub-Category</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.SIZE ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.SIZE);setSelectedTab(SubProducts.SIZE)}}>Size</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.COLOUR ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.COLOUR);setSelectedTab(SubProducts.COLOUR)}}>Colour</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.COUPONS ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.COUPONS);setSelectedTab(SubProducts.COUPONS)}}>Coupons</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.SHIPPER ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.SHIPPER);setSelectedTab(SubProducts.SHIPPER)}}>Shipper</a>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  AdminNav\r\n}","import React, { useEffect, useState } from 'react';\r\nimport DataTable, { IDataTableColumn } from 'react-data-table-component';\r\nimport { getColour, getSize, getSubCategory, getCoupon, getProducts, getShippers, getAllUser, AppState, getAdminOrderDataCsv, setAdminOrderCsvDefault } from 'reducers';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ProductColor, ProductSize, ProductCoupon, ProductSubCategory, Order, OrderShipper, User, ProductItem, AdminOrderDataCsv } from 'types';\r\nimport { SubProducts } from 'appConstants';\r\nimport { getAdminOrders } from 'reducers/Order';\r\nimport { countHighlightProducts, downloadCSV } from 'services';\r\n\r\ninterface Props {\r\n  productType: number;\r\n  productColumns: IDataTableColumn[];\r\n  ExpandableComponent?: React.FunctionComponent<any>;\r\n  stateData: ProductColor[] | ProductSize[] | ProductCoupon[] | ProductSubCategory[] | Order[] | OrderShipper[] | User[];\r\n  searchPlaceholder: string;\r\n  expandableRows: boolean;\r\n  sortByColumn?: string;\r\n  defaultSortAsc?: boolean;\r\n}\r\n\r\nconst AdminProductList: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [tabName, setTabName] = useState('');\r\n  const [isDownloadDone, setIsDownloadDone] = useState(true);\r\n  const productList = useSelector<AppState, ProductItem[]>(state => state.product.data || []);\r\n  const adminOrderDataCsv = useSelector<AppState, AdminOrderDataCsv[]>(state => state.adminOrderCsv.data || []);\r\n  const [tableData, setTableData] = useState<\r\n    ProductColor[] | ProductSize[] | ProductCoupon[] | ProductSubCategory[] | Order[] | OrderShipper[] | User[]\r\n  >([]);\r\n\r\n  let stateData: ProductColor[] | ProductSize[] | ProductCoupon[] | ProductSubCategory[] | Order[] | OrderShipper[] | User[] = [];\r\n  const columns = props.productColumns;\r\n\r\n  if (props.productType === SubProducts.COLOUR ||\r\n    props.productType === SubProducts.SIZE ||\r\n    props.productType === SubProducts.SUB_PRODUCT ||\r\n    props.productType === SubProducts.COUPONS ||\r\n    props.productType === SubProducts.PRODUCT ||\r\n    props.productType === SubProducts.ORDERS ||\r\n    props.productType === SubProducts.SHIPPER ||\r\n    props.productType === SubProducts.USERS) {\r\n    stateData = props.stateData\r\n  } else {\r\n    stateData = []\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.productType === SubProducts.COLOUR) {\r\n      dispatch(getColour());\r\n      setTabName('Colour');\r\n    } else if (props.productType === SubProducts.SIZE) {\r\n      dispatch(getSize());\r\n      setTabName('Size');\r\n    } else if (props.productType === SubProducts.SUB_PRODUCT) {\r\n      dispatch(getSubCategory());\r\n      setTabName('SubCategories');\r\n    } else if (props.productType === SubProducts.COUPONS) {\r\n      dispatch(getCoupon());\r\n      setTabName('Coupons');\r\n    } else if (props.productType === SubProducts.PRODUCT) {\r\n      dispatch(getProducts());\r\n      setTabName('Products');\r\n    } else if (props.productType === SubProducts.ORDERS) {\r\n      dispatch(getAdminOrders());\r\n      setTabName('Orders');\r\n    } else if (props.productType === SubProducts.SHIPPER) {\r\n      dispatch(getShippers());\r\n      setTabName('Shippers');\r\n    } else if (props.productType === SubProducts.USERS) {\r\n      dispatch(getAllUser());\r\n      setTabName('Users');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTableData(stateData || [])\r\n  }, [stateData]);\r\n\r\n  useEffect(() => {\r\n    if (stateData && stateData.length > 0) {\r\n      const data = (stateData as any[]).filter(({\r\n        value, code,\r\n        name, productCategoryName,\r\n        orderNumber, shipperName,\r\n        emailAddress, mobile, paymentMode }) => {\r\n        return (value && value.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (code && code.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (name && name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (productCategoryName && productCategoryName.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (orderNumber && orderNumber.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (shipperName && shipperName.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (emailAddress && emailAddress.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (mobile && mobile.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (paymentMode && paymentMode.toLowerCase().includes(searchTerm.toLowerCase()));\r\n      })\r\n      setTableData(data)\r\n    }\r\n  }, [searchTerm]);\r\n\r\n\r\n  const getOrdersCsvData = () => {\r\n    setIsDownloadDone(false);\r\n    dispatch(getAdminOrderDataCsv());\r\n  }\r\n  useEffect(() => {\r\n    if(!isDownloadDone && adminOrderDataCsv.length > 0){\r\n      downloadCSV(adminOrderDataCsv);\r\n      setIsDownloadDone(true);\r\n      dispatch(setAdminOrderCsvDefault())\r\n    }\r\n  },[JSON.stringify(adminOrderDataCsv)])\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n\r\n            <div className=\"asd\">\r\n              <DataTable\r\n                title={tabName}\r\n                columns={columns}\r\n                data={tableData}\r\n                defaultSortField={props.sortByColumn || \"code\"}\r\n                defaultSortAsc={props.defaultSortAsc !== undefined ? props.defaultSortAsc : true}\r\n                selectableRows={false}\r\n                selectableRowsNoSelectAll={false}\r\n                selectableRowsHighlight={true}\r\n                selectableRowsVisibleOnly={false}\r\n                expandableRows={props.expandableRows}\r\n                expandOnRowClicked={false}\r\n                expandableRowsComponent={props.ExpandableComponent && <props.ExpandableComponent />}\r\n                pagination={true}\r\n                highlightOnHover={true}\r\n                striped={true}\r\n                pointerOnHover={false}\r\n                dense={false}\r\n                noTableHead={false}\r\n                persistTableHead={true}\r\n                progressPending={false}\r\n                noHeader={false}\r\n                subHeader={true}\r\n                subHeaderComponent={\r\n                  (\r\n                    <div className=\"uk-grid-medium uk-child-width-1-1 uk-width-1-1\" uk-grid=\"true\">\r\n                      <div className={`${props.productType === SubProducts.ORDERS ? 'uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s' : 'uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s'}`} uk-grid=\"true\">\r\n                        {\r\n                          props.productType === SubProducts.ORDERS &&\r\n                          <>\r\n                            <div>\r\n                              <label>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: cart;\" /> : Shipped</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: check;\" /> : Delivered</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: plus-circle;\" /> : Return Accepted</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: lifesaver;\" /> : Payment Returned</span>\r\n\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"orange\" }} uk-icon=\"icon: history;\" /> : Return In Progress</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"red\" }} uk-icon=\"icon: minus-circle;\" /> : Return Declined</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"red\" }} uk-icon=\"icon: warning;\" /> : Payment Declined</span>\r\n                              </label>\r\n                            </div>\r\n                          </>\r\n                        }\r\n\r\n                        {\r\n                          props.expandableRows &&\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\"><span><span uk-icon=\"chevron-right\"></span>: Click in table for quick actions</span></div>\r\n                              {\r\n                                props.productType === SubProducts.PRODUCT &&\r\n                                <>\r\n                                  <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: bolt;\" /> : Trending ({countHighlightProducts(productList,true)})</span>\r\n                                  <span className=\"uk-form-label\"><span style={{ color: \"orange\" }} uk-icon=\"icon: star;\" /> : Latest ({countHighlightProducts(productList,false)})</span>\r\n                                </>\r\n                              }\r\n                            </label>\r\n                          </div>\r\n                        }\r\n                        {\r\n                          (!props.expandableRows && props.productType !== SubProducts.ORDERS) &&\r\n                          <div></div>\r\n                        }\r\n                        <div className=\"align-right\">\r\n                          <input className=\"uk-input uk-form-width-medium uk-form-small\" value={searchTerm} onChange={event => setSearchTerm(event.target.value)} type=\"text\" placeholder={props.searchPlaceholder} />\r\n                          {\r\n                            props.productType === SubProducts.ORDERS &&\r\n                            <span className=\"download-margin\" uk-icon=\"icon: cloud-download\"\r\n                          onClick={()=>getOrdersCsvData()}></span>\r\n                          }\r\n                          \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    // <div className=\"admin-search-header\">\r\n                    //   {\r\n                    //     props.expandableRows &&\r\n                    //     <div className=\"\">\r\n                    //       <div className=\"\">\r\n                    //         <span>Click <span uk-icon=\"chevron-right\"></span> in table for quick actions</span>\r\n                    //       </div>\r\n                    //     </div>\r\n                    //   }\r\n                    //   <div className=\"uk-float-right\">\r\n                    //     <input className=\"uk-input uk-form-width-medium uk-form-small\" value={searchTerm} onChange={event => setSearchTerm(event.target.value)} type=\"text\" placeholder={props.searchPlaceholder} />\r\n                    //   </div>\r\n                    //   <div>\r\n                    //     <div className=\"\"><span style={{ color: \"green\" }} uk-icon=\"icon: bolt;\" /> : Trending</div>\r\n\r\n\r\n                    //   </div>\r\n\r\n                    //   <div className=\"\">\r\n\r\n                    //     <span style={{ color: \"orange\" }} uk-icon=\"icon: star;\" /> : Latest\r\n                    //           </div>\r\n                    // </div>\r\n                  )\r\n                }\r\n                fixedHeader={true}\r\n                fixedHeaderScrollHeight=\"800px\"\r\n                direction={\"ltr\"}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport {\r\n  AdminProductList\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductColor } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateColour, Colour } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { code, value, colourId }: ProductColor = data;\r\n  const colourActionStatus = useSelector<AppState, Colour>(state => state.colour);\r\n\r\n  const colourQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      code,\r\n      value,\r\n      colourId\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (value: ProductColor) => {\r\n      dispatch(updateColour(value))\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={colourQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Colour Code</div>\r\n              <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                {...colourQuickViewFormik.getFieldProps('code')} />\r\n              {\r\n                colourQuickViewFormik.touched.code && colourQuickViewFormik.errors.code ? (\r\n                  <span className=\"uk-text-danger\">{colourQuickViewFormik.errors.code}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Colour Name</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...colourQuickViewFormik.getFieldProps('value')} />\r\n              {\r\n                colourQuickViewFormik.touched.value && colourQuickViewFormik.errors.value ? (\r\n                  <span className=\"uk-text-danger\">{colourQuickViewFormik.errors.value}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Colour Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  colourActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n        {colourQuickViewFormik.isSubmitting && <NotificationContainer {...colourActionStatus}/>}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst ColourList: React.FunctionComponent = () => {\r\n\r\n  const stateData = useSelector<AppState, ProductColor[]>(state => state.colour.data || []);  \r\n  const productColumns = [\r\n    {\r\n      name: 'ColourId',\r\n      selector: 'colourId',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Colour Code',\r\n      selector: 'code',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Colour Value',\r\n      selector: 'value',\r\n      sortable: true,\r\n    },\r\n  ]\r\n\r\n  return(\r\n    <AdminProductList \r\n      productColumns={productColumns} \r\n      productType={SubProducts.COLOUR} \r\n      ExpandableComponent= {ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Colour Value\"\r\n      expandableRows = {true}/>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport {\r\n  ColourList,\r\n  ExpandableComponent\r\n}","import React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, Colour, saveColour } from 'reducers';\r\nimport { ProductColor } from 'types';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst ProductColour: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const colourFormik = useFormik({\r\n    initialValues: {\r\n      code: '',\r\n      value: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (values: ProductColor) => {\r\n      dispatch(saveColour(values));\r\n    }\r\n  });\r\n  const colourActionStatus = useSelector<AppState, Colour>(state => state.colour);\r\n  useEffect(() => {\r\n    if (colourActionStatus._isSuccess) {\r\n      colourFormik.resetForm();\r\n    }\r\n  }, [colourActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={colourFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Colour</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Colour Code</div>\r\n                      <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                        {...colourFormik.getFieldProps('code')} />\r\n                      {\r\n                        colourFormik.touched.code && colourFormik.errors.code ? (\r\n                          <span className=\"uk-text-danger\">{colourFormik.errors.code}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Colour Name</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...colourFormik.getFieldProps('value')} />\r\n                      {\r\n                        colourFormik.touched.value && colourFormik.errors.value ? (\r\n                          <span className=\"uk-text-danger\">{colourFormik.errors.value}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...colourActionStatus}/>\r\n          <button disabled={colourActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              colourActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductColour\r\n}","import React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, addUpdateSize , Size } from 'reducers';\r\nimport { ProductSize as ProductSizeType } from 'types';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\n\r\nconst ProductSize: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const sizeFormik = useFormik({\r\n    initialValues: {\r\n      code: '',\r\n      value: '',\r\n      productCategory: 1,\r\n      sizeId: '0'\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required'),\r\n      productCategory: Yup.number().required('Required')\r\n    }),\r\n    onSubmit: (values: ProductSizeType) => {\r\n      dispatch(addUpdateSize (values));\r\n    }\r\n  });\r\n  const sizeActionStatus = useSelector<AppState, Size>(state => state.size);\r\n  useEffect(() => {\r\n    if (sizeActionStatus._isSuccess) {\r\n      sizeFormik.resetForm();\r\n    }\r\n  }, [sizeActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={sizeFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Size</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n                <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Product Category</div>\r\n                      <select className=\"uk-select\" id=\"productCategory\"\r\n                        {...sizeFormik.getFieldProps('productCategory')}>\r\n                          <option key='1' value={1}>Lingerie</option>\r\n                          <option key='2' value={2}>Footwear</option>\r\n                          <option key='3' value={3}>Bindi</option>\r\n                          <option key='4' value={8}>Home Essential</option>\r\n                          <option key='5' value={9}>Cosmetics</option>\r\n                        </select>\r\n                      {\r\n                        sizeFormik.touched.productCategory && sizeFormik.errors.productCategory ? (\r\n                          <span className=\"uk-text-danger\">{sizeFormik.errors.productCategory}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Size Code</div>\r\n                      <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                        {...sizeFormik.getFieldProps('code')} />\r\n                      {\r\n                        sizeFormik.touched.code && sizeFormik.errors.code ? (\r\n                          <span className=\"uk-text-danger\">{sizeFormik.errors.code}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Size Value</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...sizeFormik.getFieldProps('value')} />\r\n                      {\r\n                        sizeFormik.touched.value && sizeFormik.errors.value ? (\r\n                          <span className=\"uk-text-danger\">{sizeFormik.errors.value}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...sizeActionStatus}/>\r\n          <button disabled={sizeActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              sizeActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductSize\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductSize } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateColour, Colour, addUpdateSize, Size } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst SizeList: React.FunctionComponent = () => {\r\n\r\n  const stateData = useSelector<AppState, ProductSize[]>(state => state.size.data || []);\r\n  const productColumns = [\r\n    {\r\n      name: 'SizeId',\r\n      selector: 'sizeId',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Product Category',\r\n      selector: 'productCategoryName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Size Code',\r\n      selector: 'code',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Size Value',\r\n      selector: 'value',\r\n      sortable: true,\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.SIZE}\r\n      ExpandableComponent={ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Size Value\"\r\n      expandableRows={true} />\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { code, value, sizeId, productCategory }: ProductSize = data;\r\n  const sizeActionStatus = useSelector<AppState, Size>(state => state.size);\r\n\r\n  const sizeQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      code,\r\n      value,\r\n      sizeId,\r\n      productCategory,\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required'),\r\n      productCategory: Yup.number().required('Required')\r\n    }),\r\n    onSubmit: (value: ProductSize) => {\r\n      dispatch(addUpdateSize(value))\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={sizeQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Product Category</div>\r\n              <select className=\"uk-select\" id=\"productCategory\"\r\n                {...sizeQuickViewFormik.getFieldProps('productCategory')}>\r\n                <option key='1' value={1}>Lingerie</option>\r\n                <option key='2' value={2}>Footwear</option>\r\n                <option key='3' value={3}>Bindi</option>\r\n                <option key='4' value={8}>Home Essential</option>\r\n                <option key='5' value={9}>Cosmetics</option>\r\n              </select>\r\n              {\r\n                sizeQuickViewFormik.touched.productCategory && sizeQuickViewFormik.errors.productCategory ? (\r\n                  <span className=\"uk-text-danger\">{sizeQuickViewFormik.errors.productCategory}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Size Code</div>\r\n              <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                {...sizeQuickViewFormik.getFieldProps('code')} />\r\n              {\r\n                sizeQuickViewFormik.touched.code && sizeQuickViewFormik.errors.code ? (\r\n                  <span className=\"uk-text-danger\">{sizeQuickViewFormik.errors.code}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Size Value</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...sizeQuickViewFormik.getFieldProps('value')} />\r\n              {\r\n                sizeQuickViewFormik.touched.value && sizeQuickViewFormik.errors.value ? (\r\n                  <span className=\"uk-text-danger\">{sizeQuickViewFormik.errors.value}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Size Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  sizeActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n          {sizeQuickViewFormik.isSubmitting && <NotificationContainer {...sizeActionStatus} />}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  SizeList,\r\n  ExpandableComponent\r\n}","import React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, addUpdateSize, Size, addUpdateSubCategory, SubCategory } from 'reducers';\r\nimport { ProductSubCategory as ProductSubCategoryType } from 'types';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\n\r\nconst ProductSubCategory: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const subCategoryFormik = useFormik({\r\n    initialValues: {\r\n      code: '',\r\n      value: '',\r\n      productCategoryId: 0,\r\n      subCategoryId: '0'\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required'),\r\n      productCategoryId: Yup.number().required('Required').moreThan(0, 'Required')\r\n    }),\r\n    onSubmit: (values: ProductSubCategoryType) => {\r\n      dispatch(addUpdateSubCategory(values));\r\n    }\r\n  });\r\n  const subCategoryActionStatus = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  useEffect(() => {\r\n    if (subCategoryActionStatus._isSuccess) {\r\n      subCategoryFormik.resetForm();\r\n    }\r\n  }, [subCategoryActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={subCategoryFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">SubCategory</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Product Category</div>\r\n                      <select className=\"uk-select\" id=\"productCategoryId\"\r\n                        {...subCategoryFormik.getFieldProps('productCategoryId')}>\r\n                        <option key='0' value={0}>Select</option>\r\n                        <option key='1' value={1}>Lingerie</option>\r\n                        <option key='2' value={2}>Footwear</option>\r\n                        <option key='3' value={3}>Bindi</option>\r\n                        <option key='4' value={8}>Home Essential</option>\r\n                        <option key='5' value={9}>Cosmetics</option>\r\n                      </select>\r\n                      {\r\n                        subCategoryFormik.touched.productCategoryId && subCategoryFormik.errors.productCategoryId ? (\r\n                          <span className=\"uk-text-danger\">{subCategoryFormik.errors.productCategoryId}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">SubCategory Name</div>\r\n                      <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                        {...subCategoryFormik.getFieldProps('code')} />\r\n                      {\r\n                        subCategoryFormik.touched.code && subCategoryFormik.errors.code ? (\r\n                          <span className=\"uk-text-danger\">{subCategoryFormik.errors.code}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">SubCategory Description</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...subCategoryFormik.getFieldProps('value')} />\r\n                      {\r\n                        subCategoryFormik.touched.value && subCategoryFormik.errors.value ? (\r\n                          <span className=\"uk-text-danger\">{subCategoryFormik.errors.value}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...subCategoryActionStatus} />\r\n          <button disabled={subCategoryActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              subCategoryActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductSubCategory\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductSubCategory } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateColour, Colour, addUpdateSize, Size, SubCategory, addUpdateSubCategory } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst SubCategoryList: React.FunctionComponent = () => {\r\n\r\n  const stateData = useSelector<AppState, ProductSubCategory[]>(state => state.subCategory.data || []);\r\n  const productColumns = [\r\n    {\r\n      name: 'SubCategoryId',\r\n      selector: 'subCategoryId',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Product Category',\r\n      selector: 'productCategoryName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Product CategoryID',\r\n      selector: 'productCategoryId',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Subcategory',\r\n      selector: 'code',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Subcategory Description',\r\n      selector: 'value',\r\n      sortable: true,\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.SUB_PRODUCT}\r\n      ExpandableComponent={ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Subcategory Value\"\r\n      expandableRows={true} />\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { code, value, subCategoryId, productCategoryId }: ProductSubCategory = data;\r\n  const subCategoryActionStatus = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n\r\n  const subCategoryQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      code,\r\n      value,\r\n      subCategoryId,\r\n      productCategoryId\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required'),\r\n      productCategoryId: Yup.number().required('Required')\r\n    }),\r\n    onSubmit: (value: ProductSubCategory) => {\r\n      dispatch(addUpdateSubCategory(value))\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={subCategoryQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Product Category</div>\r\n              <select className=\"uk-select\" id=\"productCategoryId\"\r\n                {...subCategoryQuickViewFormik.getFieldProps('productCategoryId')}>\r\n                <option key='1' value={1}>Lingerie</option>\r\n                <option key='2' value={2}>Footwear</option>\r\n                <option key='3' value={3}>Bindi</option>\r\n                <option key='4' value={8}>Home Essential</option>\r\n                <option key='5' value={9}>Cosmetics</option>\r\n              </select>\r\n              {\r\n                subCategoryQuickViewFormik.touched.productCategoryId && subCategoryQuickViewFormik.errors.productCategoryId ? (\r\n                  <span className=\"uk-text-danger\">{subCategoryQuickViewFormik.errors.productCategoryId}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">SubCategory Name</div>\r\n              <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                {...subCategoryQuickViewFormik.getFieldProps('code')} />\r\n              {\r\n                subCategoryQuickViewFormik.touched.code && subCategoryQuickViewFormik.errors.code ? (\r\n                  <span className=\"uk-text-danger\">{subCategoryQuickViewFormik.errors.code}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">SubCategory Description</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...subCategoryQuickViewFormik.getFieldProps('value')} />\r\n              {\r\n                subCategoryQuickViewFormik.touched.value && subCategoryQuickViewFormik.errors.value ? (\r\n                  <span className=\"uk-text-danger\">{subCategoryQuickViewFormik.errors.value}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">SubCategory Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  subCategoryActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n          {subCategoryQuickViewFormik.isSubmitting && <NotificationContainer {...subCategoryActionStatus} />}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  SubCategoryList,\r\n  ExpandableComponent\r\n}","import React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, Coupon, saveCoupon } from 'reducers';\r\nimport { ProductCoupon as ProductCouponType } from 'types';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst ProductCoupon: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const couponFormik = useFormik({\r\n    initialValues: {\r\n      code: '',\r\n      value: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (values: ProductCouponType) => {\r\n      dispatch(saveCoupon(values));\r\n    }\r\n  });\r\n  const couponActionStatus = useSelector<AppState, Coupon>(state => state.coupon);\r\n  useEffect(() => {\r\n    if (couponActionStatus._isSuccess) {\r\n      couponFormik.resetForm();\r\n    }\r\n  }, [couponActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={couponFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Coupon</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Coupon Code</div>\r\n                      <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                        {...couponFormik.getFieldProps('code')} />\r\n                      {\r\n                        couponFormik.touched.code && couponFormik.errors.code ? (\r\n                          <span className=\"uk-text-danger\">{couponFormik.errors.code}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Discount Percentage</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...couponFormik.getFieldProps('value')} />\r\n                      {\r\n                        couponFormik.touched.value && couponFormik.errors.value ? (\r\n                          <span className=\"uk-text-danger\">{couponFormik.errors.value}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...couponActionStatus}/>\r\n          <button disabled={couponActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              couponActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductCoupon\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductCoupon } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateCoupon, Coupon } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst CouponList: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const deleteCoupon = (couponId:  number, code:string, value:string) => {\r\n    const input = window.confirm('Sure want to delete?');\r\n    if(input)dispatch(updateCoupon({couponId,value,code},true));\r\n  } \r\n  const stateData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);  \r\n  const productColumns = [\r\n    {\r\n      name: 'CouponId',\r\n      selector: 'couponId',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Coupon Code',\r\n      selector: 'code',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Coupon Value',\r\n      selector: 'value',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Delete',\r\n      sortable: false,\r\n      cell: (row: { couponId: number, code: string, value: string }) => {\r\n        return  <button type=\"submit\" className=\"uk-button-small uk-button-danger\" onClick={() => deleteCoupon(row.couponId, row.value, row.code)}>\r\n                   <span>Delete</span>\r\n                </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return(\r\n    <AdminProductList \r\n      productColumns={productColumns} \r\n      productType={SubProducts.COUPONS} \r\n      ExpandableComponent= {ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Coupon Code\"\r\n      expandableRows = {true}/>\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { code, value, couponId }: ProductCoupon = data;\r\n  const couponActionStatus = useSelector<AppState, Coupon>(state => state.coupon);\r\n\r\n  const couponQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      code,\r\n      value,\r\n      couponId\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (value: ProductCoupon) => {\r\n      dispatch(updateCoupon(value));\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={couponQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Coupon Code</div>\r\n              <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                {...couponQuickViewFormik.getFieldProps('code')} />\r\n              {\r\n                couponQuickViewFormik.touched.code && couponQuickViewFormik.errors.code ? (\r\n                  <span className=\"uk-text-danger\">{couponQuickViewFormik.errors.code}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Discount Percentage</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...couponQuickViewFormik.getFieldProps('value')} />\r\n              {\r\n                couponQuickViewFormik.touched.value && couponQuickViewFormik.errors.value ? (\r\n                  <span className=\"uk-text-danger\">{couponQuickViewFormik.errors.value}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Coupon Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  couponActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n        {couponQuickViewFormik.isSubmitting && <NotificationContainer {...couponActionStatus}/>}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  CouponList,\r\n  ExpandableComponent\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport {\r\n  AppState, SubCategory, getSubCategory, getSize, getColour, Size,\r\n  Colour, Product, addUpdateProduct, setDefaulState, getProduct\r\n} from 'reducers';\r\nimport { ProductSubCategory, ProductSize, ProductItem as ProductItemType, sizeColourQuantityComboObject } from 'types';\r\nimport { serverImagePath, SubCategories } from 'appConstants';\r\nimport { filterSubcategories } from 'services';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst ProductItem: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [sizeColourQuantity, setSizeColourQuantity] = useState<sizeColourQuantityComboObject[]>([]);\r\n  const [selectedSizes, setSelectedSizes] = useState<Array<string>>([]);\r\n  const [sizeColourQuantityErrorMessage, setSizeColourQuantityErrorMessage] = useState('')\r\n\r\n  const {\r\n    name, description, productCategoryId,\r\n    subCategory, quantity, productDetailId,\r\n    priceINR, priceUSD, productId, productCategoryName,\r\n    sizeId, colourId, imageNames, imagePaths, size, colour, sizeColourQuantityCombo\r\n  } = useSelector<AppState, ProductItemType>(state => state.product.singleData || {} as ProductItemType)\r\n\r\n  const checkForProductCategory = (subCategory: string) => {\r\n    const filteredKey = Object.keys(SubCategories).filter((key) => key === subCategory);\r\n    if (filteredKey[0]) {\r\n      return Number(SubCategories[filteredKey[0]])\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  const productItemFormik = useFormik({\r\n    initialValues: {\r\n      name: name || '',\r\n      description: description || '',\r\n      productCategoryId: productCategoryId || productCategoryName ? checkForProductCategory(productCategoryName || '') : 0,\r\n      subCategory: subCategory || 0,\r\n      size: sizeId ? sizeId.toString() : '0',\r\n      colour: colourId ? colourId.toString() : '',\r\n      quantity: quantity || '',\r\n      priceINR: priceINR ? priceINR.split(',')[0] : '',\r\n      priceUSD: priceUSD ? priceUSD.split(',')[0] : '',\r\n      productImageBlob: null,\r\n      productId: productId || '0',\r\n      deletedImagePath: [],\r\n      updatedImageName: [],\r\n      code: '',\r\n      value: '',\r\n      imagePaths: imagePaths || '',\r\n      imageNames: imageNames || '',\r\n      adminProductCombo: sizeId ? sizeId.split(',').length : 1,\r\n      deletedProductDetailIds: [],\r\n      productDetailIdArray: productDetailId ? productDetailId.split(',') : [],\r\n    },\r\n    validationSchema: Yup.object({\r\n      name: Yup.string().required('Required'),\r\n      description: Yup.string().required('Required'),\r\n      productCategoryId: Yup.number().required('Required').moreThan(0, 'Required'),\r\n      subCategory: Yup.number().required('Required').moreThan(0, 'Required'),\r\n      //size: Yup.string().required('Required').matches(/[^0]/, 'Required'),\r\n      //colour: Yup.string().required('Required'),\r\n      // quantity: Yup.string().required('Required'),\r\n      priceINR: Yup.string().required('Required'),\r\n      priceUSD: Yup.string().required('Required'),\r\n      // productImageBlob: Yup.mixed().required('Required'),\r\n    }),\r\n    onSubmit: (values: ProductItemType) => {\r\n      if(sizeColourQuantity.length === 0  || sizeColourQuantity.some((item) => Object.keys(item).length < 3)){\r\n        setSizeColourQuantityErrorMessage('Please enter data for all the row(s)');\r\n        setTimeout(()=>{\r\n          setSizeColourQuantityErrorMessage('');\r\n        },3000);\r\n      }else {\r\n        dispatch(addUpdateProduct(values, 0, sizeColourQuantity));\r\n      }\r\n    },\r\n    enableReinitialize: true\r\n  });\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const productSize = useSelector<AppState, Size>(state => state.size);\r\n  const productColour = useSelector<AppState, Colour>(state => state.colour);\r\n  const productActionStatus = useSelector<AppState, Product>(state => state.product);\r\n  useEffect(() => {\r\n    dispatch(getSubCategory());\r\n    dispatch(getSize());\r\n    dispatch(getColour());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (productActionStatus._isSuccess) {\r\n      setTimeout(()=>{\r\n        dispatch(setDefaulState());\r\n      productItemFormik.resetForm();\r\n      setSizeColourQuantity([]);\r\n      history.push(\"/admin\");\r\n      },2000)\r\n    }\r\n  }, [productActionStatus._isSuccess]);\r\n\r\n  useEffect(() => {\r\n    if(sizeId && colourId && quantity && sizeId.length > 0){\r\n      const sizeArray = sizeId.split(',');\r\n      const colourArray = colourId.split(',');\r\n      const quantityArray = quantity.split(',');\r\n\r\n      const editSizeColourQuantityCombo : sizeColourQuantityComboObject[] = sizeArray.map((sizeItem, index) => {\r\n        return {\r\n          size: sizeItem,\r\n          colour: colourArray[index],\r\n          quantity: quantityArray[index]\r\n        }\r\n      });\r\n\r\n      setSizeColourQuantity(editSizeColourQuantityCombo);\r\n      setSelectedSizes(sizeArray);\r\n    }\r\n  },[sizeId, colourId, quantity])\r\n\r\n  const filteredSubcategories: ProductSubCategory[] = filterSubcategories(subCategories, productItemFormik.values.productCategoryId);\r\n\r\n  const filteredProductSize: ProductSize[] = (productSize.data &&\r\n    productSize.data.filter((size) => {\r\n      return size.productCategory === Number(productItemFormik.values.productCategoryId)\r\n    })) || [];\r\n\r\n  const checkForMaxFileUpload = (files: FileList | null) => {\r\n    let currentNumberOfFile = 0;\r\n    if (productItemFormik.values.productId !== '0' && productItemFormik.values.imagePaths) {\r\n      currentNumberOfFile += productItemFormik.values.imagePaths.split(', ').length;\r\n    }\r\n    if (files && Array.from(productItemFormik.values.productImageBlob || []).length + currentNumberOfFile !== 5) {\r\n      const currentFiles = Array.from(productItemFormik.values.productImageBlob || []);\r\n      let filesArray = Array.from(files);\r\n      filesArray.splice(5 - (currentFiles.length + currentNumberOfFile), filesArray.length - 1);\r\n      productItemFormik.setFieldValue(\"productImageBlob\", [...currentFiles, ...filesArray]);\r\n    }\r\n  };\r\n\r\n  const removeImage = (name: string) => {\r\n    const productImageBlob = Array.from(productItemFormik.values.productImageBlob || []);\r\n    productItemFormik.setFieldValue(\"productImageBlob\",\r\n      productImageBlob.filter((img: File) => {\r\n        return img.name != name\r\n      })\r\n    )\r\n  };\r\n\r\n  const removeCurrentImage = (name: string, path: string) => {\r\n    if (productItemFormik.values.deletedImagePath && productItemFormik.values.imagePaths && productItemFormik.values.imageNames) {\r\n      productItemFormik.setFieldValue(\"deletedImagePath\", [...productItemFormik.values.deletedImagePath, path]);\r\n      productItemFormik.setFieldValue(\"imagePaths\",\r\n        productItemFormik.values.imagePaths.split(',').filter((imagePath) => imagePath != path).join(',')\r\n      );\r\n      productItemFormik.setFieldValue(\"imageNames\",\r\n        productItemFormik.values.imageNames.split(',').filter((imageName) => imageName != name).join(',')\r\n      )\r\n    }\r\n  };\r\n\r\n  const getFileNameAndPath = (fileName?: string, filePath?: string) => {\r\n    if (fileName && filePath && fileName.length > 0 && filePath.length > 0) {\r\n      const fileNames = fileName.split(',');\r\n      const filePaths = filePath.split(',');\r\n\r\n      return filePaths.map((path: string, index: number) => {\r\n        return <div key={index} className=\"uk-inline product-uploader-container\">\r\n          <img key={index} src={serverImagePath + path} alt={fileNames[index]} />\r\n          <div className=\"uk-overlay-primary uk-position-cover\">\r\n            <div className=\"uk-position-center\">\r\n              <span uk-icon=\"icon: close\" onClick={() => removeCurrentImage(fileNames[index], path)} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      })\r\n    }\r\n  }\r\n\r\n  const addProductComboLength = () => {\r\n    const availableSizes = filteredProductSize.filter(({sizeId}) => selectedSizes.indexOf(sizeId?.toString() || '') === -1);\r\n    if(availableSizes.length > 0 && productItemFormik.values.adminProductCombo){\r\n      productItemFormik.setFieldValue('adminProductCombo', \r\n      productItemFormik.values.adminProductCombo + 1)\r\n    } else if(availableSizes.length === 0){\r\n      setSizeColourQuantityErrorMessage('No more sizes available');\r\n      setTimeout(()=>{\r\n        setSizeColourQuantityErrorMessage('');\r\n      },3000);\r\n    }\r\n  }\r\n\r\n  const reduceProductComboLength = (index: number) => {\r\n    if(productItemFormik.values.deletedProductDetailIds && productItemFormik.values.productDetailIdArray){\r\n      productItemFormik.setFieldValue('deletedProductDetailIds', \r\n      [...productItemFormik.values.deletedProductDetailIds,productItemFormik.values.productDetailIdArray[index]])\r\n    }\r\n    selectedSizes.splice(index,1);\r\n    sizeColourQuantity.splice(index,1);\r\n    const newPDArray = [...productItemFormik.values.productDetailIdArray];\r\n    newPDArray.splice(index,1)\r\n    productItemFormik.setFieldValue('productDetailIdArray', [...newPDArray]);\r\n    setSelectedSizes([...selectedSizes]);\r\n    setSizeColourQuantity([...sizeColourQuantity]);\r\n    if(productItemFormik.values.adminProductCombo && productItemFormik.values.adminProductCombo > 1) {\r\n      productItemFormik.setFieldValue('adminProductCombo', \r\n      productItemFormik.values.adminProductCombo - 1)\r\n    }\r\n  }\r\n\r\n  const updatedSizeColourQuantityArray = (index: number, field: string, value: string) => {\r\n    // let currentItem = productItemFormik.values.sizeColourQuantityCombo || [];\r\n    let currentItem  = [...sizeColourQuantity] as sizeColourQuantityComboObject[];\r\n    if(!currentItem[index]){\r\n      currentItem[index] = {} as sizeColourQuantityComboObject\r\n    }\r\n        if(field === 'size') {\r\n          if(currentItem[index].size){\r\n            selectedSizes.splice(selectedSizes.indexOf(value), 1);\r\n          }\r\n            currentItem[index].size = value;\r\n            setSelectedSizes([...selectedSizes, value]);\r\n        } else if (field === 'colour') {\r\n          currentItem[index].colour = value;\r\n          // currentItem.forEach((item) => item.colour = value);\r\n        } else if (field === 'quantity') {\r\n          currentItem[index].quantity = value;\r\n        }\r\n\r\n        if(currentItem.length> 1){\r\n          if(field === 'colour'){\r\n            currentItem.forEach((item) => item.colour = value);\r\n          } else {\r\n            currentItem.forEach((item) => item.colour = currentItem[0].colour);\r\n          }\r\n        }\r\n\r\n        if(productItemFormik.values.productDetailIdArray[index]){\r\n          currentItem[index].productDetailId  = productItemFormik.values.productDetailIdArray[index];\r\n        } else {\r\n          currentItem[index].productDetailId = '0'\r\n        }\r\n      setSizeColourQuantity(currentItem);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={productItemFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Product</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Name</div>\r\n                      <input className=\"uk-input \" id=\"name\" type=\"input\"\r\n                        {...productItemFormik.getFieldProps('name')} />\r\n                      {\r\n                        productItemFormik.touched.name && productItemFormik.errors.name ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.name}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Description</div>\r\n                      <textarea className=\"uk-textarea\" id=\"description\" cols={30}\r\n                        {...productItemFormik.getFieldProps('description')} />\r\n                      {\r\n                        productItemFormik.touched.description && productItemFormik.errors.description ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.description}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Product Category</div>\r\n                      <select className=\"uk-select\" id=\"productCategoryId\"\r\n                        onChange={(e) => { productItemFormik.handleChange(e); productItemFormik.setFieldValue('subCategory', 0); setSizeColourQuantity([]); setSelectedSizes([]); productItemFormik.setFieldValue('adminProductCombo',1)}}\r\n                        onBlur={productItemFormik.handleBlur}\r\n                        value={productItemFormik.values.productCategoryId}\r\n                      >\r\n                        {/* {...productItemFormik.getFieldProps('productCategoryId')} */}\r\n                        <option key='0' value={0}>Select</option>\r\n                        <option key='1' value={1}>Lingerie</option>\r\n                        <option key='2' value={2}>Footwear</option>\r\n                        <option key='3' value={3}>Bindi</option>\r\n                        <option key='4' value={8}>Home Essential</option>\r\n                        <option key='5' value={9}>Cosmetics</option>\r\n                      </select>\r\n                      {\r\n                        productItemFormik.touched.productCategoryId && productItemFormik.errors.productCategoryId ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.productCategoryId}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">SubCategory</div>\r\n                      <select className=\"uk-select\" id=\"subCategory\"\r\n                        onChange={(e) => { productItemFormik.handleChange(e)}} // productItemFormik.setFieldValue('size', 0) \r\n                        onBlur={productItemFormik.handleBlur}\r\n                        value={productItemFormik.values.subCategory}>\r\n                        <option key='0' value={0}>Select</option>\r\n                        {\r\n                          filteredSubcategories.map((subCategory, index) => {\r\n                            return <option key={index} value={subCategory.subCategoryId}>{subCategory.code}</option>\r\n                          })\r\n                        }\r\n                      </select>\r\n                      {\r\n                        productItemFormik.touched.subCategory && productItemFormik.errors.subCategory ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.subCategory}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-placeholder uk-text-center\">\r\n                  {\r\n                    Array(productItemFormik.values.adminProductCombo).fill(1).map((value, index) => {\r\n                      return (\r\n                        <div key={index} className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\">Size</div>\r\n                              <select className=\"uk-select\" id=\"size\"  \r\n                              value = {sizeColourQuantity[index] ? sizeColourQuantity[index].size : 0}\r\n                              onChange={(e) => {updatedSizeColourQuantityArray(index, 'size', e.currentTarget.value)}}>\r\n                                {/* {...productItemFormik.getFieldProps('size')}> */}\r\n                                <option key='0' value={0}>Select</option>\r\n                                {\r\n                                  filteredProductSize.filter((size) => {\r\n                                    return size.sizeId && index === selectedSizes.indexOf(size.sizeId.toString()) ? true : size.sizeId && selectedSizes.indexOf(size.sizeId.toString()) === -1\r\n                                           \r\n                                  })\r\n                                    .map((size, index) => {\r\n                                    return <option key={index} value={size.sizeId} >{size.value}</option>\r\n                                  })\r\n                                }\r\n                              </select>\r\n                              {/* {\r\n                                productItemFormik.touched.size && productItemFormik.errors.size ? (\r\n                                  <span className=\"uk-text-danger\">{productItemFormik.errors.size}</span>\r\n                                ) : ''\r\n                              } */}\r\n                            </label>\r\n                          </div>\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\">Colour</div>\r\n                              <select className=\"uk-select\" id=\"colour\" \r\n                              value={sizeColourQuantity && sizeColourQuantity[0] && sizeColourQuantity[0].colour || '0'}\r\n                              onChange={(e) => {updatedSizeColourQuantityArray(index, 'colour', e.currentTarget.value)}}>\r\n                                {/* {...productItemFormik.getFieldProps('colour')}> */}\r\n                                <option key='0' value={0}>Select</option>\r\n                                {\r\n                                  Array.isArray(productColour.data) &&\r\n                                  productColour.data.map((colour, index) => {\r\n                                    return <option key={index} value={colour.colourId}>{colour.value}</option>\r\n                                  })\r\n                                }\r\n                              </select>\r\n                            </label>\r\n                          </div>\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\">Quantity</div>\r\n                              <input className=\"uk-input \" id=\"quantity\" type=\"number\"\r\n                              value ={sizeColourQuantity[index] ? sizeColourQuantity[index].quantity : ''}\r\n                              onChange={(e) => {updatedSizeColourQuantityArray(index, 'quantity', e.currentTarget.value)}}/>\r\n                                {/* {...productItemFormik.getFieldProps('quantity')} /> */}\r\n                              {/* {\r\n                                productItemFormik.touched.quantity && productItemFormik.errors.quantity ? (\r\n                                  <span className=\"uk-text-danger\">{productItemFormik.errors.quantity}</span>\r\n                                ) : ''\r\n                              } */}\r\n                            </label>\r\n                          </div>\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\"></div>\r\n                              <button disabled={productItemFormik.values.adminProductCombo === 1} className=\"uk-button uk-button-danger admin-add-more-combo\" onClick={() => reduceProductComboLength(index)}>Delete</button>\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    })\r\n                  }\r\n                  <div className=\"uk-nav-center admin-add-more-combo\">\r\n                  <span className=\"uk-text-danger \">{sizeColourQuantityErrorMessage}</span>\r\n                  </div>\r\n                  \r\n                  <button className=\"uk-button uk-button-primary\" disabled={sizeColourQuantity.length === 0 || sizeColourQuantity.length !== productItemFormik.values.adminProductCombo  } onClick={(e) => {e.preventDefault(); addProductComboLength()}}>Add More</button>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Price INR</div>\r\n                      <input className=\"uk-input \" id=\"priceINR\" type=\"input\"\r\n                        {...productItemFormik.getFieldProps('priceINR')} />\r\n                      {\r\n                        productItemFormik.touched.priceINR && productItemFormik.errors.priceINR ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.priceINR}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Price USD</div>\r\n                      <input className=\"uk-input \" id=\"priceUSD\" type=\"input\"\r\n                        {...productItemFormik.getFieldProps('priceUSD')} />\r\n                      {\r\n                        productItemFormik.touched.priceUSD && productItemFormik.errors.priceUSD ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.priceUSD}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                  <label id=\"product-upload\" htmlFor=\"productImageBlob\" className=\"uk-placeholder uk-text-center\">\r\n                    <span className=\"upload-icon-margin\" uk-icon=\"icon: cloud-upload; ratio: 1.25;\" />\r\n                     Click this banner to upload the images <input id=\"productImageBlob\" type=\"file\" multiple={true}\r\n                      onChange={(event) => { checkForMaxFileUpload(event.currentTarget.files) }} />\r\n                    {\r\n                      productItemFormik.touched.productImageBlob && productItemFormik.errors.productImageBlob ? (\r\n                        <span className=\"uk-text-danger\">{productItemFormik.errors.productImageBlob}</span>\r\n                      ) : ''\r\n                    }\r\n                  </label>\r\n                </div>\r\n              </fieldset>\r\n              {\r\n                 productItemFormik.values.productId !== '0' &&\r\n                 <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-form-label\">Current Images</div>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-5@s\" uk-grid=\"true\">\r\n\r\n                  {\r\n                    getFileNameAndPath(productItemFormik.values.imageNames, productItemFormik.values.imagePaths)\r\n                  }\r\n                  {/* {\r\n                      productItemFormik.values.imagePaths &&\r\n                      productItemFormik.values.imagePaths.split(',').map((path, i) => {\r\n                      return <div className=\"uk-inline product-uploader-container\">\r\n                      <img key={i} src={apiServerHost+path} alt={file.name} />\r\n                      <div className=\"uk-overlay-primary uk-position-cover\">\r\n                        <div className=\"uk-position-center\">\r\n                          <span uk-icon=\"icon: close\" onClick={() => removeImage(file.name)}/>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                     })\r\n                    [].map.call(productItemFormik.values.imagePaths, (file: any, i) => {\r\n                      return <div className=\"uk-inline product-uploader-container\">\r\n                        <img key={i} src={URL.createObjectURL(file)} alt={file.name} />\r\n                        <div className=\"uk-overlay-primary uk-position-cover\">\r\n                          <div className=\"uk-position-center\">\r\n                            <span uk-icon=\"icon: close\" onClick={() => removeImage(file.name)}/>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    }) */}\r\n\r\n                  {/* <img src={'http://127.0.0.1:5000/images/1c508610-eee5-4360-8f76-f0e70fa5ca92.png'} alt={\"a\"} /> */}\r\n                </div>\r\n              </fieldset>\r\n              }\r\n              \r\n              {\r\n                <fieldset className=\"uk-fieldset\">\r\n                  <div className=\"uk-form-label\">New Images</div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-5@s\" uk-grid=\"true\">\r\n                    {/* <div> */}\r\n                    {/* <label> */}\r\n                    {productItemFormik.values.productImageBlob &&\r\n                      [].map.call(productItemFormik.values.productImageBlob, (file: any, i) => {\r\n                        return <div className=\"uk-inline product-uploader-container\">\r\n                          <img key={i} src={URL.createObjectURL(file)} alt={file.name} />\r\n                          <div className=\"uk-overlay-primary uk-position-cover\">\r\n                            <div className=\"uk-position-center\">\r\n                              <span uk-icon=\"icon: close\" onClick={() => removeImage(file.name)} />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      })\r\n                    }\r\n                    {/* <img src={'http://127.0.0.1:5000/images/1c508610-eee5-4360-8f76-f0e70fa5ca92.png'} alt={\"a\"} /> */}\r\n                    {/* </label> */}\r\n                    {/* </div> */}\r\n                  </div>\r\n                </fieldset>\r\n              }\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...productActionStatus} />\r\n          <button disabled={productActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              productActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductItem\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { serverImagePath, SubProducts } from 'appConstants';\r\nimport { ProductItem } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AppState, addUpdateProduct, Coupon, updateProductHighLight, Product, errorProduct, setDefaulState } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport { countHighlightProducts } from 'services';\r\n\r\ninterface Props {\r\n  addEditToggle: Function;\r\n}\r\n\r\nconst ProductList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const deleteProduct = (productId: string, subcategoryId: number) => {\r\n    const input = window.confirm('Sure want to delete?');\r\n    const name = '', code = '', priceINR = '0', priceUSD = '0', value = '', subCategory = subcategoryId, deletedImagePath = [''], productDetailIdArray = [''], deletedProductDetailIds = ['']\r\n    if (input) dispatch(addUpdateProduct({ productId, name, code, priceUSD, priceINR, value, deletedImagePath, subCategory, productDetailIdArray, deletedProductDetailIds }, 1, []));\r\n  }\r\n  const stateData = useSelector<AppState, ProductItem[]>(state => state.product.data || []);\r\n  const productColumns = [\r\n    // {\r\n    //   name: 'ProductId',\r\n    //   selector: 'productId',\r\n    //   sortable: false,\r\n    // },<span className=\"uk-label uk-label-warning uk-margin-xsmall-right\">top selling</span>\r\n    {\r\n      name: 'Category',\r\n      selector: 'productCategoryName',\r\n      sortable: true,\r\n      cell: (row: { trending: boolean, latest: boolean, productCategoryName: string }) => {\r\n        return (\r\n          row.trending ? <>\r\n            <span style={{ color: \"green\" }} uk-icon=\"icon: bolt;\" />\r\n            <span style={{ marginLeft: \"5px\" }}>\r\n              {row.productCategoryName}\r\n            </span>\r\n          </> :\r\n            row.latest ? <>\r\n              <span style={{ color: \"orange\" }} uk-icon=\"icon: star;\" />\r\n              <span style={{ marginLeft: \"5px\" }}>\r\n                {row.productCategoryName}\r\n              </span>\r\n            </> :\r\n              <span style={{ marginLeft: \"25px\" }}>\r\n                {row.productCategoryName}\r\n              </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      name: 'Product Name',\r\n      selector: 'name',\r\n      sortable: true,\r\n    },\r\n    // {\r\n    //   name: 'Price INR',\r\n    //   selector: 'priceInr',\r\n    //   sortable: true,\r\n    // },\r\n    // {\r\n    //   name: 'Price USD',\r\n    //   selector: 'priceUsd',\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      name: 'Quantity',\r\n      selector: 'quantity',\r\n      sortable: true,\r\n    },\r\n    // {\r\n    //   name: 'Colour',\r\n    //   selector: 'colour',\r\n    //   sortable: true,\r\n    // },\r\n    // {\r\n    //   name: 'Size',\r\n    //   selector: 'size',\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      name: 'Delete',\r\n      sortable: false,\r\n      cell: (row: { productId: number, name: string, code: string, priceUSD: string, priceINR: string, value: string, subCategory: number }) => {\r\n        return <button type=\"submit\" className=\"uk-button-small uk-button-danger\" onClick={() => deleteProduct(row.productId.toString(), row.subCategory)}>\r\n          <span>Delete</span>\r\n        </button>\r\n      }\r\n    },\r\n    {\r\n      name: 'Edit',\r\n      sortable: false,\r\n      cell: (row: { productId: number, code: string, value: string }) => {\r\n        return <button type=\"submit\" className=\"uk-button-small uk-button-danger\" onClick={() => { props.addEditToggle(true); history.push(\"/admin/product/\" + row.productId) }}>\r\n          <span>Edit</span>\r\n        </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.PRODUCT}\r\n      ExpandableComponent={ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Product Name\"\r\n      expandableRows={true} />\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { trending, latest, productId, listSingleImage }: ProductItem = data;\r\n  const productActionStatus = useSelector<AppState, Product>(state => state.product);\r\n\r\n  const productQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      productId,\r\n      highlight: trending ? '1' : latest ? '2' : ''\r\n    } as ProductItem,\r\n    onSubmit: (value: ProductItem) => {\r\n      if (value.highlight === '1' && countHighlightProducts(productActionStatus.data || [], true) === 12) {\r\n        dispatch(errorProduct('Max trending product count of 12 reached.'));\r\n        setTimeout(() => {\r\n          productQuickViewFormik.setSubmitting(false)\r\n        }, 2000);\r\n      } else if (value.highlight === '2' && countHighlightProducts(productActionStatus.data || [], false) === 12) {\r\n        dispatch(errorProduct('Max latest product count of 12 reached.'));\r\n        setTimeout(() => {\r\n          productQuickViewFormik.setSubmitting(false)\r\n        }, 2000);\r\n      } else {\r\n        dispatch(updateProductHighLight(value.highlight || '', value.productId))\r\n      }\r\n      // dispatch(updateCoupon(value));\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={productQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Product Image</div>\r\n              <div className=\"tm-product-card-media\">\r\n                <div className=\"tm-ratio tm-ratio-16-9\">\r\n                  <div className=\"tm-media-box\">\r\n                  <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + listSingleImage} alt={listSingleImage} /></figure>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Product Highlight</div>\r\n              <div>\r\n              <select className=\"uk-select\" id=\"highlight\"\r\n                {...productQuickViewFormik.getFieldProps('highlight')}>\r\n                <option key='1' value=\"\">None</option>\r\n                <option key='2' value=\"1\">Trending</option>\r\n                <option key='3' value=\"2\">Latest</option>\r\n              </select>\r\n              {\r\n                productQuickViewFormik.touched.highlight && productQuickViewFormik.errors.highlight ? (\r\n                  <span className=\"uk-text-danger\">{productQuickViewFormik.errors.highlight}</span>\r\n                ) : ''\r\n              }\r\n              </div>\r\n              \r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Product Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  productActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n          {productQuickViewFormik.isSubmitting && <NotificationContainer {...productActionStatus} />}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductList\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppState, Coupon, updateCoupon } from 'reducers';\r\nimport { CustomerOrders, singleOrder } from 'reducers/Order';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductCoupon, Order, OrderItems } from 'types';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport { getIconForAdminOrder } from 'services';\r\n\r\ninterface Props{\r\n  addEditToggle: Function;\r\n}\r\n\r\nconst OrderList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  // const deleteCoupon = (couponId: number, code: string, value: string) => {\r\n  //   const input = window.confirm('Sure want to delete?');\r\n  //   if (input) dispatch(updateCoupon({ couponId, value, code }, true));\r\n  // }\r\n  const stateData = useSelector<AppState, Order[]>(state => state.customerOrders.data || []);\r\n  const productColumns = [\r\n    {\r\n      name: 'Order Number',\r\n      sortable: true,\r\n      wrap: true,\r\n      cell: (row: { orderItems: OrderItems[], orderNumber: string}) => {\r\n        const icon = getIconForAdminOrder(row.orderItems);\r\n        return (\r\n          icon !== '' ?\r\n          <>\r\n            {icon === 'lifesaver' ?  <span style={{ color: \"green\" }} uk-icon=\"icon: lifesaver;\" /> \r\n            : icon === 'plus-circle' ? <span style={{ color: \"green\" }} uk-icon=\"icon: plus-circle;\" /> \r\n            : icon === 'check' ? <span style={{ color: \"green\" }} uk-icon=\"icon: check;\" />\r\n            : icon === 'cart' ? <span style={{ color: \"green\" }} uk-icon=\"icon: cart;\" /> \r\n            : icon === 'history' ? <span style={{ color: \"orange\" }} uk-icon=\"icon: history;\" />\r\n            : icon === 'minus-circle' ? <span style={{ color: \"red\" }} uk-icon=\"icon: minus-circle;\" />\r\n            : icon === 'warning' ? <span style={{ color: \"red\" }} uk-icon=\"icon: warning;\" />\r\n            : ''\r\n          }\r\n            <span style={{marginLeft:\"5px\", whiteSpace:\"nowrap\"}}>\r\n              {row.orderNumber}\r\n            </span>\r\n          </> :\r\n          <span  style={{marginLeft:\"25px\"}}>\r\n          {row.orderNumber}\r\n        </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      name: 'Order Date',\r\n      selector: 'paymentDate',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Total Price-Mode',\r\n      sortable: false,\r\n      cell: (row: { totalPrice: string, paymentMode: string}) => {\r\n      return  <span>{row.paymentMode === 'PAYPAL'? '$' : '₹'} {row.totalPrice} ({row.paymentMode})</span>\r\n      }\r\n    },\r\n    {\r\n      name: 'View Details',\r\n      sortable: false,\r\n      cell: (row: Order) => {\r\n        return <button type=\"submit\" className=\"uk-button-small uk-button-primary\" onClick={() => {dispatch(singleOrder(row)) ;props.addEditToggle(true)}}>\r\n          <span>View</span>\r\n        </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.ORDERS}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Order Number\"\r\n      expandableRows={false}\r\n      sortByColumn=\"paymentDate\" \r\n      defaultSortAsc={false}/>\r\n  )\r\n}\r\nexport {\r\n  OrderList\r\n}","import React, { useEffect, useState, Fragment } from 'react';\r\nimport { Order, OrderUpdateAdmin } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, getShippers, Shipper, Shipment, updateOrderAdmin } from 'reducers';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport { getPaypalTransactionId } from 'services';\r\n\r\n\r\nconst OrderDetails: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  // const [productItemCount, setProductItemCount] = useState(0);\r\n  const [adminShipmentData, setAdminShipmentData] = useState<OrderUpdateAdmin[]>([]);\r\n  const [orginalTrackingLink, setOrginalTrackingLink] = useState<string[]>([]);\r\n  const stateData = useSelector<AppState, Order>(state => state.customerOrders.singleData || {} as Order);\r\n  const shippers = useSelector<AppState, Shipper>(state => state.shipper || {} as Shipper);\r\n  const shipmentStatus = useSelector<AppState, Shipment>(state => state.shipment);\r\n  useEffect(() => {\r\n    if (stateData && stateData.orderItems) {\r\n      let tempShipmentData: OrderUpdateAdmin[] = [];\r\n      let tempTrackingLink: string[] = [];\r\n      stateData.orderItems.forEach(orderItems => {\r\n        tempShipmentData.push(\r\n          {\r\n            orderDetailId: orderItems.orderDetailId,\r\n            deliveryDate: orderItems.shipmentDetails?.deliveryDate,\r\n            paymentReturned: orderItems.shipmentDetails?.paymentReturned,\r\n            returnStatus: orderItems.shipmentDetails?.returnStatus,\r\n            shipmentId: orderItems.shipmentDetails?.shipmentId || '0',\r\n            shipper: orderItems.shipmentDetails?.shipper,\r\n            shippingDate: orderItems.shipmentDetails?.shippingDate,\r\n            trackingNumber: orderItems.shipmentDetails?.trackingNumber\r\n          } as OrderUpdateAdmin);\r\n        tempTrackingLink.push(orderItems.shipmentDetails?.trackingNumber || '')\r\n      });\r\n      setAdminShipmentData(tempShipmentData);\r\n      setOrginalTrackingLink(tempTrackingLink);\r\n    }\r\n  }, [stateData]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getShippers());\r\n  }, [])\r\n\r\n  const updateShipmentData = (index: number, key: string, value: string) => {\r\n    let shipmentDataCopy = [...adminShipmentData];\r\n    const shipmentDataToUpdate = shipmentDataCopy.splice(index, 1);\r\n    const updatedShipmentData = { ...shipmentDataToUpdate[0], [key]: value };\r\n    shipmentDataCopy.splice(index, 0, updatedShipmentData)\r\n    setAdminShipmentData(shipmentDataCopy);\r\n  };\r\n\r\n  const updateOrderStatus = (index: number) => {\r\n    const isTrackingChanged = adminShipmentData[index].trackingNumber !== orginalTrackingLink[index];\r\n    if(isTrackingChanged){\r\n      let orginalTrackingLinkCopy = [...orginalTrackingLink];\r\n      orginalTrackingLinkCopy[index] = adminShipmentData[index].trackingNumber || '';\r\n      setOrginalTrackingLink(orginalTrackingLinkCopy);\r\n    }\r\n    dispatch(updateOrderAdmin(\r\n      {...adminShipmentData[index], \r\n        orderNumber: stateData.orderNumber,\r\n        customerEmail: stateData.userDetails?.emailAddress,\r\n        customerName: stateData.userDetails?.firstName\r\n      }, isTrackingChanged))\r\n  }\r\n  return (\r\n    <form className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <header className=\"uk-card-header\"><h1 className=\"uk-h2\">Order Summay</h1></header>\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">#Order Details</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Order Number</div>\r\n                      <span className=\"uk-text-small\">{stateData.orderNumber}</span>\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Order Date</div>\r\n                      <span className=\"uk-text-small\">{stateData.paymentDate}</span>\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Order Cost</div>\r\n                      <span className=\"uk-text-small\">{stateData.paymentMode && stateData.paymentMode.toLowerCase() === 'paypal' ? '$' : '₹'}{stateData.totalPrice}</span>\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Payment Mode</div>\r\n                      <span className=\"uk-text-small\">{stateData.paymentMode}</span>\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Payment Transaction Id</div>\r\n                      <span className=\"uk-text-small\">{stateData.paymentMode && stateData.paymentMode.toLowerCase() === 'paypal' ? getPaypalTransactionId(stateData.paypalResponse) : stateData.razorpayPaymentId}</span>\r\n                    </label>\r\n                  </div>\r\n                  {\r\n                    stateData.paymentMode && stateData.paymentMode.toLowerCase() === 'paypal' &&\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Shippment Type</div>\r\n                        <span className=\"uk-text-small\">{stateData.standardShipping === false ? 'Express' : 'Standard'}</span>\r\n                      </label>\r\n                    </div>\r\n                  }\r\n\r\n                </div>\r\n                <div className=\"uk-divider-icon\"></div>\r\n              </fieldset>\r\n              {\r\n                stateData.userDetails &&\r\n                <fieldset className=\"uk-fieldset\">\r\n                  <legend className=\"uk-h4\">#User Details</legend>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Name</div>\r\n                        <span className=\"uk-text-small\">\r\n                          {stateData.userDetails.firstName + ' ' + stateData.userDetails.lastName}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Mobile</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.mobile}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Email</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.emailAddress}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Discount</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.discount || 0}%</span>\r\n                      </label>\r\n                    </div>\r\n                    {/* <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Gender</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.gender}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Date of birth</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.dob}</span>\r\n                      </label>\r\n                    </div> */}\r\n                  </div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Country</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.country}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">State</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.state}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">City</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.city}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Pincode</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.pincode}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Address</div>\r\n                        <span className=\"uk-text-small\">\r\n                          {\r\n                            stateData.userDetails.addressLineOne\r\n                            + ' ' +\r\n                            stateData.userDetails.addressLineTwo\r\n                            + ' ' +\r\n                            stateData.userDetails.addressLineThree\r\n                          }\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-divider-icon\"></div>\r\n                </fieldset>\r\n              }\r\n              {\r\n                stateData.orderItems && stateData.orderItems.length > 0 &&\r\n                <fieldset className=\"uk-fieldset\">\r\n                  <legend className=\"uk-h4\">#Order Items</legend>\r\n                  {\r\n                    stateData.orderItems.map((product, index) => {\r\n                      return (\r\n                        <Fragment key={index}>\r\n                          <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Product Image</div>\r\n                                <div className=\"tm-ratio tm-ratio-16-9\">\r\n                                  <a className=\"tm-media-box\" onClick={() => history.push('/productDetails/' + product.productId)}>\r\n                                    <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + product.productImage} alt={product.productImage} /></figure>\r\n                                  </a>\r\n                                </div>\r\n                                {/* <img src={serverImagePath + product.productImage} alt={product.productImage} /> */}\r\n                              </label>\r\n                            </div>\r\n\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Name</div>\r\n                                <span className=\"uk-text-small\">{product.productName}</span>\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Quantity</div>\r\n                                <span className=\"uk-text-small\">{product.quantity}</span>\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Price</div>\r\n                                <span className=\"uk-text-small\">{product.currency.toString() !== '1' ? '$' : '₹'}{product.productPrice}</span>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div uk-grid=\"true\" className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" >\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Shipper</div>\r\n                                <select className=\"uk-select shipper-max-width\" name=\"shipper\" id=\"shipper\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].shipper || '0'}\r\n                                  onChange={(e) => updateShipmentData(index, 'shipper', e.currentTarget.value)}\r\n                                >\r\n                                  <option key='0' value={0}>Select</option>\r\n                                  {\r\n                                    shippers.data?.map((shipper, index) => {\r\n                                      return <option key={index} value={shipper.shipperId}>{shipper.shipperName}</option>\r\n                                    })\r\n                                  }\r\n                                </select>\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Tracking Number</div>\r\n                                <input className=\"uk-input shipper-max-width\" id=\"trackingNumber\" type=\"text\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].trackingNumber || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'trackingNumber', e.currentTarget.value)}\r\n                                />\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Shipping Date</div>\r\n                                <input className=\"uk-input shipper-max-width\" id=\"shippingDate\" type=\"date\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].shippingDate || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'shippingDate', e.currentTarget.value)} />\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Delivery Date</div>\r\n                                <input className=\"uk-input shipper-max-width\" id=\"deliveryDate\" type=\"date\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].deliveryDate || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'deliveryDate', e.currentTarget.value)}\r\n                                />\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div uk-grid=\"true\" className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" >\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Return Status</div>\r\n                                <select className=\"uk-select shipper-max-width\" name=\"returnStatus\" id=\"returnStatus\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].returnStatus || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'returnStatus', e.currentTarget.value)}\r\n                                >\r\n                                  <option key='0' value={0}>Select</option>\r\n                                  <option key='1' value='In Progress'>In Progress</option>\r\n                                  <option key='2' value='Accepted'>Accepted</option>\r\n                                  <option key='3' value='Declined'>Declined</option>\r\n                                </select>\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Payment Returned</div>\r\n                                <select className=\"uk-select shipper-max-width\" name=\"paymentReturned\" id=\"paymentReturned\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].paymentReturned || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'paymentReturned', e.currentTarget.value)}\r\n                                >\r\n                                  <option key='0' value={0}>Select</option>\r\n                                  <option key='1' value='No'>No</option>\r\n                                  <option key='2' value='Yes'>Yes</option>\r\n                                </select>\r\n                              </label>\r\n                            </div>\r\n                            {/* <div>\r\n                            </div> */}\r\n\r\n                          </div>\r\n                          <div uk-grid=\"true\" className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" >\r\n                            <div className=\"uk-nav-center\">\r\n                              {\r\n                                shipmentStatus.data?.orderDetailId?.toString() === product.orderDetailId.toString() &&\r\n                                <NotificationContainer {...shipmentStatus} />\r\n                              }\r\n                              <label>\r\n                                {/* <div className=\"uk-form-label\">Save Details</div> */}\r\n                                <button className=\"uk-button uk-button-primary \"\r\n                                  disabled={shipmentStatus.data?.orderDetailId?.toString() === product.orderDetailId.toString() && shipmentStatus._isLoading}\r\n                                  onClick={(e) => { updateOrderStatus(index); e.preventDefault() }}>\r\n                                  {\r\n                                    shipmentStatus.data?.orderDetailId?.toString() === product.orderDetailId.toString() &&\r\n                                    shipmentStatus._isLoading &&\r\n                                    <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                                  }\r\n                                    Submit\r\n                                </button>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"uk-divider-order-items\"></div>\r\n                        </Fragment>\r\n                      )\r\n                    })\r\n                  }\r\n                </fieldset>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          {/* <NotificationContainer {...sizeActionStatus} />\r\n          <button disabled={sizeActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              sizeActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button> */}\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  OrderDetails\r\n}","import React, { useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, Shipper, saveShipper } from 'reducers';\r\nimport { OrderShipper } from 'types';\r\n\r\nconst ShipperDetails: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const shipperActionStatus = useSelector<AppState, Shipper>(state => state.shipper);\r\n  const shipperFormik = useFormik({\r\n    initialValues: {\r\n      shipperName: '',\r\n      trackingLink: '',\r\n      shipperId: '0'\r\n    },\r\n    validationSchema: Yup.object({\r\n      shipperName: Yup.string().required('Required'),\r\n      trackingLink: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (values: OrderShipper) => {\r\n      dispatch(saveShipper(values));\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (shipperActionStatus._isSuccess) {\r\n      shipperFormik.resetForm();\r\n    }\r\n  }, [shipperActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={shipperFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Shipper</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Shipper Name</div>\r\n                      <input className=\"uk-input \" id=\"shipperName\" type=\"input\"\r\n                        {...shipperFormik.getFieldProps('shipperName')} />\r\n                      {\r\n                        shipperFormik.touched.shipperName && shipperFormik.errors.shipperName ? (\r\n                          <span className=\"uk-text-danger\">{shipperFormik.errors.shipperName}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Tracking Link</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...shipperFormik.getFieldProps('trackingLink')} />\r\n                      {\r\n                        shipperFormik.touched.trackingLink && shipperFormik.errors.trackingLink ? (\r\n                          <span className=\"uk-text-danger\">{shipperFormik.errors.trackingLink}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...shipperActionStatus} />\r\n          <button disabled={shipperActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              shipperActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ShipperDetails\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductCoupon, OrderShipper } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateCoupon, Coupon, Shipper, updateShipper } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst ShipperList: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const deleteShipper = (shipperId: string, shipperName:string, trackingLink:string) => {\r\n    const input = window.confirm('Sure want to delete?');\r\n    if(input)dispatch(updateShipper({shipperId,shipperName,trackingLink},true));\r\n  } \r\n  const stateData = useSelector<AppState, OrderShipper[]>(state => state.shipper.data || []);  \r\n  const productColumns = [\r\n    {\r\n      name: 'Shipper Name',\r\n      selector: 'shipperName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Tracking Link',\r\n      selector: 'trackingLink',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Delete',\r\n      sortable: false,\r\n      cell: (row: { shipperName: string, trackingLink: string, shipperId: string }) => {\r\n        return  <button type=\"submit\" className=\"uk-button-small uk-button-danger\" onClick={() => deleteShipper(row.shipperId, row.shipperName, row.trackingLink)}>\r\n                   <span>Delete</span>\r\n                </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return(\r\n    <AdminProductList \r\n      productColumns={productColumns} \r\n      productType={SubProducts.SHIPPER} \r\n      ExpandableComponent= {ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Shipper Name\"\r\n      expandableRows = {true}\r\n      sortByColumn=\"shipperName\"/>\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const {shipperId,shipperName,trackingLink }: OrderShipper = data;\r\n  const shipperActionStatus = useSelector<AppState, Shipper>(state => state.shipper);\r\n\r\n  const shipperQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      shipperId,\r\n      shipperName,\r\n      trackingLink\r\n    },\r\n    validationSchema: Yup.object({\r\n      shipperName: Yup.string().required('Required'),\r\n      trackingLink: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (value: OrderShipper) => {\r\n      dispatch(updateShipper(value));\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={shipperQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Shipper Name</div>\r\n              <input className=\"uk-input \" id=\"shipperName\" type=\"input\"\r\n                {...shipperQuickViewFormik.getFieldProps('shipperName')} />\r\n              {\r\n                shipperQuickViewFormik.touched.shipperName && shipperQuickViewFormik.errors.shipperName ? (\r\n                  <span className=\"uk-text-danger\">{shipperQuickViewFormik.errors.shipperName}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Tracking Link</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...shipperQuickViewFormik.getFieldProps('trackingLink')} />\r\n              {\r\n                shipperQuickViewFormik.touched.trackingLink && shipperQuickViewFormik.errors.trackingLink ? (\r\n                  <span className=\"uk-text-danger\">{shipperQuickViewFormik.errors.trackingLink}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Shipper Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  shipperActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Update</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n        {shipperQuickViewFormik.isSubmitting && <NotificationContainer {...shipperActionStatus}/>}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ShipperList,\r\n  ExpandableComponent\r\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, setUser, UserInformation, updateUserDiscount } from 'reducers';\r\nimport { User } from 'types';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\ninterface Props{\r\n  addEditToggle: Function;\r\n}\r\n\r\nconst UserList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const stateData = useSelector<AppState, User[]>(state => state.user.allUsers || []);\r\n  const productColumns = [\r\n    {\r\n      name: 'Email',\r\n      selector: 'emailAddress',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Mobile',\r\n      selector: 'mobile',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'First Name',\r\n      selector: 'firstName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Last Name',\r\n      selector: 'lastName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'View Details',\r\n      sortable: false,\r\n      cell: (row:  User) => {\r\n        return <button type=\"submit\" className=\"uk-button-small uk-button-primary\" onClick={() => {dispatch(setUser(row));props.addEditToggle(true)}}>\r\n          <span>View</span>\r\n        </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.USERS}\r\n      stateData={stateData}\r\n      ExpandableComponent={ExpandableComponent}\r\n      searchPlaceholder=\"Search Email / Mobile\"\r\n      expandableRows={true} />\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { emailAddress, discount }: User = data;\r\n  const userActionStatus = useSelector<AppState, UserInformation>(state => state.user);\r\n\r\n  const userDiscountQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      emailAddress: emailAddress || '',\r\n      discount: discount || ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      emailAddress: Yup.string().required('Required'),\r\n      discount: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (value) => {\r\n      dispatch(updateUserDiscount(value.discount || '0', value.emailAddress.toString()));\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={userDiscountQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Discount Percentage</div>\r\n              <input className=\"uk-input \" id=\"discount\" type=\"input\"\r\n                {...userDiscountQuickViewFormik.getFieldProps('discount')} />\r\n              {\r\n                userDiscountQuickViewFormik.touched.discount && userDiscountQuickViewFormik.errors.discount ? (\r\n                  <span className=\"uk-text-danger\">{userDiscountQuickViewFormik.errors.discount}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  userActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n        {userDiscountQuickViewFormik.isSubmitting && <NotificationContainer {...userActionStatus}/>}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserList\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState } from 'reducers';\r\nimport { User } from 'types';\r\n\r\nconst UserDetails: React.FunctionComponent = () => {\r\n  const userData = useSelector<AppState, User>(state => state.user.data || {} as User);\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <header className=\"uk-card-header\"><h1 className=\"uk-h2\">Order Summay</h1></header>\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <fieldset className=\"uk-fieldset\">\r\n                  <legend className=\"uk-h4\">#User Details</legend>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Name</div>\r\n                        <span className=\"uk-text-small\">\r\n                          {userData.firstName + ' ' + userData.lastName}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Mobile</div>\r\n                        <span className=\"uk-text-small\">{userData.mobile}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Email</div>\r\n                        <span className=\"uk-text-small\">{userData.emailAddress}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Discount</div>\r\n                        <span className=\"uk-text-small\">{userData.discount || 0}%</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Country</div>\r\n                        <span className=\"uk-text-small\">{userData.country}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">State</div>\r\n                        <span className=\"uk-text-small\">{userData.state}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">City</div>\r\n                        <span className=\"uk-text-small\">{userData.city}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Pincode</div>\r\n                        <span className=\"uk-text-small\">{userData.pincode}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Address</div>\r\n                        <span className=\"uk-text-small\">\r\n                          {\r\n                            userData.addressLineOne\r\n                            + ' ' +\r\n                            userData.addressLineTwo\r\n                            + ' ' +\r\n                            userData.addressLineThree\r\n                          }\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-divider-icon\"></div>\r\n                </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserDetails\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from \"react-router\";\r\nimport { AdminNav } from '.';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ColourList, ProductColour } from './subComponents/colour';\r\nimport { ProductSize, SizeList } from './subComponents/size';\r\nimport { ProductSubCategory, SubCategoryList } from './subComponents/subCategory';\r\nimport { ProductCoupon, CouponList } from './subComponents/coupon';\r\nimport { ProductItem, ProductList } from './subComponents/product';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getProduct, setDefaulState } from 'reducers';\r\nimport { OrderList, OrderDetails } from './subComponents/orders';\r\nimport { ShipperDetails, ShipperList } from './subComponents/shippers';\r\nimport { UserList, UserDetails } from './subComponents/users';\r\n\r\n\r\n\r\nconst MainContainer: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const {product, productId} = useParams();\r\n\r\n  useEffect(() => {\r\n    if(product == 'product' && productId){\r\n      dispatch(getProduct(Number(productId)));\r\n      setIsOnAdd(true);\r\n      setSubProductId(SubProducts.PRODUCT)\r\n    } else {\r\n      dispatch(setDefaulState());\r\n    }\r\n  },[product, productId])\r\n\r\n  const [isOnAdd, setIsOnAdd] = useState(false);\r\n  const [subProductId, setSubProductId] = useState(SubProducts.ORDERS);\r\n\r\n  const subProductToggle = (subProductId: number) => {\r\n    setSubProductId(subProductId);\r\n  }\r\n  const addEditToggle = (isOnAdd: boolean) => {\r\n    setIsOnAdd(isOnAdd);\r\n  }\r\n\r\n  const showSubProductComponent = () => {\r\n    switch (subProductId) {\r\n      case SubProducts.COLOUR:\r\n        return isOnAdd ? <ProductColour /> : <ColourList/>\r\n      case SubProducts.SIZE:\r\n        return isOnAdd ? <ProductSize/> : <SizeList/>\r\n      case SubProducts.SUB_PRODUCT:\r\n        return isOnAdd ? <ProductSubCategory/> : <SubCategoryList/>\r\n      case SubProducts.COUPONS:\r\n        return isOnAdd ? <ProductCoupon/> : <CouponList/>\r\n      case SubProducts.PRODUCT:\r\n        return isOnAdd ? <ProductItem/> : <ProductList addEditToggle={addEditToggle}/>\r\n      case SubProducts.ORDERS:\r\n        return isOnAdd ? <OrderDetails/> : <OrderList addEditToggle={addEditToggle}/>\r\n      case SubProducts.SHIPPER:\r\n        return isOnAdd ? <ShipperDetails/> : <ShipperList/>\r\n      case SubProducts.USERS:\r\n        return isOnAdd ? <UserDetails/> : <UserList addEditToggle={addEditToggle}/>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n            <AdminNav subProductToggle={subProductToggle} addEditToggle={addEditToggle} />\r\n            { showSubProductComponent() }\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  MainContainer\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport queryString from 'query-string';\r\n\r\nimport { getCustomerProducts, Product, setDefaulState } from 'reducers/Product';\r\nimport { AppState, SubCategory, Size, Colour, addUpdateCart, Cart, UserLocation, PreSelectedFilters, setPreSelectedFilter } from 'reducers';\r\nimport { serverImagePath, pageSize } from 'appConstants';\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport { ProductItem, CustomerCart, Search } from 'types';\r\nimport { calculateUserDiscount, getCurrencyIcon, showINRUSD } from 'services';\r\nimport { LoadingProductArticle } from 'components/shared';\r\nimport { setSearch } from 'reducers/Search';\r\n\r\n\r\ninterface Props {\r\n  categoryId: number[];\r\n  colourId?: number[];\r\n  sizeId?: number[];\r\n  subCategoryId?: number[];\r\n  startPrice?: string;\r\n  endPrice?: string;\r\n}\r\n\r\nconst CustomerProductList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const {product,filterOn} = useParams();\r\n  const [hasMoreProducts, setHasMoreProducts] = useState(false);\r\n\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const productSize = useSelector<AppState, Size>(state => state.size);\r\n  const productColour = useSelector<AppState, Colour>(state => state.colour);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const search = useSelector<AppState, Search>(state => state.search.data || {} as Search);\r\n  const preSelectedFilter = useSelector<AppState, PreSelectedFilters>(state => state.preSelectedFilters);\r\n\r\n\r\n  // useEffect(() => {\r\n  //   if (props.categoryId !== 0) {\r\n  //     console.log('effect list')\r\n  //     dispatch(getCustomerProducts(0, pageSize, props.categoryId, props.subCategoryId || [], [], []));\r\n  //     setHasMoreProducts(true);\r\n  //   }\r\n  // }, [props.categoryId]);\r\n\r\n  useEffect(() => {\r\n    if(!products._isLoading && props.categoryId.length >0  && !subCategories._isLoading && !productSize._isLoading && !productColour._isLoading){\r\n      dispatch(setDefaulState());\r\n      dispatch(getCustomerProducts(0, pageSize, props.categoryId, props.subCategoryId || [], \r\n        props.colourId || [], props.sizeId || [], props.startPrice || '', props.endPrice||'', \r\n        userLocation.data || 'IN',\r\n        search.searchText || queryString.parse(window.location.search.split('?')[1])['searchText']?.toString() || '' \r\n        , true));\r\n\r\n      dispatch(setSearch({\r\n        categoryId: props.categoryId,\r\n        colourId: props.colourId || [],\r\n        currency: userLocation.data || 'IN',\r\n        endPrice: props.endPrice||'',\r\n        sizeId: props.sizeId || [],\r\n        startPrice: props.startPrice || '',\r\n        subCategoryId: props.subCategoryId || [],\r\n        searchText: search.searchText || \r\n        queryString.parse(window.location.search.split('?')[1])['searchText']?.toString() || ''\r\n      }));\r\n    }\r\n    if(props.colourId?.toString() || props.sizeId?.toString() || props.subCategoryId?.toString() \r\n        || props.startPrice || props.endPrice || search.searchText || queryString.parse(window.location.search.split('?')[1])['searchText']?.toString()) {\r\n          let searchArray = [];\r\n           if(props.colourId?.toString()){\r\n             searchArray.push(\"colourId=\"+props.colourId.toString())\r\n           }\r\n           if(props.sizeId?.toString()){\r\n            searchArray.push(\"sizeId=\"+props.sizeId.toString())\r\n          } \r\n          if(props.subCategoryId?.toString()){\r\n            searchArray.push(\"subCategoryId=\"+props.subCategoryId.toString())\r\n          } \r\n          if(props.startPrice?.toString()){\r\n            searchArray.push(\"startPrice=\"+props.startPrice.toString())\r\n          } \r\n          if(props.endPrice?.toString()){\r\n            searchArray.push(\"endPrice=\"+props.endPrice.toString())\r\n          } \r\n          if(search.searchText?.toString() || queryString.parse(window.location.search.split('?')[1])['searchText']?.toString() ){\r\n            searchArray.push(\"searchText=\"+(search.searchText?.toString() || queryString.parse(window.location.search.split('?')[1])['searchText']?.toString() ))\r\n          }\r\n\r\n        history.push({\r\n          pathname: '/product/'+ product + `${filterOn ? \"/\"+filterOn: \"\"}`,\r\n          search: '?' + `${searchArray.length === 1 ? searchArray[0] :  searchArray.join('&')}`\r\n        })\r\n      }else{\r\n        history.push({\r\n          pathname: '/product/'+ product + `${filterOn ? \"/\"+filterOn: \"\"}`\r\n        })\r\n      }\r\n  },[props.sizeId,props.categoryId,props.colourId,props.subCategoryId,props.startPrice,props.endPrice, subCategories._isLoading, productSize._isLoading, productColour._isLoading])\r\n\r\n  useEffect(()=> {\r\n    return () => {\r\n      dispatch(setSearch({\r\n        categoryId: [],\r\n        colourId: [],\r\n        currency: userLocation.data || 'IN',\r\n        endPrice: '',\r\n        sizeId:  [],\r\n        startPrice: '',\r\n        subCategoryId:  [],\r\n        searchText: search.searchText || ''\r\n      }));\r\n    }\r\n  },[]);\r\n\r\n  const fetchNextProducts = () => {\r\n    if (!products._isLoading && stateData && props.categoryId.length >0 ) {\r\n      dispatch(getCustomerProducts(stateData.length, pageSize, props.categoryId, props.subCategoryId || [], props.colourId || [], props.sizeId || [], props.startPrice || '', props.endPrice||'', userLocation.data || 'IN',search.searchText || ''));\r\n      dispatch(setSearch({\r\n        categoryId: props.categoryId,\r\n        colourId: props.colourId || [],\r\n        currency: userLocation.data || 'IN',\r\n        endPrice: props.endPrice||'',\r\n        sizeId: props.sizeId || [],\r\n        startPrice: props.startPrice || '',\r\n        subCategoryId: props.subCategoryId || [],\r\n        searchText: search.searchText || ''\r\n      }));\r\n    }\r\n  }\r\n\r\n  const products = useSelector<AppState, Product>(state => state.product || []);\r\n  useEffect(() => {\r\n    setHasMoreProducts(products._hasMoreProducts || false);\r\n  }, [products._hasMoreProducts]);\r\n\r\n\r\n  const stateData = products.data;\r\n\r\n  const addToCart = (product: ProductItem)=> {\r\n    if(!userData.data?.userId){\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: product.productDetailId,\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: showINRUSD(userLocation.data || 'IN', product),\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, false))\r\n    }else {\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: '0',\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: '0',\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, true))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"uk-width-expand\">\r\n      <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n        <div>\r\n          <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n            <div className=\"uk-grid-collapse uk-child-width-1-1\" id=\"products\" uk-grid=\"true\">\r\n              <div className=\"uk-card-header uk-hidden@m product-list-filter-bg\"  uk-sticky=\"offset: 60;bottom: #offset\">\r\n                <div className=\"uk-grid-small uk-flex-middle uk-flex-center\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-1-1 uk-width-auto@s uk-flex uk-flex-center uk-flex-middle\">\r\n                    <button className=\"uk-button uk-button-default uk-button-small uk-hidden@m\"  uk-toggle=\"target: #filters\">\r\n                      <span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: settings; ratio: .75;\"></span>Filters\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div>\r\n\r\n                <InfiniteScroll\r\n                  dataLength={stateData && stateData.length || 0}\r\n                  next={fetchNextProducts}\r\n                  hasMore={hasMoreProducts}\r\n                  loader={\r\n                    <div style={{ textAlign: \"center\", marginTop: \"10px\" }}>\r\n                      <h4>Loading...</h4>\r\n                    </div>\r\n                  }\r\n                  endMessage={\r\n                    <p style={{ textAlign: \"center\" }}>\r\n                      <b>That's all for now. Do check back after some time for more products.</b>\r\n                    </p>\r\n                  }\r\n                >\r\n                  <div className=\"uk-grid-collapse uk-child-width-custom tm-products-grid js-products-grid\" uk-grid=\"true\">\r\n                    {\r\n                       stateData && stateData.length > 0 ? stateData.map((product, index) => {\r\n                        return (\r\n                          <article className=\"tm-product-card\" key={index}>\r\n                            <div className=\"tm-product-card-media\">\r\n                              <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                <a className=\"tm-media-box\" onClick={()=> history.push('/productDetails/'+ product.productId)}>\r\n                                  \r\n                                  <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + product.imagePaths} alt={product.imageNames}/></figure>\r\n                                </a>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"tm-product-card-body\">\r\n                              <div className=\"tm-product-card-info\">\r\n                                <div className=\"uk-text-meta uk-margin-xsmall-bottom\">{product.productCategoryName}</div>\r\n                                <h3 className=\"tm-product-card-title\"><a className=\"uk-link-heading\" onClick={()=> history.push('/productDetails/'+ product.productId)}>{product.name}</a></h3>\r\n                              </div>\r\n                              <div className=\"tm-product-card-shop\">\r\n                                <div className=\"tm-product-card-prices\">\r\n                                  {\r\n                                    userData.data?.discount && userData.data?.discount !== '0' &&\r\n                                    <del className=\"uk-text-meta\">{getCurrencyIcon(userLocation.data || 'IN')} {showINRUSD(userLocation.data || 'IN', product)}</del>\r\n                                  }\r\n                                  <div className=\"tm-product-card-price\">\r\n                                    {getCurrencyIcon(userLocation.data || 'IN')} {calculateUserDiscount(userData.data?.discount ||'0', showINRUSD(userLocation.data || 'IN', product))}\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"tm-product-card-add\">\r\n                                  <button className=\"uk-button uk-button-primary tm-product-card-add-button tm-shine js-add-to-cart\">\r\n                                    {\r\n                                      cart._isLoading && <span uk-spinner=\"true\"></span>\r\n                                    }\r\n                                    {\r\n                                      !cart._isLoading && (\r\n                                        <>\r\n                                        <span className=\"tm-product-card-add-button-icon\" uk-icon=\"cart\" onClick={() => addToCart(product)}></span>\r\n                                        <span className=\"tm-product-card-add-button-text\">add to cart</span>\r\n                                        </>\r\n                                      )\r\n                                    }\r\n                                    \r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </article>\r\n                        )\r\n                      }) : products._hasMoreProducts  && Array(pageSize).fill(1).map((value, index) => <LoadingProductArticle key={index} keyIndex={index}/>)\r\n                    }\r\n                  </div>\r\n                </InfiniteScroll>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerProductList\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { CustomerProductFilter } from '.';\r\nimport { AppState, ProductCount, getActiveProductCount, defaultPreSelectedFitler, PreSelectedFilters, setPreSelectedFilter } from 'reducers';\r\nimport { SubCategory, getSubCategory } from 'reducers/SubCategory';\r\nimport { ProductSubCategory, ProductSize, ProductColor, Search } from 'types';\r\nimport { filterSubcategories } from 'services';\r\nimport { SubCategories } from 'appConstants';\r\nimport { CustomerProductList } from './CustomerProductList';\r\nimport { setDefaulState } from 'reducers/Product';\r\nimport { getSize, Size } from 'reducers/Size';\r\nimport { getColour, Colour } from 'reducers/Colour';\r\nimport queryString from 'query-string';\r\n\r\n\r\n\r\n\r\nconst CustomerContainer: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { product, filterOn } = useParams();\r\n  const [colourId, setColourId] = useState<number[]>([]);\r\n  const [sizeId, setSizeId] = useState<number[]>([]);\r\n  const [subCategoryId, setSubCategoryId] = useState<number[]>([]);\r\n  const [startPrice, setStartPrice] = useState('');\r\n  const [endPrice, setEndPrice] = useState('');\r\n  const [categoryId, setcategoryId] = useState<number[]>([]);\r\n  const [subCategoryQueryParam, setSubCategoryQueryParam] = useState<ProductSubCategory[]>([]);\r\n  const productSize = useSelector<AppState, ProductSize[]>(state => state.size.data || []);\r\n  const productColour = useSelector<AppState, ProductColor[]>(state => state.colour.data || []);\r\n  const search = useSelector<AppState, Search>(state => state.search.data || {} as Search);\r\n  const preSelectedFilter = useSelector<AppState, PreSelectedFilters>(state => state.preSelectedFilters);\r\n  let querySearch = useLocation().search; \r\n  useEffect(() => {\r\n    dispatch(getSubCategory());\r\n    dispatch(getSize());\r\n    dispatch(getColour());\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   return () => {\r\n  //     dispatch(defaultPreSelectedFitler());\r\n  //   }\r\n  // })\r\n\r\n  useEffect(() => {\r\n    dispatch(setDefaulState());\r\n    const filteredKey = Object.keys(SubCategories).filter((key) => key.toLowerCase() === product.toLowerCase());\r\n    if (filteredKey[0]) {\r\n      setcategoryId([SubCategories[filteredKey[0]]]);\r\n    } else {\r\n      const subCateId: number[] = [];\r\n      for (let key in SubCategories) {\r\n        subCateId.push(SubCategories[key])\r\n      }\r\n      setcategoryId(subCateId)\r\n    }\r\n    if(preSelectedFilter.data?.subcategoryname.toString() !==\"\" &&product.toString().toLowerCase() !== preSelectedFilter.data?.subcategoryname.toLowerCase()){\r\n      setColourId([])\r\n      setSizeId([])\r\n      setStartPrice('')\r\n      setEndPrice('')\r\n      // dispatch(defaultPreSelectedFitler());\r\n      // dispatch(setPreSelectedFilter('subcategoryname',product));\r\n    }\r\n\r\n    const queryPramas = querySearch.split('?')[1];\r\n    const filterPrams = queryString.parse(queryPramas);\r\n    if (!filterOn && preSelectedFilter.data?.subcategoryId.length === 0 && !filterPrams['subCategoryId']?.toString()) {\r\n      setSubCategoryId([]);\r\n    }\r\n\r\n  }, [product]);\r\n\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const activeProductCount = useSelector<AppState, ProductCount>(state => state.productCount);\r\n  const productKey = Object.keys(SubCategories).find((subcategory) => subcategory.toLowerCase() === product.toLowerCase()) || '';\r\n  let filteredSubcategories = filterSubcategories(subCategories, SubCategories[productKey]);;\r\n  if (product.toLowerCase() === 'search') {\r\n    filteredSubcategories = subCategories.data || []\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (filterOn && !subCategories._isLoading && subCategories.data && subCategories.data.length > 0) {\r\n      setSubCategoryId([Number(subCategories.data?.filter(({ code }) => code.toLowerCase() === filterOn.toLowerCase())[0].subCategoryId)]);\r\n      setSubCategoryQueryParam(subCategories.data?.filter(({ code }) => code.toLowerCase() === filterOn.toLowerCase()) || [])\r\n    }\r\n  }, [filterOn, subCategories._isLoading])\r\n\r\n  const getTotalProductCount = () => {\r\n    let count = 0;\r\n    const activeProducts = activeProductCount.data\r\n    if (activeProducts) {\r\n      const selectedSubCat = subCategoryId.length > 0 ? subCategoryId : filteredSubcategories.map(({ subCategoryId }) => Number(subCategoryId));\r\n      const selectedColour = colourId.length > 0 ? colourId : productColour.length > 0 ? productColour.map(({ colourId }) => Number(colourId)) : [];\r\n      const selectedSize = sizeId.length > 0 ? sizeId : [];\r\n      // const selectedColour = colourId.length > 0 ? colourId : productColour.length> 0 ?  productColour.map(({colourId}) => Number(colourId)) : [];\r\n      // const selectedSize = sizeId.length > 0 ? sizeId : productSize.length > 0 ? productSize.map(({sizeId}) => Number(sizeId)) : [];\r\n      if (selectedSize.length === 0) {\r\n        selectedSubCat.forEach((subCategory) => {\r\n          if(activeProducts[subCategory]){\r\n            selectedColour.forEach((colour) => {\r\n              if(activeProducts[subCategory][colour] && activeProducts[subCategory][colour].count){\r\n                count += activeProducts[subCategory][colour].count\r\n              }\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        selectedSubCat.forEach((subCategory) => {\r\n          if(activeProducts[subCategory]){\r\n            selectedColour.forEach((colour) => {\r\n              if(activeProducts[subCategory][colour]){\r\n                let localCount = 0;\r\n                for(var i =0; i< selectedSize.length; i++){\r\n                  if(activeProducts[subCategory][colour].size[selectedSize[i]]){\r\n                    if(activeProducts[subCategory][colour].size[selectedSize[i]] === activeProducts[subCategory][colour].count){\r\n                      localCount = activeProducts[subCategory][colour].count;\r\n                      break;\r\n                    }else{\r\n                      localCount +=activeProducts[subCategory][colour].size[selectedSize[i]];\r\n                    }\r\n                  }\r\n                }\r\n                count+=localCount;\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    }\r\n    return count;\r\n  };\r\n\r\n  // const getIdsForfilter = () => {\r\n  //   const filteredKey = Object.keys(SubCategories).filter((key) => key.toLowerCase() === product.toLowerCase());\r\n  //   if(filteredKey[0]){\r\n  //     setcategoryId(Number(SubCategories[filteredKey[0]]));\r\n  //   }\r\n  // }\r\n\r\n  // getIdsForfilter()\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a onClick={() => history.push('/')}>Home</a></li>\r\n                <li><span>Product</span></li>\r\n              </ul>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom customer-product\">{product}</h1>\r\n              {\r\n                search.searchText === '' && <div className=\"uk-text-meta uk-margin-xsmall-top\">{getTotalProductCount()} items</div>\r\n              }\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n                {\r\n                  <CustomerProductFilter\r\n                    subCategories={filteredSubcategories}\r\n                    activeProductCount={activeProductCount}\r\n                    filterSelected={subCategoryQueryParam}\r\n                    categoryId={categoryId}\r\n                    setColourId={setColourId}\r\n                    setSizeId={setSizeId}\r\n                    setSubCategoryId={setSubCategoryId}\r\n                    setStartPrice={setStartPrice}\r\n                    setEndPrice={setEndPrice}\r\n                  />\r\n                }\r\n                {\r\n                  <CustomerProductList\r\n                    categoryId={categoryId}\r\n                    colourId={colourId}\r\n                    sizeId={sizeId}\r\n                    subCategoryId={subCategoryId}\r\n                    startPrice={startPrice}\r\n                    endPrice={endPrice}\r\n                  />\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerContainer\r\n}","import React, { Dispatch, SetStateAction, useState, useEffect } from 'react';\r\nimport { ProductSubCategory, ActiveProductCount, ProductColor, ProductSize } from 'types';\r\nimport { ProductCount, AppState, Size, Colour, getCustomerProducts, setPreSelectedFilter, defaultPreSelectedFitler, PreSelectedFilters, setAllFilters } from 'reducers';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// import { Size } from 'reducers/Size';\r\n// import { Colour } from 'reducers/Colour';\r\nimport { filterSize } from 'services';\r\nimport { pageSize } from 'appConstants';\r\nimport { setDefaulState } from 'reducers/Product';\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport { setSearch } from 'reducers/Search';\r\n// import { getCustomerProducts } from 'reducers/Product';\r\n\r\n\r\ninterface Props {\r\n  filterSelected: ProductSubCategory[];\r\n  subCategories: ProductSubCategory[];\r\n  activeProductCount: ProductCount;\r\n  categoryId: number[];\r\n  setColourId: Dispatch<SetStateAction<number[]>>;\r\n  setSizeId: Dispatch<SetStateAction<number[]>>;\r\n  setSubCategoryId: Dispatch<SetStateAction<number[]>>;\r\n  setStartPrice: Dispatch<SetStateAction<string>>;\r\n  setEndPrice: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\n\r\nconst CustomerProductFilter: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const { product } = useParams();\r\n  const preSelectedFilter = useSelector<AppState, PreSelectedFilters>(state => state.preSelectedFilters);\r\n  const [filterColourId, setFilterColourId] = useState<number[]>([]);\r\n  const [filterSizeId, setFilterSizeId] = useState<number[]>([]);\r\n  const [filterSubCategory, setFilterSubCategory] = useState<number[]>([]);\r\n  const [filterStartPrice, setFilterStartPrice] = useState('');\r\n  const [filterEndPrice, setFilterEndPrice] = useState('');\r\n  const [startPriceTimer, setStartPriceTimer] = useState(0);\r\n  const [endPriceTimer, setEndPriceTimer] = useState(0);\r\n  const productSize = useSelector<AppState, Size>(state => state.size);\r\n  const productColour = useSelector<AppState, Colour>(state => state.colour);\r\n\r\n  const getProductCount = (id=0) => {\r\n    let count = 0;\r\n    const activeProducts = props.activeProductCount.data\r\n    if(activeProducts){\r\n      const selectedColour = filterColourId.length > 0 ? filterColourId : productColour.data && productColour.data.length> 0 ?  productColour.data.map(({colourId}) => Number(colourId)) : [];\r\n      const selectedSize = filterSizeId.length > 0 ? filterSizeId  : [];\r\n      const selectedSubCat = activeProducts[id];\r\n      if(selectedSubCat){\r\n        if (selectedSize.length === 0) {\r\n            selectedColour.forEach((colour) => {\r\n              if(selectedSubCat[colour]){\r\n                count += selectedSubCat[colour].count\r\n              }\r\n            })\r\n        } else {\r\n            selectedColour.forEach((colour) => {\r\n              let localCount = 0;\r\n              for(var i =0; i< selectedSize.length; i++){\r\n                if(selectedSubCat[colour] && selectedSubCat[colour].size && selectedSubCat[colour].size[selectedSize[i]]){\r\n                  if(selectedSubCat[colour].size[selectedSize[i]] === selectedSubCat[colour].count){\r\n                    localCount = selectedSubCat[colour].count;\r\n                    break;\r\n                  }else{\r\n                    localCount +=selectedSubCat[colour].size[selectedSize[i]];\r\n                  }\r\n                }\r\n              }\r\n              count+=localCount;\r\n            })\r\n        }\r\n      }\r\n    }\r\n    return count\r\n  }\r\n\r\n  const toggleAddingRemovingId = (ids: number[], newId: number) => {\r\n    const index = ids.indexOf(newId);\r\n    if (index > -1){\r\n      ids.splice(index,1);\r\n    } else {\r\n      ids.push(newId);\r\n    }\r\n    return ids;\r\n  }\r\n  const getFilteredProduct = (colour: number, size: number, subCategory?: number, startPrice?: string, endPrice?: string) => {\r\n    if(colour != 0){\r\n      const updatedColourFilter = toggleAddingRemovingId(filterColourId, colour);\r\n      setFilterColourId([...updatedColourFilter]);\r\n      props.setColourId([...updatedColourFilter]);\r\n      dispatch(setPreSelectedFilter('coloudId',[...updatedColourFilter]));\r\n    } else if (size != 0){\r\n      const updatedSizeFilter = toggleAddingRemovingId(filterSizeId, size);\r\n      setFilterSizeId([...updatedSizeFilter]);\r\n      props.setSizeId([...updatedSizeFilter]);\r\n      dispatch(setPreSelectedFilter('sizeId',[...updatedSizeFilter]));\r\n    } else if (subCategory && subCategory != 0){\r\n      const updatedSubCategory = toggleAddingRemovingId(filterSubCategory, subCategory);\r\n      setFilterSubCategory([...updatedSubCategory]);\r\n      props.setSubCategoryId([...updatedSubCategory]);\r\n      dispatch(setPreSelectedFilter('subcategoryId',[...updatedSubCategory]));\r\n    } else if(startPrice!=='0' && !endPrice){\r\n      setFilterStartPrice(startPrice || '');\r\n      window.clearTimeout(startPriceTimer);\r\n      setStartPriceTimer(window.setTimeout(() => {\r\n        props.setStartPrice(startPrice || '')\r\n        dispatch(setPreSelectedFilter('startPrice',startPrice|| ''));\r\n      },1000));\r\n    } else if(endPrice || (!endPrice && filterEndPrice)){\r\n      setFilterEndPrice(endPrice || '');\r\n      window.clearTimeout(endPriceTimer);\r\n      setEndPriceTimer(window.setTimeout(() => {\r\n        props.setEndPrice(endPrice || '')\r\n        dispatch(setPreSelectedFilter('endPrice',endPrice || ''));\r\n      },1000));\r\n    }\r\n  }\r\n\r\n  const restFilter = () => {\r\n    setFilterColourId([]);\r\n    props.setColourId([]);\r\n    setFilterSizeId([]);\r\n    props.setSizeId([]);\r\n    setFilterSubCategory([]);\r\n    props.setSubCategoryId([]);\r\n    dispatch(defaultPreSelectedFitler());\r\n    setFilterStartPrice('');\r\n    props.setStartPrice('');\r\n    setFilterEndPrice('');\r\n    props.setEndPrice('');\r\n  }\r\n\r\n  const convertQueryParamsToNumber = (query: string | undefined) => {\r\n    if(query){\r\n      return query.split(',').map((id) => Number(id));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(preSelectedFilter.data?.subcategoryname.toString() !==\"\" && product.toString().toLowerCase() !== preSelectedFilter.data?.subcategoryname.toLowerCase()){\r\n      restFilter();\r\n      // dispatch(defaultPreSelectedFitler());\r\n      dispatch(setPreSelectedFilter('subcategoryname',product));\r\n    }else {\r\n    const queryPramas = window.location.search.split('?')[1];\r\n    const filterPrams = queryString.parse(queryPramas);\r\n    const colourFilter = convertQueryParamsToNumber(filterPrams['colourId']?.toString()) || preSelectedFilter.data?.coloudId || []\r\n    const sizeFilter = convertQueryParamsToNumber(filterPrams['sizeId']?.toString()) ||preSelectedFilter.data?.sizeId || [];\r\n    const subCategoryFilter = convertQueryParamsToNumber(filterPrams['subCategoryId']?.toString()) ||preSelectedFilter.data?.subcategoryId || [];\r\n    const startPriceFilter = filterPrams['startPrice']?.toString() || preSelectedFilter.data?.startPrice || '';\r\n    const endPriceFilter = filterPrams['endPrice']?.toString() || preSelectedFilter.data?.endPrice || '';\r\n    setFilterColourId(colourFilter);\r\n    setFilterSizeId(sizeFilter);\r\n    setFilterSubCategory(subCategoryFilter);\r\n    setFilterStartPrice(startPriceFilter);\r\n    setFilterEndPrice(endPriceFilter);\r\n    dispatch(setAllFilters({\r\n      subcategoryId:subCategoryFilter,\r\n      coloudId:colourFilter,\r\n      sizeId:sizeFilter,\r\n      startPrice:startPriceFilter,\r\n      endPrice:endPriceFilter,\r\n      subcategoryname: product.toString().toLowerCase(),\r\n      searchText: filterPrams['searchText']?.toString() || ''\r\n    }))\r\n    props.setColourId([...colourFilter]);\r\n    props.setSizeId([...sizeFilter]);\r\n    props.setSubCategoryId([...subCategoryFilter]);\r\n    props.setStartPrice(startPriceFilter);\r\n    props.setEndPrice(endPriceFilter);\r\n    }\r\n  },[product]);\r\n  // useEffect(() => {\r\n  //   console.log('filter on effect')\r\n  //   if(props.filterSelected && props.filterSelected.length > 0){\r\n  //     if(filterSubCategory.length> 0){\r\n  //       setFilterSubCategory([]);\r\n  //     }\r\n  //     const updatedSubCategory = toggleAddingRemovingId(filterSubCategory, Number(props.filterSelected[0].subCategoryId));\r\n  //     setFilterSubCategory([...updatedSubCategory]);\r\n  //   }\r\n  // },[props.filterSelected]);\r\n\r\n  useEffect(() => {\r\n    if(props.filterSelected.length>0){\r\n      // const updatedSubCategory = toggleAddingRemovingId(filterSubCategory, Number(props.filterSelected[0].subCategoryId));\r\n      setFilterSubCategory([Number(props.filterSelected[0].subCategoryId)]);\r\n      dispatch(setPreSelectedFilter('subcategoryId',[Number(props.filterSelected[0].subCategoryId)]));\r\n      // props.setSubCategoryId([Number(props.filterSelected[0].subCategoryId)]);\r\n    }\r\n  }, [props.filterSelected]);\r\n\r\n  // useEffect(() => {\r\n  //   // dispatch(setDefaulState());\r\n  //   if(props.categoryId != 0){\r\n  //     console.log(filterColourId,filterSizeId, filterSubCategory)\r\n  //     console.log('effect filter')\r\n  //     dispatch(getCustomerProducts(0, pageSize, props.categoryId,filterSubCategory, filterColourId , filterSizeId, true));\r\n  //   }\r\n  // }, [filterColourId,filterSizeId, filterSubCategory,props.categoryId]);\r\n\r\n  return (\r\n    <aside className=\"uk-width-1-4 tm-aside-column tm-filters\" id=\"filters\" uk-offcanvas=\"overlay: true; container: false;\">\r\n      <div className=\"uk-offcanvas-bar uk-padding-remove\">\r\n        <div className=\"uk-card uk-card-default uk-card-small uk-flex uk-flex-column uk-height-1-1\">\r\n          <header className=\"uk-card-header uk-flex uk-flex-middle\">\r\n            <div className=\"uk-grid-small uk-flex-1\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand\"><h3>Filters</h3></div>\r\n              <button className=\"uk-offcanvas-close\" type=\"button\" uk-close=\"true\"></button>\r\n            </div>\r\n          </header>\r\n          <div className=\"uk-margin-remove uk-flex-1\" uk-accordion=\"multiple: true; targets: &gt; .js-accordion-section\" style={{ flexBasis: \"auto\" }}>\r\n            <section className=\"uk-card-body uk-open js-accordion-section\">\r\n              <h4 className=\"uk-accordion-title uk-margin-remove\">Prices</h4>\r\n              <div className=\"uk-accordion-content\">\r\n                <div className=\"uk-grid-small uk-child-width-1-2 uk-text-small\" uk-grid=\"true\">\r\n                  <div>\r\n                    <div className=\"uk-inline\">\r\n                      <span className=\"uk-form-icon uk-text-xsmall\">from</span>\r\n                      <input className=\"uk-input\" type=\"number\" placeholder=\"₹₹₹\"\r\n                      value={filterStartPrice} \r\n                      onChange={(e) => getFilteredProduct(0,0,0,e.currentTarget.value)}/>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"uk-inline\">\r\n                      <span className=\"uk-form-icon uk-text-xsmall\">to</span>\r\n                      <input className=\"uk-input\" type=\"text\" placeholder=\"₹₹₹\" \r\n                      value={filterEndPrice}\r\n                      onChange={(e) => getFilteredProduct(0,0,0,'0',e.currentTarget.value)}/>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n            {\r\n              props.subCategories.length > 0 &&\r\n              <section className=\"uk-card-body js-accordion-section uk-open\">\r\n              <h4 className=\"uk-accordion-title uk-margin-remove\">Categories</h4>\r\n              <div className=\"uk-accordion-content\">\r\n                <ul className=\"uk-list tm-scrollbox\">\r\n                  {\r\n                    props.subCategories.map((subcategory: ProductSubCategory) => {\r\n                      return (\r\n                        <li key={subcategory.code}>\r\n                          <input \r\n                            className=\"tm-checkbox\"\r\n                            id={\"subproduct\" + subcategory.code}\r\n                            name=\"subproduct\"\r\n                            value={subcategory.code}\r\n                            checked={filterSubCategory.indexOf(Number(subcategory.subCategoryId)) > -1}\r\n                            type=\"checkbox\"\r\n                            onChange={() => getFilteredProduct(0, 0, Number(subcategory.subCategoryId))}\r\n                            />\r\n                          <label htmlFor={\"subproduct\" + subcategory.code}>\r\n                            <span>{subcategory.code} <span className=\"uk-text-meta uk-text-small\">{getProductCount(Number(subcategory.subCategoryId))}</span></span>\r\n                          </label>\r\n                        </li>\r\n                      )\r\n                    })\r\n                  }\r\n                </ul>\r\n              </div>\r\n            </section>\r\n            }\r\n            \r\n            {\r\n              productColour.data && productColour.data.length > 0 &&\r\n              <section className=\"uk-card-body js-accordion-section uk-open\">\r\n                <h4 className=\"uk-accordion-title uk-margin-remove\">Colour</h4>\r\n                <div className=\"uk-accordion-content\">\r\n                  <ul className=\"uk-list tm-scrollbox\">\r\n                    {\r\n                      productColour.data.map((colour: ProductColor) => {\r\n                        return (\r\n                          <li key={colour.colourId}>\r\n                            <input \r\n                              className=\"tm-checkbox\" \r\n                              id={\"colour\" + colour.colourId} \r\n                              name=\"colour\" \r\n                              value={colour.colourId} \r\n                              type=\"checkbox\"\r\n                              checked={filterColourId.indexOf(Number(colour.colourId)) > -1}\r\n                              onChange={() => getFilteredProduct(Number(colour.colourId), 0, 0)} \r\n                            />\r\n                            <label htmlFor={\"colour\" + colour.colourId}>\r\n                              <span>{colour.value} </span>\r\n                            </label>\r\n                          </li>\r\n                        )\r\n                      })\r\n                    }\r\n                  </ul>\r\n                </div>\r\n              </section>\r\n            }\r\n            {\r\n              productSize.data && productSize.data.length > 0 &&\r\n              !(filterSize(productSize,props.categoryId).length === 1 && \r\n              filterSize(productSize,props.categoryId)[0].value.toLowerCase() === 'default') &&\r\n              <section className=\"uk-card-body js-accordion-section uk-open\">\r\n                <h4 className=\"uk-accordion-title uk-margin-remove\">Size</h4>\r\n                <div className=\"uk-accordion-content\">\r\n                  <ul className=\"uk-list tm-scrollbox\">\r\n                    {\r\n                      filterSize(productSize,props.categoryId).map((size: ProductSize) => {\r\n                        return (\r\n                          size.value.toLowerCase() !== 'default' &&\r\n                          <li key={size.sizeId}>\r\n                            <input \r\n                              className=\"tm-checkbox\"\r\n                              id={\"size\" + size.sizeId}\r\n                              name=\"size\"\r\n                              value={size.sizeId}\r\n                              type=\"checkbox\"\r\n                              checked={filterSizeId.indexOf(Number(size.sizeId)) > -1}\r\n                              onChange={() => getFilteredProduct(0,Number(size.sizeId), 0)} \r\n                              />\r\n                            <label htmlFor={\"size\" + size.sizeId}>\r\n                              <span>{size.value} </span>\r\n                            </label>\r\n                          </li>\r\n                        )\r\n                      })\r\n                    }\r\n                  </ul>\r\n                </div>\r\n              </section>\r\n            }\r\n            <div className=\"uk-card-body\">\r\n              <button className=\"uk-button uk-button-default uk-width-1-1\" onClick={() => restFilter()}><span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: close; ratio: .75;\"></span>Reset all filters</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerProductFilter\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProduct, setDefaulState } from 'reducers/Product';\r\nimport { AppState, addUpdateCart, Cart, UserLocation } from 'reducers';\r\nimport { ProductItem, CustomerCart } from 'types';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { CustomerProductDetailsLoading } from '.';\r\nimport { calculateUserDiscount, getCurrencyIcon, showINRUSD } from 'services';\r\nimport { QuickProductList } from 'components/shared';\r\n\r\ninterface cartQuantity {\r\n  [key: string]: string;\r\n};\r\n\r\n\r\ninterface Props {\r\n  mainSlider: JSX.Element[] | undefined;\r\n  smallSlider: JSX.Element[] | undefined;\r\n  productCategoryName: string;\r\n  name: string;\r\n  priceINR: string;\r\n  priceUSD: string;\r\n  description: string;\r\n  size: string;\r\n  sizeId: string;\r\n  quantity: string;\r\n  productId: string;\r\n  productDetailId: string;\r\n  imageName: string;\r\n  imagePath: string;\r\n  cartProductQuantity: cartQuantity;\r\n  isActive: boolean;\r\n  subCategory: number\r\n};\r\n\r\nconst CustomerProductDetails: React.FunctionComponent<Props> = (props: Props) => {\r\n  const {\r\n    priceINR,\r\n    priceUSD,\r\n    quantity,\r\n    size,\r\n    sizeId,\r\n    productId,\r\n    productDetailId,\r\n    imageName,\r\n    imagePath,\r\n    productCategoryName,\r\n    name,\r\n    cartProductQuantity,\r\n    isActive\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const relatedProducts = useSelector<AppState, ProductItem[]>(state => state.relatedProduct.data || []);\r\n\r\n  const [pINR, setPINR] = useState('0');\r\n  const [pUSD, setPUSD] = useState('0');\r\n  const [pQuantity, setPQuantity] = useState(['']);\r\n  const [pSize, setPSize] = useState(['']);\r\n  const [pSizeId, setPSizeId] = useState(['']);\r\n  const [pDetailId, setPDetailId] = useState(['']);\r\n  const [selectedSize, setSelectedSize] = useState('0');\r\n  const [selectedQuantity, setSelectedQuantity] = useState('1');\r\n  const [selectedProductDetailId, setSelectedProductDetailId] = useState('0');\r\n  const [maxQuantity, setMaxQuantity] = useState('0');\r\n  const [showInch, setShowInch] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setPINR(priceINR.split(',')[0]);\r\n    setPUSD(priceUSD.split(',')[0]);\r\n  }, [priceINR, priceUSD]);\r\n\r\n\r\n  useEffect(() => {\r\n    setPQuantity(quantity.split(','));\r\n    setPSize(size.split(','));\r\n    setPSizeId(sizeId.split(','));\r\n    setSelectedSize(sizeId.split(',')[0].toString());\r\n    const defaultProductDetail = productDetailId.split(',')[0];\r\n    setMaxQuantity((Number(quantity.split(',')[0]) - Number(cartProductQuantity[defaultProductDetail.toString()] || 0)).toString());\r\n    setPDetailId(productDetailId.split(','));\r\n    setSelectedProductDetailId(defaultProductDetail);\r\n  }, [quantity, size, sizeId, productDetailId]);\r\n\r\n  useEffect(() => {\r\n    if (maxQuantity !== '0') {\r\n      const productIndex = pDetailId.indexOf(selectedProductDetailId);\r\n      setMaxQuantity((Number(pQuantity[productIndex]) - Number(cartProductQuantity[selectedProductDetailId] || '0')).toString());\r\n      onChangeQuantity(cartProductQuantity[selectedProductDetailId] || '0', Number(pQuantity[productIndex]) - Number(cartProductQuantity[selectedProductDetailId]));\r\n    }\r\n  }, [cartProductQuantity]);\r\n\r\n  const toggleQuantity = (isIncrement: boolean) => {\r\n    if (isIncrement) {\r\n      if (Number(selectedQuantity) <= Number(maxQuantity)) {\r\n        setSelectedQuantity((Number(selectedQuantity) + 1).toString());\r\n      }\r\n    } else {\r\n      if (selectedQuantity !== '1') {\r\n        setSelectedQuantity((Number(selectedQuantity) - 1).toString());\r\n      }\r\n    }\r\n  }\r\n\r\n  const setSize = (sizeId: string) => {\r\n    setSelectedSize(sizeId);\r\n    const selectedIndex = pSizeId.indexOf(sizeId);\r\n    const maxQ = pQuantity[selectedIndex];\r\n    const pdId = pDetailId[selectedIndex];\r\n    setSelectedProductDetailId(pdId);\r\n    setMaxQuantity((Number(maxQ) - Number(cartProductQuantity[pdId] || 0)).toString());\r\n    if (Number(selectedQuantity) > Number(maxQ)) {\r\n      setSelectedQuantity(maxQ);\r\n    }\r\n  }\r\n\r\n  const onChangeQuantity = (quantity: string, maxQaun = -1) => {\r\n    if (Number(quantity) > Number(maxQaun !== -1 ? maxQaun : maxQuantity)) {\r\n      setSelectedQuantity(Number(maxQaun !== -1 ? maxQaun : maxQuantity).toString())\r\n    } else {\r\n      setSelectedQuantity(Number(quantity).toString())\r\n    }\r\n  };\r\n\r\n  const onBlurQuantity = (quantity: string) => {\r\n    if (quantity === '' || Number(quantity) === 0) {\r\n      setSelectedQuantity('1')\r\n    }\r\n  };\r\n\r\n  const addToCart = () => {\r\n    if (!userData.data?.userId) {\r\n      const cartData = {\r\n        productDetailId: selectedProductDetailId,\r\n        productQuantity: selectedQuantity,\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: selectedProductDetailId.toString(),\r\n        productImage: imageName,\r\n        productImagePath: imagePath,\r\n        productName: name,\r\n        subcategory: productCategoryName,\r\n        productPrice: showINRUSD(userLocation.data || 'IN', { priceINR: pINR, priceUSD: pUSD }),\r\n        productId: productId,\r\n      } as CustomerCart;\r\n\r\n      dispatch(addUpdateCart(cartData, false))\r\n    } else {\r\n      const cartData = {\r\n        productDetailId: selectedProductDetailId,\r\n        productQuantity: selectedQuantity,\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: '0',\r\n        productImage: imageName,\r\n        productImagePath: imagePath,\r\n        productName: name,\r\n        subcategory: productCategoryName,\r\n        productPrice: '0',\r\n        productId: productId,\r\n      } as CustomerCart;\r\n\r\n      dispatch(addUpdateCart(cartData, true))\r\n    }\r\n  }\r\n\r\n  const checkForDefaultSize = (sizeList: string[]) => {\r\n    return sizeList.length === 1 && sizeList[0].toLowerCase() === 'default';\r\n  }\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a onClick={() => history.push('/')}>Home</a></li>\r\n                <li><a onClick={() => history.push('/product/' + props.productCategoryName)}>{props.productCategoryName}</a></li>\r\n                <li className=\"visibility-none\"></li>\r\n              </ul>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom\">{props.name}</h1>\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n                <div>\r\n                  <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n                    <div className=\"uk-grid-small uk-grid-collapse uk-grid-match\" uk-grid=\"true\">\r\n                      <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n                        <div className=\"uk-grid-collapse uk-child-width-1-1\" uk-slideshow=\"finite: true; ratio: 4:3;\" uk-grid=\"true\">\r\n                          <div>\r\n                            <ul className=\"uk-slideshow-items\" uk-lightbox=\"true\">\r\n                              {\r\n                                props.mainSlider\r\n                              }\r\n                            </ul>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"uk-card-body uk-flex uk-flex-center\">\r\n                              <div className=\"uk-width-1-2 uk-visible@s\">\r\n                                <div uk-slider=\"finite: true\">\r\n                                  <div className=\"uk-position-relative\">\r\n                                    <div className=\"uk-slider-container\">\r\n                                      <ul className=\"tm-slider-items uk-slider-items uk-child-width-1-4 uk-grid uk-grid-small\">\r\n                                        {\r\n                                          props.smallSlider\r\n                                        }\r\n                                      </ul>\r\n                                      <div>\r\n                                        <a className=\"uk-position-center-left-out uk-position-small\" href=\"#\" uk-slider-item=\"previous\" uk-slidenav-previous=\"true\"></a>\r\n                                        <a className=\"uk-position-center-right-out uk-position-small\" href=\"#\" uk-slider-item=\"next\" uk-slidenav-next=\"true\"></a>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <ul className=\"uk-slideshow-nav uk-dotnav uk-hidden@s\"></ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"uk-width-1-1 uk-width-1-3@m tm-product-info\">\r\n                        <div className=\"uk-card-body\">\r\n                          <div className=\"uk-margin\">\r\n                            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"uk-margin\">\r\n                            <div className=\"uk-padding-small uk-background-primary-lighten uk-border-rounded\">\r\n                              <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                                <div>\r\n                                  {\r\n                                    userData.data?.discount && userData.data?.discount !== '0' &&\r\n                                    <del className=\"uk-text-meta\">{getCurrencyIcon(userLocation.data || 'IN')} {showINRUSD(userLocation.data || 'IN', { priceINR: pINR, priceUSD: pUSD })}</del>\r\n                                  }\r\n                                  <div className=\"tm-product-price\">{getCurrencyIcon(userLocation.data || 'IN')} {calculateUserDiscount(userData.data?.discount || '0', showINRUSD(userLocation.data || 'IN', { priceINR: pINR, priceUSD: pUSD }))}</div>\r\n                                </div>\r\n                                <div>\r\n                                  <div className=\"uk-grid-small uk-child-width-1-2\" uk-grid=\"true\">\r\n                                    <div className={`${checkForDefaultSize(pSize) ? 'default-product-size' : ''}`}>\r\n                                      <label>\r\n                                        <div className=\"uk-form-label\">Size</div>\r\n                                        <select className=\"uk-select\"\r\n                                          value={selectedSize}\r\n                                          id=\"selectedSize\"\r\n                                          onChange={(e) => { setSize(e.currentTarget.value) }}>\r\n                                          {\r\n                                            pSize.map((size, index) => {\r\n                                              return <option key={index} value={pSizeId[index]}>{size}</option>\r\n                                            })\r\n                                          }\r\n\r\n                                        </select>\r\n                                      </label>\r\n                                    </div>\r\n                                    <div>\r\n                                      <label>\r\n                                        <div className=\"uk-form-label\">Quantity {selectedSize !== '0' && <span className=\"uk-notification-message-danger uk-text-meta\">(Max {isActive ? maxQuantity : 0})</span>}</div>\r\n                                        <div>\r\n                                          <div className=\"uk-inline\">\r\n                                            {Number(maxQuantity) > 0 && isActive &&\r\n                                              <>\r\n                                                {Number(selectedQuantity) === 1 && <a className=\"uk-form-icon\"></a>}\r\n                                                {Number(selectedQuantity) > 1 && <a className=\"uk-form-icon\" onClick={() => toggleQuantity(false)} uk-icon=\"icon: minus\"></a>}\r\n                                                {Number(selectedQuantity) < Number(maxQuantity) && <a className=\"uk-form-icon uk-form-icon-flip\" onClick={() => toggleQuantity(true)} uk-icon=\"icon: plus\"></a>}\r\n                                                {Number(selectedQuantity) === Number(maxQuantity) && <a className=\"uk-form-icon uk-form-icon-flip\"></a>}\r\n                                              </>\r\n                                            }\r\n\r\n                                            <input className=\"uk-input uk-text-center\"\r\n                                              onChange={(e) => onChangeQuantity(e.currentTarget.value)}\r\n                                              onBlur={(e) => onBlurQuantity(e.currentTarget.value)}\r\n                                              type=\"number\"\r\n                                              disabled={Number(maxQuantity) === 0 || !isActive}\r\n                                              value={selectedQuantity} />\r\n                                          </div>\r\n                                        </div>\r\n                                      </label>\r\n                                    </div>\r\n                                    <div className={`${checkForDefaultSize(pSize) ? 'single-size-cart-button' : ''}`}>\r\n                                      <button\r\n                                        disabled={Number(maxQuantity) === 0 || !isActive}\r\n                                        className=\"uk-button uk-button-primary tm-product-add-button tm-shine js-add-to-cart\"\r\n                                        onClick={() => addToCart()}>\r\n                                        {Number(maxQuantity) === 0 || !isActive ? 'out of stock' : 'add to cart'}\r\n                                      </button>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div>\r\n                                  {\r\n                                    props.productCategoryName.toLowerCase() === 'footwear'&&\r\n                                    <a uk-toggle=\"target: #product-footwear-size-model\" className=\"uk-margin-xsmall-right uk-notification-message-danger\"><span uk-icon=\"file-text\"></span> Size Chart </a>\r\n                                  }\r\n                                  {\r\n                                    props.subCategory.toString() === '1' &&\r\n                                    <a uk-toggle=\"target: #product-bra-size-model\" className=\"uk-margin-xsmall-right uk-notification-message-danger\"><span uk-icon=\"file-text\"></span> Size Chart </a>\r\n                                  }\r\n                                  {\r\n                                    props.subCategory.toString() === '3' &&\r\n                                    <a uk-toggle=\"target: #product-camisole-size-model\" className=\"uk-margin-xsmall-right uk-notification-message-danger\"><span uk-icon=\"file-text\"></span> Size Chart </a>\r\n                                  }\r\n\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"uk-margin\">\r\n                            <div className=\"uk-padding-small uk-background-muted uk-border-rounded\">\r\n                              <div className=\"uk-grid-small uk-child-width-1-1 uk-text-small\" uk-grid=\"true\">\r\n                                <div>\r\n                                  <div className=\"uk-grid-collapse\" uk-grid=\"true\">\r\n                                    {/* <span className=\"uk-margin-xsmall-right\" uk-icon=\"chevron-right\"></span> */}\r\n                                    <div>\r\n                                      <div className=\"uk-text-bolder\">Product Details</div>\r\n                                      <div className=\"uk-text-small uk-text-muted\">\r\n                                        {props.description}\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      {/* <div className=\"uk-width-1-1 tm-product-description\" id=\"description\">\r\n                        <header>\r\n                          <nav className=\"tm-product-nav\" uk-sticky=\"offset: 60; bottom: #description; cls-active: tm-product-nav-fixed;\">\r\n                            <ul className=\"uk-subnav uk-subnav-pill js-product-switcher\" uk-switcher=\"connect: .js-tabs\">\r\n                              <li><a className=\"js-scroll-to-description\" href=\"#description\">Overview</a></li>\r\n                            </ul>\r\n                          </nav>\r\n                        </header>\r\n                        <div className=\"uk-card-body\">\r\n                          <div className=\"uk-switcher js-product-switcher js-tabs\">\r\n                            <section>\r\n                              <article className=\"uk-article\">\r\n                                <div className=\"uk-article-body\">\r\n                                  <p>\r\n                                    {props.description}\r\n                                  </p>\r\n\r\n                                </div>\r\n                              </article>\r\n                            </section>\r\n                          </div>\r\n                        </div>\r\n                      </div> */}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {\r\n                  relatedProducts.length > 0 &&\r\n                  <QuickProductList productList={relatedProducts} />\r\n                }\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      {\r\n        props.subCategory.toString() === '1' &&\r\n        <div id=\"product-bra-size-model\" uk-modal=\"true\">\r\n          <div className='uk-modal-dialog uk-modal-body uk-margin-auto-vertical size-chart-width lingerie-modal-big'>\r\n            <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n\r\n                <ul className=\"uk-subnav uk-subnav-pill\" uk-switcher=\"true\">\r\n                  <li><a onClick={() => setShowInch(false)}>cm</a></li>\r\n                  <li><a onClick={() => setShowInch(true)}>in</a></li>\r\n                </ul>\r\n                {\r\n                  showInch ?\r\n                    <>\r\n                      <img className=\"uk-hidden@s\" src=\"/mobile-bra-in-measure.jpg\" alt=\"mobile-bra-in-measure\" />\r\n                      <img className=\"uk-visible@s\" src=\"/big-bra-in-measure-combo.jpg\" alt=\"big-bra-in-measure-combo\" />\r\n                    </>\r\n                    : <>\r\n                      <img className=\"uk-hidden@s\" src=\"/mobile-bra-cm-measure.jpg\" alt=\"mobile-bra-cm-measure\" />\r\n                      <img className=\"uk-visible@s\" src=\"/big-bra-cm-measure-combo.jpg\" alt=\"big-bra-cm-measure-combo\" />\r\n                    </>\r\n\r\n                }\r\n\r\n                <img className=\"uk-hidden@s\" src=\"/mobile-bra-measure.jpg\" alt=\"mobile-bra-measure\" />\r\n\r\n          </div>\r\n        </div>\r\n      }\r\n      {\r\n        props.productCategoryName.toLowerCase() === 'footwear' &&\r\n        <div id=\"product-footwear-size-model\" uk-modal=\"true\">\r\n          <div className='uk-modal-dialog uk-modal-body uk-margin-auto-vertical size-chart-width'>\r\n            <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n          \r\n                <img className=\"uk-visible@s\" src=\"/footwear_size_chart.jpg\" alt=\"footwear-size-chart\" />\r\n                <img className=\"uk-hidden@s\" src=\"/footwear_size_chart_mobile_1.jpg\" alt=\"footwear-size-chart\" />\r\n                <img className=\"uk-hidden@s\" src=\"/footwear_size_chart_mobile_2.jpg\" alt=\"footwear-size-chart\" />\r\n              \r\n\r\n          </div>\r\n        </div>\r\n      }\r\n      {\r\n        props.subCategory.toString() === '3' &&\r\n        <div id=\"product-camisole-size-model\" uk-modal=\"true\">\r\n          <div className='uk-modal-dialog uk-modal-body uk-margin-auto-vertical size-chart-width'>\r\n            <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n          \r\n                <img className=\"uk-visible@s\" src=\"/big-camisole.jpg\" alt=\"footwear-size-chart\" />\r\n                <img className=\"uk-hidden@s\" src=\"/mobile-camisole-size-measure.jpg\" alt=\"footwear-size-chart\" />\r\n                <img className=\"uk-hidden@s\" src=\"/mobile-camisole-measure.jpg\" alt=\"footwear-size-chart\" />\r\n              \r\n\r\n          </div>\r\n        </div>\r\n      }\r\n\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerProductDetails\r\n}","import React from 'react';\r\n\r\nconst CustomerProductDetailsLoading: React.FunctionComponent = () => {\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a href=\"#\">Home</a></li>\r\n                <li><span>Product</span></li>\r\n              </ul>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom\"></h1>\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n                <div>\r\n                  <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n                    <div className=\"uk-grid-small uk-grid-collapse uk-grid-match\" uk-grid=\"true\">\r\n                      <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n                        <div className=\"uk-grid-collapse uk-child-width-1-1\" uk-slideshow=\"finite: true; ratio: 4:3;\" uk-grid=\"true\">\r\n                          <div>\r\n                            {/* <div className=\"ph-item\">\r\n                            <div className=\"ph-col-12\">\r\n                              <div className=\"ph-picture-big\"></div>\r\n                            </div>\r\n                          </div> */}\r\n                            <ul className=\"uk-slideshow-items\" uk-lightbox=\"true\">\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"uk-card-body uk-flex uk-flex-center\">\r\n                              <div className=\"uk-width-1-2 uk-visible@s\">\r\n                                <div uk-slider=\"finite: true\">\r\n                                  <div className=\"uk-position-relative\">\r\n                                    <div className=\"uk-slider-container\">\r\n                                      <ul className=\"tm-slider-items uk-slider-items uk-child-width-1-4 uk-grid uk-grid-small loading-small-slider\">\r\n                                        <li uk-slideshow-item=\"0\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                        <li uk-slideshow-item=\"1\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                        <li uk-slideshow-item=\"2\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                        <li uk-slideshow-item=\"3\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                        <li uk-slideshow-item=\"4\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                      </ul>\r\n                                      {/* {\r\n                                        <div className=\"ph-item\">\r\n                                          <div className=\"ph-col-12\">\r\n                                            <div className=\"ph-picture\"></div>\r\n                                          </div>\r\n                                        </div>\r\n                                        // getFileNameAndPathSmall(imageNames, imagePaths)\r\n                                      } */}\r\n                                      <div>\r\n                                        <a className=\"uk-position-center-left-out uk-position-small\" href=\"#\" uk-slider-item=\"previous\" uk-slidenav-previous=\"true\"></a>\r\n                                        <a className=\"uk-position-center-right-out uk-position-small\" href=\"#\" uk-slider-item=\"next\" uk-slidenav-next=\"true\"></a>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <ul className=\"uk-slideshow-nav uk-dotnav uk-hidden@s\"></ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"uk-width-1-1 uk-width-1-3@m tm-product-info\">\r\n                        <div className=\"uk-card-body\">\r\n                          {/* <div className=\"uk-margin\">\r\n                            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                              <div><span className=\"uk-label uk-label-warning uk-margin-xsmall-right\">top selling</span><span className=\"uk-label uk-label-danger uk-margin-xsmall-right\">trade-in</span></div>\r\n                            </div>\r\n                          </div> */}\r\n                          <div className=\"uk-margin\">\r\n                            <div className=\"uk-padding-small uk-background-primary-lighten uk-border-rounded\">\r\n                              <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                                <div>\r\n                                  {/* <del className=\"uk-text-meta\">$1899.00</del> */}\r\n                                  <div className=\"tm-product-price\"></div>\r\n                                </div>\r\n                                <div>\r\n                                  <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                                    <div>\r\n                                      <a uk-icon=\"icon: minus; ratio: .75\"></a>\r\n                                      <input className=\"uk-input tm-quantity-input\" id=\"product-1\" type=\"text\" onChange={()=>{}} value=\"1\" />\r\n                                      <a uk-icon=\"icon: plus; ratio: .75\"></a>\r\n                                    </div>\r\n                                    <div><button className=\"uk-button uk-button-primary tm-product-add-button tm-shine js-add-to-cart\" disabled={true}>add to cart</button></div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"uk-margin\">\r\n                            <div className=\"uk-padding-small uk-background-muted uk-border-rounded\">\r\n                              <div className=\"uk-grid-small uk-child-width-1-1 uk-text-small\" uk-grid=\"true\">\r\n                                <div>\r\n                                  <div className=\"uk-grid-collapse\" uk-grid=\"true\">\r\n                                    <span className=\"uk-margin-xsmall-right\" uk-icon=\"cart\"></span>\r\n                                    <div>\r\n                                      <div className=\"uk-text-bolder\">Delivery</div>\r\n                                      <div className=\"uk-text-xsmall uk-text-muted\">In stock, free, tomorrow</div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div>\r\n                                  <div className=\"uk-grid-collapse\" uk-grid=\"true\">\r\n                                    <span className=\"uk-margin-xsmall-right\" uk-icon=\"location\"></span>\r\n                                    <div>\r\n                                      <div className=\"uk-text-bolder\">Pick up from store</div>\r\n                                      <div className=\"uk-text-xsmall uk-text-muted\">In stock, free, tomorrow</div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"uk-width-1-1 tm-product-description\" id=\"description\">\r\n                        <header>\r\n                          <nav className=\"tm-product-nav\" uk-sticky=\"offset: 60; bottom: #description; cls-active: tm-product-nav-fixed;\">\r\n                            <ul className=\"uk-subnav uk-subnav-pill js-product-switcher\" uk-switcher=\"connect: .js-tabs\">\r\n                              <li><a className=\"js-scroll-to-description\" href=\"#description\">Overview</a></li>\r\n                            </ul>\r\n                          </nav>\r\n                        </header>\r\n                        <div className=\"uk-card-body\">\r\n                          <div className=\"uk-switcher js-product-switcher js-tabs\">\r\n                            <section>\r\n                              <article className=\"uk-article\">\r\n                                <div className=\"uk-article-body\">\r\n                                  <p>\r\n\r\n                                  </p>\r\n\r\n                                </div>\r\n                              </article>\r\n                            </section>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerProductDetailsLoading\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProduct } from 'reducers/Product';\r\nimport { AppState, Cart, getRelatedProduct } from 'reducers';\r\nimport { ProductItem } from 'types';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { CustomerProductDetails } from './CustomerProductDetails';\r\nimport { CustomerProductDetailsLoading } from './CustomerProductDetailsLoading';\r\n\r\ninterface cartQuantity {\r\n  [key: string]: string;\r\n};\r\n\r\nconst CustomerProductDetailsConstainer: React.FunctionComponent = () => {\r\n\r\n  const { product, queryProductId } = useParams();\r\n  const [ mainSlider, setMainSlider] = useState<JSX.Element[] | undefined>(undefined);\r\n  const [ smallSlider, setSmallSlider] = useState<JSX.Element[] | undefined>(undefined);\r\n  const [cartProductQuantity, setCartProductQuantity] = useState<cartQuantity>({});\r\n  const [cartProductFlag, setCartProductFlag] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getProduct(Number(queryProductId)));\r\n    setSmallSlider(undefined);\r\n  }, [queryProductId]);\r\n\r\n  const {\r\n    name, description, productCategoryId,\r\n    subCategory, quantity,\r\n    priceINR, priceUSD, productId, productCategoryName,\r\n    sizeId, size, colourId, imageNames, imagePaths, productDetailId, isActive\r\n  } = useSelector<AppState, ProductItem>(state => state.product.singleData || {} as ProductItem);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n\r\n  useEffect(()=>{\r\n      if (imageNames && imagePaths && imageNames.length > 0 && imagePaths.length > 0) {\r\n        const imageName = imageNames.split(',');\r\n        const imagePath = imagePaths.split(',');\r\n  \r\n        setMainSlider(imagePath.map((path: string, index: number) => {\r\n          return <li key={index}>\r\n            <a className=\"uk-card-body tm-media-box tm-media-box-zoom\" href={serverImagePath + path}>\r\n              <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + path} alt={imageName[index]} /></figure>\r\n            </a>\r\n          </li>\r\n        }))\r\n\r\n        setSmallSlider(imagePath.map((path: string, index: number) => {\r\n          return <li uk-slideshow-item={index} tabIndex={-1} key={index}>\r\n            <div className=\"tm-ratio tm-ratio-1-1\">\r\n              <a className=\"tm-media-box tm-media-box-frame\" href=\"#\">\r\n                <figure className=\"tm-media-box-wrap\">\r\n                  <img src={serverImagePath + path} alt={imageName[index]} />\r\n                </figure>\r\n              </a>\r\n            </div>\r\n          </li>\r\n        }))\r\n      }\r\n  },[imageNames,imagePaths])\r\n\r\n  useEffect(()=>{\r\n    if(cart.data){\r\n      const cartProductCount = {} as cartQuantity;\r\n      cart.data.forEach(({productDetailId,productQuantity}) => {\r\n        cartProductCount[productDetailId] = productQuantity;\r\n      });\r\n      setCartProductQuantity(cartProductCount);\r\n      setCartProductFlag(true);\r\n    }\r\n  },[cart.data]);\r\n\r\n  useEffect(() => {\r\n    if(subCategory && queryProductId){\r\n      dispatch(getRelatedProduct(subCategory, Number(queryProductId)));\r\n    }\r\n  },[subCategory, queryProductId]);\r\n\r\n  return (\r\n    smallSlider && cartProductFlag  ? \r\n    <CustomerProductDetails \r\n      smallSlider={smallSlider}\r\n      mainSlider={mainSlider}\r\n      description={description || ''}\r\n      name={name || ''}\r\n      priceINR={priceINR || ''}\r\n      priceUSD={priceUSD || ''}\r\n      productCategoryName={productCategoryName || ''}\r\n      quantity={quantity || ''}\r\n      sizeId={sizeId || ''}\r\n      size={size || ''}\r\n      productId={productId || ''}\r\n      productDetailId={productDetailId || ''}\r\n      imageName={imageNames && imageNames.split(',')[0] || ''}\r\n      imagePath={imagePaths && imagePaths.split(',')[0] || ''}\r\n      cartProductQuantity={cartProductQuantity}\r\n      isActive={isActive || false}\r\n      subCategory={subCategory || 0}\r\n      /> \r\n    : <CustomerProductDetailsLoading/>\r\n  )\r\n};\r\n\r\nexport {\r\n  CustomerProductDetailsConstainer\r\n}","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { getCart, AppState, Cart, deleteCartItem, addUpdateCart, UserLocation, validateCoupon, Coupon, updateCartQuantity } from 'reducers';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { CustomerCart } from 'types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getCurrencyIcon } from 'services';\r\n\r\n\r\ninterface Quantity {\r\n  [key: string]: string\r\n}\r\nconst CartDetails: React.FunctionComponent = () => {\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [quantity, setQuantity] = useState<Quantity>();\r\n  const [enteredCoupon, setEnteredCoupon] = useState('');\r\n  const [quantityCheckMessage, setQuantityCheckMessage] = useState('Getting your data.');\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const couponStatus = useSelector<AppState, Coupon>(state => state.coupon);\r\n  const [deboucedId, setDeboucedId] = useState('');\r\n  const [quantityChanged, setQuantityChanged] = useState(false);\r\n  const [quantityChangedProductId, setQuantityChangedProductId] = useState('');\r\n  const orderQuantityCheckButtonRef = useRef<HTMLButtonElement>(null);\r\n  const orderQuantityCheckModalRef = useRef<HTMLDivElement>(null);\r\n  \r\n\r\n  useEffect(() => {\r\n    dispatch(getCart());\r\n    if (couponStatus.data?.length === 1) {\r\n      setEnteredCoupon(couponStatus.data[0].code);\r\n    }\r\n  }, []);\r\n\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n\r\n  useEffect(() => {\r\n    let qt: Quantity = {};\r\n    if (cart.data && cart.data.length > 0) {\r\n      cart.data.forEach((product: CustomerCart) => {\r\n        qt[product.productDetailId] = product.productQuantity || '0';\r\n      });\r\n      setQuantity(qt);\r\n      checkForAvailableQuantity(cart.data)\r\n    }\r\n  }, [cart.data]);\r\n  const deleteCart = (cartItem: CustomerCart) => {\r\n    dispatch(deleteCartItem(cartItem,true));\r\n  };\r\n\r\n  const checkForAvailableQuantity = (cartData: CustomerCart[]) => {\r\n    const orderDetailId = cartData.map((cartItem) => {\r\n      if (Number(cartItem.availableQuantity) < Number(cartItem.productQuantity)) {\r\n        setQuantityChanged(true);\r\n        return cartItem.cartId\r\n      } else {\r\n        return 0\r\n      }\r\n    })\r\n    setQuantityChangedProductId(orderDetailId.toString());\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(quantityChanged){\r\n      orderQuantityCheckButtonRef.current?.click();\r\n      dispatch(updateCartQuantity(quantityChangedProductId));\r\n    }\r\n  },[quantityChanged])\r\n\r\n  useEffect(() => {\r\n    if(cart._quantityUpdate && orderQuantityCheckModalRef.current?.getBoundingClientRect().top !== 0) {\r\n      dispatch(getCart());\r\n      setQuantityCheckMessage('We updated your cart based on the product availability.');\r\n      setTimeout(() => {\r\n        orderQuantityCheckButtonRef.current?.click();\r\n      },5000)\r\n      \r\n    }\r\n  },[cart._quantityUpdate])\r\n\r\n  const updateCart = (cartId: string, quantity: string, productDetailId: string) => {\r\n    dispatch(addUpdateCart({\r\n      productDetailId,\r\n      productQuantity: quantity,\r\n      currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n      cartId,\r\n      productPrice: '',\r\n      productId: ''\r\n    }, true));\r\n  };\r\n\r\n  const updateQantity = (cartId: string, productDetailId: string, availableQuantity: string, isIncrement: boolean, changedQuantity?: string) => {\r\n    if (quantity) {\r\n      if (changedQuantity) {\r\n        let chqty = changedQuantity\r\n        if (Number(chqty) > Number(availableQuantity)) {\r\n          chqty = availableQuantity\r\n        }\r\n        const newQuantity = { ...quantity, ...{ [productDetailId]: chqty.toString() } };\r\n        setDeboucedId(cartId + '-' + window.setTimeout(() => {\r\n          updateCart(cartId, chqty.toString(), productDetailId)\r\n        }, 500).toString());\r\n        setQuantity(newQuantity);\r\n      } else if (isIncrement) {\r\n        let updatedQuantity = Number(quantity[productDetailId]) + 1;\r\n        if (updatedQuantity > Number(availableQuantity)) {\r\n          updatedQuantity = Number(availableQuantity)\r\n        }\r\n        const newQuantity = { ...quantity, ...{ [productDetailId]: updatedQuantity.toString() } };\r\n        setDeboucedId(cartId + '-' + window.setTimeout(() => {\r\n          updateCart(cartId, updatedQuantity.toString(), productDetailId)\r\n        }, 500).toString());\r\n        setQuantity(newQuantity);\r\n      } else {\r\n        let updatedQuantity = Number(quantity[productDetailId]) - 1;\r\n        if (updatedQuantity < 0) {\r\n          updatedQuantity = 0\r\n        }\r\n        const newQuantity = { ...quantity, ...{ [productDetailId]: updatedQuantity.toString() } };\r\n        setDeboucedId(cartId + '-' + window.setTimeout(() => {\r\n          updateCart(cartId, updatedQuantity.toString(), productDetailId)\r\n        }, 500).toString());\r\n        setQuantity(newQuantity);\r\n      }\r\n\r\n      if (deboucedId !== '' && deboucedId.split('-')[0] === cartId.toString()) {\r\n        window.clearTimeout(Number(deboucedId.split('-')[1]));\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkCouponValidity = () => {\r\n    dispatch(validateCoupon(enteredCoupon));\r\n  }\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <header className=\"uk-card-header uk-text-uppercase uk-text-muted uk-text-center uk-text-small uk-visible@m\">\r\n          <div className=\"uk-grid-small uk-child-width-1-2\" uk-grid=\"true\">\r\n            <div>product</div>\r\n            <div>\r\n              <div className=\"uk-grid-small uk-child-width-expand\" uk-grid=\"true\">\r\n                <div>price</div>\r\n                <div className=\"tm-quantity-column\">quantity</div>\r\n                <div>sum</div>\r\n                <div className=\"uk-width-auto\"><div style={{ width: \"20px\" }}></div></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        {\r\n          cart.data && cart.data.map((cartItem: CustomerCart, index: number) => {\r\n            return <div className=\"uk-card-body\" key={index}>\r\n              <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@m uk-flex-middle\" uk-grid=\"true\">\r\n                <div>\r\n                  <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                    <div className=\"uk-width-1-3\">\r\n                      <div className=\"tm-ratio tm-ratio-4-3\">\r\n                        <a className=\"tm-media-box\" onClick={() => history.push('/productDetails/' + cartItem.productId)}>\r\n                          <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + cartItem.productImagePath} alt='Apple MacBook Pro 15\" Touch Bar MPTU2LL/A 256GB (Silver)' /></figure>\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"uk-width-expand\">\r\n                      <div className=\"uk-text-meta\">{cartItem.subcategory}</div>\r\n                      <a className=\"uk-link-heading\" onClick={() => history.push('/productDetails/' + cartItem.productId)}>{cartItem.productName}</a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-expand@s uk-text-center\" uk-grid=\"true\">\r\n                    <div>\r\n                      <div className=\"uk-text-muted uk-hidden@m\">Price</div>\r\n                      <div>{getCurrencyIcon(userLocation.data || 'IN')} {cartItem.productPrice}</div>\r\n                    </div>\r\n                    <div>\r\n                      <label className=\"uk-text-center\">\r\n                        <div className=\"cart-quantity cart-margin-auto\">\r\n                          <div className=\"uk-inline\">\r\n                            <a className=\"uk-form-icon\" uk-icon=\"icon: minus\"\r\n                              onClick={() => {\r\n                                updateQantity(cartItem.cartId, cartItem.productDetailId, cartItem.availableQuantity || '0', false)\r\n                              }}>\r\n                            </a>\r\n                            <a className=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: plus\"\r\n                              onClick={() => {\r\n                                updateQantity(cartItem.cartId, cartItem.productDetailId, cartItem.availableQuantity || '0', true)\r\n                              }}>\r\n                            </a>\r\n                            <input className=\"uk-input uk-text-center\"\r\n                              type=\"number\"\r\n                              value={quantity && quantity[cartItem.productDetailId] || 0}\r\n                              onChange={(e) => {\r\n                                updateQantity(cartItem.cartId, cartItem.productDetailId, cartItem.availableQuantity || '0', false, e.currentTarget.value)\r\n                              }} />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"uk-form-label\"><span className=\"uk-text-meta uk-text-primary colour-default\">(Max {cartItem.availableQuantity})</span></div>\r\n                      </label>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <div className=\"uk-text-muted uk-hidden@m\">Sum</div>\r\n                      <div>{getCurrencyIcon(userLocation.data || 'IN')} {cartItem.totalPrice}</div>\r\n                    </div>\r\n                    <div className=\"uk-width-auto@s\">\r\n                      {cart._isLoading && <span uk-spinner=\"true\"></span>}\r\n                      {!cart._isLoading && <a className=\"uk-text-danger\" onClick={() => deleteCart(cartItem)} uk-tooltip=\"Remove\"><span uk-icon=\"trash\"></span></a>}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          })\r\n        }\r\n        <div className=\"uk-card-footer\">\r\n          <label>\r\n            <span className=\"uk-form-label uk-margin-small-right\">Promo Code</span>\r\n            <div className=\"uk-inline\">\r\n              <a className=\"uk-form-icon uk-form-icon-flip\" onClick={() => checkCouponValidity()} uk-icon=\"arrow-right\"></a>\r\n              <input className=\"uk-input uk-form-width-small\" type=\"text\"\r\n                value={enteredCoupon}\r\n                onChange={(e) => setEnteredCoupon(e.currentTarget.value)}\r\n              />\r\n            </div>\r\n            {couponStatus._isSuccess && <span className=\"login-error-message coupon-message uk-label uk-label-success\"><span uk-icon=\"check\"></span> Coupon is valid !</span>}\r\n            {couponStatus._isError && <span className=\"login-error-message coupon-message uk-label uk-label-danger\"><span uk-icon=\"ban\"></span> Coupon is Invalid.</span>}\r\n          </label>\r\n        </div>\r\n        <button ref={orderQuantityCheckButtonRef} id=\"payment-loading\" uk-toggle=\"target: #my-id\" type=\"button\"></button>\r\n        <div id=\"my-id\" uk-modal=\"true; esc-close: false; bg-close: false\">\r\n          <div className=\"uk-modal-dialog uk-modal-body uk-margin-auto-vertical\">\r\n            {\r\n              !cart._isLoading && <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n            }\r\n            <div ref={orderQuantityCheckModalRef}  className=\"uk-modal-body uk-nav-center\">\r\n              <p>{quantityCheckMessage}</p>\r\n              {\r\n                cart._isLoading && <div uk-spinner=\"true\"></div>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport {\r\n  CartDetails\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState, Cart, UserLocation } from 'reducers';\r\nimport { CustomerCart, ProductCoupon } from 'types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getCurrencyIcon, calculateUserDiscountPrice, calculateUserDiscount } from 'services';\r\n\r\nconst CartPrice: React.FunctionComponent = () => {\r\n\r\n  const [cartTotal, setCartTotal] = useState(0);\r\n  const [userDiscountTotal, setUserDiscountTotal] = useState('0');\r\n  const [userCouponTotal, setUserCouponTotal] = useState('0');\r\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState('0');\r\n  const [discountedTotal, setDiscountedTotal] = useState('0');\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const couponData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (cart.data && cart.data.length > 0) {\r\n      let total = 0;\r\n      cart.data.forEach((cart: CustomerCart) => {\r\n        if (cart.totalPrice) {\r\n          total += Number(cart.totalPrice);\r\n        }\r\n      });\r\n      setCartTotal(total);\r\n      if (couponData.length === 1) {\r\n        let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', total.toString());\r\n        let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', total.toString());\r\n        let couponPrice = calculateUserDiscountPrice(couponData[0].value, priceAfterDiscount.toString());\r\n        let priceAfterCoupon = calculateUserDiscount(couponData[0].value || '0', priceAfterDiscount.toString());\r\n        setDiscountedTotal(priceAfterDiscount);\r\n        setUserDiscountTotal(discountPrice);\r\n        setUserCouponTotal(couponPrice);\r\n        setTotalAfterDiscount(priceAfterCoupon);\r\n      } else {\r\n        let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', total.toString());\r\n        let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', total.toString());\r\n        setUserDiscountTotal(discountPrice);\r\n        setTotalAfterDiscount(priceAfterDiscount);\r\n      }\r\n    } else {\r\n      setCartTotal(0);\r\n      setUserDiscountTotal('0');\r\n      setTotalAfterDiscount('0');\r\n      setDiscountedTotal('0');\r\n      setUserCouponTotal('0');\r\n    }\r\n  }, [cart.data,couponData]);\r\n\r\n  return (\r\n    <div className=\"uk-width-1-1 tm-aside-column uk-width-1-4@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\" uk-sticky=\"offset: 30; bottom: true; media: @m;\">\r\n        {\r\n          (userData.data?.discount && userData.data?.discount !== '0' || couponData.length === 1 ) &&\r\n          <div className=\"uk-card-body\">\r\n            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand uk-text-muted\">Subtotal</div>\r\n              <div>{getCurrencyIcon(userLocation.data || 'IN')} {cartTotal}</div>\r\n            </div>\r\n            {\r\n              userData.data?.discount && userData.data?.discount !== '0' &&\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand uk-text-muted\">Discount ({userData.data?.discount}%)</div>\r\n              <div className=\"uk-text-danger\">− {getCurrencyIcon(userLocation.data || 'IN')} {userDiscountTotal}</div>\r\n            </div>\r\n            }\r\n            \r\n          </div>\r\n        }\r\n        {\r\n          couponData.length === 1 &&\r\n          <div className=\"uk-card-body\">\r\n            {\r\n              userData.data?.discount && userData.data?.discount !== '0' &&\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand uk-text-muted\">Discounted Total</div>\r\n                <div>{getCurrencyIcon(userLocation.data || 'IN')} {discountedTotal}</div>\r\n              </div>\r\n            }\r\n\r\n            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand uk-text-muted\">Coupon ({couponData[0] && couponData[0].value}%)</div>\r\n              <div className=\"uk-text-danger\">− {getCurrencyIcon(userLocation.data || 'IN')} {userCouponTotal}</div>\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n            <div className=\"uk-width-expand uk-text-muted\">Total</div>\r\n            <div className=\"uk-text-lead uk-text-bolder\">{getCurrencyIcon(userLocation.data || 'IN')} {totalAfterDiscount}</div>\r\n          </div>\r\n          <button className=\"uk-button uk-button-primary uk-margin-small uk-width-1-1\"\r\n            disabled={cartTotal === 0}\r\n            onClick={() => { history.push('/checkout') }}\r\n          >\r\n            checkout\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  CartPrice\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CartDetails } from './CartDetails';\r\nimport { CartPrice } from './CartPrice';\r\n\r\nconst CustomerCartContainer: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a onClick={()=>history.push('/')}>Home</a></li>\r\n                <li><span>Cart</span></li>\r\n              </ul>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom\">Cart</h1>\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n                <CartDetails/>\r\n                <CartPrice/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport {\r\n  CustomerCartContainer\r\n}","import React, { useState, useEffect, useRef, Dispatch, SetStateAction } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, Cart, getRazorPayOrder, saveRazorPayOrder, getCart, errorCheckout, getCodOrder, saveCodOrder, UserLocation, defaultCheckout, setShippingPrice } from 'reducers';\r\nimport { CustomerCart, ProductCoupon, CustomerShippment } from 'types';\r\nimport { PayPalButton, PayPalPayment, CashOnDeliveryPayment } from 'components/shared';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getCurrencyIcon, calculateUserDiscountPrice, calculateUserDiscount } from 'services';\r\n\r\ninterface Props {\r\n  paymentMode: string;\r\n  shippingType: string;\r\n  setCartTotal: Dispatch<SetStateAction<number>>;\r\n};\r\ndeclare global {\r\n  interface Window { Razorpay: any; }\r\n}\r\nwindow.Razorpay = window.Razorpay || {};\r\n\r\nconst CheckoutPrice: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [cartTotalPrice, setCartTotalPrice] = useState(0);\r\n  const [userDiscountTotal, setUserDiscountTotal] = useState('0');\r\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState('0');\r\n  const [userCouponTotal, setUserCouponTotal] = useState('0');\r\n  const [discountedTotal, setDiscountedTotal] = useState('0');\r\n  const [priceAfterShipping, setPriceAfterShipping] = useState('0');\r\n  const [quantityCount, setQuantityCount] = useState(0);\r\n  const [cartOrderId, setCartOrderId] = useState(0);\r\n  const [paymentMessage, setPaymentMessage] = useState(\"Please don't close this window while we process your payment.\")\r\n  const [paymentError, setPaymentError] = useState(false);\r\n  const [paymentSuccess, setPaymentSuccess] = useState(false);\r\n  const [errorHappendAt, setErrorHappendAt] = useState('close');\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n  const checkout = useSelector((state: AppState) => state.checkout);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const couponData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);\r\n  const shippingCost = useSelector<AppState, CustomerShippment>(state => state.customerShippment.data || {} as CustomerShippment);\r\n  const paymentLoadingRef = useRef<HTMLButtonElement>(null);\r\n  const [containerIsCard, setContainerIsCard] = useState(false);\r\n  const [ukSticky, setUkSicky] = useState({});\r\n  const [showCodContainer, setShowCodContainer] = useState(false);\r\n  const [noAddressError, setNoAddressError] = useState(false);\r\n  const [enteredOTP, setEnteredOTP] = useState('');\r\n  const [didPriceChanged, setDidPriceChanged] = useState(false);\r\n  const [timeForShowPriceChange, setTimeForShowPriceChange] = useState(5);\r\n  let timer: NodeJS.Timer;\r\n\r\n  useEffect(() => {\r\n    let cartPrice = 0;\r\n    if (cart.data && cart.data.length > 0) {\r\n      cart.data.forEach(({ totalPrice }) => {\r\n        cartPrice += Number(totalPrice)\r\n      });\r\n      setCartTotalPrice(cartPrice);\r\n      props.setCartTotal(cartPrice);\r\n      if (couponData.length === 1) {\r\n        let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString());\r\n        let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString());\r\n        let couponPrice = calculateUserDiscountPrice(couponData[0].value, priceAfterDiscount.toString());\r\n        let priceAfterCoupon = calculateUserDiscount(couponData[0].value || '0', priceAfterDiscount.toString());\r\n        setDiscountedTotal(priceAfterDiscount);\r\n        setUserDiscountTotal(discountPrice);\r\n        setUserCouponTotal(couponPrice);\r\n        setTotalAfterDiscount(priceAfterCoupon);\r\n        calculateShippingCost(cart.data, priceAfterCoupon);\r\n\r\n      } else {\r\n        let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString());\r\n        let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString());\r\n        setUserDiscountTotal(discountPrice);\r\n        setTotalAfterDiscount(priceAfterDiscount);\r\n        calculateShippingCost(cart.data, priceAfterDiscount);\r\n      }\r\n      setCartOrderId(Number(cart.data[0].orderId));\r\n    } else {\r\n      setCartTotalPrice(0);\r\n      setUserDiscountTotal('0');\r\n      setTotalAfterDiscount('0');\r\n      setPriceAfterShipping('0')\r\n      props.setCartTotal(0);\r\n    }\r\n    if (didPriceChanged) {\r\n      setDidPriceChanged(false);\r\n      if (timeForShowPriceChange === 0) {\r\n        paymentLoadingRef.current?.click();\r\n      } else {\r\n        clearTimeout(timer);\r\n        timer = setTimeout(() => {\r\n          paymentLoadingRef.current?.click();\r\n          clearTimeout(timer);\r\n        }, 5000)\r\n      }\r\n    }\r\n  }, [cart.data, userData.data, props.shippingType]);\r\n\r\n  useEffect(() => {\r\n    if (userLocation.data === 'IN') {\r\n      if (checkout.data && checkout.data.orderId && props.paymentMode === 'online') {\r\n        const {\r\n          key,\r\n          currency,\r\n          orderId,\r\n          name\r\n        } = checkout.data\r\n        var options = {\r\n          \"key\": key,\r\n          \"currency\": currency,\r\n          \"name\": name,\r\n          \"description\": \"\",\r\n          \"order_id\": orderId,\r\n          \"handler\": function (response: any) {\r\n            paymentLoadingRef.current?.click();\r\n            successRazorPay(response.razorpay_payment_id, response.razorpay_order_id, response.razorpay_signature)\r\n          },\r\n          \"modal\": {\r\n            \"ondismiss\": function () {\r\n              setPaymentError(true);\r\n              dispatch(errorCheckout(''));\r\n            }\r\n          },\r\n          \"prefill\": {\r\n            \"name\": userData.data?.firstName || '' + userData.data?.lastName,\r\n            \"email\": userData.data?.emailAddress,\r\n            \"contact\": userData.data?.mobile\r\n          },\r\n          \"notes\": {\r\n            \"address\": \"Razorpay Corporate Office\"\r\n          },\r\n          \"theme\": {\r\n            \"color\": \"#F37254\"\r\n          }\r\n        };\r\n        var rzp1 = new window.Razorpay(options);\r\n        rzp1.on('payment.failed', function (response: any) {\r\n          setErrorHappendAt('failed');\r\n          console.log('code', response.error.code);\r\n          console.log('desc', response.error.description);\r\n          console.log('source', response.error.source);\r\n          console.log('step', response.error.step);\r\n          console.log('reason', response.error.reason);\r\n          console.log('metadata', response.error.metadata);\r\n        });\r\n        rzp1.open();\r\n      } else if (checkout.data && checkout.data.otp && props.paymentMode === 'cod') {\r\n        setShowCodContainer(true);\r\n      }\r\n    }\r\n  }, [checkout.data]);\r\n\r\n  useEffect(() => {\r\n    if (checkout._priceChanged && (props.paymentMode === 'online' || props.paymentMode === 'cod')) {\r\n      setPaymentMessage(checkout.message || '');\r\n      dispatch(getCart());\r\n      paymentLoadingRef.current?.click();\r\n      setDidPriceChanged(true);\r\n      timer = setInterval(() => {\r\n        if (timeForShowPriceChange > 0) {\r\n          setTimeForShowPriceChange(timeForShowPriceChange - 1);\r\n        }\r\n      }, 1000);\r\n    }\r\n  }, [checkout._priceChanged]);\r\n\r\n  useEffect(() => {\r\n    if (paymentError && props.paymentMode === 'online') {\r\n      if (errorHappendAt === 'failed') {\r\n        setPaymentMessage('Payment failure from Razorpay, please try again.');\r\n        paymentLoadingRef.current?.click();\r\n      } else if (errorHappendAt === 'close') {\r\n        setPaymentMessage('Payment incomplete, please try again.');\r\n        paymentLoadingRef.current?.click();\r\n      }\r\n    }\r\n  }, [paymentError]);\r\n\r\n  useEffect(() => {\r\n    if (checkout._isPaymentSucceess &&\r\n      (props.paymentMode === 'online' || props.paymentMode === 'cod')) {\r\n        if(props.paymentMode === 'cod'){\r\n          setPaymentMessage('Order placed !!');\r\n        }else{\r\n          setPaymentMessage('Payment is successful !!');\r\n        }\r\n      setPaymentSuccess(true);\r\n      setPaymentError(false);\r\n      dispatch(getCart());\r\n      setShowCodContainer(false);\r\n      setTimeout(() => {\r\n        dispatch(defaultCheckout());\r\n        paymentLoadingRef.current?.click();\r\n        history.push('userinformation/orders');\r\n      }, 5000);\r\n    }\r\n  }, [checkout._isPaymentSucceess]);\r\n\r\n  useEffect(() => {\r\n    if (!paymentError) {\r\n      if (checkout._isError && props.paymentMode === 'online') {\r\n        setPaymentMessage(checkout.message || '');\r\n        setPaymentSuccess(false);\r\n        setPaymentError(true);\r\n        setErrorHappendAt('DB');\r\n      } else if (checkout._isError && props.paymentMode === 'cod') {\r\n        setPaymentMessage(checkout.message || '');\r\n        setPaymentSuccess(false);\r\n        setPaymentError(true);\r\n        setShowCodContainer(true);\r\n      }\r\n    }\r\n  }, [checkout._isError])\r\n\r\n  useEffect(()=>{\r\n    if(props.paymentMode !== 'cod'){\r\n      setShowCodContainer(false)\r\n    }\r\n  },[props.paymentMode])\r\n  const successRazorPay = (razorpayPaymentId: string, razorpayOrderId: string, razorpaySignature: string) => {\r\n    dispatch(saveRazorPayOrder({\r\n      razorpayPaymentId,\r\n      razorpayOrderId,\r\n      razorpaySignature,\r\n      orderId: cartOrderId,\r\n      orderNumber: checkout.data && checkout.data.receipt || '',\r\n      addressId: userData.data && userData.data.addressId || '',\r\n      couponId: couponData && couponData[0] && couponData[0].couponId,\r\n      userAddress: userData.data?.addressLineOne + ' ' + userData.data?.addressLineTwo + ' ' +\r\n      userData.data?.addressLineThree + ' ' + userData.data?.city + ' ' + userData.data?.state +\r\n      ' ' + userData.data?.pincode + ' ' + userData.data?.country,\r\n      userName: userData.data?.firstName + ' ' + userData.data?.lastName\r\n    }));\r\n  }\r\n  const proceedWithPayment = () => {\r\n    if(userData.data?.addressId){\r\n      if (props.paymentMode === 'online') {\r\n        setPaymentError(false);\r\n        dispatch(getRazorPayOrder(totalAfterDiscount.toString(), cartOrderId, couponData && couponData[0] && couponData[0].couponId))\r\n      } else if (props.paymentMode === 'cod') {\r\n        setPaymentError(false);\r\n        dispatch(getCodOrder(totalAfterDiscount.toString(), cartOrderId, couponData && couponData[0] && couponData[0].couponId));\r\n      }\r\n    } else{\r\n      setNoAddressError(true);\r\n      setTimeout(() => {\r\n        setNoAddressError(false);\r\n      },3000) \r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (containerIsCard) {\r\n      setUkSicky({});\r\n    } else {\r\n      setUkSicky({\r\n        'uk-sticky': \"offset: 60; bottom: true; media: @m;\"\r\n      })\r\n    }\r\n  }, [containerIsCard])\r\n\r\n  const successCod = () => {\r\n    dispatch(saveCodOrder({\r\n      otp: enteredOTP,\r\n      orderId: cartOrderId,\r\n      addressId: userData.data && userData.data.addressId || '',\r\n      couponId: couponData && couponData[0] && couponData[0].couponId,\r\n      userAddress: userData.data?.addressLineOne + ' ' + userData.data?.addressLineTwo + ' ' +\r\n      userData.data?.addressLineThree + ' ' + userData.data?.city + ' ' + userData.data?.state +\r\n      ' ' + userData.data?.pincode + ' ' + userData.data?.country,\r\n      userName: userData.data?.firstName + ' ' + userData.data?.lastName\r\n    }));\r\n    setPaymentMessage(\"Please don't close this window while we process your payment.\");\r\n    setPaymentSuccess(false);\r\n    setPaymentError(false);\r\n    paymentLoadingRef.current?.click();\r\n  }\r\n\r\n  const calculateShippingCost = (cartData: CustomerCart[], totalAfterDiscount: string) => {\r\n    let itemCount = cartData.reduce((accumulator, cart) => ({ 'productQuantity': (Number(accumulator.productQuantity) + Number(cart.productQuantity)).toString() } as CustomerCart));\r\n    setQuantityCount(Number(itemCount.productQuantity));\r\n    if (props.shippingType === 'standard') {\r\n      if (Number(itemCount.productQuantity) > 1) {\r\n        const cost = (10 + ((Number(itemCount.productQuantity) - 1) * 6));\r\n        dispatch(setShippingPrice({ 'shippmentPrice': cost.toString() } as CustomerShippment));\r\n        setPriceAfterShipping((Number(totalAfterDiscount) + cost).toString());\r\n      } else {\r\n        dispatch(setShippingPrice({ 'shippmentPrice': '10' } as CustomerShippment));\r\n        setPriceAfterShipping((Number(totalAfterDiscount) + 10).toString());\r\n      }\r\n    } else {\r\n      if (Number(itemCount.productQuantity) > 1) {\r\n        const cost = (18 + ((Number(itemCount.productQuantity) - 1) * 10));\r\n        dispatch(setShippingPrice({ 'shippmentPrice': cost.toString() } as CustomerShippment));\r\n        setPriceAfterShipping((Number(totalAfterDiscount) + cost).toString());\r\n      } else {\r\n        dispatch(setShippingPrice({ 'shippmentPrice': '18' } as CustomerShippment));\r\n        setPriceAfterShipping((Number(totalAfterDiscount) + 18).toString());\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"uk-width-1-1 uk-width-1-4@m tm-aside-column\">\r\n\r\n        <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\"\r\n          {\r\n          ...(\r\n            ukSticky\r\n          )\r\n          }\r\n        >\r\n          <section className=\"uk-card-body\">\r\n            <h4>Items in order</h4>\r\n            {\r\n              cart.data && cart.data.map((cartItem: CustomerCart, index: number) => {\r\n                return (\r\n                  <div key={index} className=\"uk-grid-small\" uk-grid=\"true\">\r\n                    <div className=\"uk-width-expand\">\r\n                      <div className=\"uk-text-small\">{cartItem.productName}</div>\r\n                      <div className=\"uk-text-meta\">{cartItem.productQuantity} × {getCurrencyIcon(userLocation.data || 'IN')} {cartItem.productPrice}</div>\r\n                    </div>\r\n                    <div className=\"uk-text-right\"><div>{getCurrencyIcon(userLocation.data || 'IN')} {cartItem.totalPrice}</div></div>\r\n                  </div>\r\n                )\r\n              })\r\n            }\r\n          </section>\r\n          {\r\n            userData.data?.discount && userData.data?.discount !== '0' &&\r\n            <section className=\"uk-card-body\">\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Subtotal</div></div>\r\n                <div className=\"uk-text-right\"><div>{getCurrencyIcon(userLocation.data || 'IN')} {cartTotalPrice || 0}</div></div>\r\n              </div>\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Discount ({userData.data?.discount}%)</div></div>\r\n                <div className=\"uk-text-right\"><div className=\"uk-text-danger\">- {getCurrencyIcon(userLocation.data || 'IN')} {userDiscountTotal}</div></div>\r\n              </div>\r\n            </section>\r\n\r\n          }\r\n          {\r\n            couponData.length === 1 &&\r\n            <section className=\"uk-card-body\">\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Discounted Total</div></div>\r\n                <div className=\"uk-text-right\"><div>{getCurrencyIcon(userLocation.data || 'IN')} {discountedTotal}</div></div>\r\n              </div>\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Coupon ({couponData[0] && couponData[0].value}%)</div></div>\r\n                <div className=\"uk-text-right\"><div className=\"uk-text-danger\">- {getCurrencyIcon(userLocation.data || 'IN')} {userCouponTotal}</div></div>\r\n              </div>\r\n            </section>\r\n          }\r\n          {\r\n            userLocation.data !== 'IN' &&\r\n            <section className=\"uk-card-body\">\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Subtotal</div></div>\r\n                <div className=\"uk-text-right\"><div>{getCurrencyIcon(userLocation.data || 'IN')} {totalAfterDiscount}</div></div>\r\n              </div>\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Shipping</div></div>\r\n                <div className=\"uk-text-right\"><div className=\"uk-text-success\">+ {getCurrencyIcon(userLocation.data || 'IN')} {shippingCost.shippmentPrice}</div></div>\r\n              </div>\r\n            </section>\r\n          }\r\n\r\n          {\r\n            showCodContainer && props.paymentMode==='cod' &&\r\n            <CashOnDeliveryPayment showOtpContainer={showCodContainer} setEnteredOTP={setEnteredOTP} />\r\n          }\r\n          <section className=\"uk-card-body\">\r\n            {\r\n              <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Total</div></div>\r\n                {\r\n                  userLocation.data === 'IN' ?\r\n                    <div className=\"uk-text-right\"><div className=\"uk-text-lead uk-text-bolder\">{getCurrencyIcon(userLocation.data || 'IN')} {totalAfterDiscount}</div></div>\r\n                    : <div className=\"uk-text-right\"><div className=\"uk-text-lead uk-text-bolder\">{getCurrencyIcon(userLocation.data || 'IN')} {priceAfterShipping}</div></div>\r\n                }\r\n\r\n              </div>\r\n            }\r\n\r\n            {\r\n              props.paymentMode === 'paypal' &&\r\n              cartTotalPrice !== 0 &&\r\n              <PayPalPayment\r\n                cartTotalPrice={totalAfterDiscount}\r\n                cartTotalWithShipping={priceAfterShipping}\r\n                quantityCount={quantityCount}\r\n                isStandard={props.shippingType === 'standard'}\r\n                paymentMode={props.paymentMode}\r\n                setContainerIsCard={setContainerIsCard}\r\n                cartOrderId={cartOrderId} />\r\n            }\r\n            {\r\n              noAddressError && \r\n              <div className=\"login-error-message\">\r\n                    <span className=\"uk-notification-message-danger\"> Please add contact and shipping information </span>\r\n              </div>\r\n            }\r\n            {\r\n              props.paymentMode !== 'paypal' && !showCodContainer &&\r\n              <>\r\n              {\r\n                  !checkout._isFetchCodCodeSuccess && checkout._isError &&\r\n                  <div className=\"login-error-message\">\r\n                    <span className=\"uk-notification-message-danger\"> {checkout.message} </span>\r\n                  </div>\r\n                }\r\n                <button\r\n                  disabled={checkout._isLoading || cartTotalPrice === 0}\r\n                  className=\"uk-button uk-button-primary uk-margin-small uk-width-1-1\"\r\n                  onClick={() => proceedWithPayment()}\r\n                >{checkout._isLoading && <div uk-spinner=\"true\"></div>}\r\n              checkout</button>\r\n                \r\n              </>\r\n            } {\r\n              showCodContainer &&\r\n              <button className=\"uk-button uk-button-primary uk-margin-small uk-width-1-1\"\r\n                disabled={checkout._isLoading || cartTotalPrice === 0}\r\n                onClick={() => { checkout._isFetchCodCodeSuccess ? successCod() : proceedWithPayment() }}>\r\n                {checkout._isFetchCodCodeSuccess ? 'Place Order' : 'Checkout'}\r\n              </button>\r\n            }\r\n          </section>\r\n        </div>\r\n      </div>\r\n      {\r\n        props.paymentMode !== 'paypal' && \r\n        <>\r\n        <button ref={paymentLoadingRef} id=\"payment-loading\" uk-toggle=\"target: #my-id\" type=\"button\"></button>\r\n      <div id=\"my-id\" uk-modal=\"true; esc-close: false; bg-close: false\">\r\n        <div className=\"uk-modal-dialog uk-modal-body uk-margin-auto-vertical\">\r\n          {\r\n            (paymentSuccess || paymentError) && <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n          }\r\n          <div className=\"uk-modal-body uk-nav-center\">\r\n            <p>{paymentMessage}</p>\r\n            {\r\n              !paymentSuccess && !paymentError && <div uk-spinner=\"true\"></div>\r\n            }\r\n            {\r\n              paymentSuccess && !paymentError &&\r\n              <>\r\n                <span className=\"uk-label uk-label-success\">Redirecting to Orders <div uk-spinner=\"true\"></div></span>\r\n              </>\r\n            }\r\n            {\r\n              paymentError && <span className=\"uk-label uk-label-danger\">Payment Failed</span>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n        </>\r\n      }\r\n      \r\n    </>\r\n  )\r\n};\r\n\r\nexport {\r\n  CheckoutPrice\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { UserInformation } from 'components/user';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, UserLocation, getUser } from 'reducers';\r\nimport { CheckoutPrice } from './CheckoutPrice';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst CheckoutContainer: React.FunctionComponent = () => {\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [paymentMode, setPaymentMode] = useState('online');\r\n  const [cartTotal, setCartTotal] = useState(0);\r\n  const [internationalShipping,setInternationalShipping] = useState('standard');\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n\r\n  useEffect(() => {\r\n    if (userLocation.data === 'USD') {\r\n      setPaymentMode('paypal');\r\n    }\r\n  }, [userLocation.data]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getUser());\r\n  },[])\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <section className=\"uk-text-center\">\r\n              <a className=\"uk-link-muted uk-text-small\" onClick={()=> history.push('/cart')}><span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: arrow-left; ratio: .75;\"></span>Return to cart</a>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom\">Checkout</h1>\r\n            </section>\r\n            <section>\r\n              <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n                <div className=\"uk-form-stacked uk-width-1-1 tm-checkout uk-width-expand@m\">\r\n                  <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n                    <section>\r\n                      <h2 className=\"tm-checkout-title\">Contact And Shipping Information</h2>\r\n                      <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n                        <UserInformation user={userData} fromCart={true} />\r\n                      </div>\r\n                    </section>\r\n                    {\r\n                      userLocation.data === 'IN' &&\r\n                      <section>\r\n                        <h2 className=\"tm-checkout-title\">Payment</h2>\r\n                        <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n                          <div className=\"uk-card-body\">\r\n                            <div className=\"uk-grid-small uk-grid-match uk-child-width-1-1 uk-child-width-1-2@s uk-flex-center\" uk-switcher=\"toggle: &gt; * &gt; .tm-choose\" uk-grid=\"true\">\r\n                              <div onClick={() => setPaymentMode('online')}>\r\n                                <a className={paymentMode === \"online\" ? \"tm-choose uk-active\" : \"tm-choose\"} href=\"#\">\r\n                                  <div className=\"tm-choose-title\">Online (via Razorpay)</div>\r\n                                  <div className=\"tm-choose-description\">Visa, MasterCard, all Other Cards</div>\r\n                                </a>\r\n                              </div>\r\n                              <div onClick={() => setPaymentMode('cod')}>\r\n                                <a className={paymentMode === \"cod\" ? \"tm-choose uk-active\" : \"tm-choose\"} href=\"#\">\r\n                                  <div className=\"tm-choose-title\">Cash On Delivery</div>\r\n                                  <div className=\"tm-choose-description\">Order now pay later</div>\r\n                                </a>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      </section>\r\n                    }\r\n                    {\r\n                      userLocation.data !== 'IN' &&\r\n                      <section>\r\n                        <h2 className=\"tm-checkout-title\">Shippment</h2>\r\n                        <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n                          <div className=\"uk-card-body\">\r\n                            <div className=\"uk-grid-small uk-grid-match uk-child-width-1-1 uk-child-width-1-2@s uk-flex-center\" uk-switcher=\"toggle: &gt; * &gt; .tm-choose\" uk-grid=\"true\">\r\n                              <div onClick={()=>setInternationalShipping('standard')}>\r\n                                <a className={internationalShipping === \"standard\" ? \"tm-choose uk-active\" : \"tm-choose\"} href=\"#\">\r\n                                  <div className=\"tm-choose-title\">Standard</div>\r\n                                  <div className=\"tm-choose-description\">India Post</div>\r\n                                  <div className=\"tm-choose-description\">Shipping cost $10 first item then $6 on every additional item.</div>\r\n                                </a>\r\n                              </div>\r\n                              <div onClick={()=>setInternationalShipping('express')}>\r\n                                <a className={internationalShipping === \"express\" ? \"tm-choose uk-active\" : \"tm-choose\"} href=\"#\">\r\n                                  <div className=\"tm-choose-title\">Express</div>\r\n                                  <div className=\"tm-choose-description\">Blue Dart/Fedex/DHL/Others</div>\r\n                                  <div className=\"tm-choose-description\">Shipping cost $18 first item then $10 on every additional item.</div>\r\n                                </a>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      </section>\r\n                    }\r\n                      <section>\r\n                        <h2 className=\"tm-checkout-title\">Delivery Time</h2>\r\n                        <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n                          <div className=\"uk-card-body\">\r\n                            <div className=\"uk-grid-small uk-grid-match uk-child-width-1-1 uk-child-width-1-1@s uk-flex-center\" uk-switcher=\"toggle: &gt; * &gt; .tm-choose\" uk-grid=\"true\">\r\n                              <div> \r\n                                {\r\n                                  userLocation.data !== 'IN' && internationalShipping === \"express\" && \r\n                                  <div className=\"tm-choose-title\">The order will be dispatched in 3 to 5 working days. Delivery time 8 to 10 days after dispatch.</div>\r\n                                }\r\n                                  \r\n                                {\r\n                                  userLocation.data !== 'IN' && internationalShipping === \"standard\" && \r\n                                  <div className=\"tm-choose-title\">The order will be dispatched in 3 to 5 working days. Delivery time 15 to 20 days after dispatch.</div>\r\n                                }\r\n                                {\r\n                                  userLocation.data === 'IN' &&\r\n                                  <div className=\"tm-choose-title\">Delivery within 5 to 7 working days.</div>\r\n                                }\r\n                                  \r\n                                  <div className=\"uk-text-meta\">Notice: We are currently seeing increase in delivery time due to COVID-19. Our team is working with our delivery partners to ensure all packages are delivered as fast as possible with highest standards of hygiene.</div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      </section>\r\n                  </div>\r\n                </div>\r\n                <CheckoutPrice paymentMode={paymentMode} shippingType={internationalShipping} setCartTotal={setCartTotal} />\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  CheckoutContainer\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst SubBanner: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <section className=\"uk-section uk-section-default uk-section-small\">\r\n      <figure className=\"align-center\"><img src=\"/long-banner_1.jpg\" alt=\"footwear\" /></figure>\r\n      {/* <div className=\"uk-container\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n        <figure><img src=\"/long-banner.jpg\" alt=\"footwear\" /></figure>\r\n          <div>\r\n            <a onClick={()=>history.push('/product/bindi')} className=\"uk-link-muted uk-text-center uk-display-block uk-padding-small uk-box-shadow-hover-large\">\r\n              <div className=\"tm-ratio tm-ratio-4-3\">\r\n                <div className=\"tm-media-box\">\r\n                  <figure className=\"tm-media-box-wrap\"><img className=\"item-brand\" src=\"/sb_2.png\" alt=\"footwear\" /></figure>\r\n                </div>\r\n              </div>\r\n              <div className=\"uk-margin-small-top\">\r\n                <div className=\"uk-text-truncate\">Bindi</div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <a onClick={()=>history.push('/product/footwear')}  className=\"uk-link-muted uk-text-center uk-display-block uk-padding-small uk-box-shadow-hover-large\" >\r\n              <div className=\"tm-ratio tm-ratio-4-3\">\r\n                <div className=\"tm-media-box\">\r\n                  <figure className=\"tm-media-box-wrap\"><img className=\"item-brand\" src=\"/sb_1.png\" alt=\"Bindi\" /></figure>\r\n                </div>\r\n              </div>\r\n              <div className=\"uk-margin-small-top\">\r\n                <div className=\"uk-text-truncate\">Footwear</div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <a className=\"uk-link-muted uk-text-center uk-display-block uk-padding-small uk-box-shadow-hover-large\" href=\"#\">\r\n              <div className=\"tm-ratio tm-ratio-4-3\">\r\n                <div className=\"tm-media-box\">\r\n                  <figure className=\"tm-media-box-wrap\"><img className=\"item-brand\" src=\"/sb_3.png\" alt=\"Accessories\" /></figure>\r\n                </div>\r\n              </div>\r\n              <div className=\"uk-margin-small-top\">\r\n                <div className=\"uk-text-truncate\">Homedecore</div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <a onClick={()=>history.push('/product/lingerie')}  className=\"uk-link-muted uk-text-center uk-display-block uk-padding-small uk-box-shadow-hover-large\">\r\n              <div className=\"tm-ratio tm-ratio-4-3\">\r\n                <div className=\"tm-media-box\">\r\n                  <figure className=\"tm-media-box-wrap\"><img className=\"item-brand\" src=\"/sb_4.png\" alt=\"Home Decor\" /></figure>\r\n                </div>\r\n              </div>\r\n              <div className=\"uk-margin-small-top\">\r\n                <div className=\"uk-text-truncate\">Lingerie</div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <a className=\"uk-link-muted uk-text-center uk-display-block uk-padding-small uk-box-shadow-hover-large\" href=\"#\">\r\n              <div className=\"tm-ratio tm-ratio-4-3\">\r\n                <div className=\"tm-media-box\">\r\n                  <figure className=\"tm-media-box-wrap\"><img className=\"item-brand\" src=\"/test.jpg\" alt=\"Home Decor\" /></figure>\r\n                </div>\r\n              </div>\r\n              <div className=\"uk-margin-small-top\">\r\n                <div className=\"uk-text-truncate\">Cosmetics</div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport {\r\n  SubBanner\r\n}","import React from 'react';\r\n\r\nconst Banner: React.FunctionComponent = () => {\r\n  return (\r\n    <section className=\"uk-position-relative uk-visible-toggle uk-light\" uk-slideshow=\"ratio: 8.2:3; min-height:175;autoplay: true;autoplay-interval: 3000\">\r\n      <ul className=\"uk-slideshow-items\">\r\n        <li style={{ backgroundColor: \"#0b0a12\" }}>\r\n          <a>\r\n            <figure className=\"uk-container uk-height-1-1\"><img src=\"/banner_first.jpg\" alt=\"New Macbook\"  uk-cover=\"true\" /></figure>\r\n          </a>\r\n        </li>\r\n        <li style={{ backgroundColor: \"#0b0a12\" }}>\r\n          <a>\r\n            <figure className=\"uk-container uk-height-1-1\"><img src=\"/banner_two.jpg\" alt=\"New Macbook\"  uk-cover=\"true\" /></figure>\r\n          </a>\r\n        </li>\r\n        <li style={{ backgroundColor: \"#ce071e;\" }}>\r\n          <a>\r\n            <figure className=\"uk-container uk-height-1-1\"><img src=\"/banner_three.jpg\" alt=\"iPhone\"  uk-cover=\"true\" /></figure>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <a className=\"uk-position-center-left uk-position-small uk-hidden-hover\" uk-slideshow-item=\"previous\" uk-slidenav-previous=\"true\"></a>\r\n      <a className=\"uk-position-center-right uk-position-small uk-hidden-hover\" uk-slideshow-item=\"next\" uk-slidenav-next=\"true\"></a>\r\n      <div className=\"uk-position-bottom-center uk-position-small\"><ul className=\"uk-slideshow-nav uk-dotnav\"></ul></div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport {\r\n  Banner\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppState, UserLocation, Cart, addUpdateCart } from 'reducers';\r\nimport { ProductItem, CustomerCart } from 'types';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { getCurrencyIcon, calculateUserDiscount, showINRUSD } from 'services';\r\nimport { LoadingProductArticle } from 'components/shared';\r\n\r\n\r\ninterface Props {\r\n  productList: ProductItem[]\r\n}\r\n\r\nconst TrendingLatestProducts: React.FunctionComponent<Props> = (props: Props) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n\r\n  const addToCart = (product: ProductItem) => {\r\n    if(!userData.data?.userId){\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: product.productDetailId,\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: showINRUSD(userLocation.data || 'IN', product),\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, false))\r\n    } else {\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: '0',\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: '0',\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, true));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"uk-grid-collapse uk-child-width-custom tm-products-grid\" uk-grid=\"true\">\r\n      {\r\n        props.productList.length > 0 ?\r\n        props.productList.map((product) => {\r\n          return (\r\n            <article key={product.productId} className=\"tm-product-card\">\r\n              <div className=\"tm-product-card-media\">\r\n                <div className='tm-ratio tm-ratio-1-1'>\r\n                  <a className=\"tm-media-box\" onClick={() => {history.push('/productDetails/' + product.productId) }}>\r\n                    <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + product.imagePaths} alt={product.imageNames} /></figure>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              <div className=\"tm-product-card-body\">\r\n                <div className=\"tm-product-card-info\">\r\n                  <div className=\"uk-text-meta uk-margin-xsmall-bottom\">{product.productCategoryName}</div>\r\n                  <h3 className=\"tm-product-card-title\"><a className=\"uk-link-heading\" onClick={() => history.push('/productDetails/' + product.productId)}>{product.name}</a></h3>\r\n                </div>\r\n                <div className=\"tm-product-card-shop\">\r\n                  <div className=\"tm-product-card-prices\">\r\n                    {\r\n                      userData.data?.discount && userData.data?.discount !== '0' &&\r\n                      <del className=\"uk-text-meta\">{getCurrencyIcon(userLocation.data || 'IN')} {showINRUSD(userLocation.data || 'IN', product)}</del>\r\n                    }\r\n                    <div className=\"tm-product-card-price\">\r\n                      {getCurrencyIcon(userLocation.data || 'IN')} {calculateUserDiscount(userData.data?.discount || '0', showINRUSD(userLocation.data || 'IN', product))}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"tm-product-card-add\">\r\n                    <button className=\"uk-button uk-button-primary tm-product-card-add-button tm-shine js-add-to-cart\">\r\n                      {\r\n                        cart._isLoading && <span uk-spinner=\"true\"></span>\r\n                      }\r\n                      {\r\n                        !cart._isLoading && (\r\n                          <>\r\n                            <span className=\"tm-product-card-add-button-icon\" uk-icon=\"cart\" onClick={() => addToCart(product)}></span>\r\n                            <span className=\"tm-product-card-add-button-text\">add to cart</span>\r\n                          </>\r\n                        )\r\n                      }\r\n\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </article>\r\n          )\r\n        }) : Array(4).fill(1).map((value, index) => <LoadingProductArticle key={index} keyIndex={index}/>)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  TrendingLatestProducts\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState } from 'reducers';\r\nimport { ProductItem } from 'types';\r\nimport { TrendingLatestProducts } from '.';\r\n\r\nconst TrendingLatestContainer: React.FunctionComponent = () => {\r\n\r\n  const latestProducts = useSelector<AppState, ProductItem[]>(state => state.latestProduct.data || []);\r\n  const trendingProducts = useSelector<AppState, ProductItem[]>(state => state.trendingProduct.data || []);\r\n\r\n  return (\r\n    <>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <h2 className=\"uk-text-center\">Trending Items</h2>\r\n          <div className=\"uk-card uk-card-default tm-ignore-container\">\r\n           <TrendingLatestProducts productList={trendingProducts} />\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <h2 className=\"uk-text-center\">Latest Items</h2>\r\n          <div className=\"uk-card uk-card-default tm-ignore-container\">\r\n           <TrendingLatestProducts productList={latestProducts} />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nexport {\r\n  TrendingLatestContainer\r\n}","import { LoadingProductArticle } from 'components/shared';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst PromoBanner: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <section className=\"uk-section uk-section-small\">\r\n      <div className=\"uk-container\">\r\n        <h2 className=\"uk-text-center\"></h2>\r\n        <div className=\"uk-child-width-1-2@m tm-ignore-container promo-banner-no-padding\" uk-grid=\"true\">\r\n          <div>\r\n            <div className=\"uk-card uk-card-default uk-card-hover\">\r\n            <div className=\"uk-card-media-top\">\r\n              <a onClick={() => history.push('/product/lingerie')}>\r\n                <img src=\"/lingerie_promo.jpg\" alt=\"promo-lingerie\" />\r\n              </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div className=\"uk-card uk-card-hover\">\r\n              <div className=\"uk-card-media-top\">\r\n                <a onClick={() => history.push('/product/footwear')}>\r\n                  <img src=\"/footwear_promo.jpg\" alt=\"promo-footwear\" />\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-child-width-1-2@m tm-ignore-container promo-banner-no-padding\" uk-grid=\"true\">\r\n          <div>\r\n            <div className=\"uk-card uk-card-hover\">\r\n              <a onClick={() => history.push('/product/bindi')}>\r\n                <img src=\"/bindi_promo.jpg\" alt=\"promo-bindi\" />\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div className=\"uk-card uk-card-hover\">\r\n              <div className=\"uk-card-media-top\">\r\n                <a onClick={() => history.push('/product/home essential')}>\r\n                  <img src=\"/home_essential_promo.jpg\" alt=\"promo-home-essential\" />\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div className=\"uk-card uk-card-hover\">\r\n              <div className=\"uk-card-media-top\">\r\n                <a onClick={() => history.push('/product/cosmetics')}>\r\n                  <img src=\"/cosmetic_promo.jpg\" alt=\"promo-cosmetic\" />\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport {\r\n  PromoBanner\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getTrendingProduct, getLatestProduct, AppState } from 'reducers';\r\nimport { SubBanner } from './SubBanner';\r\nimport { Banner } from './Banner';\r\nimport { TrendingLatestContainer } from './trendingLatest';\r\nimport { PromoBanner } from './PromoBanner';\r\nimport { FooterBanner } from '.';\r\n\r\n\r\nconst HomePageContainer: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getTrendingProduct());\r\n    dispatch(getLatestProduct());\r\n  },[])\r\n  return (\r\n    <main>\r\n      <Banner/>\r\n      <SubBanner/>\r\n      <PromoBanner/>\r\n      <TrendingLatestContainer/>\r\n      <FooterBanner/>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  HomePageContainer\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst FooterBanner: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <section className=\"uk-section uk-section-default uk-section-small\">\r\n      <figure className=\"align-center\"><img src=\"/long-banner-2-1.jpg\" alt=\"footwear\" /></figure>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport {\r\n  FooterBanner\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { Router, Switch, Route } from \"react-router-dom\";\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport './index.css';\r\nimport { UserContainer } from 'components/user';\r\nimport { UserLogin } from 'components/login'\r\nimport { MainFooter } from 'components/footer';\r\nimport { Navigation } from 'components/pilot';\r\nimport { MainContainer } from 'components/admin/MainContainer';\r\nimport { CustomerContainer } from 'components/customer';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { store } from 'reducers';\r\nimport { CustomerProductDetails } from 'components/customer/ProductDetails';\r\nimport { CustomerProductDetailsConstainer } from 'components/customer/ProductDetails/CustomerProductDetailsContainer';\r\nimport { CustomerCartContainer } from 'components/customer/Cart';\r\nimport { CheckoutContainer } from 'components/customer/Checkout';\r\nimport { HomePageContainer } from 'components/customer/Home';\r\nimport {About, ContactUs, ReturnPolicy, ScrollToTop} from 'components/shared';\r\n\r\n\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <Router history={createBrowserHistory()}>\r\n      <ScrollToTop />\r\n        <Navigation />\r\n          <Switch>\r\n          <Route path=\"/\" exact>\r\n              <HomePageContainer />\r\n            </Route>\r\n            <Route path=\"/userinformation/:userTab?\" exact>\r\n              <UserContainer />\r\n            </Route>\r\n            <Route path=\"/login\" exact>\r\n              <UserLogin />\r\n            </Route>\r\n            <Route path=\"/admin/:product?/:productId?\" exact>\r\n              <MainContainer />\r\n            </Route>\r\n            <Route path=\"/product/:product/:filterOn?\" exact>\r\n              <CustomerContainer />\r\n            </Route>\r\n            <Route path=\"/productDetails/:queryProductId\" exact>\r\n              <CustomerProductDetailsConstainer />\r\n            </Route>\r\n            <Route path=\"/cart\" exact>\r\n              <CustomerCartContainer/>\r\n            </Route>\r\n            <Route path=\"/checkout\" exact>\r\n              <CheckoutContainer/>\r\n            </Route>\r\n            <Route path=\"/contactus\" exact>\r\n              <ContactUs/>\r\n            </Route>\r\n            <Route path=\"/about\" exact>\r\n              <About/>\r\n            </Route>\r\n            <Route path=\"/refundpolicy\" exact>\r\n              <ReturnPolicy/>\r\n            </Route>\r\n          </Switch>\r\n        <MainFooter />\r\n      </Router>\r\n    </React.StrictMode>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(\r\n  app,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}