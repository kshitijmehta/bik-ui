{"version":3,"sources":["appConstants/AxiosConstants.ts","appConstants/CountryCodes.ts","appConstants/SubProducts.ts","reducers/UserInformation.ts","appConstants/ApiServerConstants.ts","services/axiosBase.ts","services/axios.ts","services/Misc.ts","reducers/Login.ts","reducers/UserSettings.ts","reducers/Colour.ts","reducers/Size.ts","reducers/SubCategory.ts","reducers/Coupon.ts","reducers/Product.ts","reducers/ProductCount.ts","appConstants/ProductsConstants.ts","reducers/Cart.ts","reducers/Checkout.ts","reducers/UserLocation.ts","reducers/Order.ts","reducers/Shipper.ts","reducers/Shipment.ts","reducers/RelatedProducts.ts","reducers/TrendingProducts.ts","reducers/LatestProducts.ts","reducers/Search.ts","reducers/CustomerShippment.ts","reducers/index.ts","components/shared/NotificationContainer.tsx","components/shared/PayPalContainer.tsx","components/shared/PayPalPayment.tsx","components/shared/CashOnDeliveryPayment.tsx","components/shared/QuickProductList.tsx","components/shared/LoadingProductArticle.tsx","components/shared/ScrollToTop.tsx","components/shared/ContactUs.tsx","components/user/UserInformation.tsx","components/user/UserNav.tsx","components/user/UserSettings.tsx","components/user/Orders.tsx","components/user/UserContainer.tsx","components/login/login.tsx","components/footer/MainFooter.tsx","components/pilot/Navigation.tsx","components/pilot/SideCart.tsx","components/pilot/MobileNavigation.tsx","components/admin/AdminNav.tsx","components/admin/AdminProductList.tsx","components/admin/subComponents/colour/ColourList.tsx","components/admin/subComponents/colour/ProductColour.tsx","components/admin/subComponents/size/ProductSize.tsx","components/admin/subComponents/size/SizeList.tsx","components/admin/subComponents/subCategory/ProductSubCategory.tsx","components/admin/subComponents/subCategory/SubCategoryList.tsx","components/admin/subComponents/coupon/ProductCoupon.tsx","components/admin/subComponents/coupon/CouponList.tsx","components/admin/subComponents/product/ProductItem.tsx","components/admin/subComponents/product/ProductList.tsx","components/admin/subComponents/orders/OrderList.tsx","components/admin/subComponents/orders/OrderDetails.tsx","components/admin/subComponents/shippers/ShipperDetails.tsx","components/admin/subComponents/shippers/ShipperList.tsx","components/admin/subComponents/users/UserList.tsx","components/admin/subComponents/users/UserDetails.tsx","components/admin/MainContainer.tsx","components/customer/CustomerProductList.tsx","components/customer/CustomerContainer.tsx","components/customer/CustomerProductFilter.tsx","serviceWorker.ts","components/customer/ProductDetails/CustomerProductDetails.tsx","components/customer/ProductDetails/CustomerProductDetailsLoading.tsx","components/customer/ProductDetails/CustomerProductDetailsContainer.tsx","components/customer/Cart/CartDetails.tsx","components/customer/Cart/CartPrice.tsx","components/customer/Cart/CustomerCartContainer.tsx","components/customer/Checkout/CheckoutPrice.tsx","components/customer/Checkout/CheckoutContianer.tsx","components/customer/Home/SubBanner.tsx","components/customer/Home/Banner.tsx","components/customer/Home/trendingLatest/TrendingLatestProduct.tsx","components/customer/Home/trendingLatest/TrendingLatestContainer.tsx","components/customer/Home/HomePageContainer.tsx","index.tsx"],"names":["HttpRequest","HttpStatusCode","SubProducts","CountryCodes","Actions","SubCategories","AllowReturn","serverImagePath","apiServerHost","axios","create","baseURL","headers","api","url","makeRequest","method","GET","data","POST","config","a","defaults","window","localStorage","getItem","request","response","status","removeItem","location","href","message","getSubCategoryFromId","id","filterSubcategories","subCategories","categoryId","filter","subCategory","productCategoryId","Number","filterSize","sizes","size","indexOf","productCategory","calculateUserDiscount","discount","price","Math","ceil","toString","calculateUserDiscountPrice","getCurrencyIcon","currency","showINRUSD","userLocation","priceINR","priceUSD","createProductCountList","activeProducts","productCountList","forEach","product","subcategoryId","colourId","sizeId","name","sizeName","quantity","colourName","subcategoryName","console","log","countHighlightProducts","products","isTrending","trending","length","latest","initialState","isAdmin","allUsers","_isError","_isLoading","_isSuccess","setUser","user","type","SET_USER","loadingUser","LOADING_USER","errorUser","ERROR_USER","updateDiscount","emailAddress","UPDATE_USER_DISCOUNT","getUser","disptach","OK","loadingRegister","LOADING_REGISTER","errorRegister","ERROR_REGISTER","successRegister","SUCCESS_REGISTER","setUserSetting","userSettings","SET_USER_SETTINGS","loadingUserSettings","LOADING_USER_SETTINGS","errorUserSettings","ERROR_USER_SETTINGS","loadingColour","LOADING_COLOUR","errorColour","ERROR_COLOUR","getColour","dispatch","res","SET_COLOUR","loadingSize","LOADING_SIZE","successSize","SUCCESS_SIZE","errorSize","addUpdateSize","product_size","value","product_size_code","code","product_category","size_id","productCategoryIndex","productCategoryName","UPDATE_SIZE","getSize","SET_SIZE","loadingSubCategory","LOADING_SUBCATEGORY","successSubCategory","SUCCESS_SUBCATEGORY","errorSubCategory","ERROR_SUBCATEGORY","addUpdateSubCategory","product_name","product_desc","product_category_id","subcategory_id","subCategoryId","UPDATE_SUBCATEGORY","getSubCategory","SET_SUBCATEGORY","loadingCoupon","LOADING_COUPON","errorCoupon","ERROR_COUPON","setCoupon","SET_COUPON","updateCouponSuccess","UPDATE_COUPON_SUCCESS","deleteCouponSuccess","DELETE_COUPON_SUCCESS","updateCoupon","coupon","isDelete","coupon_code","coupon_value","coupon_id","couponId","loadingProduct","LOADING_PRODUCT","successProduct","SUCCESS_PRODUCT","errorProduct","ERROR_PRODUCT","setProducts","_hasMoreProducts","SET_PRODUCT","setDefaulState","SET_DEFAULT_PRODUCT","deleteProductSuccess","DELETE_PRODUCT_SUCCESS","setCustomerProducts","SET_CUSTOMER_PRODUCT","setProductHighlight","productId","SET_PRODUCT_HIGHLIGHT","singleData","addUpdateProduct","sizeColourQuantity","formData","FormData","productImageBlob","Array","from","element","index","append","colour","description","JSON","stringify","deletedImagePath","deletedProductDetailIds","getProduct","SET_SINGLE_PRODUCT","getCustomerProducts","offset","limit","startPrice","endPrice","searchText","freshData","_quantityUpdate","loadingCart","LOADING_CART","errorCart","ERROR_CART","updateCartSuccess","UPDATE_CART_SUCCESS","deleteCartProduct","DELETE_CART_PRODUCT","addUpdateCart","cart","isLoggedIn","newCart","totalPrice","productPrice","productQuantity","UPDATE_CART_LOGGED_OUT","product_detail_id","productDetailId","order_quantity","price_id","currencyType","orderdetail_id","cartId","delete_flag","result","productImage","productImagePath","productName","subcategory","getCart","ADD_CART_SUCCESS","deleteCartItem","DELETE_CART_PRODUCT_LOGGED_OUT","_isPaymentSucceess","_priceChanged","_isFetchCodCodeSuccess","loadingCheckout","LOADING_CHECKOUT","successCheckoutOrder","SUCCESS_CHECKOUT_ORDER","errorCheckout","ERROR_CHECKOUT","defaultCheckout","DEFAULT_CHECKOUT","successPayment","SUCCESS_PAYMENT","priceChanged","PRICE_CHANGED","getPayPalOrder","amount","displayAmount","orderId","PARTIAL_INFO","setUserLocation","SET_USER_LOCATION","loadingOrder","LOADING_ORDER","successOrder","_hasMoreOrders","SUCCESS_ORDER","adminSuccessOrder","ADMIN_SUCCESS_ORDER","errorOrder","ERROR_ORDER","customerReturn","orderDetailsId","CUSTOMER_RETURN","defaulOrderReturn","DEFAULT_ORDER_RETURN","_isOrderUpdate","getCustomerOrders","loadingShipper","LOADING_SHIPPER","errorShipper","ERROR_SHIPPER","updateShipperSuccess","UPDATE_SHIPPER_SUCCESS","deleteShipperSuccess","DELETE_SHIPPER_SUCCESS","getShippers","SET_SHIPPER","updateShipper","shipper","shipper_name","shipperName","shipper_link","trackingLink","shipper_id","shipperId","successShipment","SUCCESS_SHIPMENT","setSearch","SET_SEARCH","shippmentPrice","setShippingPrice","SET_SHIPPING_PRICE","reducers","state","action","DEFAULT_USER","SET_ALL_USER","map","toLowerCase","userLogin","LOADING_LOGIN","ERROR_LOGIN","SUCCESS_LOGIN","DEFAULT_STATE","SUCCESS_COLOUR","UPDATE_COLOUR_SUCCESS","originalState","updatedValue","updatedState","d","DEFAULT_COLOUR","ERROR_SIZE","SUCCESS_COUPON","orgState","updValue","updState","DEFAULT_COUPON","concat","productCount","LOADING_PRODUCT_COUNT","ERROR_PRODUCT_COUNT","SET_PRODUCT_COUNT","SUCCESS_CART","SET_CART","SET_LOGGED_CART","og","newProduct","originalStatelo","oglo","newProductlo","setItem","DEFAULT_CART","CART_GET_UPDATED_QUANTITY","CART_QUANTITY_FINE","checkout","LOADING_USER_LOCATION","customerOrders","SINGLE_DATA","singleOrder","updatedOrder","orderItems","order","orderDetailId","shipmentDetails","returnStatus","SUCCESS_SHIPPER","DEFAULT_SHIPPER","shipment","LOADING_SHIPMENT","ERROR_SHIPMENT","relatedProduct","SUCCESS_RELATED_PRODUCT","LOADING_RELATED_PRODUCT","ERROR_RELATED_PRODUCT","SET_RELATED_PRODUCT","trendingProduct","SUCCESS_TRENDING_PRODUCT","LOADING_TRENDING_PRODUCT","ERROR_TRENDING_PRODUCT","SET_TRENDING_PRODUCT","latestProduct","SUCCESS_LATEST_PRODUCT","LOADING_LATEST_PRODUCT","ERROR_LATEST_PRODUCT","SET_LATEST_PRODUCT","search","LOADING_SEARCH","ERROR_SEARCH","customerShippment","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunkMiddleware","NotificationContainer","props","className","isSdkReady","undefined","paypal","this","addPaypalSdk","onButtonReady","actions","options","shippingPreference","purchase_units","currency_code","application_context","shipping_preference","capture","then","details","onSuccess","catch","err","catchError","error","onCancel","createOrder","createSubscription","onApprove","style","Button","Buttons","driver","React","ReactDOM","createOrderFn","queryParams","Object","entries","key","split","join","push","script","document","createElement","src","async","onload","setState","onerror","Error","body","appendChild","Component","defaultProps","clientId","PayPalPayment","useDispatch","history","useHistory","paypalPaymentLoadingRef","useRef","paypalModalRef","useSelector","userData","couponData","useState","paypalPaymentMessage","setPaypalPaymentMessage","setPayPalOrderId","paymentErroredOut","setPaymentErroredOut","paymentSuccess","setPaymentSuccess","setIsCard","useEffect","paymentMode","paypalOrderId","cartTotalPrice","paypalButton","close","setTimeout","go","current","click","didPriceChanged","togglePaymenModal","fundingType","successPaypalPayment","onClick","fundingSource","cartTotalWithShipping","cartOrderId","onError","render","tt","funding","innerWidth","scrollTo","top","behavior","setContainerIsCard","orderData","paymentData","paypalData","paypalResponse","addressId","quantityCount","isStandard","ref","uk-toggle","uk-modal","uk-close","uk-spinner","CashOnDeliveryPayment","showOtpContainer","timeLeft","setTimeLeft","enteredOTP","setEnteredOTP","timer","setInterval","clearTimeout","resendOtpToCustomer","uk-grid","onChange","e","currentTarget","QuickProductList","uk-slider","uk-slider-item","uk-slidenav-previous","uk-slidenav-next","productList","imagePaths","alt","imageNames","uk-icon","userId","cartData","addToCart","LoadingProductArticle","keyIndex","ScrollToTop","withRouter","unlisten","listen","ContactUs","UserInformation","isLoading","userInformationFormik","useFormik","initialValues","firstName","lastName","mobile","dob","gender","country","default","countryCode","city","pincode","addressLineOne","addressLineTwo","addressLineThree","validationSchema","Yup","required","matches","onSubmit","enableReinitialize","handleSubmit","fromCart","getFieldProps","touched","errors","disabled","UserNav","uk-sticky","showPersonal","toggelDetails","showOrders","showSettings","UserSettings","userSettingFormik","currentPassword","newPassword","confirmPassword","oneOf","resetForm","Orders","hasMoreOrders","setHasMoreOrders","selectedReason","setSelectedReason","showOrderDetailIndex","setShowOrderDetailIndex","returnOrderDetailId","setReturnOrderDetailId","returnOrderNumber","setReturnOrderNumber","returnProductName","setReturnProductName","showReturnError","setShowReturnError","returnModalRef","returnButtonRef","orders","shipperData","getBoundingClientRect","that","getShipmentLink","trackingNumber","shipperInfo","target","checkReturnEligibilty","deliveryDate","differenceInDays","Date","getTime","returnOrder","reason","orderNumber","returnReason","userName","customerProductReturn","dataLength","next","hasMore","loader","textAlign","marginTop","endMessage","paymentDate","paymentReturned","shippingDate","uk-accordion","orderItem","visibility","checked","UserContainer","userTab","useParams","setShowSettings","setShowPersonal","setShowOrders","selected","UserLogin","isError","responseMessage","loginRedirect","setLoginRedirect","loginFormik","email","password","isRegistration","forgetPassword","when","is","values","registerationData","loginData","loginDetails","access_token","toggleLoginRegister","setFieldValue","parse","to","event","Iso","MainFooter","width","Navigation","cartCount","setCartCount","enteredSearchText","setEnteredSearchText","cartCountCssFlag","setCartCountCssFlag","sideCartRef","mobileNavigationRef","Intl","DateTimeFormat","resolvedOptions","timeZone","getTimezoneOffset","searchProduct","navigateTo","categoryPath","subcategoryPath","preventDefault","logout","uk-navbar","uk-navbar-toggle-icon","keys","uk-drop","uk-search-icon","placeholder","onKeyPress","uk-dropdown","minWidth","SideCart","mainTotal","setMainTotal","userDiscountTotal","setUserDiscountTotal","totalAfterDiscount","setTotalAfterDiscount","discountedTotal","setDiscountedTotal","userCouponTotal","setUserCouponTotal","cartPrice","discountPrice","priceAfterDiscount","couponPrice","priceAfterCoupon","uk-offcanvas","uk-tooltip","MobileNavigation","uk-nav","AdminNav","subProductToggle","addEditToggle","selectedTab","setSelectedTab","isOnList","setIsOnList","PRODUCT","title","USERS","ORDERS","SUB_PRODUCT","SIZE","COLOUR","COUPONS","SHIPPER","AdminProductList","searchTerm","setSearchTerm","tabName","setTabName","tableData","setTableData","stateData","columns","productColumns","productType","getAdminOrders","includes","defaultSortField","sortByColumn","defaultSortAsc","selectableRows","selectableRowsNoSelectAll","selectableRowsHighlight","selectableRowsVisibleOnly","expandableRows","expandOnRowClicked","expandableRowsComponent","ExpandableComponent","pagination","highlightOnHover","striped","pointerOnHover","dense","noTableHead","persistTableHead","progressPending","noHeader","subHeader","subHeaderComponent","color","searchPlaceholder","fixedHeader","fixedHeaderScrollHeight","direction","colourActionStatus","colourQuickViewFormik","product_color_code","product_color","colour_id","isSubmitting","ColourList","selector","sortable","ProductColour","colourFormik","ProductSize","sizeFormik","sizeActionStatus","SizeList","sizeQuickViewFormik","ProductSubCategory","subCategoryFormik","moreThan","subCategoryActionStatus","SubCategoryList","subCategoryQuickViewFormik","ProductCoupon","couponFormik","couponActionStatus","CouponList","cell","row","confirm","couponQuickViewFormik","ProductItem","setSizeColourQuantity","selectedSizes","setSelectedSizes","sizeColourQuantityErrorMessage","setSizeColourQuantityErrorMessage","productItemFormik","sizeColourQuantityCombo","filteredKey","checkForProductCategory","updatedImageName","adminProductCombo","productDetailIdArray","some","item","productSize","productColour","productActionStatus","sizeArray","colourArray","quantityArray","editSizeColourQuantityCombo","sizeItem","filteredSubcategories","filteredProductSize","updatedSizeColourQuantityArray","field","currentItem","splice","cols","handleChange","onBlur","handleBlur","fill","isArray","newPDArray","reduceProductComboLength","availableSizes","addProductComboLength","htmlFor","multiple","files","currentNumberOfFile","currentFiles","filesArray","checkForMaxFileUpload","fileName","filePath","fileNames","path","imagePath","imageName","removeCurrentImage","getFileNameAndPath","call","file","i","URL","createObjectURL","img","removeImage","ProductList","marginLeft","productQuickViewFormik","highlight","setSubmitting","updateProductHighLight","OrderList","wrap","icon","orderLength","getIconForAdminOrder","whiteSpace","OrderDetails","adminShipmentData","setAdminShipmentData","orginalTrackingLink","setOrginalTrackingLink","shippers","shipmentStatus","tempShipmentData","tempTrackingLink","shipmentId","updateShipmentData","shipmentDataCopy","shipmentDataToUpdate","updatedShipmentData","updateOrderStatus","orderUpdate","sendTrackingEmail","isTrackingChanged","orginalTrackingLinkCopy","customerEmail","userDetails","customerName","payaplResponse","transactionId","payments","captures","getPaypalTransactionId","razorpayPaymentId","standardShipping","ShipperDetails","shipperActionStatus","shipperFormik","ShipperList","shipperQuickViewFormik","UserList","userActionStatus","userDiscountQuickViewFormik","updateUserDiscount","UserDetails","MainContainer","setIsOnAdd","setSubProductId","isOnAdd","subProductId","showSubProductComponent","CustomerProductList","hasMoreProducts","setHasMoreProducts","CustomerContainer","filterOn","setColourId","setSizeId","setSubCategoryId","setStartPrice","setEndPrice","setcategoryId","subCategoryQueryParam","setSubCategoryQueryParam","subCateId","activeProductCount","productKey","find","count","selectedSubCat","selectedColour","selectedSize","activeSubCat","activeColour","activeSize","getTotalProductCount","filterSelected","CustomerProductFilter","filterColourId","setFilterColourId","filterSizeId","setFilterSizeId","filterSubCategory","setFilterSubCategory","filterStartPrice","setFilterStartPrice","filterEndPrice","setFilterEndPrice","startPriceTimer","setStartPriceTimer","endPriceTimer","setEndPriceTimer","toggleAddingRemovingId","ids","newId","getFilteredProduct","updatedColourFilter","updatedSizeFilter","updatedSubCategory","flexBasis","getProductCount","Boolean","hostname","match","CustomerProductDetails","cartProductQuantity","relatedProducts","pINR","setPINR","pUSD","setPUSD","pQuantity","setPQuantity","pSize","setPSize","pSizeId","setPSizeId","pDetailId","setPDetailId","setSelectedSize","selectedQuantity","setSelectedQuantity","selectedProductDetailId","setSelectedProductDetailId","maxQuantity","setMaxQuantity","defaultProductDetail","productIndex","onChangeQuantity","toggleQuantity","isIncrement","maxQaun","checkForDefaultSize","sizeList","uk-slideshow","uk-lightbox","mainSlider","smallSlider","selectedIndex","maxQ","pdId","setSize","onBlurQuantity","CustomerProductDetailsLoading","uk-slideshow-item","uk-switcher","CustomerProductDetailsConstainer","queryProductId","setMainSlider","setSmallSlider","setCartProductQuantity","cartProductFlag","setCartProductFlag","tabIndex","cartProductCount","getRelatedProduct","CartDetails","setQuantity","enteredCoupon","setEnteredCoupon","quantityCheckMessage","setQuantityCheckMessage","couponStatus","deboucedId","setDeboucedId","quantityChanged","setQuantityChanged","quantityChangedProductId","setQuantityChangedProductId","orderQuantityCheckButtonRef","orderQuantityCheckModalRef","qt","checkForAvailableQuantity","cartItem","availableQuantity","updateCart","updateQantity","changedQuantity","chqty","newQuantity","updatedQuantity","checkCouponValidity","deleteCart","CartPrice","cartTotal","setCartTotal","total","CustomerCartContainer","Razorpay","CheckoutPrice","setCartTotalPrice","priceAfterShipping","setPriceAfterShipping","setQuantityCount","setCartOrderId","paymentMessage","setPaymentMessage","paymentError","setPaymentError","errorHappendAt","setErrorHappendAt","shippingCost","paymentLoadingRef","containerIsCard","ukSticky","setUkSicky","showCodContainer","setShowCodContainer","noAddressError","setNoAddressError","setDidPriceChanged","timeForShowPriceChange","setTimeForShowPriceChange","calculateShippingCost","shippingType","successRazorPay","razorpay_payment_id","razorpay_order_id","razorpay_signature","rzp1","on","source","step","metadata","open","otp","razorpayOrderId","razorpaySignature","razorpayData","receipt","proceedWithPayment","getCodOrder","successCod","codData","itemCount","reduce","accumulator","cost","CheckoutContainer","setPaymentMode","internationalShipping","setInternationalShipping","SubBanner","Banner","backgroundColor","uk-cover","TrendingLatestProducts","TrendingLatestContainer","latestProducts","trendingProducts","HomePageContainer","app","StrictMode","createBrowserHistory","exact","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.79e77a3a.chunk.js","sourcesContent":["enum HttpRequest {\r\n  GET = \"GET\",\r\n  POST = \"POST\",\r\n  DELETE = \"DELETE\",\r\n  PATCH = \"PATCH\"\r\n};\r\n\r\n\r\nenum HttpStatusCode {\r\n  OK = 200,\r\n  ACCEPTED = 202,\r\n  PARTIAL_INFO = 203,\r\n  BAD_REQUEST = 400,\r\n  NOT_FOUND = 404\r\n}\r\n\r\nexport { HttpRequest, HttpStatusCode };","const CountryCodes = [\r\n  {\r\n    \"name\": \"Afghanistan\",\r\n    \"Iso\": \"+93\",\r\n    \"countryCode\": \"AF\"\r\n  },\r\n  {\r\n    \"name\": \"Åland Islands\",\r\n    \"Iso\": \"+358\",\r\n    \"countryCode\": \"AX\"\r\n  },\r\n  {\r\n    \"name\": \"Albania\",\r\n    \"Iso\": \"+355\",\r\n    \"countryCode\": \"AL\"\r\n  },\r\n  {\r\n    \"name\": \"Algeria\",\r\n    \"Iso\": \"+213\",\r\n    \"countryCode\": \"DZ\"\r\n  },\r\n  {\r\n    \"name\": \"American Samoa\",\r\n    \"Iso\": \"+1684\",\r\n    \"countryCode\": \"AS\"\r\n  },\r\n  {\r\n    \"name\": \"Andorra\",\r\n    \"Iso\": \"+376\",\r\n    \"countryCode\": \"AD\"\r\n  },\r\n  {\r\n    \"name\": \"Angola\",\r\n    \"Iso\": \"+244\",\r\n    \"countryCode\": \"AO\"\r\n  },\r\n  {\r\n    \"name\": \"Anguilla\",\r\n    \"Iso\": \"+1264\",\r\n    \"countryCode\": \"AI\"\r\n  },\r\n  {\r\n    \"name\": \"Antarctica\",\r\n    \"Iso\": \"+672\",\r\n    \"countryCode\": \"AQ\"\r\n  },\r\n  {\r\n    \"name\": \"Antigua and Barbuda\",\r\n    \"Iso\": \"+1268\",\r\n    \"countryCode\": \"AG\"\r\n  },\r\n  {\r\n    \"name\": \"Argentina\",\r\n    \"Iso\": \"+54\",\r\n    \"countryCode\": \"AR\"\r\n  },\r\n  {\r\n    \"name\": \"Armenia\",\r\n    \"Iso\": \"+374\",\r\n    \"countryCode\": \"AM\"\r\n  },\r\n  {\r\n    \"name\": \"Aruba\",\r\n    \"Iso\": \"+297\",\r\n    \"countryCode\": \"AW\"\r\n  },\r\n  {\r\n    \"name\": \"Australia\",\r\n    \"Iso\": \"+61\",\r\n    \"countryCode\": \"AU\"\r\n  },\r\n  {\r\n    \"name\": \"Austria\",\r\n    \"Iso\": \"+43\",\r\n    \"countryCode\": \"AT\"\r\n  },\r\n  {\r\n    \"name\": \"Azerbaijan\",\r\n    \"Iso\": \"+994\",\r\n    \"countryCode\": \"AZ\"\r\n  },\r\n  {\r\n    \"name\": \"Bahamas\",\r\n    \"Iso\": \"+1242\",\r\n    \"countryCode\": \"BS\"\r\n  },\r\n  {\r\n    \"name\": \"Bahrain\",\r\n    \"Iso\": \"+973\",\r\n    \"countryCode\": \"BH\"\r\n  },\r\n  {\r\n    \"name\": \"Bangladesh\",\r\n    \"Iso\": \"+880\",\r\n    \"countryCode\": \"BD\"\r\n  },\r\n  {\r\n    \"name\": \"Barbados\",\r\n    \"Iso\": \"+1246\",\r\n    \"countryCode\": \"BB\"\r\n  },\r\n  {\r\n    \"name\": \"Belarus\",\r\n    \"Iso\": \"+375\",\r\n    \"countryCode\": \"BY\"\r\n  },\r\n  {\r\n    \"name\": \"Belgium\",\r\n    \"Iso\": \"+32\",\r\n    \"countryCode\": \"BE\"\r\n  },\r\n  {\r\n    \"name\": \"Belize\",\r\n    \"Iso\": \"+501\",\r\n    \"countryCode\": \"BZ\"\r\n  },\r\n  {\r\n    \"name\": \"Benin\",\r\n    \"Iso\": \"+229\",\r\n    \"countryCode\": \"BJ\"\r\n  },\r\n  {\r\n    \"name\": \"Bermuda\",\r\n    \"Iso\": \"+1441\",\r\n    \"countryCode\": \"BM\"\r\n  },\r\n  {\r\n    \"name\": \"Bhutan\",\r\n    \"Iso\": \"+975\",\r\n    \"countryCode\": \"BT\"\r\n  },\r\n  {\r\n    \"name\": \"Bolivia, Plurinational State of bolivia\",\r\n    \"Iso\": \"+591\",\r\n    \"countryCode\": \"BO\"\r\n  },\r\n  {\r\n    \"name\": \"Bosnia and Herzegovina\",\r\n    \"Iso\": \"+387\",\r\n    \"countryCode\": \"BA\"\r\n  },\r\n  {\r\n    \"name\": \"Botswana\",\r\n    \"Iso\": \"+267\",\r\n    \"countryCode\": \"BW\"\r\n  },\r\n  {\r\n    \"name\": \"Bouvet Island\",\r\n    \"Iso\": \"+47\",\r\n    \"countryCode\": \"BV\"\r\n  },\r\n  {\r\n    \"name\": \"Brazil\",\r\n    \"Iso\": \"+55\",\r\n    \"countryCode\": \"BR\"\r\n  },\r\n  {\r\n    \"name\": \"British Indian Ocean Territory\",\r\n    \"Iso\": \"+246\",\r\n    \"countryCode\": \"IO\"\r\n  },\r\n  {\r\n    \"name\": \"Brunei Darussalam\",\r\n    \"Iso\": \"+673\",\r\n    \"countryCode\": \"BN\"\r\n  },\r\n  {\r\n    \"name\": \"Bulgaria\",\r\n    \"Iso\": \"+359\",\r\n    \"countryCode\": \"BG\"\r\n  },\r\n  {\r\n    \"name\": \"Burkina Faso\",\r\n    \"Iso\": \"+226\",\r\n    \"countryCode\": \"BF\"\r\n  },\r\n  {\r\n    \"name\": \"Burundi\",\r\n    \"Iso\": \"+257\",\r\n    \"countryCode\": \"BI\"\r\n  },\r\n  {\r\n    \"name\": \"Cambodia\",\r\n    \"Iso\": \"+855\",\r\n    \"countryCode\": \"KH\"\r\n  },\r\n  {\r\n    \"name\": \"Cameroon\",\r\n    \"Iso\": \"+237\",\r\n    \"countryCode\": \"CM\"\r\n  },\r\n  {\r\n    \"name\": \"Canada\",\r\n    \"Iso\": \"+1\",\r\n    \"countryCode\": \"CA\"\r\n  },\r\n  {\r\n    \"name\": \"Cape Verde\",\r\n    \"Iso\": \"+238\",\r\n    \"countryCode\": \"CV\"\r\n  },\r\n  {\r\n    \"name\": \"Cayman Islands\",\r\n    \"Iso\": \"+ 345\",\r\n    \"countryCode\": \"KY\"\r\n  },\r\n  {\r\n    \"name\": \"Central African Republic\",\r\n    \"Iso\": \"+236\",\r\n    \"countryCode\": \"CF\"\r\n  },\r\n  {\r\n    \"name\": \"Chad\",\r\n    \"Iso\": \"+235\",\r\n    \"countryCode\": \"TD\"\r\n  },\r\n  {\r\n    \"name\": \"Chile\",\r\n    \"Iso\": \"+56\",\r\n    \"countryCode\": \"CL\"\r\n  },\r\n  {\r\n    \"name\": \"China\",\r\n    \"Iso\": \"+86\",\r\n    \"countryCode\": \"CN\"\r\n  },\r\n  {\r\n    \"name\": \"Christmas Island\",\r\n    \"Iso\": \"+61\",\r\n    \"countryCode\": \"CX\"\r\n  },\r\n  {\r\n    \"name\": \"Cocos (Keeling) Islands\",\r\n    \"Iso\": \"+61\",\r\n    \"countryCode\": \"CC\"\r\n  },\r\n  {\r\n    \"name\": \"Colombia\",\r\n    \"Iso\": \"+57\",\r\n    \"countryCode\": \"CO\"\r\n  },\r\n  {\r\n    \"name\": \"Comoros\",\r\n    \"Iso\": \"+269\",\r\n    \"countryCode\": \"KM\"\r\n  },\r\n  {\r\n    \"name\": \"Congo\",\r\n    \"Iso\": \"+242\",\r\n    \"countryCode\": \"CG\"\r\n  },\r\n  {\r\n    \"name\": \"Congo, The Democratic Republic of the Congo\",\r\n    \"Iso\": \"+243\",\r\n    \"countryCode\": \"CD\"\r\n  },\r\n  {\r\n    \"name\": \"Cook Islands\",\r\n    \"Iso\": \"+682\",\r\n    \"countryCode\": \"CK\"\r\n  },\r\n  {\r\n    \"name\": \"Costa Rica\",\r\n    \"Iso\": \"+506\",\r\n    \"countryCode\": \"CR\"\r\n  },\r\n  {\r\n    \"name\": \"Cote d'Ivoire\",\r\n    \"Iso\": \"+225\",\r\n    \"countryCode\": \"CI\"\r\n  },\r\n  {\r\n    \"name\": \"Croatia\",\r\n    \"Iso\": \"+385\",\r\n    \"countryCode\": \"HR\"\r\n  },\r\n  {\r\n    \"name\": \"Cuba\",\r\n    \"Iso\": \"+53\",\r\n    \"countryCode\": \"CU\"\r\n  },\r\n  {\r\n    \"name\": \"Cyprus\",\r\n    \"Iso\": \"+357\",\r\n    \"countryCode\": \"CY\"\r\n  },\r\n  {\r\n    \"name\": \"Czech Republic\",\r\n    \"Iso\": \"+420\",\r\n    \"countryCode\": \"CZ\"\r\n  },\r\n  {\r\n    \"name\": \"Denmark\",\r\n    \"Iso\": \"+45\",\r\n    \"countryCode\": \"DK\"\r\n  },\r\n  {\r\n    \"name\": \"Djibouti\",\r\n    \"Iso\": \"+253\",\r\n    \"countryCode\": \"DJ\"\r\n  },\r\n  {\r\n    \"name\": \"Dominica\",\r\n    \"Iso\": \"+1767\",\r\n    \"countryCode\": \"DM\"\r\n  },\r\n  {\r\n    \"name\": \"Dominican Republic\",\r\n    \"Iso\": \"+1849\",\r\n    \"countryCode\": \"DO\"\r\n  },\r\n  {\r\n    \"name\": \"Ecuador\",\r\n    \"Iso\": \"+593\",\r\n    \"countryCode\": \"EC\"\r\n  },\r\n  {\r\n    \"name\": \"Egypt\",\r\n    \"Iso\": \"+20\",\r\n    \"countryCode\": \"EG\"\r\n  },\r\n  {\r\n    \"name\": \"El Salvador\",\r\n    \"Iso\": \"+503\",\r\n    \"countryCode\": \"SV\"\r\n  },\r\n  {\r\n    \"name\": \"Equatorial Guinea\",\r\n    \"Iso\": \"+240\",\r\n    \"countryCode\": \"GQ\"\r\n  },\r\n  {\r\n    \"name\": \"Eritrea\",\r\n    \"Iso\": \"+291\",\r\n    \"countryCode\": \"ER\"\r\n  },\r\n  {\r\n    \"name\": \"Estonia\",\r\n    \"Iso\": \"+372\",\r\n    \"countryCode\": \"EE\"\r\n  },\r\n  {\r\n    \"name\": \"Ethiopia\",\r\n    \"Iso\": \"+251\",\r\n    \"countryCode\": \"ET\"\r\n  },\r\n  {\r\n    \"name\": \"Falkland Islands (Malvinas)\",\r\n    \"Iso\": \"+500\",\r\n    \"countryCode\": \"FK\"\r\n  },\r\n  {\r\n    \"name\": \"Faroe Islands\",\r\n    \"Iso\": \"+298\",\r\n    \"countryCode\": \"FO\"\r\n  },\r\n  {\r\n    \"name\": \"Fiji\",\r\n    \"Iso\": \"+679\",\r\n    \"countryCode\": \"FJ\"\r\n  },\r\n  {\r\n    \"name\": \"Finland\",\r\n    \"Iso\": \"+358\",\r\n    \"countryCode\": \"FI\"\r\n  },\r\n  {\r\n    \"name\": \"France\",\r\n    \"Iso\": \"+33\",\r\n    \"countryCode\": \"FR\"\r\n  },\r\n  {\r\n    \"name\": \"French Guiana\",\r\n    \"Iso\": \"+594\",\r\n    \"countryCode\": \"GF\"\r\n  },\r\n  {\r\n    \"name\": \"French Polynesia\",\r\n    \"Iso\": \"+689\",\r\n    \"countryCode\": \"PF\"\r\n  },\r\n  {\r\n    \"name\": \"French Southern Territories\",\r\n    \"Iso\": \"+262\",\r\n    \"countryCode\": \"TF\"\r\n  },\r\n  {\r\n    \"name\": \"Gabon\",\r\n    \"Iso\": \"+241\",\r\n    \"countryCode\": \"GA\"\r\n  },\r\n  {\r\n    \"name\": \"Gambia\",\r\n    \"Iso\": \"+220\",\r\n    \"countryCode\": \"GM\"\r\n  },\r\n  {\r\n    \"name\": \"Georgia\",\r\n    \"Iso\": \"+995\",\r\n    \"countryCode\": \"GE\"\r\n  },\r\n  {\r\n    \"name\": \"Germany\",\r\n    \"Iso\": \"+49\",\r\n    \"countryCode\": \"DE\"\r\n  },\r\n  {\r\n    \"name\": \"Ghana\",\r\n    \"Iso\": \"+233\",\r\n    \"countryCode\": \"GH\"\r\n  },\r\n  {\r\n    \"name\": \"Gibraltar\",\r\n    \"Iso\": \"+350\",\r\n    \"countryCode\": \"GI\"\r\n  },\r\n  {\r\n    \"name\": \"Greece\",\r\n    \"Iso\": \"+30\",\r\n    \"countryCode\": \"GR\"\r\n  },\r\n  {\r\n    \"name\": \"Greenland\",\r\n    \"Iso\": \"+299\",\r\n    \"countryCode\": \"GL\"\r\n  },\r\n  {\r\n    \"name\": \"Grenada\",\r\n    \"Iso\": \"+1473\",\r\n    \"countryCode\": \"GD\"\r\n  },\r\n  {\r\n    \"name\": \"Guadeloupe\",\r\n    \"Iso\": \"+590\",\r\n    \"countryCode\": \"GP\"\r\n  },\r\n  {\r\n    \"name\": \"Guam\",\r\n    \"Iso\": \"+1671\",\r\n    \"countryCode\": \"GU\"\r\n  },\r\n  {\r\n    \"name\": \"Guatemala\",\r\n    \"Iso\": \"+502\",\r\n    \"countryCode\": \"GT\"\r\n  },\r\n  {\r\n    \"name\": \"Guernsey\",\r\n    \"Iso\": \"+44\",\r\n    \"countryCode\": \"GG\"\r\n  },\r\n  {\r\n    \"name\": \"Guinea\",\r\n    \"Iso\": \"+224\",\r\n    \"countryCode\": \"GN\"\r\n  },\r\n  {\r\n    \"name\": \"Guinea-Bissau\",\r\n    \"Iso\": \"+245\",\r\n    \"countryCode\": \"GW\"\r\n  },\r\n  {\r\n    \"name\": \"Guyana\",\r\n    \"Iso\": \"+592\",\r\n    \"countryCode\": \"GY\"\r\n  },\r\n  {\r\n    \"name\": \"Haiti\",\r\n    \"Iso\": \"+509\",\r\n    \"countryCode\": \"HT\"\r\n  },\r\n  {\r\n    \"name\": \"Heard Island and Mcdonald Islands\",\r\n    \"Iso\": \"+0\",\r\n    \"countryCode\": \"HM\"\r\n  },\r\n  {\r\n    \"name\": \"Holy See (Vatican City State)\",\r\n    \"Iso\": \"+379\",\r\n    \"countryCode\": \"VA\"\r\n  },\r\n  {\r\n    \"name\": \"Honduras\",\r\n    \"Iso\": \"+504\",\r\n    \"countryCode\": \"HN\"\r\n  },\r\n  {\r\n    \"name\": \"Hong Kong\",\r\n    \"Iso\": \"+852\",\r\n    \"countryCode\": \"HK\"\r\n  },\r\n  {\r\n    \"name\": \"Hungary\",\r\n    \"Iso\": \"+36\",\r\n    \"countryCode\": \"HU\"\r\n  },\r\n  {\r\n    \"name\": \"Iceland\",\r\n    \"Iso\": \"+354\",\r\n    \"countryCode\": \"IS\"\r\n  },\r\n  {\r\n    \"name\": \"India\",\r\n    \"Iso\": \"+91\",\r\n    \"countryCode\": \"IN\",\r\n    \"default\" : true\r\n  },\r\n  {\r\n    \"name\": \"Indonesia\",\r\n    \"Iso\": \"+62\",\r\n    \"countryCode\": \"ID\"\r\n  },\r\n  {\r\n    \"name\": \"Iran, Islamic Republic of Persian Gulf\",\r\n    \"Iso\": \"+98\",\r\n    \"countryCode\": \"IR\"\r\n  },\r\n  {\r\n    \"name\": \"Iraq\",\r\n    \"Iso\": \"+964\",\r\n    \"countryCode\": \"IQ\"\r\n  },\r\n  {\r\n    \"name\": \"Ireland\",\r\n    \"Iso\": \"+353\",\r\n    \"countryCode\": \"IE\"\r\n  },\r\n  {\r\n    \"name\": \"Isle of Man\",\r\n    \"Iso\": \"+44\",\r\n    \"countryCode\": \"IM\"\r\n  },\r\n  {\r\n    \"name\": \"Israel\",\r\n    \"Iso\": \"+972\",\r\n    \"countryCode\": \"IL\"\r\n  },\r\n  {\r\n    \"name\": \"Italy\",\r\n    \"Iso\": \"+39\",\r\n    \"countryCode\": \"IT\"\r\n  },\r\n  {\r\n    \"name\": \"Jamaica\",\r\n    \"Iso\": \"+1876\",\r\n    \"countryCode\": \"JM\"\r\n  },\r\n  {\r\n    \"name\": \"Japan\",\r\n    \"Iso\": \"+81\",\r\n    \"countryCode\": \"JP\"\r\n  },\r\n  {\r\n    \"name\": \"Jersey\",\r\n    \"Iso\": \"+44\",\r\n    \"countryCode\": \"JE\"\r\n  },\r\n  {\r\n    \"name\": \"Jordan\",\r\n    \"Iso\": \"+962\",\r\n    \"countryCode\": \"JO\"\r\n  },\r\n  {\r\n    \"name\": \"Kazakhstan\",\r\n    \"Iso\": \"+7\",\r\n    \"countryCode\": \"KZ\"\r\n  },\r\n  {\r\n    \"name\": \"Kenya\",\r\n    \"Iso\": \"+254\",\r\n    \"countryCode\": \"KE\"\r\n  },\r\n  {\r\n    \"name\": \"Kiribati\",\r\n    \"Iso\": \"+686\",\r\n    \"countryCode\": \"KI\"\r\n  },\r\n  {\r\n    \"name\": \"Korea, Democratic People's Republic of Korea\",\r\n    \"Iso\": \"+850\",\r\n    \"countryCode\": \"KP\"\r\n  },\r\n  {\r\n    \"name\": \"Korea, Republic of South Korea\",\r\n    \"Iso\": \"+82\",\r\n    \"countryCode\": \"KR\"\r\n  },\r\n  {\r\n    \"name\": \"Kosovo\",\r\n    \"Iso\": \"+383\",\r\n    \"countryCode\": \"XK\"\r\n  },\r\n  {\r\n    \"name\": \"Kuwait\",\r\n    \"Iso\": \"+965\",\r\n    \"countryCode\": \"KW\"\r\n  },\r\n  {\r\n    \"name\": \"Kyrgyzstan\",\r\n    \"Iso\": \"+996\",\r\n    \"countryCode\": \"KG\"\r\n  },\r\n  {\r\n    \"name\": \"Laos\",\r\n    \"Iso\": \"+856\",\r\n    \"countryCode\": \"LA\"\r\n  },\r\n  {\r\n    \"name\": \"Latvia\",\r\n    \"Iso\": \"+371\",\r\n    \"countryCode\": \"LV\"\r\n  },\r\n  {\r\n    \"name\": \"Lebanon\",\r\n    \"Iso\": \"+961\",\r\n    \"countryCode\": \"LB\"\r\n  },\r\n  {\r\n    \"name\": \"Lesotho\",\r\n    \"Iso\": \"+266\",\r\n    \"countryCode\": \"LS\"\r\n  },\r\n  {\r\n    \"name\": \"Liberia\",\r\n    \"Iso\": \"+231\",\r\n    \"countryCode\": \"LR\"\r\n  },\r\n  {\r\n    \"name\": \"Libyan Arab Jamahiriya\",\r\n    \"Iso\": \"+218\",\r\n    \"countryCode\": \"LY\"\r\n  },\r\n  {\r\n    \"name\": \"Liechtenstein\",\r\n    \"Iso\": \"+423\",\r\n    \"countryCode\": \"LI\"\r\n  },\r\n  {\r\n    \"name\": \"Lithuania\",\r\n    \"Iso\": \"+370\",\r\n    \"countryCode\": \"LT\"\r\n  },\r\n  {\r\n    \"name\": \"Luxembourg\",\r\n    \"Iso\": \"+352\",\r\n    \"countryCode\": \"LU\"\r\n  },\r\n  {\r\n    \"name\": \"Macao\",\r\n    \"Iso\": \"+853\",\r\n    \"countryCode\": \"MO\"\r\n  },\r\n  {\r\n    \"name\": \"Macedonia\",\r\n    \"Iso\": \"+389\",\r\n    \"countryCode\": \"MK\"\r\n  },\r\n  {\r\n    \"name\": \"Madagascar\",\r\n    \"Iso\": \"+261\",\r\n    \"countryCode\": \"MG\"\r\n  },\r\n  {\r\n    \"name\": \"Malawi\",\r\n    \"Iso\": \"+265\",\r\n    \"countryCode\": \"MW\"\r\n  },\r\n  {\r\n    \"name\": \"Malaysia\",\r\n    \"Iso\": \"+60\",\r\n    \"countryCode\": \"MY\"\r\n  },\r\n  {\r\n    \"name\": \"Maldives\",\r\n    \"Iso\": \"+960\",\r\n    \"countryCode\": \"MV\"\r\n  },\r\n  {\r\n    \"name\": \"Mali\",\r\n    \"Iso\": \"+223\",\r\n    \"countryCode\": \"ML\"\r\n  },\r\n  {\r\n    \"name\": \"Malta\",\r\n    \"Iso\": \"+356\",\r\n    \"countryCode\": \"MT\"\r\n  },\r\n  {\r\n    \"name\": \"Marshall Islands\",\r\n    \"Iso\": \"+692\",\r\n    \"countryCode\": \"MH\"\r\n  },\r\n  {\r\n    \"name\": \"Martinique\",\r\n    \"Iso\": \"+596\",\r\n    \"countryCode\": \"MQ\"\r\n  },\r\n  {\r\n    \"name\": \"Mauritania\",\r\n    \"Iso\": \"+222\",\r\n    \"countryCode\": \"MR\"\r\n  },\r\n  {\r\n    \"name\": \"Mauritius\",\r\n    \"Iso\": \"+230\",\r\n    \"countryCode\": \"MU\"\r\n  },\r\n  {\r\n    \"name\": \"Mayotte\",\r\n    \"Iso\": \"+262\",\r\n    \"countryCode\": \"YT\"\r\n  },\r\n  {\r\n    \"name\": \"Mexico\",\r\n    \"Iso\": \"+52\",\r\n    \"countryCode\": \"MX\"\r\n  },\r\n  {\r\n    \"name\": \"Micronesia, Federated States of Micronesia\",\r\n    \"Iso\": \"+691\",\r\n    \"countryCode\": \"FM\"\r\n  },\r\n  {\r\n    \"name\": \"Moldova\",\r\n    \"Iso\": \"+373\",\r\n    \"countryCode\": \"MD\"\r\n  },\r\n  {\r\n    \"name\": \"Monaco\",\r\n    \"Iso\": \"+377\",\r\n    \"countryCode\": \"MC\"\r\n  },\r\n  {\r\n    \"name\": \"Mongolia\",\r\n    \"Iso\": \"+976\",\r\n    \"countryCode\": \"MN\"\r\n  },\r\n  {\r\n    \"name\": \"Montenegro\",\r\n    \"Iso\": \"+382\",\r\n    \"countryCode\": \"ME\"\r\n  },\r\n  {\r\n    \"name\": \"Montserrat\",\r\n    \"Iso\": \"+1664\",\r\n    \"countryCode\": \"MS\"\r\n  },\r\n  {\r\n    \"name\": \"Morocco\",\r\n    \"Iso\": \"+212\",\r\n    \"countryCode\": \"MA\"\r\n  },\r\n  {\r\n    \"name\": \"Mozambique\",\r\n    \"Iso\": \"+258\",\r\n    \"countryCode\": \"MZ\"\r\n  },\r\n  {\r\n    \"name\": \"Myanmar\",\r\n    \"Iso\": \"+95\",\r\n    \"countryCode\": \"MM\"\r\n  },\r\n  {\r\n    \"name\": \"Namibia\",\r\n    \"Iso\": \"+264\",\r\n    \"countryCode\": \"NA\"\r\n  },\r\n  {\r\n    \"name\": \"Nauru\",\r\n    \"Iso\": \"+674\",\r\n    \"countryCode\": \"NR\"\r\n  },\r\n  {\r\n    \"name\": \"Nepal\",\r\n    \"Iso\": \"+977\",\r\n    \"countryCode\": \"NP\"\r\n  },\r\n  {\r\n    \"name\": \"Netherlands\",\r\n    \"Iso\": \"+31\",\r\n    \"countryCode\": \"NL\"\r\n  },\r\n  {\r\n    \"name\": \"Netherlands Antilles\",\r\n    \"Iso\": \"+599\",\r\n    \"countryCode\": \"AN\"\r\n  },\r\n  {\r\n    \"name\": \"New Caledonia\",\r\n    \"Iso\": \"+687\",\r\n    \"countryCode\": \"NC\"\r\n  },\r\n  {\r\n    \"name\": \"New Zealand\",\r\n    \"Iso\": \"+64\",\r\n    \"countryCode\": \"NZ\"\r\n  },\r\n  {\r\n    \"name\": \"Nicaragua\",\r\n    \"Iso\": \"+505\",\r\n    \"countryCode\": \"NI\"\r\n  },\r\n  {\r\n    \"name\": \"Niger\",\r\n    \"Iso\": \"+227\",\r\n    \"countryCode\": \"NE\"\r\n  },\r\n  {\r\n    \"name\": \"Nigeria\",\r\n    \"Iso\": \"+234\",\r\n    \"countryCode\": \"NG\"\r\n  },\r\n  {\r\n    \"name\": \"Niue\",\r\n    \"Iso\": \"+683\",\r\n    \"countryCode\": \"NU\"\r\n  },\r\n  {\r\n    \"name\": \"Norfolk Island\",\r\n    \"Iso\": \"+672\",\r\n    \"countryCode\": \"NF\"\r\n  },\r\n  {\r\n    \"name\": \"Northern Mariana Islands\",\r\n    \"Iso\": \"+1670\",\r\n    \"countryCode\": \"MP\"\r\n  },\r\n  {\r\n    \"name\": \"Norway\",\r\n    \"Iso\": \"+47\",\r\n    \"countryCode\": \"NO\"\r\n  },\r\n  {\r\n    \"name\": \"Oman\",\r\n    \"Iso\": \"+968\",\r\n    \"countryCode\": \"OM\"\r\n  },\r\n  {\r\n    \"name\": \"Pakistan\",\r\n    \"Iso\": \"+92\",\r\n    \"countryCode\": \"PK\"\r\n  },\r\n  {\r\n    \"name\": \"Palau\",\r\n    \"Iso\": \"+680\",\r\n    \"countryCode\": \"PW\"\r\n  },\r\n  {\r\n    \"name\": \"Palestinian Territory, Occupied\",\r\n    \"Iso\": \"+970\",\r\n    \"countryCode\": \"PS\"\r\n  },\r\n  {\r\n    \"name\": \"Panama\",\r\n    \"Iso\": \"+507\",\r\n    \"countryCode\": \"PA\"\r\n  },\r\n  {\r\n    \"name\": \"Papua New Guinea\",\r\n    \"Iso\": \"+675\",\r\n    \"countryCode\": \"PG\"\r\n  },\r\n  {\r\n    \"name\": \"Paraguay\",\r\n    \"Iso\": \"+595\",\r\n    \"countryCode\": \"PY\"\r\n  },\r\n  {\r\n    \"name\": \"Peru\",\r\n    \"Iso\": \"+51\",\r\n    \"countryCode\": \"PE\"\r\n  },\r\n  {\r\n    \"name\": \"Philippines\",\r\n    \"Iso\": \"+63\",\r\n    \"countryCode\": \"PH\"\r\n  },\r\n  {\r\n    \"name\": \"Pitcairn\",\r\n    \"Iso\": \"+64\",\r\n    \"countryCode\": \"PN\"\r\n  },\r\n  {\r\n    \"name\": \"Poland\",\r\n    \"Iso\": \"+48\",\r\n    \"countryCode\": \"PL\"\r\n  },\r\n  {\r\n    \"name\": \"Portugal\",\r\n    \"Iso\": \"+351\",\r\n    \"countryCode\": \"PT\"\r\n  },\r\n  {\r\n    \"name\": \"Puerto Rico\",\r\n    \"Iso\": \"+1939\",\r\n    \"countryCode\": \"PR\"\r\n  },\r\n  {\r\n    \"name\": \"Qatar\",\r\n    \"Iso\": \"+974\",\r\n    \"countryCode\": \"QA\"\r\n  },\r\n  {\r\n    \"name\": \"Romania\",\r\n    \"Iso\": \"+40\",\r\n    \"countryCode\": \"RO\"\r\n  },\r\n  {\r\n    \"name\": \"Russia\",\r\n    \"Iso\": \"+7\",\r\n    \"countryCode\": \"RU\"\r\n  },\r\n  {\r\n    \"name\": \"Rwanda\",\r\n    \"Iso\": \"+250\",\r\n    \"countryCode\": \"RW\"\r\n  },\r\n  {\r\n    \"name\": \"Reunion\",\r\n    \"Iso\": \"+262\",\r\n    \"countryCode\": \"RE\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Barthelemy\",\r\n    \"Iso\": \"+590\",\r\n    \"countryCode\": \"BL\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Helena, Ascension and Tristan Da Cunha\",\r\n    \"Iso\": \"+290\",\r\n    \"countryCode\": \"SH\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Kitts and Nevis\",\r\n    \"Iso\": \"+1869\",\r\n    \"countryCode\": \"KN\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Lucia\",\r\n    \"Iso\": \"+1758\",\r\n    \"countryCode\": \"LC\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Martin\",\r\n    \"Iso\": \"+590\",\r\n    \"countryCode\": \"MF\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Pierre and Miquelon\",\r\n    \"Iso\": \"+508\",\r\n    \"countryCode\": \"PM\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Vincent and the Grenadines\",\r\n    \"Iso\": \"+1784\",\r\n    \"countryCode\": \"VC\"\r\n  },\r\n  {\r\n    \"name\": \"Samoa\",\r\n    \"Iso\": \"+685\",\r\n    \"countryCode\": \"WS\"\r\n  },\r\n  {\r\n    \"name\": \"San Marino\",\r\n    \"Iso\": \"+378\",\r\n    \"countryCode\": \"SM\"\r\n  },\r\n  {\r\n    \"name\": \"Sao Tome and Principe\",\r\n    \"Iso\": \"+239\",\r\n    \"countryCode\": \"ST\"\r\n  },\r\n  {\r\n    \"name\": \"Saudi Arabia\",\r\n    \"Iso\": \"+966\",\r\n    \"countryCode\": \"SA\"\r\n  },\r\n  {\r\n    \"name\": \"Senegal\",\r\n    \"Iso\": \"+221\",\r\n    \"countryCode\": \"SN\"\r\n  },\r\n  {\r\n    \"name\": \"Serbia\",\r\n    \"Iso\": \"+381\",\r\n    \"countryCode\": \"RS\"\r\n  },\r\n  {\r\n    \"name\": \"Seychelles\",\r\n    \"Iso\": \"+248\",\r\n    \"countryCode\": \"SC\"\r\n  },\r\n  {\r\n    \"name\": \"Sierra Leone\",\r\n    \"Iso\": \"+232\",\r\n    \"countryCode\": \"SL\"\r\n  },\r\n  {\r\n    \"name\": \"Singapore\",\r\n    \"Iso\": \"+65\",\r\n    \"countryCode\": \"SG\"\r\n  },\r\n  {\r\n    \"name\": \"Slovakia\",\r\n    \"Iso\": \"+421\",\r\n    \"countryCode\": \"SK\"\r\n  },\r\n  {\r\n    \"name\": \"Slovenia\",\r\n    \"Iso\": \"+386\",\r\n    \"countryCode\": \"SI\"\r\n  },\r\n  {\r\n    \"name\": \"Solomon Islands\",\r\n    \"Iso\": \"+677\",\r\n    \"countryCode\": \"SB\"\r\n  },\r\n  {\r\n    \"name\": \"Somalia\",\r\n    \"Iso\": \"+252\",\r\n    \"countryCode\": \"SO\"\r\n  },\r\n  {\r\n    \"name\": \"South Africa\",\r\n    \"Iso\": \"+27\",\r\n    \"countryCode\": \"ZA\"\r\n  },\r\n  {\r\n    \"name\": \"South Sudan\",\r\n    \"Iso\": \"+211\",\r\n    \"countryCode\": \"SS\"\r\n  },\r\n  {\r\n    \"name\": \"South Georgia and the South Sandwich Islands\",\r\n    \"Iso\": \"+500\",\r\n    \"countryCode\": \"GS\"\r\n  },\r\n  {\r\n    \"name\": \"Spain\",\r\n    \"Iso\": \"+34\",\r\n    \"countryCode\": \"ES\"\r\n  },\r\n  {\r\n    \"name\": \"Sri Lanka\",\r\n    \"Iso\": \"+94\",\r\n    \"countryCode\": \"LK\"\r\n  },\r\n  {\r\n    \"name\": \"Sudan\",\r\n    \"Iso\": \"+249\",\r\n    \"countryCode\": \"SD\"\r\n  },\r\n  {\r\n    \"name\": \"Suriname\",\r\n    \"Iso\": \"+597\",\r\n    \"countryCode\": \"SR\"\r\n  },\r\n  {\r\n    \"name\": \"Svalbard and Jan Mayen\",\r\n    \"Iso\": \"+47\",\r\n    \"countryCode\": \"SJ\"\r\n  },\r\n  {\r\n    \"name\": \"Swaziland\",\r\n    \"Iso\": \"+268\",\r\n    \"countryCode\": \"SZ\"\r\n  },\r\n  {\r\n    \"name\": \"Sweden\",\r\n    \"Iso\": \"+46\",\r\n    \"countryCode\": \"SE\"\r\n  },\r\n  {\r\n    \"name\": \"Switzerland\",\r\n    \"Iso\": \"+41\",\r\n    \"countryCode\": \"CH\"\r\n  },\r\n  {\r\n    \"name\": \"Syrian Arab Republic\",\r\n    \"Iso\": \"+963\",\r\n    \"countryCode\": \"SY\"\r\n  },\r\n  {\r\n    \"name\": \"Taiwan\",\r\n    \"Iso\": \"+886\",\r\n    \"countryCode\": \"TW\"\r\n  },\r\n  {\r\n    \"name\": \"Tajikistan\",\r\n    \"Iso\": \"+992\",\r\n    \"countryCode\": \"TJ\"\r\n  },\r\n  {\r\n    \"name\": \"Tanzania, United Republic of Tanzania\",\r\n    \"Iso\": \"+255\",\r\n    \"countryCode\": \"TZ\"\r\n  },\r\n  {\r\n    \"name\": \"Thailand\",\r\n    \"Iso\": \"+66\",\r\n    \"countryCode\": \"TH\"\r\n  },\r\n  {\r\n    \"name\": \"Timor-Leste\",\r\n    \"Iso\": \"+670\",\r\n    \"countryCode\": \"TL\"\r\n  },\r\n  {\r\n    \"name\": \"Togo\",\r\n    \"Iso\": \"+228\",\r\n    \"countryCode\": \"TG\"\r\n  },\r\n  {\r\n    \"name\": \"Tokelau\",\r\n    \"Iso\": \"+690\",\r\n    \"countryCode\": \"TK\"\r\n  },\r\n  {\r\n    \"name\": \"Tonga\",\r\n    \"Iso\": \"+676\",\r\n    \"countryCode\": \"TO\"\r\n  },\r\n  {\r\n    \"name\": \"Trinidad and Tobago\",\r\n    \"Iso\": \"+1868\",\r\n    \"countryCode\": \"TT\"\r\n  },\r\n  {\r\n    \"name\": \"Tunisia\",\r\n    \"Iso\": \"+216\",\r\n    \"countryCode\": \"TN\"\r\n  },\r\n  {\r\n    \"name\": \"Turkey\",\r\n    \"Iso\": \"+90\",\r\n    \"countryCode\": \"TR\"\r\n  },\r\n  {\r\n    \"name\": \"Turkmenistan\",\r\n    \"Iso\": \"+993\",\r\n    \"countryCode\": \"TM\"\r\n  },\r\n  {\r\n    \"name\": \"Turks and Caicos Islands\",\r\n    \"Iso\": \"+1649\",\r\n    \"countryCode\": \"TC\"\r\n  },\r\n  {\r\n    \"name\": \"Tuvalu\",\r\n    \"Iso\": \"+688\",\r\n    \"countryCode\": \"TV\"\r\n  },\r\n  {\r\n    \"name\": \"Uganda\",\r\n    \"Iso\": \"+256\",\r\n    \"countryCode\": \"UG\"\r\n  },\r\n  {\r\n    \"name\": \"Ukraine\",\r\n    \"Iso\": \"+380\",\r\n    \"countryCode\": \"UA\"\r\n  },\r\n  {\r\n    \"name\": \"United Arab Emirates\",\r\n    \"Iso\": \"+971\",\r\n    \"countryCode\": \"AE\"\r\n  },\r\n  {\r\n    \"name\": \"United Kingdom\",\r\n    \"Iso\": \"+44\",\r\n    \"countryCode\": \"GB\"\r\n  },\r\n  {\r\n    \"name\": \"United States\",\r\n    \"Iso\": \"+1\",\r\n    \"countryCode\": \"US\"\r\n  },\r\n  {\r\n    \"name\": \"Uruguay\",\r\n    \"Iso\": \"+598\",\r\n    \"countryCode\": \"UY\"\r\n  },\r\n  {\r\n    \"name\": \"Uzbekistan\",\r\n    \"Iso\": \"+998\",\r\n    \"countryCode\": \"UZ\"\r\n  },\r\n  {\r\n    \"name\": \"Vanuatu\",\r\n    \"Iso\": \"+678\",\r\n    \"countryCode\": \"VU\"\r\n  },\r\n  {\r\n    \"name\": \"Venezuela, Bolivarian Republic of Venezuela\",\r\n    \"Iso\": \"+58\",\r\n    \"countryCode\": \"VE\"\r\n  },\r\n  {\r\n    \"name\": \"Vietnam\",\r\n    \"Iso\": \"+84\",\r\n    \"countryCode\": \"VN\"\r\n  },\r\n  {\r\n    \"name\": \"Virgin Islands, British\",\r\n    \"Iso\": \"+1284\",\r\n    \"countryCode\": \"VG\"\r\n  },\r\n  {\r\n    \"name\": \"Virgin Islands, U.S.\",\r\n    \"Iso\": \"+1340\",\r\n    \"countryCode\": \"VI\"\r\n  },\r\n  {\r\n    \"name\": \"Wallis and Futuna\",\r\n    \"Iso\": \"+681\",\r\n    \"countryCode\": \"WF\"\r\n  },\r\n  {\r\n    \"name\": \"Yemen\",\r\n    \"Iso\": \"+967\",\r\n    \"countryCode\": \"YE\"\r\n  },\r\n  {\r\n    \"name\": \"Zambia\",\r\n    \"Iso\": \"+260\",\r\n    \"countryCode\": \"ZM\"\r\n  },\r\n  {\r\n    \"name\": \"Zimbabwe\",\r\n    \"Iso\": \"+263\",\r\n    \"countryCode\": \"ZW\"\r\n  }\r\n]\r\n\r\nexport {\r\n  CountryCodes\r\n}","enum SubProducts {\r\n  ORDERS= 1,\r\n  COLOUR= 2,\r\n  SIZE = 3,\r\n  SUB_PRODUCT = 4,\r\n  PRODUCT = 5,\r\n  COUPONS = 6,\r\n  USERS = 7,\r\n  SHIPPER = 8 \r\n}\r\n\r\nconst SubCategories: Record<string, number> = {\r\n  'Lingerie': 1,\r\n  'Footwear': 2,\r\n  'Bindi': 3,\r\n  'Home Essential': 4\r\n}\r\n\r\n/**\r\n * Allow return for \r\n * Footwear and HomeDecore\r\n */\r\nconst AllowReturn = ['2','3'];\r\n\r\nexport {\r\n  SubProducts,\r\n  SubCategories,\r\n  AllowReturn\r\n}","import { Action, Dispatch } from 'redux';\r\n\r\nimport { User } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n/* Interface */\r\nexport interface UserInformationAction extends Action {\r\n  readonly data?: User;\r\n  readonly allUsers?: User[];\r\n  readonly message?: string;\r\n};\r\n\r\n\r\nexport interface UserInformation {\r\n  readonly data?: User;\r\n  readonly allUsers?: User[];\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n};\r\n\r\n\r\n/* Initial State */\r\nconst initialState  = {\r\n  data: {\r\n    isAdmin: false,\r\n  },\r\n  allUsers :[],\r\n  _isError: false,\r\n  _isLoading: false,\r\n  _isSuccess: false,\r\n  message: ''\r\n} as UserInformation;\r\n\r\n\r\n/* Actions*/\r\n\r\nenum Actions {\r\n  SET_USER = \"SET_USER\",\r\n  LOADING_USER = \"LOADING_USER\",\r\n  ERROR_USER = \"ERROR_USER\",\r\n  SET_ALL_USER = 'SET_ALL_USER',\r\n  UPDATE_USER_DISCOUNT = 'UPDATE_USER_DISCOUNT',\r\n  DEFAULT_USER = 'DEFAULT_USER'\r\n}\r\n\r\nconst setUser = (user: User,message?: string) => ({\r\n  type: Actions.SET_USER,\r\n  data: user,\r\n  message\r\n});\r\n\r\nconst setAllUser = (user: User[]) => ({\r\n  type: Actions.SET_ALL_USER,\r\n  allUsers: user\r\n});\r\n\r\nconst loadingUser = () => ({\r\n  type: Actions.LOADING_USER\r\n});\r\n\r\nconst defaultUser = () => ({\r\n  type: Actions.DEFAULT_USER\r\n});\r\n\r\nconst errorUser = (message: string) => ({\r\n  type: Actions.ERROR_USER,\r\n  message\r\n});\r\n\r\nconst updateDiscount = (emailAddress:string, discount: string, message: string) => ({\r\n  type: Actions.UPDATE_USER_DISCOUNT,\r\n  data: {emailAddress, discount},\r\n  message\r\n});\r\n\r\n\r\n/* Reducer */\r\n\r\nconst userInformationReducer = (state = initialState, action: UserInformationAction): UserInformation => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_USER:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      };\r\n    case Actions.SET_USER:\r\n      return {\r\n        ...state,\r\n        data : action.data,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: true,\r\n        message: action.message\r\n      };\r\n    case Actions.DEFAULT_USER:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      };\r\n    case Actions.SET_ALL_USER:\r\n      return {\r\n        ...state,\r\n        allUsers : action.allUsers,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: true,\r\n        message: action.message\r\n      };\r\n    case Actions.UPDATE_USER_DISCOUNT:\r\n      return {\r\n        ...state,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: true,\r\n        message: action.message,\r\n        allUsers : state.allUsers?.map((user) => {\r\n          if(user.emailAddress?.toLowerCase() === action.data?.emailAddress){\r\n            return {...user, discount:action.data?.discount}\r\n          }\r\n          return user\r\n        }),\r\n      };\r\n    case Actions.ERROR_USER:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        message: action.message\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/* Thunk */\r\n\r\nconst getUser = () =>  async (disptach: Dispatch<UserInformationAction>) => {\r\n  disptach(loadingUser());\r\n  \r\n  const response =  await api.get('/userinfo');\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(setUser(response.data.data as User));\r\n  } else {\r\n    disptach(errorUser('Some error occured, try again.'));\r\n  }\r\n};\r\n\r\nconst saveUser = (data: User) =>  async (disptach: Dispatch<UserInformationAction>) => {\r\n  disptach(loadingUser());\r\n  \r\n  const response =  await api.post('/userinfo', data);\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data.data as User;\r\n    disptach(setUser({\r\n      ...data,\r\n      addressId : res\r\n    } as User, response.data.message));\r\n  } else {\r\n    disptach(errorUser('Some error occured, try again.'));\r\n  }\r\n};\r\n\r\nconst getAllUser = () =>  async (disptach: Dispatch<UserInformationAction>) => {\r\n  disptach(loadingUser());\r\n  \r\n  const response =  await api.get('/alluserinformation');\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(setAllUser(response.data.data as User[]));\r\n  } else {\r\n    disptach(errorUser('Some error occured, try again.'));\r\n  }\r\n};\r\n\r\nconst updateUserDiscount = (discount: string, email: string) =>  async (disptach: Dispatch<UserInformationAction>) => {\r\n  disptach(loadingUser());\r\n  \r\n  const response =  await api.post('/userdiscount', {\r\n    email,\r\n    discount\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(updateDiscount(email,discount, 'Discount Updated'));\r\n  } else {\r\n    disptach(errorUser('Some error occured, try again.'));\r\n  }\r\n};\r\n\r\nexport {\r\n  userInformationReducer,\r\n  getUser,\r\n  saveUser,\r\n  getAllUser,\r\n  setUser,\r\n  updateUserDiscount,\r\n  defaultUser\r\n};\r\n","const apiServerHost = 'https://api.basickart.com/';\r\n\r\nconst serverImagePath = apiServerHost + 'images/'\r\n\r\nexport {\r\n  apiServerHost,\r\n  serverImagePath\r\n}","import axios from 'axios';\r\n\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://basickart.com/v1',\r\n  headers: {\r\n    'Accept': 'application/json;charset=UTF-8',\r\n    'Authorization': ''\r\n  }\r\n});","import{ AxiosRequestConfig } from 'axios';\r\n\r\nimport { HttpRequest } from 'appConstants';\r\nimport axios from './axiosBase';\r\n\r\nconst setAuthToken = (): void => {\r\n  axios.defaults.headers['Authorization'] = 'Bearer ' + window.localStorage.getItem('biktoken');\r\n};\r\n\r\nconst api = {\r\n  get: (url: string) => {\r\n    return makeRequest({\r\n      method: HttpRequest.GET,\r\n      url\r\n    })\r\n  },\r\n\r\n  post: (url: string, data: object) => {\r\n    return makeRequest({\r\n      method: HttpRequest.POST,\r\n      url,\r\n      data\r\n    })\r\n  }\r\n};\r\n\r\nconst makeRequest = async (config: AxiosRequestConfig) => {\r\n  try {\r\n    setAuthToken();\r\n    const response = await axios.request(config);\r\n    return response;\r\n  } catch (error) {\r\n    if(error.response.status === 401 || error.response.status === 422 || error.response.status === 404){\r\n      window.localStorage.removeItem('biktoken')\r\n      window.location.href = '/login';\r\n      return {\r\n        message: error.response.data.message || 'Auth expired',\r\n        data: {}\r\n      }\r\n    }else {\r\n      return {\r\n        message: error.response.data.message || 'Default Api error',\r\n        status: error.response.status || 400,\r\n        data: {}\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport { api, setAuthToken };","import { ProductSubCategory, ActiveProductCount, ProductSubcategoryProperty, ProductItem, OrderItems } from \"types\";\r\nimport { SubCategory, Size } from \"reducers\";\r\n\r\nconst getSubCategoryFromId = (id: Number) => {\r\n  switch (id) {\r\n    case 1:\r\n      return \"Lingerie\";\r\n    case 2:\r\n      return \"Footwear\";\r\n    case 3:\r\n      return \"Bindi\";\r\n    case 4:\r\n      return \"Handicraft\";\r\n  }\r\n};\r\n\r\nconst filterSubcategories = (subCategories: SubCategory, categoryId = 0) => {\r\n  return (subCategories.data &&\r\n    subCategories.data.filter((subCategory) => {\r\n      return subCategory.productCategoryId === Number(categoryId)\r\n    })) || [];\r\n};\r\n\r\nconst filterSize = (sizes: Size, categoryId: number[]) => {\r\n  return (sizes.data &&\r\n    sizes.data.filter((size) => {\r\n      return  categoryId.indexOf((size.productCategory || 0)) > -1\r\n    })) || [];\r\n};\r\n\r\nconst calculateUserDiscount = (discount: string, price: string) => {\r\n  return Math.ceil(Number(price) - (Number(price) * (Number(discount) / 100))).toString();\r\n};\r\n\r\nconst calculateUserDiscountPrice = (discount: string, price: string) => {\r\n  return Math.ceil(Number(price) * (Number(discount)) / 100).toString();\r\n};\r\n\r\nconst getCurrencyIcon = (currency: string) => {\r\n  return currency === 'IN' ? '₹' : '$'\r\n};\r\n\r\nconst showINRUSD = (userLocation: string, price : {priceINR: string, priceUSD: string}) => {\r\n  return userLocation === 'IN' ? price.priceINR : price.priceUSD;\r\n}\r\n\r\nconst createProductCountList = (activeProducts: ActiveProductCount[]) => {\r\n  let productCountList = {} as ProductSubcategoryProperty;\r\n  activeProducts.forEach((product: ActiveProductCount) => {\r\n    if(!productCountList[product.subcategoryId]) {\r\n      productCountList[product.subcategoryId] = {\r\n        name: product.subcategoryName,\r\n        [product.colourId] : {\r\n          name: product.colourName,\r\n          [product.sizeId] : {\r\n            name: product.sizeName,\r\n            quantity: 1\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      if(!productCountList[product.subcategoryId][product.colourId]) {\r\n        productCountList[product.subcategoryId][product.colourId] = {\r\n          name: product.colourName,\r\n          [product.sizeId] : {\r\n            name: product.sizeName,\r\n            quantity: 1\r\n          }\r\n        }\r\n      } else {\r\n        productCountList[product.subcategoryId][product.colourId][product.sizeId] = {\r\n          name: product.sizeName,\r\n          quantity: 1\r\n        }\r\n      }\r\n    }\r\n  });\r\n  console.log(productCountList)\r\n  return productCountList;\r\n};\r\n\r\nconst countHighlightProducts = (products: ProductItem[], isTrending: boolean) => {\r\n  if(isTrending){\r\n    return products.filter(({trending}) => trending).length;\r\n  } else {\r\n    return products.filter(({latest}) => latest).length;\r\n  }\r\n  \r\n};\r\n\r\nconst getIconForAdminOrder = (orderItems: OrderItems[]) => {\r\n  const orderLength = orderItems.length;\r\n  let icon = '';\r\n  for(var i = 0 ; i< orderLength; i++){\r\n    const shipmentDetails = orderItems[i].shipmentDetails;\r\n    if(shipmentDetails){\r\n      if(shipmentDetails.paymentReturned && shipmentDetails.paymentReturned.toLowerCase() === 'yes'){\r\n        icon = 'lifesaver';\r\n        break;\r\n      } else if(shipmentDetails.paymentReturned && shipmentDetails.paymentReturned.toLowerCase() === 'no'){\r\n        icon = 'warning';\r\n        break;\r\n      } else if(shipmentDetails.returnStatus && shipmentDetails.returnStatus.toLowerCase() === 'in progress'){\r\n        icon = 'history';\r\n        break;\r\n      } else if(shipmentDetails.returnStatus && shipmentDetails.returnStatus.toLowerCase() === 'accepted'){\r\n        icon = 'plus-circle';\r\n        break;\r\n      } else if(shipmentDetails.returnStatus && shipmentDetails.returnStatus.toLowerCase() === 'declined'){\r\n        icon = 'minus-circle';\r\n        break;\r\n      } else if(shipmentDetails.shipper){\r\n        icon = 'cart';\r\n        break;\r\n      } else if(shipmentDetails.deliveryDate){\r\n        icon = 'check';\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return icon;\r\n};\r\n\r\nconst getPaypalTransactionId = (payaplResponse: any) =>{\r\n  let transactionId = '';\r\n  if(payaplResponse.paymentData){\r\n    if(payaplResponse.paymentData.purchase_units){\r\n      if(payaplResponse.paymentData.purchase_units[0]){\r\n        if(payaplResponse.paymentData.purchase_units[0].payments){\r\n          if(payaplResponse.paymentData.purchase_units[0].payments.captures){\r\n            if(payaplResponse.paymentData.purchase_units[0].payments.captures[0]){\r\n              if(payaplResponse.paymentData.purchase_units[0].payments.captures[0].id){\r\n                transactionId = payaplResponse.paymentData.purchase_units[0].payments.captures[0].id;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return transactionId;\r\n}\r\n\r\nexport {\r\n  getSubCategoryFromId,\r\n  filterSubcategories,\r\n  filterSize,\r\n  calculateUserDiscount,\r\n  getCurrencyIcon,\r\n  calculateUserDiscountPrice,\r\n  createProductCountList,\r\n  showINRUSD,\r\n  countHighlightProducts,\r\n  getIconForAdminOrder,\r\n  getPaypalTransactionId\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { Login } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\ninterface UserLoginRegisterAction extends Action {\r\n  data?: string;\r\n}\r\n\r\ninterface UserLoginResponse {\r\n  message: string;\r\n  access_token?: string;\r\n};\r\n\r\nexport interface UserLoginRegister {\r\n  _isLoading: boolean;\r\n  _isError: boolean;\r\n  _isSuccess: boolean;\r\n  message?: string;\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading : false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: ''\r\n} as UserLoginRegister;\r\n\r\nenum Actions {\r\n  LOADING_LOGIN = 'LOADING_LOGIN',\r\n  ERROR_LOGIN = 'ERROR_LOGIN',\r\n  SUCCESS_LOGIN = 'SUCCESS_LOGIN',\r\n  LOADING_REGISTER = 'LOADING_REGISTER',\r\n  ERROR_REGISTER = 'ERROR_REGISTER',\r\n  SUCCESS_REGISTER = 'SUCCESS_REGISTER',\r\n  DEFAULT_STATE = 'DEFAULT_STATE'\r\n};\r\n\r\nconst loadingLogin = () => ({\r\n  type : Actions.LOADING_LOGIN\r\n});\r\n\r\nconst errorLogin = (message: string) => ({\r\n  type : Actions.ERROR_LOGIN,\r\n  data: message\r\n});\r\n\r\nconst successLogin = () => ({\r\n  type : Actions.SUCCESS_LOGIN\r\n});\r\n\r\nconst loadingRegister = () => ({\r\n  type : Actions.LOADING_REGISTER\r\n});\r\n\r\nconst errorRegister = (message: string) => ({\r\n  type : Actions.ERROR_REGISTER,\r\n  data: message\r\n});\r\n\r\nconst successRegister = (message: string) => ({\r\n  type : Actions.SUCCESS_REGISTER,\r\n  data: message\r\n});\r\n\r\nconst defaultLoginRegister = () => ({\r\n  type: Actions.DEFAULT_STATE\r\n})\r\n\r\n\r\nconst userLoginReducer = (state = initialState, action: UserLoginRegisterAction): UserLoginRegister  => {\r\n  \r\n  switch (action.type) {\r\n    case Actions.LOADING_LOGIN:\r\n    case Actions.LOADING_REGISTER:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      };\r\n    case Actions.ERROR_LOGIN:\r\n    case Actions.ERROR_REGISTER:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        message: action.data\r\n      };\r\n    case Actions.SUCCESS_LOGIN:\r\n    case Actions.SUCCESS_REGISTER:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess: true,\r\n        message: action.data\r\n      };\r\n    case Actions.DEFAULT_STATE:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nconst userLogin = (loginData: Login) =>  async (dispatch: Dispatch<Action>) => {\r\n  \r\n  dispatch(loadingLogin());\r\n  const response =  await api.post('/login', loginData);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as UserLoginResponse;\r\n    window.localStorage.setItem('biktoken', res.access_token || '');\r\n    dispatch(successLogin());\r\n  } else{\r\n    const res = response as UserLoginResponse;\r\n    dispatch(errorLogin(res.message));\r\n  }\r\n};\r\n\r\nconst userRegister = (registerationData: Login) => async (dispatch: Dispatch<Action>) => {\r\n  dispatch(loadingRegister());\r\n  const response = await api.post('/registration', registerationData);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as UserLoginResponse;\r\n    dispatch(successRegister(res.message));\r\n  } else{\r\n    const res = response as UserLoginResponse;\r\n    dispatch(errorRegister(res.message));\r\n  }\r\n}\r\n\r\nconst forgetPassword = (loginDetails: Login) => async (dispatch: Dispatch<Action>) => {\r\n  dispatch(loadingRegister());\r\n  const response = await api.post('/forgetpassword', loginDetails);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as UserLoginResponse;\r\n    dispatch(successRegister(res.message));\r\n  } else{\r\n    const res = response as UserLoginResponse;\r\n    dispatch(errorRegister(res.message));\r\n  }\r\n}\r\n\r\n\r\nexport {\r\n  userLogin,\r\n  userLoginReducer,\r\n  loadingLogin,\r\n  loadingRegister,\r\n  errorLogin,\r\n  errorRegister,\r\n  successLogin,\r\n  successRegister,\r\n  defaultLoginRegister,\r\n  userRegister,\r\n  forgetPassword\r\n}","import {Action, Dispatch} from 'redux';\r\n\r\nimport { UserSettings } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n/* Interface*/\r\nexport interface UserSettingsAction extends Action {\r\n  readonly data?: UserSettings;\r\n  readonly message?: string;\r\n}\r\n\r\nexport interface UserSetting {\r\n  readonly data?: UserSettings;\r\n  _isLoading: boolean;\r\n  _isError: boolean;\r\n  _isSuccess: boolean;\r\n  message?: string;\r\n}\r\n\r\nconst initialState = {\r\n  data : {\r\n    emailAddress : '',\r\n  },\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n} as UserSetting\r\n\r\n/* Actions */\r\n\r\nenum Actions {\r\n  SET_USER_SETTINGS = \"SET_USER_SETTINGS\",\r\n  LOADING_USER_SETTINGS = \"LOADING_USER_SETTINGS\",\r\n  ERROR_USER_SETTINGS = \"ERROR_USER_SETTINGS\"\r\n}\r\n\r\nconst setUserSetting = (userSettings: UserSettings, message?: string) => ({\r\n  type: Actions.SET_USER_SETTINGS,\r\n  data: userSettings,\r\n  message\r\n});\r\n\r\nconst loadingUserSettings = () => ({\r\n  type: Actions.LOADING_USER_SETTINGS\r\n});\r\n\r\nconst errorUserSettings = (message?: string) => ({\r\n  type: Actions.ERROR_USER_SETTINGS,\r\n  message\r\n});\r\n\r\nconst userSettingsReducer = (state = initialState, action: UserSettingsAction) => {\r\n  switch(action.type) {\r\n    case Actions.SET_USER_SETTINGS:\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess: true,\r\n        message: action.message\r\n      };\r\n    case Actions.LOADING_USER_SETTINGS:\r\n      return{\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false,\r\n      };\r\n    case Actions.ERROR_USER_SETTINGS:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        message: action.message\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n/* Thunk */\r\n\r\nconst getUserSettings = () => async (disptach: Dispatch<UserSettingsAction>) => {\r\n  disptach(loadingUserSettings());\r\n  \r\n  const response =  await api.get('/passwordchange');\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(setUserSetting(response.data.data as UserSettings));\r\n  } else {\r\n    disptach(errorUserSettings(response.data.message|| ''));\r\n  }\r\n};\r\n\r\n\r\nconst saveUserSettings = (data: UserSettings) => async (disptach: Dispatch<UserSettingsAction>) => {\r\n  disptach(loadingUserSettings());\r\n  \r\n  const response =  await api.post('/passwordchange', data);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(setUserSetting({emailAddress : data.emailAddress, currentPassword: '', newPassword: ''} as UserSettings,response.data.message|| ''));\r\n  } else {\r\n    disptach(errorUserSettings((response as any).message|| ''));\r\n  }\r\n};\r\n\r\nexport {\r\n  userSettingsReducer,\r\n  getUserSettings,\r\n  saveUserSettings\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { ProductColor } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface ColourAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductColor[]\r\n}\r\n\r\nexport interface ColourResponse {\r\n  message?: string\r\n  data?: ProductColor[]\r\n}\r\n\r\nexport interface Colour {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductColor[];\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n  data: {}\r\n} as Colour;\r\n\r\nenum Actions {\r\n  LOADING_COLOUR = 'LOADING_COLOUR',\r\n  ERROR_COLOUR = 'ERROR_COLOUR',\r\n  SUCCESS_COLOUR = 'SUCCESS_COLOUR',\r\n  DEFAULT_COLOUR = 'DEFAULT_COLOUR',\r\n  SET_COLOUR = 'SET_COLOUR',\r\n  UPDATE_COLOUR_SUCCESS = 'UPDATE_COLOUR_SUCCESS'\r\n};\r\n\r\nconst loadingColour = () => ({\r\n  type: Actions.LOADING_COLOUR\r\n});\r\n\r\nconst successColour = (message: string) => ({\r\n  type: Actions.SUCCESS_COLOUR,\r\n  message\r\n});\r\n\r\nconst errorColour = (message: string) => ({\r\n  type: Actions.ERROR_COLOUR,\r\n  message\r\n});\r\n\r\nconst defaultColour = () => ({\r\n  type: Actions.DEFAULT_COLOUR\r\n});\r\n\r\nconst setColour = (data: ProductColor[]) => ({\r\n  type: Actions.SET_COLOUR,\r\n  data\r\n});\r\n\r\nconst updateColourSuccess = (data: ProductColor[], message: string) => ({\r\n  type: Actions.UPDATE_COLOUR_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst colourReducer = (state = initialState, action: ColourAction): Colour => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_COLOUR:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_COLOUR:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_COLOUR:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_COLOUR:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_COLOUR_SUCCESS:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.colourId != updatedValue[0].colourId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue\r\n        ]\r\n      }\r\n    case Actions.DEFAULT_COLOUR:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst saveColour = (colour: ProductColor) => async (dispatch: Dispatch<ColourAction>) => {\r\n  dispatch(loadingColour());\r\n  const response = await api.post('/productcolour',\r\n    {\r\n      product_color_code: colour.code,\r\n      product_color: colour.value,\r\n      colour_id: 0\r\n    });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ColourResponse\r\n    dispatch(successColour(res.message || ''));\r\n  } else {\r\n    const res = response as ColourResponse\r\n    dispatch(errorColour(res.message || ''));\r\n  }\r\n}\r\n\r\nconst getColour = () => async (dispatch: Dispatch<ColourAction>) => {\r\n  dispatch(loadingColour());\r\n\r\n  const response = await api.get('/productcolour');\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as ColourResponse;\r\n    dispatch(setColour(res.data || []));\r\n  } else {\r\n    const res = response as ColourResponse;\r\n    dispatch(errorColour(res.message || ''))\r\n  }\r\n}\r\n\r\nconst updateColour = (colour: ProductColor) => async (dispatch: Dispatch<ColourAction>) => {\r\n  dispatch(loadingColour());\r\n\r\n  const response = await api.post('/productcolour', {\r\n    product_color_code: colour.code,\r\n    product_color: colour.value,\r\n    colour_id: colour.colourId\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ColourResponse\r\n    dispatch(updateColourSuccess([colour], res.message || ''));\r\n  } else {\r\n    const res = response as ColourResponse\r\n    dispatch(errorColour(res.message || ''));\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  colourReducer,\r\n  saveColour,\r\n  defaultColour,\r\n  getColour,\r\n  updateColour\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { ProductSize } from 'types';\r\nimport { api, getSubCategoryFromId } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface SizeAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductSize[];\r\n}\r\n\r\ninterface SizeResponse {\r\n   message?: string;\r\n   data?: ProductSize[];\r\n}\r\n\r\nexport interface Size {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductSize[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_SIZE= 'LOADING_SIZE',\r\n  SUCCESS_SIZE= 'SUCCESS_SIZE',\r\n  ERROR_SIZE= 'ERROR_SIZE',\r\n  SET_SIZE= 'SET_SIZE',\r\n  UPDATE_SIZE= 'UPDATE_SIZE',\r\n}\r\n\r\nconst loadingSize= () => ({\r\n  type: Actions.LOADING_SIZE\r\n});\r\n\r\nconst successSize= (message: string) => ({\r\n  type: Actions.SUCCESS_SIZE,\r\n  message\r\n});\r\n\r\nconst errorSize= (message: string) => ({\r\n  type: Actions.SUCCESS_SIZE,\r\n  message\r\n});\r\n\r\nconst setSize= (data: ProductSize[]) => ({\r\n  type: Actions.SET_SIZE,\r\n  data\r\n});\r\n\r\nconst updateSize= (data: ProductSize[], message: string) => ({\r\n  type: Actions.UPDATE_SIZE,\r\n  data,\r\n  message\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as Size\r\n\r\n\r\nconst sizeReducer = (state= initialState, action: SizeAction): Size => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_SIZE:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_SIZE:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_SIZE:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_SIZE:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_SIZE:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.sizeId != updatedValue[0].sizeId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue,\r\n        ]\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/**Thunk */\r\n\r\nconst addUpdateSize = (size: ProductSize) => async (dispatch: Dispatch<SizeAction>) => {\r\n  dispatch(loadingSize());\r\n\r\n  const response = await api.post('/productsize',\r\n    {\r\n      product_size:size.value,\r\n      product_size_code: size.code,\r\n      product_category: Number(size.productCategory),\r\n      size_id: size.sizeId\r\n    });\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as SizeResponse;\r\n    if(size.sizeId != '0'){\r\n      const productCategoryIndex  = size.productCategory ? size.productCategory : 1;\r\n      dispatch(updateSize([{...size, productCategoryName: getSubCategoryFromId(Number(productCategoryIndex))}], res.message || ''));\r\n    } else{\r\n      dispatch(successSize(res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as SizeResponse;\r\n    dispatch(errorSize(res.message || ''));\r\n  }\r\n}\r\n\r\nconst getSize= () => async (dispatch: Dispatch<SizeAction>) => {\r\n  dispatch(loadingSize());\r\n\r\n  const response = await api.get('/productsize');\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as SizeResponse;\r\n    dispatch(setSize(res.data || []))\r\n  } else {\r\n    const res = response as SizeResponse;\r\n    dispatch(errorSize(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  addUpdateSize,\r\n  sizeReducer,\r\n  getSize\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { ProductSubCategory } from 'types';\r\nimport { api, getSubCategoryFromId } from 'services';\r\nimport { HttpStatusCode, SubCategories } from 'appConstants';\r\n\r\nexport interface SubCategoryAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductSubCategory[];\r\n}\r\n\r\ninterface SubCategoryResponse {\r\n  message?: string;\r\n  data?: ProductSubCategory[];\r\n}\r\n\r\nexport interface SubCategory {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductSubCategory[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_SUBCATEGORY= 'LOADING_SUBCATEGORY',\r\n  SUCCESS_SUBCATEGORY= 'SUCCESS_SUBCATEGORY',\r\n  ERROR_SUBCATEGORY= 'ERROR_SUBCATEGORY',\r\n  SET_SUBCATEGORY= 'SET_SUBCATEGORY',\r\n  UPDATE_SUBCATEGORY= 'UPDATE_SUBCATEGORY',\r\n}\r\n\r\nconst loadingSubCategory= () => ({\r\n  type: Actions.LOADING_SUBCATEGORY\r\n});\r\n\r\nconst successSubCategory= (message: string) => ({\r\n  type: Actions.SUCCESS_SUBCATEGORY,\r\n  message\r\n});\r\n\r\nconst errorSubCategory= (message: string) => ({\r\n  type: Actions.ERROR_SUBCATEGORY,\r\n  message\r\n});\r\n\r\nconst setSubCategory= (data: ProductSubCategory[]) => ({\r\n  type: Actions.SET_SUBCATEGORY,\r\n  data\r\n});\r\n\r\nconst updateSubCategory= (data: ProductSubCategory[], message: string) => ({\r\n  type: Actions.UPDATE_SUBCATEGORY,\r\n  data,\r\n  message\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as SubCategory\r\n\r\nconst subCategoryReducer = (state= initialState, action: SubCategoryAction): SubCategory => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_SUBCATEGORY:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_SUBCATEGORY:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_SUBCATEGORY:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_SUBCATEGORY:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_SUBCATEGORY:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.subCategoryId != updatedValue[0].subCategoryId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue,\r\n        ]\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/* Thunk */\r\n\r\nconst addUpdateSubCategory = (subCategory: ProductSubCategory) => async (dispatch: Dispatch<SubCategoryAction>) => {\r\n  dispatch(loadingSubCategory());\r\n\r\n  const response = await api.post('/productsubcategory',\r\n    {\r\n      product_name:subCategory.code,\r\n      product_desc: subCategory.value,\r\n      product_category_id: Number(subCategory.productCategoryId),\r\n      subcategory_id: subCategory.subCategoryId?.toString()\r\n    });\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as SubCategoryResponse;\r\n    if(subCategory.subCategoryId != '0'){\r\n      const productCategoryIndex  = subCategory.productCategoryId ? subCategory.productCategoryId : 1;\r\n      dispatch(updateSubCategory([{...subCategory, productCategoryName: getSubCategoryFromId(Number(productCategoryIndex))}], res.message || ''));\r\n    } else{\r\n      dispatch(successSubCategory(res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as SubCategoryResponse;\r\n    dispatch(errorSubCategory(res.message || ''));\r\n  }\r\n}\r\n\r\n\r\nconst getSubCategory= () => async (dispatch: Dispatch<SubCategoryAction>) => {\r\n  dispatch(loadingSubCategory());\r\n\r\n  const response = await api.get('/productsubcategory');\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as SubCategoryResponse;\r\n    dispatch(setSubCategory(res.data || []))\r\n  } else {\r\n    const res = response as SubCategoryResponse;\r\n    dispatch(errorSubCategory(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  subCategoryReducer,\r\n  getSubCategory,\r\n  addUpdateSubCategory\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { ProductCoupon } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface CouponAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductCoupon[]\r\n}\r\n\r\nexport interface CouponResponse {\r\n  message?: string\r\n  data?: ProductCoupon[]\r\n}\r\n\r\nexport interface Coupon {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductCoupon[];\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n  data: {}\r\n} as Coupon\r\n\r\nenum Actions {\r\n  LOADING_COUPON = 'LOADING_COUPON',\r\n  ERROR_COUPON = 'ERROR_COUPON',\r\n  SUCCESS_COUPON = 'SUCCESS_COUPON',\r\n  DEFAULT_COUPON = 'DEFAULT_COUPON',\r\n  SET_COUPON = 'SET_COUPON',\r\n  UPDATE_COUPON_SUCCESS = 'UPDATE_COUPON_SUCCESS',\r\n  DELETE_COUPON_SUCCESS = 'DELETE_COUPON_SUCCESS'\r\n}\r\n\r\nconst loadingCoupon = () => ({\r\n  type: Actions.LOADING_COUPON\r\n});\r\n\r\nconst successCoupon = (message: string) => ({\r\n  type: Actions.SUCCESS_COUPON,\r\n  message\r\n});\r\n\r\nconst errorCoupon = (message: string) => ({\r\n  type: Actions.ERROR_COUPON,\r\n  message\r\n});\r\n\r\nconst defaultCoupon = () => ({\r\n  type: Actions.DEFAULT_COUPON\r\n});\r\n\r\nconst setCoupon = (data: ProductCoupon[], message?: string) => ({\r\n  type: Actions.SET_COUPON,\r\n  data,\r\n  message\r\n});\r\n\r\nconst updateCouponSuccess = (data: ProductCoupon[], message: string) => ({\r\n  type: Actions.UPDATE_COUPON_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst deleteCouponSuccess = (data: ProductCoupon[], message: string) => ({\r\n  type: Actions.DELETE_COUPON_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst couponReducer = (state = initialState, action: CouponAction): Coupon => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_COUPON:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_COUPON:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_COUPON:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        message: action.message,\r\n        data: []\r\n      }\r\n    case Actions.SET_COUPON:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_COUPON_SUCCESS:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.couponId != updatedValue[0].couponId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue\r\n        ]\r\n      }\r\n    case Actions.DELETE_COUPON_SUCCESS:\r\n      const orgState = state.data || [];\r\n      const updValue = action.data || [];\r\n      const updState = orgState.filter(d => {\r\n        return d.couponId != updValue[0].couponId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updState\r\n        ]\r\n      }\r\n    case Actions.DEFAULT_COUPON:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst saveCoupon = (coupon: ProductCoupon) => async (dispatch: Dispatch<CouponAction>) => {\r\n  dispatch(loadingCoupon());\r\n  const response = await api.post('/productcoupon',\r\n    {\r\n      coupon_code: coupon.code,\r\n      coupon_value: coupon.value,\r\n      coupon_id: 0,\r\n      isDelete: false\r\n    });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CouponResponse\r\n    dispatch(successCoupon(res.message || ''));\r\n  } else {\r\n    const res = response as CouponResponse\r\n    dispatch(errorCoupon(res.message || ''));\r\n  }\r\n};\r\n\r\nconst getCoupon = () => async (dispatch: Dispatch<CouponAction>) => {\r\n  dispatch(loadingCoupon());\r\n\r\n  const response = await api.get('/productcoupon');\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as CouponResponse;\r\n    dispatch(setCoupon(res.data || []));\r\n  } else {\r\n    const res = response as CouponResponse;\r\n    dispatch(errorCoupon(res.message || ''))\r\n  }\r\n};\r\n\r\nconst updateCoupon = (coupon: ProductCoupon, isDelete= false) => async (dispatch: Dispatch<CouponAction>) => {\r\n  dispatch(loadingCoupon());\r\n\r\n  const response = await api.post('/productcoupon', {\r\n    coupon_code: coupon.code,\r\n    coupon_value: coupon.value,\r\n    coupon_id: coupon.couponId,\r\n    isDelete\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CouponResponse;\r\n    if(isDelete){\r\n      dispatch(deleteCouponSuccess([coupon], res.message || ''))\r\n    }else {\r\n      dispatch(updateCouponSuccess([coupon], res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as CouponResponse\r\n    dispatch(errorCoupon(res.message || ''));\r\n  }\r\n\r\n};\r\n\r\nconst validateCoupon = (coupon: string) => async(dispatch: Dispatch<CouponAction>) => {\r\n  dispatch(loadingCoupon());\r\n  const response = await api.get('/validatecoupon?couponCode='+coupon);\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data;\r\n    if(res.data){\r\n      dispatch(setCoupon([res.data], res.message || ''));\r\n    } else {\r\n      dispatch(errorCoupon(res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as CouponResponse\r\n    dispatch(errorCoupon(res.message || ''));\r\n  }\r\n};\r\n\r\nexport {\r\n  couponReducer,\r\n  saveCoupon,\r\n  defaultCoupon,\r\n  getCoupon,\r\n  updateCoupon,\r\n  validateCoupon\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { ProductItem, sizeColourQuantityComboObject } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode, pageSize } from 'appConstants';\r\nimport { boolean } from 'yup';\r\nimport { getUserLocation } from './UserLocation';\r\n\r\nexport interface ProductAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n  _hasMoreProducts?: boolean;\r\n  readonly singleData?: ProductItem;\r\n}\r\n\r\ninterface ProductResponse {\r\n  message?: string;\r\n  data?: ProductItem[];\r\n  readonly singleData?: ProductItem;\r\n}\r\n\r\nexport interface Product {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _hasMoreProducts?: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n  readonly singleData?: ProductItem;\r\n}\r\n\r\nenum Actions {\r\n  LOADING_PRODUCT = 'LOADING_PRODUCT',\r\n  SUCCESS_PRODUCT = 'SUCCESS_PRODUCT',\r\n  ERROR_PRODUCT = 'ERROR_PRODUCT',\r\n  SET_PRODUCT = 'SET_PRODUCT',\r\n  SET_CUSTOMER_PRODUCT = 'SET_CUSTOMER_PRODUCT',\r\n  UPDATE_PRODUCT = 'UPDATE_PRODUCT',\r\n  SET_SINGLE_PRODUCT = 'SET_SINGLE_PRODUCT',\r\n  SET_DEFAULT_PRODUCT = 'SET_DEFAULT_PRODUCT',\r\n  DELETE_PRODUCT_SUCCESS = 'DELETE_PRODUCT_SUCCESS',\r\n  SET_PRODUCT_HIGHLIGHT = 'SET_PRODUCT_HIGHLIGHT'\r\n}\r\n\r\nconst loadingProduct = () => ({\r\n  type: Actions.LOADING_PRODUCT\r\n});\r\n\r\nconst successProduct = (message: string) => ({\r\n  type: Actions.SUCCESS_PRODUCT,\r\n  message\r\n});\r\n\r\nconst errorProduct = (message: string) => ({\r\n  type: Actions.ERROR_PRODUCT,\r\n  message\r\n});\r\n\r\nconst setProducts = (data: ProductItem[], _hasMoreProducts: boolean) => ({\r\n  type: Actions.SET_PRODUCT,\r\n  data,\r\n  _hasMoreProducts\r\n});\r\n\r\nconst setSingleProducts = (singleData: ProductItem) => ({\r\n  type: Actions.SET_SINGLE_PRODUCT,\r\n  singleData\r\n});\r\n\r\nconst setDefaulState = () => ({\r\n  type: Actions.SET_DEFAULT_PRODUCT\r\n});\r\n\r\nconst deleteProductSuccess = (data: ProductItem[], message: string) => ({\r\n  type: Actions.DELETE_PRODUCT_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst setCustomerProducts = (data: ProductItem[], _hasMoreProducts: boolean) => ({\r\n  type: Actions.SET_CUSTOMER_PRODUCT,\r\n  data,\r\n  _hasMoreProducts\r\n});\r\n\r\nconst setProductHighlight = (trending: boolean, latest: boolean, productId: string, message: string)  => ({\r\n  type: Actions.SET_PRODUCT_HIGHLIGHT,\r\n  message,\r\n  singleData: {\r\n    trending,\r\n    latest,\r\n    productId\r\n  } as ProductItem\r\n})\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _hasMoreProducts: true,\r\n  message: '',\r\n  data: [],\r\n  singleData: {} as ProductItem\r\n} as Product\r\n\r\nconst productReducer = (state = initialState, action: ProductAction): Product => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.SUCCESS_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        data: action.data,\r\n        _hasMoreProducts: action._hasMoreProducts,\r\n      }\r\n    case Actions.SET_CUSTOMER_PRODUCT:\r\n      debugger\r\n        return {\r\n          ...state,\r\n          _isSuccess: false,\r\n          _isError: false,\r\n          _isLoading: false,\r\n          data: state.data?.concat(action.data || []),\r\n          _hasMoreProducts: action._hasMoreProducts\r\n        }\r\n    case Actions.SET_SINGLE_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        singleData: action.singleData\r\n      }\r\n    case Actions.DELETE_PRODUCT_SUCCESS:\r\n      const orgState = state.data || [];\r\n      const updValue = action.data || [];\r\n      const updState = orgState.filter(d => {\r\n        return d.productId != updValue[0].productId\r\n      });\r\n      return {\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        data: [\r\n          ...updState\r\n        ]\r\n      }\r\n    case Actions.SET_PRODUCT_HIGHLIGHT:\r\n      return {\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: state.data?.map((product) => {\r\n          if(product.productId.toString() === action.singleData?.productId.toString()){\r\n            return {...product, trending: action.singleData.trending, latest: action.singleData.latest}\r\n          }\r\n          return product\r\n        })\r\n      }\r\n    case Actions.SET_DEFAULT_PRODUCT:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/*Thunk */\r\n\r\nconst addUpdateProduct = (product: ProductItem, isDelete = 0, sizeColourQuantity: sizeColourQuantityComboObject[]) => async (dispatch: Dispatch<ProductAction>) => {\r\n  dispatch(loadingProduct());\r\n  var formData = new FormData();\r\n  if (product.productImageBlob) {\r\n    Array.from(product.productImageBlob).forEach((element, index) => {\r\n      formData.append(`product_image_${index}`, element);\r\n    });\r\n  }\r\n  formData.append('product_INR_price', product.priceINR);\r\n  formData.append('product_USD_price', product.priceUSD);\r\n  formData.append('product_size_code', product.size || '0');\r\n  formData.append('product_color_code', product.colour || '0');\r\n  formData.append('product_Qty', product.quantity || '0');\r\n  formData.append('product_name', product.name);\r\n  formData.append('product_desc', product.description || '');\r\n  formData.append('product_subcategory_id', (product.subCategory || '').toString());\r\n  formData.append('prod_id', product.productId);\r\n  formData.append('is_product_delete', isDelete.toString());\r\n  formData.append('deleted_image_paths', JSON.stringify(product.deletedImagePath));\r\n  formData.append('size_colour_quantity_combo',  JSON.stringify(sizeColourQuantity));\r\n  formData.append('deleted_product_detailIds',  JSON.stringify(product.deletedProductDetailIds));\r\n  const response = await api.post('/productinfo', formData);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ProductResponse;\r\n    if (product.productId != '0') {\r\n      if (isDelete) {\r\n        dispatch(deleteProductSuccess([product], res.message || ''))\r\n      } else {\r\n        dispatch(successProduct(res.message || ''));\r\n      }\r\n    } else {\r\n      dispatch(successProduct(res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as ProductResponse;\r\n    dispatch(errorProduct(res.message || ''));\r\n  }\r\n\r\n};\r\n\r\nconst getProducts = () => async (dispatch: Dispatch<ProductAction>) => {\r\n  dispatch(loadingProduct());\r\n  const response = await api.get('/productinfo');\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ProductResponse;\r\n    dispatch(setProducts(res.data || [], true))\r\n  } else {\r\n    const res = response as ProductResponse;\r\n    dispatch(errorProduct(res.message || ''));\r\n  }\r\n};\r\n\r\nconst getProduct = (productId: number) => async (dispatch: Dispatch<ProductAction>) => {\r\n  dispatch(loadingProduct());\r\n  const response = await api.get('/productinfo?productId=' + productId);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ProductResponse;\r\n    dispatch(setSingleProducts(res.singleData || {} as ProductItem))\r\n  } else {\r\n    const res = response as ProductResponse;\r\n    dispatch(errorProduct(res.message || ''));\r\n  }\r\n};\r\n\r\nconst getCustomerProducts = (\r\n  offset: number,\r\n  limit: number,\r\n  categoryId: number[],\r\n  subCategoryId: number[],\r\n  colourId: number[],\r\n  sizeId: number[],\r\n  startPrice: string,\r\n  endPrice: string,\r\n  currency: string,\r\n  searchText: string,\r\n  freshData = false) => async (dispatch: Dispatch<ProductAction>) => {\r\n    dispatch(loadingProduct());\r\n\r\n    const response = await api.get(\r\n      `/productlistcustomer?offset=${offset}&limit=${limit}&categorydId=${categoryId}&colourId=${colourId}&sizeId=${sizeId}&subCategoryId=${subCategoryId}&startPrice=${startPrice}&endPrice=${endPrice}&currency=${currency}&searchText=${searchText}`);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n      const res = response.data as ProductResponse;\r\n      const _hasMoreProducts = res.data && res.data.length === pageSize || false;\r\n      if(freshData){\r\n        dispatch(setProducts(res.data || [], _hasMoreProducts))\r\n      }else {\r\n        dispatch(setCustomerProducts(res.data || [], _hasMoreProducts))\r\n      }\r\n      \r\n    } else {\r\n      const res = response as ProductResponse;\r\n      dispatch(errorProduct(res.message || ''));\r\n    }\r\n  }\r\n\r\n  const updateProductHighLight = (highlight: string, productId: string) => async(dispatch: Dispatch<ProductAction>) => {\r\n    dispatch(loadingProduct());\r\n    const latest =  highlight === '2';\r\n    const trending = highlight === '1';\r\n    const response = await api.post('/producthighlight',{\r\n      latest,\r\n      trending,\r\n      productId\r\n    });\r\n\r\n    if(response.status === HttpStatusCode.OK){\r\n      const res = response.data as ProductResponse;\r\n      dispatch(setProductHighlight(trending,latest, productId, res.message || ''))\r\n    } else {\r\n      const res = response as ProductResponse;\r\n      dispatch(errorProduct(res.message || ''));\r\n    }\r\n  }\r\n\r\nexport {\r\n  addUpdateProduct,\r\n  productReducer,\r\n  getProducts,\r\n  getProduct,\r\n  setDefaulState,\r\n  getCustomerProducts,\r\n  updateProductHighLight,\r\n  errorProduct\r\n}\r\n","import { Dispatch, Action } from 'redux';\r\nimport { ActiveProductCount, ProductSubcategoryProperty } from 'types';\r\nimport { api, createProductCountList } from 'services';\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface ProductCountAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductSubcategoryProperty;\r\n};\r\n\r\nexport interface ProductCountResponse {\r\n  readonly message?: string;\r\n  readonly data?: ActiveProductCount[];\r\n};\r\n\r\nexport interface ProductCount {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductSubcategoryProperty;\r\n};\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n  data: {}\r\n} as ProductCount;\r\n\r\nenum Actions {\r\n  LOADING_PRODUCT_COUNT= 'LOADING_PRODUCT_COUNT',\r\n  ERROR_PRODUCT_COUNT= 'ERROR_PRODUCT_COUNT',\r\n  SET_PRODUCT_COUNT= 'SET_PRODUCT_COUNT',\r\n};\r\n\r\nconst loadingProductCount = () => ({\r\n  type: Actions.LOADING_PRODUCT_COUNT\r\n});\r\n\r\nconst errorProductCount = (message: string) => ({\r\n  type: Actions.ERROR_PRODUCT_COUNT,\r\n  message\r\n});\r\n\r\nconst setProductCount = (data: ProductSubcategoryProperty) => ({\r\n  type: Actions.SET_PRODUCT_COUNT,\r\n  data\r\n});\r\n\r\nconst productCountReducer = (state= initialState, action: ProductCountAction): ProductCount => {\r\n  switch(action.type) {\r\n    case Actions.LOADING_PRODUCT_COUNT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        message: ''\r\n      }\r\n    case Actions.ERROR_PRODUCT_COUNT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_PRODUCT_COUNT:\r\n      return {\r\n        ...state,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: true,\r\n        message: action.message,\r\n        data : action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n/** Thunk */\r\n\r\nconst getActiveProductCount = () => async(dispatch: Dispatch<ProductCountAction>) => {\r\n  dispatch(loadingProductCount());\r\n\r\n  const response = await api.get('/productcount');\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as ProductCountResponse;\r\n    dispatch(setProductCount(createProductCountList(res.data||[])));\r\n  } else {\r\n    const res = response as ProductCountResponse;\r\n    dispatch(errorProductCount(res.message || ''))\r\n  }\r\n};\r\n\r\nexport {\r\n  productCountReducer,\r\n  getActiveProductCount\r\n}","const pageSize = 25;\r\n\r\n\r\nexport {\r\n  pageSize\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { CustomerCart } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface CartAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: CustomerCart[]\r\n}\r\n\r\nexport interface CartResponse {\r\n  message?: string;\r\n  data?: CustomerCart;\r\n}\r\n\r\nexport interface CartResponseMulti {\r\n  message?: string;\r\n  data?: CustomerCart[];\r\n}\r\n\r\nexport interface Cart {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _quantityUpdate: boolean;\r\n  readonly message?: string;\r\n  readonly data?: CustomerCart[];\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  _quantityUpdate: false,\r\n  message: '',\r\n  data: []\r\n} as Cart;\r\n\r\nenum Actions {\r\n  LOADING_CART = 'LOADING_CART',\r\n  ERROR_CART = 'ERROR_CART',\r\n  SUCCESS_CART = 'SUCCESS_CART',\r\n  DEFAULT_CART = 'DEFAULT_CART',\r\n  SET_CART = 'SET_CART',\r\n  SET_LOGGED_CART = 'SET_LOGGED_CART',\r\n  UPDATE_CART_SUCCESS = 'UPDATE_CART_SUCCESS',\r\n  ADD_CART_SUCCESS = 'ADD_CART_SUCCESS',\r\n  UPDATE_CART_LOGGED_OUT = 'UPDATE_CART_LOGGED_OUT',\r\n  DELETE_CART_PRODUCT = 'DELETE_CART_PRODUCT',\r\n  CART_QUANTITY_FINE = 'CART_QUANTITY_FINE',\r\n  CART_GET_UPDATED_QUANTITY = 'CART_GET_UPDATED_QUANTITY',\r\n  DELETE_CART_PRODUCT_LOGGED_OUT = 'DELETE_CART_PRODUCT_LOGGED_OUT',\r\n};\r\n\r\nconst loadingCart = () => ({\r\n  type: Actions.LOADING_CART\r\n});\r\n\r\nconst successCart = (message: string) => ({\r\n  type: Actions.SUCCESS_CART,\r\n  message\r\n});\r\n\r\nconst errorCart = (message: string) => ({\r\n  type: Actions.ERROR_CART,\r\n  message\r\n});\r\n\r\nconst defaultCart = () => ({\r\n  type: Actions.DEFAULT_CART\r\n});\r\n\r\nconst setCart = (data: CustomerCart[]) => ({\r\n  type: Actions.SET_CART,\r\n  data\r\n});\r\n\r\nconst setLoggedCart = (data: CustomerCart[]) => ({\r\n  type: Actions.SET_LOGGED_CART,\r\n  data\r\n});\r\n\r\nconst updateCartSuccess = (data: CustomerCart[], message: string) => ({\r\n  type: Actions.UPDATE_CART_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst addCartSuccess = (data: CustomerCart[], message: string) => ({\r\n  type: Actions.ADD_CART_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst addCartSuccessLoggedOut = (data: CustomerCart[], message: string) => ({\r\n  type: Actions.UPDATE_CART_LOGGED_OUT,\r\n  data,\r\n  message\r\n});\r\n\r\nconst deleteCartProduct = (data: CustomerCart[], message: string) => ({\r\n  type: Actions.DELETE_CART_PRODUCT,\r\n  data,\r\n  message\r\n});\r\n\r\nconst cartQuantityFine = () => ({\r\n  type: Actions.CART_QUANTITY_FINE\r\n});\r\n\r\nconst cartGetUpdatedQuantity = () => ({\r\n  type: Actions.CART_GET_UPDATED_QUANTITY\r\n});\r\n\r\nconst deleteCartLoggedOut = (data: CustomerCart[]) =>({\r\n  type: Actions.DELETE_CART_PRODUCT_LOGGED_OUT,\r\n  data,\r\n})\r\n\r\nconst cartReducer = (state = initialState, action: CartAction): Cart => {\r\n  debugger;\r\n  switch (action.type) {\r\n    case Actions.LOADING_CART:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false,\r\n        _quantityUpdate: false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_CART:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_CART:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _quantityUpdate: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_CART:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.SET_LOGGED_CART:\r\n      debugger;\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_CART_SUCCESS:\r\n      const originalState = state.data || [];\r\n      let og = [];\r\n      let newProduct = true;\r\n      if (action.data && originalState.length === 0) {\r\n        og = [...action.data]\r\n      } else {\r\n        og = originalState.map((product) => {\r\n          if (action.data && product.cartId === action.data[0].cartId) {\r\n            product.productQuantity = action.data[0].productQuantity;\r\n            product.totalPrice = action.data[0].totalPrice;\r\n            product.cartId = action.data[0].cartId;\r\n            newProduct = false;\r\n            return product;\r\n          }\r\n          return product;\r\n        });\r\n        if (newProduct && action.data) {\r\n          og = [...og, ...action.data]\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: og\r\n      }\r\n    case Actions.UPDATE_CART_LOGGED_OUT:\r\n      const originalStatelo = state.data || [];\r\n      let oglo = [];\r\n      let newProductlo = true;\r\n      if (action.data && originalStatelo.length === 0) {\r\n        oglo = [...action.data]\r\n      } else {\r\n        oglo = originalStatelo.map((product) => {\r\n          if (action.data && product.cartId === action.data[0].cartId) {\r\n            product.productQuantity = (Number(action.data[0].productQuantity) + Number(product.productQuantity)).toString();\r\n            product.totalPrice = ((Number(product.productQuantity)) * Number(action.data[0].productPrice)).toString();\r\n            product.cartId = action.data[0].cartId;\r\n            newProductlo = false;\r\n            return product;\r\n          }\r\n          return product;\r\n        });\r\n        if (newProductlo && action.data) {\r\n          oglo = [...oglo, ...action.data]\r\n        }\r\n      }\r\n      localStorage.setItem(\"basicKart-loggedOutCart\", JSON.stringify(oglo));\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: oglo\r\n      }\r\n    case Actions.ADD_CART_SUCCESS:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.DELETE_CART_PRODUCT_LOGGED_OUT:\r\n      const res = state.data?.filter(({ cartId }) => action.data && cartId !== action.data[0].cartId)\r\n      localStorage.setItem(\"basicKart-loggedOutCart\", JSON.stringify(res));\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: res\r\n      }\r\n    case Actions.DELETE_CART_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: state.data?.filter(({ cartId }) => action.data && cartId !== action.data[0].cartId)\r\n      }\r\n    case Actions.DEFAULT_CART:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    case Actions.CART_GET_UPDATED_QUANTITY:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _quantityUpdate: true,\r\n        message: action.message\r\n      }\r\n    case Actions.CART_QUANTITY_FINE:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: true,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nconst addUpdateCart = (cart: CustomerCart, isLoggedIn?: boolean) =>\r\n  async (dispatch: Dispatch<CartAction>) => {\r\n    dispatch(loadingCart());\r\n    if (!isLoggedIn) {\r\n          // result.productImage = cart.productImage;\r\n          // result.productImagePath = cart.productImagePath;\r\n          // result.productName = cart.productName;\r\n          // result.subcategory = cart.subcategory;\r\n          // result.productId = cart.productId;\r\n          const newCart = {\r\n            ...cart,\r\n            totalPrice: (Number(cart.productPrice) * Number(cart.productQuantity)).toString(),\r\n          } as CustomerCart;\r\n          dispatch(addCartSuccessLoggedOut([newCart],''));\r\n    } else {\r\n      const response = await api.post('/cart',\r\n        {\r\n          product_detail_id: cart.productDetailId.toString(),\r\n          order_quantity: cart.productQuantity,\r\n          price_id: cart.currencyType,\r\n          orderdetail_id: cart.cartId.toString(),\r\n          delete_flag: false\r\n        });\r\n\r\n      if (response.status === HttpStatusCode.OK) {\r\n        const res = response.data as CartResponse;\r\n        if (cart.cartId != '0') {\r\n          const result = res.data || {} as CustomerCart;\r\n          if (cart.productQuantity === '0') {\r\n            dispatch(deleteCartProduct([cart], res.message || ''));\r\n          } else {\r\n            dispatch(updateCartSuccess([result], res.message || ''));\r\n          }\r\n        } else {\r\n          const result = res.data || {} as CustomerCart;\r\n          result.productImage = cart.productImage;\r\n          result.productImagePath = cart.productImagePath;\r\n          result.productName = cart.productName;\r\n          result.subcategory = cart.subcategory;\r\n          result.productId = cart.productId;\r\n          dispatch(updateCartSuccess([result], res.message || ''));\r\n        }\r\n      } else {\r\n        const res = response as CartResponse;\r\n        dispatch(errorCart(res.message || ''));\r\n      }\r\n    }\r\n  };\r\n\r\nconst getCart = () => async (dispatch: Dispatch<CartAction>) => {\r\n  dispatch(loadingCart());\r\n\r\n  const response = await api.get('/cart');\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CartResponseMulti;\r\n    dispatch(addCartSuccess(res.data || [], res.message || ''));\r\n  } else {\r\n    const res = response as CartResponse;\r\n    dispatch(errorCart(res.message || ''))\r\n  }\r\n};\r\n\r\nconst deleteCartItem = (cart: CustomerCart, isLoggedIn?: boolean) => async (dispatch: Dispatch<CartAction>) => {\r\n  dispatch(loadingCart());\r\n\r\n  if(!isLoggedIn){\r\n    dispatch(deleteCartLoggedOut([cart]));\r\n  }else {\r\n    const response = await api.post('/cart', {\r\n      orderdetail_id: cart.cartId,\r\n      product_detail_id: cart.productDetailId.toString(),\r\n      order_quantity: cart.productQuantity,\r\n      price_id: '1',\r\n      delete_flag: true\r\n    });\r\n    if (response.status === HttpStatusCode.OK) {\r\n      const res = response.data as CartResponse;\r\n      dispatch(deleteCartProduct([cart], res.message || ''));\r\n    } else {\r\n      const res = response as CartResponse;\r\n      dispatch(errorCart(res.message || ''))\r\n    }\r\n  }\r\n  \r\n};\r\n\r\nconst updateCartQuantity = (orderDetailId: string) => async (dispatch: Dispatch<CartAction>) => {\r\n  dispatch(loadingCart());\r\n  const response = await api.post('/updatecartquantity', { orderDetailId });\r\n  if (response.status === HttpStatusCode.OK) {\r\n    dispatch(cartQuantityFine());\r\n  } else if (response.status === HttpStatusCode.PARTIAL_INFO) {\r\n    dispatch(cartGetUpdatedQuantity());\r\n  } else {\r\n    const res = response as CartResponse;\r\n    dispatch(errorCart(res.message || ''))\r\n  }\r\n}\r\n\r\nexport {\r\n  cartReducer,\r\n  addUpdateCart,\r\n  getCart,\r\n  deleteCartItem,\r\n  updateCartQuantity,\r\n  setLoggedCart\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { CustomerCheckout, RazorpayPayment, PayPalPayment, CodPayment } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface CheckoutAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: CustomerCheckout;\r\n}\r\n\r\nexport interface CheckoutResponse {\r\n  message?: string\r\n  data?: CustomerCheckout;\r\n}\r\n\r\nexport interface Checkout {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _isPaymentSucceess: boolean;\r\n  readonly _priceChanged: boolean;\r\n  readonly _isFetchCodCodeSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: CustomerCheckout;\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  _isPaymentSucceess: false,\r\n  _priceChanged: false,\r\n  _isFetchCodCodeSuccess: false,\r\n  message: '',\r\n  data: {}\r\n} as Checkout;\r\n\r\nenum Actions {\r\n  LOADING_CHECKOUT = 'LOADING_CHECKOUT',\r\n  ERROR_CHECKOUT = 'ERROR_CHECKOUT',\r\n  SUCCESS_CHECKOUT_ORDER = 'SUCCESS_CHECKOUT_ORDER',\r\n  DEFAULT_CHECKOUT = 'DEFAULT_CHECKOUT',\r\n  SET_CHECKOUT = 'SET_CHECKOUT',\r\n  UPDATE_CHECKOUT_SUCCESS = 'UPDATE_CHECKOUT_SUCCESS',\r\n  SUCCESS_PAYMENT = 'SUCCESS_PAYMENT',\r\n  PRICE_CHANGED = 'PRICE_CHANGED',\r\n};\r\n\r\nconst loadingCheckout = () => ({\r\n  type: Actions.LOADING_CHECKOUT\r\n});\r\n\r\nconst successCheckoutOrder = (data: CustomerCheckout, message?: string) => ({\r\n  type: Actions.SUCCESS_CHECKOUT_ORDER,\r\n  data,\r\n  message\r\n});\r\n\r\nconst errorCheckout = (message: string) => ({\r\n  type: Actions.ERROR_CHECKOUT,\r\n  message\r\n});\r\n\r\nconst defaultCheckout = () => ({\r\n  type: Actions.DEFAULT_CHECKOUT\r\n});\r\n\r\nconst successPayment =(message:string) => ({\r\n  type: Actions.SUCCESS_PAYMENT,\r\n  message\r\n});\r\n\r\nconst priceChanged = (message:string) => ({\r\n  type: Actions.PRICE_CHANGED,\r\n  message\r\n});\r\n\r\nconst checkoutReducer = (state = initialState, action: CheckoutAction) : Checkout => {\r\n  switch(action.type){\r\n    case Actions.LOADING_CHECKOUT:\r\n      return{\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_CHECKOUT_ORDER:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: false,\r\n        _isFetchCodCodeSuccess: true,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.PRICE_CHANGED:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: true,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_CHECKOUT:\r\n      debugger\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: false,\r\n        _isFetchCodCodeSuccess: false,\r\n        message: action.message\r\n      }\r\n    case Actions.DEFAULT_CHECKOUT:\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: false,\r\n        _isFetchCodCodeSuccess: false,\r\n      }\r\n    case Actions.SUCCESS_PAYMENT:\r\n      return {\r\n        ...state,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isPaymentSucceess: true,\r\n        _priceChanged: false,\r\n        message: action.message\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Thunk\r\n\r\nconst getRazorPayOrder = (amount: string, orderId: number, couponId?: number) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/checkout',\r\n    {\r\n      amount,\r\n      displayAmount: amount,\r\n      orderId,\r\n      couponId\r\n    });\r\n    if (response.status === HttpStatusCode.OK) {\r\n      const res = response.data as CheckoutResponse;\r\n      dispatch(successCheckoutOrder(res.data || {} as CustomerCheckout, res.message || ''));\r\n    } else if(response.status === HttpStatusCode.PARTIAL_INFO){\r\n      const res = response.data as CheckoutResponse;\r\n      dispatch(priceChanged(res.message || ''));\r\n    } else {\r\n      const res = response as CheckoutResponse;\r\n      dispatch(errorCheckout(res.message || ''));\r\n    }\r\n};\r\n\r\nconst saveRazorPayOrder = (razorpayData: RazorpayPayment) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/payment/razorpay',razorpayData);\r\n    if (response.status === HttpStatusCode.OK) {\r\n      const res = response.data as CheckoutResponse\r\n      dispatch(successPayment(res.message || ''));\r\n    } else {\r\n      const res = response as CheckoutResponse\r\n      dispatch(errorCheckout(res.message || ''));\r\n    }\r\n};\r\n\r\nconst getPayPalOrder = (amount: string, displayAmount: string ,orderId: number, couponId?: number)  => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/paypalorder',\r\n  {\r\n    amount,\r\n    displayAmount,\r\n    orderId,\r\n    couponId\r\n  });\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CheckoutResponse\r\n    dispatch(successCheckoutOrder(res.data as CustomerCheckout, res.message || ''));\r\n  } else if(response.status === HttpStatusCode.PARTIAL_INFO){\r\n    const res = response.data as CheckoutResponse;\r\n    dispatch(priceChanged(res.message || ''));\r\n  } else {\r\n    const res = response as CheckoutResponse\r\n    dispatch(errorCheckout(res.message || ''));\r\n  }\r\n};\r\n\r\nconst savePayPalOrder = (paypalData: PayPalPayment) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/payment/paypal',paypalData);\r\n    if (response.status === HttpStatusCode.OK) {\r\n      const res = response.data as CheckoutResponse\r\n      dispatch(successPayment(res.message || ''));\r\n    } else {\r\n      const res = response as CheckoutResponse\r\n      dispatch(errorCheckout(res.message || ''));\r\n    }\r\n};\r\n\r\nconst getCodOrder = (amount: string, orderId: number, couponId?: number) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/payment/codorder',{\r\n    amount,\r\n    displayAmount: amount,\r\n    orderId,\r\n    couponId\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CheckoutResponse;\r\n    dispatch(successCheckoutOrder(res.data as CustomerCheckout, res.message || ''));\r\n  } else if(response.status === HttpStatusCode.PARTIAL_INFO){\r\n    const res = response.data as CheckoutResponse;\r\n    dispatch(priceChanged(res.message || ''));\r\n  } else {\r\n    const res = response as CheckoutResponse;\r\n    dispatch(errorCheckout(res.message || ''));\r\n  }\r\n};\r\n\r\nconst saveCodOrder = (codData: CodPayment) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/payment/codplaceorder',codData);\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CheckoutResponse\r\n    dispatch(successPayment(res.message || ''));\r\n  } else {\r\n    const res = response as CheckoutResponse\r\n    dispatch(errorCheckout(res.message || ''));\r\n  }\r\n};\r\n\r\nconst resendOTP = () => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.get('/payment/codresendotp');\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CheckoutResponse;\r\n    dispatch(successCheckoutOrder(res.data as CustomerCheckout, res.message || ''));\r\n  } else {\r\n    const res = response as CheckoutResponse;\r\n    dispatch(errorCheckout(res.message || ''));\r\n  }\r\n};\r\n\r\nexport{\r\n  getRazorPayOrder,\r\n  checkoutReducer,\r\n  saveRazorPayOrder,\r\n  errorCheckout,\r\n  getPayPalOrder,\r\n  savePayPalOrder,\r\n  getCodOrder,\r\n  saveCodOrder,\r\n  resendOTP,\r\n  defaultCheckout\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface UserLocationAction extends Action {\r\n  readonly data?: string;\r\n};\r\n\r\nexport interface UserLocation {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: string;\r\n};\r\n\r\nenum Actions{\r\n  LOADING_USER_LOCATION= 'LOADING_USER_LOCATION',\r\n  SET_USER_LOCATION= 'SET_USER_LOCATION',\r\n};\r\n\r\nconst loadingUserLocation = () => ({\r\n  type: Actions.LOADING_USER_LOCATION,\r\n});\r\n\r\nconst setUserLocation = (data: string) => ({\r\n  type: Actions.SET_USER_LOCATION,\r\n  data\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:''\r\n} as UserLocation\r\n\r\nconst userLocationReducer = (state= initialState, action: UserLocationAction): UserLocation => {\r\n  switch(action.type){\r\n    case Actions.LOADING_USER_LOCATION:\r\n      return{\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.SET_USER_LOCATION:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess: false,\r\n        data: action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n/** Thunk */\r\n\r\nconst getUserLocation = () => async (dispatch: Dispatch<UserLocationAction>) => {\r\n  dispatch(loadingUserLocation());\r\n  const defaultUserLocation = 'Asia/Calcutta';\r\n  try {\r\n    const userLocation = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n    if(userLocation && userLocation.toLowerCase() === defaultUserLocation.toLowerCase()){\r\n      dispatch(setUserLocation('IN'));\r\n    } else if (!userLocation && (new Date).getTimezoneOffset() === -330){\r\n      dispatch(setUserLocation('IN'));\r\n    } else {\r\n      dispatch(setUserLocation('USD'));\r\n    }\r\n  } catch (error) {\r\n    dispatch(setUserLocation('IN'));\r\n  }\r\n};\r\n\r\nexport {\r\n  userLocationReducer,\r\n  getUserLocation\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { Order, OrderItems, OrderUpdateAdmin } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode, pageSize } from 'appConstants';\r\n\r\nexport interface CustomerOrderAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: Order[];\r\n  readonly singleData?: Order;\r\n  readonly _hasMoreOrders?: boolean;\r\n};\r\n\r\ninterface CustomerOrderResponse {\r\n  message?: string;\r\n  data?: Order[];\r\n  singleData?: Order;\r\n  _hasMoreOrders?: boolean;\r\n};\r\n\r\nexport interface CustomerOrders {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _hasMoreOrders?: boolean;\r\n  readonly _isOrderUpdate?: boolean;\r\n  readonly message?: string;\r\n  readonly data?: Order[];\r\n  readonly singleData?: Order;\r\n};\r\n\r\nenum Actions{\r\n  LOADING_ORDER= 'LOADING_ORDER',\r\n  SUCCESS_ORDER= 'SUCCESS_ORDER',\r\n  ADMIN_SUCCESS_ORDER= 'ADMIN_SUCCESS_ORDER',\r\n  ERROR_ORDER= 'ERROR_ORDER',\r\n  SINGLE_DATA = 'SINGLE_DATA',\r\n  CUSTOMER_RETURN = 'CUSTOMER_RETURN',\r\n  DEFAULT_ORDER_RETURN = 'DEFAULT_ORDER_RETURN'\r\n};\r\n\r\nconst loadingOrder= () => ({\r\n  type: Actions.LOADING_ORDER\r\n});\r\n\r\nconst successOrder= (data: Order[], _hasMoreOrders: boolean) => ({\r\n  type: Actions.SUCCESS_ORDER,\r\n  data,\r\n  _hasMoreOrders\r\n});\r\n\r\nconst adminSuccessOrder= (data: Order[]) => ({\r\n  type: Actions.ADMIN_SUCCESS_ORDER,\r\n  data\r\n});\r\n\r\nconst errorOrder= (message: string) => ({\r\n  type: Actions.ERROR_ORDER,\r\n  message\r\n});\r\n\r\nconst singleOrder= (singleData: Order) => ({\r\n  type: Actions.SINGLE_DATA,\r\n  singleData\r\n});\r\n\r\nconst customerReturn = (orderDetailsId: number) => ({\r\n  type: Actions.CUSTOMER_RETURN,\r\n  singleData: {\r\n   orderId: orderDetailsId.toString()\r\n  } as Order\r\n});\r\n\r\nconst defaulOrderReturn = () => ({\r\n  type: Actions.DEFAULT_ORDER_RETURN\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _hasMoreOrders: false,\r\n  _isOrderUpdate: false,\r\n  message: '',\r\n  data:[],\r\n  singleData: {} as Order,\r\n} as CustomerOrders\r\n\r\nconst customerOrdersReducer = (state= initialState, action: CustomerOrderAction): CustomerOrders => {\r\n  switch(action.type){\r\n    case Actions.LOADING_ORDER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: true,\r\n        _hasMoreOrders: false,\r\n        _isOrderUpdate: false,\r\n      }\r\n    case Actions.SUCCESS_ORDER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isOrderUpdate: false,\r\n        message: action.message,\r\n        data: state.data?.concat(action.data || []),\r\n        _hasMoreOrders: action._hasMoreOrders\r\n      }\r\n    case Actions.ADMIN_SUCCESS_ORDER:\r\n    return {\r\n      ...state,\r\n      _isSuccess: true,\r\n      _isError: false,\r\n      _isLoading: false,\r\n      _isOrderUpdate: false,\r\n      message: action.message,\r\n      data: action.data\r\n    }\r\n    case Actions.SINGLE_DATA:\r\n      return{\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _hasMoreOrders: false,\r\n        _isOrderUpdate: false,\r\n        singleData: action.singleData\r\n      }\r\n    case Actions.ERROR_ORDER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        _hasMoreOrders: false,\r\n        _isOrderUpdate: false,\r\n      }\r\n    case Actions.DEFAULT_ORDER_RETURN:\r\n      return {\r\n        ...state,\r\n        _isOrderUpdate: false,\r\n      }\r\n    case Actions.CUSTOMER_RETURN:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isOrderUpdate: true,\r\n        message: action.message,\r\n        data: state.data?.map((singleOrder) => {\r\n          const updatedOrder = singleOrder.orderItems.map((order) => {\r\n            if(order.orderDetailId.toString() === action.singleData?.orderId.toString()){\r\n              return {...order, shipmentDetails: {...order.shipmentDetails, returnStatus: 'In Progress'}}\r\n            } else {\r\n              return order\r\n            }\r\n          })\r\n          return {\r\n            ...singleOrder,\r\n            orderItems : updatedOrder\r\n          }\r\n        }),\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n/** Thunk */\r\n\r\nconst getCustomerOrders = (offset: number, limit: number) => async(dispatch: Dispatch<CustomerOrderAction>) => {\r\n  dispatch(loadingOrder());\r\n  const response = await api.get('/getcustomerorders?limit='+limit+'&offset='+offset);\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as CustomerOrderResponse;\r\n    const _hasMoreOrders = res.data && res.data.length === pageSize || false;\r\n    dispatch(successOrder(res.data || [], _hasMoreOrders))\r\n  } else {\r\n    const res = response as CustomerOrderResponse;\r\n    dispatch(errorOrder(res.message || ''));\r\n  }\r\n}\r\n\r\nconst getAdminOrders = (userId=0) => async(dispatch: Dispatch<CustomerOrderAction>) => {\r\n  dispatch(loadingOrder());\r\n  const response = await api.get('/getadminorders?userId='+userId);\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as CustomerOrderResponse;\r\n    dispatch(adminSuccessOrder(res.data || []))\r\n  } else {\r\n    const res = response as CustomerOrderResponse;\r\n    dispatch(errorOrder(res.message || ''));\r\n  }\r\n};\r\n\r\nconst customerProductReturn = (orderDetailsId: number, returnReason: string,\r\n  orderNumber?: string, productName?: string, userName?: string) => async(dispatch: Dispatch<CustomerOrderAction>) => {\r\n  dispatch(loadingOrder());\r\n  const response = await api.post('/customerproductreturn',{\r\n    orderDetailsId,\r\n    returnReason,\r\n    orderNumber,\r\n    productName,\r\n    userName\r\n  });\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as CustomerOrderResponse;\r\n    dispatch(customerReturn(orderDetailsId))\r\n  } else {\r\n    const res = response as CustomerOrderResponse;\r\n    dispatch(errorOrder(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  getCustomerOrders,\r\n  customerOrdersReducer,\r\n  getAdminOrders,\r\n  singleOrder,\r\n  customerProductReturn,\r\n  defaulOrderReturn\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { OrderShipper, Order } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface ShipperAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: OrderShipper[]\r\n}\r\n\r\nexport interface ShipperResponse {\r\n  message?: string\r\n  data?: OrderShipper[]\r\n}\r\n\r\nexport interface Shipper {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: OrderShipper[];\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n  data: []\r\n} as Shipper\r\n\r\nenum Actions {\r\n  LOADING_SHIPPER = 'LOADING_SHIPPER',\r\n  ERROR_SHIPPER = 'ERROR_SHIPPER',\r\n  SUCCESS_SHIPPER = 'SUCCESS_SHIPPER',\r\n  DEFAULT_SHIPPER = 'DEFAULT_SHIPPER',\r\n  SET_SHIPPER = 'SET_SHIPPER',\r\n  UPDATE_SHIPPER_SUCCESS = 'UPDATE_SHIPPER_SUCCESS',\r\n  DELETE_SHIPPER_SUCCESS = 'DELETE_SHIPPER_SUCCESS'\r\n}\r\n\r\nconst loadingShipper = () => ({\r\n  type: Actions.LOADING_SHIPPER\r\n});\r\n\r\nconst successShipper = (message: string) => ({\r\n  type: Actions.SUCCESS_SHIPPER,\r\n  message\r\n});\r\n\r\nconst errorShipper = (message: string) => ({\r\n  type: Actions.ERROR_SHIPPER,\r\n  message\r\n});\r\n\r\nconst defaultShipper = () => ({\r\n  type: Actions.DEFAULT_SHIPPER\r\n});\r\n\r\nconst setShipper = (data: OrderShipper[]) => ({\r\n  type: Actions.SET_SHIPPER,\r\n  data\r\n});\r\n\r\nconst updateShipperSuccess = (data: OrderShipper[], message: string) => ({\r\n  type: Actions.UPDATE_SHIPPER_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst deleteShipperSuccess = (data: OrderShipper[], message: string) => ({\r\n  type: Actions.DELETE_SHIPPER_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst shipperReducer = (state = initialState, action: ShipperAction): Shipper => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_SHIPPER:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_SHIPPER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_SHIPPER:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_SHIPPER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_SHIPPER_SUCCESS:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.shipperId != updatedValue[0].shipperId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue\r\n        ]\r\n      }\r\n    case Actions.DELETE_SHIPPER_SUCCESS:\r\n      const orgState = state.data || [];\r\n      const updValue = action.data || [];\r\n      const updState = orgState.filter(d => {\r\n        return d.shipperId != updValue[0].shipperId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updState\r\n        ]\r\n      }\r\n    case Actions.DEFAULT_SHIPPER:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/** Thunk */\r\n\r\nconst saveShipper = (shipper: OrderShipper) => async (dispatch: Dispatch<ShipperAction>) => {\r\n  dispatch(loadingShipper());\r\n  const response = await api.post('/shipper',\r\n    {\r\n      shipper_name: shipper.shipperName,\r\n      shipper_link: shipper.trackingLink,\r\n      shipper_id: 0,\r\n      delete_flag: false\r\n    });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ShipperResponse\r\n    dispatch(successShipper(res.message || ''));\r\n  } else {\r\n    const res = response as ShipperResponse\r\n    dispatch(errorShipper(res.message || ''));\r\n  }\r\n}\r\n\r\nconst getShippers = () => async (dispatch: Dispatch<ShipperAction>) => {\r\n  dispatch(loadingShipper());\r\n\r\n  const response = await api.get('/shipper');\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as ShipperResponse;\r\n    dispatch(setShipper(res.data || []));\r\n  } else {\r\n    const res = response as ShipperResponse;\r\n    dispatch(errorShipper(res.message || ''))\r\n  }\r\n}\r\n\r\nconst updateShipper = (shipper: OrderShipper, delete_flag= false) => async (dispatch: Dispatch<ShipperAction>) => {\r\n  dispatch(loadingShipper());\r\n\r\n  const response = await api.post('/shipper', {\r\n    shipper_name: shipper.shipperName,\r\n    shipper_link: shipper.trackingLink,\r\n    shipper_id: shipper.shipperId,\r\n    delete_flag\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ShipperResponse;\r\n    if(delete_flag){\r\n      dispatch(deleteShipperSuccess([shipper], res.message || ''))\r\n    }else {\r\n      dispatch(updateShipperSuccess([shipper], res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as ShipperResponse\r\n    dispatch(errorShipper(res.message || ''));\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  shipperReducer,\r\n  saveShipper,\r\n  getShippers,\r\n  updateShipper\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { OrderUpdateAdmin } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode, pageSize } from 'appConstants';\r\n\r\nexport interface ShipmentAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: OrderUpdateAdmin;\r\n};\r\n\r\ninterface ShipmentResponse {\r\n  message?: string;\r\n  data?: OrderUpdateAdmin;\r\n};\r\n\r\nexport interface Shipment {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _hasMoreOrders?: boolean;\r\n  readonly message?: string;\r\n  readonly data?: OrderUpdateAdmin;\r\n};\r\n\r\nenum Actions{\r\n  LOADING_SHIPMENT= 'LOADING_SHIPMENT',\r\n  SUCCESS_SHIPMENT= 'SUCCESS_SHIPMENT',\r\n  ERROR_SHIPMENT= 'ERROR_SHIPMENT',\r\n};\r\n\r\nconst loadingShipment= (data: OrderUpdateAdmin) => ({\r\n  type: Actions.LOADING_SHIPMENT,\r\n  data\r\n});\r\n\r\nconst successShipment= (data: OrderUpdateAdmin, message: string) => ({\r\n  type: Actions.SUCCESS_SHIPMENT,\r\n  data,\r\n  message,\r\n});\r\n\r\nconst errorShipment= (message: string) => ({\r\n  type: Actions.ERROR_SHIPMENT,\r\n  message,\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _hasMoreOrders: false,\r\n  message: '',\r\n  data:{}\r\n} as Shipment\r\n\r\nconst shipmentReducer = (state= initialState, action: ShipmentAction): Shipment => {\r\n  switch(action.type){\r\n    case Actions.LOADING_SHIPMENT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: true,\r\n        data: action.data,\r\n      }\r\n    case Actions.SUCCESS_SHIPMENT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.ERROR_SHIPMENT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        message: action.message,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n/** Thunk */\r\n\r\nconst updateOrderAdmin = (orderUpdate: OrderUpdateAdmin, sendTrackingEmail: boolean) => async(dispatch: Dispatch<ShipmentAction>) => {\r\n  dispatch(loadingShipment(orderUpdate));\r\n  const response = await api.post('/shipment',{\r\n    deliveryDate: orderUpdate.deliveryDate,\r\n    orderDetailId: orderUpdate.orderDetailId,\r\n    paymentReturned: orderUpdate.paymentReturned?.toString(),\r\n    returnStatus: orderUpdate.returnStatus?.toString(),\r\n    shipmentId: orderUpdate.shipmentId,\r\n    shipper: orderUpdate.shipper?.toString(),\r\n    shippingDate: orderUpdate.shippingDate,\r\n    trackingNumber: orderUpdate.trackingNumber?.toString() || '',\r\n    customerEmail: orderUpdate.customerEmail,\r\n    orderNumber: orderUpdate.orderNumber,\r\n    customerName: orderUpdate.customerName,\r\n    sendTrackingEmail\r\n  } as OrderUpdateAdmin);\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as ShipmentResponse;\r\n    dispatch(successShipment(orderUpdate, res.message|| ''));\r\n  } else {\r\n    const res = response as ShipmentResponse;\r\n    dispatch(errorShipment(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  shipmentReducer,\r\n  updateOrderAdmin\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { ProductItem } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface RelatedProductAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\ninterface RelatedProductResponse {\r\n   message?: string;\r\n   data?: ProductItem[];\r\n}\r\n\r\nexport interface RelatedProduct {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_RELATED_PRODUCT= 'LOADING_RELATED_PRODUCT',\r\n  SUCCESS_RELATED_PRODUCT= 'SUCCESS_RELATED_PRODUCT',\r\n  ERROR_RELATED_PRODUCT= 'ERROR_RELATED_PRODUCT',\r\n  SET_RELATED_PRODUCT= 'SET_RELATED_PRODUCT',\r\n}\r\n\r\nconst loadingRelatedProduct= () => ({\r\n  type: Actions.LOADING_RELATED_PRODUCT\r\n});\r\n\r\nconst successRelatedProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_RELATED_PRODUCT,\r\n  message\r\n});\r\n\r\nconst errorRelatedProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_RELATED_PRODUCT,\r\n  message\r\n});\r\n\r\nconst setRelatedProduct= (data: ProductItem[]) => ({\r\n  type: Actions.SET_RELATED_PRODUCT,\r\n  data\r\n});\r\n\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as RelatedProduct\r\n\r\n\r\nconst relatedProductReducer = (state= initialState, action: RelatedProductAction): RelatedProduct => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_RELATED_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_RELATED_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_RELATED_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_RELATED_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/**Thunk */\r\n\r\n\r\nconst getRelatedProduct= (subcategoryId: number, productId: number) => async (dispatch: Dispatch<RelatedProductAction>) => {\r\n  dispatch(loadingRelatedProduct());\r\n\r\n  const response = await api.post('/relatedproducts',{\r\n    subcategoryId,\r\n    productId\r\n  });\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as RelatedProductResponse;\r\n    dispatch(setRelatedProduct(res.data || []))\r\n  } else {\r\n    const res = response as RelatedProductResponse;\r\n    dispatch(errorRelatedProduct(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  relatedProductReducer,\r\n  getRelatedProduct\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { ProductItem } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface TrendingProductAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\ninterface TrendingProductResponse {\r\n   message?: string;\r\n   data?: ProductItem[];\r\n}\r\n\r\nexport interface TrendingProduct {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_TRENDING_PRODUCT= 'LOADING_TRENDING_PRODUCT',\r\n  SUCCESS_TRENDING_PRODUCT= 'SUCCESS_TRENDING_PRODUCT',\r\n  ERROR_TRENDING_PRODUCT= 'ERROR_TRENDING_PRODUCT',\r\n  SET_TRENDING_PRODUCT= 'SET_TRENDING_PRODUCT',\r\n}\r\n\r\nconst loadingTrendingProduct= () => ({\r\n  type: Actions.LOADING_TRENDING_PRODUCT\r\n});\r\n\r\nconst successTrendingProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_TRENDING_PRODUCT,\r\n  message\r\n});\r\n\r\nconst errorTrendingProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_TRENDING_PRODUCT,\r\n  message\r\n});\r\n\r\nconst setTrendingProduct= (data: ProductItem[]) => ({\r\n  type: Actions.SET_TRENDING_PRODUCT,\r\n  data\r\n});\r\n\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as TrendingProduct\r\n\r\n\r\nconst trendingProductReducer = (state= initialState, action: TrendingProductAction): TrendingProduct => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_TRENDING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_TRENDING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_TRENDING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_TRENDING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/**Thunk */\r\n\r\n\r\nconst getTrendingProduct= () => async (dispatch: Dispatch<TrendingProductAction>) => {\r\n  dispatch(loadingTrendingProduct());\r\n\r\n  const response = await api.get('/trendinglatest?type=2');\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as TrendingProductResponse;\r\n    dispatch(setTrendingProduct(res.data || []))\r\n  } else {\r\n    const res = response as TrendingProductResponse;\r\n    dispatch(errorTrendingProduct(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  trendingProductReducer,\r\n  getTrendingProduct\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { ProductItem } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface LatestProductAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\ninterface LatestProductResponse {\r\n   message?: string;\r\n   data?: ProductItem[];\r\n}\r\n\r\nexport interface LatestProduct {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_LATEST_PRODUCT= 'LOADING_LATEST_PRODUCT',\r\n  SUCCESS_LATEST_PRODUCT= 'SUCCESS_LATEST_PRODUCT',\r\n  ERROR_LATEST_PRODUCT= 'ERROR_LATEST_PRODUCT',\r\n  SET_LATEST_PRODUCT= 'SET_LATEST_PRODUCT',\r\n}\r\n\r\nconst loadingLatestProduct= () => ({\r\n  type: Actions.LOADING_LATEST_PRODUCT\r\n});\r\n\r\nconst successLatestProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_LATEST_PRODUCT,\r\n  message\r\n});\r\n\r\nconst errorLatestProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_LATEST_PRODUCT,\r\n  message\r\n});\r\n\r\nconst setLatestProduct= (data: ProductItem[]) => ({\r\n  type: Actions.SET_LATEST_PRODUCT,\r\n  data\r\n});\r\n\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as LatestProduct\r\n\r\n\r\nconst latestProductReducer = (state= initialState, action: LatestProductAction): LatestProduct => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_LATEST_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_LATEST_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_LATEST_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_LATEST_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/**Thunk */\r\n\r\n\r\nconst getLatestProduct= () => async (dispatch: Dispatch<LatestProductAction>) => {\r\n  dispatch(loadingLatestProduct());\r\n\r\n  const response = await api.get('/trendinglatest?type=1');\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as LatestProductResponse;\r\n    dispatch(setLatestProduct(res.data || []))\r\n  } else {\r\n    const res = response as LatestProductResponse;\r\n    dispatch(errorLatestProduct(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  latestProductReducer,\r\n  getLatestProduct\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { Search as ProductSearch } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode, pageSize } from 'appConstants';\r\n\r\nexport interface SearchAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductSearch;\r\n};\r\n\r\ninterface SearchResponse {\r\n  message?: string;\r\n  data?: ProductSearch;\r\n};\r\n\r\nexport interface Search {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductSearch;\r\n};\r\n\r\nenum Actions{\r\n  LOADING_SEARCH= 'LOADING_SEARCH',\r\n  SET_SEARCH= 'SET_SEARCH',\r\n  ERROR_SEARCH= 'ERROR_SEARCH',\r\n};\r\n\r\nconst loadingSearch= (data: ProductSearch) => ({\r\n  type: Actions.LOADING_SEARCH,\r\n  data\r\n});\r\n\r\nconst setSearch= (data: ProductSearch) => ({\r\n  type: Actions.SET_SEARCH,\r\n  data,\r\n});\r\n\r\nconst errorSearch= (message: string) => ({\r\n  type: Actions.ERROR_SEARCH,\r\n  message,\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:{}\r\n} as Search\r\n\r\nconst searchReducer = (state= initialState, action: SearchAction): Search => {\r\n  switch(action.type){\r\n    case Actions.LOADING_SEARCH:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: true,\r\n        data: action.data,\r\n      }\r\n    case Actions.SET_SEARCH:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.ERROR_SEARCH:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        message: action.message,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n\r\n\r\nexport {\r\n  searchReducer,\r\n  setSearch\r\n}","import { Action } from \"redux\";\r\nimport { CustomerShippment as CustomerShippmentType } from \"types\";\r\n\r\nexport interface CustomerShippmentAction extends Action {\r\n  readonly data?: CustomerShippmentType\r\n}\r\n\r\nexport interface CustomerShippment {\r\n  readonly data?: CustomerShippmentType;\r\n}\r\n\r\nconst initialState = {\r\n  data: {\r\n    shippmentPrice: ''\r\n  }\r\n} as CustomerShippment;\r\n\r\nenum Actions {\r\n  SET_SHIPPING_PRICE = 'SET_SHIPPING_PRICE',\r\n}\r\n\r\nconst setShippingPrice = (data: CustomerShippmentType) => ({\r\n  type: Actions.SET_SHIPPING_PRICE,\r\n  data\r\n});\r\n\r\nconst customerShippmentReducer = (state = initialState, action: CustomerShippmentAction): CustomerShippment => {\r\n  switch(action.type){\r\n    case Actions.SET_SHIPPING_PRICE:\r\n      return{\r\n        ...state,\r\n        data:{\r\n          shippmentPrice: action.data?.shippmentPrice || ''\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport {\r\n  customerShippmentReducer,\r\n  setShippingPrice\r\n}","import { createStore, combineReducers, Store, applyMiddleware, compose, Action } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport { userInformationReducer, UserInformation, UserInformationAction } from './UserInformation';\r\nimport { userLoginReducer, UserLoginRegister } from './Login';\r\nimport { userSettingsReducer, UserSetting } from './UserSettings';\r\nimport { Colour, colourReducer, ColourAction } from './Colour';\r\nimport { sizeReducer, Size, SizeAction } from './Size';\r\nimport { SubCategory, subCategoryReducer, SubCategoryAction } from './SubCategory';\r\nimport { Coupon, couponReducer, CouponAction } from './Coupon';\r\nimport { Product, productReducer, ProductAction } from './Product';\r\nimport { ProductCount, productCountReducer, ProductCountAction } from './ProductCount';\r\nimport { Cart, cartReducer, CartAction } from './Cart';\r\nimport { Checkout, checkoutReducer, CheckoutAction } from './Checkout';\r\nimport { UserLocation, userLocationReducer, UserLocationAction } from './UserLocation';\r\nimport { CustomerOrders, customerOrdersReducer, CustomerOrderAction } from './Order';\r\nimport { Shipper, shipperReducer, ShipperAction } from './Shipper';\r\nimport { Shipment, shipmentReducer, ShipmentAction } from './Shipment';\r\nimport { relatedProductReducer, RelatedProduct, RelatedProductAction } from './RelatedProducts';\r\nimport { TrendingProduct, trendingProductReducer, TrendingProductAction } from './TrendingProducts';\r\nimport { LatestProduct, latestProductReducer, LatestProductAction } from './LatestProducts';\r\nimport { searchReducer, SearchAction, Search } from './Search';\r\nimport { CustomerShippment, customerShippmentReducer, CustomerShippmentAction } from './CustomerShippment';\r\n\r\n\r\nexport type AppState = {\r\n  user: UserInformation;\r\n  userLogin: UserLoginRegister;\r\n  userSettings: UserSetting;\r\n  colour: Colour;\r\n  size: Size;\r\n  subCategory: SubCategory;\r\n  coupon: Coupon;\r\n  product: Product;\r\n  productCount: ProductCount;\r\n  cart: Cart;\r\n  checkout: Checkout;\r\n  userLocation: UserLocation;\r\n  customerOrders: CustomerOrders;\r\n  shipper: Shipper;\r\n  shipment: Shipment;\r\n  relatedProduct: RelatedProduct;\r\n  trendingProduct: TrendingProduct;\r\n  latestProduct: LatestProduct;\r\n  search: Search;\r\n  customerShippment: CustomerShippment\r\n}\r\n\r\nconst reducers = {\r\n  user: userInformationReducer,\r\n  userLogin: userLoginReducer,\r\n  userSettings: userSettingsReducer,\r\n  colour: colourReducer,\r\n  size: sizeReducer,\r\n  subCategory: subCategoryReducer,\r\n  coupon: couponReducer,\r\n  product: productReducer,\r\n  productCount: productCountReducer,\r\n  cart: cartReducer,\r\n  checkout: checkoutReducer,\r\n  userLocation: userLocationReducer,\r\n  customerOrders: customerOrdersReducer,\r\n  shipper: shipperReducer,\r\n  shipment: shipmentReducer,\r\n  relatedProduct: relatedProductReducer,\r\n  trendingProduct: trendingProductReducer,\r\n  latestProduct: latestProductReducer,\r\n  search: searchReducer,\r\n  customerShippment: customerShippmentReducer,\r\n};\r\n\r\ninterface AppActions {\r\n  user: UserInformationAction;\r\n  colour: ColourAction;\r\n  size: SizeAction;\r\n  subcategory: SubCategoryAction;\r\n  coupon: CouponAction;\r\n  product: ProductAction;\r\n  productCount: ProductCountAction;\r\n  cart: CartAction;\r\n  checkout: CheckoutAction;\r\n  userLocation: UserLocationAction;\r\n  customerOrders: CustomerOrderAction;\r\n  shipper: ShipperAction;\r\n  shipment: ShipmentAction;\r\n  relatedProduct: RelatedProductAction;\r\n  trendingProduct: TrendingProductAction;\r\n  latestProduct: LatestProductAction;\r\n  search: SearchAction;\r\n  customerShippment: CustomerShippmentAction;\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: Function;\r\n    store: Store<AppState>;\r\n  }\r\n};\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore<AppState, Action<AppActions>, any, any>(\r\n  combineReducers(reducers), \r\n  composeEnhancers(applyMiddleware(thunkMiddleware)\r\n  ));\r\n\r\nexport { store };\r\nexport * from './UserInformation';\r\nexport * from './Login';\r\nexport * from './UserSettings';\r\nexport * from './Colour';\r\nexport * from './Size';\r\nexport * from './SubCategory';\r\nexport * from './Coupon';\r\nexport * from './Product';\r\nexport * from './ProductCount';\r\nexport * from './Cart';\r\nexport * from './Checkout';\r\nexport * from './UserLocation';\r\nexport * from './Order';\r\nexport * from './Shipper';\r\nexport * from './Shipment';\r\nexport * from './RelatedProducts';\r\nexport * from './TrendingProducts';\r\nexport * from './LatestProducts';\r\nexport * from './CustomerShippment';","import React from 'react';\r\n\r\ninterface Props {\r\n  _isError: boolean,\r\n  _isSuccess: boolean,\r\n  message?: string\r\n}\r\n\r\nconst NotificationContainer : React.FunctionComponent<Props> = (props: Props) => {\r\n  const { \r\n    _isError,\r\n    _isSuccess,\r\n    message\r\n  } = props;\r\n  return (\r\n    <>\r\n    {\r\n      _isError &&\r\n      <div className=\"login-error-message\">\r\n        <span className=\"uk-notification-message-danger\"> {message} </span>\r\n      </div>\r\n    }\r\n    {\r\n      _isSuccess &&\r\n      <div className=\"login-error-message\">\r\n        <span className=\"uk-notification-message-success\"> {message} </span>\r\n      </div>\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\nexport {\r\n  NotificationContainer\r\n}","import React from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { PayPalButtonProps, PayPalButtonState } from 'types';\r\n\r\ndeclare global {\r\n  interface Window { paypal: any }\r\n}\r\n\r\nclass PayPalButton extends React.Component<PayPalButtonProps, PayPalButtonState> {\r\n  static propTypes = {\r\n      amount: PropTypes.oneOfType([\r\n          PropTypes.number,\r\n          PropTypes.string,\r\n      ]),\r\n      currency: PropTypes.oneOfType([\r\n          PropTypes.number,\r\n          PropTypes.string,\r\n      ]),\r\n      shippingPreference: PropTypes.string,\r\n      onSuccess: PropTypes.func,\r\n      catchError: PropTypes.func,\r\n      onError: PropTypes.func,\r\n      createOrder: PropTypes.func,\r\n      createSubscription: PropTypes.func,\r\n      onApprove: PropTypes.func,\r\n      onCancel: PropTypes.func,\r\n      style: PropTypes.object,\r\n      options: PropTypes.shape({\r\n          clientId: PropTypes.string,\r\n          merchantId: PropTypes.string,\r\n          currency: PropTypes.oneOfType([\r\n              PropTypes.number,\r\n              PropTypes.string,\r\n          ]),\r\n          intent: PropTypes.string,\r\n          commit: PropTypes.oneOfType([\r\n              PropTypes.bool,\r\n              PropTypes.string\r\n          ]),\r\n          vault: PropTypes.oneOfType([\r\n              PropTypes.bool,\r\n              PropTypes.string\r\n          ]),\r\n          component: PropTypes.string,\r\n          disableFunding: PropTypes.string,\r\n          disableCard: PropTypes.string,\r\n          integrationDate: PropTypes.string,\r\n          locale: PropTypes.string,\r\n          buyerCountry: PropTypes.string,\r\n          debug: PropTypes.oneOfType([\r\n              PropTypes.bool,\r\n              PropTypes.string\r\n          ])\r\n      }),\r\n      onButtonReady: PropTypes.func,\r\n  }\r\n\r\n  static defaultProps = {\r\n      style: {},\r\n      options: {\r\n          clientId: \"sb\",\r\n          currency: \"USD\"\r\n      },\r\n      shippingPreference: \"GET_FROM_FILE\",\r\n  }\r\n\r\n  constructor(props: PayPalButtonProps) {\r\n      super(props);\r\n\r\n      this.state = {\r\n          isSdkReady: false,\r\n      };\r\n  }\r\n\r\n  componentDidMount() {\r\n      if (\r\n          typeof window !== \"undefined\" &&\r\n          window !== undefined &&\r\n          window.paypal === undefined\r\n      ) {\r\n          this.addPaypalSdk();\r\n      }\r\n      else if (\r\n          typeof window !== \"undefined\" &&\r\n          window !== undefined &&\r\n          window.paypal !== undefined &&\r\n          this.props.onButtonReady\r\n      ) {\r\n          this.props.onButtonReady();\r\n      }\r\n  }\r\n\r\n  createOrder(data: any, actions: any) {\r\n\r\n      const { currency, options, amount, shippingPreference } = this.props;\r\n\r\n      return actions.order.create({\r\n        purchase_units: [\r\n          {\r\n            amount: {\r\n              currency_code: currency\r\n                ? currency\r\n                : options && options.currency\r\n                ? options.currency\r\n                : \"USD\",\r\n              value: amount && amount.toString()\r\n            }\r\n          }\r\n        ],\r\n        application_context: {\r\n          shipping_preference: shippingPreference\r\n        }\r\n      });\r\n  }\r\n\r\n  onApprove(data: any, actions: any) {\r\n      return actions.order\r\n          .capture()\r\n          .then((details: any) => {\r\n              if (this.props.onSuccess) {\r\n                  return this.props.onSuccess(details, data);\r\n              }\r\n          })\r\n          .catch((err: any) => {\r\n              if (this.props.catchError) {\r\n                  return this.props.catchError(err);\r\n              }\r\n          });\r\n  }\r\n\r\n  onCancel(error:any){\r\n    if(this.props.onCancel){\r\n      this.props.onCancel(error);\r\n    }\r\n\r\n  }\r\n  render() {\r\n      const {\r\n          amount,\r\n          onSuccess,\r\n          createOrder,\r\n          createSubscription,\r\n          onApprove,\r\n          style,\r\n          onCancel,\r\n      } = this.props;\r\n      const { isSdkReady } = this.state;\r\n\r\n      if (\r\n          !isSdkReady &&\r\n          (typeof window === \"undefined\" || window.paypal === undefined)\r\n      ) {\r\n          return null;\r\n      }\r\n\r\n      const Button = window.paypal.Buttons.driver(\"react\", {\r\n          React,\r\n          ReactDOM,\r\n      });\r\n\r\n      const createOrderFn =\r\n          amount && !createOrder\r\n              ? (data: any, actions: any) => this.createOrder(data, actions)\r\n              : (data: any, actions: any) => createOrder && createOrder(data, actions);\r\n\r\n      return (\r\n          <Button\r\n              {...this.props}\r\n              createOrder={createSubscription ? undefined : createOrderFn}\r\n              createSubscription={createSubscription}\r\n              onCancel={\r\n                onCancel ? (error:any) => onCancel(error) : \r\n                (error:any) => this.onCancel(error)}\r\n              onApprove={\r\n                  onSuccess\r\n                      ? (data: any, actions: any) => this.onApprove(data, actions)\r\n                      : (data: any, actions: any) => onApprove && onApprove(data, actions)\r\n              }\r\n              style={style}\r\n          />\r\n      );\r\n  }\r\n\r\n  private addPaypalSdk() {\r\n      const { options, onButtonReady } = this.props;\r\n      const queryParams: string[] = [];\r\n\r\n      // replacing camelCase with dashes\r\n     if(options){\r\n      for (const [key, value] of Object.entries(options)) {\r\n        const name = key.split(/(?=[A-Z])/).join(\"-\").toLowerCase();\r\n        queryParams.push(`${name}=${value}`);\r\n      }\r\n      //   Object.keys(options).forEach(k => {\r\n      //     const name = k.split(/(?=[A-Z])/).join(\"-\").toLowerCase();\r\n      //     queryParams.push(`${name}=${options[k]}`);\r\n      // });\r\n     }\r\n\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?${queryParams.join(\"&\")}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n          this.setState({ isSdkReady: true });\r\n\r\n          if (onButtonReady) {\r\n              onButtonReady();\r\n          }\r\n      };\r\n      script.onerror = () => {\r\n          throw new Error(\"Paypal SDK could not be loaded.\");\r\n      };\r\n  \r\n      document.body.appendChild(script);\r\n  }\r\n}\r\nexport {\r\n  PayPalButton\r\n}","import React, { useEffect, useRef, useState, Dispatch, SetStateAction } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getPayPalOrder, AppState, savePayPalOrder, getCart, defaultCheckout } from 'reducers';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ProductCoupon } from 'types';\r\ndeclare global {\r\n  interface Window { paypal: any,paypalOrderId:any, didPriceChanged: boolean, paypalButton: any }\r\n}\r\n\r\ninterface Props {\r\n  cartTotalPrice: string;\r\n  cartTotalWithShipping: string;\r\n  quantityCount: number;\r\n  isStandard: boolean;\r\n  paymentMode: string;\r\n  setContainerIsCard: Dispatch<SetStateAction<boolean>>;\r\n  cartOrderId:number;\r\n}\r\nconst PayPalPayment : React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const paypalPaymentLoadingRef = useRef<HTMLButtonElement>(null);\r\n  const paypalModalRef = useRef<HTMLDivElement>(null)\r\n  const checkout = useSelector((state: AppState) => state.checkout);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const couponData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);\r\n  const [paypalPaymentMessage, setPaypalPaymentMessage] = useState(\"Please don't close this window while we process your payment.\");\r\n  const [paypalOrderId, setPayPalOrderId] = useState('');\r\n  const [paymentErroredOut, setPaymentErroredOut] = useState(false);\r\n  const [paymentSuccess, setPaymentSuccess] = useState(false);\r\n  const [isCard, setIsCard] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    if(props.paymentMode === 'paypal' && checkout.data && checkout.data.orderId){\r\n      setPayPalOrderId(checkout.data.orderId);\r\n      window.paypalOrderId = checkout.data.orderId\r\n    }\r\n  },[checkout.data]);\r\n\r\n  useEffect(() => {\r\n    if(props.cartTotalPrice !== '0'){\r\n      if (window.paypalButton) {\r\n        window.paypalButton.close();\r\n        delete window.paypalButton;\r\n        setTimeout(()=>{\r\n          history.go(0)\r\n        })\r\n      }\r\n      window.paypalButton = window.paypal.Buttons({\r\n        createOrder: function () {\r\n          if(!window.paypalOrderId){\r\n            if(!window.didPriceChanged){\r\n              togglePaymenModal('c');\r\n            }\r\n            return false;\r\n          } else {\r\n            paypalPaymentLoadingRef.current?.click();\r\n            return window.paypalOrderId;\r\n          }\r\n        },\r\n        onCancel: function (err:any) {\r\n          fundingType('credit');\r\n          window.paypalOrderId = '';\r\n        },\r\n        onApprove:function(data:any,actions:any) {\r\n          togglePaymenModal('b');\r\n          return actions.order.capture().then(function(details:any)  {\r\n            successPaypalPayment(data,details);\r\n           });\r\n        },\r\n        onClick: async function (d: any) {\r\n          window.paypalOrderId = '';\r\n          fundingType(d.fundingSource);\r\n          togglePaymenModal('d');\r\n          await dispatch(getPayPalOrder(props.cartTotalPrice.toString(), props.cartTotalWithShipping.toString(),props.cartOrderId,couponData && couponData[0] && couponData[0].couponId))\r\n        },\r\n        onError: function(data: any){\r\n          console.log('error')\r\n          console.log(data)\r\n        }\r\n      });\r\n      window.paypalButton.render('#paypal-button-container')\r\n    }\r\n    \r\n  },[props.cartTotalPrice,props.cartTotalWithShipping]);\r\n\r\n  useEffect(()=> {\r\n    if(checkout._priceChanged && props.paymentMode === 'paypal') {\r\n      window.didPriceChanged= true;\r\n      setPaypalPaymentMessage(checkout.message || '');\r\n      setTimeout(() => {\r\n        window.didPriceChanged = false;\r\n        history.go(0);\r\n        togglePaymenModal('e');\r\n      },5000);\r\n    }\r\n  },[checkout._priceChanged]);\r\n\r\n  const togglePaymenModal = (tt?:string) => {\r\n    paypalPaymentLoadingRef.current?.click();\r\n  };\r\n\r\n  const fundingType = (funding: string) => {\r\n    console.log(funding)\r\n    if(funding === 'card'){\r\n      setIsCard(true);\r\n      if(window.innerWidth > 959){\r\n        window.scrollTo({\r\n          top: 150,\r\n          behavior: 'smooth'\r\n        })\r\n      }\r\n      props.setContainerIsCard(true);\r\n\r\n    }else {\r\n      if(window.innerWidth > 959){\r\n        window.scrollTo(0,0);\r\n      }\r\n      setTimeout(()=>{\r\n        setIsCard(false);\r\n      props.setContainerIsCard(false)\r\n      },\r\n      1000)\r\n    }\r\n      setPaypalPaymentMessage(\"Please don't close this window while we process your payment.\");\r\n      setPaymentErroredOut(false);\r\n      setPaymentSuccess(false);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if(checkout._isPaymentSucceess){\r\n      setPaymentErroredOut(false);\r\n      setPaymentSuccess(true);\r\n      setPaypalPaymentMessage(checkout.message || \"\");\r\n      setTimeout(() => {\r\n        dispatch(defaultCheckout());\r\n        togglePaymenModal('f');\r\n        history.push('userinformation/orders');\r\n      }, 5000);\r\n    } else if(!checkout._isPaymentSucceess && checkout._isError) {\r\n      setPaymentErroredOut(true);\r\n      setPaymentSuccess(false);\r\n      setPaypalPaymentMessage(checkout.message || \"\");\r\n    }\r\n  },[checkout._isPaymentSucceess,checkout._isError])\r\n  const successPaypalPayment = (orderData: string, paymentData: string) => {\r\n\r\n    dispatch(savePayPalOrder({\r\n      paypalResponse: {\r\n        orderData,\r\n        paymentData\r\n      },\r\n      orderId: props.cartOrderId,\r\n      addressId: userData.data && userData.data.addressId || '',\r\n      quantity: props.quantityCount,\r\n      couponId: couponData && couponData[0] && couponData[0].couponId,\r\n      isStandard: props.isStandard\r\n    }))\r\n  };\r\n\r\n  return(\r\n    <>\r\n      <div id=\"paypal-button-container\"></div>\r\n      <button ref={paypalPaymentLoadingRef} id=\"payment-loading\" uk-toggle=\"target: #paypal-div\" type=\"button\">order</button>\r\n      <div id=\"paypal-div\" uk-modal=\"true; esc-close: false; bg-close: false\">\r\n        <div className=\"uk-modal-dialog uk-modal-body uk-margin-auto-vertical\">\r\n        {\r\n          (paymentSuccess || paymentErroredOut)  &&  <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n        }\r\n        <div ref={paypalModalRef} className=\"uk-modal-body uk-nav-center\">\r\n          <p>{paypalPaymentMessage}</p>\r\n            {\r\n              !paymentSuccess && !paymentErroredOut && <div  uk-spinner=\"true\"></div>\r\n            }\r\n            {\r\n              paymentSuccess && !paymentErroredOut && \r\n              <>\r\n              <span className=\"uk-label uk-label-success\">Redirecting to Orders <div  uk-spinner=\"true\"></div></span>\r\n              </>\r\n            }\r\n            {\r\n              paymentErroredOut && <span className=\"uk-label uk-label-danger\">Payment Failed</span> \r\n            } \r\n        </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport {\r\n  PayPalPayment\r\n}","import React, { useState, useEffect, Dispatch, SetStateAction } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppState, resendOTP } from 'reducers';\r\n\r\ninterface Props{\r\n  showOtpContainer: boolean;\r\n  setEnteredOTP: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\n\r\nconst CashOnDeliveryPayment: React.FunctionComponent<Props> = (props: Props) => {\r\n  const {\r\n    showOtpContainer\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n  const [timeLeft, setTimeLeft] = useState(30);\r\n  const [enteredOTP, setEnteredOTP] = useState('');\r\n  const checkout = useSelector((state: AppState) => state.checkout);\r\n\r\n  useEffect(()=> {\r\n    if(showOtpContainer){\r\n      const timer = setInterval(() => {\r\n        if(timeLeft > 0) {\r\n          setTimeLeft(timeLeft - 1);\r\n        }\r\n      },1000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  });\r\n\r\n  const resendOtpToCustomer = () => {\r\n    dispatch(resendOTP());\r\n    setTimeLeft(30)\r\n  };\r\n  return (\r\n    <section className=\"uk-card-body\">\r\n      <div className=\"uk-grid-small  uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n        <div className=\"uk-width-expand\">\r\n          <div className=\"uk-text-small\">Enter OTP</div>\r\n          {\r\n            timeLeft > 0 && !checkout._isError &&\r\n            <div className=\"uk-text-meta uk-text-small uk-text-danger\">Retry in {timeLeft}sec</div>\r\n          }\r\n        </div>\r\n        <div className=\"uk-text-right\">\r\n          <input \r\n            className=\"uk-input\"\r\n            type=\"text\"\r\n            value={enteredOTP}\r\n            onChange={(e) => {setEnteredOTP(e.currentTarget.value); props.setEnteredOTP(e.currentTarget.value)}}/>\r\n          {\r\n             timeLeft === 0 && !checkout._isError &&\r\n             <a \r\n            className=\"uk-text-meta uk-text-small uk-text-success uk-link-muted\"\r\n            onClick={()=> resendOtpToCustomer()}>Resend OTP</a>\r\n          }\r\n        </div>\r\n      </div>\r\n      {\r\n        checkout._isError && \r\n      <div className=\"uk-text-meta uk-text-small uk-text-danger\">{checkout.message}</div>\r\n      }\r\n      {\r\n        checkout._isFetchCodCodeSuccess && \r\n        <div className=\"login-error-message\">\r\n        <span className=\"uk-notification-message-success uk-text-meta uk-text-small uk-text-success\"> {checkout.message} </span>\r\n      </div>\r\n      }\r\n      \r\n    </section>\r\n  )\r\n}\r\n\r\nexport {\r\n  CashOnDeliveryPayment\r\n}","import React from 'react';\r\nimport { ProductItem, CustomerCart } from 'types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { getCurrencyIcon, calculateUserDiscount, showINRUSD } from 'services';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, UserLocation, Cart, addUpdateCart } from 'reducers';\r\n\r\ninterface Props {\r\n  productList: ProductItem[]\r\n}\r\n\r\nconst QuickProductList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n\r\n  const addToCart = (product: ProductItem)=> {\r\n    if(!userData.data?.userId){\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: product.productDetailId,\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: showINRUSD(userLocation.data || 'IN', product),\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, false))\r\n    } else {\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: '0',\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: '0',\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, true))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <div uk-slider=\"finite: true\">\r\n        <div className=\"uk-grid-small uk-flex-middle uk-margin-bottom\" uk-grid=\"true\">\r\n          <h2 className=\"uk-width-expand uk-text-center uk-text-left@s\">Related Products</h2>\r\n          <div className=\"uk-visible@s\">\r\n            <a className=\"tm-slidenav\" href=\"#\" uk-slider-item=\"previous\" uk-slidenav-previous=\"true\"></a>\r\n            <a className=\"tm-slidenav\" href=\"#\" uk-slider-item=\"next\" uk-slidenav-next=\"true\"></a>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n          <div className=\"uk-position-relative\">\r\n            <div className=\"uk-slider-container\">\r\n              <div className=\"uk-slider-items uk-grid-collapse uk-child-width-custom tm-products-grid\">\r\n                {\r\n                  props.productList.map((product, index) => {\r\n                    return (\r\n                      <article key={index} className=\"tm-product-card\">\r\n                        <div className=\"tm-product-card-media\">\r\n                          <div className=\"tm-ratio tm-ratio-4-3\">\r\n                            <a className=\"tm-media-box\" onClick={() => {window.scrollTo({top:0, behavior:'smooth'}); history.push('/productDetails/' + product.productId)}}>\r\n                              <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + product.imagePaths} alt={product.imageNames} /></figure>\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"tm-product-card-body\">\r\n                          <div className=\"tm-product-card-info\">\r\n                            <div className=\"uk-text-meta uk-margin-xsmall-bottom\">{product.productCategoryName}</div>\r\n                            <h3 className=\"tm-product-card-title\"><a className=\"uk-link-heading\" onClick={() => history.push('/productDetails/' + product.productId)}>{product.name}</a></h3>\r\n                          </div>\r\n                          <div className=\"tm-product-card-shop\">\r\n                            <div className=\"tm-product-card-prices\">\r\n                              {\r\n                                userData.data?.discount && userData.data?.discount !== '0' &&\r\n                                <del className=\"uk-text-meta\">{getCurrencyIcon(userLocation.data || 'IN')} {showINRUSD(userLocation.data || 'IN', product)}</del>\r\n                              }\r\n                              <div className=\"tm-product-card-price\">\r\n                                {getCurrencyIcon(userLocation.data || 'IN')} {calculateUserDiscount(userData.data?.discount || '0', showINRUSD(userLocation.data || 'IN', product))}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"tm-product-card-add\">\r\n                              <button className=\"uk-button uk-button-primary tm-product-card-add-button tm-shine js-add-to-cart\">\r\n                                {\r\n                                  cart._isLoading && <span uk-spinner=\"true\"></span>\r\n                                }\r\n                                {\r\n                                  !cart._isLoading && (\r\n                                    <>\r\n                                      <span className=\"tm-product-card-add-button-icon\" uk-icon=\"cart\" onClick={() => addToCart(product)}></span>\r\n                                      <span className=\"tm-product-card-add-button-text\">add to cart</span>\r\n                                    </>\r\n                                  )\r\n                                }\r\n\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </article>\r\n                    )\r\n                  })\r\n                }\r\n\r\n              </div>\r\n            </div>\r\n            <ul className=\"uk-slider-nav uk-dotnav uk-flex-center uk-margin-top uk-hidden@s\"></ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </section>\r\n  )\r\n}\r\n\r\nexport {\r\n  QuickProductList\r\n}","import React from 'react';\r\n\r\ninterface Props{\r\n  keyIndex: number\r\n}\r\nconst LoadingProductArticle: React.FunctionComponent<Props> = (props: Props) => {\r\n  return (\r\n    <article key={props.keyIndex} className=\"tm-product-card\">\r\n      <div className=\"tm-product-card-media\">\r\n        <div className=\"tm-ratio tm-ratio-4-3\">\r\n          <a className=\"tm-media-box\">\r\n            <figure className=\"tm-media-box-wrap\">\r\n              <div className=\"ph-item\">\r\n                <div className=\"ph-picture\"></div>\r\n              </div>\r\n            </figure>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div className=\"tm-product-card-body\">\r\n        <div className=\"tm-product-card-info\">\r\n          <div className=\"uk-text-meta uk-margin-xsmall-bottom\">\r\n            <div className=\"ph-item\">\r\n              <div>\r\n                <div className=\"ph-row\">\r\n                  <div className=\"ph-col-4\"></div>\r\n                  <div className=\"ph-col-8 empty\"></div>\r\n                  <div className=\"ph-col-6\"></div>\r\n                  <div className=\"ph-col-6 empty\"></div>\r\n\r\n                  <div className=\"ph-col-12 empty\"></div>\r\n                </div>\r\n              </div>\r\n              <div className=\"ph-col-1\">\r\n                <div className=\"ph-avatar\"></div>\r\n              </div>\r\n            </div></div>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport {\r\n  LoadingProductArticle\r\n}","import React, { useEffect } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\n\r\nconst ScrollToTopComponent: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    }\r\n  }, []);\r\n\r\n  return (null);\r\n}\r\n\r\nconst ScrollToTop = withRouter(ScrollToTopComponent);\r\n\r\nexport {\r\n  ScrollToTop\r\n} ","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst ContactUs: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a onClick={()=>history.push('/')}>Home</a></li>\r\n                <li><span>Contacts</span></li>\r\n              </ul>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom\">Contacts</h1>\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n                <section className=\"uk-width-1-1 uk-width-expand@m\">\r\n                  <article className=\"uk-card uk-card-default uk-card-small uk-card-body uk-article tm-ignore-container\">\r\n                    <div className=\"uk-child-width-1-1 uk-child-width-1-2@s uk-margin-top\" uk-grid=\"true\">\r\n                      <section>\r\n                        <h3>Store</h3>\r\n                        <ul className=\"uk-list\">\r\n                          {/* <li>\r\n                            <a className=\"uk-link-heading\" href=\"#\"><span className=\"uk-margin-small-right\" uk-icon=\"receiver\"></span><span className=\"tm-pseudo\">8 800 799 99 99</span></a>\r\n                          </li>\r\n                          <li>\r\n                            <a className=\"uk-link-heading\" href=\"#\"><span className=\"uk-margin-small-right\" uk-icon=\"mail\"></span><span className=\"tm-pseudo\">example@example.com</span></a>\r\n                          </li> */}\r\n                          <li>\r\n                            <div><span className=\"uk-margin-small-right\" uk-icon=\"location\"></span><span>Karol Bagh Market, Delhi</span></div>\r\n                          </li>\r\n                          <li>\r\n                            <div><span className=\"uk-margin-small-right\" uk-icon=\"clock\"></span><span>Daily 10:00–20:00</span></div>\r\n                          </li>\r\n                        </ul>\r\n                      </section>\r\n                      <section>\r\n                        <h3>Feedback</h3>\r\n                        <dl className=\"uk-description-list\">\r\n                          <dt>Support</dt>\r\n                          <dd><a className=\"uk-link-muted\" href=\"mailto:support@basickart.com\">support@basickart.com</a></dd>\r\n                        </dl>\r\n                      </section>\r\n                      {/* <section className=\"uk-width-1-1\">\r\n                        <h2 className=\"uk-text-center\">Contact Us</h2>\r\n                        <form>\r\n                          <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label uk-form-label-required\">Name</div>\r\n                                <input className=\"uk-input\" type=\"text\" required />\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label uk-form-label-required\">Email</div>\r\n                                <input className=\"uk-input\" type=\"email\" required />\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Topic</div>\r\n                                <select className=\"uk-select\">\r\n                                  <option>Customer service</option>\r\n                                  <option>Tech support</option>\r\n                                  <option>Other</option>\r\n                                </select>\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Message</div>\r\n                                <textarea className=\"uk-textarea\"></textarea>\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"uk-text-center\"><button className=\"uk-button uk-button-primary\">Send</button></div>\r\n                          </div>\r\n                        </form>\r\n                      </section> */}\r\n                    </div>\r\n                  </article>\r\n                </section>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  ContactUs\r\n}","import React from 'react';\r\nimport * as Yup from 'yup';\r\n\r\nimport { User } from 'types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { UserInformation as UserInfo, saveUser } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport { CountryCodes } from 'appConstants';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\n\r\ninterface Props {\r\n  user?: UserInfo;\r\n  fromCart? : boolean\r\n};\r\n\r\n\r\nconst UserInformation: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const userData = props.user;\r\n  const isLoading = props.user?._isLoading;\r\n\r\n  const userInformationFormik = useFormik({\r\n    initialValues: {\r\n      firstName: userData?.data?.firstName || '',\r\n      lastName: userData?.data?.lastName || '',\r\n      mobile: userData?.data?.mobile || '',\r\n      dob: userData?.data?.dob || '',\r\n      gender: userData?.data?.gender || '',\r\n      country: userData?.data?.country || CountryCodes.filter(country => country.default)[0].countryCode,\r\n      state: userData?.data?.state || '',\r\n      city: userData?.data?.city || '',\r\n      pincode: userData?.data?.pincode || '',\r\n      addressLineOne: userData?.data?.addressLineOne || '',\r\n      addressLineTwo: userData?.data?.addressLineTwo || '',\r\n      addressLineThree: userData?.data?.addressLineThree || '',\r\n      addressId: userData?.data?.addressId || ''\r\n    },\r\n\r\n    validationSchema: Yup.object({\r\n      firstName: Yup.string().required('Required'),\r\n      mobile: Yup.string().required('Required').matches(/^((\\+)(\\d{1,4}[-]))(\\d{10}){1}?$/, 'Valid Format e.g., +91-9876543210'),\r\n      country: Yup.string().required('Required'),\r\n      state: Yup.string().required('Required'),\r\n      city: Yup.string().required('Required'),\r\n      pincode: Yup.string().required('Required'),\r\n      addressLineOne: Yup.string().required('Required')\r\n    }),\r\n\r\n    onSubmit: (value: User) => {\r\n      dispatch(saveUser({...value, discount: userData?.data?.discount}));\r\n    },\r\n\r\n    enableReinitialize: true\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={userInformationFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        {\r\n          !props.fromCart && <header className=\"uk-card-header\"><h1 className=\"uk-h2\">Personal Information</h1></header>\r\n        }\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Contact</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">First Name <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"firstName\"\r\n                        {...userInformationFormik.getFieldProps(\"firstName\")} />\r\n                      {\r\n                        userInformationFormik.touched.firstName && userInformationFormik.errors.firstName ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.firstName}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Last Name <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"lastName\"\r\n                        {...userInformationFormik.getFieldProps(\"lastName\")} />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Phone Number <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"tel\" id=\"mobile\"\r\n                        {...userInformationFormik.getFieldProps('mobile')} />\r\n                      {\r\n                        userInformationFormik.touched.mobile && userInformationFormik.errors.mobile ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.mobile}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Date of Birth</div>\r\n                      <input className=\"uk-input\" type=\"date\" id=\"dob\"\r\n                        {...userInformationFormik.getFieldProps('dob')} />\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Gender</div>\r\n                      <select className=\"uk-select\" id=\"gender\"\r\n                        {...userInformationFormik.getFieldProps('gender')}>\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"M\">Male</option>\r\n                        <option value=\"F\">Female</option>\r\n                        <option value=\"O\">Other</option>\r\n                      </select>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Address</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Country <span className=\"uk-text-danger\">*</span></div>\r\n                      <select className=\"uk-select\" id=\"country\"\r\n                        {...userInformationFormik.getFieldProps('country')}>\r\n                        {\r\n                          CountryCodes.map((country, index) => {\r\n                            return <option key={index} value={country.countryCode}>{country.name}</option>\r\n                          })\r\n                        }\r\n                      </select>\r\n                      {\r\n                        userInformationFormik.touched.country && userInformationFormik.errors.country ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.country}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">State <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"state\"\r\n                        {...userInformationFormik.getFieldProps('state')} />\r\n                      {\r\n                        userInformationFormik.touched.state && userInformationFormik.errors.state ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.state}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">City <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"city\"\r\n                        {...userInformationFormik.getFieldProps('city')} />\r\n                      {\r\n                        userInformationFormik.touched.city && userInformationFormik.errors.city ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.city}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">PIN code</div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"pincode\"\r\n                        {...userInformationFormik.getFieldProps('pincode')} />\r\n                      {\r\n                        userInformationFormik.touched.pincode && userInformationFormik.errors.pincode ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.pincode}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-1-1\">\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Flat, House no., Building, Company, Apartment  <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"addressLineOne\"\r\n                        {...userInformationFormik.getFieldProps('addressLineOne')} />\r\n                      {\r\n                        userInformationFormik.touched.addressLineOne && userInformationFormik.errors.addressLineOne ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.addressLineOne}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-1-1\">\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Area, Colony, Street, Sector, Village</div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"addressLineTwo\"\r\n                        {...userInformationFormik.getFieldProps('addressLineTwo')} />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-1-1\">\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Landmark</div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"addressLineThree\"\r\n                        {...userInformationFormik.getFieldProps('addressLineThree')} />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          {\r\n            props.user &&\r\n            <NotificationContainer {...props.user}/>\r\n          }\r\n          \r\n          <button disabled={isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              isLoading &&\r\n              <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserInformation\r\n}\r\n","import React, { useState } from 'react';\r\n\r\ninterface Props {\r\n  toggelDetails: Function;\r\n  showSettings: boolean;\r\n  showPersonal: boolean;\r\n  showOrders: boolean;\r\n}\r\n\r\nconst UserNav: React.FunctionComponent<Props> = (props: Props)=> {\r\n\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-1-4@m tm-aside-column user-nave-sticky\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\" uk-sticky=\"offset: 50; bottom: true; width-element: true\">\r\n        <div className=\"uk-card-header\">\r\n          <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div>\r\n              <div className=\"uk-grid-small uk-flex-center\" uk-grid=\"true\">\r\n                <div>\r\n                  <a className=\"uk-button uk-button-default uk-button-small\"><span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: cog; ratio: .75;\"></span><span>Quick Links</span></a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <nav>\r\n            <ul className=\"uk-nav uk-nav-default tm-nav quick-links\">\r\n              <li className={props.showPersonal ? 'uk-active' : ''}>\r\n                <a onClick={(): void => {props.toggelDetails('personal')}}>Personal Information</a>\r\n              </li>\r\n              <li className={props.showOrders ? 'uk-active' : ''}>\r\n                <a onClick={(): void => {props.toggelDetails('orders')}}>Orders</a>\r\n              </li>\r\n              <li className={props.showSettings ? 'uk-active' : ''}>\r\n                <a onClick={(): void => {props.toggelDetails('settings')}}>Settings</a>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { UserNav };","import React from 'react';\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { UserSetting, saveUserSettings } from 'reducers';\r\nimport { useDispatch } from 'react-redux';\r\nimport { UserSettings as UserSettingType } from 'types';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\n\r\ninterface Props {\r\n  user?: UserSetting;\r\n}\r\n\r\nconst UserSettings: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const user = props.user;\r\n  const isLoading = props.user?._isLoading;\r\n  const dispatch = useDispatch();\r\n  const userSettingFormik = useFormik({\r\n    initialValues: {\r\n      emailAddress: user?.data?.emailAddress || '',\r\n      currentPassword: '',\r\n      newPassword: '',\r\n      confirmPassword: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      emailAddress: Yup.string().required('Required'),\r\n      currentPassword: Yup.string().required('Required'),\r\n      newPassword: Yup.string().required('Required'),\r\n      confirmPassword: Yup.string().required('Required').oneOf([Yup.ref('newPassword'), ''], 'Password should match')\r\n    }),\r\n    onSubmit: (value: UserSettingType) => {\r\n      dispatch(saveUserSettings(value));\r\n      userSettingFormik.resetForm();\r\n    },\r\n\r\n    enableReinitialize: true\r\n  });\r\n\r\n\r\n  return (\r\n    <form onSubmit={userSettingFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <header className=\"uk-card-header\"><h1 className=\"uk-h2\">Settings</h1></header>\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Email</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Current Email</div>\r\n                      <input className=\"uk-input\" id=\"emailAddress\" type=\"email\" disabled\r\n                        {...userSettingFormik.getFieldProps('emailAddress')} />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Password</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Current Password</div>\r\n                      <input className=\"uk-input \" id=\"currentPassword\" type=\"password\"\r\n                        {...userSettingFormik.getFieldProps('currentPassword')} />\r\n                      {\r\n                        userSettingFormik.touched.currentPassword && userSettingFormik.errors.currentPassword ? (\r\n                          <span className=\"uk-text-danger\">{userSettingFormik.errors.currentPassword}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">New Password</div>\r\n                      <input className=\"uk-input \" type=\"password\"\r\n                        {...userSettingFormik.getFieldProps('newPassword')} />\r\n                      {\r\n                        userSettingFormik.touched.newPassword && userSettingFormik.errors.newPassword ? (\r\n                          <span className=\"uk-text-danger\">{userSettingFormik.errors.newPassword}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Confirm Password</div>\r\n                      <input className=\"uk-input \" type=\"password\"\r\n                        {...userSettingFormik.getFieldProps('confirmPassword')} />\r\n                      {\r\n                        userSettingFormik.touched.confirmPassword && userSettingFormik.errors.confirmPassword ? (\r\n                          <span className=\"uk-text-danger\">{userSettingFormik.errors.confirmPassword}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n        {\r\n            props.user &&\r\n            <NotificationContainer {...props.user}/>\r\n          }\r\n          <button disabled={isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              isLoading &&\r\n              <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n            }\r\n            <span>update password</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserSettings\r\n}","import React, { useEffect, useState, useRef } from 'react';\r\nimport { CustomerOrders, getCustomerOrders, customerProductReturn, defaulOrderReturn } from 'reducers/Order';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, UserLocation, getShippers, UserInformation } from 'reducers';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { pageSize, serverImagePath, AllowReturn } from 'appConstants';\r\nimport { Order, OrderItems, OrderShipper } from 'types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getCurrencyIcon } from 'services';\r\n\r\nconst Orders: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [hasMoreOrders, setHasMoreOrders] = useState(false);\r\n  const [selectedReason, setSelectedReason] = useState('');\r\n  const [showOrderDetailIndex, setShowOrderDetailIndex] = useState<number[]>([]);\r\n  const [returnOrderDetailId, setReturnOrderDetailId] = useState('');\r\n  const [returnOrderNumber, setReturnOrderNumber] = useState('');\r\n  const [returnProductName, setReturnProductName] = useState('');\r\n  const [showReturnError, setShowReturnError] = useState(false);\r\n  const returnModalRef = useRef<HTMLDivElement>(null);\r\n  const returnButtonRef = useRef<HTMLButtonElement>(null);\r\n  const orders = useSelector<AppState, CustomerOrders>(state => state.customerOrders || []);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const shipperData = useSelector<AppState, OrderShipper[]>(state => state.shipper.data || []);\r\n  const userData = useSelector<AppState, UserInformation>(state => state.user);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCustomerOrders(orders.data?.length || 0, pageSize));\r\n    dispatch(getShippers());\r\n  }, [])\r\n  const fetchNextOrders = () => {\r\n    dispatch(getCustomerOrders(orders.data?.length || 0, pageSize));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (orders._isOrderUpdate && returnModalRef.current?.getBoundingClientRect().top !== 0) {\r\n      const that = returnButtonRef.current;\r\n      setTimeout(() => {\r\n        that?.click();\r\n      }, 1000);\r\n    }\r\n  }, [orders._isOrderUpdate])\r\n\r\n  useEffect(() => {\r\n    setHasMoreOrders(orders._hasMoreOrders || false);\r\n  }, [orders._hasMoreOrders]);\r\n\r\n\r\n  const toggleShowOrderDetails = (orderId: number) => {\r\n    if (showOrderDetailIndex.indexOf(orderId) > -1) {\r\n      setShowOrderDetailIndex(showOrderDetailIndex.filter((id) => id !== orderId))\r\n    } else {\r\n      setShowOrderDetailIndex([...showOrderDetailIndex, orderId]);\r\n    }\r\n  }\r\n\r\n  const getShipmentLink = (shipper?: string, trackingNumber?: string) => {\r\n    if (shipper && trackingNumber) {\r\n      const shipperInfo = shipperData.filter(({ shipperId }) => shipperId === shipper);\r\n      if (shipperInfo[0]) {\r\n        return <a target=\"_blank\" href={shipperInfo[0].trackingLink + trackingNumber}>Track Package</a>\r\n      }\r\n    }\r\n    return 'Order Recived'\r\n  }\r\n\r\n  const checkReturnEligibilty = (deliveryDate: string, categoryId: string) => {\r\n    if(AllowReturn.indexOf(categoryId.toString()) > -1 ){\r\n      const dateDifference = (new Date()).getTime() - (new Date(deliveryDate)).getTime();\r\n      const differenceInDays = dateDifference / (1000 * 3600 * 24);\r\n      return Math.ceil(differenceInDays) <= 30;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const returnOrder = (orderDetailId?: string, reason?: string,\r\n    orderNumber?: string, productName?: string) => {\r\n    if(selectedReason || reason){\r\n      setShowReturnError(false);\r\n      dispatch(customerProductReturn(Number(orderDetailId) || Number(returnOrderDetailId), \r\n        reason||selectedReason,orderNumber || returnOrderNumber,productName || returnProductName, userData.data?.firstName));\r\n    } else {\r\n      setShowReturnError(true);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card  uk-card-small tm-ignore-container\">\r\n        {\r\n          orders.data && orders.data.length === 0 ?\r\n            <div className=\"uk-card uk-card-default uk-grid-collapse uk-child-width-1-1@s uk-margin\" uk-grid=\"true\">\r\n              <div>\r\n                <div className=\"uk-card-body uk-nav-center\">\r\n                  <p>You haven't ordered anything. Start some shopping now !!</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            :\r\n            <InfiniteScroll\r\n              dataLength={orders.data && orders.data.length || 0}\r\n              next={fetchNextOrders}\r\n              hasMore={hasMoreOrders}\r\n              loader={\r\n                <div style={{ textAlign: \"center\", marginTop: \"10px\" }}>\r\n                  <h4>Loading...</h4>\r\n                </div>\r\n              }\r\n              endMessage={\r\n                <p style={{ textAlign: \"center\" }}>\r\n                  <b>That's all for now !</b>\r\n                </p>\r\n              }\r\n            >\r\n              {\r\n                orders && orders.data &&\r\n                orders.data.map((order: Order, index: number) => {\r\n                  return (\r\n                    <div key={index} className=\"uk-card uk-card-hover uk-card-default uk-width-1-1@m\">\r\n                      <div className=\"uk-card-header\">\r\n                        <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                          <div className=\"uk-width-expand\">\r\n                            <div className=\"uk-float-left\">\r\n                              <h3 className=\"uk-card-title uk-margin-remove-bottom\">#{order.orderNumber}</h3>\r\n                              <p className=\"uk-text-meta uk-margin-remove-top\"><time>Ordered on {order.paymentDate.split(' ')[0]}</time></p>\r\n                            </div>\r\n                            <p className=\"uk-text-normal uk-margin-remove-top uk-float-right\"><time>Amount Paid: {getCurrencyIcon(userLocation.data || 'IN')} {order.totalPrice}</time></p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {\r\n                        showOrderDetailIndex.indexOf(Number(order.orderId)) === -1 &&\r\n                        <div className=\"uk-card uk-grid-collapse uk-child-width-1-3@s uk-margin uk-margin-remove-top\" uk-grid=\"true\">\r\n                          <div className=\"uk-card-media-left\">\r\n                            <div className=\"tm-ratio tm-ratio-16-9\">\r\n                              <a className=\"tm-media-box\" onClick={() => history.push('/productDetails/' + order.orderItems[0].productId)}>\r\n                                <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + order.orderItems[0].productImage} alt={order.orderItems[0].productImage} /> </figure>\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"uk-card-body\">\r\n                              {/* <h3 className=\"uk-card-title\">Media Left</h3> */}\r\n                              <ul className=\"uk-list\">\r\n                                <li>Product : <a onClick={() => history.push('/productDetails/' + order.orderItems[0].productId)}>{order.orderItems[0].productName}</a></li>\r\n                                <li>Quantity: {order.orderItems[0].quantity}</li>\r\n                                <li>Price: {getCurrencyIcon(userLocation.data || 'IN')} {order.orderItems[0].productPrice}</li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"uk-card-body\">\r\n                              {\r\n                                (order.orderItems[0].shipmentDetails?.returnStatus ||\r\n                                  order.orderItems[0].shipmentDetails?.paymentReturned) ?\r\n                                  <ul className=\"uk-list\">\r\n                                    {\r\n                                      order.orderItems[0].shipmentDetails?.paymentReturned === 'Yes' ?\r\n                                        <li>Return Status: <span className=\"uk-label uk-label-success\">Retured</span></li>\r\n                                        : order.orderItems[0].shipmentDetails?.paymentReturned === 'No' ?\r\n                                        <li>Return Status: <span className=\"uk-label uk-label-danger\">Declined</span></li>\r\n                                        : <li>Return Status: <span className=\"uk-label uk-label-warning\">{order.orderItems[0].shipmentDetails?.returnStatus}</span></li>\r\n                                    }\r\n                                  </ul>\r\n                                  :\r\n                                  order.orderItems[0].shipmentDetails?.deliveryDate ?\r\n                                    <ul className=\"uk-list\">\r\n                                      <li>Status : <span className=\"uk-label uk-label-success\">Delivered</span></li>\r\n                                      <li>Delivery Date: <span>{order.orderItems[0].shipmentDetails?.deliveryDate}</span></li>\r\n                                      {\r\n                                        checkReturnEligibilty(order.orderItems[0].shipmentDetails?.deliveryDate, order.orderItems[0].categoryId) &&\r\n                                        <li><button className=\"uk-button uk-button-primary uk-button-small\" uk-toggle=\"target: #return-modal\" \r\n                                        onClick={() => {\r\n                                          setSelectedReason('');\r\n                                          dispatch(defaulOrderReturn());\r\n                                          setReturnOrderDetailId(order.orderItems[0].orderDetailId);\r\n                                          setReturnProductName(order.orderItems[0].productName);\r\n                                          setReturnOrderNumber(order.orderNumber);\r\n                                        }}>Return</button></li>\r\n                                      }\r\n                                    </ul>\r\n                                    :\r\n                                    <ul className=\"uk-list\">\r\n                                      <li>Status : {getShipmentLink(order.orderItems[0].shipmentDetails?.shipper, order.orderItems[0].shipmentDetails?.trackingNumber)}</li>\r\n                                      <li>Shipment Date: <span>{order.orderItems[0].shipmentDetails?.shippingDate ? order.orderItems[0].shipmentDetails?.shippingDate : 'Awaited'}</span></li>\r\n                                      <li>\r\n                                        <button className=\"uk-button uk-button-primary uk-button-small\" \r\n                                          disabled={orders._isLoading}\r\n                                          {...(order.orderItems[0].shipmentDetails?.shippingDate && 'uk-toggle=\"target: #return-modal\"')}\r\n                                          onClick={() => { \r\n                                            if(order.orderItems[0].shipmentDetails?.shippingDate){\r\n                                              setSelectedReason('');\r\n                                              dispatch(defaulOrderReturn())\r\n                                              setReturnOrderDetailId(order.orderItems[0].orderDetailId);\r\n                                              setReturnProductName(order.orderItems[0].productName);\r\n                                              setReturnOrderNumber(order.orderNumber);\r\n                                            } else {\r\n                                              setSelectedReason('Order Canceled before shipping');\r\n                                               setReturnOrderDetailId(order.orderItems[0].orderDetailId);\r\n                                               setReturnProductName(order.orderItems[0].productName);\r\n                                               setReturnOrderNumber(order.orderNumber);\r\n                                               returnOrder(order.orderItems[0].orderDetailId,\r\n                                                'Order Canceled before shipping',order.orderNumber,order.orderItems[0].productName);\r\n                                            }\r\n                                            \r\n                                        }}>\r\n                                          {\r\n                                                        orders._isLoading &&  <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n                                                      }\r\n                                          {order.orderItems[0].shipmentDetails?.shippingDate ? 'Return' : 'Cancel'}\r\n                                        </button></li>\r\n                                    </ul>\r\n                              }\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      }\r\n                      {\r\n                        order.orderItems.length > 1 &&\r\n                        <ul uk-accordion=\"true\">\r\n                          <li>\r\n                            <a\r\n                              className=\"uk-accordion-title uk-nav-center uk-padding-bottom\"\r\n                              onClick={() => toggleShowOrderDetails(Number(order.orderId))}>\r\n                              {showOrderDetailIndex.indexOf(Number(order.orderId)) === -1 ? \"View More\" : \"View Less\"}</a>\r\n                            <div className=\"uk-accordion-content\">\r\n                              {\r\n                                order.orderItems.map((orderItem: OrderItems, index: number) => {\r\n                                  return (\r\n                                    <div key={index} className=\"uk-card uk-grid-collapse uk-child-width-1-3@s uk-margin uk-margin-remove-top\" uk-grid=\"true\">\r\n                                      <div className=\"uk-card-media-left\">\r\n                                        <div className=\"tm-ratio tm-ratio-16-9\">\r\n                                          <a className=\"tm-media-box\" onClick={() => history.push('/productDetails/' + orderItem.productId)}>\r\n                                            <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + orderItem.productImage} alt={orderItem.productImage} /> </figure>\r\n                                          </a>\r\n                                        </div>\r\n                                      </div>\r\n                                      <div>\r\n                                        <div className=\"uk-card-body\">\r\n                                          <ul className=\"uk-list\">\r\n                                            <li>Product : <a onClick={() => history.push('/productDetails/' + orderItem.productId)}>{orderItem.productName}</a></li>\r\n                                            <li>Quantity: {orderItem.quantity}</li>\r\n                                            <li>Price: {getCurrencyIcon(userLocation.data || 'IN')} {orderItem.productPrice}</li>\r\n                                          </ul>\r\n                                        </div>\r\n                                      </div>\r\n                                      <div>\r\n                                        <div className=\"uk-card-body\">\r\n                                          {\r\n                                            (orderItem.shipmentDetails?.returnStatus ||\r\n                                              orderItem.shipmentDetails?.paymentReturned) ?\r\n                                              <ul className=\"uk-list\">\r\n                                                {\r\n                                                  orderItem.shipmentDetails?.paymentReturned === 'Yes' ?\r\n                                                    <li>Return Status: <span className=\"uk-label uk-label-success\">Retured</span></li>\r\n                                                    : orderItem.shipmentDetails?.paymentReturned === 'No' ?\r\n                                                    <li>Return Status: <span className=\"uk-label uk-label-danger\">Declined</span></li>\r\n                                                    : <li>Return Status: <span className=\"uk-label uk-label-warning\">{orderItem.shipmentDetails?.returnStatus}</span></li>\r\n                                                }\r\n                                              </ul>\r\n                                              :\r\n                                              orderItem.shipmentDetails?.deliveryDate ?\r\n                                                <ul className=\"uk-list\">\r\n                                                  <li>Status : <span className=\"uk-label uk-label-success\">Delivered</span></li>\r\n                                                  <li>Delivery Date: <span>{orderItem.shipmentDetails?.deliveryDate}</span></li>\r\n                                                  {\r\n                                                    checkReturnEligibilty(orderItem.shipmentDetails?.deliveryDate, order.orderItems[0].categoryId) &&\r\n                                                    <li><button className=\"uk-button uk-button-primary uk-button-small\" uk-toggle=\"target: #return-modal\"\r\n                                                    onClick={() => { \r\n                                                      setSelectedReason('');\r\n                                                      dispatch(defaulOrderReturn());\r\n                                                      setReturnOrderDetailId(orderItem.orderDetailId);\r\n                                                      setReturnProductName(orderItem.productName);\r\n                                                      setReturnOrderNumber(order.orderNumber);\r\n                                                    }}>Return</button></li>\r\n                                                  }\r\n                                                </ul>\r\n                                                :\r\n                                                <ul className=\"uk-list\">\r\n                                                  <li>Status : {getShipmentLink(orderItem.shipmentDetails?.shipper, orderItem.shipmentDetails?.trackingNumber)}</li>\r\n                                                  <li>Shipment Date: <span>{orderItem.shipmentDetails?.shippingDate ? orderItem.shipmentDetails?.shippingDate : 'Awaited'}</span></li>\r\n                                                  <li>\r\n                                                    <button className=\"uk-button uk-button-primary uk-button-small\"\r\n                                                    disabled={orders._isLoading}\r\n                                                    {...(orderItem.shipmentDetails?.shippingDate && 'uk-toggle=\"target: #return-modal\"')}\r\n                                                      onClick={() => {\r\n                                                        debugger\r\n                                                        if(orderItem.shipmentDetails?.shippingDate){\r\n                                                          setSelectedReason('');\r\n                                                          setReturnOrderDetailId(orderItem.orderDetailId);\r\n                                                          setReturnProductName(orderItem.productName);\r\n                                                          setReturnOrderNumber(order.orderNumber);\r\n                                                          dispatch(defaulOrderReturn())\r\n                                                        } else {\r\n                                                          setSelectedReason('Order Canceled before shipping');\r\n                                                          setReturnOrderDetailId(orderItem.orderDetailId);\r\n                                                          setReturnProductName(orderItem.productName);\r\n                                                          setReturnOrderNumber(order.orderNumber);\r\n                                                          returnOrder(orderItem.orderDetailId,'Order Canceled before shipping',\r\n                                                          order.orderNumber,orderItem.productName);\r\n                                                        }\r\n                                                      }\r\n                                                    }>\r\n                                                      {\r\n                                                        orders._isLoading &&  <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n                                                      }\r\n                                                    {orderItem.shipmentDetails?.shippingDate ? 'Return' : 'Cancel'}</button></li>\r\n                                                </ul>\r\n                                          }\r\n                                        </div>\r\n                                      </div>\r\n\r\n                                    </div>\r\n                                  )\r\n                                })\r\n                              }\r\n                            </div>\r\n                          </li>\r\n                        </ul>\r\n                      }\r\n\r\n                    </div>\r\n                  )\r\n                })\r\n\r\n              }\r\n            </InfiniteScroll>\r\n        }\r\n\r\n      </div>\r\n      <button ref={returnButtonRef} uk-toggle=\"target: #return-modal\" style={{ visibility: \"hidden\" }}></button>\r\n      <div id=\"return-modal\" uk-modal=\"true\">\r\n        <div className=\"uk-modal-dialog uk-modal-body\">\r\n          <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n          <h2 className=\"uk-modal-title\">Thank you for ordering!</h2>\r\n          <p>Please choose the correct reason for return. This information will help us to improve our site</p>\r\n          <div ref={returnModalRef} className=\"uk-form-stacked\">\r\n            <div className=\"uk-margin\">\r\n              <div className=\"uk-form-controls\">\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Defective product')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Defective product\" checked={selectedReason === 'Defective product'} /><span className=\"coupon-message\">Defective product</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Image shown did not match the actual product')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Image shown did not match the actual product\" checked={selectedReason === 'Image shown did not match the actual product'} /><span className=\"coupon-message\">Image shown did not match the actual product</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Quality Issues')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Quality Issues\" checked={selectedReason === 'Quality Issues'} /><span className=\"coupon-message\">Quality Issues</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('I changed my mind')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"I changed my mind\" checked={selectedReason === 'I changed my mind'} /><span className=\"coupon-message\">I changed my mind</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Size or fit issues')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Size or fit issues\" checked={selectedReason === 'Size or fit issues'} /><span className=\"coupon-message\">Size or fit issues</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Other')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Other\" checked={selectedReason === 'Other'} /><span className=\"coupon-message\">Other</span></label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <p><span className=\"uk-badge\">Note:</span> You confirm that the product is unused with the original tags intact.</p>\r\n          {\r\n            showReturnError && \r\n            <p className=\"uk-text-danger\">Please select one of the above reason.</p>\r\n          }\r\n          <p className=\"uk-text-right\">\r\n            {\r\n              !orders._isOrderUpdate ?\r\n                <button disabled={orders._isLoading}\r\n                  className=\"uk-button uk-button-primary\" type=\"button\" onClick={() => returnOrder()}>\r\n                  {\r\n                    orders._isLoading &&\r\n                    <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n                  }\r\n               Confirm Return</button>\r\n                :\r\n                <button disabled={orders._isOrderUpdate}\r\n                  className=\"uk-button uk-label-success\" type=\"button\" >\r\n                  <span uk-icon=\"icon:check\" />\r\n                Return Initaled.</button>\r\n            }\r\n\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  Orders\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { UserInformation, UserNav, UserSettings } from '.';\r\nimport { AppState, getUserSettings } from 'reducers';\r\nimport { Orders } from './Orders';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst UserContainer: React.FunctionComponent = () => {\r\n\r\n  /**\r\n   * Hooks\r\n   */\r\n  const { userTab } = useParams();\r\n  const [showSettings, setShowSettings] = useState(false);\r\n  const [showPersonal, setShowPersonal] = useState(false);\r\n  const [showOrders, setShowOrders] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const userData = useSelector((state: AppState) => state.user);\r\n\r\n  const userSettings = useSelector((state: AppState) => state.userSettings)\r\n  useEffect(() => {\r\n    dispatch(getUserSettings());\r\n    toggelDetails(userTab || '')\r\n  },[]);\r\n\r\n  useEffect(() => {\r\n    toggelDetails(userTab || '')\r\n  },[userTab])\r\n  /**\r\n   * Local Methods\r\n   */\r\n  const toggelDetails = (selected: string): void => {\r\n    if(selected === 'orders') {\r\n      setShowSettings(false);\r\n      setShowPersonal(false);\r\n      setShowOrders(true);\r\n    } else if(selected === 'settings') {\r\n      setShowSettings(true);\r\n      setShowPersonal(false);\r\n      setShowOrders(false);\r\n    } else {\r\n      setShowSettings(false);\r\n      setShowPersonal(true);\r\n      setShowOrders(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main>\r\n        <section className=\"uk-section uk-section-small\">\r\n          <div className=\"uk-container\">\r\n            <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n              <UserNav toggelDetails={toggelDetails}\r\n                showPersonal={showPersonal} \r\n                showSettings={showSettings} \r\n                showOrders={showOrders} />\r\n                {showPersonal && <UserInformation user={userData} />}\r\n                {showSettings &&  <UserSettings user={userSettings}/>}\r\n                {showOrders &&  <Orders/>}\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserContainer\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { Login, CustomerCart } from 'types'\r\nimport { CountryCodes } from 'appConstants';\r\nimport { useDispatch, useSelector, } from 'react-redux';\r\nimport { userLogin, AppState, defaultLoginRegister, userRegister, getUser, getCart, forgetPassword, addUpdateCart } from 'reducers';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst UserLogin: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector<AppState, boolean>(state => state.userLogin._isLoading);\r\n  const isError = useSelector<AppState, boolean>(state => state.userLogin._isError);\r\n  const _isSuccess = useSelector<AppState, boolean>(state => state.userLogin._isSuccess);\r\n  const responseMessage = useSelector<AppState, string | undefined>(state => state.userLogin.message);\r\n  const [loginRedirect, setLoginRedirect] = useState(false)\r\n\r\n  const loginFormik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n      mobile: '+91-',\r\n      isRegistration: false,\r\n      forgetPassword: false,\r\n      countryCode: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .required('Required')\r\n        .email('Invalid email address'),\r\n      password: Yup.string().when('forgetPassword',{\r\n        is: false,\r\n        then: Yup.string()\r\n        .required('Required')\r\n      }),\r\n      mobile: Yup.string().when('isRegistration', {\r\n        is: true,\r\n        then: Yup.string().required('Required')\r\n          .matches(/^((\\+)(\\d{1,4}[-]))(\\d{10}){1}?$/\r\n            , 'Valid Format e.g., +91-9876543210')\r\n      })\r\n    }),\r\n    onSubmit: (values: Login) => {\r\n      if (!loginFormik.values.isRegistration) {\r\n        if(loginFormik.values.forgetPassword){\r\n          dispatch(forgetPassword(values));\r\n        } else {\r\n          dispatch(userLogin({ email: values.email, password: values.password }));\r\n        }\r\n      } else {\r\n        dispatch(userRegister({ email: values.email, password: values.password, mobile: values.mobile }));\r\n      }\r\n    },\r\n  });\r\n\r\n  const onCountryChange = (event: React.FormEvent<HTMLSelectElement>): void => {\r\n    loginFormik.setFieldValue('mobile', event.currentTarget.value + '-')\r\n  };\r\n\r\n  const toggleLoginRegister = (isRegistration: boolean): void => {\r\n    loginFormik.resetForm();\r\n    loginFormik.setFieldValue('isRegistration', isRegistration);\r\n    loginFormik.setFieldValue('forgetPassword', false);\r\n    dispatch(defaultLoginRegister());\r\n  }\r\n\r\n  const onForgetPassword = () => {\r\n    loginFormik.setFieldValue('forgetPassword', true);\r\n  };\r\n\r\n  const addToDBCartAfterLogin = () => {\r\n    const cartData = JSON.parse(localStorage.getItem(\"basicKart-loggedOutCart\") || '[]');\r\n    cartData.forEach((cart: CustomerCart) => {\r\n      dispatch(addUpdateCart({\r\n        productDetailId: cart.productDetailId,\r\n        productQuantity: cart.productQuantity,\r\n        currencyType: cart.currencyType,\r\n        cartId: '0',\r\n        productImage: cart.productImage,\r\n        productImagePath: cart.productImagePath,\r\n        productName: cart.productName,\r\n        subcategory: cart.subcategory,\r\n        productPrice: '0',\r\n        productId: cart.productId,\r\n      },true))\r\n    });\r\n    localStorage.setItem('basicKart-loggedOutCart','[]');\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (loginFormik.values.isRegistration) {\r\n      loginFormik.setFieldValue('isRegistration', false);\r\n      loginFormik.setFieldValue('email', '');\r\n      loginFormik.setFieldValue('password', '');\r\n      loginFormik.touched.password = false;\r\n      loginFormik.touched.email = false;\r\n    } else {\r\n      if (_isSuccess) {\r\n        if(!loginFormik.values.forgetPassword){\r\n          setLoginRedirect(true);\r\n          dispatch(getUser());\r\n          dispatch(getCart());\r\n          addToDBCartAfterLogin();\r\n        }\r\n      }\r\n    }\r\n  }, [_isSuccess])\r\n\r\n  if (loginRedirect) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={loginFormik.handleSubmit} className=\"uk-form-stacked\">\r\n      <main>\r\n        <section className=\"uk-section uk-section-small\">\r\n          <div className=\"uk-container\">\r\n            <div className=\"uk-grid-medium justify-content-center \" uk-grid=\"true\">\r\n              <div className=\"uk-width-1-1 uk-width-1-3@m tm-aside-column user-nave-sticky\">\r\n                <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\" uk-sticky=\"offset: 80; bottom: true;\">\r\n                  <div className=\"uk-card-header\">\r\n                    <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                      <div>\r\n                        <div className=\"uk-grid-small uk-flex-center\" uk-grid=\"true\">\r\n                          <div>\r\n                            <a className={'uk-button uk-button-default uk-button-small ' + (!loginFormik.values.isRegistration ? 'login-register-active-button uk-active' : '')} onClick={(): void => toggleLoginRegister(false)}>\r\n                              <span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: sign-in; ratio: .75;\"></span>\r\n                              <span>Login</span>\r\n                            </a>\r\n                          </div>\r\n                          <div>\r\n                            <a className={'uk-button uk-button-default uk-button-small ' + (loginFormik.values.isRegistration ? 'login-register-active-button uk-active' : '')} onClick={(): void => toggleLoginRegister(true)}>\r\n                              <span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: pencil; ratio: .75;\"></span>\r\n                              <span>Register</span>\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    {\r\n                      isError &&\r\n                      <div className=\"login-error-message\">\r\n                        <span className=\"uk-notification-message-danger\"> {responseMessage} </span>\r\n                      </div>\r\n                    }\r\n                    {\r\n                      _isSuccess &&\r\n                      <div className=\"forget-password-message\">\r\n                        <span className=\"uk-notification-message-success\"> {responseMessage} </span>\r\n                      </div>\r\n                    }\r\n                    <nav>\r\n                      <ul className=\"uk-nav uk-nav-default tm-nav\">\r\n                        <li>\r\n                          <div className=\"uk-card-body\">\r\n                            <div className=\"uk-form-stacked\">\r\n                              <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n                                <fieldset className=\"uk-fieldset\">\r\n                                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                                    <div>\r\n                                      <label>\r\n                                        <div className=\"uk-form-label\">Email</div>\r\n                                        <input className=\"uk-input\" id=\"email\" type=\"text\"\r\n                                          {...loginFormik.getFieldProps('email')} />\r\n                                        {\r\n                                          loginFormik.touched.email && loginFormik.errors.email ? (\r\n                                            <span className=\"uk-text-danger\">{loginFormik.errors.email}</span>\r\n                                          ) : ''\r\n                                        }\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                </fieldset>\r\n                                {loginFormik.values.isRegistration &&\r\n                                  <fieldset className=\"uk-fieldset\">\r\n                                    <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                                      <div className=\"uk-width-1-3 uk-width-1-3@s\">\r\n                                        <label>\r\n                                          <div className=\"uk-form-label\">Country</div>\r\n                                          <select className=\"uk-select\" id=\"countryCode\"\r\n                                            onChange={onCountryChange}>\r\n                                            {\r\n                                              CountryCodes.map((country, index) => {\r\n                                                return <option key={index} value={country.Iso} selected={country.default}>{country.name}</option>\r\n                                              })\r\n                                            }\r\n                                          </select>\r\n                                        </label>\r\n                                      </div>\r\n                                      <div className=\"uk-width-expand\">\r\n                                        <label>\r\n                                          <div className=\"uk-form-label\">Mobile Number</div>\r\n                                          <input className=\"uk-input\" type=\"text\" id=\"mobile\"\r\n                                            {...loginFormik.getFieldProps('mobile')} />\r\n                                          {\r\n                                            loginFormik.touched.mobile && loginFormik.errors.mobile ? (\r\n                                              <span className=\"uk-text-danger\">{loginFormik.errors.mobile}</span>\r\n                                            ) : ''\r\n                                          }\r\n                                        </label>\r\n                                      </div>\r\n                                    </div>\r\n                                  </fieldset>\r\n                                }\r\n                                {\r\n                                  !loginFormik.values.forgetPassword &&\r\n                                  <fieldset className=\"uk-fieldset\">\r\n                                    <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                                      <div>\r\n                                        <label>\r\n                                          <div className=\"uk-form-label\">Password</div>\r\n                                          <input className=\"uk-input\" type=\"password\" id=\"password\"\r\n                                            {...loginFormik.getFieldProps('password')} />\r\n                                          {\r\n                                            loginFormik.touched.password && loginFormik.errors.password ? (\r\n                                              <span className=\"uk-text-danger\">{loginFormik.errors.password}</span>\r\n                                            ) : ''\r\n                                          }\r\n                                        </label>\r\n                                      </div>\r\n                                    </div>\r\n                                  </fieldset>\r\n                                }\r\n\r\n                              </div>\r\n                              {\r\n                                !loginFormik.values.isRegistration &&\r\n                                <div className=\"uk-text-right uk-margin-xsmall-top\">\r\n                                  <a className=\"uk-text-danger\" onClick={() => onForgetPassword()}> Forget Password ?</a>\r\n                                </div>\r\n                              }\r\n\r\n                              <div className=\"uk-card-footer uk-text-center top-border-none\">\r\n                                <button id=\"loginbtn\" disabled={isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                                  {\r\n                                    isLoading &&\r\n                                    <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                                  }\r\n                                  <span>Submit</span>\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </nav>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserLogin\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst MainFooter: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <footer>\r\n      <section className=\"uk-section uk-section-secondary uk-section-small uk-light\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1 uk-child-width-1-4@m\" uk-grid=\"true\">\r\n            <div>\r\n              <a className=\"uk-logo\" href=\"index.html\"><img src=\"/logo.png\" alt=\"Logo\" width=\"150\" /></a>\r\n              <p className=\"uk-text-small\"></p>\r\n              {/* <ul className=\"uk-iconnav\">\r\n                <li><a href=\"#\" title=\"Facebook\" uk-icon=\"facebook\"></a></li>\r\n                <li><a href=\"#\" title=\"Twitter\" uk-icon=\"twitter\"></a></li>\r\n                <li><a href=\"#\" title=\"YouTube\" uk-icon=\"youtube\"></a></li>\r\n                <li><a href=\"#\" title=\"Instagram\" uk-icon=\"instagram\"></a></li>\r\n              </ul> */}\r\n            </div>\r\n            <div>\r\n              <nav className=\"uk-grid-small uk-child-width-1-2\" uk-grid=\"true\">\r\n                <div>\r\n                  <ul className=\"uk-nav uk-nav-default\">\r\n                    <li><a onClick={() => history.push('/product/lingerie')}>Lingerie</a></li>\r\n                    <li><a onClick={() => history.push('/product/footwear')}>Footwear</a></li>\r\n                    <li><a onClick={() => history.push('/product/bindi')}>Bindi</a></li>\r\n                    <li><a href=\"#\">Home Essential</a></li>\r\n                  </ul>\r\n                </div>\r\n                <div>\r\n                  <ul className=\"uk-nav uk-nav-default\">\r\n                    <li><a href=\"#\">About</a></li>\r\n                    <li><a onClick={() => history.push('/contactus')}>Contacts</a></li>\r\n                  </ul>\r\n                </div>\r\n              </nav>\r\n            </div>\r\n            <div>\r\n              <ul className=\"uk-list uk-text-small\">\r\n                {/* <li>\r\n                  <a className=\"uk-link-muted\" href=\"#\"><span className=\"uk-margin-small-right\" uk-icon=\"receiver\"></span><span className=\"tm-pseudo\">8 800 799 99 99</span></a>\r\n                </li> */}\r\n                <li>\r\n                  <a className=\"uk-link-muted\" href=\"mailto:support@basickart.com\"><span className=\"uk-margin-small-right\" uk-icon=\"mail\"></span><span className=\"tm-pseudo\">support@basickart.com</span></a>\r\n                </li>\r\n                {/* <li>\r\n                  <div className=\"uk-text-muted\"><span className=\"uk-margin-small-right\" uk-icon=\"location\"></span><span>Sadar Bazar, Old Delhi</span></div>\r\n                </li>\r\n                <li>\r\n                  <div className=\"uk-text-muted\"><span className=\"uk-margin-small-right\" uk-icon=\"clock\"></span><span>Daily 10:00–21:00</span></div>\r\n                </li> */}\r\n              </ul>\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-margin uk-text-small uk-text-muted\">Technical partner KPWorks</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport {\r\n  MainFooter\r\n};","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { getSubCategory, AppState, SubCategory, getActiveProductCount, Cart, getCart, getUser, getUserLocation, getCustomerProducts, UserLocation, setLoggedCart, defaultUser } from 'reducers';\r\nimport { SubCategories, pageSize } from 'appConstants';\r\nimport { filterSubcategories } from 'services';\r\nimport { ProductSubCategory, Search } from 'types';\r\nimport { MobileNavigation, SideCart } from '.';\r\nimport { setSearch } from 'reducers/Search';\r\n\r\n\r\n\r\nconst Navigation: React.FunctionComponent = () => {\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [cartCount, setCartCount] = useState(0);\r\n  const [enteredSearchText, setEnteredSearchText] = useState('');\r\n  const [cartCountCssFlag, setCartCountCssFlag] = useState(false);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n  const search = useSelector<AppState, Search>(state => state.search.data || {} as Search);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const sideCartRef = useRef<HTMLAnchorElement>(null);\r\n  const mobileNavigationRef = useRef<HTMLButtonElement>(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(getSubCategory());\r\n    dispatch(getActiveProductCount());\r\n    if(localStorage.getItem(\"biktoken\")){\r\n      dispatch(getCart());\r\n      dispatch(getUser());\r\n    }\r\n    dispatch(getUserLocation());\r\n    if(localStorage.getItem(\"basicKart-loggedOutCart\")){\r\n      dispatch(setLoggedCart(JSON.parse(localStorage.getItem(\"basicKart-loggedOutCart\") || '[]')))\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setCartCount(cart.data?.length || 0);\r\n    setCartCountCssFlag(true);\r\n    setTimeout(()=>{\r\n      setCartCountCssFlag(false);\r\n    },400)\r\n  },[cart.data])\r\n\r\n  const searchProduct = (searchText: string) => {\r\n    \r\n      if(searchText === ''){\r\n        setEnteredSearchText('');\r\n      }\r\n      if(\r\n        (search.categoryId && search.categoryId.length >0) ||\r\n        (search.colourId && search.colourId.length >0) ||\r\n        (search.sizeId && search.sizeId.length >0) ||\r\n        (search.subCategoryId && search.subCategoryId.length >0) ||\r\n         search.endPrice || search.startPrice || searchText\r\n      ){\r\n      dispatch(setSearch({\r\n        categoryId: search.categoryId || 0,\r\n        colourId: search.colourId || [],\r\n        currency: userLocation.data || 'IN',\r\n        endPrice: search.endPrice||'',\r\n        sizeId: search.sizeId || [],\r\n        startPrice: search.startPrice || '',\r\n        subCategoryId: search.subCategoryId || [],\r\n        searchText: searchText\r\n      }));\r\n      dispatch(getCustomerProducts(0, pageSize, search.categoryId || 0, search.subCategoryId || [], search.colourId || [], search.sizeId || [], search.startPrice || '', search.endPrice||'', userLocation.data || 'IN', searchText || '' , true));\r\n      history.push('/product/search')\r\n    }\r\n    \r\n  }\r\n  const navigateTo = (event: React.SyntheticEvent ,categoryPath: string, subcategoryPath?: string) => {\r\n    event.preventDefault();\r\n    history.push('/product/'+ categoryPath.toLowerCase() + (subcategoryPath ? '/'+ subcategoryPath.toLowerCase() : ''));\r\n  };\r\n  const getCategoryAndSubCategory = () => {\r\n    return Object.keys(SubCategories).map((key: string, index: number) => {\r\n      return (\r\n        <li key={index}>\r\n          <a onClick={(e) => navigateTo(e,key)}>{key}<span className=\"uk-margin-xsmall-left\" uk-icon=\"icon: chevron-down; ratio: .75;\"></span></a>\r\n          <div\r\n            className=\"uk-navbar-dropdown uk-margin-remove uk-padding-remove-vertical\"\r\n            uk-drop=\"pos: bottom-justify;delay-show: 125;delay-hide: 50;duration: 75;boundary: .tm-navbar-container;boundary-align: true;pos: bottom-justify;flip: x\"\r\n          >\r\n            <div className=\"uk-container uk-container-small uk-margin-top uk-margin-bottom\">\r\n              <ul className=\"uk-nav uk-nav-default uk-column-1-3\">\r\n                {\r\n                  filterSubcategories(subCategories, Number(SubCategories[key])).map((subcategory: ProductSubCategory, index: number) => {\r\n                    return <li key={index}><a onClick={(e) => navigateTo(e,key,subcategory.code)}>{subcategory.code}</a></li>\r\n                  })\r\n                }\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      )\r\n    });\r\n  };\r\n\r\n  const logout = () => {\r\n    dispatch(defaultUser());\r\n    window.localStorage.removeItem('biktoken');\r\n    history.push('/');\r\n  };\r\n  return (\r\n    <header>\r\n      <MobileNavigation mobileNavigationRef={mobileNavigationRef}/>\r\n      <div className=\"uk-navbar-container tm-navbar-container\" uk-sticky=\"cls-active: tm-navbar-container-fixed\">\r\n        <div className=\"uk-container\" uk-navbar=\"true\">\r\n          <div className=\"uk-navbar-left\">\r\n            <button ref={mobileNavigationRef} className=\"uk-navbar-toggle uk-hidden@m\" uk-toggle=\"target: #nav-offcanvas\" uk-navbar-toggle-icon=\"true\"></button>\r\n            <a className=\"uk-navbar-item uk-logo\" onClick={() => history.push('/')}><img src=\"/logo.png\" width=\"67\" alt=\"Logo\" /></a>\r\n            <nav className=\"uk-visible@m\">\r\n              <ul className=\"uk-navbar-nav\">\r\n                {\r\n                  getCategoryAndSubCategory()\r\n                }\r\n                <li><a href=\"#\">About</a></li>\r\n                <li><a onClick={()=> history.push('/contactus')}>Contact</a></li>\r\n                {\r\n                  userData.data?.isAdmin && \r\n                  <li><a onClick={()=>history.push('/admin')}>Admin</a></li>\r\n                }\r\n               \r\n              </ul>\r\n            </nav>\r\n          </div>\r\n          <div className=\"uk-navbar-right\">\r\n            <a className={`${enteredSearchText !== '' ? 'search-color uk-navbar-toggle tm-navbar-button' : 'uk-navbar-toggle tm-navbar-button'}`} href=\"#\" uk-search-icon=\"true\">\r\n            </a>\r\n            <div className=\"uk-navbar-dropdown uk-padding-small uk-margin-remove\" uk-drop=\"mode: click;cls-drop: uk-navbar-dropdown;boundary: .tm-navbar-container;boundary-align: true;pos: bottom-justify;flip: x\">\r\n              <div className=\"uk-container\">\r\n                <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-expand\">\r\n                    <div className=\"uk-search uk-search-navbar uk-width-1-1\">\r\n                      <input className=\"uk-search-input\" type=\"search\" placeholder=\"Search…\"\r\n                        value={enteredSearchText}\r\n                        onChange={(e) => setEnteredSearchText(e.currentTarget.value)}\r\n                        onKeyPress={(e)=> {e.key === 'Enter' &&  searchProduct(e.currentTarget.value)}} />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-width-auto\" onClick={()=>searchProduct('')}><a className=\"uk-navbar-dropdown-close\" uk-close=\"true\"></a></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <a className=\"uk-navbar-item uk-link-muted tm-navbar-button\"  uk-icon=\"user\"></a>\r\n            <div className=\"uk-padding-small uk-margin-remove\" uk-dropdown=\"pos: bottom-right; offset: -10; delay-hide: 200;\" style={{ minWidth: '150px' }}>\r\n              <ul className=\"uk-nav uk-dropdown-nav\">\r\n                <li>\r\n                  <a onClick={() => userData.data?.userId ?  history.push('/userinformation/orders') : history.push('/login')}>Orders</a>\r\n                </li>\r\n                <li><a onClick={()=> userData.data?.userId ? history.push('/userinformation/default') : history.push('/login')}>Personal</a></li>\r\n                <li><a onClick={()=> userData.data?.userId ? history.push('/userinformation/settings'): history.push('/login')}>Settings</a></li>\r\n                <li className=\"uk-nav-divider\"></li>\r\n                {\r\n                   userData.data?.userId ? \r\n                   <li><a onClick={()=> logout()}>Log out</a></li> :\r\n                   <li><a onClick={()=>history.push('/login')}>Login</a></li>\r\n                }\r\n                \r\n              </ul>\r\n            </div>\r\n            <a ref={sideCartRef} className=\"uk-navbar-item uk-link-muted tm-navbar-button\" href=\"#\" uk-toggle=\"target: #cart-offcanvas\">\r\n              <span uk-icon=\"cart\"></span>\r\n              {\r\n                cartCount > 0 &&\r\n                <span className={cartCountCssFlag ? \"uk-badge  cart-popup\" : \"uk-badge \"}>{cartCount}</span>\r\n              }\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <SideCart\r\n      sideCartRef={sideCartRef}\r\n      cartData={cart.data || []}/>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport { Navigation };","import React, { RefObject, useEffect, useState } from 'react';\r\nimport { CustomerCart, ProductCoupon } from 'types';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteCartItem, AppState, UserLocation } from 'reducers';\r\nimport { getCurrencyIcon, calculateUserDiscount, calculateUserDiscountPrice } from 'services';\r\n\r\ninterface Props {\r\n  cartData: CustomerCart[];\r\n  sideCartRef: RefObject<HTMLAnchorElement>\r\n}\r\n\r\nconst SideCart: React.FunctionComponent<Props> = (props: Props) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [mainTotal, setMainTotal] = useState(0);\r\n  const [userDiscountTotal, setUserDiscountTotal] = useState('0');\r\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState('0');\r\n  const [discountedTotal, setDiscountedTotal] = useState('0');\r\n  const [userCouponTotal, setUserCouponTotal] = useState('0');\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const couponData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const {\r\n    cartData,\r\n    sideCartRef\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    let cartPrice = 0;\r\n    cartData.forEach(({ totalPrice }) => {\r\n      cartPrice += Number(totalPrice)\r\n    });\r\n    setMainTotal(cartPrice);\r\n    if (couponData.length === 1) {\r\n      let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString());\r\n      let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString());\r\n      let couponPrice = calculateUserDiscountPrice(couponData[0].value, priceAfterDiscount.toString());\r\n      let priceAfterCoupon = calculateUserDiscount(couponData[0].value || '0', priceAfterDiscount.toString());\r\n      setDiscountedTotal(priceAfterDiscount);\r\n      setUserDiscountTotal(discountPrice);\r\n      setUserCouponTotal(couponPrice);\r\n      setTotalAfterDiscount(priceAfterCoupon);\r\n    } else {\r\n      let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString());\r\n      let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString());\r\n      setUserDiscountTotal(discountPrice);\r\n      setTotalAfterDiscount(priceAfterDiscount);\r\n    }\r\n    // setUserDiscountTotal(calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString()));\r\n    // setTotalAfterDiscount(calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString()))\r\n  }, [cartData, userData.data,couponData])\r\n\r\n  const deleteCart = (cartItem: CustomerCart) => {\r\n    dispatch(deleteCartItem(cartItem, false));\r\n  };\r\n\r\n  return (\r\n    <div id=\"cart-offcanvas\" uk-offcanvas=\"overlay: true; flip: true\">\r\n      <aside className=\"uk-offcanvas-bar uk-padding-remove\">\r\n        <div className=\"uk-card uk-card-default uk-card-small uk-height-1-1 uk-flex uk-flex-column tm-shadow-remove\">\r\n          <header className=\"uk-card-header uk-flex uk-flex-middle\">\r\n            <div className=\"uk-grid-small uk-flex-1\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand\"><div className=\"uk-h3\">Cart</div></div>\r\n              <button className=\"uk-offcanvas-close\" type=\"button\" uk-close=\"true\"></button>\r\n            </div>\r\n          </header>\r\n          <div className=\"uk-card-body cart-scroll-for-non-mobile\">\r\n            <ul className=\"uk-list uk-list-divider\">\r\n              {\r\n                cartData.map((cart: CustomerCart, index: number) => {\r\n                  return (\r\n                    <li key={index} className=\"uk-visible-toggle\">\r\n                      <article>\r\n                        <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                          <div className=\"uk-width-1-4\">\r\n                            <div className=\"tm-ratio tm-ratio-4-3\">\r\n                              <a className=\"tm-media-box\" onClick={() => {history.push('/productDetails/' + cart.productId); sideCartRef.current?.click()}}>\r\n                                <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + cart.productImagePath} alt={cart.productImage} /></figure>\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"uk-width-expand\">\r\n                            <div className=\"uk-text-meta uk-text-xsmall\">{cart.subcategory}</div>\r\n                            <a className=\"uk-link-heading uk-text-small\" onClick={() => {history.push('/productDetails/' + cart.productId); sideCartRef.current?.click()}}>{cart.productName}</a>\r\n                            <div className=\"uk-margin-xsmall uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                              <div className=\"uk-text-bolder uk-text-small\">{getCurrencyIcon(userLocation.data || 'IN')} {cart.totalPrice}</div>\r\n                              {/* <del className=\"uk-text-bolder uk-text-small uk-text-meta\">123</del> */}\r\n                              <div className=\"uk-text-meta uk-text-xsmall\">{cart.productQuantity} × {getCurrencyIcon(userLocation.data || 'IN')} {cart.productPrice}</div>\r\n                            </div>\r\n                          </div>\r\n                          {\r\n                            !userData.data?.userId && \r\n                            <div>\r\n                              <a className=\"uk-icon-link uk-text-danger uk-invisible-hover\"\r\n                              uk-icon=\"icon: close; ratio: .75\"\r\n                              uk-tooltip=\"Remove\"\r\n                              onClick={() => { deleteCart(cart)}}></a>\r\n                            </div>\r\n                          }\r\n                          \r\n                        </div>\r\n                      </article>\r\n                    </li>\r\n                  )\r\n                })\r\n              }\r\n              {\r\n                cartData.length === 0 &&\r\n                <li className=\"uk-visible-toggle\">\r\n                  <article>\r\n                    <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                      <div className=\"uk-width-1-4\">\r\n                        <div className=\"tm-ratio tm-ratio-4-3\">\r\n                          {/* <a className=\"tm-media-box\">\r\n                            <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + cart.productImagePath} alt={cart.productImage} /></figure>\r\n                          </a> */}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"uk-width-expand\">\r\n                        {/* <div className=\"uk-text-meta uk-text-xsmall\">{cart.subcategory}</div> */}\r\n                        <span className=\"uk-link-heading uk-text-small\" >Cart is empty.</span>\r\n                        <div className=\"uk-margin-xsmall uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                          <div className=\"uk-text-bolder uk-text-small\">Add in some good stuff !!</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </article>\r\n                </li>\r\n              }\r\n            </ul>\r\n          </div>\r\n          <footer className=\"uk-card-footer\">\r\n            {\r\n              (userData.data?.discount && userData.data?.discount !== '0' || couponData.length === 1) &&\r\n              <>\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-expand uk-text-muted uk-text-small\">Subtotal</div>\r\n                  <div className=\"uk-text-muted\">{getCurrencyIcon(userLocation.data || 'IN')} {mainTotal}</div>\r\n                </div>\r\n                {\r\n                  userData.data?.discount && userData.data?.discount !== '0' &&\r\n                  <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                    <div className=\"uk-width-expand uk-text-muted uk-text-small\">Discount ({userData.data?.discount}%)</div>\r\n                    <div className=\"uk-text-danger\">- {getCurrencyIcon(userLocation.data || 'IN')} {userDiscountTotal}</div>\r\n                  </div>\r\n                }\r\n              </>\r\n            }\r\n            {\r\n              couponData.length === 1 &&\r\n              <>\r\n                {\r\n                  userData.data?.discount && userData.data?.discount !== '0' &&\r\n                  <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                    <div className=\"uk-width-expand uk-text-muted\">Discounted Total</div>\r\n                    <div>{getCurrencyIcon(userLocation.data || 'IN')} {discountedTotal}</div>\r\n                  </div>\r\n                }\r\n\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-expand uk-text-muted\">Coupon ({couponData[0] && couponData[0].value}%)</div>\r\n                  <div className=\"uk-text-danger\">− {getCurrencyIcon(userLocation.data || 'IN')} {userCouponTotal}</div>\r\n                </div>\r\n              </>\r\n            }\r\n\r\n            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand uk-text-muted uk-h4\">Total</div>\r\n              <div className=\"uk-h4 uk-text-bolder\">{getCurrencyIcon(userLocation.data || 'IN')} {totalAfterDiscount}</div>\r\n            </div>\r\n            <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@m uk-margin-small\" uk-grid=\"true\">\r\n             <div></div>\r\n              <div >\r\n                <button className=\"uk-button  uk-button-primary uk-button-default uk-margin-small uk-width-1-1\"\r\n                  onClick={() => { \r\n                    userData.data?.userId ? history.push('/cart') :  history.push('/login'); sideCartRef.current?.click();}}\r\n                  disabled={mainTotal === 0}\r\n                >\r\n                  Continue\r\n                </button>\r\n              </div>\r\n              {/* <div>\r\n                <button className=\"uk-button uk-button-primary uk-margin-small uk-width-1-1\"\r\n                  onClick={() => { history.push('/checkout') }}\r\n                  disabled={mainTotal === 0}>\r\n                  checkout\r\n                </button>\r\n              </div> */}\r\n            </div>\r\n          </footer>\r\n        </div>\r\n      </aside>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  SideCart\r\n}","import { SubCategories } from 'appConstants';\r\nimport React, { RefObject } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AppState, SubCategory } from 'reducers';\r\nimport { filterSubcategories } from 'services';\r\nimport { ProductSubCategory } from 'types';\r\n\r\ninterface Props{\r\n  mobileNavigationRef: RefObject<HTMLButtonElement>\r\n}\r\n\r\nconst MobileNavigation: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const history = useHistory();\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const navigateTo = (event: React.SyntheticEvent, categoryPath: string, subcategoryPath?: string) => {\r\n    event.preventDefault();\r\n    history.push('/product/' + categoryPath.toLowerCase() + (subcategoryPath ? '/' + subcategoryPath.toLowerCase() : ''));\r\n    props.mobileNavigationRef.current?.click();\r\n  }\r\n\r\n  const getCategoryAndSubCategory = () => {\r\n    return Object.keys(SubCategories).map((key: string, index: number) => {\r\n      return (\r\n        <li className=\"uk-parent\" key={index}>\r\n          <a onClick={(e) => e.preventDefault()}>{key}</a>\r\n          <ul className=\"uk-nav-sub uk-list-divider\">\r\n            {\r\n              filterSubcategories(subCategories, Number(SubCategories[key])).map((subcategory: ProductSubCategory, index: number) => {\r\n                return <li key={index}><a onClick={(e) => navigateTo(e, key, subcategory.code)}>{subcategory.code}</a></li>\r\n              })\r\n            }\r\n            <li className=\"uk-text-center\">\r\n                    <a onClick={(e) => navigateTo(e, key)} className=\"uk-link-muted uk-text-uppercase tm-link-to-all\"><span>entire ranage</span><span uk-icon=\"icon: chevron-right; ratio: .75;\"></span></a>\r\n                  </li>\r\n          </ul>\r\n        </li>\r\n      )\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div id=\"nav-offcanvas\" uk-offcanvas=\"overlay: true\">\r\n      <aside className=\"uk-offcanvas-bar uk-padding-remove\">\r\n        <div className=\"uk-card uk-card-default uk-card-small tm-shadow-remove\">\r\n          <header className=\"uk-card-header uk-flex uk-flex-middle\">\r\n            <div>\r\n              <a className=\"uk-link-muted uk-text-bold\" onClick={(e) => e.preventDefault()}>Basic Kart</a>\r\n              {/* <div className=\"uk-text-xsmall uk-text-muted\" style={{ marginTop: \"-2px\" }}>\r\n                <div>Basic Kart</div>\r\n              </div> */}\r\n            </div>\r\n          </header>\r\n          <nav className=\"uk-card-small uk-card-body\">\r\n            <ul className=\"uk-nav-default uk-nav-parent-icon uk-list-divider\" uk-nav=\"true\">\r\n              {/* <li className=\"uk-parent\">\r\n                <a href=\"#\">Bindi</a>\r\n                <ul className=\"uk-nav-sub uk-list-divider\">\r\n                  <li><a href=\"bindi-category.html\">Fancy</a></li>\r\n                  <li><a href=\"bindi-category.html\">Bridal</a></li>\r\n                  <li><a href=\"bindi-category.html\">Stone</a></li>\r\n                  <li><a href=\"bindi-category.html\">Round</a></li>\r\n                  <li><a href=\"bindi-category.html\">Square</a></li>\r\n                  <li className=\"uk-text-center\">\r\n                    <a className=\"uk-link-muted uk-text-uppercase tm-link-to-all\" href=\"bindi-category.html\"><span>entire ranage</span><span uk-icon=\"icon: chevron-right; ratio: .75;\"></span></a>\r\n                  </li>\r\n                </ul>\r\n              </li> */}\r\n              {getCategoryAndSubCategory()}\r\n              <li><a href=\"#\">About</a></li>\r\n              <li><a onClick={()=> {history.push('/contactus'); props.mobileNavigationRef.current?.click()}}>Contact</a></li>\r\n            </ul>\r\n          </nav>\r\n          {/* <nav className=\"uk-card-body\">\r\n            <ul className=\"uk-iconnav uk-flex-center\">\r\n              <li><a href=\"#\" title=\"Facebook\" uk-icon=\"facebook\"></a></li>\r\n              <li><a href=\"#\" title=\"Twitter\" uk-icon=\"twitter\"></a></li>\r\n              <li><a href=\"#\" title=\"YouTube\" uk-icon=\"youtube\"></a></li>\r\n              <li><a href=\"#\" title=\"Instagram\" uk-icon=\"instagram\"></a></li>\r\n            </ul>\r\n          </nav> */}\r\n        </div>\r\n      </aside>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  MobileNavigation\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { SubProducts } from 'appConstants';\r\n\r\ninterface Props{\r\n  subProductToggle: Function;\r\n  addEditToggle: Function;\r\n}\r\n\r\nconst AdminNav: React.FunctionComponent<Props> = (props: Props) => {\r\n  const { subProductToggle, addEditToggle } = props;\r\n  const history = useHistory();\r\n  const [selectedTab, setSelectedTab] = useState(1);\r\n  const [isOnList, setIsOnList] = useState(true);\r\n\r\n  const {product, productId} = useParams();\r\n\r\n  useEffect(() => {\r\n    if(product == 'product' && productId){\r\n      setSelectedTab(SubProducts.PRODUCT)\r\n    }\r\n  },[product, productId])\r\n\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-1-4@m tm-aside-column\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\" uk-sticky=\"offset: 90; bottom: true; media: @m;\">\r\n        <div className=\"uk-card-header\">\r\n          <div className=\"uk-grid-small uk-flex-center\" uk-grid=\"true\">\r\n            <div>\r\n              <a className={`${isOnList? 'uk-button uk-button-default uk-button-small uk-active' : 'uk-button uk-button-default uk-button-small'}`}\r\n              onClick={() => {addEditToggle(false);setIsOnList(true); history.push('/admin')}}>\r\n                <span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: cog; ratio: .75;\"></span>\r\n                <span>List</span>\r\n              </a>\r\n            </div>\r\n            <div>\r\n              <button className={`${!isOnList? 'uk-button uk-button-default uk-button-small uk-active' : 'uk-button uk-button-default uk-button-small'}`}\r\n               title=\"Add\"\r\n                onClick={() => {addEditToggle(true); ;setIsOnList(false)}}\r\n                disabled={selectedTab === SubProducts.USERS || selectedTab === SubProducts.ORDERS}\r\n                >\r\n                <span uk-icon=\"icon: sign-out; ratio: .75;\"></span>\r\n                <span>Add</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <nav>\r\n            <ul className=\"uk-nav uk-nav-default tm-nav\">\r\n              <li className={`${selectedTab === SubProducts.USERS ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.USERS);setIsOnList(true);addEditToggle(false);setSelectedTab(SubProducts.USERS)}}>Users</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.ORDERS ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.ORDERS);setIsOnList(true);addEditToggle(false);setSelectedTab(SubProducts.ORDERS)}}>Orders</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.PRODUCT ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.PRODUCT);setSelectedTab(SubProducts.PRODUCT)}}>Products</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.SUB_PRODUCT ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.SUB_PRODUCT);setSelectedTab(SubProducts.SUB_PRODUCT)}}>Sub-Category</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.SIZE ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.SIZE);setSelectedTab(SubProducts.SIZE)}}>Size</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.COLOUR ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.COLOUR);setSelectedTab(SubProducts.COLOUR)}}>Colour</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.COUPONS ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.COUPONS);setSelectedTab(SubProducts.COUPONS)}}>Coupons</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.SHIPPER ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.SHIPPER);setSelectedTab(SubProducts.SHIPPER)}}>Shipper</a>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  AdminNav\r\n}","import React, { useEffect, useState } from 'react';\r\nimport DataTable, { IDataTableColumn } from 'react-data-table-component';\r\nimport { getColour, getSize, getSubCategory, getCoupon, getProducts, getShippers, getAllUser, AppState } from 'reducers';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ProductColor, ProductSize, ProductCoupon, ProductSubCategory, Order, OrderShipper, User, ProductItem } from 'types';\r\nimport { SubProducts } from 'appConstants';\r\nimport { getAdminOrders } from 'reducers/Order';\r\nimport { countHighlightProducts } from 'services';\r\n\r\ninterface Props {\r\n  productType: number;\r\n  productColumns: IDataTableColumn[];\r\n  ExpandableComponent?: React.FunctionComponent<any>;\r\n  stateData: ProductColor[] | ProductSize[] | ProductCoupon[] | ProductSubCategory[] | Order[] | OrderShipper[] | User[];\r\n  searchPlaceholder: string;\r\n  expandableRows: boolean;\r\n  sortByColumn?: string;\r\n  defaultSortAsc?: boolean;\r\n}\r\n\r\nconst AdminProductList: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [tabName, setTabName] = useState('');\r\n  const productList = useSelector<AppState, ProductItem[]>(state => state.product.data || []);\r\n  const [tableData, setTableData] = useState<\r\n    ProductColor[] | ProductSize[] | ProductCoupon[] | ProductSubCategory[] | Order[] | OrderShipper[] | User[]\r\n  >([]);\r\n\r\n  let stateData: ProductColor[] | ProductSize[] | ProductCoupon[] | ProductSubCategory[] | Order[] | OrderShipper[] | User[] = [];\r\n  const columns = props.productColumns;\r\n\r\n  if (props.productType === SubProducts.COLOUR ||\r\n    props.productType === SubProducts.SIZE ||\r\n    props.productType === SubProducts.SUB_PRODUCT ||\r\n    props.productType === SubProducts.COUPONS ||\r\n    props.productType === SubProducts.PRODUCT ||\r\n    props.productType === SubProducts.ORDERS ||\r\n    props.productType === SubProducts.SHIPPER ||\r\n    props.productType === SubProducts.USERS) {\r\n    stateData = props.stateData\r\n  } else {\r\n    stateData = []\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.productType === SubProducts.COLOUR) {\r\n      dispatch(getColour());\r\n      setTabName('Colour');\r\n    } else if (props.productType === SubProducts.SIZE) {\r\n      dispatch(getSize());\r\n      setTabName('Size');\r\n    } else if (props.productType === SubProducts.SUB_PRODUCT) {\r\n      dispatch(getSubCategory());\r\n      setTabName('SubCategories');\r\n    } else if (props.productType === SubProducts.COUPONS) {\r\n      dispatch(getCoupon());\r\n      setTabName('Coupons');\r\n    } else if (props.productType === SubProducts.PRODUCT) {\r\n      dispatch(getProducts());\r\n      setTabName('Products');\r\n    } else if (props.productType === SubProducts.ORDERS) {\r\n      dispatch(getAdminOrders());\r\n      setTabName('Orders');\r\n    } else if (props.productType === SubProducts.SHIPPER) {\r\n      dispatch(getShippers());\r\n      setTabName('Shippers');\r\n    } else if (props.productType === SubProducts.USERS) {\r\n      dispatch(getAllUser());\r\n      setTabName('Users');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTableData(stateData || [])\r\n  }, [stateData]);\r\n\r\n  useEffect(() => {\r\n    if (stateData && stateData.length > 0) {\r\n      const data = (stateData as any[]).filter(({\r\n        value, code,\r\n        name, productCategoryName,\r\n        orderNumber, shipperName,\r\n        emailAddress, mobile, paymentMode }) => {\r\n        return (value && value.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (code && code.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (name && name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (productCategoryName && productCategoryName.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (orderNumber && orderNumber.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (shipperName && shipperName.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (emailAddress && emailAddress.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (mobile && mobile.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (paymentMode && paymentMode.toLowerCase().includes(searchTerm.toLowerCase()));\r\n      })\r\n      setTableData(data)\r\n    }\r\n  }, [searchTerm]);\r\n\r\n\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n\r\n            <div className=\"asd\">\r\n              <DataTable\r\n                title={tabName}\r\n                columns={columns}\r\n                data={tableData}\r\n                defaultSortField={props.sortByColumn || \"code\"}\r\n                defaultSortAsc={props.defaultSortAsc !== undefined ? props.defaultSortAsc : true}\r\n                selectableRows={false}\r\n                selectableRowsNoSelectAll={false}\r\n                selectableRowsHighlight={true}\r\n                selectableRowsVisibleOnly={false}\r\n                expandableRows={props.expandableRows}\r\n                expandOnRowClicked={false}\r\n                expandableRowsComponent={props.ExpandableComponent && <props.ExpandableComponent />}\r\n                pagination={true}\r\n                highlightOnHover={true}\r\n                striped={true}\r\n                pointerOnHover={false}\r\n                dense={false}\r\n                noTableHead={false}\r\n                persistTableHead={true}\r\n                progressPending={false}\r\n                noHeader={false}\r\n                subHeader={true}\r\n                subHeaderComponent={\r\n                  (\r\n                    <div className=\"uk-grid-medium uk-child-width-1-1 uk-width-1-1\" uk-grid=\"true\">\r\n                      <div className={`${props.productType === SubProducts.ORDERS ? 'uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s' : 'uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s'}`} uk-grid=\"true\">\r\n                        {\r\n                          props.productType === SubProducts.ORDERS &&\r\n                          <>\r\n                            <div>\r\n                              <label>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: cart;\" /> : Shipped</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: check;\" /> : Delivered</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: plus-circle;\" /> : Return Accepted</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: lifesaver;\" /> : Payment Returned</span>\r\n\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"orange\" }} uk-icon=\"icon: history;\" /> : Return In Progress</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"red\" }} uk-icon=\"icon: minus-circle;\" /> : Return Declined</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"red\" }} uk-icon=\"icon: warning;\" /> : Payment Declined</span>\r\n                              </label>\r\n                            </div>\r\n                          </>\r\n                        }\r\n\r\n                        {\r\n                          props.expandableRows &&\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\"><span><span uk-icon=\"chevron-right\"></span>: Click in table for quick actions</span></div>\r\n                              {\r\n                                props.productType === SubProducts.PRODUCT &&\r\n                                <>\r\n                                  <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: bolt;\" /> : Trending ({countHighlightProducts(productList,true)})</span>\r\n                                  <span className=\"uk-form-label\"><span style={{ color: \"orange\" }} uk-icon=\"icon: star;\" /> : Latest ({countHighlightProducts(productList,false)})</span>\r\n                                </>\r\n                              }\r\n                            </label>\r\n                          </div>\r\n                        }\r\n                        {\r\n                          (!props.expandableRows && props.productType !== SubProducts.ORDERS) &&\r\n                          <div></div>\r\n                        }\r\n                        <div>\r\n                          <input className=\"uk-input uk-form-width-medium uk-form-small uk-float-right\" value={searchTerm} onChange={event => setSearchTerm(event.target.value)} type=\"text\" placeholder={props.searchPlaceholder} />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    // <div className=\"admin-search-header\">\r\n                    //   {\r\n                    //     props.expandableRows &&\r\n                    //     <div className=\"\">\r\n                    //       <div className=\"\">\r\n                    //         <span>Click <span uk-icon=\"chevron-right\"></span> in table for quick actions</span>\r\n                    //       </div>\r\n                    //     </div>\r\n                    //   }\r\n                    //   <div className=\"uk-float-right\">\r\n                    //     <input className=\"uk-input uk-form-width-medium uk-form-small\" value={searchTerm} onChange={event => setSearchTerm(event.target.value)} type=\"text\" placeholder={props.searchPlaceholder} />\r\n                    //   </div>\r\n                    //   <div>\r\n                    //     <div className=\"\"><span style={{ color: \"green\" }} uk-icon=\"icon: bolt;\" /> : Trending</div>\r\n\r\n\r\n                    //   </div>\r\n\r\n                    //   <div className=\"\">\r\n\r\n                    //     <span style={{ color: \"orange\" }} uk-icon=\"icon: star;\" /> : Latest\r\n                    //           </div>\r\n                    // </div>\r\n                  )\r\n                }\r\n                fixedHeader={true}\r\n                fixedHeaderScrollHeight=\"800px\"\r\n                direction={\"ltr\"}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport {\r\n  AdminProductList\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductColor } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateColour, Colour } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { code, value, colourId }: ProductColor = data;\r\n  const colourActionStatus = useSelector<AppState, Colour>(state => state.colour);\r\n\r\n  const colourQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      code,\r\n      value,\r\n      colourId\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (value: ProductColor) => {\r\n      dispatch(updateColour(value))\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={colourQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Colour Code</div>\r\n              <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                {...colourQuickViewFormik.getFieldProps('code')} />\r\n              {\r\n                colourQuickViewFormik.touched.code && colourQuickViewFormik.errors.code ? (\r\n                  <span className=\"uk-text-danger\">{colourQuickViewFormik.errors.code}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Colour Name</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...colourQuickViewFormik.getFieldProps('value')} />\r\n              {\r\n                colourQuickViewFormik.touched.value && colourQuickViewFormik.errors.value ? (\r\n                  <span className=\"uk-text-danger\">{colourQuickViewFormik.errors.value}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Colour Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  colourActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n        {colourQuickViewFormik.isSubmitting && <NotificationContainer {...colourActionStatus}/>}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst ColourList: React.FunctionComponent = () => {\r\n\r\n  const stateData = useSelector<AppState, ProductColor[]>(state => state.colour.data || []);  \r\n  const productColumns = [\r\n    {\r\n      name: 'ColourId',\r\n      selector: 'colourId',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Colour Code',\r\n      selector: 'code',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Colour Value',\r\n      selector: 'value',\r\n      sortable: true,\r\n    },\r\n  ]\r\n\r\n  return(\r\n    <AdminProductList \r\n      productColumns={productColumns} \r\n      productType={SubProducts.COLOUR} \r\n      ExpandableComponent= {ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Colour Value\"\r\n      expandableRows = {true}/>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport {\r\n  ColourList,\r\n  ExpandableComponent\r\n}","import React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, Colour, saveColour } from 'reducers';\r\nimport { ProductColor } from 'types';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst ProductColour: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const colourFormik = useFormik({\r\n    initialValues: {\r\n      code: '',\r\n      value: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (values: ProductColor) => {\r\n      dispatch(saveColour(values));\r\n    }\r\n  });\r\n  const colourActionStatus = useSelector<AppState, Colour>(state => state.colour);\r\n  useEffect(() => {\r\n    if (colourActionStatus._isSuccess) {\r\n      colourFormik.resetForm();\r\n    }\r\n  }, [colourActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={colourFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Colour</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Colour Code</div>\r\n                      <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                        {...colourFormik.getFieldProps('code')} />\r\n                      {\r\n                        colourFormik.touched.code && colourFormik.errors.code ? (\r\n                          <span className=\"uk-text-danger\">{colourFormik.errors.code}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Colour Name</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...colourFormik.getFieldProps('value')} />\r\n                      {\r\n                        colourFormik.touched.value && colourFormik.errors.value ? (\r\n                          <span className=\"uk-text-danger\">{colourFormik.errors.value}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...colourActionStatus}/>\r\n          <button disabled={colourActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              colourActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductColour\r\n}","import React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, addUpdateSize , Size } from 'reducers';\r\nimport { ProductSize as ProductSizeType } from 'types';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\n\r\nconst ProductSize: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const sizeFormik = useFormik({\r\n    initialValues: {\r\n      code: '',\r\n      value: '',\r\n      productCategory: 1,\r\n      sizeId: '0'\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required'),\r\n      productCategory: Yup.number().required('Required')\r\n    }),\r\n    onSubmit: (values: ProductSizeType) => {\r\n      dispatch(addUpdateSize (values));\r\n    }\r\n  });\r\n  const sizeActionStatus = useSelector<AppState, Size>(state => state.size);\r\n  useEffect(() => {\r\n    if (sizeActionStatus._isSuccess) {\r\n      sizeFormik.resetForm();\r\n    }\r\n  }, [sizeActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={sizeFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Size</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n                <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Product Category</div>\r\n                      <select className=\"uk-select\" id=\"productCategory\"\r\n                        {...sizeFormik.getFieldProps('productCategory')}>\r\n                          <option key='1' value={1}>Lingerie</option>\r\n                          <option key='2' value={2}>Footwear</option>\r\n                          <option key='3' value={3}>Bindi</option>\r\n                          <option key='4' value={4}>Handicraft</option>\r\n                        </select>\r\n                      {\r\n                        sizeFormik.touched.productCategory && sizeFormik.errors.productCategory ? (\r\n                          <span className=\"uk-text-danger\">{sizeFormik.errors.productCategory}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Size Code</div>\r\n                      <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                        {...sizeFormik.getFieldProps('code')} />\r\n                      {\r\n                        sizeFormik.touched.code && sizeFormik.errors.code ? (\r\n                          <span className=\"uk-text-danger\">{sizeFormik.errors.code}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Size Value</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...sizeFormik.getFieldProps('value')} />\r\n                      {\r\n                        sizeFormik.touched.value && sizeFormik.errors.value ? (\r\n                          <span className=\"uk-text-danger\">{sizeFormik.errors.value}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...sizeActionStatus}/>\r\n          <button disabled={sizeActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              sizeActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductSize\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductSize } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateColour, Colour, addUpdateSize, Size } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst SizeList: React.FunctionComponent = () => {\r\n\r\n  const stateData = useSelector<AppState, ProductSize[]>(state => state.size.data || []);\r\n  const productColumns = [\r\n    {\r\n      name: 'SizeId',\r\n      selector: 'sizeId',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Product Category',\r\n      selector: 'productCategoryName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Size Code',\r\n      selector: 'code',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Size Value',\r\n      selector: 'value',\r\n      sortable: true,\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.SIZE}\r\n      ExpandableComponent={ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Size Value\"\r\n      expandableRows={true} />\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { code, value, sizeId, productCategory }: ProductSize = data;\r\n  const sizeActionStatus = useSelector<AppState, Size>(state => state.size);\r\n\r\n  const sizeQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      code,\r\n      value,\r\n      sizeId,\r\n      productCategory,\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required'),\r\n      productCategory: Yup.number().required('Required')\r\n    }),\r\n    onSubmit: (value: ProductSize) => {\r\n      dispatch(addUpdateSize(value))\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={sizeQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Product Category</div>\r\n              <select className=\"uk-select\" id=\"productCategory\"\r\n                {...sizeQuickViewFormik.getFieldProps('productCategory')}>\r\n                <option key='1' value={1}>Lingerie</option>\r\n                <option key='2' value={2}>Footwear</option>\r\n                <option key='3' value={3}>Bindi</option>\r\n                <option key='4' value={4}>Handicraft</option>\r\n              </select>\r\n              {\r\n                sizeQuickViewFormik.touched.productCategory && sizeQuickViewFormik.errors.productCategory ? (\r\n                  <span className=\"uk-text-danger\">{sizeQuickViewFormik.errors.productCategory}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Size Code</div>\r\n              <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                {...sizeQuickViewFormik.getFieldProps('code')} />\r\n              {\r\n                sizeQuickViewFormik.touched.code && sizeQuickViewFormik.errors.code ? (\r\n                  <span className=\"uk-text-danger\">{sizeQuickViewFormik.errors.code}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Size Value</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...sizeQuickViewFormik.getFieldProps('value')} />\r\n              {\r\n                sizeQuickViewFormik.touched.value && sizeQuickViewFormik.errors.value ? (\r\n                  <span className=\"uk-text-danger\">{sizeQuickViewFormik.errors.value}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Size Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  sizeActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n          {sizeQuickViewFormik.isSubmitting && <NotificationContainer {...sizeActionStatus} />}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  SizeList,\r\n  ExpandableComponent\r\n}","import React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, addUpdateSize, Size, addUpdateSubCategory, SubCategory } from 'reducers';\r\nimport { ProductSubCategory as ProductSubCategoryType } from 'types';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\n\r\nconst ProductSubCategory: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const subCategoryFormik = useFormik({\r\n    initialValues: {\r\n      code: '',\r\n      value: '',\r\n      productCategoryId: 0,\r\n      subCategoryId: '0'\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required'),\r\n      productCategoryId: Yup.number().required('Required').moreThan(0, 'Required')\r\n    }),\r\n    onSubmit: (values: ProductSubCategoryType) => {\r\n      dispatch(addUpdateSubCategory(values));\r\n    }\r\n  });\r\n  const subCategoryActionStatus = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  useEffect(() => {\r\n    if (subCategoryActionStatus._isSuccess) {\r\n      subCategoryFormik.resetForm();\r\n    }\r\n  }, [subCategoryActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={subCategoryFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">SubCategory</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Product Category</div>\r\n                      <select className=\"uk-select\" id=\"productCategoryId\"\r\n                        {...subCategoryFormik.getFieldProps('productCategoryId')}>\r\n                        <option key='0' value={0}>Select</option>\r\n                        <option key='1' value={1}>Lingerie</option>\r\n                        <option key='2' value={2}>Footwear</option>\r\n                        <option key='3' value={3}>Bindi</option>\r\n                        <option key='4' value={4}>Handicraft</option>\r\n                      </select>\r\n                      {\r\n                        subCategoryFormik.touched.productCategoryId && subCategoryFormik.errors.productCategoryId ? (\r\n                          <span className=\"uk-text-danger\">{subCategoryFormik.errors.productCategoryId}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">SubCategory Name</div>\r\n                      <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                        {...subCategoryFormik.getFieldProps('code')} />\r\n                      {\r\n                        subCategoryFormik.touched.code && subCategoryFormik.errors.code ? (\r\n                          <span className=\"uk-text-danger\">{subCategoryFormik.errors.code}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">SubCategory Description</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...subCategoryFormik.getFieldProps('value')} />\r\n                      {\r\n                        subCategoryFormik.touched.value && subCategoryFormik.errors.value ? (\r\n                          <span className=\"uk-text-danger\">{subCategoryFormik.errors.value}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...subCategoryActionStatus} />\r\n          <button disabled={subCategoryActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              subCategoryActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductSubCategory\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductSubCategory } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateColour, Colour, addUpdateSize, Size, SubCategory, addUpdateSubCategory } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst SubCategoryList: React.FunctionComponent = () => {\r\n\r\n  const stateData = useSelector<AppState, ProductSubCategory[]>(state => state.subCategory.data || []);\r\n  const productColumns = [\r\n    {\r\n      name: 'SubCategoryId',\r\n      selector: 'subCategoryId',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Product Category',\r\n      selector: 'productCategoryName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Product CategoryID',\r\n      selector: 'productCategoryId',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Subcategory',\r\n      selector: 'code',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Subcategory Description',\r\n      selector: 'value',\r\n      sortable: true,\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.SUB_PRODUCT}\r\n      ExpandableComponent={ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Subcategory Value\"\r\n      expandableRows={true} />\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { code, value, subCategoryId, productCategoryId }: ProductSubCategory = data;\r\n  const subCategoryActionStatus = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n\r\n  const subCategoryQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      code,\r\n      value,\r\n      subCategoryId,\r\n      productCategoryId\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required'),\r\n      productCategoryId: Yup.number().required('Required')\r\n    }),\r\n    onSubmit: (value: ProductSubCategory) => {\r\n      dispatch(addUpdateSubCategory(value))\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={subCategoryQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Product Category</div>\r\n              <select className=\"uk-select\" id=\"productCategoryId\"\r\n                {...subCategoryQuickViewFormik.getFieldProps('productCategoryId')}>\r\n                <option key='1' value={1}>Lingerie</option>\r\n                <option key='2' value={2}>Footwear</option>\r\n                <option key='3' value={3}>Bindi</option>\r\n                <option key='4' value={4}>Handicraft</option>\r\n              </select>\r\n              {\r\n                subCategoryQuickViewFormik.touched.productCategoryId && subCategoryQuickViewFormik.errors.productCategoryId ? (\r\n                  <span className=\"uk-text-danger\">{subCategoryQuickViewFormik.errors.productCategoryId}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">SubCategory Name</div>\r\n              <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                {...subCategoryQuickViewFormik.getFieldProps('code')} />\r\n              {\r\n                subCategoryQuickViewFormik.touched.code && subCategoryQuickViewFormik.errors.code ? (\r\n                  <span className=\"uk-text-danger\">{subCategoryQuickViewFormik.errors.code}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">SubCategory Description</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...subCategoryQuickViewFormik.getFieldProps('value')} />\r\n              {\r\n                subCategoryQuickViewFormik.touched.value && subCategoryQuickViewFormik.errors.value ? (\r\n                  <span className=\"uk-text-danger\">{subCategoryQuickViewFormik.errors.value}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">SubCategory Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  subCategoryActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n          {subCategoryQuickViewFormik.isSubmitting && <NotificationContainer {...subCategoryActionStatus} />}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  SubCategoryList,\r\n  ExpandableComponent\r\n}","import React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, Coupon, saveCoupon } from 'reducers';\r\nimport { ProductCoupon as ProductCouponType } from 'types';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst ProductCoupon: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const couponFormik = useFormik({\r\n    initialValues: {\r\n      code: '',\r\n      value: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (values: ProductCouponType) => {\r\n      dispatch(saveCoupon(values));\r\n    }\r\n  });\r\n  const couponActionStatus = useSelector<AppState, Coupon>(state => state.coupon);\r\n  useEffect(() => {\r\n    if (couponActionStatus._isSuccess) {\r\n      couponFormik.resetForm();\r\n    }\r\n  }, [couponActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={couponFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Coupon</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Coupon Code</div>\r\n                      <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                        {...couponFormik.getFieldProps('code')} />\r\n                      {\r\n                        couponFormik.touched.code && couponFormik.errors.code ? (\r\n                          <span className=\"uk-text-danger\">{couponFormik.errors.code}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Discount Percentage</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...couponFormik.getFieldProps('value')} />\r\n                      {\r\n                        couponFormik.touched.value && couponFormik.errors.value ? (\r\n                          <span className=\"uk-text-danger\">{couponFormik.errors.value}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...couponActionStatus}/>\r\n          <button disabled={couponActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              couponActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductCoupon\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductCoupon } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateCoupon, Coupon } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst CouponList: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const deleteCoupon = (couponId:  number, code:string, value:string) => {\r\n    const input = window.confirm('Sure want to delete?');\r\n    if(input)dispatch(updateCoupon({couponId,value,code},true));\r\n  } \r\n  const stateData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);  \r\n  const productColumns = [\r\n    {\r\n      name: 'CouponId',\r\n      selector: 'couponId',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Coupon Code',\r\n      selector: 'code',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Coupon Value',\r\n      selector: 'value',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Delete',\r\n      sortable: false,\r\n      cell: (row: { couponId: number, code: string, value: string }) => {\r\n        return  <button type=\"submit\" className=\"uk-button-small uk-button-danger\" onClick={() => deleteCoupon(row.couponId, row.value, row.code)}>\r\n                   <span>Delete</span>\r\n                </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return(\r\n    <AdminProductList \r\n      productColumns={productColumns} \r\n      productType={SubProducts.COUPONS} \r\n      ExpandableComponent= {ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Coupon Code\"\r\n      expandableRows = {true}/>\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { code, value, couponId }: ProductCoupon = data;\r\n  const couponActionStatus = useSelector<AppState, Coupon>(state => state.coupon);\r\n\r\n  const couponQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      code,\r\n      value,\r\n      couponId\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (value: ProductCoupon) => {\r\n      dispatch(updateCoupon(value));\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={couponQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Coupon Code</div>\r\n              <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                {...couponQuickViewFormik.getFieldProps('code')} />\r\n              {\r\n                couponQuickViewFormik.touched.code && couponQuickViewFormik.errors.code ? (\r\n                  <span className=\"uk-text-danger\">{couponQuickViewFormik.errors.code}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Discount Percentage</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...couponQuickViewFormik.getFieldProps('value')} />\r\n              {\r\n                couponQuickViewFormik.touched.value && couponQuickViewFormik.errors.value ? (\r\n                  <span className=\"uk-text-danger\">{couponQuickViewFormik.errors.value}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Coupon Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  couponActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n        {couponQuickViewFormik.isSubmitting && <NotificationContainer {...couponActionStatus}/>}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  CouponList,\r\n  ExpandableComponent\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport {\r\n  AppState, SubCategory, getSubCategory, getSize, getColour, Size,\r\n  Colour, Product, addUpdateProduct, setDefaulState, getProduct\r\n} from 'reducers';\r\nimport { ProductSubCategory, ProductSize, ProductItem as ProductItemType, sizeColourQuantityComboObject } from 'types';\r\nimport { serverImagePath, SubCategories } from 'appConstants';\r\nimport { filterSubcategories } from 'services';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst ProductItem: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [sizeColourQuantity, setSizeColourQuantity] = useState<sizeColourQuantityComboObject[]>([]);\r\n  const [selectedSizes, setSelectedSizes] = useState<Array<string>>([]);\r\n  const [sizeColourQuantityErrorMessage, setSizeColourQuantityErrorMessage] = useState('')\r\n\r\n  const {\r\n    name, description, productCategoryId,\r\n    subCategory, quantity, productDetailId,\r\n    priceINR, priceUSD, productId, productCategoryName,\r\n    sizeId, colourId, imageNames, imagePaths, size, colour, sizeColourQuantityCombo\r\n  } = useSelector<AppState, ProductItemType>(state => state.product.singleData || {} as ProductItemType)\r\n\r\n  const checkForProductCategory = (subCategory: string) => {\r\n    const filteredKey = Object.keys(SubCategories).filter((key) => key === subCategory);\r\n    if (filteredKey[0]) {\r\n      return Number(SubCategories[filteredKey[0]])\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  const productItemFormik = useFormik({\r\n    initialValues: {\r\n      name: name || '',\r\n      description: description || '',\r\n      productCategoryId: productCategoryId || productCategoryName ? checkForProductCategory(productCategoryName || '') : 0,\r\n      subCategory: subCategory || 0,\r\n      size: sizeId ? sizeId.toString() : '0',\r\n      colour: colourId ? colourId.toString() : '',\r\n      quantity: quantity || '',\r\n      priceINR: priceINR ? priceINR.split(',')[0] : '',\r\n      priceUSD: priceUSD ? priceUSD.split(',')[0] : '',\r\n      productImageBlob: null,\r\n      productId: productId || '0',\r\n      deletedImagePath: [],\r\n      updatedImageName: [],\r\n      code: '',\r\n      value: '',\r\n      imagePaths: imagePaths || '',\r\n      imageNames: imageNames || '',\r\n      adminProductCombo: sizeId ? sizeId.split(',').length : 1,\r\n      deletedProductDetailIds: [],\r\n      productDetailIdArray: productDetailId ? productDetailId.split(',') : [],\r\n    },\r\n    validationSchema: Yup.object({\r\n      name: Yup.string().required('Required'),\r\n      description: Yup.string().required('Required'),\r\n      productCategoryId: Yup.number().required('Required').moreThan(0, 'Required'),\r\n      subCategory: Yup.number().required('Required').moreThan(0, 'Required'),\r\n      //size: Yup.string().required('Required').matches(/[^0]/, 'Required'),\r\n      //colour: Yup.string().required('Required'),\r\n      // quantity: Yup.string().required('Required'),\r\n      priceINR: Yup.string().required('Required'),\r\n      priceUSD: Yup.string().required('Required'),\r\n      // productImageBlob: Yup.mixed().required('Required'),\r\n    }),\r\n    onSubmit: (values: ProductItemType) => {\r\n      if(sizeColourQuantity.length === 0  || sizeColourQuantity.some((item) => Object.keys(item).length < 3)){\r\n        setSizeColourQuantityErrorMessage('Please enter data for all the row(s)');\r\n        setTimeout(()=>{\r\n          setSizeColourQuantityErrorMessage('');\r\n        },3000);\r\n      }else {\r\n        dispatch(addUpdateProduct(values, 0, sizeColourQuantity));\r\n      }\r\n    },\r\n    enableReinitialize: true\r\n  });\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const productSize = useSelector<AppState, Size>(state => state.size);\r\n  const productColour = useSelector<AppState, Colour>(state => state.colour);\r\n  const productActionStatus = useSelector<AppState, Product>(state => state.product);\r\n  useEffect(() => {\r\n    dispatch(getSubCategory());\r\n    dispatch(getSize());\r\n    dispatch(getColour());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (productActionStatus._isSuccess) {\r\n      setTimeout(()=>{\r\n        dispatch(setDefaulState());\r\n      productItemFormik.resetForm();\r\n      setSizeColourQuantity([]);\r\n      history.push(\"/admin\");\r\n      },2000)\r\n    }\r\n  }, [productActionStatus._isSuccess]);\r\n\r\n  useEffect(() => {\r\n    if(sizeId && colourId && quantity && sizeId.length > 0){\r\n      const sizeArray = sizeId.split(',');\r\n      const colourArray = colourId.split(',');\r\n      const quantityArray = quantity.split(',');\r\n\r\n      const editSizeColourQuantityCombo : sizeColourQuantityComboObject[] = sizeArray.map((sizeItem, index) => {\r\n        return {\r\n          size: sizeItem,\r\n          colour: colourArray[index],\r\n          quantity: quantityArray[index]\r\n        }\r\n      });\r\n\r\n      setSizeColourQuantity(editSizeColourQuantityCombo);\r\n      setSelectedSizes(sizeArray);\r\n    }\r\n  },[sizeId, colourId, quantity])\r\n\r\n  const filteredSubcategories: ProductSubCategory[] = filterSubcategories(subCategories, productItemFormik.values.productCategoryId);\r\n\r\n  const filteredProductSize: ProductSize[] = (productSize.data &&\r\n    productSize.data.filter((size) => {\r\n      return size.productCategory === Number(productItemFormik.values.productCategoryId)\r\n    })) || [];\r\n\r\n  const checkForMaxFileUpload = (files: FileList | null) => {\r\n    let currentNumberOfFile = 0;\r\n    if (productItemFormik.values.productId !== '0' && productItemFormik.values.imagePaths) {\r\n      currentNumberOfFile += productItemFormik.values.imagePaths.split(', ').length;\r\n    }\r\n    if (files && Array.from(productItemFormik.values.productImageBlob || []).length + currentNumberOfFile !== 5) {\r\n      const currentFiles = Array.from(productItemFormik.values.productImageBlob || []);\r\n      let filesArray = Array.from(files);\r\n      filesArray.splice(5 - (currentFiles.length + currentNumberOfFile), filesArray.length - 1);\r\n      productItemFormik.setFieldValue(\"productImageBlob\", [...currentFiles, ...filesArray]);\r\n    }\r\n  };\r\n\r\n  const removeImage = (name: string) => {\r\n    const productImageBlob = Array.from(productItemFormik.values.productImageBlob || []);\r\n    productItemFormik.setFieldValue(\"productImageBlob\",\r\n      productImageBlob.filter((img: File) => {\r\n        return img.name != name\r\n      })\r\n    )\r\n  };\r\n\r\n  const removeCurrentImage = (name: string, path: string) => {\r\n    if (productItemFormik.values.deletedImagePath && productItemFormik.values.imagePaths && productItemFormik.values.imageNames) {\r\n      productItemFormik.setFieldValue(\"deletedImagePath\", [...productItemFormik.values.deletedImagePath, path]);\r\n      productItemFormik.setFieldValue(\"imagePaths\",\r\n        productItemFormik.values.imagePaths.split(',').filter((imagePath) => imagePath != path).join(',')\r\n      );\r\n      productItemFormik.setFieldValue(\"imageNames\",\r\n        productItemFormik.values.imageNames.split(',').filter((imageName) => imageName != name).join(',')\r\n      )\r\n    }\r\n  };\r\n\r\n  const getFileNameAndPath = (fileName?: string, filePath?: string) => {\r\n    if (fileName && filePath && fileName.length > 0 && filePath.length > 0) {\r\n      const fileNames = fileName.split(',');\r\n      const filePaths = filePath.split(',');\r\n\r\n      return filePaths.map((path: string, index: number) => {\r\n        return <div key={index} className=\"uk-inline product-uploader-container\">\r\n          <img key={index} src={serverImagePath + path} alt={fileNames[index]} />\r\n          <div className=\"uk-overlay-primary uk-position-cover\">\r\n            <div className=\"uk-position-center\">\r\n              <span uk-icon=\"icon: close\" onClick={() => removeCurrentImage(fileNames[index], path)} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      })\r\n    }\r\n  }\r\n\r\n  const addProductComboLength = () => {\r\n    const availableSizes = filteredProductSize.filter(({sizeId}) => selectedSizes.indexOf(sizeId?.toString() || '') === -1);\r\n    if(availableSizes.length > 0 && productItemFormik.values.adminProductCombo){\r\n      productItemFormik.setFieldValue('adminProductCombo', \r\n      productItemFormik.values.adminProductCombo + 1)\r\n    } else if(availableSizes.length === 0){\r\n      setSizeColourQuantityErrorMessage('No more sizes available');\r\n      setTimeout(()=>{\r\n        setSizeColourQuantityErrorMessage('');\r\n      },3000);\r\n    }\r\n  }\r\n\r\n  const reduceProductComboLength = (index: number) => {\r\n    if(productItemFormik.values.deletedProductDetailIds && productItemFormik.values.productDetailIdArray){\r\n      productItemFormik.setFieldValue('deletedProductDetailIds', \r\n      [...productItemFormik.values.deletedProductDetailIds,productItemFormik.values.productDetailIdArray[index]])\r\n    }\r\n    selectedSizes.splice(index,1);\r\n    sizeColourQuantity.splice(index,1);\r\n    const newPDArray = [...productItemFormik.values.productDetailIdArray];\r\n    newPDArray.splice(index,1)\r\n    productItemFormik.setFieldValue('productDetailIdArray', [...newPDArray]);\r\n    setSelectedSizes([...selectedSizes]);\r\n    setSizeColourQuantity([...sizeColourQuantity]);\r\n    if(productItemFormik.values.adminProductCombo && productItemFormik.values.adminProductCombo > 1) {\r\n      productItemFormik.setFieldValue('adminProductCombo', \r\n      productItemFormik.values.adminProductCombo - 1)\r\n    }\r\n  }\r\n\r\n  const updatedSizeColourQuantityArray = (index: number, field: string, value: string) => {\r\n    // let currentItem = productItemFormik.values.sizeColourQuantityCombo || [];\r\n    let currentItem  = [...sizeColourQuantity] as sizeColourQuantityComboObject[];\r\n    if(!currentItem[index]){\r\n      currentItem[index] = {} as sizeColourQuantityComboObject\r\n    }\r\n        if(field === 'size') {\r\n          if(currentItem[index].size){\r\n            selectedSizes.splice(selectedSizes.indexOf(value), 1);\r\n          }\r\n            currentItem[index].size = value;\r\n            setSelectedSizes([...selectedSizes, value]);\r\n        } else if (field === 'colour') {\r\n          currentItem[index].colour = value;\r\n          // currentItem.forEach((item) => item.colour = value);\r\n        } else if (field === 'quantity') {\r\n          currentItem[index].quantity = value;\r\n        }\r\n\r\n        if(currentItem.length> 1){\r\n          if(field === 'colour'){\r\n            currentItem.forEach((item) => item.colour = value);\r\n          } else {\r\n            currentItem.forEach((item) => item.colour = currentItem[0].colour);\r\n          }\r\n        }\r\n\r\n        if(productItemFormik.values.productDetailIdArray[index]){\r\n          currentItem[index].productDetailId  = productItemFormik.values.productDetailIdArray[index];\r\n        } else {\r\n          currentItem[index].productDetailId = '0'\r\n        }\r\n      setSizeColourQuantity(currentItem);\r\n  }\r\n\r\n// console.log(sizeColourQuantity)\r\n  // if(Object.keys(sizeColourQuantity).length > 0){console.log(sizeColourQuantity)}\r\n  return (\r\n    <form onSubmit={productItemFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Product</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Name</div>\r\n                      <input className=\"uk-input \" id=\"name\" type=\"input\"\r\n                        {...productItemFormik.getFieldProps('name')} />\r\n                      {\r\n                        productItemFormik.touched.name && productItemFormik.errors.name ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.name}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Description</div>\r\n                      <textarea className=\"uk-textarea\" id=\"description\" cols={30}\r\n                        {...productItemFormik.getFieldProps('description')} />\r\n                      {\r\n                        productItemFormik.touched.description && productItemFormik.errors.description ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.description}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Product Category</div>\r\n                      <select className=\"uk-select\" id=\"productCategoryId\"\r\n                        onChange={(e) => { productItemFormik.handleChange(e); productItemFormik.setFieldValue('subCategory', 0); setSizeColourQuantity([]); setSelectedSizes([]); productItemFormik.setFieldValue('adminProductCombo',1)}}\r\n                        onBlur={productItemFormik.handleBlur}\r\n                        value={productItemFormik.values.productCategoryId}\r\n                      >\r\n                        {/* {...productItemFormik.getFieldProps('productCategoryId')} */}\r\n                        <option key='0' value={0}>Select</option>\r\n                        <option key='1' value={1}>Lingerie</option>\r\n                        <option key='2' value={2}>Footwear</option>\r\n                        <option key='3' value={3}>Bindi</option>\r\n                        <option key='4' value={4}>Handicraft</option>\r\n                      </select>\r\n                      {\r\n                        productItemFormik.touched.productCategoryId && productItemFormik.errors.productCategoryId ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.productCategoryId}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">SubCategory</div>\r\n                      <select className=\"uk-select\" id=\"subCategory\"\r\n                        onChange={(e) => { productItemFormik.handleChange(e)}} // productItemFormik.setFieldValue('size', 0) \r\n                        onBlur={productItemFormik.handleBlur}\r\n                        value={productItemFormik.values.subCategory}>\r\n                        <option key='0' value={0}>Select</option>\r\n                        {\r\n                          filteredSubcategories.map((subCategory, index) => {\r\n                            return <option key={index} value={subCategory.subCategoryId}>{subCategory.code}</option>\r\n                          })\r\n                        }\r\n                      </select>\r\n                      {\r\n                        productItemFormik.touched.subCategory && productItemFormik.errors.subCategory ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.subCategory}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-placeholder uk-text-center\">\r\n                  {\r\n                    Array(productItemFormik.values.adminProductCombo).fill(1).map((value, index) => {\r\n                      return (\r\n                        <div key={index} className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\">Size</div>\r\n                              <select className=\"uk-select\" id=\"size\"  \r\n                              value = {sizeColourQuantity[index] ? sizeColourQuantity[index].size : 0}\r\n                              onChange={(e) => {updatedSizeColourQuantityArray(index, 'size', e.currentTarget.value)}}>\r\n                                {/* {...productItemFormik.getFieldProps('size')}> */}\r\n                                <option key='0' value={0}>Select</option>\r\n                                {\r\n                                  filteredProductSize.filter((size) => {\r\n                                    return size.sizeId && index === selectedSizes.indexOf(size.sizeId.toString()) ? true : size.sizeId && selectedSizes.indexOf(size.sizeId.toString()) === -1\r\n                                           \r\n                                  })\r\n                                    .map((size, index) => {\r\n                                    return <option key={index} value={size.sizeId} >{size.value}</option>\r\n                                  })\r\n                                }\r\n                              </select>\r\n                              {/* {\r\n                                productItemFormik.touched.size && productItemFormik.errors.size ? (\r\n                                  <span className=\"uk-text-danger\">{productItemFormik.errors.size}</span>\r\n                                ) : ''\r\n                              } */}\r\n                            </label>\r\n                          </div>\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\">Colour</div>\r\n                              <select className=\"uk-select\" id=\"colour\" \r\n                              value={sizeColourQuantity && sizeColourQuantity[0] && sizeColourQuantity[0].colour || '0'}\r\n                              onChange={(e) => {updatedSizeColourQuantityArray(index, 'colour', e.currentTarget.value)}}>\r\n                                {/* {...productItemFormik.getFieldProps('colour')}> */}\r\n                                <option key='0' value={0}>Select</option>\r\n                                {\r\n                                  Array.isArray(productColour.data) &&\r\n                                  productColour.data.map((colour, index) => {\r\n                                    return <option key={index} value={colour.colourId}>{colour.value}</option>\r\n                                  })\r\n                                }\r\n                              </select>\r\n                            </label>\r\n                          </div>\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\">Quantity</div>\r\n                              <input className=\"uk-input \" id=\"quantity\" type=\"number\"\r\n                              value ={sizeColourQuantity[index] ? sizeColourQuantity[index].quantity : ''}\r\n                              onChange={(e) => {updatedSizeColourQuantityArray(index, 'quantity', e.currentTarget.value)}}/>\r\n                                {/* {...productItemFormik.getFieldProps('quantity')} /> */}\r\n                              {/* {\r\n                                productItemFormik.touched.quantity && productItemFormik.errors.quantity ? (\r\n                                  <span className=\"uk-text-danger\">{productItemFormik.errors.quantity}</span>\r\n                                ) : ''\r\n                              } */}\r\n                            </label>\r\n                          </div>\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\"></div>\r\n                              <button disabled={productItemFormik.values.adminProductCombo === 1} className=\"uk-button uk-button-danger admin-add-more-combo\" onClick={() => reduceProductComboLength(index)}>Delete</button>\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    })\r\n                  }\r\n                  <div className=\"uk-nav-center admin-add-more-combo\">\r\n                  <span className=\"uk-text-danger \">{sizeColourQuantityErrorMessage}</span>\r\n                  </div>\r\n                  \r\n                  <button className=\"uk-button uk-button-primary\" disabled={sizeColourQuantity.length === 0 || sizeColourQuantity.length !== productItemFormik.values.adminProductCombo  } onClick={(e) => {e.preventDefault(); addProductComboLength()}}>Add More</button>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Price INR</div>\r\n                      <input className=\"uk-input \" id=\"priceINR\" type=\"input\"\r\n                        {...productItemFormik.getFieldProps('priceINR')} />\r\n                      {\r\n                        productItemFormik.touched.priceINR && productItemFormik.errors.priceINR ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.priceINR}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Price USD</div>\r\n                      <input className=\"uk-input \" id=\"priceUSD\" type=\"input\"\r\n                        {...productItemFormik.getFieldProps('priceUSD')} />\r\n                      {\r\n                        productItemFormik.touched.priceUSD && productItemFormik.errors.priceUSD ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.priceUSD}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                  <label id=\"product-upload\" htmlFor=\"productImageBlob\" className=\"uk-placeholder uk-text-center\">\r\n                    <span className=\"upload-icon-margin\" uk-icon=\"icon: cloud-upload; ratio: 1.25;\" />\r\n                     Click this banner to upload the images <input id=\"productImageBlob\" type=\"file\" multiple={true}\r\n                      onChange={(event) => { checkForMaxFileUpload(event.currentTarget.files) }} />\r\n                    {\r\n                      productItemFormik.touched.productImageBlob && productItemFormik.errors.productImageBlob ? (\r\n                        <span className=\"uk-text-danger\">{productItemFormik.errors.productImageBlob}</span>\r\n                      ) : ''\r\n                    }\r\n                  </label>\r\n                </div>\r\n              </fieldset>\r\n              {\r\n                 productItemFormik.values.productId !== '0' &&\r\n                 <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-form-label\">Current Images</div>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-5@s\" uk-grid=\"true\">\r\n\r\n                  {\r\n                    getFileNameAndPath(productItemFormik.values.imageNames, productItemFormik.values.imagePaths)\r\n                  }\r\n                  {/* {\r\n                      productItemFormik.values.imagePaths &&\r\n                      productItemFormik.values.imagePaths.split(',').map((path, i) => {\r\n                      return <div className=\"uk-inline product-uploader-container\">\r\n                      <img key={i} src={apiServerHost+path} alt={file.name} />\r\n                      <div className=\"uk-overlay-primary uk-position-cover\">\r\n                        <div className=\"uk-position-center\">\r\n                          <span uk-icon=\"icon: close\" onClick={() => removeImage(file.name)}/>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                     })\r\n                    [].map.call(productItemFormik.values.imagePaths, (file: any, i) => {\r\n                      return <div className=\"uk-inline product-uploader-container\">\r\n                        <img key={i} src={URL.createObjectURL(file)} alt={file.name} />\r\n                        <div className=\"uk-overlay-primary uk-position-cover\">\r\n                          <div className=\"uk-position-center\">\r\n                            <span uk-icon=\"icon: close\" onClick={() => removeImage(file.name)}/>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    }) */}\r\n\r\n                  {/* <img src={'http://127.0.0.1:5000/images/1c508610-eee5-4360-8f76-f0e70fa5ca92.png'} alt={\"a\"} /> */}\r\n                </div>\r\n              </fieldset>\r\n              }\r\n              \r\n              {\r\n                <fieldset className=\"uk-fieldset\">\r\n                  <div className=\"uk-form-label\">New Images</div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-5@s\" uk-grid=\"true\">\r\n                    {/* <div> */}\r\n                    {/* <label> */}\r\n                    {productItemFormik.values.productImageBlob &&\r\n                      [].map.call(productItemFormik.values.productImageBlob, (file: any, i) => {\r\n                        return <div className=\"uk-inline product-uploader-container\">\r\n                          <img key={i} src={URL.createObjectURL(file)} alt={file.name} />\r\n                          <div className=\"uk-overlay-primary uk-position-cover\">\r\n                            <div className=\"uk-position-center\">\r\n                              <span uk-icon=\"icon: close\" onClick={() => removeImage(file.name)} />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      })\r\n                    }\r\n                    {/* <img src={'http://127.0.0.1:5000/images/1c508610-eee5-4360-8f76-f0e70fa5ca92.png'} alt={\"a\"} /> */}\r\n                    {/* </label> */}\r\n                    {/* </div> */}\r\n                  </div>\r\n                </fieldset>\r\n              }\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...productActionStatus} />\r\n          <button disabled={productActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              productActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductItem\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductItem } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AppState, addUpdateProduct, Coupon, updateProductHighLight, Product, errorProduct, setDefaulState } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport { countHighlightProducts } from 'services';\r\n\r\ninterface Props {\r\n  addEditToggle: Function;\r\n}\r\n\r\nconst ProductList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const deleteProduct = (productId: string) => {\r\n    const input = window.confirm('Sure want to delete?');\r\n    const name = '', code = '', priceINR = '0', priceUSD = '0', value = '', subCategory = 1, deletedImagePath = [''], productDetailIdArray = [''], deletedProductDetailIds = ['']\r\n    if (input) dispatch(addUpdateProduct({ productId, name, code, priceUSD, priceINR, value, deletedImagePath, subCategory, productDetailIdArray, deletedProductDetailIds }, 1, []));\r\n  }\r\n  const stateData = useSelector<AppState, ProductItem[]>(state => state.product.data || []);\r\n  const productColumns = [\r\n    // {\r\n    //   name: 'ProductId',\r\n    //   selector: 'productId',\r\n    //   sortable: false,\r\n    // },<span className=\"uk-label uk-label-warning uk-margin-xsmall-right\">top selling</span>\r\n    {\r\n      name: 'Category',\r\n      selector: 'productCategoryName',\r\n      sortable: true,\r\n      cell: (row: { trending: boolean, latest: boolean, productCategoryName: string}) => {\r\n        return (\r\n          row.trending ? <>\r\n            <span style={{color:\"green\"}} uk-icon=\"icon: bolt;\"/>\r\n            <span style={{marginLeft:\"5px\"}}>\r\n              {row.productCategoryName}\r\n            </span>\r\n          </> :\r\n          row.latest ? <>\r\n            <span style={{color:\"orange\"}} uk-icon=\"icon: star;\"/>\r\n            <span style={{marginLeft:\"5px\"}}>\r\n              {row.productCategoryName}\r\n            </span>\r\n          </> :\r\n          <span  style={{marginLeft:\"25px\"}}>\r\n          {row.productCategoryName}\r\n        </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      name: 'Product Name',\r\n      selector: 'name',\r\n      sortable: true,\r\n    },\r\n    // {\r\n    //   name: 'Price INR',\r\n    //   selector: 'priceInr',\r\n    //   sortable: true,\r\n    // },\r\n    // {\r\n    //   name: 'Price USD',\r\n    //   selector: 'priceUsd',\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      name: 'Quantity',\r\n      selector: 'quantity',\r\n      sortable: true,\r\n    },\r\n    // {\r\n    //   name: 'Colour',\r\n    //   selector: 'colour',\r\n    //   sortable: true,\r\n    // },\r\n    // {\r\n    //   name: 'Size',\r\n    //   selector: 'size',\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      name: 'Delete',\r\n      sortable: false,\r\n      cell: (row: { productId: number, name: string, code: string, priceUSD: string, priceINR: string, value: string }) => {\r\n        return <button type=\"submit\" className=\"uk-button-small uk-button-danger\" onClick={() => deleteProduct(row.productId.toString())}>\r\n          <span>Delete</span>\r\n        </button>\r\n      }\r\n    },\r\n    {\r\n      name: 'Edit',\r\n      sortable: false,\r\n      cell: (row: { productId: number, code: string, value: string }) => {\r\n        return <button type=\"submit\" className=\"uk-button-small uk-button-danger\" onClick={() => { props.addEditToggle(true); history.push(\"/admin/product/\" + row.productId) }}>\r\n          <span>Edit</span>\r\n        </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.PRODUCT}\r\n      ExpandableComponent={ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Product Name\"\r\n      expandableRows={true} />\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { trending, latest, productId }: ProductItem = data;\r\n  const productActionStatus = useSelector<AppState, Product>(state => state.product);\r\n\r\n  const productQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      productId,\r\n      highlight: trending ? '1' : latest ? '2' : ''\r\n    } as ProductItem,\r\n    onSubmit: (value: ProductItem) => {\r\n      if(value.highlight === '1' && countHighlightProducts(productActionStatus.data||[],true) === 12){\r\n        dispatch(errorProduct('Max trending product count of 12 reached.'));\r\n        setTimeout(() => {\r\n          productQuickViewFormik.setSubmitting(false)\r\n        },2000);\r\n      } else if(value.highlight === '2' && countHighlightProducts(productActionStatus.data||[],false) === 12){\r\n        dispatch(errorProduct('Max latest product count of 12 reached.'));\r\n        setTimeout(() => {\r\n          productQuickViewFormik.setSubmitting(false)\r\n        },2000);\r\n      } else {\r\n        dispatch(updateProductHighLight(value.highlight || '',value.productId))\r\n      }\r\n      // dispatch(updateCoupon(value));\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={productQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Product Highlight</div>\r\n              <select className=\"uk-select\" id=\"highlight\"\r\n                {...productQuickViewFormik.getFieldProps('highlight')}>\r\n                <option key='1' value=\"\">None</option>\r\n                <option key='2' value=\"1\">Trending</option>\r\n                <option key='3' value=\"2\">Latest</option>\r\n              </select>\r\n              {\r\n                productQuickViewFormik.touched.highlight && productQuickViewFormik.errors.highlight ? (\r\n                  <span className=\"uk-text-danger\">{productQuickViewFormik.errors.highlight}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Product Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  productActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }<span> {console.log(productQuickViewFormik.isSubmitting)}</span>\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n          {productQuickViewFormik.isSubmitting && <NotificationContainer {...productActionStatus} />}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductList\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppState, Coupon, updateCoupon } from 'reducers';\r\nimport { CustomerOrders, singleOrder } from 'reducers/Order';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductCoupon, Order, OrderItems } from 'types';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport { getIconForAdminOrder } from 'services';\r\n\r\ninterface Props{\r\n  addEditToggle: Function;\r\n}\r\n\r\nconst OrderList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  // const deleteCoupon = (couponId: number, code: string, value: string) => {\r\n  //   const input = window.confirm('Sure want to delete?');\r\n  //   if (input) dispatch(updateCoupon({ couponId, value, code }, true));\r\n  // }\r\n  const stateData = useSelector<AppState, Order[]>(state => state.customerOrders.data || []);\r\n  const productColumns = [\r\n    {\r\n      name: 'Order Number',\r\n      sortable: true,\r\n      wrap: true,\r\n      cell: (row: { orderItems: OrderItems[], orderNumber: string}) => {\r\n        const icon = getIconForAdminOrder(row.orderItems);\r\n        return (\r\n          icon !== '' ?\r\n          <>\r\n            {icon === 'lifesaver' ?  <span style={{ color: \"green\" }} uk-icon=\"icon: lifesaver;\" /> \r\n            : icon === 'plus-circle' ? <span style={{ color: \"green\" }} uk-icon=\"icon: plus-circle;\" /> \r\n            : icon === 'check' ? <span style={{ color: \"green\" }} uk-icon=\"icon: check;\" />\r\n            : icon === 'cart' ? <span style={{ color: \"green\" }} uk-icon=\"icon: cart;\" /> \r\n            : icon === 'history' ? <span style={{ color: \"orange\" }} uk-icon=\"icon: history;\" />\r\n            : icon === 'minus-circle' ? <span style={{ color: \"red\" }} uk-icon=\"icon: minus-circle;\" />\r\n            : icon === 'warning' ? <span style={{ color: \"red\" }} uk-icon=\"icon: warning;\" />\r\n            : ''\r\n          }\r\n            <span style={{marginLeft:\"5px\", whiteSpace:\"nowrap\"}}>\r\n              {row.orderNumber}\r\n            </span>\r\n          </> :\r\n          <span  style={{marginLeft:\"25px\"}}>\r\n          {row.orderNumber}\r\n        </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      name: 'Order Date',\r\n      selector: 'paymentDate',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Total Price-Mode',\r\n      sortable: false,\r\n      cell: (row: { totalPrice: string, paymentMode: string}) => {\r\n      return  <span>{row.paymentMode === 'PAYPAL'? '$' : '₹'} {row.totalPrice} ({row.paymentMode})</span>\r\n      }\r\n    },\r\n    {\r\n      name: 'View Details',\r\n      sortable: false,\r\n      cell: (row: Order) => {\r\n        return <button type=\"submit\" className=\"uk-button-small uk-button-primary\" onClick={() => {dispatch(singleOrder(row)) ;props.addEditToggle(true)}}>\r\n          <span>View</span>\r\n        </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.ORDERS}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Order Number\"\r\n      expandableRows={false}\r\n      sortByColumn=\"paymentDate\" \r\n      defaultSortAsc={false}/>\r\n  )\r\n}\r\nexport {\r\n  OrderList\r\n}","import React, { useEffect, useState, Fragment } from 'react';\r\nimport { Order, OrderUpdateAdmin } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, getShippers, Shipper, Shipment, updateOrderAdmin } from 'reducers';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport { getPaypalTransactionId } from 'services';\r\n\r\n\r\nconst OrderDetails: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  // const [productItemCount, setProductItemCount] = useState(0);\r\n  const [adminShipmentData, setAdminShipmentData] = useState<OrderUpdateAdmin[]>([]);\r\n  const [orginalTrackingLink, setOrginalTrackingLink] = useState<string[]>([]);\r\n  const stateData = useSelector<AppState, Order>(state => state.customerOrders.singleData || {} as Order);\r\n  const shippers = useSelector<AppState, Shipper>(state => state.shipper || {} as Shipper);\r\n  const shipmentStatus = useSelector<AppState, Shipment>(state => state.shipment);\r\n  useEffect(() => {\r\n    if (stateData && stateData.orderItems) {\r\n      let tempShipmentData: OrderUpdateAdmin[] = [];\r\n      let tempTrackingLink: string[] = [];\r\n      stateData.orderItems.forEach(orderItems => {\r\n        tempShipmentData.push(\r\n          {\r\n            orderDetailId: orderItems.orderDetailId,\r\n            deliveryDate: orderItems.shipmentDetails?.deliveryDate,\r\n            paymentReturned: orderItems.shipmentDetails?.paymentReturned,\r\n            returnStatus: orderItems.shipmentDetails?.returnStatus,\r\n            shipmentId: orderItems.shipmentDetails?.shipmentId || '0',\r\n            shipper: orderItems.shipmentDetails?.shipper,\r\n            shippingDate: orderItems.shipmentDetails?.shippingDate,\r\n            trackingNumber: orderItems.shipmentDetails?.trackingNumber\r\n          } as OrderUpdateAdmin);\r\n        tempTrackingLink.push(orderItems.shipmentDetails?.trackingNumber || '')\r\n      });\r\n      setAdminShipmentData(tempShipmentData);\r\n      setOrginalTrackingLink(tempTrackingLink);\r\n    }\r\n  }, [stateData]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getShippers());\r\n  }, [])\r\n\r\n  const updateShipmentData = (index: number, key: string, value: string) => {\r\n    let shipmentDataCopy = [...adminShipmentData];\r\n    const shipmentDataToUpdate = shipmentDataCopy.splice(index, 1);\r\n    const updatedShipmentData = { ...shipmentDataToUpdate[0], [key]: value };\r\n    shipmentDataCopy.splice(index, 0, updatedShipmentData)\r\n    setAdminShipmentData(shipmentDataCopy);\r\n  };\r\n\r\n  const updateOrderStatus = (index: number) => {\r\n    const isTrackingChanged = adminShipmentData[index].trackingNumber !== orginalTrackingLink[index];\r\n    if(isTrackingChanged){\r\n      let orginalTrackingLinkCopy = [...orginalTrackingLink];\r\n      orginalTrackingLinkCopy[index] = adminShipmentData[index].trackingNumber || '';\r\n      setOrginalTrackingLink(orginalTrackingLinkCopy);\r\n    }\r\n    dispatch(updateOrderAdmin(\r\n      {...adminShipmentData[index], \r\n        orderNumber: stateData.orderNumber,\r\n        customerEmail: stateData.userDetails?.emailAddress,\r\n        customerName: stateData.userDetails?.firstName\r\n      }, isTrackingChanged))\r\n  }\r\n  return (\r\n    <form className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <header className=\"uk-card-header\"><h1 className=\"uk-h2\">Order Summay</h1></header>\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">#Order Details</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Order Number</div>\r\n                      <span className=\"uk-text-small\">{stateData.orderNumber}</span>\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Order Date</div>\r\n                      <span className=\"uk-text-small\">{stateData.paymentDate}</span>\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Order Cost</div>\r\n                      <span className=\"uk-text-small\">{stateData.paymentMode && stateData.paymentMode.toLowerCase() === 'paypal' ? '$' : '₹'}{stateData.totalPrice}</span>\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Payment Mode</div>\r\n                      <span className=\"uk-text-small\">{stateData.paymentMode}</span>\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Payment Transaction Id</div>\r\n                      <span className=\"uk-text-small\">{stateData.paymentMode && stateData.paymentMode.toLowerCase() === 'paypal' ? getPaypalTransactionId(stateData.paypalResponse) : stateData.razorpayPaymentId}</span>\r\n                    </label>\r\n                  </div>\r\n                  {\r\n                    stateData.paymentMode && stateData.paymentMode.toLowerCase() === 'paypal' &&\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Shippment Type</div>\r\n                        <span className=\"uk-text-small\">{stateData.standardShipping === false ? 'Express' : 'Standard'}</span>\r\n                      </label>\r\n                    </div>\r\n                  }\r\n\r\n                </div>\r\n                <div className=\"uk-divider-icon\"></div>\r\n              </fieldset>\r\n              {\r\n                stateData.userDetails &&\r\n                <fieldset className=\"uk-fieldset\">\r\n                  <legend className=\"uk-h4\">#User Details</legend>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Name</div>\r\n                        <span className=\"uk-text-small\">\r\n                          {stateData.userDetails.firstName + ' ' + stateData.userDetails.lastName}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Mobile</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.mobile}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Email</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.emailAddress}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Discount</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.discount || 0}%</span>\r\n                      </label>\r\n                    </div>\r\n                    {/* <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Gender</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.gender}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Date of birth</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.dob}</span>\r\n                      </label>\r\n                    </div> */}\r\n                  </div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Country</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.country}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">State</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.state}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">City</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.city}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Pincode</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.pincode}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Address</div>\r\n                        <span className=\"uk-text-small\">\r\n                          {\r\n                            stateData.userDetails.addressLineOne\r\n                            + ' ' +\r\n                            stateData.userDetails.addressLineTwo\r\n                            + ' ' +\r\n                            stateData.userDetails.addressLineThree\r\n                          }\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-divider-icon\"></div>\r\n                </fieldset>\r\n              }\r\n              {\r\n                stateData.orderItems && stateData.orderItems.length > 0 &&\r\n                <fieldset className=\"uk-fieldset\">\r\n                  <legend className=\"uk-h4\">#Order Items</legend>\r\n                  {\r\n                    stateData.orderItems.map((product, index) => {\r\n                      return (\r\n                        <Fragment key={index}>\r\n                          <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Product Image</div>\r\n                                <div className=\"tm-ratio tm-ratio-16-9\">\r\n                                  <a className=\"tm-media-box\" onClick={() => history.push('/productDetails/' + product.productId)}>\r\n                                    <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + product.productImage} alt={product.productImage} /></figure>\r\n                                  </a>\r\n                                </div>\r\n                                {/* <img src={serverImagePath + product.productImage} alt={product.productImage} /> */}\r\n                              </label>\r\n                            </div>\r\n\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Name</div>\r\n                                <span className=\"uk-text-small\">{product.productName}</span>\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Quantity</div>\r\n                                <span className=\"uk-text-small\">{product.quantity}</span>\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Price</div>\r\n                                <span className=\"uk-text-small\">{product.currency.toString() !== '1' ? '$' : '₹'}{product.productPrice}</span>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div uk-grid=\"true\" className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" >\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Shipper</div>\r\n                                <select className=\"uk-select shipper-max-width\" name=\"shipper\" id=\"shipper\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].shipper || '0'}\r\n                                  onChange={(e) => updateShipmentData(index, 'shipper', e.currentTarget.value)}\r\n                                >\r\n                                  <option key='0' value={0}>Select</option>\r\n                                  {\r\n                                    shippers.data?.map((shipper, index) => {\r\n                                      return <option key={index} value={shipper.shipperId}>{shipper.shipperName}</option>\r\n                                    })\r\n                                  }\r\n                                </select>\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Tracking Number</div>\r\n                                <input className=\"uk-input shipper-max-width\" id=\"trackingNumber\" type=\"text\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].trackingNumber || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'trackingNumber', e.currentTarget.value)}\r\n                                />\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Shipping Date</div>\r\n                                <input className=\"uk-input shipper-max-width\" id=\"shippingDate\" type=\"date\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].shippingDate || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'shippingDate', e.currentTarget.value)} />\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Delivery Date</div>\r\n                                <input className=\"uk-input shipper-max-width\" id=\"deliveryDate\" type=\"date\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].deliveryDate || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'deliveryDate', e.currentTarget.value)}\r\n                                />\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div uk-grid=\"true\" className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" >\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Return Status</div>\r\n                                <select className=\"uk-select shipper-max-width\" name=\"returnStatus\" id=\"returnStatus\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].returnStatus || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'returnStatus', e.currentTarget.value)}\r\n                                >\r\n                                  <option key='0' value={0}>Select</option>\r\n                                  <option key='1' value='In Progress'>In Progress</option>\r\n                                  <option key='2' value='Accepted'>Accepted</option>\r\n                                  <option key='3' value='Declined'>Declined</option>\r\n                                </select>\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Payment Returned</div>\r\n                                <select className=\"uk-select shipper-max-width\" name=\"paymentReturned\" id=\"paymentReturned\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].paymentReturned || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'paymentReturned', e.currentTarget.value)}\r\n                                >\r\n                                  <option key='0' value={0}>Select</option>\r\n                                  <option key='1' value='No'>No</option>\r\n                                  <option key='2' value='Yes'>Yes</option>\r\n                                </select>\r\n                              </label>\r\n                            </div>\r\n                            {/* <div>\r\n                            </div> */}\r\n\r\n                          </div>\r\n                          <div uk-grid=\"true\" className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" >\r\n                            <div className=\"uk-nav-center\">\r\n                              {\r\n                                shipmentStatus.data?.orderDetailId?.toString() === product.orderDetailId.toString() &&\r\n                                <NotificationContainer {...shipmentStatus} />\r\n                              }\r\n                              <label>\r\n                                {/* <div className=\"uk-form-label\">Save Details</div> */}\r\n                                <button className=\"uk-button uk-button-primary \"\r\n                                  disabled={shipmentStatus.data?.orderDetailId?.toString() === product.orderDetailId.toString() && shipmentStatus._isLoading}\r\n                                  onClick={(e) => { updateOrderStatus(index); e.preventDefault() }}>\r\n                                  {\r\n                                    shipmentStatus.data?.orderDetailId?.toString() === product.orderDetailId.toString() &&\r\n                                    shipmentStatus._isLoading &&\r\n                                    <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                                  }\r\n                                    Submit\r\n                                </button>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"uk-divider-order-items\"></div>\r\n                        </Fragment>\r\n                      )\r\n                    })\r\n                  }\r\n                </fieldset>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          {/* <NotificationContainer {...sizeActionStatus} />\r\n          <button disabled={sizeActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              sizeActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button> */}\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  OrderDetails\r\n}","import React, { useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, Shipper, saveShipper } from 'reducers';\r\nimport { OrderShipper } from 'types';\r\n\r\nconst ShipperDetails: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const shipperActionStatus = useSelector<AppState, Shipper>(state => state.shipper);\r\n  const shipperFormik = useFormik({\r\n    initialValues: {\r\n      shipperName: '',\r\n      trackingLink: '',\r\n      shipperId: '0'\r\n    },\r\n    validationSchema: Yup.object({\r\n      shipperName: Yup.string().required('Required'),\r\n      trackingLink: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (values: OrderShipper) => {\r\n      dispatch(saveShipper(values));\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (shipperActionStatus._isSuccess) {\r\n      shipperFormik.resetForm();\r\n    }\r\n  }, [shipperActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={shipperFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Shipper</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Shipper Name</div>\r\n                      <input className=\"uk-input \" id=\"shipperName\" type=\"input\"\r\n                        {...shipperFormik.getFieldProps('shipperName')} />\r\n                      {\r\n                        shipperFormik.touched.shipperName && shipperFormik.errors.shipperName ? (\r\n                          <span className=\"uk-text-danger\">{shipperFormik.errors.shipperName}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Tracking Link</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...shipperFormik.getFieldProps('trackingLink')} />\r\n                      {\r\n                        shipperFormik.touched.trackingLink && shipperFormik.errors.trackingLink ? (\r\n                          <span className=\"uk-text-danger\">{shipperFormik.errors.trackingLink}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...shipperActionStatus} />\r\n          <button disabled={shipperActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              shipperActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ShipperDetails\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductCoupon, OrderShipper } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateCoupon, Coupon, Shipper, updateShipper } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst ShipperList: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const deleteShipper = (shipperId: string, shipperName:string, trackingLink:string) => {\r\n    const input = window.confirm('Sure want to delete?');\r\n    if(input)dispatch(updateShipper({shipperId,shipperName,trackingLink},true));\r\n  } \r\n  const stateData = useSelector<AppState, OrderShipper[]>(state => state.shipper.data || []);  \r\n  const productColumns = [\r\n    {\r\n      name: 'Shipper Name',\r\n      selector: 'shipperName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Tracking Link',\r\n      selector: 'trackingLink',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Delete',\r\n      sortable: false,\r\n      cell: (row: { shipperName: string, trackingLink: string, shipperId: string }) => {\r\n        return  <button type=\"submit\" className=\"uk-button-small uk-button-danger\" onClick={() => deleteShipper(row.shipperId, row.shipperName, row.trackingLink)}>\r\n                   <span>Delete</span>\r\n                </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return(\r\n    <AdminProductList \r\n      productColumns={productColumns} \r\n      productType={SubProducts.SHIPPER} \r\n      ExpandableComponent= {ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Shipper Name\"\r\n      expandableRows = {true}\r\n      sortByColumn=\"shipperName\"/>\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const {shipperId,shipperName,trackingLink }: OrderShipper = data;\r\n  const shipperActionStatus = useSelector<AppState, Shipper>(state => state.shipper);\r\n\r\n  const shipperQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      shipperId,\r\n      shipperName,\r\n      trackingLink\r\n    },\r\n    validationSchema: Yup.object({\r\n      shipperName: Yup.string().required('Required'),\r\n      trackingLink: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (value: OrderShipper) => {\r\n      dispatch(updateShipper(value));\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={shipperQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Shipper Name</div>\r\n              <input className=\"uk-input \" id=\"shipperName\" type=\"input\"\r\n                {...shipperQuickViewFormik.getFieldProps('shipperName')} />\r\n              {\r\n                shipperQuickViewFormik.touched.shipperName && shipperQuickViewFormik.errors.shipperName ? (\r\n                  <span className=\"uk-text-danger\">{shipperQuickViewFormik.errors.shipperName}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Tracking Link</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...shipperQuickViewFormik.getFieldProps('trackingLink')} />\r\n              {\r\n                shipperQuickViewFormik.touched.trackingLink && shipperQuickViewFormik.errors.trackingLink ? (\r\n                  <span className=\"uk-text-danger\">{shipperQuickViewFormik.errors.trackingLink}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Shipper Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  shipperActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Update</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n        {shipperQuickViewFormik.isSubmitting && <NotificationContainer {...shipperActionStatus}/>}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ShipperList,\r\n  ExpandableComponent\r\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, setUser, UserInformation, updateUserDiscount } from 'reducers';\r\nimport { User } from 'types';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\ninterface Props{\r\n  addEditToggle: Function;\r\n}\r\n\r\nconst UserList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const stateData = useSelector<AppState, User[]>(state => state.user.allUsers || []);\r\n  console.log(stateData)\r\n  const productColumns = [\r\n    {\r\n      name: 'Email',\r\n      selector: 'emailAddress',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Mobile',\r\n      selector: 'mobile',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'First Name',\r\n      selector: 'firstName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Last Name',\r\n      selector: 'lastName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'View Details',\r\n      sortable: false,\r\n      cell: (row:  User) => {\r\n        return <button type=\"submit\" className=\"uk-button-small uk-button-primary\" onClick={() => {debugger;dispatch(setUser(row));props.addEditToggle(true)}}>\r\n          <span>View</span>\r\n        </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.USERS}\r\n      stateData={stateData}\r\n      ExpandableComponent={ExpandableComponent}\r\n      searchPlaceholder=\"Search Email / Mobile\"\r\n      expandableRows={true} />\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { emailAddress, discount }: User = data;\r\n  const userActionStatus = useSelector<AppState, UserInformation>(state => state.user);\r\n\r\n  const userDiscountQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      emailAddress: emailAddress || '',\r\n      discount: discount || ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      emailAddress: Yup.string().required('Required'),\r\n      discount: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (value) => {\r\n      dispatch(updateUserDiscount(value.discount || '0', value.emailAddress.toString()));\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={userDiscountQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Discount Percentage</div>\r\n              <input className=\"uk-input \" id=\"discount\" type=\"input\"\r\n                {...userDiscountQuickViewFormik.getFieldProps('discount')} />\r\n              {\r\n                userDiscountQuickViewFormik.touched.discount && userDiscountQuickViewFormik.errors.discount ? (\r\n                  <span className=\"uk-text-danger\">{userDiscountQuickViewFormik.errors.discount}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  userActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n        {userDiscountQuickViewFormik.isSubmitting && <NotificationContainer {...userActionStatus}/>}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserList\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState } from 'reducers';\r\nimport { User } from 'types';\r\n\r\nconst UserDetails: React.FunctionComponent = () => {\r\n  const userData = useSelector<AppState, User>(state => state.user.data || {} as User);\r\n  console.log(userData)\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <header className=\"uk-card-header\"><h1 className=\"uk-h2\">Order Summay</h1></header>\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <fieldset className=\"uk-fieldset\">\r\n                  <legend className=\"uk-h4\">#User Details</legend>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Name</div>\r\n                        <span className=\"uk-text-small\">\r\n                          {userData.firstName + ' ' + userData.lastName}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Mobile</div>\r\n                        <span className=\"uk-text-small\">{userData.mobile}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Email</div>\r\n                        <span className=\"uk-text-small\">{userData.emailAddress}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Discount</div>\r\n                        <span className=\"uk-text-small\">{userData.discount || 0}%</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Country</div>\r\n                        <span className=\"uk-text-small\">{userData.country}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">State</div>\r\n                        <span className=\"uk-text-small\">{userData.state}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">City</div>\r\n                        <span className=\"uk-text-small\">{userData.city}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Pincode</div>\r\n                        <span className=\"uk-text-small\">{userData.pincode}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Address</div>\r\n                        <span className=\"uk-text-small\">\r\n                          {\r\n                            userData.addressLineOne\r\n                            + ' ' +\r\n                            userData.addressLineTwo\r\n                            + ' ' +\r\n                            userData.addressLineThree\r\n                          }\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-divider-icon\"></div>\r\n                </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserDetails\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from \"react-router\";\r\nimport { AdminNav } from '.';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ColourList, ProductColour } from './subComponents/colour';\r\nimport { ProductSize, SizeList } from './subComponents/size';\r\nimport { ProductSubCategory, SubCategoryList } from './subComponents/subCategory';\r\nimport { ProductCoupon, CouponList } from './subComponents/coupon';\r\nimport { ProductItem, ProductList } from './subComponents/product';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getProduct, setDefaulState } from 'reducers';\r\nimport { OrderList, OrderDetails } from './subComponents/orders';\r\nimport { ShipperDetails, ShipperList } from './subComponents/shippers';\r\nimport { UserList, UserDetails } from './subComponents/users';\r\n\r\n\r\n\r\nconst MainContainer: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const {product, productId} = useParams();\r\n\r\n  useEffect(() => {\r\n    if(product == 'product' && productId){\r\n      dispatch(getProduct(Number(productId)));\r\n      setIsOnAdd(true);\r\n      setSubProductId(SubProducts.PRODUCT)\r\n    } else {\r\n      dispatch(setDefaulState());\r\n    }\r\n  },[product, productId])\r\n\r\n  const [isOnAdd, setIsOnAdd] = useState(false);\r\n  const [subProductId, setSubProductId] = useState(SubProducts.ORDERS);\r\n\r\n  const subProductToggle = (subProductId: number) => {\r\n    setSubProductId(subProductId);\r\n  }\r\n  const addEditToggle = (isOnAdd: boolean) => {\r\n    setIsOnAdd(isOnAdd);\r\n  }\r\n\r\n  const showSubProductComponent = () => {\r\n    switch (subProductId) {\r\n      case SubProducts.COLOUR:\r\n        return isOnAdd ? <ProductColour /> : <ColourList/>\r\n      case SubProducts.SIZE:\r\n        return isOnAdd ? <ProductSize/> : <SizeList/>\r\n      case SubProducts.SUB_PRODUCT:\r\n        return isOnAdd ? <ProductSubCategory/> : <SubCategoryList/>\r\n      case SubProducts.COUPONS:\r\n        return isOnAdd ? <ProductCoupon/> : <CouponList/>\r\n      case SubProducts.PRODUCT:\r\n        return isOnAdd ? <ProductItem/> : <ProductList addEditToggle={addEditToggle}/>\r\n      case SubProducts.ORDERS:\r\n        return isOnAdd ? <OrderDetails/> : <OrderList addEditToggle={addEditToggle}/>\r\n      case SubProducts.SHIPPER:\r\n        return isOnAdd ? <ShipperDetails/> : <ShipperList/>\r\n      case SubProducts.USERS:\r\n        return isOnAdd ? <UserDetails/> : <UserList addEditToggle={addEditToggle}/>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n            <AdminNav subProductToggle={subProductToggle} addEditToggle={addEditToggle} />\r\n            { showSubProductComponent() }\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  MainContainer\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nimport { getCustomerProducts, Product, setDefaulState } from 'reducers/Product';\r\nimport { AppState, SubCategory, Size, Colour, addUpdateCart, Cart, UserLocation } from 'reducers';\r\nimport { serverImagePath, pageSize } from 'appConstants';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { ProductItem, CustomerCart, Search } from 'types';\r\nimport { calculateUserDiscount, getCurrencyIcon, showINRUSD } from 'services';\r\nimport { LoadingProductArticle } from 'components/shared';\r\nimport { setSearch } from 'reducers/Search';\r\n\r\n\r\ninterface Props {\r\n  categoryId: number[];\r\n  colourId?: number[];\r\n  sizeId?: number[];\r\n  subCategoryId?: number[];\r\n  startPrice?: string;\r\n  endPrice?: string;\r\n}\r\n\r\nconst CustomerProductList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [hasMoreProducts, setHasMoreProducts] = useState(false);\r\n\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const productSize = useSelector<AppState, Size>(state => state.size);\r\n  const productColour = useSelector<AppState, Colour>(state => state.colour);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const search = useSelector<AppState, Search>(state => state.search.data || {} as Search);\r\n\r\n  // useEffect(() => {\r\n  //   if (props.categoryId !== 0) {\r\n  //     console.log('effect list')\r\n  //     dispatch(getCustomerProducts(0, pageSize, props.categoryId, props.subCategoryId || [], [], []));\r\n  //     setHasMoreProducts(true);\r\n  //   }\r\n  // }, [props.categoryId]);\r\n\r\n  useEffect(() => {\r\n    if(!products._isLoading && props.categoryId.length >0  && !subCategories._isLoading && !productSize._isLoading && !productColour._isLoading){\r\n      dispatch(setDefaulState());\r\n      dispatch(getCustomerProducts(0, pageSize, props.categoryId, props.subCategoryId || [], props.colourId || [], props.sizeId || [], props.startPrice || '', props.endPrice||'', userLocation.data || 'IN',search.searchText || '' , true));\r\n      dispatch(setSearch({\r\n        categoryId: props.categoryId,\r\n        colourId: props.colourId || [],\r\n        currency: userLocation.data || 'IN',\r\n        endPrice: props.endPrice||'',\r\n        sizeId: props.sizeId || [],\r\n        startPrice: props.startPrice || '',\r\n        subCategoryId: props.subCategoryId || [],\r\n        searchText: search.searchText || ''\r\n      }));\r\n    }\r\n  },[props.sizeId,props.categoryId,props.colourId,props.subCategoryId,props.startPrice,props.endPrice, subCategories._isLoading, productSize._isLoading, productColour._isLoading])\r\n\r\n  useEffect(()=> {\r\n    return () => {\r\n      dispatch(setSearch({\r\n        categoryId: [],\r\n        colourId: [],\r\n        currency: userLocation.data || 'IN',\r\n        endPrice: '',\r\n        sizeId:  [],\r\n        startPrice: '',\r\n        subCategoryId:  [],\r\n        searchText: search.searchText || ''\r\n      }));\r\n    }\r\n  },[]);\r\n\r\n  const fetchNextProducts = () => {\r\n    if (!products._isLoading && stateData && props.categoryId.length >0 ) {\r\n      dispatch(getCustomerProducts(stateData.length, pageSize, props.categoryId, props.subCategoryId || [], props.colourId || [], props.sizeId || [], props.startPrice || '', props.endPrice||'', userLocation.data || 'IN',search.searchText || ''));\r\n      dispatch(setSearch({\r\n        categoryId: props.categoryId,\r\n        colourId: props.colourId || [],\r\n        currency: userLocation.data || 'IN',\r\n        endPrice: props.endPrice||'',\r\n        sizeId: props.sizeId || [],\r\n        startPrice: props.startPrice || '',\r\n        subCategoryId: props.subCategoryId || [],\r\n        searchText: search.searchText || ''\r\n      }));\r\n    }\r\n  }\r\n\r\n  const products = useSelector<AppState, Product>(state => state.product || []);\r\n  useEffect(() => {\r\n    setHasMoreProducts(products._hasMoreProducts || false);\r\n  }, [products._hasMoreProducts]);\r\n\r\n\r\n  const stateData = products.data;\r\n\r\n  const addToCart = (product: ProductItem)=> {\r\n    if(!userData.data?.userId){\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: product.productDetailId,\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: showINRUSD(userLocation.data || 'IN', product),\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, false))\r\n    }else {\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: '0',\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: '0',\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, true))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"uk-width-expand\">\r\n      <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n        <div>\r\n          <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n            <div className=\"uk-grid-collapse uk-child-width-1-1\" id=\"products\" uk-grid=\"true\">\r\n              <div className=\"uk-card-header uk-hidden@m\">\r\n                <div className=\"uk-grid-small uk-flex-middle uk-flex-center\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-1-1 uk-width-auto@s uk-flex uk-flex-center uk-flex-middle\">\r\n                    <button className=\"uk-button uk-button-default uk-button-small uk-hidden@m\" uk-toggle=\"target: #filters\">\r\n                      <span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: settings; ratio: .75;\"></span>Filters\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div>\r\n\r\n                <InfiniteScroll\r\n                  dataLength={stateData && stateData.length || 0}\r\n                  next={fetchNextProducts}\r\n                  hasMore={hasMoreProducts}\r\n                  loader={\r\n                    <div style={{ textAlign: \"center\", marginTop: \"10px\" }}>\r\n                      <h4>Loading...</h4>\r\n                    </div>\r\n                  }\r\n                  endMessage={\r\n                    <p style={{ textAlign: \"center\" }}>\r\n                      <b>That's all for now. Do check back after some time for more products.</b>\r\n                    </p>\r\n                  }\r\n                >\r\n                  <div className=\"uk-grid-collapse uk-child-width-custom tm-products-grid js-products-grid\" uk-grid=\"true\">\r\n                    {\r\n                       stateData && stateData.length > 0 ? stateData.map((product, index) => {\r\n                        return (\r\n                          <article className=\"tm-product-card\" key={index}>\r\n                            <div className=\"tm-product-card-media\">\r\n                              <div className=\"tm-ratio tm-ratio-4-3\">\r\n                                <a className=\"tm-media-box\" onClick={()=> history.push('/productDetails/'+ product.productId)}>\r\n                                  \r\n                                  <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + product.imagePaths} alt={product.imageNames}/></figure>\r\n                                </a>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"tm-product-card-body\">\r\n                              <div className=\"tm-product-card-info\">\r\n                                <div className=\"uk-text-meta uk-margin-xsmall-bottom\">{product.productCategoryName}</div>\r\n                                <h3 className=\"tm-product-card-title\"><a className=\"uk-link-heading\" onClick={()=> history.push('/productDetails/'+ product.productId)}>{product.name}</a></h3>\r\n                              </div>\r\n                              <div className=\"tm-product-card-shop\">\r\n                                <div className=\"tm-product-card-prices\">\r\n                                  {\r\n                                    userData.data?.discount && userData.data?.discount !== '0' &&\r\n                                    <del className=\"uk-text-meta\">{getCurrencyIcon(userLocation.data || 'IN')} {showINRUSD(userLocation.data || 'IN', product)}</del>\r\n                                  }\r\n                                  <div className=\"tm-product-card-price\">\r\n                                    {getCurrencyIcon(userLocation.data || 'IN')} {calculateUserDiscount(userData.data?.discount ||'0', showINRUSD(userLocation.data || 'IN', product))}\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"tm-product-card-add\">\r\n                                  <button className=\"uk-button uk-button-primary tm-product-card-add-button tm-shine js-add-to-cart\">\r\n                                    {\r\n                                      cart._isLoading && <span uk-spinner=\"true\"></span>\r\n                                    }\r\n                                    {\r\n                                      !cart._isLoading && (\r\n                                        <>\r\n                                        <span className=\"tm-product-card-add-button-icon\" uk-icon=\"cart\" onClick={() => addToCart(product)}></span>\r\n                                        <span className=\"tm-product-card-add-button-text\">add to cart</span>\r\n                                        </>\r\n                                      )\r\n                                    }\r\n                                    \r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </article>\r\n                        )\r\n                      }) : products._hasMoreProducts  && Array(pageSize).fill(1).map((value, index) => <LoadingProductArticle key={index} keyIndex={index}/>)\r\n                    }\r\n                  </div>\r\n                </InfiniteScroll>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerProductList\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { CustomerProductFilter } from '.';\r\nimport { AppState, ProductCount, getActiveProductCount } from 'reducers';\r\nimport { SubCategory, getSubCategory } from 'reducers/SubCategory';\r\nimport { ProductSubCategory, ProductSize, ProductColor, Search } from 'types';\r\nimport { filterSubcategories } from 'services';\r\nimport { SubCategories } from 'appConstants';\r\nimport { CustomerProductList } from './CustomerProductList';\r\nimport { setDefaulState } from 'reducers/Product';\r\nimport { getSize, Size } from 'reducers/Size';\r\nimport { getColour, Colour } from 'reducers/Colour';\r\n\r\n\r\n\r\n\r\nconst CustomerContainer: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const {product, filterOn} = useParams();\r\n  const [colourId, setColourId] = useState<number[]>([]);\r\n  const [sizeId, setSizeId] = useState<number[]>([]);\r\n  const [subCategoryId, setSubCategoryId] = useState<number[]>([]);\r\n  const [startPrice, setStartPrice] = useState('');\r\n  const [endPrice, setEndPrice] = useState('');\r\n  const [categoryId, setcategoryId] = useState<number[]>([]);\r\n  const [subCategoryQueryParam, setSubCategoryQueryParam] = useState<ProductSubCategory[]>([]);\r\n  const productSize = useSelector<AppState, ProductSize[]>(state => state.size.data || []);\r\n  const productColour = useSelector<AppState, ProductColor[]>(state => state.colour.data || []);\r\n  const search = useSelector<AppState, Search>(state => state.search.data || {} as Search);\r\n\r\n  useEffect(()=> {\r\n    dispatch(getSubCategory());\r\n    dispatch(getSize());\r\n    dispatch(getColour());\r\n  },[]);\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(setDefaulState());\r\n    const filteredKey = Object.keys(SubCategories).filter((key) => key.toLowerCase() === product.toLowerCase());\r\n    if(filteredKey[0]){\r\n      setcategoryId([SubCategories[filteredKey[0]]]);\r\n    } else {\r\n      const subCateId : number[] = [];\r\n      for(let key in SubCategories){\r\n        subCateId.push(SubCategories[key])\r\n      }\r\n      setcategoryId(subCateId)\r\n    }\r\n    if(!filterOn){\r\n      setSubCategoryId([]);\r\n    }\r\n\r\n  }, [product]);\r\n\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const activeProductCount = useSelector<AppState, ProductCount>(state => state.productCount);\r\n  const productKey = Object.keys(SubCategories).find((subcategory) => subcategory.toLowerCase() === product.toLowerCase()) || '';\r\n  let filteredSubcategories = filterSubcategories(subCategories, SubCategories[productKey]);;\r\n  if(product.toLowerCase() === 'search'){\r\n    filteredSubcategories = subCategories.data || []\r\n  }\r\n  \r\n\r\n  useEffect(()=> {\r\n    if(filterOn &&  !subCategories._isLoading && subCategories.data && subCategories.data.length >0){\r\n      setSubCategoryId([Number(subCategories.data?.filter(({code}) => code.toLowerCase() === filterOn.toLowerCase())[0].subCategoryId)]);\r\n    setSubCategoryQueryParam(subCategories.data?.filter(({code}) => code.toLowerCase() === filterOn.toLowerCase()) || [])\r\n    }\r\n  },[filterOn, subCategories._isLoading])\r\n\r\n  const getTotalProductCount = () => {\r\n    let count = 0;\r\n    const activeProducts = activeProductCount.data\r\n    if(activeProducts){\r\n      const selectedSubCat = subCategoryId.length>0 ? subCategoryId : filteredSubcategories.map(({subCategoryId}) => Number(subCategoryId));\r\n      const selectedColour = colourId.length > 0 ? colourId : productColour.length> 0 ?  productColour.map(({colourId}) => Number(colourId)) : [];\r\n      const selectedSize = sizeId.length > 0 ? sizeId : productSize.length > 0 ? productSize.map(({sizeId}) => Number(sizeId)) : [];\r\n      selectedSubCat.forEach((subCategory) => {\r\n        const activeSubCat = activeProducts[subCategory];\r\n        if(activeSubCat){\r\n          selectedColour.forEach((colour) => {\r\n            const activeColour = activeSubCat[colour];\r\n            if(activeColour){\r\n              selectedSize.forEach((size) => {\r\n                const activeSize = activeColour[size];\r\n                if(activeSize) {\r\n                  count+= activeSize.quantity;\r\n                }\r\n                \r\n              })\r\n            }\r\n          })\r\n        }\r\n      });\r\n    }\r\n    return count;\r\n  };\r\n\r\n  // const getIdsForfilter = () => {\r\n  //   const filteredKey = Object.keys(SubCategories).filter((key) => key.toLowerCase() === product.toLowerCase());\r\n  //   if(filteredKey[0]){\r\n  //     setcategoryId(Number(SubCategories[filteredKey[0]]));\r\n  //   }\r\n  // }\r\n\r\n  // getIdsForfilter()\r\n  return (\r\n    <main>\r\n    <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n                <div className=\"uk-text-center\">\r\n                    <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                        <li><a onClick={() => history.push('/')}>Home</a></li>\r\n                        <li><span>Product</span></li>\r\n                    </ul>\r\n                    <h1 className=\"uk-margin-small-top uk-margin-remove-bottom customer-product\">{product}</h1>\r\n                    {\r\n                      search.searchText === '' && <div className=\"uk-text-meta uk-margin-xsmall-top\">{ getTotalProductCount()} items</div>\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n                        {\r\n                          <CustomerProductFilter \r\n                          subCategories= {filteredSubcategories}\r\n                          activeProductCount= {activeProductCount}\r\n                          filterSelected={subCategoryQueryParam}\r\n                          categoryId={categoryId}\r\n                          setColourId={setColourId}\r\n                          setSizeId={setSizeId}\r\n                          setSubCategoryId={setSubCategoryId}\r\n                          setStartPrice={setStartPrice}\r\n                          setEndPrice={setEndPrice}\r\n                          />\r\n                        }\r\n                        {\r\n                        <CustomerProductList \r\n                          categoryId={categoryId}\r\n                          colourId={colourId}\r\n                          sizeId={sizeId}\r\n                          subCategoryId={subCategoryId}\r\n                          startPrice={startPrice}\r\n                          endPrice={endPrice}\r\n                          />\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</main>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerContainer\r\n}","import React, { Dispatch, SetStateAction, useState, useEffect } from 'react';\r\nimport { ProductSubCategory, ActiveProductCount, ProductColor, ProductSize } from 'types';\r\nimport { ProductCount, AppState, Size, Colour, getCustomerProducts } from 'reducers';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// import { Size } from 'reducers/Size';\r\n// import { Colour } from 'reducers/Colour';\r\nimport { filterSize } from 'services';\r\nimport { pageSize } from 'appConstants';\r\nimport { setDefaulState } from 'reducers/Product';\r\nimport { useParams } from 'react-router-dom';\r\n// import { getCustomerProducts } from 'reducers/Product';\r\n\r\n\r\ninterface Props {\r\n  filterSelected: ProductSubCategory[];\r\n  subCategories: ProductSubCategory[];\r\n  activeProductCount: ProductCount;\r\n  categoryId: number[];\r\n  setColourId: Dispatch<SetStateAction<number[]>>;\r\n  setSizeId: Dispatch<SetStateAction<number[]>>;\r\n  setSubCategoryId: Dispatch<SetStateAction<number[]>>;\r\n  setStartPrice: Dispatch<SetStateAction<string>>;\r\n  setEndPrice: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\n\r\nconst CustomerProductFilter: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const {product} = useParams();\r\n  const [filterColourId, setFilterColourId] = useState<number[]>([]);\r\n  const [filterSizeId, setFilterSizeId] = useState<number[]>([]);\r\n  const [filterSubCategory, setFilterSubCategory] = useState<number[]>([]);\r\n  const [filterStartPrice, setFilterStartPrice] = useState('');\r\n  const [filterEndPrice, setFilterEndPrice] = useState('');\r\n  const [startPriceTimer, setStartPriceTimer] = useState(0);\r\n  const [endPriceTimer, setEndPriceTimer] = useState(0);\r\n  const productSize = useSelector<AppState, Size>(state => state.size);\r\n  const productColour = useSelector<AppState, Colour>(state => state.colour);\r\n\r\n  const getProductCount = (id=0) => {\r\n    let count = 0;\r\n    const activeProducts = props.activeProductCount.data\r\n    if(activeProducts){\r\n      const selectedColour = filterColourId.length > 0 ? filterColourId : productColour.data && productColour.data.length> 0 ?  productColour.data.map(({colourId}) => Number(colourId)) : [];\r\n      const selectedSize = filterSizeId.length > 0 ? filterSizeId : productSize.data && productSize.data.length > 0 ? productSize.data.map(({sizeId}) => Number(sizeId)) : [];\r\n      \r\n      const activeSubCat = activeProducts[id];\r\n      if(activeSubCat){\r\n        selectedColour.forEach((colour) => {\r\n          const activeColour = activeSubCat[colour];\r\n          if(activeColour){\r\n            selectedSize.forEach((size) => {\r\n              const activeSize = activeColour[size];\r\n              if(activeSize) {\r\n                count+= activeSize.quantity;\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    }\r\n    return count\r\n  }\r\n\r\n  const toggleAddingRemovingId = (ids: number[], newId: number) => {\r\n    const index = ids.indexOf(newId);\r\n    if (index > -1){\r\n      ids.splice(index,1);\r\n    } else {\r\n      ids.push(newId);\r\n    }\r\n    return ids;\r\n  }\r\n  const getFilteredProduct = (colour: number, size: number, subCategory?: number, startPrice?: string, endPrice?: string) => {\r\n    if(colour != 0){\r\n      const updatedColourFilter = toggleAddingRemovingId(filterColourId, colour);\r\n      setFilterColourId([...updatedColourFilter]);\r\n      props.setColourId([...updatedColourFilter]);\r\n    } else if (size != 0){\r\n      const updatedSizeFilter = toggleAddingRemovingId(filterSizeId, size);\r\n      setFilterSizeId([...updatedSizeFilter]);\r\n      props.setSizeId([...updatedSizeFilter]);\r\n    } else if (subCategory && subCategory != 0){\r\n      const updatedSubCategory = toggleAddingRemovingId(filterSubCategory, subCategory);\r\n      setFilterSubCategory([...updatedSubCategory]);\r\n      props.setSubCategoryId([...updatedSubCategory]);\r\n    } else if(startPrice!=='0' && !endPrice){\r\n      setFilterStartPrice(startPrice || '');\r\n      window.clearTimeout(startPriceTimer);\r\n      setStartPriceTimer(window.setTimeout(() => {\r\n        props.setStartPrice(startPrice || '')\r\n      },1000));\r\n    } else if(endPrice || (!endPrice && filterEndPrice)){\r\n      setFilterEndPrice(endPrice || '');\r\n      window.clearTimeout(endPriceTimer);\r\n      setEndPriceTimer(window.setTimeout(() => {\r\n        props.setEndPrice(endPrice || '')\r\n      },1000));\r\n    }\r\n  }\r\n\r\n  const restFilter = () => {\r\n    setFilterColourId([]);\r\n    props.setColourId([]);\r\n    setFilterSizeId([]);\r\n    props.setSizeId([]);\r\n    setFilterSubCategory([]);\r\n    props.setSubCategoryId([]);\r\n    setFilterStartPrice('');\r\n    props.setStartPrice('');\r\n    setFilterEndPrice('');\r\n    props.setEndPrice('')\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   console.log('filter on effect')\r\n  //   if(props.filterSelected && props.filterSelected.length > 0){\r\n  //     if(filterSubCategory.length> 0){\r\n  //       setFilterSubCategory([]);\r\n  //     }\r\n  //     const updatedSubCategory = toggleAddingRemovingId(filterSubCategory, Number(props.filterSelected[0].subCategoryId));\r\n  //     setFilterSubCategory([...updatedSubCategory]);\r\n  //   }\r\n  // },[props.filterSelected]);\r\n\r\n  useEffect(() => {\r\n    if(props.filterSelected.length>0){\r\n      // const updatedSubCategory = toggleAddingRemovingId(filterSubCategory, Number(props.filterSelected[0].subCategoryId));\r\n      setFilterSubCategory([Number(props.filterSelected[0].subCategoryId)]);\r\n      // props.setSubCategoryId([Number(props.filterSelected[0].subCategoryId)]);\r\n    }\r\n  }, [props.filterSelected]);\r\n\r\n  // useEffect(() => {\r\n  //   // dispatch(setDefaulState());\r\n  //   if(props.categoryId != 0){\r\n  //     console.log(filterColourId,filterSizeId, filterSubCategory)\r\n  //     console.log('effect filter')\r\n  //     dispatch(getCustomerProducts(0, pageSize, props.categoryId,filterSubCategory, filterColourId , filterSizeId, true));\r\n  //   }\r\n  // }, [filterColourId,filterSizeId, filterSubCategory,props.categoryId]);\r\n\r\n  return (\r\n    <aside className=\"uk-width-1-4 tm-aside-column tm-filters\" id=\"filters\" uk-offcanvas=\"overlay: true; container: false;\">\r\n      <div className=\"uk-offcanvas-bar uk-padding-remove\">\r\n        <div className=\"uk-card uk-card-default uk-card-small uk-flex uk-flex-column uk-height-1-1\">\r\n          <header className=\"uk-card-header uk-flex uk-flex-middle\">\r\n            <div className=\"uk-grid-small uk-flex-1\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand\"><h3>Filters</h3></div>\r\n              <button className=\"uk-offcanvas-close\" type=\"button\" uk-close=\"true\"></button>\r\n            </div>\r\n          </header>\r\n          <div className=\"uk-margin-remove uk-flex-1\" uk-accordion=\"multiple: true; targets: &gt; .js-accordion-section\" style={{ flexBasis: \"auto\" }}>\r\n            <section className=\"uk-card-body uk-open js-accordion-section\">\r\n              <h4 className=\"uk-accordion-title uk-margin-remove\">Prices</h4>\r\n              <div className=\"uk-accordion-content\">\r\n                <div className=\"uk-grid-small uk-child-width-1-2 uk-text-small\" uk-grid=\"true\">\r\n                  <div>\r\n                    <div className=\"uk-inline\">\r\n                      <span className=\"uk-form-icon uk-text-xsmall\">from</span>\r\n                      <input className=\"uk-input\" type=\"number\" placeholder=\"₹₹₹\"\r\n                      value={filterStartPrice} \r\n                      onChange={(e) => getFilteredProduct(0,0,0,e.currentTarget.value)}/>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"uk-inline\">\r\n                      <span className=\"uk-form-icon uk-text-xsmall\">to</span>\r\n                      <input className=\"uk-input\" type=\"text\" placeholder=\"₹₹₹\" \r\n                      value={filterEndPrice}\r\n                      onChange={(e) => getFilteredProduct(0,0,0,'0',e.currentTarget.value)}/>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n            {\r\n              props.subCategories.length > 0 &&\r\n              <section className=\"uk-card-body js-accordion-section uk-open\">\r\n              <h4 className=\"uk-accordion-title uk-margin-remove\">Categories</h4>\r\n              <div className=\"uk-accordion-content\">\r\n                <ul className=\"uk-list tm-scrollbox\">\r\n                  {\r\n                    props.subCategories.map((subcategory: ProductSubCategory) => {\r\n                      return (\r\n                        <li key={subcategory.code}>\r\n                          <input \r\n                            className=\"tm-checkbox\"\r\n                            id={\"subproduct\" + subcategory.code}\r\n                            name=\"subproduct\"\r\n                            value={subcategory.code}\r\n                            checked={filterSubCategory.indexOf(Number(subcategory.subCategoryId)) > -1}\r\n                            type=\"checkbox\"\r\n                            onChange={() => getFilteredProduct(0, 0, Number(subcategory.subCategoryId))}\r\n                            />\r\n                          <label htmlFor={\"subproduct\" + subcategory.code}>\r\n                            <span>{subcategory.code} <span className=\"uk-text-meta uk-text-small\">{getProductCount(Number(subcategory.subCategoryId))}</span></span>\r\n                          </label>\r\n                        </li>\r\n                      )\r\n                    })\r\n                  }\r\n                </ul>\r\n              </div>\r\n            </section>\r\n            }\r\n            \r\n            {\r\n              productColour.data && productColour.data.length > 0 &&\r\n              <section className=\"uk-card-body js-accordion-section uk-open\">\r\n                <h4 className=\"uk-accordion-title uk-margin-remove\">Colour</h4>\r\n                <div className=\"uk-accordion-content\">\r\n                  <ul className=\"uk-list tm-scrollbox\">\r\n                    {\r\n                      productColour.data.map((colour: ProductColor) => {\r\n                        return (\r\n                          <li key={colour.colourId}>\r\n                            <input \r\n                              className=\"tm-checkbox\" \r\n                              id={\"colour\" + colour.colourId} \r\n                              name=\"colour\" \r\n                              value={colour.colourId} \r\n                              type=\"checkbox\"\r\n                              checked={filterColourId.indexOf(Number(colour.colourId)) > -1}\r\n                              onChange={() => getFilteredProduct(Number(colour.colourId), 0, 0)} \r\n                            />\r\n                            <label htmlFor={\"colour\" + colour.colourId}>\r\n                              <span>{colour.value} </span>\r\n                            </label>\r\n                          </li>\r\n                        )\r\n                      })\r\n                    }\r\n                  </ul>\r\n                </div>\r\n              </section>\r\n            }\r\n            {\r\n              productSize.data && productSize.data.length > 0 &&\r\n              !(filterSize(productSize,props.categoryId).length === 1 && \r\n              filterSize(productSize,props.categoryId)[0].value.toLowerCase() === 'default') &&\r\n              <section className=\"uk-card-body js-accordion-section uk-open\">\r\n                <h4 className=\"uk-accordion-title uk-margin-remove\">Size</h4>\r\n                <div className=\"uk-accordion-content\">\r\n                  <ul className=\"uk-list tm-scrollbox\">\r\n                    {\r\n                      filterSize(productSize,props.categoryId).map((size: ProductSize) => {\r\n                        return (\r\n                          size.value.toLowerCase() !== 'default' &&\r\n                          <li key={size.sizeId}>\r\n                            <input \r\n                              className=\"tm-checkbox\"\r\n                              id={\"size\" + size.sizeId}\r\n                              name=\"size\"\r\n                              value={size.sizeId}\r\n                              type=\"checkbox\"\r\n                              checked={filterSizeId.indexOf(Number(size.sizeId)) > -1}\r\n                              onChange={() => getFilteredProduct(0,Number(size.sizeId), 0)} \r\n                              />\r\n                            <label htmlFor={\"size\" + size.sizeId}>\r\n                              <span>{size.value} </span>\r\n                            </label>\r\n                          </li>\r\n                        )\r\n                      })\r\n                    }\r\n                  </ul>\r\n                </div>\r\n              </section>\r\n            }\r\n            <div className=\"uk-card-body\">\r\n              <button className=\"uk-button uk-button-default uk-width-1-1\" onClick={() => restFilter()}><span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: close; ratio: .75;\"></span>Reset all filters</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerProductFilter\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProduct, setDefaulState } from 'reducers/Product';\r\nimport { AppState, addUpdateCart, Cart, UserLocation } from 'reducers';\r\nimport { ProductItem, CustomerCart } from 'types';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { CustomerProductDetailsLoading } from '.';\r\nimport { calculateUserDiscount, getCurrencyIcon, showINRUSD } from 'services';\r\nimport { QuickProductList } from 'components/shared';\r\n\r\ninterface cartQuantity {\r\n  [key: string]: string;\r\n};\r\n\r\n\r\ninterface Props {\r\n  mainSlider: JSX.Element[] | undefined;\r\n  smallSlider: JSX.Element[] | undefined;\r\n  productCategoryName: string;\r\n  name: string;\r\n  priceINR: string;\r\n  priceUSD: string;\r\n  description: string;\r\n  size: string;\r\n  sizeId: string;\r\n  quantity: string;\r\n  productId: string;\r\n  productDetailId: string;\r\n  imageName: string;\r\n  imagePath: string;\r\n  cartProductQuantity: cartQuantity;\r\n};\r\n\r\nconst CustomerProductDetails: React.FunctionComponent<Props> = (props: Props) => {\r\n  const {\r\n    priceINR,\r\n    priceUSD,\r\n    quantity,\r\n    size,\r\n    sizeId,\r\n    productId,\r\n    productDetailId,\r\n    imageName,\r\n    imagePath,\r\n    productCategoryName,\r\n    name,\r\n    cartProductQuantity\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const relatedProducts = useSelector<AppState, ProductItem[]>(state => state.relatedProduct.data || []);\r\n\r\n  const [pINR, setPINR] = useState('0');\r\n  const [pUSD, setPUSD] = useState('0');\r\n  const [pQuantity, setPQuantity] = useState(['']);\r\n  const [pSize, setPSize] = useState(['']);\r\n  const [pSizeId, setPSizeId] = useState(['']);\r\n  const [pDetailId, setPDetailId] = useState(['']);\r\n  const [selectedSize, setSelectedSize] = useState('0');\r\n  const [selectedQuantity, setSelectedQuantity] = useState('1');\r\n  const [selectedProductDetailId, setSelectedProductDetailId] = useState('0');\r\n  const [maxQuantity, setMaxQuantity] = useState('0');\r\n\r\n  useEffect(() => {\r\n    setPINR(priceINR.split(',')[0]);\r\n    setPUSD(priceUSD.split(',')[0]);\r\n  }, [priceINR, priceUSD]);\r\n\r\n\r\n  useEffect(() => {\r\n    setPQuantity(quantity.split(','));\r\n    setPSize(size.split(','));\r\n    setPSizeId(sizeId.split(','));\r\n    setSelectedSize(sizeId.split(',')[0].toString());\r\n    const defaultProductDetail = productDetailId.split(',')[0];\r\n    setMaxQuantity((Number(quantity.split(',')[0]) - Number(cartProductQuantity[defaultProductDetail.toString()] || 0)).toString());\r\n    setPDetailId(productDetailId.split(','));\r\n    setSelectedProductDetailId(defaultProductDetail);\r\n  }, [quantity, size, sizeId, productDetailId]);\r\n\r\n  useEffect(() => {\r\n    if (maxQuantity !== '0') {\r\n      const productIndex = pDetailId.indexOf(selectedProductDetailId);\r\n      setMaxQuantity((Number(pQuantity[productIndex]) - Number(cartProductQuantity[selectedProductDetailId] || '0')).toString());\r\n      onChangeQuantity(cartProductQuantity[selectedProductDetailId] || '0', Number(pQuantity[productIndex]) - Number(cartProductQuantity[selectedProductDetailId]));\r\n    }\r\n  }, [cartProductQuantity]);\r\n\r\n  const toggleQuantity = (isIncrement: boolean) => {\r\n    if (isIncrement) {\r\n      if (Number(selectedQuantity) <= Number(maxQuantity)) {\r\n        setSelectedQuantity((Number(selectedQuantity) + 1).toString());\r\n      }\r\n    } else {\r\n      if (selectedQuantity !== '1') {\r\n        setSelectedQuantity((Number(selectedQuantity) - 1).toString());\r\n      }\r\n    }\r\n  }\r\n\r\n  const setSize = (sizeId: string) => {\r\n    setSelectedSize(sizeId);\r\n    const selectedIndex = pSizeId.indexOf(sizeId);\r\n    const maxQ = pQuantity[selectedIndex];\r\n    const pdId = pDetailId[selectedIndex];\r\n    setSelectedProductDetailId(pdId);\r\n    setMaxQuantity((Number(maxQ) - Number(cartProductQuantity[pdId] || 0)).toString());\r\n    if (Number(selectedQuantity) > Number(maxQ)) {\r\n      setSelectedQuantity(maxQ);\r\n    }\r\n  }\r\n\r\n  const onChangeQuantity = (quantity: string, maxQaun = -1) => {\r\n    if (Number(quantity) > Number(maxQaun !== -1 ? maxQaun : maxQuantity)) {\r\n      setSelectedQuantity(Number(maxQaun !== -1 ? maxQaun : maxQuantity).toString())\r\n    } else {\r\n      setSelectedQuantity(Number(quantity).toString())\r\n    }\r\n  };\r\n\r\n  const onBlurQuantity = (quantity: string) => {\r\n    if (quantity === '' || Number(quantity) === 0) {\r\n      setSelectedQuantity('1')\r\n    }\r\n  };\r\n\r\n  const addToCart = () => {\r\n    if (!userData.data?.userId) {\r\n      const cartData = {\r\n        productDetailId: selectedProductDetailId,\r\n        productQuantity: selectedQuantity,\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: selectedProductDetailId.toString(),\r\n        productImage: imageName,\r\n        productImagePath: imagePath,\r\n        productName: name,\r\n        subcategory: productCategoryName,\r\n        productPrice: showINRUSD(userLocation.data || 'IN', { priceINR: pINR, priceUSD: pUSD }),\r\n        productId: productId,\r\n      } as CustomerCart;\r\n\r\n      dispatch(addUpdateCart(cartData, false))\r\n    } else {\r\n      const cartData = {\r\n        productDetailId: selectedProductDetailId,\r\n        productQuantity: selectedQuantity,\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: '0',\r\n        productImage: imageName,\r\n        productImagePath: imagePath,\r\n        productName: name,\r\n        subcategory: productCategoryName,\r\n        productPrice: '0',\r\n        productId: productId,\r\n      } as CustomerCart;\r\n\r\n      dispatch(addUpdateCart(cartData, true))\r\n    }\r\n  }\r\n\r\n  const checkForDefaultSize = (sizeList: string[]) => {\r\n    return sizeList.length === 1 && sizeList[0].toLowerCase() === 'default';\r\n  }\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a onClick={() => history.push('/')}>Home</a></li>\r\n                <li><span>Product</span></li>\r\n                <li><a onClick={() => history.push('/product/' + props.productCategoryName)}>{props.productCategoryName}</a></li>\r\n              </ul>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom\">{props.name}</h1>\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n                <div>\r\n                  <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n                    <div className=\"uk-grid-small uk-grid-collapse uk-grid-match\" uk-grid=\"true\">\r\n                      <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n                        <div className=\"uk-grid-collapse uk-child-width-1-1\" uk-slideshow=\"finite: true; ratio: 4:3;\" uk-grid=\"true\">\r\n                          <div>\r\n                            <ul className=\"uk-slideshow-items\" uk-lightbox=\"true\">\r\n                              {\r\n                                props.mainSlider\r\n                              }\r\n                            </ul>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"uk-card-body uk-flex uk-flex-center\">\r\n                              <div className=\"uk-width-1-2 uk-visible@s\">\r\n                                <div uk-slider=\"finite: true\">\r\n                                  <div className=\"uk-position-relative\">\r\n                                    <div className=\"uk-slider-container\">\r\n                                      <ul className=\"tm-slider-items uk-slider-items uk-child-width-1-4 uk-grid uk-grid-small\">\r\n                                        {\r\n                                          props.smallSlider\r\n                                        }\r\n                                      </ul>\r\n                                      <div>\r\n                                        <a className=\"uk-position-center-left-out uk-position-small\" href=\"#\" uk-slider-item=\"previous\" uk-slidenav-previous=\"true\"></a>\r\n                                        <a className=\"uk-position-center-right-out uk-position-small\" href=\"#\" uk-slider-item=\"next\" uk-slidenav-next=\"true\"></a>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <ul className=\"uk-slideshow-nav uk-dotnav uk-hidden@s\"></ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"uk-width-1-1 uk-width-1-3@m tm-product-info\">\r\n                        <div className=\"uk-card-body\">\r\n                          <div className=\"uk-margin\">\r\n                            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"uk-margin\">\r\n                            <div className=\"uk-padding-small uk-background-primary-lighten uk-border-rounded\">\r\n                              <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                                <div>\r\n                                  {\r\n                                    userData.data?.discount && userData.data?.discount !== '0' &&\r\n                                    <del className=\"uk-text-meta\">{getCurrencyIcon(userLocation.data || 'IN')} {showINRUSD(userLocation.data || 'IN', { priceINR: pINR, priceUSD: pUSD })}</del>\r\n                                  }\r\n                                  <div className=\"tm-product-price\">{getCurrencyIcon(userLocation.data || 'IN')} {calculateUserDiscount(userData.data?.discount || '0', showINRUSD(userLocation.data || 'IN', { priceINR: pINR, priceUSD: pUSD }))}</div>\r\n                                </div>\r\n                                <div>\r\n                                  <div className=\"uk-grid-small uk-child-width-1-2\" uk-grid=\"true\">\r\n                                    <div className={`${checkForDefaultSize(pSize) ? 'default-product-size' : ''}`}>\r\n                                      <label>\r\n                                        <div className=\"uk-form-label\">Size</div>\r\n                                        <select className=\"uk-select\"\r\n                                          value={selectedSize}\r\n                                          id=\"selectedSize\"\r\n                                          onChange={(e) => { setSize(e.currentTarget.value) }}>\r\n                                          {\r\n                                            pSize.map((size, index) => {\r\n                                              return <option key={index} value={pSizeId[index]}>{size}</option>\r\n                                            })\r\n                                          }\r\n\r\n                                        </select>\r\n                                      </label>\r\n                                    </div>\r\n                                    <div>\r\n                                      <label>\r\n                                        <div className=\"uk-form-label\">Quantity {selectedSize !== '0' && <span className=\"uk-notification-message-danger uk-text-meta\">(Max {maxQuantity})</span>}</div>\r\n                                        <div>\r\n                                          <div className=\"uk-inline\">\r\n                                            {Number(selectedQuantity) === 1 && <a className=\"uk-form-icon\"></a>}\r\n                                            {Number(selectedQuantity) > 1 && <a className=\"uk-form-icon\" onClick={() => toggleQuantity(false)} uk-icon=\"icon: minus\"></a>}\r\n                                            {Number(selectedQuantity) < Number(maxQuantity) && <a className=\"uk-form-icon uk-form-icon-flip\" onClick={() => toggleQuantity(true)} uk-icon=\"icon: plus\"></a>}\r\n                                            {Number(selectedQuantity) === Number(maxQuantity) && <a className=\"uk-form-icon uk-form-icon-flip\"></a>}\r\n                                            <input className=\"uk-input uk-text-center\"\r\n                                              onChange={(e) => onChangeQuantity(e.currentTarget.value)}\r\n                                              onBlur={(e) => onBlurQuantity(e.currentTarget.value)}\r\n                                              type=\"number\"\r\n                                              value={selectedQuantity} />\r\n                                          </div>\r\n                                        </div>\r\n                                      </label>\r\n                                    </div>\r\n                                    <div className={`${checkForDefaultSize(pSize) ? 'single-size-cart-button' : ''}`}>\r\n                                      <button\r\n                                        disabled={Number(maxQuantity) === 0}\r\n                                        className=\"uk-button uk-button-primary tm-product-add-button tm-shine js-add-to-cart\"\r\n                                        onClick={() => addToCart()}>\r\n                                        add to cart\r\n                                        </button>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div>\r\n                                  {\r\n                                    props.productCategoryName.toLowerCase() === 'footwear' && \r\n                                    <a uk-toggle=\"target: #product-size-model\" className=\"uk-margin-xsmall-right uk-notification-message-danger\"><span uk-icon=\"file-text\"></span> Size Chart </a>\r\n                                  }\r\n                                  \r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"uk-margin\">\r\n                            <div className=\"uk-padding-small uk-background-muted uk-border-rounded\">\r\n                              <div className=\"uk-grid-small uk-child-width-1-1 uk-text-small\" uk-grid=\"true\">\r\n                                <div>\r\n                                  <div className=\"uk-grid-collapse\" uk-grid=\"true\">\r\n                                    {/* <span className=\"uk-margin-xsmall-right\" uk-icon=\"chevron-right\"></span> */}\r\n                                    <div>\r\n                                      <div className=\"uk-text-bolder\">Product Details</div>\r\n                                      <div className=\"uk-text-small uk-text-muted\">\r\n                                        {props.description}\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      {/* <div className=\"uk-width-1-1 tm-product-description\" id=\"description\">\r\n                        <header>\r\n                          <nav className=\"tm-product-nav\" uk-sticky=\"offset: 60; bottom: #description; cls-active: tm-product-nav-fixed;\">\r\n                            <ul className=\"uk-subnav uk-subnav-pill js-product-switcher\" uk-switcher=\"connect: .js-tabs\">\r\n                              <li><a className=\"js-scroll-to-description\" href=\"#description\">Overview</a></li>\r\n                            </ul>\r\n                          </nav>\r\n                        </header>\r\n                        <div className=\"uk-card-body\">\r\n                          <div className=\"uk-switcher js-product-switcher js-tabs\">\r\n                            <section>\r\n                              <article className=\"uk-article\">\r\n                                <div className=\"uk-article-body\">\r\n                                  <p>\r\n                                    {props.description}\r\n                                  </p>\r\n\r\n                                </div>\r\n                              </article>\r\n                            </section>\r\n                          </div>\r\n                        </div>\r\n                      </div> */}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {\r\n                  relatedProducts.length > 0 &&\r\n                  <QuickProductList productList={relatedProducts} />\r\n                }\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <div id=\"product-size-model\" uk-modal=\"true\">\r\n        <div className=\"uk-modal-dialog uk-modal-body uk-margin-auto-vertical size-chart-width\">\r\n          <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n          {\r\n            props.productCategoryName.toLowerCase() === 'footwear' &&\r\n            <>\r\n              <img className=\"uk-visible@s\" src=\"/footwear_size_chart.jpg\" alt=\"footwear-size-chart\" />\r\n              <img className=\"uk-hidden@s\" src=\"/footwear_size_chart_mobile_1.jpg\" alt=\"footwear-size-chart\" />\r\n              <img className=\"uk-hidden@s\" src=\"/footwear_size_chart_mobile_2.jpg\" alt=\"footwear-size-chart\" />\r\n            </>\r\n          }\r\n\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerProductDetails\r\n}","import React from 'react';\r\n\r\nconst CustomerProductDetailsLoading: React.FunctionComponent = () => {\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a href=\"#\">Home</a></li>\r\n                <li><span>Product</span></li>\r\n              </ul>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom\"></h1>\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n                <div>\r\n                  <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n                    <div className=\"uk-grid-small uk-grid-collapse uk-grid-match\" uk-grid=\"true\">\r\n                      <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n                        <div className=\"uk-grid-collapse uk-child-width-1-1\" uk-slideshow=\"finite: true; ratio: 4:3;\" uk-grid=\"true\">\r\n                          <div>\r\n                            {/* <div className=\"ph-item\">\r\n                            <div className=\"ph-col-12\">\r\n                              <div className=\"ph-picture-big\"></div>\r\n                            </div>\r\n                          </div> */}\r\n                            <ul className=\"uk-slideshow-items\" uk-lightbox=\"true\">\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"uk-card-body uk-flex uk-flex-center\">\r\n                              <div className=\"uk-width-1-2 uk-visible@s\">\r\n                                <div uk-slider=\"finite: true\">\r\n                                  <div className=\"uk-position-relative\">\r\n                                    <div className=\"uk-slider-container\">\r\n                                      <ul className=\"tm-slider-items uk-slider-items uk-child-width-1-4 uk-grid uk-grid-small loading-small-slider\">\r\n                                        <li uk-slideshow-item=\"0\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                        <li uk-slideshow-item=\"1\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                        <li uk-slideshow-item=\"2\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                        <li uk-slideshow-item=\"3\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                        <li uk-slideshow-item=\"4\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                      </ul>\r\n                                      {/* {\r\n                                        <div className=\"ph-item\">\r\n                                          <div className=\"ph-col-12\">\r\n                                            <div className=\"ph-picture\"></div>\r\n                                          </div>\r\n                                        </div>\r\n                                        // getFileNameAndPathSmall(imageNames, imagePaths)\r\n                                      } */}\r\n                                      <div>\r\n                                        <a className=\"uk-position-center-left-out uk-position-small\" href=\"#\" uk-slider-item=\"previous\" uk-slidenav-previous=\"true\"></a>\r\n                                        <a className=\"uk-position-center-right-out uk-position-small\" href=\"#\" uk-slider-item=\"next\" uk-slidenav-next=\"true\"></a>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <ul className=\"uk-slideshow-nav uk-dotnav uk-hidden@s\"></ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"uk-width-1-1 uk-width-1-3@m tm-product-info\">\r\n                        <div className=\"uk-card-body\">\r\n                          {/* <div className=\"uk-margin\">\r\n                            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                              <div><span className=\"uk-label uk-label-warning uk-margin-xsmall-right\">top selling</span><span className=\"uk-label uk-label-danger uk-margin-xsmall-right\">trade-in</span></div>\r\n                            </div>\r\n                          </div> */}\r\n                          <div className=\"uk-margin\">\r\n                            <div className=\"uk-padding-small uk-background-primary-lighten uk-border-rounded\">\r\n                              <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                                <div>\r\n                                  {/* <del className=\"uk-text-meta\">$1899.00</del> */}\r\n                                  <div className=\"tm-product-price\"></div>\r\n                                </div>\r\n                                <div>\r\n                                  <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                                    <div>\r\n                                      <a uk-icon=\"icon: minus; ratio: .75\"></a>\r\n                                      <input className=\"uk-input tm-quantity-input\" id=\"product-1\" type=\"text\" onChange={()=>{}} value=\"1\" />\r\n                                      <a uk-icon=\"icon: plus; ratio: .75\"></a>\r\n                                    </div>\r\n                                    <div><button className=\"uk-button uk-button-primary tm-product-add-button tm-shine js-add-to-cart\" disabled={true}>add to cart</button></div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"uk-margin\">\r\n                            <div className=\"uk-padding-small uk-background-muted uk-border-rounded\">\r\n                              <div className=\"uk-grid-small uk-child-width-1-1 uk-text-small\" uk-grid=\"true\">\r\n                                <div>\r\n                                  <div className=\"uk-grid-collapse\" uk-grid=\"true\">\r\n                                    <span className=\"uk-margin-xsmall-right\" uk-icon=\"cart\"></span>\r\n                                    <div>\r\n                                      <div className=\"uk-text-bolder\">Delivery</div>\r\n                                      <div className=\"uk-text-xsmall uk-text-muted\">In stock, free, tomorrow</div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div>\r\n                                  <div className=\"uk-grid-collapse\" uk-grid=\"true\">\r\n                                    <span className=\"uk-margin-xsmall-right\" uk-icon=\"location\"></span>\r\n                                    <div>\r\n                                      <div className=\"uk-text-bolder\">Pick up from store</div>\r\n                                      <div className=\"uk-text-xsmall uk-text-muted\">In stock, free, tomorrow</div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"uk-width-1-1 tm-product-description\" id=\"description\">\r\n                        <header>\r\n                          <nav className=\"tm-product-nav\" uk-sticky=\"offset: 60; bottom: #description; cls-active: tm-product-nav-fixed;\">\r\n                            <ul className=\"uk-subnav uk-subnav-pill js-product-switcher\" uk-switcher=\"connect: .js-tabs\">\r\n                              <li><a className=\"js-scroll-to-description\" href=\"#description\">Overview</a></li>\r\n                            </ul>\r\n                          </nav>\r\n                        </header>\r\n                        <div className=\"uk-card-body\">\r\n                          <div className=\"uk-switcher js-product-switcher js-tabs\">\r\n                            <section>\r\n                              <article className=\"uk-article\">\r\n                                <div className=\"uk-article-body\">\r\n                                  <p>\r\n\r\n                                  </p>\r\n\r\n                                </div>\r\n                              </article>\r\n                            </section>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerProductDetailsLoading\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProduct } from 'reducers/Product';\r\nimport { AppState, Cart, getRelatedProduct } from 'reducers';\r\nimport { ProductItem } from 'types';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { CustomerProductDetails } from './CustomerProductDetails';\r\nimport { CustomerProductDetailsLoading } from './CustomerProductDetailsLoading';\r\n\r\ninterface cartQuantity {\r\n  [key: string]: string;\r\n};\r\n\r\nconst CustomerProductDetailsConstainer: React.FunctionComponent = () => {\r\n\r\n  const { product, queryProductId } = useParams();\r\n  const [ mainSlider, setMainSlider] = useState<JSX.Element[] | undefined>(undefined);\r\n  const [ smallSlider, setSmallSlider] = useState<JSX.Element[] | undefined>(undefined);\r\n  const [cartProductQuantity, setCartProductQuantity] = useState<cartQuantity>({});\r\n  const [cartProductFlag, setCartProductFlag] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getProduct(Number(queryProductId)));\r\n  }, [queryProductId]);\r\n\r\n  const {\r\n    name, description, productCategoryId,\r\n    subCategory, quantity,\r\n    priceINR, priceUSD, productId, productCategoryName,\r\n    sizeId, size, colourId, imageNames, imagePaths, productDetailId,\r\n  } = useSelector<AppState, ProductItem>(state => state.product.singleData || {} as ProductItem);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n\r\n  useEffect(()=>{\r\n      if (imageNames && imagePaths && imageNames.length > 0 && imagePaths.length > 0) {\r\n        const imageName = imageNames.split(',');\r\n        const imagePath = imagePaths.split(',');\r\n  \r\n        setMainSlider(imagePath.map((path: string, index: number) => {\r\n          return <li key={index}>\r\n            <a className=\"uk-card-body tm-media-box tm-media-box-zoom\" href={serverImagePath + path}>\r\n              <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + path} alt={imageName[index]} /></figure>\r\n            </a>\r\n          </li>\r\n        }))\r\n\r\n        setSmallSlider(imagePath.map((path: string, index: number) => {\r\n          return <li uk-slideshow-item={index} tabIndex={-1} key={index}>\r\n            <div className=\"tm-ratio tm-ratio-1-1\">\r\n              <a className=\"tm-media-box tm-media-box-frame\" href=\"#\">\r\n                <figure className=\"tm-media-box-wrap\">\r\n                  <img src={serverImagePath + path} alt={imageName[index]} />\r\n                </figure>\r\n              </a>\r\n            </div>\r\n          </li>\r\n        }))\r\n      }\r\n  },[imageNames,imagePaths])\r\n\r\n  useEffect(()=>{\r\n    if(cart.data){\r\n      const cartProductCount = {} as cartQuantity;\r\n      cart.data.forEach(({productDetailId,productQuantity}) => {\r\n        cartProductCount[productDetailId] = productQuantity;\r\n      });\r\n      setCartProductQuantity(cartProductCount);\r\n      setCartProductFlag(true);\r\n    }\r\n  },[cart.data]);\r\n\r\n  useEffect(() => {\r\n    if(subCategory && queryProductId){\r\n      dispatch(getRelatedProduct(subCategory, Number(queryProductId)));\r\n    }\r\n  },[subCategory, queryProductId]);\r\n\r\n  return (\r\n    smallSlider && cartProductFlag  ? \r\n    <CustomerProductDetails \r\n      smallSlider={smallSlider}\r\n      mainSlider={mainSlider}\r\n      description={description || ''}\r\n      name={name || ''}\r\n      priceINR={priceINR || ''}\r\n      priceUSD={priceUSD || ''}\r\n      productCategoryName={productCategoryName || ''}\r\n      quantity={quantity || ''}\r\n      sizeId={sizeId || ''}\r\n      size={size || ''}\r\n      productId={productId || ''}\r\n      productDetailId={productDetailId || ''}\r\n      imageName={imageNames && imageNames.split(',')[0] || ''}\r\n      imagePath={imagePaths && imagePaths.split(',')[0] || ''}\r\n      cartProductQuantity={cartProductQuantity}\r\n      /> \r\n    : <CustomerProductDetailsLoading/>\r\n  )\r\n};\r\n\r\nexport {\r\n  CustomerProductDetailsConstainer\r\n}","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { getCart, AppState, Cart, deleteCartItem, addUpdateCart, UserLocation, validateCoupon, Coupon, updateCartQuantity } from 'reducers';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { CustomerCart } from 'types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getCurrencyIcon } from 'services';\r\n\r\n\r\ninterface Quantity {\r\n  [key: string]: string\r\n}\r\nconst CartDetails: React.FunctionComponent = () => {\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [quantity, setQuantity] = useState<Quantity>();\r\n  const [enteredCoupon, setEnteredCoupon] = useState('');\r\n  const [quantityCheckMessage, setQuantityCheckMessage] = useState('Getting your data.');\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const couponStatus = useSelector<AppState, Coupon>(state => state.coupon);\r\n  const [deboucedId, setDeboucedId] = useState('');\r\n  const [quantityChanged, setQuantityChanged] = useState(false);\r\n  const [quantityChangedProductId, setQuantityChangedProductId] = useState('');\r\n  const orderQuantityCheckButtonRef = useRef<HTMLButtonElement>(null);\r\n  const orderQuantityCheckModalRef = useRef<HTMLDivElement>(null);\r\n  \r\n\r\n  useEffect(() => {\r\n    dispatch(getCart());\r\n    if (couponStatus.data?.length === 1) {\r\n      setEnteredCoupon(couponStatus.data[0].code);\r\n    }\r\n  }, []);\r\n\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n\r\n  useEffect(() => {\r\n    let qt: Quantity = {};\r\n    if (cart.data && cart.data.length > 0) {\r\n      cart.data.forEach((product: CustomerCart) => {\r\n        qt[product.productDetailId] = product.productQuantity || '0';\r\n      });\r\n      setQuantity(qt);\r\n      checkForAvailableQuantity(cart.data)\r\n    }\r\n  }, [cart.data]);\r\n  const deleteCart = (cartItem: CustomerCart) => {\r\n    dispatch(deleteCartItem(cartItem,true));\r\n  };\r\n\r\n  const checkForAvailableQuantity = (cartData: CustomerCart[]) => {\r\n    const orderDetailId = cartData.map((cartItem) => {\r\n      if (Number(cartItem.availableQuantity) < Number(cartItem.productQuantity)) {\r\n        setQuantityChanged(true);\r\n        return cartItem.cartId\r\n      } else {\r\n        return 0\r\n      }\r\n    })\r\n    setQuantityChangedProductId(orderDetailId.toString());\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(quantityChanged){\r\n      orderQuantityCheckButtonRef.current?.click();\r\n      dispatch(updateCartQuantity(quantityChangedProductId));\r\n    }\r\n  },[quantityChanged])\r\n\r\n  useEffect(() => {\r\n    if(cart._quantityUpdate && orderQuantityCheckModalRef.current?.getBoundingClientRect().top !== 0) {\r\n      dispatch(getCart());\r\n      setQuantityCheckMessage('We updated your cart based on the product availability.');\r\n      setTimeout(() => {\r\n        orderQuantityCheckButtonRef.current?.click();\r\n      },5000)\r\n      \r\n    }\r\n  },[cart._quantityUpdate])\r\n\r\n  const updateCart = (cartId: string, quantity: string, productDetailId: string) => {\r\n    dispatch(addUpdateCart({\r\n      productDetailId,\r\n      productQuantity: quantity,\r\n      currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n      cartId,\r\n      productPrice: '',\r\n      productId: ''\r\n    }, true));\r\n  };\r\n\r\n  const updateQantity = (cartId: string, productDetailId: string, availableQuantity: string, isIncrement: boolean, changedQuantity?: string) => {\r\n    if (quantity) {\r\n      if (changedQuantity) {\r\n        let chqty = changedQuantity\r\n        if (Number(chqty) > Number(availableQuantity)) {\r\n          chqty = availableQuantity\r\n        }\r\n        const newQuantity = { ...quantity, ...{ [productDetailId]: chqty.toString() } };\r\n        setDeboucedId(cartId + '-' + window.setTimeout(() => {\r\n          updateCart(cartId, chqty.toString(), productDetailId)\r\n        }, 500).toString());\r\n        setQuantity(newQuantity);\r\n      } else if (isIncrement) {\r\n        let updatedQuantity = Number(quantity[productDetailId]) + 1;\r\n        if (updatedQuantity > Number(availableQuantity)) {\r\n          updatedQuantity = Number(availableQuantity)\r\n        }\r\n        const newQuantity = { ...quantity, ...{ [productDetailId]: updatedQuantity.toString() } };\r\n        setDeboucedId(cartId + '-' + window.setTimeout(() => {\r\n          updateCart(cartId, updatedQuantity.toString(), productDetailId)\r\n        }, 500).toString());\r\n        setQuantity(newQuantity);\r\n      } else {\r\n        let updatedQuantity = Number(quantity[productDetailId]) - 1;\r\n        if (updatedQuantity < 0) {\r\n          updatedQuantity = 0\r\n        }\r\n        const newQuantity = { ...quantity, ...{ [productDetailId]: updatedQuantity.toString() } };\r\n        setDeboucedId(cartId + '-' + window.setTimeout(() => {\r\n          updateCart(cartId, updatedQuantity.toString(), productDetailId)\r\n        }, 500).toString());\r\n        setQuantity(newQuantity);\r\n      }\r\n\r\n      if (deboucedId !== '' && deboucedId.split('-')[0] === cartId.toString()) {\r\n        window.clearTimeout(Number(deboucedId.split('-')[1]));\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkCouponValidity = () => {\r\n    dispatch(validateCoupon(enteredCoupon));\r\n  }\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <header className=\"uk-card-header uk-text-uppercase uk-text-muted uk-text-center uk-text-small uk-visible@m\">\r\n          <div className=\"uk-grid-small uk-child-width-1-2\" uk-grid=\"true\">\r\n            <div>product</div>\r\n            <div>\r\n              <div className=\"uk-grid-small uk-child-width-expand\" uk-grid=\"true\">\r\n                <div>price</div>\r\n                <div className=\"tm-quantity-column\">quantity</div>\r\n                <div>sum</div>\r\n                <div className=\"uk-width-auto\"><div style={{ width: \"20px\" }}></div></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        {\r\n          cart.data && cart.data.map((cartItem: CustomerCart, index: number) => {\r\n            return <div className=\"uk-card-body\" key={index}>\r\n              <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@m uk-flex-middle\" uk-grid=\"true\">\r\n                <div>\r\n                  <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                    <div className=\"uk-width-1-3\">\r\n                      <div className=\"tm-ratio tm-ratio-4-3\">\r\n                        <a className=\"tm-media-box\" onClick={() => history.push('/productDetails/' + cartItem.productId)}>\r\n                          <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + cartItem.productImagePath} alt='Apple MacBook Pro 15\" Touch Bar MPTU2LL/A 256GB (Silver)' /></figure>\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"uk-width-expand\">\r\n                      <div className=\"uk-text-meta\">{cartItem.subcategory}</div>\r\n                      <a className=\"uk-link-heading\" onClick={() => history.push('/productDetails/' + cartItem.productId)}>{cartItem.productName}</a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-expand@s uk-text-center\" uk-grid=\"true\">\r\n                    <div>\r\n                      <div className=\"uk-text-muted uk-hidden@m\">Price</div>\r\n                      <div>{getCurrencyIcon(userLocation.data || 'IN')} {cartItem.productPrice}</div>\r\n                    </div>\r\n                    <div>\r\n                      <label className=\"uk-text-center\">\r\n                        <div className=\"cart-quantity cart-margin-auto\">\r\n                          <div className=\"uk-inline\">\r\n                            <a className=\"uk-form-icon\" uk-icon=\"icon: minus\"\r\n                              onClick={() => {\r\n                                updateQantity(cartItem.cartId, cartItem.productDetailId, cartItem.availableQuantity || '0', false)\r\n                              }}>\r\n                            </a>\r\n                            <a className=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: plus\"\r\n                              onClick={() => {\r\n                                updateQantity(cartItem.cartId, cartItem.productDetailId, cartItem.availableQuantity || '0', true)\r\n                              }}>\r\n                            </a>\r\n                            <input className=\"uk-input uk-text-center\"\r\n                              type=\"number\"\r\n                              value={quantity && quantity[cartItem.productDetailId] || 0}\r\n                              onChange={(e) => {\r\n                                updateQantity(cartItem.cartId, cartItem.productDetailId, cartItem.availableQuantity || '0', false, e.currentTarget.value)\r\n                              }} />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"uk-form-label\"><span className=\"uk-text-meta uk-text-primary colour-default\">(Max {cartItem.availableQuantity})</span></div>\r\n                      </label>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <div className=\"uk-text-muted uk-hidden@m\">Sum</div>\r\n                      <div>{getCurrencyIcon(userLocation.data || 'IN')} {cartItem.totalPrice}</div>\r\n                    </div>\r\n                    <div className=\"uk-width-auto@s\">\r\n                      {cart._isLoading && <span uk-spinner=\"true\"></span>}\r\n                      {!cart._isLoading && <a className=\"uk-text-danger\" onClick={() => deleteCart(cartItem)} uk-tooltip=\"Remove\"><span uk-icon=\"trash\"></span></a>}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          })\r\n        }\r\n        <div className=\"uk-card-footer\">\r\n          <label>\r\n            <span className=\"uk-form-label uk-margin-small-right\">Promo Code</span>\r\n            <div className=\"uk-inline\">\r\n              <a className=\"uk-form-icon uk-form-icon-flip\" onClick={() => checkCouponValidity()} uk-icon=\"arrow-right\"></a>\r\n              <input className=\"uk-input uk-form-width-small\" type=\"text\"\r\n                value={enteredCoupon}\r\n                onChange={(e) => setEnteredCoupon(e.currentTarget.value)}\r\n              />\r\n            </div>\r\n            {couponStatus._isSuccess && <span className=\"login-error-message coupon-message uk-label uk-label-success\"><span uk-icon=\"check\"></span> Coupon is valid !</span>}\r\n            {couponStatus._isError && <span className=\"login-error-message coupon-message uk-label uk-label-danger\"><span uk-icon=\"ban\"></span> Coupon is Invalid.</span>}\r\n          </label>\r\n        </div>\r\n        <button ref={orderQuantityCheckButtonRef} id=\"payment-loading\" uk-toggle=\"target: #my-id\" type=\"button\"></button>\r\n        <div id=\"my-id\" uk-modal=\"true; esc-close: false; bg-close: false\">\r\n          <div className=\"uk-modal-dialog uk-modal-body uk-margin-auto-vertical\">\r\n            {\r\n              !cart._isLoading && <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n            }\r\n            <div ref={orderQuantityCheckModalRef}  className=\"uk-modal-body uk-nav-center\">\r\n              <p>{quantityCheckMessage}</p>\r\n              {\r\n                cart._isLoading && <div uk-spinner=\"true\"></div>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport {\r\n  CartDetails\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState, Cart, UserLocation } from 'reducers';\r\nimport { CustomerCart, ProductCoupon } from 'types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getCurrencyIcon, calculateUserDiscountPrice, calculateUserDiscount } from 'services';\r\n\r\nconst CartPrice: React.FunctionComponent = () => {\r\n\r\n  const [cartTotal, setCartTotal] = useState(0);\r\n  const [userDiscountTotal, setUserDiscountTotal] = useState('0');\r\n  const [userCouponTotal, setUserCouponTotal] = useState('0');\r\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState('0');\r\n  const [discountedTotal, setDiscountedTotal] = useState('0');\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const couponData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (cart.data && cart.data.length > 0) {\r\n      let total = 0;\r\n      cart.data.forEach((cart: CustomerCart) => {\r\n        if (cart.totalPrice) {\r\n          total += Number(cart.totalPrice);\r\n        }\r\n      });\r\n      setCartTotal(total);\r\n      if (couponData.length === 1) {\r\n        let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', total.toString());\r\n        let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', total.toString());\r\n        let couponPrice = calculateUserDiscountPrice(couponData[0].value, priceAfterDiscount.toString());\r\n        let priceAfterCoupon = calculateUserDiscount(couponData[0].value || '0', priceAfterDiscount.toString());\r\n        setDiscountedTotal(priceAfterDiscount);\r\n        setUserDiscountTotal(discountPrice);\r\n        setUserCouponTotal(couponPrice);\r\n        setTotalAfterDiscount(priceAfterCoupon);\r\n      } else {\r\n        let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', total.toString());\r\n        let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', total.toString());\r\n        setUserDiscountTotal(discountPrice);\r\n        setTotalAfterDiscount(priceAfterDiscount);\r\n      }\r\n    } else {\r\n      setCartTotal(0);\r\n      setUserDiscountTotal('0');\r\n      setTotalAfterDiscount('0');\r\n      setDiscountedTotal('0');\r\n      setUserCouponTotal('0');\r\n    }\r\n  }, [cart.data,couponData]);\r\n\r\n  return (\r\n    <div className=\"uk-width-1-1 tm-aside-column uk-width-1-4@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\" uk-sticky=\"offset: 30; bottom: true; media: @m;\">\r\n        {\r\n          (userData.data?.discount && userData.data?.discount !== '0' || couponData.length === 1 ) &&\r\n          <div className=\"uk-card-body\">\r\n            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand uk-text-muted\">Subtotal</div>\r\n              <div>{getCurrencyIcon(userLocation.data || 'IN')} {cartTotal}</div>\r\n            </div>\r\n            {\r\n              userData.data?.discount && userData.data?.discount !== '0' &&\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand uk-text-muted\">Discount ({userData.data?.discount}%)</div>\r\n              <div className=\"uk-text-danger\">− {getCurrencyIcon(userLocation.data || 'IN')} {userDiscountTotal}</div>\r\n            </div>\r\n            }\r\n            \r\n          </div>\r\n        }\r\n        {\r\n          couponData.length === 1 &&\r\n          <div className=\"uk-card-body\">\r\n            {\r\n              userData.data?.discount && userData.data?.discount !== '0' &&\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand uk-text-muted\">Discounted Total</div>\r\n                <div>{getCurrencyIcon(userLocation.data || 'IN')} {discountedTotal}</div>\r\n              </div>\r\n            }\r\n\r\n            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand uk-text-muted\">Coupon ({couponData[0] && couponData[0].value}%)</div>\r\n              <div className=\"uk-text-danger\">− {getCurrencyIcon(userLocation.data || 'IN')} {userCouponTotal}</div>\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n            <div className=\"uk-width-expand uk-text-muted\">Total</div>\r\n            <div className=\"uk-text-lead uk-text-bolder\">{getCurrencyIcon(userLocation.data || 'IN')} {totalAfterDiscount}</div>\r\n          </div>\r\n          <button className=\"uk-button uk-button-primary uk-margin-small uk-width-1-1\"\r\n            disabled={cartTotal === 0}\r\n            onClick={() => { history.push('/checkout') }}\r\n          >\r\n            checkout\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  CartPrice\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CartDetails } from './CartDetails';\r\nimport { CartPrice } from './CartPrice';\r\n\r\nconst CustomerCartContainer: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a onClick={()=>history.push('/')}>Home</a></li>\r\n                <li><span>Cart</span></li>\r\n              </ul>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom\">Cart</h1>\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n                <CartDetails/>\r\n                <CartPrice/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport {\r\n  CustomerCartContainer\r\n}","import React, { useState, useEffect, useRef, Dispatch, SetStateAction } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, Cart, getRazorPayOrder, saveRazorPayOrder, getCart, errorCheckout, getCodOrder, saveCodOrder, UserLocation, defaultCheckout, setShippingPrice } from 'reducers';\r\nimport { CustomerCart, ProductCoupon, CustomerShippment } from 'types';\r\nimport { PayPalButton, PayPalPayment, CashOnDeliveryPayment } from 'components/shared';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getCurrencyIcon, calculateUserDiscountPrice, calculateUserDiscount } from 'services';\r\n\r\ninterface Props {\r\n  paymentMode: string;\r\n  shippingType: string;\r\n  setCartTotal: Dispatch<SetStateAction<number>>;\r\n};\r\ndeclare global {\r\n  interface Window { Razorpay: any; }\r\n}\r\nwindow.Razorpay = window.Razorpay || {};\r\n\r\nconst CheckoutPrice: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [cartTotalPrice, setCartTotalPrice] = useState(0);\r\n  const [userDiscountTotal, setUserDiscountTotal] = useState('0');\r\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState('0');\r\n  const [userCouponTotal, setUserCouponTotal] = useState('0');\r\n  const [discountedTotal, setDiscountedTotal] = useState('0');\r\n  const [priceAfterShipping, setPriceAfterShipping] = useState('0');\r\n  const [quantityCount, setQuantityCount] = useState(0);\r\n  const [cartOrderId, setCartOrderId] = useState(0);\r\n  const [paymentMessage, setPaymentMessage] = useState(\"Please don't close this window while we process your payment.\")\r\n  const [paymentError, setPaymentError] = useState(false);\r\n  const [paymentSuccess, setPaymentSuccess] = useState(false);\r\n  const [errorHappendAt, setErrorHappendAt] = useState('close');\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n  const checkout = useSelector((state: AppState) => state.checkout);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const couponData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);\r\n  const shippingCost = useSelector<AppState, CustomerShippment>(state => state.customerShippment.data || {} as CustomerShippment);\r\n  const paymentLoadingRef = useRef<HTMLButtonElement>(null);\r\n  const [containerIsCard, setContainerIsCard] = useState(false);\r\n  const [ukSticky, setUkSicky] = useState({});\r\n  const [showCodContainer, setShowCodContainer] = useState(false);\r\n  const [noAddressError, setNoAddressError] = useState(false);\r\n  const [enteredOTP, setEnteredOTP] = useState('');\r\n  const [didPriceChanged, setDidPriceChanged] = useState(false);\r\n  const [timeForShowPriceChange, setTimeForShowPriceChange] = useState(5);\r\n  let timer: NodeJS.Timer;\r\n\r\n  useEffect(() => {\r\n    let cartPrice = 0;\r\n    if (cart.data && cart.data.length > 0) {\r\n      cart.data.forEach(({ totalPrice }) => {\r\n        cartPrice += Number(totalPrice)\r\n      });\r\n      setCartTotalPrice(cartPrice);\r\n      props.setCartTotal(cartPrice);\r\n      if (couponData.length === 1) {\r\n        let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString());\r\n        let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString());\r\n        let couponPrice = calculateUserDiscountPrice(couponData[0].value, priceAfterDiscount.toString());\r\n        let priceAfterCoupon = calculateUserDiscount(couponData[0].value || '0', priceAfterDiscount.toString());\r\n        setDiscountedTotal(priceAfterDiscount);\r\n        setUserDiscountTotal(discountPrice);\r\n        setUserCouponTotal(couponPrice);\r\n        setTotalAfterDiscount(priceAfterCoupon);\r\n        calculateShippingCost(cart.data, priceAfterCoupon);\r\n\r\n      } else {\r\n        let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString());\r\n        let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString());\r\n        setUserDiscountTotal(discountPrice);\r\n        setTotalAfterDiscount(priceAfterDiscount);\r\n        calculateShippingCost(cart.data, priceAfterDiscount);\r\n      }\r\n      setCartOrderId(Number(cart.data[0].orderId));\r\n    } else {\r\n      setCartTotalPrice(0);\r\n      setUserDiscountTotal('0');\r\n      setTotalAfterDiscount('0');\r\n      setPriceAfterShipping('0')\r\n      props.setCartTotal(0);\r\n    }\r\n    if (didPriceChanged) {\r\n      setDidPriceChanged(false);\r\n      if (timeForShowPriceChange === 0) {\r\n        paymentLoadingRef.current?.click();\r\n      } else {\r\n        clearTimeout(timer);\r\n        timer = setTimeout(() => {\r\n          paymentLoadingRef.current?.click();\r\n          clearTimeout(timer);\r\n        }, 5000)\r\n      }\r\n    }\r\n  }, [cart.data, userData.data, props.shippingType]);\r\n\r\n  useEffect(() => {\r\n    if (userLocation.data === 'IN') {\r\n      if (checkout.data && checkout.data.orderId && props.paymentMode === 'online') {\r\n        const {\r\n          key,\r\n          currency,\r\n          orderId,\r\n          name\r\n        } = checkout.data\r\n        var options = {\r\n          \"key\": key,\r\n          \"currency\": currency,\r\n          \"name\": name,\r\n          \"description\": \"\",\r\n          \"order_id\": orderId,\r\n          \"handler\": function (response: any) {\r\n            paymentLoadingRef.current?.click();\r\n            successRazorPay(response.razorpay_payment_id, response.razorpay_order_id, response.razorpay_signature)\r\n          },\r\n          \"modal\": {\r\n            \"ondismiss\": function () {\r\n              setPaymentError(true);\r\n              dispatch(errorCheckout(''));\r\n            }\r\n          },\r\n          \"prefill\": {\r\n            \"name\": userData.data?.firstName || '' + userData.data?.lastName,\r\n            \"email\": userData.data?.emailAddress,\r\n            \"contact\": userData.data?.mobile\r\n          },\r\n          \"notes\": {\r\n            \"address\": \"Razorpay Corporate Office\"\r\n          },\r\n          \"theme\": {\r\n            \"color\": \"#F37254\"\r\n          }\r\n        };\r\n        var rzp1 = new window.Razorpay(options);\r\n        rzp1.on('payment.failed', function (response: any) {\r\n          setErrorHappendAt('failed');\r\n          console.log('code', response.error.code);\r\n          console.log('desc', response.error.description);\r\n          console.log('source', response.error.source);\r\n          console.log('step', response.error.step);\r\n          console.log('reason', response.error.reason);\r\n          console.log('metadata', response.error.metadata);\r\n        });\r\n        rzp1.open();\r\n      } else if (checkout.data && checkout.data.otp && props.paymentMode === 'cod') {\r\n        setShowCodContainer(true);\r\n      }\r\n    }\r\n  }, [checkout.data]);\r\n\r\n  useEffect(() => {\r\n    if (checkout._priceChanged && (props.paymentMode === 'online' || props.paymentMode === 'cod')) {\r\n      setPaymentMessage(checkout.message || '');\r\n      dispatch(getCart());\r\n      paymentLoadingRef.current?.click();\r\n      setDidPriceChanged(true);\r\n      timer = setInterval(() => {\r\n        if (timeForShowPriceChange > 0) {\r\n          setTimeForShowPriceChange(timeForShowPriceChange - 1);\r\n        }\r\n      }, 1000);\r\n    }\r\n  }, [checkout._priceChanged]);\r\n\r\n  useEffect(() => {\r\n    if (paymentError && props.paymentMode === 'online') {\r\n      if (errorHappendAt === 'failed') {\r\n        setPaymentMessage('Payment failure from Razorpay, please try again.');\r\n        paymentLoadingRef.current?.click();\r\n      } else if (errorHappendAt === 'close') {\r\n        setPaymentMessage('Payment incomplete, please try again.');\r\n        paymentLoadingRef.current?.click();\r\n      }\r\n    }\r\n  }, [paymentError]);\r\n\r\n  useEffect(() => {\r\n    if (checkout._isPaymentSucceess &&\r\n      (props.paymentMode === 'online' || props.paymentMode === 'cod')) {\r\n      setPaymentMessage('Payment is successful !!');\r\n      setPaymentSuccess(true);\r\n      setPaymentError(false);\r\n      dispatch(getCart());\r\n      setShowCodContainer(false);\r\n      setTimeout(() => {\r\n        dispatch(defaultCheckout());\r\n        paymentLoadingRef.current?.click();\r\n        history.push('userinformation/orders');\r\n      }, 5000);\r\n    }\r\n  }, [checkout._isPaymentSucceess]);\r\n\r\n  useEffect(() => {\r\n    if (!paymentError) {\r\n      if (checkout._isError && props.paymentMode === 'online') {\r\n        setPaymentMessage(checkout.message || '');\r\n        setPaymentSuccess(false);\r\n        setPaymentError(true);\r\n        setErrorHappendAt('DB');\r\n      } else if (checkout._isError && props.paymentMode === 'cod') {\r\n        setPaymentMessage(checkout.message || '');\r\n        setPaymentSuccess(false);\r\n        setPaymentError(true);\r\n        setShowCodContainer(true);\r\n      }\r\n    }\r\n  }, [checkout._isError])\r\n\r\n  useEffect(()=>{\r\n    if(props.paymentMode !== 'cod'){\r\n      setShowCodContainer(false)\r\n    }\r\n  },[props.paymentMode])\r\n  const successRazorPay = (razorpayPaymentId: string, razorpayOrderId: string, razorpaySignature: string) => {\r\n    dispatch(saveRazorPayOrder({\r\n      razorpayPaymentId,\r\n      razorpayOrderId,\r\n      razorpaySignature,\r\n      orderId: cartOrderId,\r\n      orderNumber: checkout.data && checkout.data.receipt || '',\r\n      addressId: userData.data && userData.data.addressId || '',\r\n      couponId: couponData && couponData[0] && couponData[0].couponId\r\n    }));\r\n  }\r\n  const proceedWithPayment = () => {\r\n    if(userData.data?.addressId){\r\n      if (props.paymentMode === 'online') {\r\n        setPaymentError(false);\r\n        dispatch(getRazorPayOrder(totalAfterDiscount.toString(), cartOrderId, couponData && couponData[0] && couponData[0].couponId))\r\n      } else if (props.paymentMode === 'cod') {\r\n        setPaymentError(false);\r\n        dispatch(getCodOrder(totalAfterDiscount.toString(), cartOrderId, couponData && couponData[0] && couponData[0].couponId));\r\n      }\r\n    } else{\r\n      setNoAddressError(true);\r\n      setTimeout(() => {\r\n        setNoAddressError(false);\r\n      },3000) \r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (containerIsCard) {\r\n      setUkSicky({});\r\n    } else {\r\n      setUkSicky({\r\n        'uk-sticky': \"offset: 60; bottom: true; media: @m;\"\r\n      })\r\n    }\r\n  }, [containerIsCard])\r\n\r\n  const successCod = () => {\r\n    dispatch(saveCodOrder({\r\n      otp: enteredOTP,\r\n      orderId: cartOrderId,\r\n      addressId: userData.data && userData.data.addressId || '',\r\n      couponId: couponData && couponData[0] && couponData[0].couponId\r\n    }));\r\n    setPaymentMessage(\"Please don't close this window while we process your payment.\");\r\n    setPaymentSuccess(false);\r\n    setPaymentError(false);\r\n    paymentLoadingRef.current?.click();\r\n  }\r\n\r\n  const calculateShippingCost = (cartData: CustomerCart[], totalAfterDiscount: string) => {\r\n    let itemCount = cartData.reduce((accumulator, cart) => ({ 'productQuantity': (Number(accumulator.productQuantity) + Number(cart.productQuantity)).toString() } as CustomerCart));\r\n    setQuantityCount(Number(itemCount.productQuantity));\r\n    if (props.shippingType === 'standard') {\r\n      if (Number(itemCount.productQuantity) > 1) {\r\n        const cost = (10 + ((Number(itemCount.productQuantity) - 1) * 6));\r\n        dispatch(setShippingPrice({ 'shippmentPrice': cost.toString() } as CustomerShippment));\r\n        setPriceAfterShipping((Number(totalAfterDiscount) + cost).toString());\r\n      } else {\r\n        dispatch(setShippingPrice({ 'shippmentPrice': '10' } as CustomerShippment));\r\n        setPriceAfterShipping((Number(totalAfterDiscount) + 10).toString());\r\n      }\r\n    } else {\r\n      if (Number(itemCount.productQuantity) > 1) {\r\n        const cost = (18 + ((Number(itemCount.productQuantity) - 1) * 10));\r\n        dispatch(setShippingPrice({ 'shippmentPrice': cost.toString() } as CustomerShippment));\r\n        setPriceAfterShipping((Number(totalAfterDiscount) + cost).toString());\r\n      } else {\r\n        dispatch(setShippingPrice({ 'shippmentPrice': '18' } as CustomerShippment));\r\n        setPriceAfterShipping((Number(totalAfterDiscount) + 18).toString());\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"uk-width-1-1 uk-width-1-4@m tm-aside-column\">\r\n\r\n        <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\"\r\n          {\r\n          ...(\r\n            ukSticky\r\n          )\r\n          }\r\n        >\r\n          <section className=\"uk-card-body\">\r\n            <h4>Items in order</h4>\r\n            {\r\n              cart.data && cart.data.map((cartItem: CustomerCart, index: number) => {\r\n                return (\r\n                  <div key={index} className=\"uk-grid-small\" uk-grid=\"true\">\r\n                    <div className=\"uk-width-expand\">\r\n                      <div className=\"uk-text-small\">{cartItem.productName}</div>\r\n                      <div className=\"uk-text-meta\">{cartItem.productQuantity} × {getCurrencyIcon(userLocation.data || 'IN')} {cartItem.productPrice}</div>\r\n                    </div>\r\n                    <div className=\"uk-text-right\"><div>{getCurrencyIcon(userLocation.data || 'IN')} {cartItem.totalPrice}</div></div>\r\n                  </div>\r\n                )\r\n              })\r\n            }\r\n          </section>\r\n          {\r\n            userData.data?.discount && userData.data?.discount !== '0' &&\r\n            <section className=\"uk-card-body\">\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Subtotal</div></div>\r\n                <div className=\"uk-text-right\"><div>{getCurrencyIcon(userLocation.data || 'IN')} {cartTotalPrice || 0}</div></div>\r\n              </div>\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Discount ({userData.data?.discount}%)</div></div>\r\n                <div className=\"uk-text-right\"><div className=\"uk-text-danger\">- {getCurrencyIcon(userLocation.data || 'IN')} {userDiscountTotal}</div></div>\r\n              </div>\r\n            </section>\r\n\r\n          }\r\n          {\r\n            couponData.length === 1 &&\r\n            <section className=\"uk-card-body\">\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Discounted Total</div></div>\r\n                <div className=\"uk-text-right\"><div>{getCurrencyIcon(userLocation.data || 'IN')} {discountedTotal}</div></div>\r\n              </div>\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Coupon ({couponData[0] && couponData[0].value}%)</div></div>\r\n                <div className=\"uk-text-right\"><div className=\"uk-text-danger\">- {getCurrencyIcon(userLocation.data || 'IN')} {userCouponTotal}</div></div>\r\n              </div>\r\n            </section>\r\n          }\r\n          {\r\n            userLocation.data !== 'IN' &&\r\n            <section className=\"uk-card-body\">\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Subtotal</div></div>\r\n                <div className=\"uk-text-right\"><div>{getCurrencyIcon(userLocation.data || 'IN')} {totalAfterDiscount}</div></div>\r\n              </div>\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Shipping</div></div>\r\n                <div className=\"uk-text-right\"><div className=\"uk-text-success\">+ {getCurrencyIcon(userLocation.data || 'IN')} {shippingCost.shippmentPrice}</div></div>\r\n              </div>\r\n            </section>\r\n          }\r\n\r\n          {\r\n            showCodContainer && props.paymentMode==='cod' &&\r\n            <CashOnDeliveryPayment showOtpContainer={showCodContainer} setEnteredOTP={setEnteredOTP} />\r\n          }\r\n          <section className=\"uk-card-body\">\r\n            {\r\n              <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Total</div></div>\r\n                {\r\n                  userLocation.data === 'IN' ?\r\n                    <div className=\"uk-text-right\"><div className=\"uk-text-lead uk-text-bolder\">{getCurrencyIcon(userLocation.data || 'IN')} {totalAfterDiscount}</div></div>\r\n                    : <div className=\"uk-text-right\"><div className=\"uk-text-lead uk-text-bolder\">{getCurrencyIcon(userLocation.data || 'IN')} {priceAfterShipping}</div></div>\r\n                }\r\n\r\n              </div>\r\n            }\r\n\r\n            {\r\n              props.paymentMode === 'paypal' &&\r\n              cartTotalPrice !== 0 &&\r\n              <PayPalPayment\r\n                cartTotalPrice={totalAfterDiscount}\r\n                cartTotalWithShipping={priceAfterShipping}\r\n                quantityCount={quantityCount}\r\n                isStandard={props.shippingType === 'standard'}\r\n                paymentMode={props.paymentMode}\r\n                setContainerIsCard={setContainerIsCard}\r\n                cartOrderId={cartOrderId} />\r\n            }\r\n            {\r\n              noAddressError && \r\n              <div className=\"login-error-message\">\r\n                    <span className=\"uk-notification-message-danger\"> Please add contact and shipping information </span>\r\n              </div>\r\n            }\r\n            {\r\n              props.paymentMode !== 'paypal' && !showCodContainer &&\r\n              <>\r\n              {\r\n                  !checkout._isFetchCodCodeSuccess && checkout._isError &&\r\n                  <div className=\"login-error-message\">\r\n                    <span className=\"uk-notification-message-danger\"> {checkout.message} </span>\r\n                  </div>\r\n                }\r\n                <button\r\n                  disabled={checkout._isLoading || cartTotalPrice === 0}\r\n                  className=\"uk-button uk-button-primary uk-margin-small uk-width-1-1\"\r\n                  onClick={() => proceedWithPayment()}\r\n                >{checkout._isLoading && <div uk-spinner=\"true\"></div>}\r\n              checkout</button>\r\n                \r\n              </>\r\n            } {\r\n              showCodContainer &&\r\n              <button className=\"uk-button uk-button-primary uk-margin-small uk-width-1-1\"\r\n                disabled={checkout._isLoading || cartTotalPrice === 0}\r\n                onClick={() => { checkout._isFetchCodCodeSuccess ? successCod() : proceedWithPayment() }}>\r\n                {checkout._isFetchCodCodeSuccess ? 'Place Order' : 'Checkout'}\r\n              </button>\r\n            }\r\n          </section>\r\n        </div>\r\n      </div>\r\n      {\r\n        props.paymentMode !== 'paypal' && \r\n        <>\r\n        <button ref={paymentLoadingRef} id=\"payment-loading\" uk-toggle=\"target: #my-id\" type=\"button\"></button>\r\n      <div id=\"my-id\" uk-modal=\"true; esc-close: false; bg-close: false\">\r\n        <div className=\"uk-modal-dialog uk-modal-body uk-margin-auto-vertical\">\r\n          {\r\n            (paymentSuccess || paymentError) && <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n          }\r\n          <div className=\"uk-modal-body uk-nav-center\">\r\n            <p>{paymentMessage}</p>\r\n            {\r\n              !paymentSuccess && !paymentError && <div uk-spinner=\"true\"></div>\r\n            }\r\n            {\r\n              paymentSuccess && !paymentError &&\r\n              <>\r\n                <span className=\"uk-label uk-label-success\">Redirecting to Orders <div uk-spinner=\"true\"></div></span>\r\n              </>\r\n            }\r\n            {\r\n              paymentError && <span className=\"uk-label uk-label-danger\">Payment Failed</span>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n        </>\r\n      }\r\n      \r\n    </>\r\n  )\r\n};\r\n\r\nexport {\r\n  CheckoutPrice\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { UserInformation } from 'components/user';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, UserLocation, getUser } from 'reducers';\r\nimport { CheckoutPrice } from './CheckoutPrice';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst CheckoutContainer: React.FunctionComponent = () => {\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [paymentMode, setPaymentMode] = useState('online');\r\n  const [cartTotal, setCartTotal] = useState(0);\r\n  const [internationalShipping,setInternationalShipping] = useState('standard');\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n\r\n  useEffect(() => {\r\n    if (userLocation.data === 'USD') {\r\n      setPaymentMode('paypal');\r\n    }\r\n  }, [userLocation.data]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getUser());\r\n  },[])\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <section className=\"uk-text-center\">\r\n              <a className=\"uk-link-muted uk-text-small\" onClick={()=> history.push('/cart')}><span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: arrow-left; ratio: .75;\"></span>Return to cart</a>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom\">Checkout</h1>\r\n            </section>\r\n            <section>\r\n              <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n                <div className=\"uk-form-stacked uk-width-1-1 tm-checkout uk-width-expand@m\">\r\n                  <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n                    <section>\r\n                      <h2 className=\"tm-checkout-title\">Contact And Shipping Information</h2>\r\n                      <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n                        <UserInformation user={userData} fromCart={true} />\r\n                      </div>\r\n                    </section>\r\n                    {\r\n                      userLocation.data === 'IN' &&\r\n                      <section>\r\n                        <h2 className=\"tm-checkout-title\">Payment</h2>\r\n                        <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n                          <div className=\"uk-card-body\">\r\n                            <div className=\"uk-grid-small uk-grid-match uk-child-width-1-1 uk-child-width-1-2@s uk-flex-center\" uk-switcher=\"toggle: &gt; * &gt; .tm-choose\" uk-grid=\"true\">\r\n                              <div onClick={() => setPaymentMode('online')}>\r\n                                <a className={paymentMode === \"online\" ? \"tm-choose uk-active\" : \"tm-choose\"} href=\"#\">\r\n                                  <div className=\"tm-choose-title\">Online (via Razorpay)</div>\r\n                                  <div className=\"tm-choose-description\">Visa, MasterCard, all Other Cards</div>\r\n                                </a>\r\n                              </div>\r\n                              <div onClick={() => setPaymentMode('cod')}>\r\n                                <a className={paymentMode === \"cod\" ? \"tm-choose uk-active\" : \"tm-choose\"} href=\"#\">\r\n                                  <div className=\"tm-choose-title\">Cash On Delivery</div>\r\n                                  <div className=\"tm-choose-description\">Order now pay later</div>\r\n                                </a>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      </section>\r\n                    }\r\n                    {\r\n                      userLocation.data !== 'IN' &&\r\n                      <section>\r\n                        <h2 className=\"tm-checkout-title\">Shippment</h2>\r\n                        <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n                          <div className=\"uk-card-body\">\r\n                            <div className=\"uk-grid-small uk-grid-match uk-child-width-1-1 uk-child-width-1-2@s uk-flex-center\" uk-switcher=\"toggle: &gt; * &gt; .tm-choose\" uk-grid=\"true\">\r\n                              <div onClick={()=>setInternationalShipping('standard')}>\r\n                                <a className={internationalShipping === \"standard\" ? \"tm-choose uk-active\" : \"tm-choose\"} href=\"#\">\r\n                                  <div className=\"tm-choose-title\">Standard</div>\r\n                                  <div className=\"tm-choose-description\">India Post</div>\r\n                                  <div className=\"tm-choose-description\">Shipping cost $10 first item then $6 on every additional item.</div>\r\n                                </a>\r\n                              </div>\r\n                              <div onClick={()=>setInternationalShipping('express')}>\r\n                                <a className={internationalShipping === \"express\" ? \"tm-choose uk-active\" : \"tm-choose\"} href=\"#\">\r\n                                  <div className=\"tm-choose-title\">Express</div>\r\n                                  <div className=\"tm-choose-description\">Blue Dart/Fedex/DHL/Others</div>\r\n                                  <div className=\"tm-choose-description\">Shipping cost $18 first item then $10 on every additional item.</div>\r\n                                </a>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      </section>\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <CheckoutPrice paymentMode={paymentMode} shippingType={internationalShipping} setCartTotal={setCartTotal} />\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  CheckoutContainer\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst SubBanner: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <section className=\"uk-section uk-section-default uk-section-small\">\r\n      <div className=\"uk-container\">\r\n        <div className=\"uk-grid-small uk-child-width-1-2 uk-child-width-1-3@s uk-child-width-1-5@m\" uk-grid=\"true\">\r\n          <div>\r\n            <a onClick={()=>history.push('/product/bindi')} className=\"uk-link-muted uk-text-center uk-display-block uk-padding-small uk-box-shadow-hover-large\">\r\n              <div className=\"tm-ratio tm-ratio-4-3\">\r\n                <div className=\"tm-media-box\">\r\n                  <figure className=\"tm-media-box-wrap\"><img className=\"item-brand\" src=\"/sb_2.png\" alt=\"footwear\" /></figure>\r\n                </div>\r\n              </div>\r\n              <div className=\"uk-margin-small-top\">\r\n                <div className=\"uk-text-truncate\">Bindi</div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <a onClick={()=>history.push('/product/footwear')}  className=\"uk-link-muted uk-text-center uk-display-block uk-padding-small uk-box-shadow-hover-large\" >\r\n              <div className=\"tm-ratio tm-ratio-4-3\">\r\n                <div className=\"tm-media-box\">\r\n                  <figure className=\"tm-media-box-wrap\"><img className=\"item-brand\" src=\"/sb_1.png\" alt=\"Bindi\" /></figure>\r\n                </div>\r\n              </div>\r\n              <div className=\"uk-margin-small-top\">\r\n                <div className=\"uk-text-truncate\">Footwear</div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <a className=\"uk-link-muted uk-text-center uk-display-block uk-padding-small uk-box-shadow-hover-large\" href=\"#\">\r\n              <div className=\"tm-ratio tm-ratio-4-3\">\r\n                <div className=\"tm-media-box\">\r\n                  <figure className=\"tm-media-box-wrap\"><img className=\"item-brand\" src=\"/sb_3.png\" alt=\"Accessories\" /></figure>\r\n                </div>\r\n              </div>\r\n              <div className=\"uk-margin-small-top\">\r\n                <div className=\"uk-text-truncate\">Homedecore</div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <a onClick={()=>history.push('/product/lingerie')}  className=\"uk-link-muted uk-text-center uk-display-block uk-padding-small uk-box-shadow-hover-large\">\r\n              <div className=\"tm-ratio tm-ratio-4-3\">\r\n                <div className=\"tm-media-box\">\r\n                  <figure className=\"tm-media-box-wrap\"><img className=\"item-brand\" src=\"/sb_4.png\" alt=\"Home Decor\" /></figure>\r\n                </div>\r\n              </div>\r\n              <div className=\"uk-margin-small-top\">\r\n                <div className=\"uk-text-truncate\">Lingerie</div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <a className=\"uk-link-muted uk-text-center uk-display-block uk-padding-small uk-box-shadow-hover-large\" href=\"#\">\r\n              <div className=\"tm-ratio tm-ratio-4-3\">\r\n                <div className=\"tm-media-box\">\r\n                  <figure className=\"tm-media-box-wrap\"><img className=\"item-brand\" src=\"/test.jpg\" alt=\"Home Decor\" /></figure>\r\n                </div>\r\n              </div>\r\n              <div className=\"uk-margin-small-top\">\r\n                <div className=\"uk-text-truncate\">Cosmetics</div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport {\r\n  SubBanner\r\n}","import React from 'react';\r\n\r\nconst Banner: React.FunctionComponent = () => {\r\n  return (\r\n    <section className=\"uk-position-relative uk-visible-toggle uk-light\" uk-slideshow=\"ratio: 8.2:3; min-height:175\">\r\n      <ul className=\"uk-slideshow-items\">\r\n        <li style={{ backgroundColor: \"#0b0a12\" }}>\r\n          <a>\r\n            <figure className=\"uk-container uk-height-1-1\"><img src=\"/banner_first.jpg\" alt=\"New Macbook\"  uk-cover=\"true\" /></figure>\r\n          </a>\r\n        </li>\r\n        <li style={{ backgroundColor: \"#0b0a12\" }}>\r\n          <a>\r\n            <figure className=\"uk-container uk-height-1-1\"><img src=\"/banner_two.jpg\" alt=\"New Macbook\"  uk-cover=\"true\" /></figure>\r\n          </a>\r\n        </li>\r\n        <li style={{ backgroundColor: \"#ce071e;\" }}>\r\n          <a>\r\n            <figure className=\"uk-container uk-height-1-1\"><img src=\"/banner_three.jpg\" alt=\"iPhone\"  uk-cover=\"true\" /></figure>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <a className=\"uk-position-center-left uk-position-small uk-hidden-hover\" uk-slideshow-item=\"previous\" uk-slidenav-previous=\"true\"></a>\r\n      <a className=\"uk-position-center-right uk-position-small uk-hidden-hover\" uk-slideshow-item=\"next\" uk-slidenav-next=\"true\"></a>\r\n      <div className=\"uk-position-bottom-center uk-position-small\"><ul className=\"uk-slideshow-nav uk-dotnav\"></ul></div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport {\r\n  Banner\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppState, UserLocation, Cart, addUpdateCart } from 'reducers';\r\nimport { ProductItem, CustomerCart } from 'types';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { getCurrencyIcon, calculateUserDiscount, showINRUSD } from 'services';\r\nimport { LoadingProductArticle } from 'components/shared';\r\n\r\n\r\ninterface Props {\r\n  productList: ProductItem[]\r\n}\r\n\r\nconst TrendingLatestProducts: React.FunctionComponent<Props> = (props: Props) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n\r\n  const addToCart = (product: ProductItem) => {\r\n    if(!userData.data?.userId){\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: product.productDetailId,\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: showINRUSD(userLocation.data || 'IN', product),\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, false))\r\n    } else {\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: '0',\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: '0',\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, true));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"uk-grid-collapse uk-child-width-custom tm-products-grid\" uk-grid=\"true\">\r\n      {\r\n        props.productList.length > 0 ?\r\n        props.productList.map((product) => {\r\n          return (\r\n            <article key={product.productId} className=\"tm-product-card\">\r\n              <div className=\"tm-product-card-media\">\r\n                <div className=\"tm-ratio tm-ratio-4-3\">\r\n                  <a className=\"tm-media-box\" onClick={() => {history.push('/productDetails/' + product.productId) }}>\r\n                    <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + product.imagePaths} alt={product.imageNames} /></figure>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              <div className=\"tm-product-card-body\">\r\n                <div className=\"tm-product-card-info\">\r\n                  <div className=\"uk-text-meta uk-margin-xsmall-bottom\">{product.productCategoryName}</div>\r\n                  <h3 className=\"tm-product-card-title\"><a className=\"uk-link-heading\" onClick={() => history.push('/productDetails/' + product.productId)}>{product.name}</a></h3>\r\n                </div>\r\n                <div className=\"tm-product-card-shop\">\r\n                  <div className=\"tm-product-card-prices\">\r\n                    {\r\n                      userData.data?.discount && userData.data?.discount !== '0' &&\r\n                      <del className=\"uk-text-meta\">{getCurrencyIcon(userLocation.data || 'IN')} {showINRUSD(userLocation.data || 'IN', product)}</del>\r\n                    }\r\n                    <div className=\"tm-product-card-price\">\r\n                      {getCurrencyIcon(userLocation.data || 'IN')} {calculateUserDiscount(userData.data?.discount || '0', showINRUSD(userLocation.data || 'IN', product))}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"tm-product-card-add\">\r\n                    <button className=\"uk-button uk-button-primary tm-product-card-add-button tm-shine js-add-to-cart\">\r\n                      {\r\n                        cart._isLoading && <span uk-spinner=\"true\"></span>\r\n                      }\r\n                      {\r\n                        !cart._isLoading && (\r\n                          <>\r\n                            <span className=\"tm-product-card-add-button-icon\" uk-icon=\"cart\" onClick={() => addToCart(product)}></span>\r\n                            <span className=\"tm-product-card-add-button-text\">add to cart</span>\r\n                          </>\r\n                        )\r\n                      }\r\n\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </article>\r\n          )\r\n        }) : Array(4).fill(1).map((value, index) => <LoadingProductArticle keyIndex={index}/>)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  TrendingLatestProducts\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState } from 'reducers';\r\nimport { ProductItem } from 'types';\r\nimport { TrendingLatestProducts } from '.';\r\n\r\nconst TrendingLatestContainer: React.FunctionComponent = () => {\r\n\r\n  const latestProducts = useSelector<AppState, ProductItem[]>(state => state.latestProduct.data || []);\r\n  const trendingProducts = useSelector<AppState, ProductItem[]>(state => state.trendingProduct.data || []);\r\n\r\n  return (\r\n    <>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <h2 className=\"uk-text-center\">Trending Items</h2>\r\n          <div className=\"uk-card uk-card-default tm-ignore-container\">\r\n           <TrendingLatestProducts productList={trendingProducts} />\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <h2 className=\"uk-text-center\">Latest Items</h2>\r\n          <div className=\"uk-card uk-card-default tm-ignore-container\">\r\n           <TrendingLatestProducts productList={latestProducts} />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nexport {\r\n  TrendingLatestContainer\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getTrendingProduct, getLatestProduct, AppState } from 'reducers';\r\nimport { SubBanner } from './SubBanner';\r\nimport { Banner } from './Banner';\r\nimport { TrendingLatestContainer } from './trendingLatest';\r\nimport { PromoBanner } from './PromoBanner';\r\n\r\n\r\nconst HomePageContainer: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getTrendingProduct());\r\n    dispatch(getLatestProduct());\r\n  },[])\r\n  return (\r\n    <main>\r\n      <Banner/>\r\n      <SubBanner/>\r\n      <TrendingLatestContainer/>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  HomePageContainer\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { Router, Switch, Route } from \"react-router-dom\";\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport './index.css';\r\nimport { UserContainer } from 'components/user';\r\nimport { UserLogin } from 'components/login'\r\nimport { MainFooter } from 'components/footer';\r\nimport { Navigation } from 'components/pilot';\r\nimport { MainContainer } from 'components/admin/MainContainer';\r\nimport { CustomerContainer } from 'components/customer';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { store } from 'reducers';\r\nimport { CustomerProductDetails } from 'components/customer/ProductDetails';\r\nimport { CustomerProductDetailsConstainer } from 'components/customer/ProductDetails/CustomerProductDetailsContainer';\r\nimport { CustomerCartContainer } from 'components/customer/Cart';\r\nimport { CheckoutContainer } from 'components/customer/Checkout';\r\nimport { HomePageContainer } from 'components/customer/Home';\r\nimport {ContactUs, ScrollToTop} from 'components/shared';\r\n\r\n\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <Router history={createBrowserHistory()}>\r\n      <ScrollToTop />\r\n        <Navigation />\r\n          <Switch>\r\n          <Route path=\"/\" exact>\r\n              <HomePageContainer />\r\n            </Route>\r\n            <Route path=\"/userinformation/:userTab?\" exact>\r\n              <UserContainer />\r\n            </Route>\r\n            <Route path=\"/login\" exact>\r\n              <UserLogin />\r\n            </Route>\r\n            <Route path=\"/admin/:product?/:productId?\" exact>\r\n              <MainContainer />\r\n            </Route>\r\n            <Route path=\"/product/:product/:filterOn?\" exact>\r\n              <CustomerContainer />\r\n            </Route>\r\n            <Route path=\"/productDetails/:queryProductId\" exact>\r\n              <CustomerProductDetailsConstainer />\r\n            </Route>\r\n            <Route path=\"/cart\" exact>\r\n              <CustomerCartContainer/>\r\n            </Route>\r\n            <Route path=\"/checkout\" exact>\r\n              <CheckoutContainer/>\r\n            </Route>\r\n            <Route path=\"/contactus\" exact>\r\n              <ContactUs/>\r\n            </Route>\r\n          </Switch>\r\n        <MainFooter />\r\n      </Router>\r\n    </React.StrictMode>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(\r\n  app,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}