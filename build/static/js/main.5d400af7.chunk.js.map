{"version":3,"sources":["appConstants/AxiosConstants.ts","appConstants/CountryCodes.ts","appConstants/SubProducts.ts","reducers/UserInformation.ts","appConstants/ApiServerConstants.ts","services/axiosBase.ts","services/axios.ts","services/Misc.ts","reducers/Login.ts","reducers/UserSettings.ts","reducers/Colour.ts","reducers/Size.ts","reducers/SubCategory.ts","reducers/Coupon.ts","reducers/Product.ts","reducers/ProductCount.ts","appConstants/ProductsConstants.ts","reducers/Cart.ts","reducers/Checkout.ts","reducers/UserLocation.ts","reducers/Order.ts","reducers/Shipper.ts","reducers/Shipment.ts","reducers/RelatedProducts.ts","reducers/TrendingProducts.ts","reducers/LatestProducts.ts","reducers/Search.ts","reducers/CustomerShippment.ts","reducers/index.ts","components/shared/NotificationContainer.tsx","components/shared/PayPalContainer.tsx","components/shared/PayPalPayment.tsx","components/shared/CashOnDeliveryPayment.tsx","components/shared/QuickProductList.tsx","components/shared/LoadingProductArticle.tsx","components/shared/ScrollToTop.tsx","components/shared/ContactUs.tsx","components/user/UserInformation.tsx","components/user/UserNav.tsx","components/user/UserSettings.tsx","components/user/Orders.tsx","components/user/UserContainer.tsx","components/login/login.tsx","components/footer/MainFooter.tsx","components/pilot/Navigation.tsx","components/pilot/SideCart.tsx","components/pilot/MobileNavigation.tsx","components/admin/AdminNav.tsx","components/admin/AdminProductList.tsx","components/admin/subComponents/colour/ColourList.tsx","components/admin/subComponents/colour/ProductColour.tsx","components/admin/subComponents/size/ProductSize.tsx","components/admin/subComponents/size/SizeList.tsx","components/admin/subComponents/subCategory/ProductSubCategory.tsx","components/admin/subComponents/subCategory/SubCategoryList.tsx","components/admin/subComponents/coupon/ProductCoupon.tsx","components/admin/subComponents/coupon/CouponList.tsx","components/admin/subComponents/product/ProductItem.tsx","components/admin/subComponents/product/ProductList.tsx","components/admin/subComponents/orders/OrderList.tsx","components/admin/subComponents/orders/OrderDetails.tsx","components/admin/subComponents/shippers/ShipperDetails.tsx","components/admin/subComponents/shippers/ShipperList.tsx","components/admin/subComponents/users/UserList.tsx","components/admin/subComponents/users/UserDetails.tsx","components/admin/MainContainer.tsx","components/customer/CustomerProductList.tsx","components/customer/CustomerContainer.tsx","components/customer/CustomerProductFilter.tsx","serviceWorker.ts","components/customer/ProductDetails/CustomerProductDetails.tsx","components/customer/ProductDetails/CustomerProductDetailsLoading.tsx","components/customer/ProductDetails/CustomerProductDetailsContainer.tsx","components/customer/Cart/CartDetails.tsx","components/customer/Cart/CartPrice.tsx","components/customer/Cart/CustomerCartContainer.tsx","components/customer/Checkout/CheckoutPrice.tsx","components/customer/Checkout/CheckoutContianer.tsx","components/customer/Home/SubBanner.tsx","components/customer/Home/Banner.tsx","components/customer/Home/trendingLatest/TrendingLatestProduct.tsx","components/customer/Home/trendingLatest/TrendingLatestContainer.tsx","components/customer/Home/HomePageContainer.tsx","index.tsx"],"names":["HttpRequest","HttpStatusCode","SubProducts","CountryCodes","Actions","SubCategories","AllowReturn","serverImagePath","apiServerHost","axios","create","baseURL","headers","api","url","makeRequest","method","GET","data","POST","config","a","defaults","window","localStorage","getItem","request","response","status","removeItem","location","href","message","getSubCategoryFromId","id","filterSubcategories","subCategories","categoryId","filter","subCategory","productCategoryId","Number","filterSize","sizes","size","indexOf","productCategory","calculateUserDiscount","discount","price","Math","ceil","toString","calculateUserDiscountPrice","getCurrencyIcon","currency","showINRUSD","userLocation","priceINR","priceUSD","createActiveProductCountList","activeProducts","resultList","forEach","product","subcategoryId","colourId","count","sizeObj","sizeArray","resultSize","sizeCheck","sizeId","name","colourName","reduce","b","subcategoryName","countHighlightProducts","products","isTrending","trending","length","latest","initialState","isAdmin","allUsers","_isError","_isLoading","_isSuccess","setUser","user","type","SET_USER","loadingUser","LOADING_USER","errorUser","ERROR_USER","updateDiscount","emailAddress","UPDATE_USER_DISCOUNT","getUser","disptach","OK","loadingRegister","LOADING_REGISTER","errorRegister","ERROR_REGISTER","successRegister","SUCCESS_REGISTER","setUserSetting","userSettings","SET_USER_SETTINGS","loadingUserSettings","LOADING_USER_SETTINGS","errorUserSettings","ERROR_USER_SETTINGS","loadingColour","LOADING_COLOUR","errorColour","ERROR_COLOUR","getColour","dispatch","res","SET_COLOUR","loadingSize","LOADING_SIZE","successSize","SUCCESS_SIZE","errorSize","addUpdateSize","product_size","value","product_size_code","code","product_category","size_id","productCategoryIndex","productCategoryName","UPDATE_SIZE","getSize","SET_SIZE","loadingSubCategory","LOADING_SUBCATEGORY","successSubCategory","SUCCESS_SUBCATEGORY","errorSubCategory","ERROR_SUBCATEGORY","addUpdateSubCategory","product_name","product_desc","product_category_id","subcategory_id","subCategoryId","UPDATE_SUBCATEGORY","getSubCategory","SET_SUBCATEGORY","loadingCoupon","LOADING_COUPON","errorCoupon","ERROR_COUPON","setCoupon","SET_COUPON","updateCouponSuccess","UPDATE_COUPON_SUCCESS","deleteCouponSuccess","DELETE_COUPON_SUCCESS","updateCoupon","coupon","isDelete","coupon_code","coupon_value","coupon_id","couponId","loadingProduct","LOADING_PRODUCT","successProduct","SUCCESS_PRODUCT","errorProduct","ERROR_PRODUCT","setProducts","_hasMoreProducts","SET_PRODUCT","setDefaulState","SET_DEFAULT_PRODUCT","deleteProductSuccess","DELETE_PRODUCT_SUCCESS","setCustomerProducts","SET_CUSTOMER_PRODUCT","setProductHighlight","productId","SET_PRODUCT_HIGHLIGHT","singleData","addUpdateProduct","sizeColourQuantity","formData","FormData","productImageBlob","Array","from","element","index","append","colour","quantity","description","JSON","stringify","deletedImagePath","deletedProductDetailIds","getProduct","SET_SINGLE_PRODUCT","getCustomerProducts","offset","limit","startPrice","endPrice","searchText","freshData","_quantityUpdate","loadingCart","LOADING_CART","errorCart","ERROR_CART","updateCartSuccess","UPDATE_CART_SUCCESS","deleteCartProduct","DELETE_CART_PRODUCT","addUpdateCart","cart","isLoggedIn","newCart","totalPrice","productPrice","productQuantity","UPDATE_CART_LOGGED_OUT","product_detail_id","productDetailId","order_quantity","price_id","currencyType","orderdetail_id","cartId","delete_flag","result","productImage","productImagePath","productName","subcategory","getCart","ADD_CART_SUCCESS","deleteCartItem","DELETE_CART_PRODUCT_LOGGED_OUT","_isPaymentSucceess","_priceChanged","_isFetchCodCodeSuccess","loadingCheckout","LOADING_CHECKOUT","successCheckoutOrder","SUCCESS_CHECKOUT_ORDER","errorCheckout","ERROR_CHECKOUT","defaultCheckout","DEFAULT_CHECKOUT","successPayment","SUCCESS_PAYMENT","priceChanged","PRICE_CHANGED","getPayPalOrder","amount","displayAmount","orderId","PARTIAL_INFO","setUserLocation","SET_USER_LOCATION","loadingOrder","LOADING_ORDER","successOrder","_hasMoreOrders","SUCCESS_ORDER","adminSuccessOrder","ADMIN_SUCCESS_ORDER","errorOrder","ERROR_ORDER","customerReturn","orderDetailsId","CUSTOMER_RETURN","defaulOrderReturn","DEFAULT_ORDER_RETURN","_isOrderUpdate","getCustomerOrders","loadingShipper","LOADING_SHIPPER","errorShipper","ERROR_SHIPPER","updateShipperSuccess","UPDATE_SHIPPER_SUCCESS","deleteShipperSuccess","DELETE_SHIPPER_SUCCESS","getShippers","SET_SHIPPER","updateShipper","shipper","shipper_name","shipperName","shipper_link","trackingLink","shipper_id","shipperId","successShipment","SUCCESS_SHIPMENT","setSearch","SET_SEARCH","shippmentPrice","setShippingPrice","SET_SHIPPING_PRICE","reducers","state","action","DEFAULT_USER","SET_ALL_USER","map","toLowerCase","userLogin","LOADING_LOGIN","ERROR_LOGIN","SUCCESS_LOGIN","DEFAULT_STATE","SUCCESS_COLOUR","UPDATE_COLOUR_SUCCESS","originalState","updatedValue","updatedState","d","DEFAULT_COLOUR","ERROR_SIZE","SUCCESS_COUPON","orgState","updValue","updState","DEFAULT_COUPON","concat","productCount","LOADING_PRODUCT_COUNT","ERROR_PRODUCT_COUNT","SET_PRODUCT_COUNT","SUCCESS_CART","SET_CART","SET_LOGGED_CART","og","newProduct","originalStatelo","oglo","newProductlo","setItem","DEFAULT_CART","CART_GET_UPDATED_QUANTITY","CART_QUANTITY_FINE","checkout","LOADING_USER_LOCATION","customerOrders","SINGLE_DATA","singleOrder","updatedOrder","orderItems","order","orderDetailId","shipmentDetails","returnStatus","SUCCESS_SHIPPER","DEFAULT_SHIPPER","shipment","LOADING_SHIPMENT","ERROR_SHIPMENT","relatedProduct","SUCCESS_RELATED_PRODUCT","LOADING_RELATED_PRODUCT","ERROR_RELATED_PRODUCT","SET_RELATED_PRODUCT","trendingProduct","SUCCESS_TRENDING_PRODUCT","LOADING_TRENDING_PRODUCT","ERROR_TRENDING_PRODUCT","SET_TRENDING_PRODUCT","latestProduct","SUCCESS_LATEST_PRODUCT","LOADING_LATEST_PRODUCT","ERROR_LATEST_PRODUCT","SET_LATEST_PRODUCT","search","LOADING_SEARCH","ERROR_SEARCH","customerShippment","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunkMiddleware","NotificationContainer","props","className","isSdkReady","undefined","paypal","this","addPaypalSdk","onButtonReady","actions","options","shippingPreference","purchase_units","currency_code","application_context","shipping_preference","capture","then","details","onSuccess","catch","err","catchError","error","onCancel","createOrder","createSubscription","onApprove","style","Button","Buttons","driver","React","ReactDOM","createOrderFn","queryParams","Object","entries","key","split","join","push","script","document","createElement","src","async","onload","setState","onerror","Error","body","appendChild","Component","defaultProps","clientId","PayPalPayment","useDispatch","history","useHistory","paypalPaymentLoadingRef","useRef","paypalModalRef","useSelector","userData","couponData","useState","paypalPaymentMessage","setPaypalPaymentMessage","setPayPalOrderId","paymentErroredOut","setPaymentErroredOut","paymentSuccess","setPaymentSuccess","setIsCard","useEffect","paymentMode","paypalOrderId","cartTotalPrice","paypalButton","close","setTimeout","go","current","click","didPriceChanged","togglePaymenModal","fundingType","successPaypalPayment","onClick","fundingSource","cartTotalWithShipping","cartOrderId","onError","console","log","render","tt","funding","innerWidth","scrollTo","top","behavior","setContainerIsCard","orderData","paymentData","paypalData","paypalResponse","addressId","quantityCount","isStandard","ref","uk-toggle","uk-modal","uk-close","uk-spinner","CashOnDeliveryPayment","showOtpContainer","timeLeft","setTimeLeft","enteredOTP","setEnteredOTP","timer","setInterval","clearTimeout","resendOtpToCustomer","uk-grid","onChange","e","currentTarget","QuickProductList","uk-slider","uk-slider-item","uk-slidenav-previous","uk-slidenav-next","productList","imagePaths","alt","imageNames","uk-icon","userId","cartData","addToCart","LoadingProductArticle","keyIndex","ScrollToTop","withRouter","unlisten","listen","ContactUs","UserInformation","isLoading","userInformationFormik","useFormik","initialValues","firstName","lastName","mobile","dob","gender","country","default","countryCode","city","pincode","addressLineOne","addressLineTwo","addressLineThree","validationSchema","Yup","required","matches","onSubmit","enableReinitialize","handleSubmit","fromCart","getFieldProps","touched","errors","disabled","UserNav","uk-sticky","showPersonal","toggelDetails","showOrders","showSettings","UserSettings","userSettingFormik","currentPassword","newPassword","confirmPassword","oneOf","resetForm","Orders","hasMoreOrders","setHasMoreOrders","selectedReason","setSelectedReason","showOrderDetailIndex","setShowOrderDetailIndex","returnOrderDetailId","setReturnOrderDetailId","returnOrderNumber","setReturnOrderNumber","returnProductName","setReturnProductName","showReturnError","setShowReturnError","returnModalRef","returnButtonRef","orders","shipperData","getBoundingClientRect","that","getShipmentLink","trackingNumber","shipperInfo","target","checkReturnEligibilty","deliveryDate","differenceInDays","Date","getTime","returnOrder","reason","orderNumber","returnReason","userName","customerProductReturn","dataLength","next","hasMore","loader","textAlign","marginTop","endMessage","paymentDate","paymentReturned","shippingDate","uk-accordion","orderItem","visibility","checked","UserContainer","userTab","useParams","setShowSettings","setShowPersonal","setShowOrders","selected","UserLogin","isError","responseMessage","loginRedirect","setLoginRedirect","loginFormik","email","password","isRegistration","forgetPassword","when","is","values","registerationData","loginData","loginDetails","access_token","toggleLoginRegister","setFieldValue","parse","to","event","Iso","MainFooter","width","Navigation","cartCount","setCartCount","enteredSearchText","setEnteredSearchText","cartCountCssFlag","setCartCountCssFlag","sideCartRef","mobileNavigationRef","Intl","DateTimeFormat","resolvedOptions","timeZone","getTimezoneOffset","searchProduct","navigateTo","categoryPath","subcategoryPath","preventDefault","logout","uk-navbar","uk-navbar-toggle-icon","keys","uk-drop","uk-search-icon","placeholder","onKeyPress","uk-dropdown","minWidth","SideCart","mainTotal","setMainTotal","userDiscountTotal","setUserDiscountTotal","totalAfterDiscount","setTotalAfterDiscount","discountedTotal","setDiscountedTotal","userCouponTotal","setUserCouponTotal","cartPrice","discountPrice","priceAfterDiscount","couponPrice","priceAfterCoupon","uk-offcanvas","uk-tooltip","MobileNavigation","uk-nav","AdminNav","subProductToggle","addEditToggle","selectedTab","setSelectedTab","isOnList","setIsOnList","PRODUCT","title","USERS","ORDERS","SUB_PRODUCT","SIZE","COLOUR","COUPONS","SHIPPER","AdminProductList","searchTerm","setSearchTerm","tabName","setTabName","tableData","setTableData","stateData","columns","productColumns","productType","getAdminOrders","includes","defaultSortField","sortByColumn","defaultSortAsc","selectableRows","selectableRowsNoSelectAll","selectableRowsHighlight","selectableRowsVisibleOnly","expandableRows","expandOnRowClicked","expandableRowsComponent","ExpandableComponent","pagination","highlightOnHover","striped","pointerOnHover","dense","noTableHead","persistTableHead","progressPending","noHeader","subHeader","subHeaderComponent","color","searchPlaceholder","fixedHeader","fixedHeaderScrollHeight","direction","colourActionStatus","colourQuickViewFormik","product_color_code","product_color","colour_id","isSubmitting","ColourList","selector","sortable","ProductColour","colourFormik","ProductSize","sizeFormik","sizeActionStatus","SizeList","sizeQuickViewFormik","ProductSubCategory","subCategoryFormik","moreThan","subCategoryActionStatus","SubCategoryList","subCategoryQuickViewFormik","ProductCoupon","couponFormik","couponActionStatus","CouponList","cell","row","confirm","couponQuickViewFormik","ProductItem","setSizeColourQuantity","selectedSizes","setSelectedSizes","sizeColourQuantityErrorMessage","setSizeColourQuantityErrorMessage","productItemFormik","sizeColourQuantityCombo","filteredKey","checkForProductCategory","updatedImageName","adminProductCombo","productDetailIdArray","some","item","productSize","productColour","productActionStatus","colourArray","quantityArray","editSizeColourQuantityCombo","sizeItem","filteredSubcategories","filteredProductSize","updatedSizeColourQuantityArray","field","currentItem","splice","cols","handleChange","onBlur","handleBlur","fill","isArray","newPDArray","reduceProductComboLength","availableSizes","addProductComboLength","htmlFor","multiple","files","currentNumberOfFile","currentFiles","filesArray","checkForMaxFileUpload","fileName","filePath","fileNames","path","imagePath","imageName","removeCurrentImage","getFileNameAndPath","call","file","i","URL","createObjectURL","img","removeImage","ProductList","marginLeft","productQuickViewFormik","highlight","setSubmitting","updateProductHighLight","OrderList","wrap","icon","orderLength","getIconForAdminOrder","whiteSpace","OrderDetails","adminShipmentData","setAdminShipmentData","orginalTrackingLink","setOrginalTrackingLink","shippers","shipmentStatus","tempShipmentData","tempTrackingLink","shipmentId","updateShipmentData","shipmentDataCopy","shipmentDataToUpdate","updatedShipmentData","updateOrderStatus","orderUpdate","sendTrackingEmail","isTrackingChanged","orginalTrackingLinkCopy","customerEmail","userDetails","customerName","payaplResponse","transactionId","payments","captures","getPaypalTransactionId","razorpayPaymentId","standardShipping","ShipperDetails","shipperActionStatus","shipperFormik","ShipperList","shipperQuickViewFormik","UserList","userActionStatus","userDiscountQuickViewFormik","updateUserDiscount","UserDetails","MainContainer","setIsOnAdd","setSubProductId","isOnAdd","subProductId","showSubProductComponent","CustomerProductList","hasMoreProducts","setHasMoreProducts","CustomerContainer","filterOn","setColourId","setSizeId","setSubCategoryId","setStartPrice","setEndPrice","setcategoryId","subCategoryQueryParam","setSubCategoryQueryParam","subCateId","activeProductCount","productKey","find","selectedSubCat","selectedColour","selectedSize","localCount","getTotalProductCount","filterSelected","CustomerProductFilter","filterColourId","setFilterColourId","filterSizeId","setFilterSizeId","filterSubCategory","setFilterSubCategory","filterStartPrice","setFilterStartPrice","filterEndPrice","setFilterEndPrice","startPriceTimer","setStartPriceTimer","endPriceTimer","setEndPriceTimer","toggleAddingRemovingId","ids","newId","getFilteredProduct","updatedColourFilter","updatedSizeFilter","updatedSubCategory","flexBasis","getProductCount","Boolean","hostname","match","CustomerProductDetails","cartProductQuantity","relatedProducts","pINR","setPINR","pUSD","setPUSD","pQuantity","setPQuantity","pSize","setPSize","pSizeId","setPSizeId","pDetailId","setPDetailId","setSelectedSize","selectedQuantity","setSelectedQuantity","selectedProductDetailId","setSelectedProductDetailId","maxQuantity","setMaxQuantity","defaultProductDetail","productIndex","onChangeQuantity","toggleQuantity","isIncrement","maxQaun","checkForDefaultSize","sizeList","uk-slideshow","uk-lightbox","mainSlider","smallSlider","selectedIndex","maxQ","pdId","setSize","onBlurQuantity","CustomerProductDetailsLoading","uk-slideshow-item","uk-switcher","CustomerProductDetailsConstainer","queryProductId","setMainSlider","setSmallSlider","setCartProductQuantity","cartProductFlag","setCartProductFlag","tabIndex","cartProductCount","getRelatedProduct","CartDetails","setQuantity","enteredCoupon","setEnteredCoupon","quantityCheckMessage","setQuantityCheckMessage","couponStatus","deboucedId","setDeboucedId","quantityChanged","setQuantityChanged","quantityChangedProductId","setQuantityChangedProductId","orderQuantityCheckButtonRef","orderQuantityCheckModalRef","qt","checkForAvailableQuantity","cartItem","availableQuantity","updateCart","updateQantity","changedQuantity","chqty","newQuantity","updatedQuantity","checkCouponValidity","deleteCart","CartPrice","cartTotal","setCartTotal","total","CustomerCartContainer","Razorpay","CheckoutPrice","setCartTotalPrice","priceAfterShipping","setPriceAfterShipping","setQuantityCount","setCartOrderId","paymentMessage","setPaymentMessage","paymentError","setPaymentError","errorHappendAt","setErrorHappendAt","shippingCost","paymentLoadingRef","containerIsCard","ukSticky","setUkSicky","showCodContainer","setShowCodContainer","noAddressError","setNoAddressError","setDidPriceChanged","timeForShowPriceChange","setTimeForShowPriceChange","calculateShippingCost","shippingType","successRazorPay","razorpay_payment_id","razorpay_order_id","razorpay_signature","rzp1","on","source","step","metadata","open","otp","razorpayOrderId","razorpaySignature","razorpayData","receipt","proceedWithPayment","getCodOrder","successCod","codData","itemCount","accumulator","cost","CheckoutContainer","setPaymentMode","internationalShipping","setInternationalShipping","SubBanner","Banner","backgroundColor","uk-cover","TrendingLatestProducts","TrendingLatestContainer","latestProducts","trendingProducts","HomePageContainer","app","StrictMode","createBrowserHistory","exact","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5d400af7.chunk.js","sourcesContent":["enum HttpRequest {\r\n  GET = \"GET\",\r\n  POST = \"POST\",\r\n  DELETE = \"DELETE\",\r\n  PATCH = \"PATCH\"\r\n};\r\n\r\n\r\nenum HttpStatusCode {\r\n  OK = 200,\r\n  ACCEPTED = 202,\r\n  PARTIAL_INFO = 203,\r\n  BAD_REQUEST = 400,\r\n  NOT_FOUND = 404\r\n}\r\n\r\nexport { HttpRequest, HttpStatusCode };","const CountryCodes = [\r\n  {\r\n    \"name\": \"Afghanistan\",\r\n    \"Iso\": \"+93\",\r\n    \"countryCode\": \"AF\"\r\n  },\r\n  {\r\n    \"name\": \"Åland Islands\",\r\n    \"Iso\": \"+358\",\r\n    \"countryCode\": \"AX\"\r\n  },\r\n  {\r\n    \"name\": \"Albania\",\r\n    \"Iso\": \"+355\",\r\n    \"countryCode\": \"AL\"\r\n  },\r\n  {\r\n    \"name\": \"Algeria\",\r\n    \"Iso\": \"+213\",\r\n    \"countryCode\": \"DZ\"\r\n  },\r\n  {\r\n    \"name\": \"American Samoa\",\r\n    \"Iso\": \"+1684\",\r\n    \"countryCode\": \"AS\"\r\n  },\r\n  {\r\n    \"name\": \"Andorra\",\r\n    \"Iso\": \"+376\",\r\n    \"countryCode\": \"AD\"\r\n  },\r\n  {\r\n    \"name\": \"Angola\",\r\n    \"Iso\": \"+244\",\r\n    \"countryCode\": \"AO\"\r\n  },\r\n  {\r\n    \"name\": \"Anguilla\",\r\n    \"Iso\": \"+1264\",\r\n    \"countryCode\": \"AI\"\r\n  },\r\n  {\r\n    \"name\": \"Antarctica\",\r\n    \"Iso\": \"+672\",\r\n    \"countryCode\": \"AQ\"\r\n  },\r\n  {\r\n    \"name\": \"Antigua and Barbuda\",\r\n    \"Iso\": \"+1268\",\r\n    \"countryCode\": \"AG\"\r\n  },\r\n  {\r\n    \"name\": \"Argentina\",\r\n    \"Iso\": \"+54\",\r\n    \"countryCode\": \"AR\"\r\n  },\r\n  {\r\n    \"name\": \"Armenia\",\r\n    \"Iso\": \"+374\",\r\n    \"countryCode\": \"AM\"\r\n  },\r\n  {\r\n    \"name\": \"Aruba\",\r\n    \"Iso\": \"+297\",\r\n    \"countryCode\": \"AW\"\r\n  },\r\n  {\r\n    \"name\": \"Australia\",\r\n    \"Iso\": \"+61\",\r\n    \"countryCode\": \"AU\"\r\n  },\r\n  {\r\n    \"name\": \"Austria\",\r\n    \"Iso\": \"+43\",\r\n    \"countryCode\": \"AT\"\r\n  },\r\n  {\r\n    \"name\": \"Azerbaijan\",\r\n    \"Iso\": \"+994\",\r\n    \"countryCode\": \"AZ\"\r\n  },\r\n  {\r\n    \"name\": \"Bahamas\",\r\n    \"Iso\": \"+1242\",\r\n    \"countryCode\": \"BS\"\r\n  },\r\n  {\r\n    \"name\": \"Bahrain\",\r\n    \"Iso\": \"+973\",\r\n    \"countryCode\": \"BH\"\r\n  },\r\n  {\r\n    \"name\": \"Bangladesh\",\r\n    \"Iso\": \"+880\",\r\n    \"countryCode\": \"BD\"\r\n  },\r\n  {\r\n    \"name\": \"Barbados\",\r\n    \"Iso\": \"+1246\",\r\n    \"countryCode\": \"BB\"\r\n  },\r\n  {\r\n    \"name\": \"Belarus\",\r\n    \"Iso\": \"+375\",\r\n    \"countryCode\": \"BY\"\r\n  },\r\n  {\r\n    \"name\": \"Belgium\",\r\n    \"Iso\": \"+32\",\r\n    \"countryCode\": \"BE\"\r\n  },\r\n  {\r\n    \"name\": \"Belize\",\r\n    \"Iso\": \"+501\",\r\n    \"countryCode\": \"BZ\"\r\n  },\r\n  {\r\n    \"name\": \"Benin\",\r\n    \"Iso\": \"+229\",\r\n    \"countryCode\": \"BJ\"\r\n  },\r\n  {\r\n    \"name\": \"Bermuda\",\r\n    \"Iso\": \"+1441\",\r\n    \"countryCode\": \"BM\"\r\n  },\r\n  {\r\n    \"name\": \"Bhutan\",\r\n    \"Iso\": \"+975\",\r\n    \"countryCode\": \"BT\"\r\n  },\r\n  {\r\n    \"name\": \"Bolivia, Plurinational State of bolivia\",\r\n    \"Iso\": \"+591\",\r\n    \"countryCode\": \"BO\"\r\n  },\r\n  {\r\n    \"name\": \"Bosnia and Herzegovina\",\r\n    \"Iso\": \"+387\",\r\n    \"countryCode\": \"BA\"\r\n  },\r\n  {\r\n    \"name\": \"Botswana\",\r\n    \"Iso\": \"+267\",\r\n    \"countryCode\": \"BW\"\r\n  },\r\n  {\r\n    \"name\": \"Bouvet Island\",\r\n    \"Iso\": \"+47\",\r\n    \"countryCode\": \"BV\"\r\n  },\r\n  {\r\n    \"name\": \"Brazil\",\r\n    \"Iso\": \"+55\",\r\n    \"countryCode\": \"BR\"\r\n  },\r\n  {\r\n    \"name\": \"British Indian Ocean Territory\",\r\n    \"Iso\": \"+246\",\r\n    \"countryCode\": \"IO\"\r\n  },\r\n  {\r\n    \"name\": \"Brunei Darussalam\",\r\n    \"Iso\": \"+673\",\r\n    \"countryCode\": \"BN\"\r\n  },\r\n  {\r\n    \"name\": \"Bulgaria\",\r\n    \"Iso\": \"+359\",\r\n    \"countryCode\": \"BG\"\r\n  },\r\n  {\r\n    \"name\": \"Burkina Faso\",\r\n    \"Iso\": \"+226\",\r\n    \"countryCode\": \"BF\"\r\n  },\r\n  {\r\n    \"name\": \"Burundi\",\r\n    \"Iso\": \"+257\",\r\n    \"countryCode\": \"BI\"\r\n  },\r\n  {\r\n    \"name\": \"Cambodia\",\r\n    \"Iso\": \"+855\",\r\n    \"countryCode\": \"KH\"\r\n  },\r\n  {\r\n    \"name\": \"Cameroon\",\r\n    \"Iso\": \"+237\",\r\n    \"countryCode\": \"CM\"\r\n  },\r\n  {\r\n    \"name\": \"Canada\",\r\n    \"Iso\": \"+1\",\r\n    \"countryCode\": \"CA\"\r\n  },\r\n  {\r\n    \"name\": \"Cape Verde\",\r\n    \"Iso\": \"+238\",\r\n    \"countryCode\": \"CV\"\r\n  },\r\n  {\r\n    \"name\": \"Cayman Islands\",\r\n    \"Iso\": \"+ 345\",\r\n    \"countryCode\": \"KY\"\r\n  },\r\n  {\r\n    \"name\": \"Central African Republic\",\r\n    \"Iso\": \"+236\",\r\n    \"countryCode\": \"CF\"\r\n  },\r\n  {\r\n    \"name\": \"Chad\",\r\n    \"Iso\": \"+235\",\r\n    \"countryCode\": \"TD\"\r\n  },\r\n  {\r\n    \"name\": \"Chile\",\r\n    \"Iso\": \"+56\",\r\n    \"countryCode\": \"CL\"\r\n  },\r\n  {\r\n    \"name\": \"China\",\r\n    \"Iso\": \"+86\",\r\n    \"countryCode\": \"CN\"\r\n  },\r\n  {\r\n    \"name\": \"Christmas Island\",\r\n    \"Iso\": \"+61\",\r\n    \"countryCode\": \"CX\"\r\n  },\r\n  {\r\n    \"name\": \"Cocos (Keeling) Islands\",\r\n    \"Iso\": \"+61\",\r\n    \"countryCode\": \"CC\"\r\n  },\r\n  {\r\n    \"name\": \"Colombia\",\r\n    \"Iso\": \"+57\",\r\n    \"countryCode\": \"CO\"\r\n  },\r\n  {\r\n    \"name\": \"Comoros\",\r\n    \"Iso\": \"+269\",\r\n    \"countryCode\": \"KM\"\r\n  },\r\n  {\r\n    \"name\": \"Congo\",\r\n    \"Iso\": \"+242\",\r\n    \"countryCode\": \"CG\"\r\n  },\r\n  {\r\n    \"name\": \"Congo, The Democratic Republic of the Congo\",\r\n    \"Iso\": \"+243\",\r\n    \"countryCode\": \"CD\"\r\n  },\r\n  {\r\n    \"name\": \"Cook Islands\",\r\n    \"Iso\": \"+682\",\r\n    \"countryCode\": \"CK\"\r\n  },\r\n  {\r\n    \"name\": \"Costa Rica\",\r\n    \"Iso\": \"+506\",\r\n    \"countryCode\": \"CR\"\r\n  },\r\n  {\r\n    \"name\": \"Cote d'Ivoire\",\r\n    \"Iso\": \"+225\",\r\n    \"countryCode\": \"CI\"\r\n  },\r\n  {\r\n    \"name\": \"Croatia\",\r\n    \"Iso\": \"+385\",\r\n    \"countryCode\": \"HR\"\r\n  },\r\n  {\r\n    \"name\": \"Cuba\",\r\n    \"Iso\": \"+53\",\r\n    \"countryCode\": \"CU\"\r\n  },\r\n  {\r\n    \"name\": \"Cyprus\",\r\n    \"Iso\": \"+357\",\r\n    \"countryCode\": \"CY\"\r\n  },\r\n  {\r\n    \"name\": \"Czech Republic\",\r\n    \"Iso\": \"+420\",\r\n    \"countryCode\": \"CZ\"\r\n  },\r\n  {\r\n    \"name\": \"Denmark\",\r\n    \"Iso\": \"+45\",\r\n    \"countryCode\": \"DK\"\r\n  },\r\n  {\r\n    \"name\": \"Djibouti\",\r\n    \"Iso\": \"+253\",\r\n    \"countryCode\": \"DJ\"\r\n  },\r\n  {\r\n    \"name\": \"Dominica\",\r\n    \"Iso\": \"+1767\",\r\n    \"countryCode\": \"DM\"\r\n  },\r\n  {\r\n    \"name\": \"Dominican Republic\",\r\n    \"Iso\": \"+1849\",\r\n    \"countryCode\": \"DO\"\r\n  },\r\n  {\r\n    \"name\": \"Ecuador\",\r\n    \"Iso\": \"+593\",\r\n    \"countryCode\": \"EC\"\r\n  },\r\n  {\r\n    \"name\": \"Egypt\",\r\n    \"Iso\": \"+20\",\r\n    \"countryCode\": \"EG\"\r\n  },\r\n  {\r\n    \"name\": \"El Salvador\",\r\n    \"Iso\": \"+503\",\r\n    \"countryCode\": \"SV\"\r\n  },\r\n  {\r\n    \"name\": \"Equatorial Guinea\",\r\n    \"Iso\": \"+240\",\r\n    \"countryCode\": \"GQ\"\r\n  },\r\n  {\r\n    \"name\": \"Eritrea\",\r\n    \"Iso\": \"+291\",\r\n    \"countryCode\": \"ER\"\r\n  },\r\n  {\r\n    \"name\": \"Estonia\",\r\n    \"Iso\": \"+372\",\r\n    \"countryCode\": \"EE\"\r\n  },\r\n  {\r\n    \"name\": \"Ethiopia\",\r\n    \"Iso\": \"+251\",\r\n    \"countryCode\": \"ET\"\r\n  },\r\n  {\r\n    \"name\": \"Falkland Islands (Malvinas)\",\r\n    \"Iso\": \"+500\",\r\n    \"countryCode\": \"FK\"\r\n  },\r\n  {\r\n    \"name\": \"Faroe Islands\",\r\n    \"Iso\": \"+298\",\r\n    \"countryCode\": \"FO\"\r\n  },\r\n  {\r\n    \"name\": \"Fiji\",\r\n    \"Iso\": \"+679\",\r\n    \"countryCode\": \"FJ\"\r\n  },\r\n  {\r\n    \"name\": \"Finland\",\r\n    \"Iso\": \"+358\",\r\n    \"countryCode\": \"FI\"\r\n  },\r\n  {\r\n    \"name\": \"France\",\r\n    \"Iso\": \"+33\",\r\n    \"countryCode\": \"FR\"\r\n  },\r\n  {\r\n    \"name\": \"French Guiana\",\r\n    \"Iso\": \"+594\",\r\n    \"countryCode\": \"GF\"\r\n  },\r\n  {\r\n    \"name\": \"French Polynesia\",\r\n    \"Iso\": \"+689\",\r\n    \"countryCode\": \"PF\"\r\n  },\r\n  {\r\n    \"name\": \"French Southern Territories\",\r\n    \"Iso\": \"+262\",\r\n    \"countryCode\": \"TF\"\r\n  },\r\n  {\r\n    \"name\": \"Gabon\",\r\n    \"Iso\": \"+241\",\r\n    \"countryCode\": \"GA\"\r\n  },\r\n  {\r\n    \"name\": \"Gambia\",\r\n    \"Iso\": \"+220\",\r\n    \"countryCode\": \"GM\"\r\n  },\r\n  {\r\n    \"name\": \"Georgia\",\r\n    \"Iso\": \"+995\",\r\n    \"countryCode\": \"GE\"\r\n  },\r\n  {\r\n    \"name\": \"Germany\",\r\n    \"Iso\": \"+49\",\r\n    \"countryCode\": \"DE\"\r\n  },\r\n  {\r\n    \"name\": \"Ghana\",\r\n    \"Iso\": \"+233\",\r\n    \"countryCode\": \"GH\"\r\n  },\r\n  {\r\n    \"name\": \"Gibraltar\",\r\n    \"Iso\": \"+350\",\r\n    \"countryCode\": \"GI\"\r\n  },\r\n  {\r\n    \"name\": \"Greece\",\r\n    \"Iso\": \"+30\",\r\n    \"countryCode\": \"GR\"\r\n  },\r\n  {\r\n    \"name\": \"Greenland\",\r\n    \"Iso\": \"+299\",\r\n    \"countryCode\": \"GL\"\r\n  },\r\n  {\r\n    \"name\": \"Grenada\",\r\n    \"Iso\": \"+1473\",\r\n    \"countryCode\": \"GD\"\r\n  },\r\n  {\r\n    \"name\": \"Guadeloupe\",\r\n    \"Iso\": \"+590\",\r\n    \"countryCode\": \"GP\"\r\n  },\r\n  {\r\n    \"name\": \"Guam\",\r\n    \"Iso\": \"+1671\",\r\n    \"countryCode\": \"GU\"\r\n  },\r\n  {\r\n    \"name\": \"Guatemala\",\r\n    \"Iso\": \"+502\",\r\n    \"countryCode\": \"GT\"\r\n  },\r\n  {\r\n    \"name\": \"Guernsey\",\r\n    \"Iso\": \"+44\",\r\n    \"countryCode\": \"GG\"\r\n  },\r\n  {\r\n    \"name\": \"Guinea\",\r\n    \"Iso\": \"+224\",\r\n    \"countryCode\": \"GN\"\r\n  },\r\n  {\r\n    \"name\": \"Guinea-Bissau\",\r\n    \"Iso\": \"+245\",\r\n    \"countryCode\": \"GW\"\r\n  },\r\n  {\r\n    \"name\": \"Guyana\",\r\n    \"Iso\": \"+592\",\r\n    \"countryCode\": \"GY\"\r\n  },\r\n  {\r\n    \"name\": \"Haiti\",\r\n    \"Iso\": \"+509\",\r\n    \"countryCode\": \"HT\"\r\n  },\r\n  {\r\n    \"name\": \"Heard Island and Mcdonald Islands\",\r\n    \"Iso\": \"+0\",\r\n    \"countryCode\": \"HM\"\r\n  },\r\n  {\r\n    \"name\": \"Holy See (Vatican City State)\",\r\n    \"Iso\": \"+379\",\r\n    \"countryCode\": \"VA\"\r\n  },\r\n  {\r\n    \"name\": \"Honduras\",\r\n    \"Iso\": \"+504\",\r\n    \"countryCode\": \"HN\"\r\n  },\r\n  {\r\n    \"name\": \"Hong Kong\",\r\n    \"Iso\": \"+852\",\r\n    \"countryCode\": \"HK\"\r\n  },\r\n  {\r\n    \"name\": \"Hungary\",\r\n    \"Iso\": \"+36\",\r\n    \"countryCode\": \"HU\"\r\n  },\r\n  {\r\n    \"name\": \"Iceland\",\r\n    \"Iso\": \"+354\",\r\n    \"countryCode\": \"IS\"\r\n  },\r\n  {\r\n    \"name\": \"India\",\r\n    \"Iso\": \"+91\",\r\n    \"countryCode\": \"IN\",\r\n    \"default\" : true\r\n  },\r\n  {\r\n    \"name\": \"Indonesia\",\r\n    \"Iso\": \"+62\",\r\n    \"countryCode\": \"ID\"\r\n  },\r\n  {\r\n    \"name\": \"Iran, Islamic Republic of Persian Gulf\",\r\n    \"Iso\": \"+98\",\r\n    \"countryCode\": \"IR\"\r\n  },\r\n  {\r\n    \"name\": \"Iraq\",\r\n    \"Iso\": \"+964\",\r\n    \"countryCode\": \"IQ\"\r\n  },\r\n  {\r\n    \"name\": \"Ireland\",\r\n    \"Iso\": \"+353\",\r\n    \"countryCode\": \"IE\"\r\n  },\r\n  {\r\n    \"name\": \"Isle of Man\",\r\n    \"Iso\": \"+44\",\r\n    \"countryCode\": \"IM\"\r\n  },\r\n  {\r\n    \"name\": \"Israel\",\r\n    \"Iso\": \"+972\",\r\n    \"countryCode\": \"IL\"\r\n  },\r\n  {\r\n    \"name\": \"Italy\",\r\n    \"Iso\": \"+39\",\r\n    \"countryCode\": \"IT\"\r\n  },\r\n  {\r\n    \"name\": \"Jamaica\",\r\n    \"Iso\": \"+1876\",\r\n    \"countryCode\": \"JM\"\r\n  },\r\n  {\r\n    \"name\": \"Japan\",\r\n    \"Iso\": \"+81\",\r\n    \"countryCode\": \"JP\"\r\n  },\r\n  {\r\n    \"name\": \"Jersey\",\r\n    \"Iso\": \"+44\",\r\n    \"countryCode\": \"JE\"\r\n  },\r\n  {\r\n    \"name\": \"Jordan\",\r\n    \"Iso\": \"+962\",\r\n    \"countryCode\": \"JO\"\r\n  },\r\n  {\r\n    \"name\": \"Kazakhstan\",\r\n    \"Iso\": \"+7\",\r\n    \"countryCode\": \"KZ\"\r\n  },\r\n  {\r\n    \"name\": \"Kenya\",\r\n    \"Iso\": \"+254\",\r\n    \"countryCode\": \"KE\"\r\n  },\r\n  {\r\n    \"name\": \"Kiribati\",\r\n    \"Iso\": \"+686\",\r\n    \"countryCode\": \"KI\"\r\n  },\r\n  {\r\n    \"name\": \"Korea, Democratic People's Republic of Korea\",\r\n    \"Iso\": \"+850\",\r\n    \"countryCode\": \"KP\"\r\n  },\r\n  {\r\n    \"name\": \"Korea, Republic of South Korea\",\r\n    \"Iso\": \"+82\",\r\n    \"countryCode\": \"KR\"\r\n  },\r\n  {\r\n    \"name\": \"Kosovo\",\r\n    \"Iso\": \"+383\",\r\n    \"countryCode\": \"XK\"\r\n  },\r\n  {\r\n    \"name\": \"Kuwait\",\r\n    \"Iso\": \"+965\",\r\n    \"countryCode\": \"KW\"\r\n  },\r\n  {\r\n    \"name\": \"Kyrgyzstan\",\r\n    \"Iso\": \"+996\",\r\n    \"countryCode\": \"KG\"\r\n  },\r\n  {\r\n    \"name\": \"Laos\",\r\n    \"Iso\": \"+856\",\r\n    \"countryCode\": \"LA\"\r\n  },\r\n  {\r\n    \"name\": \"Latvia\",\r\n    \"Iso\": \"+371\",\r\n    \"countryCode\": \"LV\"\r\n  },\r\n  {\r\n    \"name\": \"Lebanon\",\r\n    \"Iso\": \"+961\",\r\n    \"countryCode\": \"LB\"\r\n  },\r\n  {\r\n    \"name\": \"Lesotho\",\r\n    \"Iso\": \"+266\",\r\n    \"countryCode\": \"LS\"\r\n  },\r\n  {\r\n    \"name\": \"Liberia\",\r\n    \"Iso\": \"+231\",\r\n    \"countryCode\": \"LR\"\r\n  },\r\n  {\r\n    \"name\": \"Libyan Arab Jamahiriya\",\r\n    \"Iso\": \"+218\",\r\n    \"countryCode\": \"LY\"\r\n  },\r\n  {\r\n    \"name\": \"Liechtenstein\",\r\n    \"Iso\": \"+423\",\r\n    \"countryCode\": \"LI\"\r\n  },\r\n  {\r\n    \"name\": \"Lithuania\",\r\n    \"Iso\": \"+370\",\r\n    \"countryCode\": \"LT\"\r\n  },\r\n  {\r\n    \"name\": \"Luxembourg\",\r\n    \"Iso\": \"+352\",\r\n    \"countryCode\": \"LU\"\r\n  },\r\n  {\r\n    \"name\": \"Macao\",\r\n    \"Iso\": \"+853\",\r\n    \"countryCode\": \"MO\"\r\n  },\r\n  {\r\n    \"name\": \"Macedonia\",\r\n    \"Iso\": \"+389\",\r\n    \"countryCode\": \"MK\"\r\n  },\r\n  {\r\n    \"name\": \"Madagascar\",\r\n    \"Iso\": \"+261\",\r\n    \"countryCode\": \"MG\"\r\n  },\r\n  {\r\n    \"name\": \"Malawi\",\r\n    \"Iso\": \"+265\",\r\n    \"countryCode\": \"MW\"\r\n  },\r\n  {\r\n    \"name\": \"Malaysia\",\r\n    \"Iso\": \"+60\",\r\n    \"countryCode\": \"MY\"\r\n  },\r\n  {\r\n    \"name\": \"Maldives\",\r\n    \"Iso\": \"+960\",\r\n    \"countryCode\": \"MV\"\r\n  },\r\n  {\r\n    \"name\": \"Mali\",\r\n    \"Iso\": \"+223\",\r\n    \"countryCode\": \"ML\"\r\n  },\r\n  {\r\n    \"name\": \"Malta\",\r\n    \"Iso\": \"+356\",\r\n    \"countryCode\": \"MT\"\r\n  },\r\n  {\r\n    \"name\": \"Marshall Islands\",\r\n    \"Iso\": \"+692\",\r\n    \"countryCode\": \"MH\"\r\n  },\r\n  {\r\n    \"name\": \"Martinique\",\r\n    \"Iso\": \"+596\",\r\n    \"countryCode\": \"MQ\"\r\n  },\r\n  {\r\n    \"name\": \"Mauritania\",\r\n    \"Iso\": \"+222\",\r\n    \"countryCode\": \"MR\"\r\n  },\r\n  {\r\n    \"name\": \"Mauritius\",\r\n    \"Iso\": \"+230\",\r\n    \"countryCode\": \"MU\"\r\n  },\r\n  {\r\n    \"name\": \"Mayotte\",\r\n    \"Iso\": \"+262\",\r\n    \"countryCode\": \"YT\"\r\n  },\r\n  {\r\n    \"name\": \"Mexico\",\r\n    \"Iso\": \"+52\",\r\n    \"countryCode\": \"MX\"\r\n  },\r\n  {\r\n    \"name\": \"Micronesia, Federated States of Micronesia\",\r\n    \"Iso\": \"+691\",\r\n    \"countryCode\": \"FM\"\r\n  },\r\n  {\r\n    \"name\": \"Moldova\",\r\n    \"Iso\": \"+373\",\r\n    \"countryCode\": \"MD\"\r\n  },\r\n  {\r\n    \"name\": \"Monaco\",\r\n    \"Iso\": \"+377\",\r\n    \"countryCode\": \"MC\"\r\n  },\r\n  {\r\n    \"name\": \"Mongolia\",\r\n    \"Iso\": \"+976\",\r\n    \"countryCode\": \"MN\"\r\n  },\r\n  {\r\n    \"name\": \"Montenegro\",\r\n    \"Iso\": \"+382\",\r\n    \"countryCode\": \"ME\"\r\n  },\r\n  {\r\n    \"name\": \"Montserrat\",\r\n    \"Iso\": \"+1664\",\r\n    \"countryCode\": \"MS\"\r\n  },\r\n  {\r\n    \"name\": \"Morocco\",\r\n    \"Iso\": \"+212\",\r\n    \"countryCode\": \"MA\"\r\n  },\r\n  {\r\n    \"name\": \"Mozambique\",\r\n    \"Iso\": \"+258\",\r\n    \"countryCode\": \"MZ\"\r\n  },\r\n  {\r\n    \"name\": \"Myanmar\",\r\n    \"Iso\": \"+95\",\r\n    \"countryCode\": \"MM\"\r\n  },\r\n  {\r\n    \"name\": \"Namibia\",\r\n    \"Iso\": \"+264\",\r\n    \"countryCode\": \"NA\"\r\n  },\r\n  {\r\n    \"name\": \"Nauru\",\r\n    \"Iso\": \"+674\",\r\n    \"countryCode\": \"NR\"\r\n  },\r\n  {\r\n    \"name\": \"Nepal\",\r\n    \"Iso\": \"+977\",\r\n    \"countryCode\": \"NP\"\r\n  },\r\n  {\r\n    \"name\": \"Netherlands\",\r\n    \"Iso\": \"+31\",\r\n    \"countryCode\": \"NL\"\r\n  },\r\n  {\r\n    \"name\": \"Netherlands Antilles\",\r\n    \"Iso\": \"+599\",\r\n    \"countryCode\": \"AN\"\r\n  },\r\n  {\r\n    \"name\": \"New Caledonia\",\r\n    \"Iso\": \"+687\",\r\n    \"countryCode\": \"NC\"\r\n  },\r\n  {\r\n    \"name\": \"New Zealand\",\r\n    \"Iso\": \"+64\",\r\n    \"countryCode\": \"NZ\"\r\n  },\r\n  {\r\n    \"name\": \"Nicaragua\",\r\n    \"Iso\": \"+505\",\r\n    \"countryCode\": \"NI\"\r\n  },\r\n  {\r\n    \"name\": \"Niger\",\r\n    \"Iso\": \"+227\",\r\n    \"countryCode\": \"NE\"\r\n  },\r\n  {\r\n    \"name\": \"Nigeria\",\r\n    \"Iso\": \"+234\",\r\n    \"countryCode\": \"NG\"\r\n  },\r\n  {\r\n    \"name\": \"Niue\",\r\n    \"Iso\": \"+683\",\r\n    \"countryCode\": \"NU\"\r\n  },\r\n  {\r\n    \"name\": \"Norfolk Island\",\r\n    \"Iso\": \"+672\",\r\n    \"countryCode\": \"NF\"\r\n  },\r\n  {\r\n    \"name\": \"Northern Mariana Islands\",\r\n    \"Iso\": \"+1670\",\r\n    \"countryCode\": \"MP\"\r\n  },\r\n  {\r\n    \"name\": \"Norway\",\r\n    \"Iso\": \"+47\",\r\n    \"countryCode\": \"NO\"\r\n  },\r\n  {\r\n    \"name\": \"Oman\",\r\n    \"Iso\": \"+968\",\r\n    \"countryCode\": \"OM\"\r\n  },\r\n  {\r\n    \"name\": \"Pakistan\",\r\n    \"Iso\": \"+92\",\r\n    \"countryCode\": \"PK\"\r\n  },\r\n  {\r\n    \"name\": \"Palau\",\r\n    \"Iso\": \"+680\",\r\n    \"countryCode\": \"PW\"\r\n  },\r\n  {\r\n    \"name\": \"Palestinian Territory, Occupied\",\r\n    \"Iso\": \"+970\",\r\n    \"countryCode\": \"PS\"\r\n  },\r\n  {\r\n    \"name\": \"Panama\",\r\n    \"Iso\": \"+507\",\r\n    \"countryCode\": \"PA\"\r\n  },\r\n  {\r\n    \"name\": \"Papua New Guinea\",\r\n    \"Iso\": \"+675\",\r\n    \"countryCode\": \"PG\"\r\n  },\r\n  {\r\n    \"name\": \"Paraguay\",\r\n    \"Iso\": \"+595\",\r\n    \"countryCode\": \"PY\"\r\n  },\r\n  {\r\n    \"name\": \"Peru\",\r\n    \"Iso\": \"+51\",\r\n    \"countryCode\": \"PE\"\r\n  },\r\n  {\r\n    \"name\": \"Philippines\",\r\n    \"Iso\": \"+63\",\r\n    \"countryCode\": \"PH\"\r\n  },\r\n  {\r\n    \"name\": \"Pitcairn\",\r\n    \"Iso\": \"+64\",\r\n    \"countryCode\": \"PN\"\r\n  },\r\n  {\r\n    \"name\": \"Poland\",\r\n    \"Iso\": \"+48\",\r\n    \"countryCode\": \"PL\"\r\n  },\r\n  {\r\n    \"name\": \"Portugal\",\r\n    \"Iso\": \"+351\",\r\n    \"countryCode\": \"PT\"\r\n  },\r\n  {\r\n    \"name\": \"Puerto Rico\",\r\n    \"Iso\": \"+1939\",\r\n    \"countryCode\": \"PR\"\r\n  },\r\n  {\r\n    \"name\": \"Qatar\",\r\n    \"Iso\": \"+974\",\r\n    \"countryCode\": \"QA\"\r\n  },\r\n  {\r\n    \"name\": \"Romania\",\r\n    \"Iso\": \"+40\",\r\n    \"countryCode\": \"RO\"\r\n  },\r\n  {\r\n    \"name\": \"Russia\",\r\n    \"Iso\": \"+7\",\r\n    \"countryCode\": \"RU\"\r\n  },\r\n  {\r\n    \"name\": \"Rwanda\",\r\n    \"Iso\": \"+250\",\r\n    \"countryCode\": \"RW\"\r\n  },\r\n  {\r\n    \"name\": \"Reunion\",\r\n    \"Iso\": \"+262\",\r\n    \"countryCode\": \"RE\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Barthelemy\",\r\n    \"Iso\": \"+590\",\r\n    \"countryCode\": \"BL\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Helena, Ascension and Tristan Da Cunha\",\r\n    \"Iso\": \"+290\",\r\n    \"countryCode\": \"SH\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Kitts and Nevis\",\r\n    \"Iso\": \"+1869\",\r\n    \"countryCode\": \"KN\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Lucia\",\r\n    \"Iso\": \"+1758\",\r\n    \"countryCode\": \"LC\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Martin\",\r\n    \"Iso\": \"+590\",\r\n    \"countryCode\": \"MF\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Pierre and Miquelon\",\r\n    \"Iso\": \"+508\",\r\n    \"countryCode\": \"PM\"\r\n  },\r\n  {\r\n    \"name\": \"Saint Vincent and the Grenadines\",\r\n    \"Iso\": \"+1784\",\r\n    \"countryCode\": \"VC\"\r\n  },\r\n  {\r\n    \"name\": \"Samoa\",\r\n    \"Iso\": \"+685\",\r\n    \"countryCode\": \"WS\"\r\n  },\r\n  {\r\n    \"name\": \"San Marino\",\r\n    \"Iso\": \"+378\",\r\n    \"countryCode\": \"SM\"\r\n  },\r\n  {\r\n    \"name\": \"Sao Tome and Principe\",\r\n    \"Iso\": \"+239\",\r\n    \"countryCode\": \"ST\"\r\n  },\r\n  {\r\n    \"name\": \"Saudi Arabia\",\r\n    \"Iso\": \"+966\",\r\n    \"countryCode\": \"SA\"\r\n  },\r\n  {\r\n    \"name\": \"Senegal\",\r\n    \"Iso\": \"+221\",\r\n    \"countryCode\": \"SN\"\r\n  },\r\n  {\r\n    \"name\": \"Serbia\",\r\n    \"Iso\": \"+381\",\r\n    \"countryCode\": \"RS\"\r\n  },\r\n  {\r\n    \"name\": \"Seychelles\",\r\n    \"Iso\": \"+248\",\r\n    \"countryCode\": \"SC\"\r\n  },\r\n  {\r\n    \"name\": \"Sierra Leone\",\r\n    \"Iso\": \"+232\",\r\n    \"countryCode\": \"SL\"\r\n  },\r\n  {\r\n    \"name\": \"Singapore\",\r\n    \"Iso\": \"+65\",\r\n    \"countryCode\": \"SG\"\r\n  },\r\n  {\r\n    \"name\": \"Slovakia\",\r\n    \"Iso\": \"+421\",\r\n    \"countryCode\": \"SK\"\r\n  },\r\n  {\r\n    \"name\": \"Slovenia\",\r\n    \"Iso\": \"+386\",\r\n    \"countryCode\": \"SI\"\r\n  },\r\n  {\r\n    \"name\": \"Solomon Islands\",\r\n    \"Iso\": \"+677\",\r\n    \"countryCode\": \"SB\"\r\n  },\r\n  {\r\n    \"name\": \"Somalia\",\r\n    \"Iso\": \"+252\",\r\n    \"countryCode\": \"SO\"\r\n  },\r\n  {\r\n    \"name\": \"South Africa\",\r\n    \"Iso\": \"+27\",\r\n    \"countryCode\": \"ZA\"\r\n  },\r\n  {\r\n    \"name\": \"South Sudan\",\r\n    \"Iso\": \"+211\",\r\n    \"countryCode\": \"SS\"\r\n  },\r\n  {\r\n    \"name\": \"South Georgia and the South Sandwich Islands\",\r\n    \"Iso\": \"+500\",\r\n    \"countryCode\": \"GS\"\r\n  },\r\n  {\r\n    \"name\": \"Spain\",\r\n    \"Iso\": \"+34\",\r\n    \"countryCode\": \"ES\"\r\n  },\r\n  {\r\n    \"name\": \"Sri Lanka\",\r\n    \"Iso\": \"+94\",\r\n    \"countryCode\": \"LK\"\r\n  },\r\n  {\r\n    \"name\": \"Sudan\",\r\n    \"Iso\": \"+249\",\r\n    \"countryCode\": \"SD\"\r\n  },\r\n  {\r\n    \"name\": \"Suriname\",\r\n    \"Iso\": \"+597\",\r\n    \"countryCode\": \"SR\"\r\n  },\r\n  {\r\n    \"name\": \"Svalbard and Jan Mayen\",\r\n    \"Iso\": \"+47\",\r\n    \"countryCode\": \"SJ\"\r\n  },\r\n  {\r\n    \"name\": \"Swaziland\",\r\n    \"Iso\": \"+268\",\r\n    \"countryCode\": \"SZ\"\r\n  },\r\n  {\r\n    \"name\": \"Sweden\",\r\n    \"Iso\": \"+46\",\r\n    \"countryCode\": \"SE\"\r\n  },\r\n  {\r\n    \"name\": \"Switzerland\",\r\n    \"Iso\": \"+41\",\r\n    \"countryCode\": \"CH\"\r\n  },\r\n  {\r\n    \"name\": \"Syrian Arab Republic\",\r\n    \"Iso\": \"+963\",\r\n    \"countryCode\": \"SY\"\r\n  },\r\n  {\r\n    \"name\": \"Taiwan\",\r\n    \"Iso\": \"+886\",\r\n    \"countryCode\": \"TW\"\r\n  },\r\n  {\r\n    \"name\": \"Tajikistan\",\r\n    \"Iso\": \"+992\",\r\n    \"countryCode\": \"TJ\"\r\n  },\r\n  {\r\n    \"name\": \"Tanzania, United Republic of Tanzania\",\r\n    \"Iso\": \"+255\",\r\n    \"countryCode\": \"TZ\"\r\n  },\r\n  {\r\n    \"name\": \"Thailand\",\r\n    \"Iso\": \"+66\",\r\n    \"countryCode\": \"TH\"\r\n  },\r\n  {\r\n    \"name\": \"Timor-Leste\",\r\n    \"Iso\": \"+670\",\r\n    \"countryCode\": \"TL\"\r\n  },\r\n  {\r\n    \"name\": \"Togo\",\r\n    \"Iso\": \"+228\",\r\n    \"countryCode\": \"TG\"\r\n  },\r\n  {\r\n    \"name\": \"Tokelau\",\r\n    \"Iso\": \"+690\",\r\n    \"countryCode\": \"TK\"\r\n  },\r\n  {\r\n    \"name\": \"Tonga\",\r\n    \"Iso\": \"+676\",\r\n    \"countryCode\": \"TO\"\r\n  },\r\n  {\r\n    \"name\": \"Trinidad and Tobago\",\r\n    \"Iso\": \"+1868\",\r\n    \"countryCode\": \"TT\"\r\n  },\r\n  {\r\n    \"name\": \"Tunisia\",\r\n    \"Iso\": \"+216\",\r\n    \"countryCode\": \"TN\"\r\n  },\r\n  {\r\n    \"name\": \"Turkey\",\r\n    \"Iso\": \"+90\",\r\n    \"countryCode\": \"TR\"\r\n  },\r\n  {\r\n    \"name\": \"Turkmenistan\",\r\n    \"Iso\": \"+993\",\r\n    \"countryCode\": \"TM\"\r\n  },\r\n  {\r\n    \"name\": \"Turks and Caicos Islands\",\r\n    \"Iso\": \"+1649\",\r\n    \"countryCode\": \"TC\"\r\n  },\r\n  {\r\n    \"name\": \"Tuvalu\",\r\n    \"Iso\": \"+688\",\r\n    \"countryCode\": \"TV\"\r\n  },\r\n  {\r\n    \"name\": \"Uganda\",\r\n    \"Iso\": \"+256\",\r\n    \"countryCode\": \"UG\"\r\n  },\r\n  {\r\n    \"name\": \"Ukraine\",\r\n    \"Iso\": \"+380\",\r\n    \"countryCode\": \"UA\"\r\n  },\r\n  {\r\n    \"name\": \"United Arab Emirates\",\r\n    \"Iso\": \"+971\",\r\n    \"countryCode\": \"AE\"\r\n  },\r\n  {\r\n    \"name\": \"United Kingdom\",\r\n    \"Iso\": \"+44\",\r\n    \"countryCode\": \"GB\"\r\n  },\r\n  {\r\n    \"name\": \"United States\",\r\n    \"Iso\": \"+1\",\r\n    \"countryCode\": \"US\"\r\n  },\r\n  {\r\n    \"name\": \"Uruguay\",\r\n    \"Iso\": \"+598\",\r\n    \"countryCode\": \"UY\"\r\n  },\r\n  {\r\n    \"name\": \"Uzbekistan\",\r\n    \"Iso\": \"+998\",\r\n    \"countryCode\": \"UZ\"\r\n  },\r\n  {\r\n    \"name\": \"Vanuatu\",\r\n    \"Iso\": \"+678\",\r\n    \"countryCode\": \"VU\"\r\n  },\r\n  {\r\n    \"name\": \"Venezuela, Bolivarian Republic of Venezuela\",\r\n    \"Iso\": \"+58\",\r\n    \"countryCode\": \"VE\"\r\n  },\r\n  {\r\n    \"name\": \"Vietnam\",\r\n    \"Iso\": \"+84\",\r\n    \"countryCode\": \"VN\"\r\n  },\r\n  {\r\n    \"name\": \"Virgin Islands, British\",\r\n    \"Iso\": \"+1284\",\r\n    \"countryCode\": \"VG\"\r\n  },\r\n  {\r\n    \"name\": \"Virgin Islands, U.S.\",\r\n    \"Iso\": \"+1340\",\r\n    \"countryCode\": \"VI\"\r\n  },\r\n  {\r\n    \"name\": \"Wallis and Futuna\",\r\n    \"Iso\": \"+681\",\r\n    \"countryCode\": \"WF\"\r\n  },\r\n  {\r\n    \"name\": \"Yemen\",\r\n    \"Iso\": \"+967\",\r\n    \"countryCode\": \"YE\"\r\n  },\r\n  {\r\n    \"name\": \"Zambia\",\r\n    \"Iso\": \"+260\",\r\n    \"countryCode\": \"ZM\"\r\n  },\r\n  {\r\n    \"name\": \"Zimbabwe\",\r\n    \"Iso\": \"+263\",\r\n    \"countryCode\": \"ZW\"\r\n  }\r\n]\r\n\r\nexport {\r\n  CountryCodes\r\n}","enum SubProducts {\r\n  ORDERS= 1,\r\n  COLOUR= 2,\r\n  SIZE = 3,\r\n  SUB_PRODUCT = 4,\r\n  PRODUCT = 5,\r\n  COUPONS = 6,\r\n  USERS = 7,\r\n  SHIPPER = 8 \r\n}\r\n\r\nconst SubCategories: Record<string, number> = {\r\n  'Lingerie': 1,\r\n  'Footwear': 2,\r\n  'Bindi': 3,\r\n  'Home Essential': 4\r\n}\r\n\r\n/**\r\n * Allow return for \r\n * Footwear and HomeDecore\r\n */\r\nconst AllowReturn = ['2','3'];\r\n\r\nexport {\r\n  SubProducts,\r\n  SubCategories,\r\n  AllowReturn\r\n}","import { Action, Dispatch } from 'redux';\r\n\r\nimport { User } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n/* Interface */\r\nexport interface UserInformationAction extends Action {\r\n  readonly data?: User;\r\n  readonly allUsers?: User[];\r\n  readonly message?: string;\r\n};\r\n\r\n\r\nexport interface UserInformation {\r\n  readonly data?: User;\r\n  readonly allUsers?: User[];\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n};\r\n\r\n\r\n/* Initial State */\r\nconst initialState  = {\r\n  data: {\r\n    isAdmin: false,\r\n  },\r\n  allUsers :[],\r\n  _isError: false,\r\n  _isLoading: false,\r\n  _isSuccess: false,\r\n  message: ''\r\n} as UserInformation;\r\n\r\n\r\n/* Actions*/\r\n\r\nenum Actions {\r\n  SET_USER = \"SET_USER\",\r\n  LOADING_USER = \"LOADING_USER\",\r\n  ERROR_USER = \"ERROR_USER\",\r\n  SET_ALL_USER = 'SET_ALL_USER',\r\n  UPDATE_USER_DISCOUNT = 'UPDATE_USER_DISCOUNT',\r\n  DEFAULT_USER = 'DEFAULT_USER'\r\n}\r\n\r\nconst setUser = (user: User,message?: string) => ({\r\n  type: Actions.SET_USER,\r\n  data: user,\r\n  message\r\n});\r\n\r\nconst setAllUser = (user: User[]) => ({\r\n  type: Actions.SET_ALL_USER,\r\n  allUsers: user\r\n});\r\n\r\nconst loadingUser = () => ({\r\n  type: Actions.LOADING_USER\r\n});\r\n\r\nconst defaultUser = () => ({\r\n  type: Actions.DEFAULT_USER\r\n});\r\n\r\nconst errorUser = (message: string) => ({\r\n  type: Actions.ERROR_USER,\r\n  message\r\n});\r\n\r\nconst updateDiscount = (emailAddress:string, discount: string, message: string) => ({\r\n  type: Actions.UPDATE_USER_DISCOUNT,\r\n  data: {emailAddress, discount},\r\n  message\r\n});\r\n\r\n\r\n/* Reducer */\r\n\r\nconst userInformationReducer = (state = initialState, action: UserInformationAction): UserInformation => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_USER:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      };\r\n    case Actions.SET_USER:\r\n      return {\r\n        ...state,\r\n        data : action.data,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: true,\r\n        message: action.message\r\n      };\r\n    case Actions.DEFAULT_USER:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      };\r\n    case Actions.SET_ALL_USER:\r\n      return {\r\n        ...state,\r\n        allUsers : action.allUsers,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: true,\r\n        message: action.message\r\n      };\r\n    case Actions.UPDATE_USER_DISCOUNT:\r\n      return {\r\n        ...state,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: true,\r\n        message: action.message,\r\n        allUsers : state.allUsers?.map((user) => {\r\n          if(user.emailAddress?.toLowerCase() === action.data?.emailAddress){\r\n            return {...user, discount:action.data?.discount}\r\n          }\r\n          return user\r\n        }),\r\n      };\r\n    case Actions.ERROR_USER:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        message: action.message\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/* Thunk */\r\n\r\nconst getUser = () =>  async (disptach: Dispatch<UserInformationAction>) => {\r\n  disptach(loadingUser());\r\n  \r\n  const response =  await api.get('/userinfo');\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(setUser(response.data.data as User));\r\n  } else {\r\n    disptach(errorUser('Some error occured, try again.'));\r\n  }\r\n};\r\n\r\nconst saveUser = (data: User) =>  async (disptach: Dispatch<UserInformationAction>) => {\r\n  disptach(loadingUser());\r\n  \r\n  const response =  await api.post('/userinfo', data);\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data.data as User;\r\n    disptach(setUser({\r\n      ...data,\r\n      addressId : res\r\n    } as User, response.data.message));\r\n  } else {\r\n    disptach(errorUser('Some error occured, try again.'));\r\n  }\r\n};\r\n\r\nconst getAllUser = () =>  async (disptach: Dispatch<UserInformationAction>) => {\r\n  disptach(loadingUser());\r\n  \r\n  const response =  await api.get('/alluserinformation');\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(setAllUser(response.data.data as User[]));\r\n  } else {\r\n    disptach(errorUser('Some error occured, try again.'));\r\n  }\r\n};\r\n\r\nconst updateUserDiscount = (discount: string, email: string) =>  async (disptach: Dispatch<UserInformationAction>) => {\r\n  disptach(loadingUser());\r\n  \r\n  const response =  await api.post('/userdiscount', {\r\n    email,\r\n    discount\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(updateDiscount(email,discount, 'Discount Updated'));\r\n  } else {\r\n    disptach(errorUser('Some error occured, try again.'));\r\n  }\r\n};\r\n\r\nexport {\r\n  userInformationReducer,\r\n  getUser,\r\n  saveUser,\r\n  getAllUser,\r\n  setUser,\r\n  updateUserDiscount,\r\n  defaultUser\r\n};\r\n","const apiServerHost = 'https://api.basickart.com/';\r\n\r\nconst serverImagePath = apiServerHost + 'images/'\r\n\r\nexport {\r\n  apiServerHost,\r\n  serverImagePath\r\n}","import axios from 'axios';\r\n\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://basickart.com/v1',\r\n  headers: {\r\n    'Accept': 'application/json;charset=UTF-8',\r\n    'Authorization': ''\r\n  }\r\n});","import{ AxiosRequestConfig } from 'axios';\r\n\r\nimport { HttpRequest } from 'appConstants';\r\nimport axios from './axiosBase';\r\n\r\nconst setAuthToken = (): void => {\r\n  axios.defaults.headers['Authorization'] = 'Bearer ' + window.localStorage.getItem('biktoken');\r\n};\r\n\r\nconst api = {\r\n  get: (url: string) => {\r\n    return makeRequest({\r\n      method: HttpRequest.GET,\r\n      url\r\n    })\r\n  },\r\n\r\n  post: (url: string, data: object) => {\r\n    return makeRequest({\r\n      method: HttpRequest.POST,\r\n      url,\r\n      data\r\n    })\r\n  }\r\n};\r\n\r\nconst makeRequest = async (config: AxiosRequestConfig) => {\r\n  try {\r\n    setAuthToken();\r\n    const response = await axios.request(config);\r\n    return response;\r\n  } catch (error) {\r\n    if(error.response.status === 401 || error.response.status === 422 || error.response.status === 404){\r\n      window.localStorage.removeItem('biktoken')\r\n      window.location.href = '/login';\r\n      return {\r\n        message: error.response.data.message || 'Auth expired',\r\n        data: {}\r\n      }\r\n    }else {\r\n      return {\r\n        message: error.response.data.message || 'Default Api error',\r\n        status: error.response.status || 400,\r\n        data: {}\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport { api, setAuthToken };","import { ProductSubCategory, ActiveProductCount, ProductSubcategoryProperty, ProductItem, OrderItems, ProductCountList, ActiveProductCountNew } from \"types\";\r\nimport { SubCategory, Size } from \"reducers\";\r\n\r\nconst getSubCategoryFromId = (id: Number) => {\r\n  switch (id) {\r\n    case 1:\r\n      return \"Lingerie\";\r\n    case 2:\r\n      return \"Footwear\";\r\n    case 3:\r\n      return \"Bindi\";\r\n    case 4:\r\n      return \"Handicraft\";\r\n  }\r\n};\r\n\r\nconst filterSubcategories = (subCategories: SubCategory, categoryId = 0) => {\r\n  return (subCategories.data &&\r\n    subCategories.data.filter((subCategory) => {\r\n      return subCategory.productCategoryId === Number(categoryId)\r\n    })) || [];\r\n};\r\n\r\nconst filterSize = (sizes: Size, categoryId: number[]) => {\r\n  return (sizes.data &&\r\n    sizes.data.filter((size) => {\r\n      return  categoryId.indexOf((size.productCategory || 0)) > -1\r\n    })) || [];\r\n};\r\n\r\nconst calculateUserDiscount = (discount: string, price: string) => {\r\n  return Math.ceil(Number(price) - (Number(price) * (Number(discount) / 100))).toString();\r\n};\r\n\r\nconst calculateUserDiscountPrice = (discount: string, price: string) => {\r\n  return Math.ceil(Number(price) * (Number(discount)) / 100).toString();\r\n};\r\n\r\nconst getCurrencyIcon = (currency: string) => {\r\n  return currency === 'IN' ? '₹' : '$'\r\n};\r\n\r\nconst showINRUSD = (userLocation: string, price : {priceINR: string, priceUSD: string}) => {\r\n  return userLocation === 'IN' ? price.priceINR : price.priceUSD;\r\n}\r\n\r\nconst sizeCheck = (sizeObj : { [key: string]: number},sizeArray: string[])=> {\r\n  let resultSize = {} as { [key: string]: number};\r\n  sizeArray.forEach((size: string)=>{\r\n    if(sizeObj[size]){\r\n      resultSize[size] = sizeObj[size] + 1\r\n    }\r\n  });\r\n  return resultSize;\r\n}\r\n\r\nconst createActiveProductCountList = (activeProducts: ActiveProductCountNew[]) => {\r\n  let resultList = {} as ProductCountList;\r\n  activeProducts.forEach((product: ActiveProductCountNew) => {\r\n    if(!resultList[product.subcategoryId]){\r\n      resultList[product.subcategoryId] = {\r\n        [product.colourId] : {\r\n          name: product.colourName,\r\n          count: 1,\r\n          size : product.sizeId.reduce((a,b)=> (a[b]=1,a),{} as {[key: string]: number})\r\n        },\r\n        name: product.subcategoryName\r\n      }\r\n    } else {\r\n      if(!resultList[product.subcategoryId][product.colourId]){\r\n        resultList[product.subcategoryId][product.colourId] ={\r\n          name: product.colourName,\r\n          count: 1,\r\n          size : product.sizeId.reduce((a,b)=> (a[b]=1,a),{} as {[key: string]: number})\r\n        }\r\n      } else {\r\n        resultList[product.subcategoryId][product.colourId].count += 1;\r\n        resultList[product.subcategoryId][product.colourId].size = \r\n          sizeCheck(resultList[product.subcategoryId][product.colourId].size,product.sizeId)\r\n      }\r\n    }\r\n  });\r\n  return resultList;\r\n}\r\n\r\nconst createProductCountList = (activeProducts: ActiveProductCount[]) => {\r\n  let productCountList = {} as ProductSubcategoryProperty;\r\n  activeProducts.forEach((product: ActiveProductCount) => {\r\n    if(!productCountList[product.subcategoryId]) {\r\n      productCountList[product.subcategoryId] = {\r\n        name: product.subcategoryName,\r\n        [product.colourId] : {\r\n          name: product.colourName,\r\n          [product.sizeId] : {\r\n            name: product.sizeName,\r\n            quantity: product.count\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      if(!productCountList[product.subcategoryId][product.colourId]) {\r\n        productCountList[product.subcategoryId][product.colourId] = {\r\n          name: product.colourName,\r\n          [product.sizeId] : {\r\n            name: product.sizeName,\r\n            quantity: product.count\r\n          }\r\n        }\r\n      } else {\r\n        productCountList[product.subcategoryId][product.colourId][product.sizeId] = {\r\n          name: product.sizeName,\r\n          quantity: product.count\r\n        }\r\n      }\r\n    }\r\n  });\r\n  console.log(productCountList)\r\n  return productCountList;\r\n};\r\n\r\nconst countHighlightProducts = (products: ProductItem[], isTrending: boolean) => {\r\n  if(isTrending){\r\n    return products.filter(({trending}) => trending).length;\r\n  } else {\r\n    return products.filter(({latest}) => latest).length;\r\n  }\r\n  \r\n};\r\n\r\nconst getIconForAdminOrder = (orderItems: OrderItems[]) => {\r\n  const orderLength = orderItems.length;\r\n  let icon = '';\r\n  for(var i = 0 ; i< orderLength; i++){\r\n    const shipmentDetails = orderItems[i].shipmentDetails;\r\n    if(shipmentDetails){\r\n      if(shipmentDetails.paymentReturned && shipmentDetails.paymentReturned.toLowerCase() === 'yes'){\r\n        icon = 'lifesaver';\r\n        break;\r\n      } else if(shipmentDetails.paymentReturned && shipmentDetails.paymentReturned.toLowerCase() === 'no'){\r\n        icon = 'warning';\r\n        break;\r\n      } else if(shipmentDetails.returnStatus && shipmentDetails.returnStatus.toLowerCase() === 'in progress'){\r\n        icon = 'history';\r\n        break;\r\n      } else if(shipmentDetails.returnStatus && shipmentDetails.returnStatus.toLowerCase() === 'accepted'){\r\n        icon = 'plus-circle';\r\n        break;\r\n      } else if(shipmentDetails.returnStatus && shipmentDetails.returnStatus.toLowerCase() === 'declined'){\r\n        icon = 'minus-circle';\r\n        break;\r\n      } else if(shipmentDetails.shipper){\r\n        icon = 'cart';\r\n        break;\r\n      } else if(shipmentDetails.deliveryDate){\r\n        icon = 'check';\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return icon;\r\n};\r\n\r\nconst getPaypalTransactionId = (payaplResponse: any) =>{\r\n  let transactionId = '';\r\n  if(payaplResponse.paymentData){\r\n    if(payaplResponse.paymentData.purchase_units){\r\n      if(payaplResponse.paymentData.purchase_units[0]){\r\n        if(payaplResponse.paymentData.purchase_units[0].payments){\r\n          if(payaplResponse.paymentData.purchase_units[0].payments.captures){\r\n            if(payaplResponse.paymentData.purchase_units[0].payments.captures[0]){\r\n              if(payaplResponse.paymentData.purchase_units[0].payments.captures[0].id){\r\n                transactionId = payaplResponse.paymentData.purchase_units[0].payments.captures[0].id;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return transactionId;\r\n}\r\n\r\nexport {\r\n  getSubCategoryFromId,\r\n  filterSubcategories,\r\n  filterSize,\r\n  calculateUserDiscount,\r\n  getCurrencyIcon,\r\n  calculateUserDiscountPrice,\r\n  createProductCountList,\r\n  showINRUSD,\r\n  countHighlightProducts,\r\n  getIconForAdminOrder,\r\n  getPaypalTransactionId,\r\n  createActiveProductCountList\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { Login } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\ninterface UserLoginRegisterAction extends Action {\r\n  data?: string;\r\n}\r\n\r\ninterface UserLoginResponse {\r\n  message: string;\r\n  access_token?: string;\r\n};\r\n\r\nexport interface UserLoginRegister {\r\n  _isLoading: boolean;\r\n  _isError: boolean;\r\n  _isSuccess: boolean;\r\n  message?: string;\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading : false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: ''\r\n} as UserLoginRegister;\r\n\r\nenum Actions {\r\n  LOADING_LOGIN = 'LOADING_LOGIN',\r\n  ERROR_LOGIN = 'ERROR_LOGIN',\r\n  SUCCESS_LOGIN = 'SUCCESS_LOGIN',\r\n  LOADING_REGISTER = 'LOADING_REGISTER',\r\n  ERROR_REGISTER = 'ERROR_REGISTER',\r\n  SUCCESS_REGISTER = 'SUCCESS_REGISTER',\r\n  DEFAULT_STATE = 'DEFAULT_STATE'\r\n};\r\n\r\nconst loadingLogin = () => ({\r\n  type : Actions.LOADING_LOGIN\r\n});\r\n\r\nconst errorLogin = (message: string) => ({\r\n  type : Actions.ERROR_LOGIN,\r\n  data: message\r\n});\r\n\r\nconst successLogin = () => ({\r\n  type : Actions.SUCCESS_LOGIN\r\n});\r\n\r\nconst loadingRegister = () => ({\r\n  type : Actions.LOADING_REGISTER\r\n});\r\n\r\nconst errorRegister = (message: string) => ({\r\n  type : Actions.ERROR_REGISTER,\r\n  data: message\r\n});\r\n\r\nconst successRegister = (message: string) => ({\r\n  type : Actions.SUCCESS_REGISTER,\r\n  data: message\r\n});\r\n\r\nconst defaultLoginRegister = () => ({\r\n  type: Actions.DEFAULT_STATE\r\n})\r\n\r\n\r\nconst userLoginReducer = (state = initialState, action: UserLoginRegisterAction): UserLoginRegister  => {\r\n  \r\n  switch (action.type) {\r\n    case Actions.LOADING_LOGIN:\r\n    case Actions.LOADING_REGISTER:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      };\r\n    case Actions.ERROR_LOGIN:\r\n    case Actions.ERROR_REGISTER:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        message: action.data\r\n      };\r\n    case Actions.SUCCESS_LOGIN:\r\n    case Actions.SUCCESS_REGISTER:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess: true,\r\n        message: action.data\r\n      };\r\n    case Actions.DEFAULT_STATE:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nconst userLogin = (loginData: Login) =>  async (dispatch: Dispatch<Action>) => {\r\n  \r\n  dispatch(loadingLogin());\r\n  const response =  await api.post('/login', loginData);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as UserLoginResponse;\r\n    window.localStorage.setItem('biktoken', res.access_token || '');\r\n    dispatch(successLogin());\r\n  } else{\r\n    const res = response as UserLoginResponse;\r\n    dispatch(errorLogin(res.message));\r\n  }\r\n};\r\n\r\nconst userRegister = (registerationData: Login) => async (dispatch: Dispatch<Action>) => {\r\n  dispatch(loadingRegister());\r\n  const response = await api.post('/registration', registerationData);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as UserLoginResponse;\r\n    dispatch(successRegister(res.message));\r\n  } else{\r\n    const res = response as UserLoginResponse;\r\n    dispatch(errorRegister(res.message));\r\n  }\r\n}\r\n\r\nconst forgetPassword = (loginDetails: Login) => async (dispatch: Dispatch<Action>) => {\r\n  dispatch(loadingRegister());\r\n  const response = await api.post('/forgetpassword', loginDetails);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as UserLoginResponse;\r\n    dispatch(successRegister(res.message));\r\n  } else{\r\n    const res = response as UserLoginResponse;\r\n    dispatch(errorRegister(res.message));\r\n  }\r\n}\r\n\r\n\r\nexport {\r\n  userLogin,\r\n  userLoginReducer,\r\n  loadingLogin,\r\n  loadingRegister,\r\n  errorLogin,\r\n  errorRegister,\r\n  successLogin,\r\n  successRegister,\r\n  defaultLoginRegister,\r\n  userRegister,\r\n  forgetPassword\r\n}","import {Action, Dispatch} from 'redux';\r\n\r\nimport { UserSettings } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n/* Interface*/\r\nexport interface UserSettingsAction extends Action {\r\n  readonly data?: UserSettings;\r\n  readonly message?: string;\r\n}\r\n\r\nexport interface UserSetting {\r\n  readonly data?: UserSettings;\r\n  _isLoading: boolean;\r\n  _isError: boolean;\r\n  _isSuccess: boolean;\r\n  message?: string;\r\n}\r\n\r\nconst initialState = {\r\n  data : {\r\n    emailAddress : '',\r\n  },\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n} as UserSetting\r\n\r\n/* Actions */\r\n\r\nenum Actions {\r\n  SET_USER_SETTINGS = \"SET_USER_SETTINGS\",\r\n  LOADING_USER_SETTINGS = \"LOADING_USER_SETTINGS\",\r\n  ERROR_USER_SETTINGS = \"ERROR_USER_SETTINGS\"\r\n}\r\n\r\nconst setUserSetting = (userSettings: UserSettings, message?: string) => ({\r\n  type: Actions.SET_USER_SETTINGS,\r\n  data: userSettings,\r\n  message\r\n});\r\n\r\nconst loadingUserSettings = () => ({\r\n  type: Actions.LOADING_USER_SETTINGS\r\n});\r\n\r\nconst errorUserSettings = (message?: string) => ({\r\n  type: Actions.ERROR_USER_SETTINGS,\r\n  message\r\n});\r\n\r\nconst userSettingsReducer = (state = initialState, action: UserSettingsAction) => {\r\n  switch(action.type) {\r\n    case Actions.SET_USER_SETTINGS:\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess: true,\r\n        message: action.message\r\n      };\r\n    case Actions.LOADING_USER_SETTINGS:\r\n      return{\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false,\r\n      };\r\n    case Actions.ERROR_USER_SETTINGS:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        message: action.message\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n/* Thunk */\r\n\r\nconst getUserSettings = () => async (disptach: Dispatch<UserSettingsAction>) => {\r\n  disptach(loadingUserSettings());\r\n  \r\n  const response =  await api.get('/passwordchange');\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(setUserSetting(response.data.data as UserSettings));\r\n  } else {\r\n    disptach(errorUserSettings(response.data.message|| ''));\r\n  }\r\n};\r\n\r\n\r\nconst saveUserSettings = (data: UserSettings) => async (disptach: Dispatch<UserSettingsAction>) => {\r\n  disptach(loadingUserSettings());\r\n  \r\n  const response =  await api.post('/passwordchange', data);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    disptach(setUserSetting({emailAddress : data.emailAddress, currentPassword: '', newPassword: ''} as UserSettings,response.data.message|| ''));\r\n  } else {\r\n    disptach(errorUserSettings((response as any).message|| ''));\r\n  }\r\n};\r\n\r\nexport {\r\n  userSettingsReducer,\r\n  getUserSettings,\r\n  saveUserSettings\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { ProductColor } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface ColourAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductColor[]\r\n}\r\n\r\nexport interface ColourResponse {\r\n  message?: string\r\n  data?: ProductColor[]\r\n}\r\n\r\nexport interface Colour {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductColor[];\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n  data: {}\r\n} as Colour;\r\n\r\nenum Actions {\r\n  LOADING_COLOUR = 'LOADING_COLOUR',\r\n  ERROR_COLOUR = 'ERROR_COLOUR',\r\n  SUCCESS_COLOUR = 'SUCCESS_COLOUR',\r\n  DEFAULT_COLOUR = 'DEFAULT_COLOUR',\r\n  SET_COLOUR = 'SET_COLOUR',\r\n  UPDATE_COLOUR_SUCCESS = 'UPDATE_COLOUR_SUCCESS'\r\n};\r\n\r\nconst loadingColour = () => ({\r\n  type: Actions.LOADING_COLOUR\r\n});\r\n\r\nconst successColour = (message: string) => ({\r\n  type: Actions.SUCCESS_COLOUR,\r\n  message\r\n});\r\n\r\nconst errorColour = (message: string) => ({\r\n  type: Actions.ERROR_COLOUR,\r\n  message\r\n});\r\n\r\nconst defaultColour = () => ({\r\n  type: Actions.DEFAULT_COLOUR\r\n});\r\n\r\nconst setColour = (data: ProductColor[]) => ({\r\n  type: Actions.SET_COLOUR,\r\n  data\r\n});\r\n\r\nconst updateColourSuccess = (data: ProductColor[], message: string) => ({\r\n  type: Actions.UPDATE_COLOUR_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst colourReducer = (state = initialState, action: ColourAction): Colour => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_COLOUR:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_COLOUR:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_COLOUR:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_COLOUR:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_COLOUR_SUCCESS:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.colourId != updatedValue[0].colourId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue\r\n        ]\r\n      }\r\n    case Actions.DEFAULT_COLOUR:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst saveColour = (colour: ProductColor) => async (dispatch: Dispatch<ColourAction>) => {\r\n  dispatch(loadingColour());\r\n  const response = await api.post('/productcolour',\r\n    {\r\n      product_color_code: colour.code,\r\n      product_color: colour.value,\r\n      colour_id: 0\r\n    });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ColourResponse\r\n    dispatch(successColour(res.message || ''));\r\n  } else {\r\n    const res = response as ColourResponse\r\n    dispatch(errorColour(res.message || ''));\r\n  }\r\n}\r\n\r\nconst getColour = () => async (dispatch: Dispatch<ColourAction>) => {\r\n  dispatch(loadingColour());\r\n\r\n  const response = await api.get('/productcolour');\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as ColourResponse;\r\n    dispatch(setColour(res.data || []));\r\n  } else {\r\n    const res = response as ColourResponse;\r\n    dispatch(errorColour(res.message || ''))\r\n  }\r\n}\r\n\r\nconst updateColour = (colour: ProductColor) => async (dispatch: Dispatch<ColourAction>) => {\r\n  dispatch(loadingColour());\r\n\r\n  const response = await api.post('/productcolour', {\r\n    product_color_code: colour.code,\r\n    product_color: colour.value,\r\n    colour_id: colour.colourId\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ColourResponse\r\n    dispatch(updateColourSuccess([colour], res.message || ''));\r\n  } else {\r\n    const res = response as ColourResponse\r\n    dispatch(errorColour(res.message || ''));\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  colourReducer,\r\n  saveColour,\r\n  defaultColour,\r\n  getColour,\r\n  updateColour\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { ProductSize } from 'types';\r\nimport { api, getSubCategoryFromId } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface SizeAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductSize[];\r\n}\r\n\r\ninterface SizeResponse {\r\n   message?: string;\r\n   data?: ProductSize[];\r\n}\r\n\r\nexport interface Size {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductSize[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_SIZE= 'LOADING_SIZE',\r\n  SUCCESS_SIZE= 'SUCCESS_SIZE',\r\n  ERROR_SIZE= 'ERROR_SIZE',\r\n  SET_SIZE= 'SET_SIZE',\r\n  UPDATE_SIZE= 'UPDATE_SIZE',\r\n}\r\n\r\nconst loadingSize= () => ({\r\n  type: Actions.LOADING_SIZE\r\n});\r\n\r\nconst successSize= (message: string) => ({\r\n  type: Actions.SUCCESS_SIZE,\r\n  message\r\n});\r\n\r\nconst errorSize= (message: string) => ({\r\n  type: Actions.SUCCESS_SIZE,\r\n  message\r\n});\r\n\r\nconst setSize= (data: ProductSize[]) => ({\r\n  type: Actions.SET_SIZE,\r\n  data\r\n});\r\n\r\nconst updateSize= (data: ProductSize[], message: string) => ({\r\n  type: Actions.UPDATE_SIZE,\r\n  data,\r\n  message\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as Size\r\n\r\n\r\nconst sizeReducer = (state= initialState, action: SizeAction): Size => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_SIZE:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_SIZE:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_SIZE:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_SIZE:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_SIZE:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.sizeId != updatedValue[0].sizeId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue,\r\n        ]\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/**Thunk */\r\n\r\nconst addUpdateSize = (size: ProductSize) => async (dispatch: Dispatch<SizeAction>) => {\r\n  dispatch(loadingSize());\r\n\r\n  const response = await api.post('/productsize',\r\n    {\r\n      product_size:size.value,\r\n      product_size_code: size.code,\r\n      product_category: Number(size.productCategory),\r\n      size_id: size.sizeId\r\n    });\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as SizeResponse;\r\n    if(size.sizeId != '0'){\r\n      const productCategoryIndex  = size.productCategory ? size.productCategory : 1;\r\n      dispatch(updateSize([{...size, productCategoryName: getSubCategoryFromId(Number(productCategoryIndex))}], res.message || ''));\r\n    } else{\r\n      dispatch(successSize(res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as SizeResponse;\r\n    dispatch(errorSize(res.message || ''));\r\n  }\r\n}\r\n\r\nconst getSize= () => async (dispatch: Dispatch<SizeAction>) => {\r\n  dispatch(loadingSize());\r\n\r\n  const response = await api.get('/productsize');\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as SizeResponse;\r\n    dispatch(setSize(res.data || []))\r\n  } else {\r\n    const res = response as SizeResponse;\r\n    dispatch(errorSize(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  addUpdateSize,\r\n  sizeReducer,\r\n  getSize\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { ProductSubCategory } from 'types';\r\nimport { api, getSubCategoryFromId } from 'services';\r\nimport { HttpStatusCode, SubCategories } from 'appConstants';\r\n\r\nexport interface SubCategoryAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductSubCategory[];\r\n}\r\n\r\ninterface SubCategoryResponse {\r\n  message?: string;\r\n  data?: ProductSubCategory[];\r\n}\r\n\r\nexport interface SubCategory {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductSubCategory[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_SUBCATEGORY= 'LOADING_SUBCATEGORY',\r\n  SUCCESS_SUBCATEGORY= 'SUCCESS_SUBCATEGORY',\r\n  ERROR_SUBCATEGORY= 'ERROR_SUBCATEGORY',\r\n  SET_SUBCATEGORY= 'SET_SUBCATEGORY',\r\n  UPDATE_SUBCATEGORY= 'UPDATE_SUBCATEGORY',\r\n}\r\n\r\nconst loadingSubCategory= () => ({\r\n  type: Actions.LOADING_SUBCATEGORY\r\n});\r\n\r\nconst successSubCategory= (message: string) => ({\r\n  type: Actions.SUCCESS_SUBCATEGORY,\r\n  message\r\n});\r\n\r\nconst errorSubCategory= (message: string) => ({\r\n  type: Actions.ERROR_SUBCATEGORY,\r\n  message\r\n});\r\n\r\nconst setSubCategory= (data: ProductSubCategory[]) => ({\r\n  type: Actions.SET_SUBCATEGORY,\r\n  data\r\n});\r\n\r\nconst updateSubCategory= (data: ProductSubCategory[], message: string) => ({\r\n  type: Actions.UPDATE_SUBCATEGORY,\r\n  data,\r\n  message\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as SubCategory\r\n\r\nconst subCategoryReducer = (state= initialState, action: SubCategoryAction): SubCategory => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_SUBCATEGORY:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_SUBCATEGORY:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_SUBCATEGORY:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_SUBCATEGORY:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_SUBCATEGORY:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.subCategoryId != updatedValue[0].subCategoryId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue,\r\n        ]\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/* Thunk */\r\n\r\nconst addUpdateSubCategory = (subCategory: ProductSubCategory) => async (dispatch: Dispatch<SubCategoryAction>) => {\r\n  dispatch(loadingSubCategory());\r\n\r\n  const response = await api.post('/productsubcategory',\r\n    {\r\n      product_name:subCategory.code,\r\n      product_desc: subCategory.value,\r\n      product_category_id: Number(subCategory.productCategoryId),\r\n      subcategory_id: subCategory.subCategoryId?.toString()\r\n    });\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as SubCategoryResponse;\r\n    if(subCategory.subCategoryId != '0'){\r\n      const productCategoryIndex  = subCategory.productCategoryId ? subCategory.productCategoryId : 1;\r\n      dispatch(updateSubCategory([{...subCategory, productCategoryName: getSubCategoryFromId(Number(productCategoryIndex))}], res.message || ''));\r\n    } else{\r\n      dispatch(successSubCategory(res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as SubCategoryResponse;\r\n    dispatch(errorSubCategory(res.message || ''));\r\n  }\r\n}\r\n\r\n\r\nconst getSubCategory= () => async (dispatch: Dispatch<SubCategoryAction>) => {\r\n  dispatch(loadingSubCategory());\r\n\r\n  const response = await api.get('/productsubcategory');\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as SubCategoryResponse;\r\n    dispatch(setSubCategory(res.data || []))\r\n  } else {\r\n    const res = response as SubCategoryResponse;\r\n    dispatch(errorSubCategory(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  subCategoryReducer,\r\n  getSubCategory,\r\n  addUpdateSubCategory\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { ProductCoupon } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface CouponAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductCoupon[]\r\n}\r\n\r\nexport interface CouponResponse {\r\n  message?: string\r\n  data?: ProductCoupon[]\r\n}\r\n\r\nexport interface Coupon {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductCoupon[];\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n  data: {}\r\n} as Coupon\r\n\r\nenum Actions {\r\n  LOADING_COUPON = 'LOADING_COUPON',\r\n  ERROR_COUPON = 'ERROR_COUPON',\r\n  SUCCESS_COUPON = 'SUCCESS_COUPON',\r\n  DEFAULT_COUPON = 'DEFAULT_COUPON',\r\n  SET_COUPON = 'SET_COUPON',\r\n  UPDATE_COUPON_SUCCESS = 'UPDATE_COUPON_SUCCESS',\r\n  DELETE_COUPON_SUCCESS = 'DELETE_COUPON_SUCCESS'\r\n}\r\n\r\nconst loadingCoupon = () => ({\r\n  type: Actions.LOADING_COUPON\r\n});\r\n\r\nconst successCoupon = (message: string) => ({\r\n  type: Actions.SUCCESS_COUPON,\r\n  message\r\n});\r\n\r\nconst errorCoupon = (message: string) => ({\r\n  type: Actions.ERROR_COUPON,\r\n  message\r\n});\r\n\r\nconst defaultCoupon = () => ({\r\n  type: Actions.DEFAULT_COUPON\r\n});\r\n\r\nconst setCoupon = (data: ProductCoupon[], message?: string) => ({\r\n  type: Actions.SET_COUPON,\r\n  data,\r\n  message\r\n});\r\n\r\nconst updateCouponSuccess = (data: ProductCoupon[], message: string) => ({\r\n  type: Actions.UPDATE_COUPON_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst deleteCouponSuccess = (data: ProductCoupon[], message: string) => ({\r\n  type: Actions.DELETE_COUPON_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst couponReducer = (state = initialState, action: CouponAction): Coupon => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_COUPON:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_COUPON:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_COUPON:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        message: action.message,\r\n        data: []\r\n      }\r\n    case Actions.SET_COUPON:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_COUPON_SUCCESS:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.couponId != updatedValue[0].couponId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue\r\n        ]\r\n      }\r\n    case Actions.DELETE_COUPON_SUCCESS:\r\n      const orgState = state.data || [];\r\n      const updValue = action.data || [];\r\n      const updState = orgState.filter(d => {\r\n        return d.couponId != updValue[0].couponId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updState\r\n        ]\r\n      }\r\n    case Actions.DEFAULT_COUPON:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst saveCoupon = (coupon: ProductCoupon) => async (dispatch: Dispatch<CouponAction>) => {\r\n  dispatch(loadingCoupon());\r\n  const response = await api.post('/productcoupon',\r\n    {\r\n      coupon_code: coupon.code,\r\n      coupon_value: coupon.value,\r\n      coupon_id: 0,\r\n      isDelete: false\r\n    });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CouponResponse\r\n    dispatch(successCoupon(res.message || ''));\r\n  } else {\r\n    const res = response as CouponResponse\r\n    dispatch(errorCoupon(res.message || ''));\r\n  }\r\n};\r\n\r\nconst getCoupon = () => async (dispatch: Dispatch<CouponAction>) => {\r\n  dispatch(loadingCoupon());\r\n\r\n  const response = await api.get('/productcoupon');\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as CouponResponse;\r\n    dispatch(setCoupon(res.data || []));\r\n  } else {\r\n    const res = response as CouponResponse;\r\n    dispatch(errorCoupon(res.message || ''))\r\n  }\r\n};\r\n\r\nconst updateCoupon = (coupon: ProductCoupon, isDelete= false) => async (dispatch: Dispatch<CouponAction>) => {\r\n  dispatch(loadingCoupon());\r\n\r\n  const response = await api.post('/productcoupon', {\r\n    coupon_code: coupon.code,\r\n    coupon_value: coupon.value,\r\n    coupon_id: coupon.couponId,\r\n    isDelete\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CouponResponse;\r\n    if(isDelete){\r\n      dispatch(deleteCouponSuccess([coupon], res.message || ''))\r\n    }else {\r\n      dispatch(updateCouponSuccess([coupon], res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as CouponResponse\r\n    dispatch(errorCoupon(res.message || ''));\r\n  }\r\n\r\n};\r\n\r\nconst validateCoupon = (coupon: string) => async(dispatch: Dispatch<CouponAction>) => {\r\n  dispatch(loadingCoupon());\r\n  const response = await api.get('/validatecoupon?couponCode='+coupon);\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data;\r\n    if(res.data){\r\n      dispatch(setCoupon([res.data], res.message || ''));\r\n    } else {\r\n      dispatch(errorCoupon(res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as CouponResponse\r\n    dispatch(errorCoupon(res.message || ''));\r\n  }\r\n};\r\n\r\nexport {\r\n  couponReducer,\r\n  saveCoupon,\r\n  defaultCoupon,\r\n  getCoupon,\r\n  updateCoupon,\r\n  validateCoupon\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { ProductItem, sizeColourQuantityComboObject } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode, pageSize } from 'appConstants';\r\nimport { boolean } from 'yup';\r\nimport { getUserLocation } from './UserLocation';\r\n\r\nexport interface ProductAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n  _hasMoreProducts?: boolean;\r\n  readonly singleData?: ProductItem;\r\n}\r\n\r\ninterface ProductResponse {\r\n  message?: string;\r\n  data?: ProductItem[];\r\n  readonly singleData?: ProductItem;\r\n}\r\n\r\nexport interface Product {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _hasMoreProducts?: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n  readonly singleData?: ProductItem;\r\n}\r\n\r\nenum Actions {\r\n  LOADING_PRODUCT = 'LOADING_PRODUCT',\r\n  SUCCESS_PRODUCT = 'SUCCESS_PRODUCT',\r\n  ERROR_PRODUCT = 'ERROR_PRODUCT',\r\n  SET_PRODUCT = 'SET_PRODUCT',\r\n  SET_CUSTOMER_PRODUCT = 'SET_CUSTOMER_PRODUCT',\r\n  UPDATE_PRODUCT = 'UPDATE_PRODUCT',\r\n  SET_SINGLE_PRODUCT = 'SET_SINGLE_PRODUCT',\r\n  SET_DEFAULT_PRODUCT = 'SET_DEFAULT_PRODUCT',\r\n  DELETE_PRODUCT_SUCCESS = 'DELETE_PRODUCT_SUCCESS',\r\n  SET_PRODUCT_HIGHLIGHT = 'SET_PRODUCT_HIGHLIGHT'\r\n}\r\n\r\nconst loadingProduct = () => ({\r\n  type: Actions.LOADING_PRODUCT\r\n});\r\n\r\nconst successProduct = (message: string) => ({\r\n  type: Actions.SUCCESS_PRODUCT,\r\n  message\r\n});\r\n\r\nconst errorProduct = (message: string) => ({\r\n  type: Actions.ERROR_PRODUCT,\r\n  message\r\n});\r\n\r\nconst setProducts = (data: ProductItem[], _hasMoreProducts: boolean) => ({\r\n  type: Actions.SET_PRODUCT,\r\n  data,\r\n  _hasMoreProducts\r\n});\r\n\r\nconst setSingleProducts = (singleData: ProductItem) => ({\r\n  type: Actions.SET_SINGLE_PRODUCT,\r\n  singleData\r\n});\r\n\r\nconst setDefaulState = () => ({\r\n  type: Actions.SET_DEFAULT_PRODUCT\r\n});\r\n\r\nconst deleteProductSuccess = (data: ProductItem[], message: string) => ({\r\n  type: Actions.DELETE_PRODUCT_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst setCustomerProducts = (data: ProductItem[], _hasMoreProducts: boolean) => ({\r\n  type: Actions.SET_CUSTOMER_PRODUCT,\r\n  data,\r\n  _hasMoreProducts\r\n});\r\n\r\nconst setProductHighlight = (trending: boolean, latest: boolean, productId: string, message: string)  => ({\r\n  type: Actions.SET_PRODUCT_HIGHLIGHT,\r\n  message,\r\n  singleData: {\r\n    trending,\r\n    latest,\r\n    productId\r\n  } as ProductItem\r\n})\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _hasMoreProducts: true,\r\n  message: '',\r\n  data: [],\r\n  singleData: {} as ProductItem\r\n} as Product\r\n\r\nconst productReducer = (state = initialState, action: ProductAction): Product => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.SUCCESS_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        data: action.data,\r\n        _hasMoreProducts: action._hasMoreProducts,\r\n      }\r\n    case Actions.SET_CUSTOMER_PRODUCT:\r\n      debugger\r\n        return {\r\n          ...state,\r\n          _isSuccess: false,\r\n          _isError: false,\r\n          _isLoading: false,\r\n          data: state.data?.concat(action.data || []),\r\n          _hasMoreProducts: action._hasMoreProducts\r\n        }\r\n    case Actions.SET_SINGLE_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        singleData: action.singleData\r\n      }\r\n    case Actions.DELETE_PRODUCT_SUCCESS:\r\n      const orgState = state.data || [];\r\n      const updValue = action.data || [];\r\n      const updState = orgState.filter(d => {\r\n        return d.productId != updValue[0].productId\r\n      });\r\n      return {\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        data: [\r\n          ...updState\r\n        ]\r\n      }\r\n    case Actions.SET_PRODUCT_HIGHLIGHT:\r\n      return {\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: state.data?.map((product) => {\r\n          if(product.productId.toString() === action.singleData?.productId.toString()){\r\n            return {...product, trending: action.singleData.trending, latest: action.singleData.latest}\r\n          }\r\n          return product\r\n        })\r\n      }\r\n    case Actions.SET_DEFAULT_PRODUCT:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/*Thunk */\r\n\r\nconst addUpdateProduct = (product: ProductItem, isDelete = 0, sizeColourQuantity: sizeColourQuantityComboObject[]) => async (dispatch: Dispatch<ProductAction>) => {\r\n  dispatch(loadingProduct());\r\n  var formData = new FormData();\r\n  if (product.productImageBlob) {\r\n    Array.from(product.productImageBlob).forEach((element, index) => {\r\n      formData.append(`product_image_${index}`, element);\r\n    });\r\n  }\r\n  formData.append('product_INR_price', product.priceINR);\r\n  formData.append('product_USD_price', product.priceUSD);\r\n  formData.append('product_size_code', product.size || '0');\r\n  formData.append('product_color_code', product.colour || '0');\r\n  formData.append('product_Qty', product.quantity || '0');\r\n  formData.append('product_name', product.name);\r\n  formData.append('product_desc', product.description || '');\r\n  formData.append('product_subcategory_id', (product.subCategory || '').toString());\r\n  formData.append('prod_id', product.productId);\r\n  formData.append('is_product_delete', isDelete.toString());\r\n  formData.append('deleted_image_paths', JSON.stringify(product.deletedImagePath));\r\n  formData.append('size_colour_quantity_combo',  JSON.stringify(sizeColourQuantity));\r\n  formData.append('deleted_product_detailIds',  JSON.stringify(product.deletedProductDetailIds));\r\n  const response = await api.post('/productinfo', formData);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ProductResponse;\r\n    if (product.productId != '0') {\r\n      if (isDelete) {\r\n        dispatch(deleteProductSuccess([product], res.message || ''))\r\n      } else {\r\n        dispatch(successProduct(res.message || ''));\r\n      }\r\n    } else {\r\n      dispatch(successProduct(res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as ProductResponse;\r\n    dispatch(errorProduct(res.message || ''));\r\n  }\r\n\r\n};\r\n\r\nconst getProducts = () => async (dispatch: Dispatch<ProductAction>) => {\r\n  dispatch(loadingProduct());\r\n  const response = await api.get('/productinfo');\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ProductResponse;\r\n    dispatch(setProducts(res.data || [], true))\r\n  } else {\r\n    const res = response as ProductResponse;\r\n    dispatch(errorProduct(res.message || ''));\r\n  }\r\n};\r\n\r\nconst getProduct = (productId: number) => async (dispatch: Dispatch<ProductAction>) => {\r\n  dispatch(loadingProduct());\r\n  const response = await api.get('/productinfo?productId=' + productId);\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ProductResponse;\r\n    dispatch(setSingleProducts(res.singleData || {} as ProductItem))\r\n  } else {\r\n    const res = response as ProductResponse;\r\n    dispatch(errorProduct(res.message || ''));\r\n  }\r\n};\r\n\r\nconst getCustomerProducts = (\r\n  offset: number,\r\n  limit: number,\r\n  categoryId: number[],\r\n  subCategoryId: number[],\r\n  colourId: number[],\r\n  sizeId: number[],\r\n  startPrice: string,\r\n  endPrice: string,\r\n  currency: string,\r\n  searchText: string,\r\n  freshData = false) => async (dispatch: Dispatch<ProductAction>) => {\r\n    dispatch(loadingProduct());\r\n\r\n    const response = await api.get(\r\n      `/productlistcustomer?offset=${offset}&limit=${limit}&categorydId=${categoryId}&colourId=${colourId}&sizeId=${sizeId}&subCategoryId=${subCategoryId}&startPrice=${startPrice}&endPrice=${endPrice}&currency=${currency}&searchText=${searchText}`);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n      const res = response.data as ProductResponse;\r\n      const _hasMoreProducts = res.data && res.data.length === pageSize || false;\r\n      if(freshData){\r\n        dispatch(setProducts(res.data || [], _hasMoreProducts))\r\n      }else {\r\n        dispatch(setCustomerProducts(res.data || [], _hasMoreProducts))\r\n      }\r\n      \r\n    } else {\r\n      const res = response as ProductResponse;\r\n      dispatch(errorProduct(res.message || ''));\r\n    }\r\n  }\r\n\r\n  const updateProductHighLight = (highlight: string, productId: string) => async(dispatch: Dispatch<ProductAction>) => {\r\n    dispatch(loadingProduct());\r\n    const latest =  highlight === '2';\r\n    const trending = highlight === '1';\r\n    const response = await api.post('/producthighlight',{\r\n      latest,\r\n      trending,\r\n      productId\r\n    });\r\n\r\n    if(response.status === HttpStatusCode.OK){\r\n      const res = response.data as ProductResponse;\r\n      dispatch(setProductHighlight(trending,latest, productId, res.message || ''))\r\n    } else {\r\n      const res = response as ProductResponse;\r\n      dispatch(errorProduct(res.message || ''));\r\n    }\r\n  }\r\n\r\nexport {\r\n  addUpdateProduct,\r\n  productReducer,\r\n  getProducts,\r\n  getProduct,\r\n  setDefaulState,\r\n  getCustomerProducts,\r\n  updateProductHighLight,\r\n  errorProduct\r\n}\r\n","import { Dispatch, Action } from 'redux';\r\nimport { ActiveProductCount, ActiveProductCountNew, ProductCountList } from 'types';\r\nimport { api, createActiveProductCountList, createProductCountList } from 'services';\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface ProductCountAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductCountList;\r\n};\r\n\r\nexport interface ProductCountResponse {\r\n  readonly message?: string;\r\n  readonly data?: ActiveProductCountNew[];\r\n};\r\n\r\nexport interface ProductCount {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductCountList;\r\n};\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n  data: {}\r\n} as ProductCount;\r\n\r\nenum Actions {\r\n  LOADING_PRODUCT_COUNT= 'LOADING_PRODUCT_COUNT',\r\n  ERROR_PRODUCT_COUNT= 'ERROR_PRODUCT_COUNT',\r\n  SET_PRODUCT_COUNT= 'SET_PRODUCT_COUNT',\r\n};\r\n\r\nconst loadingProductCount = () => ({\r\n  type: Actions.LOADING_PRODUCT_COUNT\r\n});\r\n\r\nconst errorProductCount = (message: string) => ({\r\n  type: Actions.ERROR_PRODUCT_COUNT,\r\n  message\r\n});\r\n\r\nconst setProductCount = (data: ProductCountList) => ({\r\n  type: Actions.SET_PRODUCT_COUNT,\r\n  data\r\n});\r\n\r\nconst productCountReducer = (state= initialState, action: ProductCountAction): ProductCount => {\r\n  switch(action.type) {\r\n    case Actions.LOADING_PRODUCT_COUNT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        message: ''\r\n      }\r\n    case Actions.ERROR_PRODUCT_COUNT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_PRODUCT_COUNT:\r\n      return {\r\n        ...state,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: true,\r\n        message: action.message,\r\n        data : action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n/** Thunk */\r\n\r\nconst getActiveProductCount = () => async(dispatch: Dispatch<ProductCountAction>) => {\r\n  dispatch(loadingProductCount());\r\n\r\n  const response = await api.get('/productcount');\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as ProductCountResponse;\r\n    dispatch(setProductCount(createActiveProductCountList(res.data||[])));\r\n  } else {\r\n    const res = response as ProductCountResponse;\r\n    dispatch(errorProductCount(res.message || ''))\r\n  }\r\n};\r\n\r\nexport {\r\n  productCountReducer,\r\n  getActiveProductCount\r\n}","const pageSize = 25;\r\n\r\n\r\nexport {\r\n  pageSize\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { CustomerCart } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface CartAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: CustomerCart[]\r\n}\r\n\r\nexport interface CartResponse {\r\n  message?: string;\r\n  data?: CustomerCart;\r\n}\r\n\r\nexport interface CartResponseMulti {\r\n  message?: string;\r\n  data?: CustomerCart[];\r\n}\r\n\r\nexport interface Cart {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _quantityUpdate: boolean;\r\n  readonly message?: string;\r\n  readonly data?: CustomerCart[];\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  _quantityUpdate: false,\r\n  message: '',\r\n  data: []\r\n} as Cart;\r\n\r\nenum Actions {\r\n  LOADING_CART = 'LOADING_CART',\r\n  ERROR_CART = 'ERROR_CART',\r\n  SUCCESS_CART = 'SUCCESS_CART',\r\n  DEFAULT_CART = 'DEFAULT_CART',\r\n  SET_CART = 'SET_CART',\r\n  SET_LOGGED_CART = 'SET_LOGGED_CART',\r\n  UPDATE_CART_SUCCESS = 'UPDATE_CART_SUCCESS',\r\n  ADD_CART_SUCCESS = 'ADD_CART_SUCCESS',\r\n  UPDATE_CART_LOGGED_OUT = 'UPDATE_CART_LOGGED_OUT',\r\n  DELETE_CART_PRODUCT = 'DELETE_CART_PRODUCT',\r\n  CART_QUANTITY_FINE = 'CART_QUANTITY_FINE',\r\n  CART_GET_UPDATED_QUANTITY = 'CART_GET_UPDATED_QUANTITY',\r\n  DELETE_CART_PRODUCT_LOGGED_OUT = 'DELETE_CART_PRODUCT_LOGGED_OUT',\r\n};\r\n\r\nconst loadingCart = () => ({\r\n  type: Actions.LOADING_CART\r\n});\r\n\r\nconst successCart = (message: string) => ({\r\n  type: Actions.SUCCESS_CART,\r\n  message\r\n});\r\n\r\nconst errorCart = (message: string) => ({\r\n  type: Actions.ERROR_CART,\r\n  message\r\n});\r\n\r\nconst defaultCart = () => ({\r\n  type: Actions.DEFAULT_CART\r\n});\r\n\r\nconst setCart = (data: CustomerCart[]) => ({\r\n  type: Actions.SET_CART,\r\n  data\r\n});\r\n\r\nconst setLoggedCart = (data: CustomerCart[]) => ({\r\n  type: Actions.SET_LOGGED_CART,\r\n  data\r\n});\r\n\r\nconst updateCartSuccess = (data: CustomerCart[], message: string) => ({\r\n  type: Actions.UPDATE_CART_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst addCartSuccess = (data: CustomerCart[], message: string) => ({\r\n  type: Actions.ADD_CART_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst addCartSuccessLoggedOut = (data: CustomerCart[], message: string) => ({\r\n  type: Actions.UPDATE_CART_LOGGED_OUT,\r\n  data,\r\n  message\r\n});\r\n\r\nconst deleteCartProduct = (data: CustomerCart[], message: string) => ({\r\n  type: Actions.DELETE_CART_PRODUCT,\r\n  data,\r\n  message\r\n});\r\n\r\nconst cartQuantityFine = () => ({\r\n  type: Actions.CART_QUANTITY_FINE\r\n});\r\n\r\nconst cartGetUpdatedQuantity = () => ({\r\n  type: Actions.CART_GET_UPDATED_QUANTITY\r\n});\r\n\r\nconst deleteCartLoggedOut = (data: CustomerCart[]) =>({\r\n  type: Actions.DELETE_CART_PRODUCT_LOGGED_OUT,\r\n  data,\r\n})\r\n\r\nconst cartReducer = (state = initialState, action: CartAction): Cart => {\r\n  debugger;\r\n  switch (action.type) {\r\n    case Actions.LOADING_CART:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false,\r\n        _quantityUpdate: false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_CART:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_CART:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _quantityUpdate: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_CART:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.SET_LOGGED_CART:\r\n      debugger;\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_CART_SUCCESS:\r\n      const originalState = state.data || [];\r\n      let og = [];\r\n      let newProduct = true;\r\n      if (action.data && originalState.length === 0) {\r\n        og = [...action.data]\r\n      } else {\r\n        og = originalState.map((product) => {\r\n          if (action.data && product.cartId === action.data[0].cartId) {\r\n            product.productQuantity = action.data[0].productQuantity;\r\n            product.totalPrice = action.data[0].totalPrice;\r\n            product.cartId = action.data[0].cartId;\r\n            newProduct = false;\r\n            return product;\r\n          }\r\n          return product;\r\n        });\r\n        if (newProduct && action.data) {\r\n          og = [...og, ...action.data]\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: og\r\n      }\r\n    case Actions.UPDATE_CART_LOGGED_OUT:\r\n      const originalStatelo = state.data || [];\r\n      let oglo = [];\r\n      let newProductlo = true;\r\n      if (action.data && originalStatelo.length === 0) {\r\n        oglo = [...action.data]\r\n      } else {\r\n        oglo = originalStatelo.map((product) => {\r\n          if (action.data && product.cartId === action.data[0].cartId) {\r\n            product.productQuantity = (Number(action.data[0].productQuantity) + Number(product.productQuantity)).toString();\r\n            product.totalPrice = ((Number(product.productQuantity)) * Number(action.data[0].productPrice)).toString();\r\n            product.cartId = action.data[0].cartId;\r\n            newProductlo = false;\r\n            return product;\r\n          }\r\n          return product;\r\n        });\r\n        if (newProductlo && action.data) {\r\n          oglo = [...oglo, ...action.data]\r\n        }\r\n      }\r\n      localStorage.setItem(\"basicKart-loggedOutCart\", JSON.stringify(oglo));\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: oglo\r\n      }\r\n    case Actions.ADD_CART_SUCCESS:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.DELETE_CART_PRODUCT_LOGGED_OUT:\r\n      const res = state.data?.filter(({ cartId }) => action.data && cartId !== action.data[0].cartId)\r\n      localStorage.setItem(\"basicKart-loggedOutCart\", JSON.stringify(res));\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: res\r\n      }\r\n    case Actions.DELETE_CART_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: false,\r\n        message: action.message,\r\n        data: state.data?.filter(({ cartId }) => action.data && cartId !== action.data[0].cartId)\r\n      }\r\n    case Actions.DEFAULT_CART:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    case Actions.CART_GET_UPDATED_QUANTITY:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _quantityUpdate: true,\r\n        message: action.message\r\n      }\r\n    case Actions.CART_QUANTITY_FINE:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _quantityUpdate: true,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nconst addUpdateCart = (cart: CustomerCart, isLoggedIn?: boolean) =>\r\n  async (dispatch: Dispatch<CartAction>) => {\r\n    dispatch(loadingCart());\r\n    if (!isLoggedIn) {\r\n          // result.productImage = cart.productImage;\r\n          // result.productImagePath = cart.productImagePath;\r\n          // result.productName = cart.productName;\r\n          // result.subcategory = cart.subcategory;\r\n          // result.productId = cart.productId;\r\n          const newCart = {\r\n            ...cart,\r\n            totalPrice: (Number(cart.productPrice) * Number(cart.productQuantity)).toString(),\r\n          } as CustomerCart;\r\n          dispatch(addCartSuccessLoggedOut([newCart],''));\r\n    } else {\r\n      const response = await api.post('/cart',\r\n        {\r\n          product_detail_id: cart.productDetailId.toString(),\r\n          order_quantity: cart.productQuantity,\r\n          price_id: cart.currencyType,\r\n          orderdetail_id: cart.cartId.toString(),\r\n          delete_flag: false\r\n        });\r\n\r\n      if (response.status === HttpStatusCode.OK) {\r\n        const res = response.data as CartResponse;\r\n        if (cart.cartId != '0') {\r\n          const result = res.data || {} as CustomerCart;\r\n          if (cart.productQuantity === '0') {\r\n            dispatch(deleteCartProduct([cart], res.message || ''));\r\n          } else {\r\n            dispatch(updateCartSuccess([result], res.message || ''));\r\n          }\r\n        } else {\r\n          const result = res.data || {} as CustomerCart;\r\n          result.productImage = cart.productImage;\r\n          result.productImagePath = cart.productImagePath;\r\n          result.productName = cart.productName;\r\n          result.subcategory = cart.subcategory;\r\n          result.productId = cart.productId;\r\n          dispatch(updateCartSuccess([result], res.message || ''));\r\n        }\r\n      } else {\r\n        const res = response as CartResponse;\r\n        dispatch(errorCart(res.message || ''));\r\n      }\r\n    }\r\n  };\r\n\r\nconst getCart = () => async (dispatch: Dispatch<CartAction>) => {\r\n  dispatch(loadingCart());\r\n\r\n  const response = await api.get('/cart');\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CartResponseMulti;\r\n    dispatch(addCartSuccess(res.data || [], res.message || ''));\r\n  } else {\r\n    const res = response as CartResponse;\r\n    dispatch(errorCart(res.message || ''))\r\n  }\r\n};\r\n\r\nconst deleteCartItem = (cart: CustomerCart, isLoggedIn?: boolean) => async (dispatch: Dispatch<CartAction>) => {\r\n  dispatch(loadingCart());\r\n\r\n  if(!isLoggedIn){\r\n    dispatch(deleteCartLoggedOut([cart]));\r\n  }else {\r\n    const response = await api.post('/cart', {\r\n      orderdetail_id: cart.cartId,\r\n      product_detail_id: cart.productDetailId.toString(),\r\n      order_quantity: cart.productQuantity,\r\n      price_id: '1',\r\n      delete_flag: true\r\n    });\r\n    if (response.status === HttpStatusCode.OK) {\r\n      const res = response.data as CartResponse;\r\n      dispatch(deleteCartProduct([cart], res.message || ''));\r\n    } else {\r\n      const res = response as CartResponse;\r\n      dispatch(errorCart(res.message || ''))\r\n    }\r\n  }\r\n  \r\n};\r\n\r\nconst updateCartQuantity = (orderDetailId: string) => async (dispatch: Dispatch<CartAction>) => {\r\n  dispatch(loadingCart());\r\n  const response = await api.post('/updatecartquantity', { orderDetailId });\r\n  if (response.status === HttpStatusCode.OK) {\r\n    dispatch(cartQuantityFine());\r\n  } else if (response.status === HttpStatusCode.PARTIAL_INFO) {\r\n    dispatch(cartGetUpdatedQuantity());\r\n  } else {\r\n    const res = response as CartResponse;\r\n    dispatch(errorCart(res.message || ''))\r\n  }\r\n}\r\n\r\nexport {\r\n  cartReducer,\r\n  addUpdateCart,\r\n  getCart,\r\n  deleteCartItem,\r\n  updateCartQuantity,\r\n  setLoggedCart\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { CustomerCheckout, RazorpayPayment, PayPalPayment, CodPayment } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface CheckoutAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: CustomerCheckout;\r\n}\r\n\r\nexport interface CheckoutResponse {\r\n  message?: string\r\n  data?: CustomerCheckout;\r\n}\r\n\r\nexport interface Checkout {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _isPaymentSucceess: boolean;\r\n  readonly _priceChanged: boolean;\r\n  readonly _isFetchCodCodeSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: CustomerCheckout;\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  _isPaymentSucceess: false,\r\n  _priceChanged: false,\r\n  _isFetchCodCodeSuccess: false,\r\n  message: '',\r\n  data: {}\r\n} as Checkout;\r\n\r\nenum Actions {\r\n  LOADING_CHECKOUT = 'LOADING_CHECKOUT',\r\n  ERROR_CHECKOUT = 'ERROR_CHECKOUT',\r\n  SUCCESS_CHECKOUT_ORDER = 'SUCCESS_CHECKOUT_ORDER',\r\n  DEFAULT_CHECKOUT = 'DEFAULT_CHECKOUT',\r\n  SET_CHECKOUT = 'SET_CHECKOUT',\r\n  UPDATE_CHECKOUT_SUCCESS = 'UPDATE_CHECKOUT_SUCCESS',\r\n  SUCCESS_PAYMENT = 'SUCCESS_PAYMENT',\r\n  PRICE_CHANGED = 'PRICE_CHANGED',\r\n};\r\n\r\nconst loadingCheckout = () => ({\r\n  type: Actions.LOADING_CHECKOUT\r\n});\r\n\r\nconst successCheckoutOrder = (data: CustomerCheckout, message?: string) => ({\r\n  type: Actions.SUCCESS_CHECKOUT_ORDER,\r\n  data,\r\n  message\r\n});\r\n\r\nconst errorCheckout = (message: string) => ({\r\n  type: Actions.ERROR_CHECKOUT,\r\n  message\r\n});\r\n\r\nconst defaultCheckout = () => ({\r\n  type: Actions.DEFAULT_CHECKOUT\r\n});\r\n\r\nconst successPayment =(message:string) => ({\r\n  type: Actions.SUCCESS_PAYMENT,\r\n  message\r\n});\r\n\r\nconst priceChanged = (message:string) => ({\r\n  type: Actions.PRICE_CHANGED,\r\n  message\r\n});\r\n\r\nconst checkoutReducer = (state = initialState, action: CheckoutAction) : Checkout => {\r\n  switch(action.type){\r\n    case Actions.LOADING_CHECKOUT:\r\n      return{\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_CHECKOUT_ORDER:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: false,\r\n        _isFetchCodCodeSuccess: true,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.PRICE_CHANGED:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: true,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_CHECKOUT:\r\n      debugger\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: false,\r\n        _isFetchCodCodeSuccess: false,\r\n        message: action.message\r\n      }\r\n    case Actions.DEFAULT_CHECKOUT:\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        _isPaymentSucceess: false,\r\n        _priceChanged: false,\r\n        _isFetchCodCodeSuccess: false,\r\n      }\r\n    case Actions.SUCCESS_PAYMENT:\r\n      return {\r\n        ...state,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isPaymentSucceess: true,\r\n        _priceChanged: false,\r\n        message: action.message\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Thunk\r\n\r\nconst getRazorPayOrder = (amount: string, orderId: number, couponId?: number) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/checkout',\r\n    {\r\n      amount,\r\n      displayAmount: amount,\r\n      orderId,\r\n      couponId\r\n    });\r\n    if (response.status === HttpStatusCode.OK) {\r\n      const res = response.data as CheckoutResponse;\r\n      dispatch(successCheckoutOrder(res.data || {} as CustomerCheckout, res.message || ''));\r\n    } else if(response.status === HttpStatusCode.PARTIAL_INFO){\r\n      const res = response.data as CheckoutResponse;\r\n      dispatch(priceChanged(res.message || ''));\r\n    } else {\r\n      const res = response as CheckoutResponse;\r\n      dispatch(errorCheckout(res.message || ''));\r\n    }\r\n};\r\n\r\nconst saveRazorPayOrder = (razorpayData: RazorpayPayment) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/payment/razorpay',razorpayData);\r\n    if (response.status === HttpStatusCode.OK) {\r\n      const res = response.data as CheckoutResponse\r\n      dispatch(successPayment(res.message || ''));\r\n    } else {\r\n      const res = response as CheckoutResponse\r\n      dispatch(errorCheckout(res.message || ''));\r\n    }\r\n};\r\n\r\nconst getPayPalOrder = (amount: string, displayAmount: string ,orderId: number, couponId?: number)  => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/paypalorder',\r\n  {\r\n    amount,\r\n    displayAmount,\r\n    orderId,\r\n    couponId\r\n  });\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CheckoutResponse\r\n    dispatch(successCheckoutOrder(res.data as CustomerCheckout, res.message || ''));\r\n  } else if(response.status === HttpStatusCode.PARTIAL_INFO){\r\n    const res = response.data as CheckoutResponse;\r\n    dispatch(priceChanged(res.message || ''));\r\n  } else {\r\n    const res = response as CheckoutResponse\r\n    dispatch(errorCheckout(res.message || ''));\r\n  }\r\n};\r\n\r\nconst savePayPalOrder = (paypalData: PayPalPayment) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/payment/paypal',paypalData);\r\n    if (response.status === HttpStatusCode.OK) {\r\n      const res = response.data as CheckoutResponse\r\n      dispatch(successPayment(res.message || ''));\r\n    } else {\r\n      const res = response as CheckoutResponse\r\n      dispatch(errorCheckout(res.message || ''));\r\n    }\r\n};\r\n\r\nconst getCodOrder = (amount: string, orderId: number, couponId?: number) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/payment/codorder',{\r\n    amount,\r\n    displayAmount: amount,\r\n    orderId,\r\n    couponId\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CheckoutResponse;\r\n    dispatch(successCheckoutOrder(res.data as CustomerCheckout, res.message || ''));\r\n  } else if(response.status === HttpStatusCode.PARTIAL_INFO){\r\n    const res = response.data as CheckoutResponse;\r\n    dispatch(priceChanged(res.message || ''));\r\n  } else {\r\n    const res = response as CheckoutResponse;\r\n    dispatch(errorCheckout(res.message || ''));\r\n  }\r\n};\r\n\r\nconst saveCodOrder = (codData: CodPayment) => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.post('/payment/codplaceorder',codData);\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CheckoutResponse\r\n    dispatch(successPayment(res.message || ''));\r\n  } else {\r\n    const res = response as CheckoutResponse\r\n    dispatch(errorCheckout(res.message || ''));\r\n  }\r\n};\r\n\r\nconst resendOTP = () => async (dispatch: Dispatch<CheckoutAction>) => {\r\n  dispatch(loadingCheckout());\r\n  const response = await api.get('/payment/codresendotp');\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as CheckoutResponse;\r\n    dispatch(successCheckoutOrder(res.data as CustomerCheckout, res.message || ''));\r\n  } else {\r\n    const res = response as CheckoutResponse;\r\n    dispatch(errorCheckout(res.message || ''));\r\n  }\r\n};\r\n\r\nexport{\r\n  getRazorPayOrder,\r\n  checkoutReducer,\r\n  saveRazorPayOrder,\r\n  errorCheckout,\r\n  getPayPalOrder,\r\n  savePayPalOrder,\r\n  getCodOrder,\r\n  saveCodOrder,\r\n  resendOTP,\r\n  defaultCheckout\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface UserLocationAction extends Action {\r\n  readonly data?: string;\r\n};\r\n\r\nexport interface UserLocation {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: string;\r\n};\r\n\r\nenum Actions{\r\n  LOADING_USER_LOCATION= 'LOADING_USER_LOCATION',\r\n  SET_USER_LOCATION= 'SET_USER_LOCATION',\r\n};\r\n\r\nconst loadingUserLocation = () => ({\r\n  type: Actions.LOADING_USER_LOCATION,\r\n});\r\n\r\nconst setUserLocation = (data: string) => ({\r\n  type: Actions.SET_USER_LOCATION,\r\n  data\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:''\r\n} as UserLocation\r\n\r\nconst userLocationReducer = (state= initialState, action: UserLocationAction): UserLocation => {\r\n  switch(action.type){\r\n    case Actions.LOADING_USER_LOCATION:\r\n      return{\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.SET_USER_LOCATION:\r\n      return{\r\n        ...state,\r\n        _isLoading: false,\r\n        _isError: false,\r\n        _isSuccess: false,\r\n        data: action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n/** Thunk */\r\n\r\nconst getUserLocation = () => async (dispatch: Dispatch<UserLocationAction>) => {\r\n  dispatch(loadingUserLocation());\r\n  const defaultUserLocation = 'Asia/Calcutta';\r\n  try {\r\n    const userLocation = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n    if(userLocation && userLocation.toLowerCase() === defaultUserLocation.toLowerCase()){\r\n      dispatch(setUserLocation('IN'));\r\n    } else if (!userLocation && (new Date).getTimezoneOffset() === -330){\r\n      dispatch(setUserLocation('IN'));\r\n    } else {\r\n      dispatch(setUserLocation('USD'));\r\n    }\r\n  } catch (error) {\r\n    dispatch(setUserLocation('IN'));\r\n  }\r\n};\r\n\r\nexport {\r\n  userLocationReducer,\r\n  getUserLocation\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { Order, OrderItems, OrderUpdateAdmin } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode, pageSize } from 'appConstants';\r\n\r\nexport interface CustomerOrderAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: Order[];\r\n  readonly singleData?: Order;\r\n  readonly _hasMoreOrders?: boolean;\r\n};\r\n\r\ninterface CustomerOrderResponse {\r\n  message?: string;\r\n  data?: Order[];\r\n  singleData?: Order;\r\n  _hasMoreOrders?: boolean;\r\n};\r\n\r\nexport interface CustomerOrders {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _hasMoreOrders?: boolean;\r\n  readonly _isOrderUpdate?: boolean;\r\n  readonly message?: string;\r\n  readonly data?: Order[];\r\n  readonly singleData?: Order;\r\n};\r\n\r\nenum Actions{\r\n  LOADING_ORDER= 'LOADING_ORDER',\r\n  SUCCESS_ORDER= 'SUCCESS_ORDER',\r\n  ADMIN_SUCCESS_ORDER= 'ADMIN_SUCCESS_ORDER',\r\n  ERROR_ORDER= 'ERROR_ORDER',\r\n  SINGLE_DATA = 'SINGLE_DATA',\r\n  CUSTOMER_RETURN = 'CUSTOMER_RETURN',\r\n  DEFAULT_ORDER_RETURN = 'DEFAULT_ORDER_RETURN'\r\n};\r\n\r\nconst loadingOrder= () => ({\r\n  type: Actions.LOADING_ORDER\r\n});\r\n\r\nconst successOrder= (data: Order[], _hasMoreOrders: boolean) => ({\r\n  type: Actions.SUCCESS_ORDER,\r\n  data,\r\n  _hasMoreOrders\r\n});\r\n\r\nconst adminSuccessOrder= (data: Order[]) => ({\r\n  type: Actions.ADMIN_SUCCESS_ORDER,\r\n  data\r\n});\r\n\r\nconst errorOrder= (message: string) => ({\r\n  type: Actions.ERROR_ORDER,\r\n  message\r\n});\r\n\r\nconst singleOrder= (singleData: Order) => ({\r\n  type: Actions.SINGLE_DATA,\r\n  singleData\r\n});\r\n\r\nconst customerReturn = (orderDetailsId: number) => ({\r\n  type: Actions.CUSTOMER_RETURN,\r\n  singleData: {\r\n   orderId: orderDetailsId.toString()\r\n  } as Order\r\n});\r\n\r\nconst defaulOrderReturn = () => ({\r\n  type: Actions.DEFAULT_ORDER_RETURN\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _hasMoreOrders: false,\r\n  _isOrderUpdate: false,\r\n  message: '',\r\n  data:[],\r\n  singleData: {} as Order,\r\n} as CustomerOrders\r\n\r\nconst customerOrdersReducer = (state= initialState, action: CustomerOrderAction): CustomerOrders => {\r\n  switch(action.type){\r\n    case Actions.LOADING_ORDER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: true,\r\n        _hasMoreOrders: false,\r\n        _isOrderUpdate: false,\r\n      }\r\n    case Actions.SUCCESS_ORDER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isOrderUpdate: false,\r\n        message: action.message,\r\n        data: state.data?.concat(action.data || []),\r\n        _hasMoreOrders: action._hasMoreOrders\r\n      }\r\n    case Actions.ADMIN_SUCCESS_ORDER:\r\n    return {\r\n      ...state,\r\n      _isSuccess: true,\r\n      _isError: false,\r\n      _isLoading: false,\r\n      _isOrderUpdate: false,\r\n      message: action.message,\r\n      data: action.data\r\n    }\r\n    case Actions.SINGLE_DATA:\r\n      return{\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _hasMoreOrders: false,\r\n        _isOrderUpdate: false,\r\n        singleData: action.singleData\r\n      }\r\n    case Actions.ERROR_ORDER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        _hasMoreOrders: false,\r\n        _isOrderUpdate: false,\r\n      }\r\n    case Actions.DEFAULT_ORDER_RETURN:\r\n      return {\r\n        ...state,\r\n        _isOrderUpdate: false,\r\n      }\r\n    case Actions.CUSTOMER_RETURN:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        _isOrderUpdate: true,\r\n        message: action.message,\r\n        data: state.data?.map((singleOrder) => {\r\n          const updatedOrder = singleOrder.orderItems.map((order) => {\r\n            if(order.orderDetailId.toString() === action.singleData?.orderId.toString()){\r\n              return {...order, shipmentDetails: {...order.shipmentDetails, returnStatus: 'In Progress'}}\r\n            } else {\r\n              return order\r\n            }\r\n          })\r\n          return {\r\n            ...singleOrder,\r\n            orderItems : updatedOrder\r\n          }\r\n        }),\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n/** Thunk */\r\n\r\nconst getCustomerOrders = (offset: number, limit: number) => async(dispatch: Dispatch<CustomerOrderAction>) => {\r\n  dispatch(loadingOrder());\r\n  const response = await api.get('/getcustomerorders?limit='+limit+'&offset='+offset);\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as CustomerOrderResponse;\r\n    const _hasMoreOrders = res.data && res.data.length === pageSize || false;\r\n    dispatch(successOrder(res.data || [], _hasMoreOrders))\r\n  } else {\r\n    const res = response as CustomerOrderResponse;\r\n    dispatch(errorOrder(res.message || ''));\r\n  }\r\n}\r\n\r\nconst getAdminOrders = (userId=0) => async(dispatch: Dispatch<CustomerOrderAction>) => {\r\n  dispatch(loadingOrder());\r\n  const response = await api.get('/getadminorders?userId='+userId);\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as CustomerOrderResponse;\r\n    dispatch(adminSuccessOrder(res.data || []))\r\n  } else {\r\n    const res = response as CustomerOrderResponse;\r\n    dispatch(errorOrder(res.message || ''));\r\n  }\r\n};\r\n\r\nconst customerProductReturn = (orderDetailsId: number, returnReason: string,\r\n  orderNumber?: string, productName?: string, userName?: string) => async(dispatch: Dispatch<CustomerOrderAction>) => {\r\n  dispatch(loadingOrder());\r\n  const response = await api.post('/customerproductreturn',{\r\n    orderDetailsId,\r\n    returnReason,\r\n    orderNumber,\r\n    productName,\r\n    userName\r\n  });\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as CustomerOrderResponse;\r\n    dispatch(customerReturn(orderDetailsId))\r\n  } else {\r\n    const res = response as CustomerOrderResponse;\r\n    dispatch(errorOrder(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  getCustomerOrders,\r\n  customerOrdersReducer,\r\n  getAdminOrders,\r\n  singleOrder,\r\n  customerProductReturn,\r\n  defaulOrderReturn\r\n}","import { Action, Dispatch } from \"redux\";\r\nimport { OrderShipper, Order } from \"types\";\r\nimport { api } from \"services\";\r\nimport { HttpStatusCode } from \"appConstants\";\r\n\r\nexport interface ShipperAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: OrderShipper[]\r\n}\r\n\r\nexport interface ShipperResponse {\r\n  message?: string\r\n  data?: OrderShipper[]\r\n}\r\n\r\nexport interface Shipper {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: OrderShipper[];\r\n}\r\n\r\nconst initialState = {\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _isSuccess: false,\r\n  message: '',\r\n  data: []\r\n} as Shipper\r\n\r\nenum Actions {\r\n  LOADING_SHIPPER = 'LOADING_SHIPPER',\r\n  ERROR_SHIPPER = 'ERROR_SHIPPER',\r\n  SUCCESS_SHIPPER = 'SUCCESS_SHIPPER',\r\n  DEFAULT_SHIPPER = 'DEFAULT_SHIPPER',\r\n  SET_SHIPPER = 'SET_SHIPPER',\r\n  UPDATE_SHIPPER_SUCCESS = 'UPDATE_SHIPPER_SUCCESS',\r\n  DELETE_SHIPPER_SUCCESS = 'DELETE_SHIPPER_SUCCESS'\r\n}\r\n\r\nconst loadingShipper = () => ({\r\n  type: Actions.LOADING_SHIPPER\r\n});\r\n\r\nconst successShipper = (message: string) => ({\r\n  type: Actions.SUCCESS_SHIPPER,\r\n  message\r\n});\r\n\r\nconst errorShipper = (message: string) => ({\r\n  type: Actions.ERROR_SHIPPER,\r\n  message\r\n});\r\n\r\nconst defaultShipper = () => ({\r\n  type: Actions.DEFAULT_SHIPPER\r\n});\r\n\r\nconst setShipper = (data: OrderShipper[]) => ({\r\n  type: Actions.SET_SHIPPER,\r\n  data\r\n});\r\n\r\nconst updateShipperSuccess = (data: OrderShipper[], message: string) => ({\r\n  type: Actions.UPDATE_SHIPPER_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst deleteShipperSuccess = (data: OrderShipper[], message: string) => ({\r\n  type: Actions.DELETE_SHIPPER_SUCCESS,\r\n  data,\r\n  message\r\n});\r\n\r\nconst shipperReducer = (state = initialState, action: ShipperAction): Shipper => {\r\n  switch (action.type) {\r\n    case Actions.LOADING_SHIPPER:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess:false,\r\n        message: ''\r\n      }\r\n    case Actions.SUCCESS_SHIPPER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.ERROR_SHIPPER:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_SHIPPER:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.UPDATE_SHIPPER_SUCCESS:\r\n      const originalState = state.data || [];\r\n      const updatedValue = action.data || [];\r\n      const updatedState = originalState.filter(d => {\r\n        return d.shipperId != updatedValue[0].shipperId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updatedState,\r\n          ...updatedValue\r\n        ]\r\n      }\r\n    case Actions.DELETE_SHIPPER_SUCCESS:\r\n      const orgState = state.data || [];\r\n      const updValue = action.data || [];\r\n      const updState = orgState.filter(d => {\r\n        return d.shipperId != updValue[0].shipperId\r\n      });\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: [\r\n          ...updState\r\n        ]\r\n      }\r\n    case Actions.DEFAULT_SHIPPER:\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/** Thunk */\r\n\r\nconst saveShipper = (shipper: OrderShipper) => async (dispatch: Dispatch<ShipperAction>) => {\r\n  dispatch(loadingShipper());\r\n  const response = await api.post('/shipper',\r\n    {\r\n      shipper_name: shipper.shipperName,\r\n      shipper_link: shipper.trackingLink,\r\n      shipper_id: 0,\r\n      delete_flag: false\r\n    });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ShipperResponse\r\n    dispatch(successShipper(res.message || ''));\r\n  } else {\r\n    const res = response as ShipperResponse\r\n    dispatch(errorShipper(res.message || ''));\r\n  }\r\n}\r\n\r\nconst getShippers = () => async (dispatch: Dispatch<ShipperAction>) => {\r\n  dispatch(loadingShipper());\r\n\r\n  const response = await api.get('/shipper');\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as ShipperResponse;\r\n    dispatch(setShipper(res.data || []));\r\n  } else {\r\n    const res = response as ShipperResponse;\r\n    dispatch(errorShipper(res.message || ''))\r\n  }\r\n}\r\n\r\nconst updateShipper = (shipper: OrderShipper, delete_flag= false) => async (dispatch: Dispatch<ShipperAction>) => {\r\n  dispatch(loadingShipper());\r\n\r\n  const response = await api.post('/shipper', {\r\n    shipper_name: shipper.shipperName,\r\n    shipper_link: shipper.trackingLink,\r\n    shipper_id: shipper.shipperId,\r\n    delete_flag\r\n  });\r\n\r\n  if (response.status === HttpStatusCode.OK) {\r\n    const res = response.data as ShipperResponse;\r\n    if(delete_flag){\r\n      dispatch(deleteShipperSuccess([shipper], res.message || ''))\r\n    }else {\r\n      dispatch(updateShipperSuccess([shipper], res.message || ''));\r\n    }\r\n  } else {\r\n    const res = response as ShipperResponse\r\n    dispatch(errorShipper(res.message || ''));\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  shipperReducer,\r\n  saveShipper,\r\n  getShippers,\r\n  updateShipper\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { OrderUpdateAdmin } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode, pageSize } from 'appConstants';\r\n\r\nexport interface ShipmentAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: OrderUpdateAdmin;\r\n};\r\n\r\ninterface ShipmentResponse {\r\n  message?: string;\r\n  data?: OrderUpdateAdmin;\r\n};\r\n\r\nexport interface Shipment {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly _hasMoreOrders?: boolean;\r\n  readonly message?: string;\r\n  readonly data?: OrderUpdateAdmin;\r\n};\r\n\r\nenum Actions{\r\n  LOADING_SHIPMENT= 'LOADING_SHIPMENT',\r\n  SUCCESS_SHIPMENT= 'SUCCESS_SHIPMENT',\r\n  ERROR_SHIPMENT= 'ERROR_SHIPMENT',\r\n};\r\n\r\nconst loadingShipment= (data: OrderUpdateAdmin) => ({\r\n  type: Actions.LOADING_SHIPMENT,\r\n  data\r\n});\r\n\r\nconst successShipment= (data: OrderUpdateAdmin, message: string) => ({\r\n  type: Actions.SUCCESS_SHIPMENT,\r\n  data,\r\n  message,\r\n});\r\n\r\nconst errorShipment= (message: string) => ({\r\n  type: Actions.ERROR_SHIPMENT,\r\n  message,\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  _hasMoreOrders: false,\r\n  message: '',\r\n  data:{}\r\n} as Shipment\r\n\r\nconst shipmentReducer = (state= initialState, action: ShipmentAction): Shipment => {\r\n  switch(action.type){\r\n    case Actions.LOADING_SHIPMENT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: true,\r\n        data: action.data,\r\n      }\r\n    case Actions.SUCCESS_SHIPMENT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.ERROR_SHIPMENT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        message: action.message,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n/** Thunk */\r\n\r\nconst updateOrderAdmin = (orderUpdate: OrderUpdateAdmin, sendTrackingEmail: boolean) => async(dispatch: Dispatch<ShipmentAction>) => {\r\n  dispatch(loadingShipment(orderUpdate));\r\n  const response = await api.post('/shipment',{\r\n    deliveryDate: orderUpdate.deliveryDate,\r\n    orderDetailId: orderUpdate.orderDetailId,\r\n    paymentReturned: orderUpdate.paymentReturned?.toString(),\r\n    returnStatus: orderUpdate.returnStatus?.toString(),\r\n    shipmentId: orderUpdate.shipmentId,\r\n    shipper: orderUpdate.shipper?.toString(),\r\n    shippingDate: orderUpdate.shippingDate,\r\n    trackingNumber: orderUpdate.trackingNumber?.toString() || '',\r\n    customerEmail: orderUpdate.customerEmail,\r\n    orderNumber: orderUpdate.orderNumber,\r\n    customerName: orderUpdate.customerName,\r\n    sendTrackingEmail\r\n  } as OrderUpdateAdmin);\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as ShipmentResponse;\r\n    dispatch(successShipment(orderUpdate, res.message|| ''));\r\n  } else {\r\n    const res = response as ShipmentResponse;\r\n    dispatch(errorShipment(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  shipmentReducer,\r\n  updateOrderAdmin\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { ProductItem } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface RelatedProductAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\ninterface RelatedProductResponse {\r\n   message?: string;\r\n   data?: ProductItem[];\r\n}\r\n\r\nexport interface RelatedProduct {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_RELATED_PRODUCT= 'LOADING_RELATED_PRODUCT',\r\n  SUCCESS_RELATED_PRODUCT= 'SUCCESS_RELATED_PRODUCT',\r\n  ERROR_RELATED_PRODUCT= 'ERROR_RELATED_PRODUCT',\r\n  SET_RELATED_PRODUCT= 'SET_RELATED_PRODUCT',\r\n}\r\n\r\nconst loadingRelatedProduct= () => ({\r\n  type: Actions.LOADING_RELATED_PRODUCT\r\n});\r\n\r\nconst successRelatedProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_RELATED_PRODUCT,\r\n  message\r\n});\r\n\r\nconst errorRelatedProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_RELATED_PRODUCT,\r\n  message\r\n});\r\n\r\nconst setRelatedProduct= (data: ProductItem[]) => ({\r\n  type: Actions.SET_RELATED_PRODUCT,\r\n  data\r\n});\r\n\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as RelatedProduct\r\n\r\n\r\nconst relatedProductReducer = (state= initialState, action: RelatedProductAction): RelatedProduct => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_RELATED_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_RELATED_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_RELATED_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_RELATED_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/**Thunk */\r\n\r\n\r\nconst getRelatedProduct= (subcategoryId: number, productId: number) => async (dispatch: Dispatch<RelatedProductAction>) => {\r\n  dispatch(loadingRelatedProduct());\r\n\r\n  const response = await api.post('/relatedproducts',{\r\n    subcategoryId,\r\n    productId\r\n  });\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as RelatedProductResponse;\r\n    dispatch(setRelatedProduct(res.data || []))\r\n  } else {\r\n    const res = response as RelatedProductResponse;\r\n    dispatch(errorRelatedProduct(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  relatedProductReducer,\r\n  getRelatedProduct\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { ProductItem } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface TrendingProductAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\ninterface TrendingProductResponse {\r\n   message?: string;\r\n   data?: ProductItem[];\r\n}\r\n\r\nexport interface TrendingProduct {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_TRENDING_PRODUCT= 'LOADING_TRENDING_PRODUCT',\r\n  SUCCESS_TRENDING_PRODUCT= 'SUCCESS_TRENDING_PRODUCT',\r\n  ERROR_TRENDING_PRODUCT= 'ERROR_TRENDING_PRODUCT',\r\n  SET_TRENDING_PRODUCT= 'SET_TRENDING_PRODUCT',\r\n}\r\n\r\nconst loadingTrendingProduct= () => ({\r\n  type: Actions.LOADING_TRENDING_PRODUCT\r\n});\r\n\r\nconst successTrendingProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_TRENDING_PRODUCT,\r\n  message\r\n});\r\n\r\nconst errorTrendingProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_TRENDING_PRODUCT,\r\n  message\r\n});\r\n\r\nconst setTrendingProduct= (data: ProductItem[]) => ({\r\n  type: Actions.SET_TRENDING_PRODUCT,\r\n  data\r\n});\r\n\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as TrendingProduct\r\n\r\n\r\nconst trendingProductReducer = (state= initialState, action: TrendingProductAction): TrendingProduct => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_TRENDING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_TRENDING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_TRENDING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_TRENDING_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/**Thunk */\r\n\r\n\r\nconst getTrendingProduct= () => async (dispatch: Dispatch<TrendingProductAction>) => {\r\n  dispatch(loadingTrendingProduct());\r\n\r\n  const response = await api.get('/trendinglatest?type=2');\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as TrendingProductResponse;\r\n    dispatch(setTrendingProduct(res.data || []))\r\n  } else {\r\n    const res = response as TrendingProductResponse;\r\n    dispatch(errorTrendingProduct(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  trendingProductReducer,\r\n  getTrendingProduct\r\n}","import {Action, Dispatch} from 'redux';\r\nimport { ProductItem } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode } from 'appConstants';\r\n\r\n\r\nexport interface LatestProductAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\ninterface LatestProductResponse {\r\n   message?: string;\r\n   data?: ProductItem[];\r\n}\r\n\r\nexport interface LatestProduct {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductItem[];\r\n}\r\n\r\nenum Actions{\r\n  LOADING_LATEST_PRODUCT= 'LOADING_LATEST_PRODUCT',\r\n  SUCCESS_LATEST_PRODUCT= 'SUCCESS_LATEST_PRODUCT',\r\n  ERROR_LATEST_PRODUCT= 'ERROR_LATEST_PRODUCT',\r\n  SET_LATEST_PRODUCT= 'SET_LATEST_PRODUCT',\r\n}\r\n\r\nconst loadingLatestProduct= () => ({\r\n  type: Actions.LOADING_LATEST_PRODUCT\r\n});\r\n\r\nconst successLatestProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_LATEST_PRODUCT,\r\n  message\r\n});\r\n\r\nconst errorLatestProduct= (message: string) => ({\r\n  type: Actions.SUCCESS_LATEST_PRODUCT,\r\n  message\r\n});\r\n\r\nconst setLatestProduct= (data: ProductItem[]) => ({\r\n  type: Actions.SET_LATEST_PRODUCT,\r\n  data\r\n});\r\n\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:[]\r\n} as LatestProduct\r\n\r\n\r\nconst latestProductReducer = (state= initialState, action: LatestProductAction): LatestProduct => {\r\n  switch(action.type){\r\n    case Actions.SUCCESS_LATEST_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.LOADING_LATEST_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: true,\r\n        _isError: false,\r\n        _isSuccess: false\r\n      }\r\n    case Actions.ERROR_LATEST_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isError: true,\r\n        _isSuccess: false,\r\n        _isLoading: false,\r\n        message: action.message\r\n      }\r\n    case Actions.SET_LATEST_PRODUCT:\r\n      return {\r\n        ...state,\r\n        _isLoading: false,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        message: '',\r\n        data: action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/**Thunk */\r\n\r\n\r\nconst getLatestProduct= () => async (dispatch: Dispatch<LatestProductAction>) => {\r\n  dispatch(loadingLatestProduct());\r\n\r\n  const response = await api.get('/trendinglatest?type=1');\r\n\r\n  if(response.status === HttpStatusCode.OK){\r\n    const res = response.data as LatestProductResponse;\r\n    dispatch(setLatestProduct(res.data || []))\r\n  } else {\r\n    const res = response as LatestProductResponse;\r\n    dispatch(errorLatestProduct(res.message || ''));\r\n  }\r\n}\r\n\r\nexport {\r\n  latestProductReducer,\r\n  getLatestProduct\r\n}","import { Action, Dispatch } from 'redux';\r\nimport { Search as ProductSearch } from 'types';\r\nimport { api } from 'services';\r\nimport { HttpStatusCode, pageSize } from 'appConstants';\r\n\r\nexport interface SearchAction extends Action {\r\n  readonly message?: string;\r\n  readonly data?: ProductSearch;\r\n};\r\n\r\ninterface SearchResponse {\r\n  message?: string;\r\n  data?: ProductSearch;\r\n};\r\n\r\nexport interface Search {\r\n  readonly _isLoading: boolean;\r\n  readonly _isError: boolean;\r\n  readonly _isSuccess: boolean;\r\n  readonly message?: string;\r\n  readonly data?: ProductSearch;\r\n};\r\n\r\nenum Actions{\r\n  LOADING_SEARCH= 'LOADING_SEARCH',\r\n  SET_SEARCH= 'SET_SEARCH',\r\n  ERROR_SEARCH= 'ERROR_SEARCH',\r\n};\r\n\r\nconst loadingSearch= (data: ProductSearch) => ({\r\n  type: Actions.LOADING_SEARCH,\r\n  data\r\n});\r\n\r\nconst setSearch= (data: ProductSearch) => ({\r\n  type: Actions.SET_SEARCH,\r\n  data,\r\n});\r\n\r\nconst errorSearch= (message: string) => ({\r\n  type: Actions.ERROR_SEARCH,\r\n  message,\r\n});\r\n\r\nconst initialState = {\r\n  _isSuccess: false,\r\n  _isLoading: false,\r\n  _isError: false,\r\n  message: '',\r\n  data:{}\r\n} as Search\r\n\r\nconst searchReducer = (state= initialState, action: SearchAction): Search => {\r\n  switch(action.type){\r\n    case Actions.LOADING_SEARCH:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: false,\r\n        _isLoading: true,\r\n        data: action.data,\r\n      }\r\n    case Actions.SET_SEARCH:\r\n      return {\r\n        ...state,\r\n        _isSuccess: true,\r\n        _isError: false,\r\n        _isLoading: false,\r\n        message: action.message,\r\n        data: action.data\r\n      }\r\n    case Actions.ERROR_SEARCH:\r\n      return {\r\n        ...state,\r\n        _isSuccess: false,\r\n        _isError: true,\r\n        _isLoading: false,\r\n        message: action.message,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n\r\n\r\nexport {\r\n  searchReducer,\r\n  setSearch\r\n}","import { Action } from \"redux\";\r\nimport { CustomerShippment as CustomerShippmentType } from \"types\";\r\n\r\nexport interface CustomerShippmentAction extends Action {\r\n  readonly data?: CustomerShippmentType\r\n}\r\n\r\nexport interface CustomerShippment {\r\n  readonly data?: CustomerShippmentType;\r\n}\r\n\r\nconst initialState = {\r\n  data: {\r\n    shippmentPrice: ''\r\n  }\r\n} as CustomerShippment;\r\n\r\nenum Actions {\r\n  SET_SHIPPING_PRICE = 'SET_SHIPPING_PRICE',\r\n}\r\n\r\nconst setShippingPrice = (data: CustomerShippmentType) => ({\r\n  type: Actions.SET_SHIPPING_PRICE,\r\n  data\r\n});\r\n\r\nconst customerShippmentReducer = (state = initialState, action: CustomerShippmentAction): CustomerShippment => {\r\n  switch(action.type){\r\n    case Actions.SET_SHIPPING_PRICE:\r\n      return{\r\n        ...state,\r\n        data:{\r\n          shippmentPrice: action.data?.shippmentPrice || ''\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport {\r\n  customerShippmentReducer,\r\n  setShippingPrice\r\n}","import { createStore, combineReducers, Store, applyMiddleware, compose, Action } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport { userInformationReducer, UserInformation, UserInformationAction } from './UserInformation';\r\nimport { userLoginReducer, UserLoginRegister } from './Login';\r\nimport { userSettingsReducer, UserSetting } from './UserSettings';\r\nimport { Colour, colourReducer, ColourAction } from './Colour';\r\nimport { sizeReducer, Size, SizeAction } from './Size';\r\nimport { SubCategory, subCategoryReducer, SubCategoryAction } from './SubCategory';\r\nimport { Coupon, couponReducer, CouponAction } from './Coupon';\r\nimport { Product, productReducer, ProductAction } from './Product';\r\nimport { ProductCount, productCountReducer, ProductCountAction } from './ProductCount';\r\nimport { Cart, cartReducer, CartAction } from './Cart';\r\nimport { Checkout, checkoutReducer, CheckoutAction } from './Checkout';\r\nimport { UserLocation, userLocationReducer, UserLocationAction } from './UserLocation';\r\nimport { CustomerOrders, customerOrdersReducer, CustomerOrderAction } from './Order';\r\nimport { Shipper, shipperReducer, ShipperAction } from './Shipper';\r\nimport { Shipment, shipmentReducer, ShipmentAction } from './Shipment';\r\nimport { relatedProductReducer, RelatedProduct, RelatedProductAction } from './RelatedProducts';\r\nimport { TrendingProduct, trendingProductReducer, TrendingProductAction } from './TrendingProducts';\r\nimport { LatestProduct, latestProductReducer, LatestProductAction } from './LatestProducts';\r\nimport { searchReducer, SearchAction, Search } from './Search';\r\nimport { CustomerShippment, customerShippmentReducer, CustomerShippmentAction } from './CustomerShippment';\r\n\r\n\r\nexport type AppState = {\r\n  user: UserInformation;\r\n  userLogin: UserLoginRegister;\r\n  userSettings: UserSetting;\r\n  colour: Colour;\r\n  size: Size;\r\n  subCategory: SubCategory;\r\n  coupon: Coupon;\r\n  product: Product;\r\n  productCount: ProductCount;\r\n  cart: Cart;\r\n  checkout: Checkout;\r\n  userLocation: UserLocation;\r\n  customerOrders: CustomerOrders;\r\n  shipper: Shipper;\r\n  shipment: Shipment;\r\n  relatedProduct: RelatedProduct;\r\n  trendingProduct: TrendingProduct;\r\n  latestProduct: LatestProduct;\r\n  search: Search;\r\n  customerShippment: CustomerShippment\r\n}\r\n\r\nconst reducers = {\r\n  user: userInformationReducer,\r\n  userLogin: userLoginReducer,\r\n  userSettings: userSettingsReducer,\r\n  colour: colourReducer,\r\n  size: sizeReducer,\r\n  subCategory: subCategoryReducer,\r\n  coupon: couponReducer,\r\n  product: productReducer,\r\n  productCount: productCountReducer,\r\n  cart: cartReducer,\r\n  checkout: checkoutReducer,\r\n  userLocation: userLocationReducer,\r\n  customerOrders: customerOrdersReducer,\r\n  shipper: shipperReducer,\r\n  shipment: shipmentReducer,\r\n  relatedProduct: relatedProductReducer,\r\n  trendingProduct: trendingProductReducer,\r\n  latestProduct: latestProductReducer,\r\n  search: searchReducer,\r\n  customerShippment: customerShippmentReducer,\r\n};\r\n\r\ninterface AppActions {\r\n  user: UserInformationAction;\r\n  colour: ColourAction;\r\n  size: SizeAction;\r\n  subcategory: SubCategoryAction;\r\n  coupon: CouponAction;\r\n  product: ProductAction;\r\n  productCount: ProductCountAction;\r\n  cart: CartAction;\r\n  checkout: CheckoutAction;\r\n  userLocation: UserLocationAction;\r\n  customerOrders: CustomerOrderAction;\r\n  shipper: ShipperAction;\r\n  shipment: ShipmentAction;\r\n  relatedProduct: RelatedProductAction;\r\n  trendingProduct: TrendingProductAction;\r\n  latestProduct: LatestProductAction;\r\n  search: SearchAction;\r\n  customerShippment: CustomerShippmentAction;\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: Function;\r\n    store: Store<AppState>;\r\n  }\r\n};\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore<AppState, Action<AppActions>, any, any>(\r\n  combineReducers(reducers), \r\n  composeEnhancers(applyMiddleware(thunkMiddleware)\r\n  ));\r\n\r\nexport { store };\r\nexport * from './UserInformation';\r\nexport * from './Login';\r\nexport * from './UserSettings';\r\nexport * from './Colour';\r\nexport * from './Size';\r\nexport * from './SubCategory';\r\nexport * from './Coupon';\r\nexport * from './Product';\r\nexport * from './ProductCount';\r\nexport * from './Cart';\r\nexport * from './Checkout';\r\nexport * from './UserLocation';\r\nexport * from './Order';\r\nexport * from './Shipper';\r\nexport * from './Shipment';\r\nexport * from './RelatedProducts';\r\nexport * from './TrendingProducts';\r\nexport * from './LatestProducts';\r\nexport * from './CustomerShippment';","import React from 'react';\r\n\r\ninterface Props {\r\n  _isError: boolean,\r\n  _isSuccess: boolean,\r\n  message?: string\r\n}\r\n\r\nconst NotificationContainer : React.FunctionComponent<Props> = (props: Props) => {\r\n  const { \r\n    _isError,\r\n    _isSuccess,\r\n    message\r\n  } = props;\r\n  return (\r\n    <>\r\n    {\r\n      _isError &&\r\n      <div className=\"login-error-message\">\r\n        <span className=\"uk-notification-message-danger\"> {message} </span>\r\n      </div>\r\n    }\r\n    {\r\n      _isSuccess &&\r\n      <div className=\"login-error-message\">\r\n        <span className=\"uk-notification-message-success\"> {message} </span>\r\n      </div>\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\nexport {\r\n  NotificationContainer\r\n}","import React from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { PayPalButtonProps, PayPalButtonState } from 'types';\r\n\r\ndeclare global {\r\n  interface Window { paypal: any }\r\n}\r\n\r\nclass PayPalButton extends React.Component<PayPalButtonProps, PayPalButtonState> {\r\n  static propTypes = {\r\n      amount: PropTypes.oneOfType([\r\n          PropTypes.number,\r\n          PropTypes.string,\r\n      ]),\r\n      currency: PropTypes.oneOfType([\r\n          PropTypes.number,\r\n          PropTypes.string,\r\n      ]),\r\n      shippingPreference: PropTypes.string,\r\n      onSuccess: PropTypes.func,\r\n      catchError: PropTypes.func,\r\n      onError: PropTypes.func,\r\n      createOrder: PropTypes.func,\r\n      createSubscription: PropTypes.func,\r\n      onApprove: PropTypes.func,\r\n      onCancel: PropTypes.func,\r\n      style: PropTypes.object,\r\n      options: PropTypes.shape({\r\n          clientId: PropTypes.string,\r\n          merchantId: PropTypes.string,\r\n          currency: PropTypes.oneOfType([\r\n              PropTypes.number,\r\n              PropTypes.string,\r\n          ]),\r\n          intent: PropTypes.string,\r\n          commit: PropTypes.oneOfType([\r\n              PropTypes.bool,\r\n              PropTypes.string\r\n          ]),\r\n          vault: PropTypes.oneOfType([\r\n              PropTypes.bool,\r\n              PropTypes.string\r\n          ]),\r\n          component: PropTypes.string,\r\n          disableFunding: PropTypes.string,\r\n          disableCard: PropTypes.string,\r\n          integrationDate: PropTypes.string,\r\n          locale: PropTypes.string,\r\n          buyerCountry: PropTypes.string,\r\n          debug: PropTypes.oneOfType([\r\n              PropTypes.bool,\r\n              PropTypes.string\r\n          ])\r\n      }),\r\n      onButtonReady: PropTypes.func,\r\n  }\r\n\r\n  static defaultProps = {\r\n      style: {},\r\n      options: {\r\n          clientId: \"sb\",\r\n          currency: \"USD\"\r\n      },\r\n      shippingPreference: \"GET_FROM_FILE\",\r\n  }\r\n\r\n  constructor(props: PayPalButtonProps) {\r\n      super(props);\r\n\r\n      this.state = {\r\n          isSdkReady: false,\r\n      };\r\n  }\r\n\r\n  componentDidMount() {\r\n      if (\r\n          typeof window !== \"undefined\" &&\r\n          window !== undefined &&\r\n          window.paypal === undefined\r\n      ) {\r\n          this.addPaypalSdk();\r\n      }\r\n      else if (\r\n          typeof window !== \"undefined\" &&\r\n          window !== undefined &&\r\n          window.paypal !== undefined &&\r\n          this.props.onButtonReady\r\n      ) {\r\n          this.props.onButtonReady();\r\n      }\r\n  }\r\n\r\n  createOrder(data: any, actions: any) {\r\n\r\n      const { currency, options, amount, shippingPreference } = this.props;\r\n\r\n      return actions.order.create({\r\n        purchase_units: [\r\n          {\r\n            amount: {\r\n              currency_code: currency\r\n                ? currency\r\n                : options && options.currency\r\n                ? options.currency\r\n                : \"USD\",\r\n              value: amount && amount.toString()\r\n            }\r\n          }\r\n        ],\r\n        application_context: {\r\n          shipping_preference: shippingPreference\r\n        }\r\n      });\r\n  }\r\n\r\n  onApprove(data: any, actions: any) {\r\n      return actions.order\r\n          .capture()\r\n          .then((details: any) => {\r\n              if (this.props.onSuccess) {\r\n                  return this.props.onSuccess(details, data);\r\n              }\r\n          })\r\n          .catch((err: any) => {\r\n              if (this.props.catchError) {\r\n                  return this.props.catchError(err);\r\n              }\r\n          });\r\n  }\r\n\r\n  onCancel(error:any){\r\n    if(this.props.onCancel){\r\n      this.props.onCancel(error);\r\n    }\r\n\r\n  }\r\n  render() {\r\n      const {\r\n          amount,\r\n          onSuccess,\r\n          createOrder,\r\n          createSubscription,\r\n          onApprove,\r\n          style,\r\n          onCancel,\r\n      } = this.props;\r\n      const { isSdkReady } = this.state;\r\n\r\n      if (\r\n          !isSdkReady &&\r\n          (typeof window === \"undefined\" || window.paypal === undefined)\r\n      ) {\r\n          return null;\r\n      }\r\n\r\n      const Button = window.paypal.Buttons.driver(\"react\", {\r\n          React,\r\n          ReactDOM,\r\n      });\r\n\r\n      const createOrderFn =\r\n          amount && !createOrder\r\n              ? (data: any, actions: any) => this.createOrder(data, actions)\r\n              : (data: any, actions: any) => createOrder && createOrder(data, actions);\r\n\r\n      return (\r\n          <Button\r\n              {...this.props}\r\n              createOrder={createSubscription ? undefined : createOrderFn}\r\n              createSubscription={createSubscription}\r\n              onCancel={\r\n                onCancel ? (error:any) => onCancel(error) : \r\n                (error:any) => this.onCancel(error)}\r\n              onApprove={\r\n                  onSuccess\r\n                      ? (data: any, actions: any) => this.onApprove(data, actions)\r\n                      : (data: any, actions: any) => onApprove && onApprove(data, actions)\r\n              }\r\n              style={style}\r\n          />\r\n      );\r\n  }\r\n\r\n  private addPaypalSdk() {\r\n      const { options, onButtonReady } = this.props;\r\n      const queryParams: string[] = [];\r\n\r\n      // replacing camelCase with dashes\r\n     if(options){\r\n      for (const [key, value] of Object.entries(options)) {\r\n        const name = key.split(/(?=[A-Z])/).join(\"-\").toLowerCase();\r\n        queryParams.push(`${name}=${value}`);\r\n      }\r\n      //   Object.keys(options).forEach(k => {\r\n      //     const name = k.split(/(?=[A-Z])/).join(\"-\").toLowerCase();\r\n      //     queryParams.push(`${name}=${options[k]}`);\r\n      // });\r\n     }\r\n\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?${queryParams.join(\"&\")}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n          this.setState({ isSdkReady: true });\r\n\r\n          if (onButtonReady) {\r\n              onButtonReady();\r\n          }\r\n      };\r\n      script.onerror = () => {\r\n          throw new Error(\"Paypal SDK could not be loaded.\");\r\n      };\r\n  \r\n      document.body.appendChild(script);\r\n  }\r\n}\r\nexport {\r\n  PayPalButton\r\n}","import React, { useEffect, useRef, useState, Dispatch, SetStateAction } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getPayPalOrder, AppState, savePayPalOrder, getCart, defaultCheckout } from 'reducers';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ProductCoupon } from 'types';\r\ndeclare global {\r\n  interface Window { paypal: any,paypalOrderId:any, didPriceChanged: boolean, paypalButton: any }\r\n}\r\n\r\ninterface Props {\r\n  cartTotalPrice: string;\r\n  cartTotalWithShipping: string;\r\n  quantityCount: number;\r\n  isStandard: boolean;\r\n  paymentMode: string;\r\n  setContainerIsCard: Dispatch<SetStateAction<boolean>>;\r\n  cartOrderId:number;\r\n}\r\nconst PayPalPayment : React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const paypalPaymentLoadingRef = useRef<HTMLButtonElement>(null);\r\n  const paypalModalRef = useRef<HTMLDivElement>(null)\r\n  const checkout = useSelector((state: AppState) => state.checkout);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const couponData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);\r\n  const [paypalPaymentMessage, setPaypalPaymentMessage] = useState(\"Please don't close this window while we process your payment.\");\r\n  const [paypalOrderId, setPayPalOrderId] = useState('');\r\n  const [paymentErroredOut, setPaymentErroredOut] = useState(false);\r\n  const [paymentSuccess, setPaymentSuccess] = useState(false);\r\n  const [isCard, setIsCard] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    if(props.paymentMode === 'paypal' && checkout.data && checkout.data.orderId){\r\n      setPayPalOrderId(checkout.data.orderId);\r\n      window.paypalOrderId = checkout.data.orderId\r\n    }\r\n  },[checkout.data]);\r\n\r\n  useEffect(() => {\r\n    if(props.cartTotalPrice !== '0'){\r\n      if (window.paypalButton) {\r\n        window.paypalButton.close();\r\n        delete window.paypalButton;\r\n        setTimeout(()=>{\r\n          history.go(0)\r\n        })\r\n      }\r\n      window.paypalButton = window.paypal.Buttons({\r\n        createOrder: function () {\r\n          if(!window.paypalOrderId){\r\n            if(!window.didPriceChanged){\r\n              togglePaymenModal('c');\r\n            }\r\n            return false;\r\n          } else {\r\n            paypalPaymentLoadingRef.current?.click();\r\n            return window.paypalOrderId;\r\n          }\r\n        },\r\n        onCancel: function (err:any) {\r\n          fundingType('credit');\r\n          window.paypalOrderId = '';\r\n        },\r\n        onApprove:function(data:any,actions:any) {\r\n          togglePaymenModal('b');\r\n          return actions.order.capture().then(function(details:any)  {\r\n            successPaypalPayment(data,details);\r\n           });\r\n        },\r\n        onClick: async function (d: any) {\r\n          window.paypalOrderId = '';\r\n          fundingType(d.fundingSource);\r\n          togglePaymenModal('d');\r\n          await dispatch(getPayPalOrder(props.cartTotalPrice.toString(), props.cartTotalWithShipping.toString(),props.cartOrderId,couponData && couponData[0] && couponData[0].couponId))\r\n        },\r\n        onError: function(data: any){\r\n          console.log('error')\r\n          console.log(data)\r\n        }\r\n      });\r\n      window.paypalButton.render('#paypal-button-container')\r\n    }\r\n    \r\n  },[props.cartTotalPrice,props.cartTotalWithShipping]);\r\n\r\n  useEffect(()=> {\r\n    if(checkout._priceChanged && props.paymentMode === 'paypal') {\r\n      window.didPriceChanged= true;\r\n      setPaypalPaymentMessage(checkout.message || '');\r\n      setTimeout(() => {\r\n        window.didPriceChanged = false;\r\n        history.go(0);\r\n        togglePaymenModal('e');\r\n      },5000);\r\n    }\r\n  },[checkout._priceChanged]);\r\n\r\n  const togglePaymenModal = (tt?:string) => {\r\n    paypalPaymentLoadingRef.current?.click();\r\n  };\r\n\r\n  const fundingType = (funding: string) => {\r\n    console.log(funding)\r\n    if(funding === 'card'){\r\n      setIsCard(true);\r\n      if(window.innerWidth > 959){\r\n        window.scrollTo({\r\n          top: 150,\r\n          behavior: 'smooth'\r\n        })\r\n      }\r\n      props.setContainerIsCard(true);\r\n\r\n    }else {\r\n      if(window.innerWidth > 959){\r\n        window.scrollTo(0,0);\r\n      }\r\n      setTimeout(()=>{\r\n        setIsCard(false);\r\n      props.setContainerIsCard(false)\r\n      },\r\n      1000)\r\n    }\r\n      setPaypalPaymentMessage(\"Please don't close this window while we process your payment.\");\r\n      setPaymentErroredOut(false);\r\n      setPaymentSuccess(false);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if(checkout._isPaymentSucceess){\r\n      setPaymentErroredOut(false);\r\n      setPaymentSuccess(true);\r\n      setPaypalPaymentMessage(checkout.message || \"\");\r\n      setTimeout(() => {\r\n        dispatch(defaultCheckout());\r\n        togglePaymenModal('f');\r\n        history.push('userinformation/orders');\r\n      }, 5000);\r\n    } else if(!checkout._isPaymentSucceess && checkout._isError) {\r\n      setPaymentErroredOut(true);\r\n      setPaymentSuccess(false);\r\n      setPaypalPaymentMessage(checkout.message || \"\");\r\n    }\r\n  },[checkout._isPaymentSucceess,checkout._isError])\r\n  const successPaypalPayment = (orderData: string, paymentData: string) => {\r\n\r\n    dispatch(savePayPalOrder({\r\n      paypalResponse: {\r\n        orderData,\r\n        paymentData\r\n      },\r\n      orderId: props.cartOrderId,\r\n      addressId: userData.data && userData.data.addressId || '',\r\n      quantity: props.quantityCount,\r\n      couponId: couponData && couponData[0] && couponData[0].couponId,\r\n      isStandard: props.isStandard\r\n    }))\r\n  };\r\n\r\n  return(\r\n    <>\r\n      <div id=\"paypal-button-container\"></div>\r\n      <button ref={paypalPaymentLoadingRef} id=\"payment-loading\" uk-toggle=\"target: #paypal-div\" type=\"button\">order</button>\r\n      <div id=\"paypal-div\" uk-modal=\"true; esc-close: false; bg-close: false\">\r\n        <div className=\"uk-modal-dialog uk-modal-body uk-margin-auto-vertical\">\r\n        {\r\n          (paymentSuccess || paymentErroredOut)  &&  <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n        }\r\n        <div ref={paypalModalRef} className=\"uk-modal-body uk-nav-center\">\r\n          <p>{paypalPaymentMessage}</p>\r\n            {\r\n              !paymentSuccess && !paymentErroredOut && <div  uk-spinner=\"true\"></div>\r\n            }\r\n            {\r\n              paymentSuccess && !paymentErroredOut && \r\n              <>\r\n              <span className=\"uk-label uk-label-success\">Redirecting to Orders <div  uk-spinner=\"true\"></div></span>\r\n              </>\r\n            }\r\n            {\r\n              paymentErroredOut && <span className=\"uk-label uk-label-danger\">Payment Failed</span> \r\n            } \r\n        </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport {\r\n  PayPalPayment\r\n}","import React, { useState, useEffect, Dispatch, SetStateAction } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppState, resendOTP } from 'reducers';\r\n\r\ninterface Props{\r\n  showOtpContainer: boolean;\r\n  setEnteredOTP: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\n\r\nconst CashOnDeliveryPayment: React.FunctionComponent<Props> = (props: Props) => {\r\n  const {\r\n    showOtpContainer\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n  const [timeLeft, setTimeLeft] = useState(30);\r\n  const [enteredOTP, setEnteredOTP] = useState('');\r\n  const checkout = useSelector((state: AppState) => state.checkout);\r\n\r\n  useEffect(()=> {\r\n    if(showOtpContainer){\r\n      const timer = setInterval(() => {\r\n        if(timeLeft > 0) {\r\n          setTimeLeft(timeLeft - 1);\r\n        }\r\n      },1000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  });\r\n\r\n  const resendOtpToCustomer = () => {\r\n    dispatch(resendOTP());\r\n    setTimeLeft(30)\r\n  };\r\n  return (\r\n    <section className=\"uk-card-body\">\r\n      <div className=\"uk-grid-small  uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n        <div className=\"uk-width-expand\">\r\n          <div className=\"uk-text-small\">Enter OTP</div>\r\n          {\r\n            timeLeft > 0 && !checkout._isError &&\r\n            <div className=\"uk-text-meta uk-text-small uk-text-danger\">Retry in {timeLeft}sec</div>\r\n          }\r\n        </div>\r\n        <div className=\"uk-text-right\">\r\n          <input \r\n            className=\"uk-input\"\r\n            type=\"text\"\r\n            value={enteredOTP}\r\n            onChange={(e) => {setEnteredOTP(e.currentTarget.value); props.setEnteredOTP(e.currentTarget.value)}}/>\r\n          {\r\n             timeLeft === 0 && !checkout._isError &&\r\n             <a \r\n            className=\"uk-text-meta uk-text-small uk-text-success uk-link-muted\"\r\n            onClick={()=> resendOtpToCustomer()}>Resend OTP</a>\r\n          }\r\n        </div>\r\n      </div>\r\n      {\r\n        checkout._isError && \r\n      <div className=\"uk-text-meta uk-text-small uk-text-danger\">{checkout.message}</div>\r\n      }\r\n      {\r\n        checkout._isFetchCodCodeSuccess && \r\n        <div className=\"login-error-message\">\r\n        <span className=\"uk-notification-message-success uk-text-meta uk-text-small uk-text-success\"> {checkout.message} </span>\r\n      </div>\r\n      }\r\n      \r\n    </section>\r\n  )\r\n}\r\n\r\nexport {\r\n  CashOnDeliveryPayment\r\n}","import React from 'react';\r\nimport { ProductItem, CustomerCart } from 'types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { getCurrencyIcon, calculateUserDiscount, showINRUSD } from 'services';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, UserLocation, Cart, addUpdateCart } from 'reducers';\r\n\r\ninterface Props {\r\n  productList: ProductItem[]\r\n}\r\n\r\nconst QuickProductList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n\r\n  const addToCart = (product: ProductItem)=> {\r\n    if(!userData.data?.userId){\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: product.productDetailId,\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: showINRUSD(userLocation.data || 'IN', product),\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, false))\r\n    } else {\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: '0',\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: '0',\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, true))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <div uk-slider=\"finite: true\">\r\n        <div className=\"uk-grid-small uk-flex-middle uk-margin-bottom\" uk-grid=\"true\">\r\n          <h2 className=\"uk-width-expand uk-text-center uk-text-left@s\">Related Products</h2>\r\n          <div className=\"uk-visible@s\">\r\n            <a className=\"tm-slidenav\" href=\"#\" uk-slider-item=\"previous\" uk-slidenav-previous=\"true\"></a>\r\n            <a className=\"tm-slidenav\" href=\"#\" uk-slider-item=\"next\" uk-slidenav-next=\"true\"></a>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n          <div className=\"uk-position-relative\">\r\n            <div className=\"uk-slider-container\">\r\n              <div className=\"uk-slider-items uk-grid-collapse uk-child-width-custom tm-products-grid\">\r\n                {\r\n                  props.productList.map((product, index) => {\r\n                    return (\r\n                      <article key={index} className=\"tm-product-card\">\r\n                        <div className=\"tm-product-card-media\">\r\n                          <div className=\"tm-ratio tm-ratio-4-3\">\r\n                            <a className=\"tm-media-box\" onClick={() => {window.scrollTo({top:0, behavior:'smooth'}); history.push('/productDetails/' + product.productId)}}>\r\n                              <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + product.imagePaths} alt={product.imageNames} /></figure>\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"tm-product-card-body\">\r\n                          <div className=\"tm-product-card-info\">\r\n                            <div className=\"uk-text-meta uk-margin-xsmall-bottom\">{product.productCategoryName}</div>\r\n                            <h3 className=\"tm-product-card-title\"><a className=\"uk-link-heading\" onClick={() => history.push('/productDetails/' + product.productId)}>{product.name}</a></h3>\r\n                          </div>\r\n                          <div className=\"tm-product-card-shop\">\r\n                            <div className=\"tm-product-card-prices\">\r\n                              {\r\n                                userData.data?.discount && userData.data?.discount !== '0' &&\r\n                                <del className=\"uk-text-meta\">{getCurrencyIcon(userLocation.data || 'IN')} {showINRUSD(userLocation.data || 'IN', product)}</del>\r\n                              }\r\n                              <div className=\"tm-product-card-price\">\r\n                                {getCurrencyIcon(userLocation.data || 'IN')} {calculateUserDiscount(userData.data?.discount || '0', showINRUSD(userLocation.data || 'IN', product))}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"tm-product-card-add\">\r\n                              <button className=\"uk-button uk-button-primary tm-product-card-add-button tm-shine js-add-to-cart\">\r\n                                {\r\n                                  cart._isLoading && <span uk-spinner=\"true\"></span>\r\n                                }\r\n                                {\r\n                                  !cart._isLoading && (\r\n                                    <>\r\n                                      <span className=\"tm-product-card-add-button-icon\" uk-icon=\"cart\" onClick={() => addToCart(product)}></span>\r\n                                      <span className=\"tm-product-card-add-button-text\">add to cart</span>\r\n                                    </>\r\n                                  )\r\n                                }\r\n\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </article>\r\n                    )\r\n                  })\r\n                }\r\n\r\n              </div>\r\n            </div>\r\n            <ul className=\"uk-slider-nav uk-dotnav uk-flex-center uk-margin-top uk-hidden@s\"></ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </section>\r\n  )\r\n}\r\n\r\nexport {\r\n  QuickProductList\r\n}","import React from 'react';\r\n\r\ninterface Props{\r\n  keyIndex: number\r\n}\r\nconst LoadingProductArticle: React.FunctionComponent<Props> = (props: Props) => {\r\n  return (\r\n    <article key={props.keyIndex} className=\"tm-product-card\">\r\n      <div className=\"tm-product-card-media\">\r\n        <div className=\"tm-ratio tm-ratio-4-3\">\r\n          <a className=\"tm-media-box\">\r\n            <figure className=\"tm-media-box-wrap\">\r\n              <div className=\"ph-item\">\r\n                <div className=\"ph-picture\"></div>\r\n              </div>\r\n            </figure>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div className=\"tm-product-card-body\">\r\n        <div className=\"tm-product-card-info\">\r\n          <div className=\"uk-text-meta uk-margin-xsmall-bottom\">\r\n            <div className=\"ph-item\">\r\n              <div>\r\n                <div className=\"ph-row\">\r\n                  <div className=\"ph-col-4\"></div>\r\n                  <div className=\"ph-col-8 empty\"></div>\r\n                  <div className=\"ph-col-6\"></div>\r\n                  <div className=\"ph-col-6 empty\"></div>\r\n\r\n                  <div className=\"ph-col-12 empty\"></div>\r\n                </div>\r\n              </div>\r\n              <div className=\"ph-col-1\">\r\n                <div className=\"ph-avatar\"></div>\r\n              </div>\r\n            </div></div>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport {\r\n  LoadingProductArticle\r\n}","import React, { useEffect } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\n\r\nconst ScrollToTopComponent: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    }\r\n  }, []);\r\n\r\n  return (null);\r\n}\r\n\r\nconst ScrollToTop = withRouter(ScrollToTopComponent);\r\n\r\nexport {\r\n  ScrollToTop\r\n} ","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst ContactUs: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a onClick={()=>history.push('/')}>Home</a></li>\r\n                <li><span>Contacts</span></li>\r\n              </ul>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom\">Contacts</h1>\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n                <section className=\"uk-width-1-1 uk-width-expand@m\">\r\n                  <article className=\"uk-card uk-card-default uk-card-small uk-card-body uk-article tm-ignore-container\">\r\n                    <div className=\"uk-child-width-1-1 uk-child-width-1-2@s uk-margin-top\" uk-grid=\"true\">\r\n                      <section>\r\n                        <h3>Store</h3>\r\n                        <ul className=\"uk-list\">\r\n                          {/* <li>\r\n                            <a className=\"uk-link-heading\" href=\"#\"><span className=\"uk-margin-small-right\" uk-icon=\"receiver\"></span><span className=\"tm-pseudo\">8 800 799 99 99</span></a>\r\n                          </li>\r\n                          <li>\r\n                            <a className=\"uk-link-heading\" href=\"#\"><span className=\"uk-margin-small-right\" uk-icon=\"mail\"></span><span className=\"tm-pseudo\">example@example.com</span></a>\r\n                          </li> */}\r\n                          <li>\r\n                            <div><span className=\"uk-margin-small-right\" uk-icon=\"location\"></span><span>Karol Bagh Market, Delhi</span></div>\r\n                          </li>\r\n                          <li>\r\n                            <div><span className=\"uk-margin-small-right\" uk-icon=\"clock\"></span><span>Daily 10:00–20:00</span></div>\r\n                          </li>\r\n                        </ul>\r\n                      </section>\r\n                      <section>\r\n                        <h3>Feedback</h3>\r\n                        <dl className=\"uk-description-list\">\r\n                          <dt>Support</dt>\r\n                          <dd><a className=\"uk-link-muted\" href=\"mailto:support@basickart.com\">support@basickart.com</a></dd>\r\n                        </dl>\r\n                      </section>\r\n                      {/* <section className=\"uk-width-1-1\">\r\n                        <h2 className=\"uk-text-center\">Contact Us</h2>\r\n                        <form>\r\n                          <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label uk-form-label-required\">Name</div>\r\n                                <input className=\"uk-input\" type=\"text\" required />\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label uk-form-label-required\">Email</div>\r\n                                <input className=\"uk-input\" type=\"email\" required />\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Topic</div>\r\n                                <select className=\"uk-select\">\r\n                                  <option>Customer service</option>\r\n                                  <option>Tech support</option>\r\n                                  <option>Other</option>\r\n                                </select>\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Message</div>\r\n                                <textarea className=\"uk-textarea\"></textarea>\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"uk-text-center\"><button className=\"uk-button uk-button-primary\">Send</button></div>\r\n                          </div>\r\n                        </form>\r\n                      </section> */}\r\n                    </div>\r\n                  </article>\r\n                </section>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  ContactUs\r\n}","import React from 'react';\r\nimport * as Yup from 'yup';\r\n\r\nimport { User } from 'types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { UserInformation as UserInfo, saveUser } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport { CountryCodes } from 'appConstants';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\n\r\ninterface Props {\r\n  user?: UserInfo;\r\n  fromCart? : boolean\r\n};\r\n\r\n\r\nconst UserInformation: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const userData = props.user;\r\n  const isLoading = props.user?._isLoading;\r\n\r\n  const userInformationFormik = useFormik({\r\n    initialValues: {\r\n      firstName: userData?.data?.firstName || '',\r\n      lastName: userData?.data?.lastName || '',\r\n      mobile: userData?.data?.mobile || '',\r\n      dob: userData?.data?.dob || '',\r\n      gender: userData?.data?.gender || '',\r\n      country: userData?.data?.country || CountryCodes.filter(country => country.default)[0].countryCode,\r\n      state: userData?.data?.state || '',\r\n      city: userData?.data?.city || '',\r\n      pincode: userData?.data?.pincode || '',\r\n      addressLineOne: userData?.data?.addressLineOne || '',\r\n      addressLineTwo: userData?.data?.addressLineTwo || '',\r\n      addressLineThree: userData?.data?.addressLineThree || '',\r\n      addressId: userData?.data?.addressId || ''\r\n    },\r\n\r\n    validationSchema: Yup.object({\r\n      firstName: Yup.string().required('Required'),\r\n      mobile: Yup.string().required('Required').matches(/^((\\+)(\\d{1,4}[-]))(\\d{10}){1}?$/, 'Valid Format e.g., +91-9876543210'),\r\n      country: Yup.string().required('Required'),\r\n      state: Yup.string().required('Required'),\r\n      city: Yup.string().required('Required'),\r\n      pincode: Yup.string().required('Required'),\r\n      addressLineOne: Yup.string().required('Required')\r\n    }),\r\n\r\n    onSubmit: (value: User) => {\r\n      dispatch(saveUser({...value, discount: userData?.data?.discount}));\r\n    },\r\n\r\n    enableReinitialize: true\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={userInformationFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        {\r\n          !props.fromCart && <header className=\"uk-card-header\"><h1 className=\"uk-h2\">Personal Information</h1></header>\r\n        }\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Contact</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">First Name <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"firstName\"\r\n                        {...userInformationFormik.getFieldProps(\"firstName\")} />\r\n                      {\r\n                        userInformationFormik.touched.firstName && userInformationFormik.errors.firstName ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.firstName}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Last Name <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"lastName\"\r\n                        {...userInformationFormik.getFieldProps(\"lastName\")} />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Phone Number <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"tel\" id=\"mobile\"\r\n                        {...userInformationFormik.getFieldProps('mobile')} />\r\n                      {\r\n                        userInformationFormik.touched.mobile && userInformationFormik.errors.mobile ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.mobile}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Date of Birth</div>\r\n                      <input className=\"uk-input\" type=\"date\" id=\"dob\"\r\n                        {...userInformationFormik.getFieldProps('dob')} />\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Gender</div>\r\n                      <select className=\"uk-select\" id=\"gender\"\r\n                        {...userInformationFormik.getFieldProps('gender')}>\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"M\">Male</option>\r\n                        <option value=\"F\">Female</option>\r\n                        <option value=\"O\">Other</option>\r\n                      </select>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Address</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Country <span className=\"uk-text-danger\">*</span></div>\r\n                      <select className=\"uk-select\" id=\"country\"\r\n                        {...userInformationFormik.getFieldProps('country')}>\r\n                        {\r\n                          CountryCodes.map((country, index) => {\r\n                            return <option key={index} value={country.countryCode}>{country.name}</option>\r\n                          })\r\n                        }\r\n                      </select>\r\n                      {\r\n                        userInformationFormik.touched.country && userInformationFormik.errors.country ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.country}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">State <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"state\"\r\n                        {...userInformationFormik.getFieldProps('state')} />\r\n                      {\r\n                        userInformationFormik.touched.state && userInformationFormik.errors.state ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.state}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">City <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"city\"\r\n                        {...userInformationFormik.getFieldProps('city')} />\r\n                      {\r\n                        userInformationFormik.touched.city && userInformationFormik.errors.city ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.city}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">PIN code</div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"pincode\"\r\n                        {...userInformationFormik.getFieldProps('pincode')} />\r\n                      {\r\n                        userInformationFormik.touched.pincode && userInformationFormik.errors.pincode ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.pincode}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-1-1\">\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Flat, House no., Building, Company, Apartment  <span className=\"uk-text-danger\">*</span></div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"addressLineOne\"\r\n                        {...userInformationFormik.getFieldProps('addressLineOne')} />\r\n                      {\r\n                        userInformationFormik.touched.addressLineOne && userInformationFormik.errors.addressLineOne ? (\r\n                          <span className=\"uk-text-danger\">{userInformationFormik.errors.addressLineOne}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-1-1\">\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Area, Colony, Street, Sector, Village</div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"addressLineTwo\"\r\n                        {...userInformationFormik.getFieldProps('addressLineTwo')} />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-1-1\">\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Landmark</div>\r\n                      <input className=\"uk-input\" type=\"text\" id=\"addressLineThree\"\r\n                        {...userInformationFormik.getFieldProps('addressLineThree')} />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          {\r\n            props.user &&\r\n            <NotificationContainer {...props.user}/>\r\n          }\r\n          \r\n          <button disabled={isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              isLoading &&\r\n              <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserInformation\r\n}\r\n","import React, { useState } from 'react';\r\n\r\ninterface Props {\r\n  toggelDetails: Function;\r\n  showSettings: boolean;\r\n  showPersonal: boolean;\r\n  showOrders: boolean;\r\n}\r\n\r\nconst UserNav: React.FunctionComponent<Props> = (props: Props)=> {\r\n\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-1-4@m tm-aside-column user-nave-sticky\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\" uk-sticky=\"offset: 50; bottom: true; width-element: true\">\r\n        <div className=\"uk-card-header\">\r\n          <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div>\r\n              <div className=\"uk-grid-small uk-flex-center\" uk-grid=\"true\">\r\n                <div>\r\n                  <a className=\"uk-button uk-button-default uk-button-small\"><span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: cog; ratio: .75;\"></span><span>Quick Links</span></a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <nav>\r\n            <ul className=\"uk-nav uk-nav-default tm-nav quick-links\">\r\n              <li className={props.showPersonal ? 'uk-active' : ''}>\r\n                <a onClick={(): void => {props.toggelDetails('personal')}}>Personal Information</a>\r\n              </li>\r\n              <li className={props.showOrders ? 'uk-active' : ''}>\r\n                <a onClick={(): void => {props.toggelDetails('orders')}}>Orders</a>\r\n              </li>\r\n              <li className={props.showSettings ? 'uk-active' : ''}>\r\n                <a onClick={(): void => {props.toggelDetails('settings')}}>Settings</a>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { UserNav };","import React from 'react';\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { UserSetting, saveUserSettings } from 'reducers';\r\nimport { useDispatch } from 'react-redux';\r\nimport { UserSettings as UserSettingType } from 'types';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\n\r\ninterface Props {\r\n  user?: UserSetting;\r\n}\r\n\r\nconst UserSettings: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const user = props.user;\r\n  const isLoading = props.user?._isLoading;\r\n  const dispatch = useDispatch();\r\n  const userSettingFormik = useFormik({\r\n    initialValues: {\r\n      emailAddress: user?.data?.emailAddress || '',\r\n      currentPassword: '',\r\n      newPassword: '',\r\n      confirmPassword: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      emailAddress: Yup.string().required('Required'),\r\n      currentPassword: Yup.string().required('Required'),\r\n      newPassword: Yup.string().required('Required'),\r\n      confirmPassword: Yup.string().required('Required').oneOf([Yup.ref('newPassword'), ''], 'Password should match')\r\n    }),\r\n    onSubmit: (value: UserSettingType) => {\r\n      dispatch(saveUserSettings(value));\r\n      userSettingFormik.resetForm();\r\n    },\r\n\r\n    enableReinitialize: true\r\n  });\r\n\r\n\r\n  return (\r\n    <form onSubmit={userSettingFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <header className=\"uk-card-header\"><h1 className=\"uk-h2\">Settings</h1></header>\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Email</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Current Email</div>\r\n                      <input className=\"uk-input\" id=\"emailAddress\" type=\"email\" disabled\r\n                        {...userSettingFormik.getFieldProps('emailAddress')} />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Password</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Current Password</div>\r\n                      <input className=\"uk-input \" id=\"currentPassword\" type=\"password\"\r\n                        {...userSettingFormik.getFieldProps('currentPassword')} />\r\n                      {\r\n                        userSettingFormik.touched.currentPassword && userSettingFormik.errors.currentPassword ? (\r\n                          <span className=\"uk-text-danger\">{userSettingFormik.errors.currentPassword}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">New Password</div>\r\n                      <input className=\"uk-input \" type=\"password\"\r\n                        {...userSettingFormik.getFieldProps('newPassword')} />\r\n                      {\r\n                        userSettingFormik.touched.newPassword && userSettingFormik.errors.newPassword ? (\r\n                          <span className=\"uk-text-danger\">{userSettingFormik.errors.newPassword}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Confirm Password</div>\r\n                      <input className=\"uk-input \" type=\"password\"\r\n                        {...userSettingFormik.getFieldProps('confirmPassword')} />\r\n                      {\r\n                        userSettingFormik.touched.confirmPassword && userSettingFormik.errors.confirmPassword ? (\r\n                          <span className=\"uk-text-danger\">{userSettingFormik.errors.confirmPassword}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n        {\r\n            props.user &&\r\n            <NotificationContainer {...props.user}/>\r\n          }\r\n          <button disabled={isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              isLoading &&\r\n              <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n            }\r\n            <span>update password</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserSettings\r\n}","import React, { useEffect, useState, useRef } from 'react';\r\nimport { CustomerOrders, getCustomerOrders, customerProductReturn, defaulOrderReturn } from 'reducers/Order';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, UserLocation, getShippers, UserInformation } from 'reducers';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { pageSize, serverImagePath, AllowReturn } from 'appConstants';\r\nimport { Order, OrderItems, OrderShipper } from 'types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getCurrencyIcon } from 'services';\r\n\r\nconst Orders: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [hasMoreOrders, setHasMoreOrders] = useState(false);\r\n  const [selectedReason, setSelectedReason] = useState('');\r\n  const [showOrderDetailIndex, setShowOrderDetailIndex] = useState<number[]>([]);\r\n  const [returnOrderDetailId, setReturnOrderDetailId] = useState('');\r\n  const [returnOrderNumber, setReturnOrderNumber] = useState('');\r\n  const [returnProductName, setReturnProductName] = useState('');\r\n  const [showReturnError, setShowReturnError] = useState(false);\r\n  const returnModalRef = useRef<HTMLDivElement>(null);\r\n  const returnButtonRef = useRef<HTMLButtonElement>(null);\r\n  const orders = useSelector<AppState, CustomerOrders>(state => state.customerOrders || []);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const shipperData = useSelector<AppState, OrderShipper[]>(state => state.shipper.data || []);\r\n  const userData = useSelector<AppState, UserInformation>(state => state.user);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCustomerOrders(orders.data?.length || 0, pageSize));\r\n    dispatch(getShippers());\r\n  }, [])\r\n  const fetchNextOrders = () => {\r\n    dispatch(getCustomerOrders(orders.data?.length || 0, pageSize));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (orders._isOrderUpdate && returnModalRef.current?.getBoundingClientRect().top !== 0) {\r\n      const that = returnButtonRef.current;\r\n      setTimeout(() => {\r\n        that?.click();\r\n      }, 1000);\r\n    }\r\n  }, [orders._isOrderUpdate])\r\n\r\n  useEffect(() => {\r\n    setHasMoreOrders(orders._hasMoreOrders || false);\r\n  }, [orders._hasMoreOrders]);\r\n\r\n\r\n  const toggleShowOrderDetails = (orderId: number) => {\r\n    if (showOrderDetailIndex.indexOf(orderId) > -1) {\r\n      setShowOrderDetailIndex(showOrderDetailIndex.filter((id) => id !== orderId))\r\n    } else {\r\n      setShowOrderDetailIndex([...showOrderDetailIndex, orderId]);\r\n    }\r\n  }\r\n\r\n  const getShipmentLink = (shipper?: string, trackingNumber?: string) => {\r\n    if (shipper && trackingNumber) {\r\n      const shipperInfo = shipperData.filter(({ shipperId }) => shipperId === shipper);\r\n      if (shipperInfo[0]) {\r\n        return <a target=\"_blank\" href={shipperInfo[0].trackingLink + trackingNumber}>Track Package</a>\r\n      }\r\n    }\r\n    return 'Order Recived'\r\n  }\r\n\r\n  const checkReturnEligibilty = (deliveryDate: string, categoryId: string) => {\r\n    if(AllowReturn.indexOf(categoryId.toString()) > -1 ){\r\n      const dateDifference = (new Date()).getTime() - (new Date(deliveryDate)).getTime();\r\n      const differenceInDays = dateDifference / (1000 * 3600 * 24);\r\n      return Math.ceil(differenceInDays) <= 30;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const returnOrder = (orderDetailId?: string, reason?: string,\r\n    orderNumber?: string, productName?: string) => {\r\n    if(selectedReason || reason){\r\n      setShowReturnError(false);\r\n      dispatch(customerProductReturn(Number(orderDetailId) || Number(returnOrderDetailId), \r\n        reason||selectedReason,orderNumber || returnOrderNumber,productName || returnProductName, userData.data?.firstName));\r\n    } else {\r\n      setShowReturnError(true);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card  uk-card-small tm-ignore-container\">\r\n        {\r\n          orders.data && orders.data.length === 0 ?\r\n            <div className=\"uk-card uk-card-default uk-grid-collapse uk-child-width-1-1@s uk-margin\" uk-grid=\"true\">\r\n              <div>\r\n                <div className=\"uk-card-body uk-nav-center\">\r\n                  <p>You haven't ordered anything. Start some shopping now !!</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            :\r\n            <InfiniteScroll\r\n              dataLength={orders.data && orders.data.length || 0}\r\n              next={fetchNextOrders}\r\n              hasMore={hasMoreOrders}\r\n              loader={\r\n                <div style={{ textAlign: \"center\", marginTop: \"10px\" }}>\r\n                  <h4>Loading...</h4>\r\n                </div>\r\n              }\r\n              endMessage={\r\n                <p style={{ textAlign: \"center\" }}>\r\n                  <b>That's all for now !</b>\r\n                </p>\r\n              }\r\n            >\r\n              {\r\n                orders && orders.data &&\r\n                orders.data.map((order: Order, index: number) => {\r\n                  return (\r\n                    <div key={index} className=\"uk-card uk-card-hover uk-card-default uk-width-1-1@m\">\r\n                      <div className=\"uk-card-header\">\r\n                        <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                          <div className=\"uk-width-expand\">\r\n                            <div className=\"uk-float-left\">\r\n                              <h3 className=\"uk-card-title uk-margin-remove-bottom\">#{order.orderNumber}</h3>\r\n                              <p className=\"uk-text-meta uk-margin-remove-top\"><time>Ordered on {order.paymentDate.split(' ')[0]}</time></p>\r\n                            </div>\r\n                            <p className=\"uk-text-normal uk-margin-remove-top uk-float-right\"><time>Amount Paid: {getCurrencyIcon(userLocation.data || 'IN')} {order.totalPrice}</time></p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {\r\n                        showOrderDetailIndex.indexOf(Number(order.orderId)) === -1 &&\r\n                        <div className=\"uk-card uk-grid-collapse uk-child-width-1-3@s uk-margin uk-margin-remove-top\" uk-grid=\"true\">\r\n                          <div className=\"uk-card-media-left\">\r\n                            <div className=\"tm-ratio tm-ratio-16-9\">\r\n                              <a className=\"tm-media-box\" onClick={() => history.push('/productDetails/' + order.orderItems[0].productId)}>\r\n                                <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + order.orderItems[0].productImage} alt={order.orderItems[0].productImage} /> </figure>\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"uk-card-body\">\r\n                              {/* <h3 className=\"uk-card-title\">Media Left</h3> */}\r\n                              <ul className=\"uk-list\">\r\n                                <li>Product : <a onClick={() => history.push('/productDetails/' + order.orderItems[0].productId)}>{order.orderItems[0].productName}</a></li>\r\n                                <li>Quantity: {order.orderItems[0].quantity}</li>\r\n                                <li>Price: {getCurrencyIcon(userLocation.data || 'IN')} {order.orderItems[0].productPrice}</li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"uk-card-body\">\r\n                              {\r\n                                (order.orderItems[0].shipmentDetails?.returnStatus ||\r\n                                  order.orderItems[0].shipmentDetails?.paymentReturned) ?\r\n                                  <ul className=\"uk-list\">\r\n                                    {\r\n                                      order.orderItems[0].shipmentDetails?.paymentReturned === 'Yes' ?\r\n                                        <li>Return Status: <span className=\"uk-label uk-label-success\">Retured</span></li>\r\n                                        : order.orderItems[0].shipmentDetails?.paymentReturned === 'No' ?\r\n                                        <li>Return Status: <span className=\"uk-label uk-label-danger\">Declined</span></li>\r\n                                        : <li>Return Status: <span className=\"uk-label uk-label-warning\">{order.orderItems[0].shipmentDetails?.returnStatus}</span></li>\r\n                                    }\r\n                                  </ul>\r\n                                  :\r\n                                  order.orderItems[0].shipmentDetails?.deliveryDate ?\r\n                                    <ul className=\"uk-list\">\r\n                                      <li>Status : <span className=\"uk-label uk-label-success\">Delivered</span></li>\r\n                                      <li>Delivery Date: <span>{order.orderItems[0].shipmentDetails?.deliveryDate}</span></li>\r\n                                      {\r\n                                        checkReturnEligibilty(order.orderItems[0].shipmentDetails?.deliveryDate, order.orderItems[0].categoryId) &&\r\n                                        <li><button className=\"uk-button uk-button-primary uk-button-small\" uk-toggle=\"target: #return-modal\" \r\n                                        onClick={() => {\r\n                                          setSelectedReason('');\r\n                                          dispatch(defaulOrderReturn());\r\n                                          setReturnOrderDetailId(order.orderItems[0].orderDetailId);\r\n                                          setReturnProductName(order.orderItems[0].productName);\r\n                                          setReturnOrderNumber(order.orderNumber);\r\n                                        }}>Return</button></li>\r\n                                      }\r\n                                    </ul>\r\n                                    :\r\n                                    <ul className=\"uk-list\">\r\n                                      <li>Status : {getShipmentLink(order.orderItems[0].shipmentDetails?.shipper, order.orderItems[0].shipmentDetails?.trackingNumber)}</li>\r\n                                      <li>Shipment Date: <span>{order.orderItems[0].shipmentDetails?.shippingDate ? order.orderItems[0].shipmentDetails?.shippingDate : 'Awaited'}</span></li>\r\n                                      <li>\r\n                                        <button className=\"uk-button uk-button-primary uk-button-small\" \r\n                                          disabled={orders._isLoading}\r\n                                          {...(order.orderItems[0].shipmentDetails?.shippingDate && 'uk-toggle=\"target: #return-modal\"')}\r\n                                          onClick={() => { \r\n                                            if(order.orderItems[0].shipmentDetails?.shippingDate){\r\n                                              setSelectedReason('');\r\n                                              dispatch(defaulOrderReturn())\r\n                                              setReturnOrderDetailId(order.orderItems[0].orderDetailId);\r\n                                              setReturnProductName(order.orderItems[0].productName);\r\n                                              setReturnOrderNumber(order.orderNumber);\r\n                                            } else {\r\n                                              setSelectedReason('Order Canceled before shipping');\r\n                                               setReturnOrderDetailId(order.orderItems[0].orderDetailId);\r\n                                               setReturnProductName(order.orderItems[0].productName);\r\n                                               setReturnOrderNumber(order.orderNumber);\r\n                                               returnOrder(order.orderItems[0].orderDetailId,\r\n                                                'Order Canceled before shipping',order.orderNumber,order.orderItems[0].productName);\r\n                                            }\r\n                                            \r\n                                        }}>\r\n                                          {\r\n                                                        orders._isLoading &&  <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n                                                      }\r\n                                          {order.orderItems[0].shipmentDetails?.shippingDate ? 'Return' : 'Cancel'}\r\n                                        </button></li>\r\n                                    </ul>\r\n                              }\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      }\r\n                      {\r\n                        order.orderItems.length > 1 &&\r\n                        <ul uk-accordion=\"true\">\r\n                          <li>\r\n                            <a\r\n                              className=\"uk-accordion-title uk-nav-center uk-padding-bottom\"\r\n                              onClick={() => toggleShowOrderDetails(Number(order.orderId))}>\r\n                              {showOrderDetailIndex.indexOf(Number(order.orderId)) === -1 ? \"View More\" : \"View Less\"}</a>\r\n                            <div className=\"uk-accordion-content\">\r\n                              {\r\n                                order.orderItems.map((orderItem: OrderItems, index: number) => {\r\n                                  return (\r\n                                    <div key={index} className=\"uk-card uk-grid-collapse uk-child-width-1-3@s uk-margin uk-margin-remove-top\" uk-grid=\"true\">\r\n                                      <div className=\"uk-card-media-left\">\r\n                                        <div className=\"tm-ratio tm-ratio-16-9\">\r\n                                          <a className=\"tm-media-box\" onClick={() => history.push('/productDetails/' + orderItem.productId)}>\r\n                                            <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + orderItem.productImage} alt={orderItem.productImage} /> </figure>\r\n                                          </a>\r\n                                        </div>\r\n                                      </div>\r\n                                      <div>\r\n                                        <div className=\"uk-card-body\">\r\n                                          <ul className=\"uk-list\">\r\n                                            <li>Product : <a onClick={() => history.push('/productDetails/' + orderItem.productId)}>{orderItem.productName}</a></li>\r\n                                            <li>Quantity: {orderItem.quantity}</li>\r\n                                            <li>Price: {getCurrencyIcon(userLocation.data || 'IN')} {orderItem.productPrice}</li>\r\n                                          </ul>\r\n                                        </div>\r\n                                      </div>\r\n                                      <div>\r\n                                        <div className=\"uk-card-body\">\r\n                                          {\r\n                                            (orderItem.shipmentDetails?.returnStatus ||\r\n                                              orderItem.shipmentDetails?.paymentReturned) ?\r\n                                              <ul className=\"uk-list\">\r\n                                                {\r\n                                                  orderItem.shipmentDetails?.paymentReturned === 'Yes' ?\r\n                                                    <li>Return Status: <span className=\"uk-label uk-label-success\">Retured</span></li>\r\n                                                    : orderItem.shipmentDetails?.paymentReturned === 'No' ?\r\n                                                    <li>Return Status: <span className=\"uk-label uk-label-danger\">Declined</span></li>\r\n                                                    : <li>Return Status: <span className=\"uk-label uk-label-warning\">{orderItem.shipmentDetails?.returnStatus}</span></li>\r\n                                                }\r\n                                              </ul>\r\n                                              :\r\n                                              orderItem.shipmentDetails?.deliveryDate ?\r\n                                                <ul className=\"uk-list\">\r\n                                                  <li>Status : <span className=\"uk-label uk-label-success\">Delivered</span></li>\r\n                                                  <li>Delivery Date: <span>{orderItem.shipmentDetails?.deliveryDate}</span></li>\r\n                                                  {\r\n                                                    checkReturnEligibilty(orderItem.shipmentDetails?.deliveryDate, order.orderItems[0].categoryId) &&\r\n                                                    <li><button className=\"uk-button uk-button-primary uk-button-small\" uk-toggle=\"target: #return-modal\"\r\n                                                    onClick={() => { \r\n                                                      setSelectedReason('');\r\n                                                      dispatch(defaulOrderReturn());\r\n                                                      setReturnOrderDetailId(orderItem.orderDetailId);\r\n                                                      setReturnProductName(orderItem.productName);\r\n                                                      setReturnOrderNumber(order.orderNumber);\r\n                                                    }}>Return</button></li>\r\n                                                  }\r\n                                                </ul>\r\n                                                :\r\n                                                <ul className=\"uk-list\">\r\n                                                  <li>Status : {getShipmentLink(orderItem.shipmentDetails?.shipper, orderItem.shipmentDetails?.trackingNumber)}</li>\r\n                                                  <li>Shipment Date: <span>{orderItem.shipmentDetails?.shippingDate ? orderItem.shipmentDetails?.shippingDate : 'Awaited'}</span></li>\r\n                                                  <li>\r\n                                                    <button className=\"uk-button uk-button-primary uk-button-small\"\r\n                                                    disabled={orders._isLoading}\r\n                                                    {...(orderItem.shipmentDetails?.shippingDate && 'uk-toggle=\"target: #return-modal\"')}\r\n                                                      onClick={() => {\r\n                                                        debugger\r\n                                                        if(orderItem.shipmentDetails?.shippingDate){\r\n                                                          setSelectedReason('');\r\n                                                          setReturnOrderDetailId(orderItem.orderDetailId);\r\n                                                          setReturnProductName(orderItem.productName);\r\n                                                          setReturnOrderNumber(order.orderNumber);\r\n                                                          dispatch(defaulOrderReturn())\r\n                                                        } else {\r\n                                                          setSelectedReason('Order Canceled before shipping');\r\n                                                          setReturnOrderDetailId(orderItem.orderDetailId);\r\n                                                          setReturnProductName(orderItem.productName);\r\n                                                          setReturnOrderNumber(order.orderNumber);\r\n                                                          returnOrder(orderItem.orderDetailId,'Order Canceled before shipping',\r\n                                                          order.orderNumber,orderItem.productName);\r\n                                                        }\r\n                                                      }\r\n                                                    }>\r\n                                                      {\r\n                                                        orders._isLoading &&  <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n                                                      }\r\n                                                    {orderItem.shipmentDetails?.shippingDate ? 'Return' : 'Cancel'}</button></li>\r\n                                                </ul>\r\n                                          }\r\n                                        </div>\r\n                                      </div>\r\n\r\n                                    </div>\r\n                                  )\r\n                                })\r\n                              }\r\n                            </div>\r\n                          </li>\r\n                        </ul>\r\n                      }\r\n\r\n                    </div>\r\n                  )\r\n                })\r\n\r\n              }\r\n            </InfiniteScroll>\r\n        }\r\n\r\n      </div>\r\n      <button ref={returnButtonRef} uk-toggle=\"target: #return-modal\" style={{ visibility: \"hidden\" }}></button>\r\n      <div id=\"return-modal\" uk-modal=\"true\">\r\n        <div className=\"uk-modal-dialog uk-modal-body\">\r\n          <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n          <h2 className=\"uk-modal-title\">Thank you for ordering!</h2>\r\n          <p>Please choose the correct reason for return. This information will help us to improve our site</p>\r\n          <div ref={returnModalRef} className=\"uk-form-stacked\">\r\n            <div className=\"uk-margin\">\r\n              <div className=\"uk-form-controls\">\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Defective product')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Defective product\" checked={selectedReason === 'Defective product'} /><span className=\"coupon-message\">Defective product</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Image shown did not match the actual product')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Image shown did not match the actual product\" checked={selectedReason === 'Image shown did not match the actual product'} /><span className=\"coupon-message\">Image shown did not match the actual product</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Quality Issues')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Quality Issues\" checked={selectedReason === 'Quality Issues'} /><span className=\"coupon-message\">Quality Issues</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('I changed my mind')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"I changed my mind\" checked={selectedReason === 'I changed my mind'} /><span className=\"coupon-message\">I changed my mind</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Size or fit issues')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Size or fit issues\" checked={selectedReason === 'Size or fit issues'} /><span className=\"coupon-message\">Size or fit issues</span></label>\r\n                <label className=\"uk-display-block\" onClick={() => setSelectedReason('Other')}><input className=\"uk-radio\" type=\"radio\" name=\"returnReason\" value=\"Other\" checked={selectedReason === 'Other'} /><span className=\"coupon-message\">Other</span></label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <p><span className=\"uk-badge\">Note:</span> You confirm that the product is unused with the original tags intact.</p>\r\n          {\r\n            showReturnError && \r\n            <p className=\"uk-text-danger\">Please select one of the above reason.</p>\r\n          }\r\n          <p className=\"uk-text-right\">\r\n            {\r\n              !orders._isOrderUpdate ?\r\n                <button disabled={orders._isLoading}\r\n                  className=\"uk-button uk-button-primary\" type=\"button\" onClick={() => returnOrder()}>\r\n                  {\r\n                    orders._isLoading &&\r\n                    <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n                  }\r\n               Confirm Return</button>\r\n                :\r\n                <button disabled={orders._isOrderUpdate}\r\n                  className=\"uk-button uk-label-success\" type=\"button\" >\r\n                  <span uk-icon=\"icon:check\" />\r\n                Return Initaled.</button>\r\n            }\r\n\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  Orders\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { UserInformation, UserNav, UserSettings } from '.';\r\nimport { AppState, getUserSettings } from 'reducers';\r\nimport { Orders } from './Orders';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst UserContainer: React.FunctionComponent = () => {\r\n\r\n  /**\r\n   * Hooks\r\n   */\r\n  const { userTab } = useParams();\r\n  const [showSettings, setShowSettings] = useState(false);\r\n  const [showPersonal, setShowPersonal] = useState(false);\r\n  const [showOrders, setShowOrders] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const userData = useSelector((state: AppState) => state.user);\r\n\r\n  const userSettings = useSelector((state: AppState) => state.userSettings)\r\n  useEffect(() => {\r\n    dispatch(getUserSettings());\r\n    toggelDetails(userTab || '')\r\n  },[]);\r\n\r\n  useEffect(() => {\r\n    toggelDetails(userTab || '')\r\n  },[userTab])\r\n  /**\r\n   * Local Methods\r\n   */\r\n  const toggelDetails = (selected: string): void => {\r\n    if(selected === 'orders') {\r\n      setShowSettings(false);\r\n      setShowPersonal(false);\r\n      setShowOrders(true);\r\n    } else if(selected === 'settings') {\r\n      setShowSettings(true);\r\n      setShowPersonal(false);\r\n      setShowOrders(false);\r\n    } else {\r\n      setShowSettings(false);\r\n      setShowPersonal(true);\r\n      setShowOrders(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main>\r\n        <section className=\"uk-section uk-section-small\">\r\n          <div className=\"uk-container\">\r\n            <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n              <UserNav toggelDetails={toggelDetails}\r\n                showPersonal={showPersonal} \r\n                showSettings={showSettings} \r\n                showOrders={showOrders} />\r\n                {showPersonal && <UserInformation user={userData} />}\r\n                {showSettings &&  <UserSettings user={userSettings}/>}\r\n                {showOrders &&  <Orders/>}\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserContainer\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { Login, CustomerCart } from 'types'\r\nimport { CountryCodes } from 'appConstants';\r\nimport { useDispatch, useSelector, } from 'react-redux';\r\nimport { userLogin, AppState, defaultLoginRegister, userRegister, getUser, getCart, forgetPassword, addUpdateCart } from 'reducers';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst UserLogin: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector<AppState, boolean>(state => state.userLogin._isLoading);\r\n  const isError = useSelector<AppState, boolean>(state => state.userLogin._isError);\r\n  const _isSuccess = useSelector<AppState, boolean>(state => state.userLogin._isSuccess);\r\n  const responseMessage = useSelector<AppState, string | undefined>(state => state.userLogin.message);\r\n  const [loginRedirect, setLoginRedirect] = useState(false)\r\n\r\n  const loginFormik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n      mobile: '+91-',\r\n      isRegistration: false,\r\n      forgetPassword: false,\r\n      countryCode: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .required('Required')\r\n        .email('Invalid email address'),\r\n      password: Yup.string().when('forgetPassword',{\r\n        is: false,\r\n        then: Yup.string()\r\n        .required('Required')\r\n      }),\r\n      mobile: Yup.string().when('isRegistration', {\r\n        is: true,\r\n        then: Yup.string().required('Required')\r\n          .matches(/^((\\+)(\\d{1,4}[-]))(\\d{10}){1}?$/\r\n            , 'Valid Format e.g., +91-9876543210')\r\n      })\r\n    }),\r\n    onSubmit: (values: Login) => {\r\n      if (!loginFormik.values.isRegistration) {\r\n        if(loginFormik.values.forgetPassword){\r\n          dispatch(forgetPassword(values));\r\n        } else {\r\n          dispatch(userLogin({ email: values.email, password: values.password }));\r\n        }\r\n      } else {\r\n        dispatch(userRegister({ email: values.email, password: values.password, mobile: values.mobile }));\r\n      }\r\n    },\r\n  });\r\n\r\n  const onCountryChange = (event: React.FormEvent<HTMLSelectElement>): void => {\r\n    loginFormik.setFieldValue('mobile', event.currentTarget.value + '-')\r\n  };\r\n\r\n  const toggleLoginRegister = (isRegistration: boolean): void => {\r\n    loginFormik.resetForm();\r\n    loginFormik.setFieldValue('isRegistration', isRegistration);\r\n    loginFormik.setFieldValue('forgetPassword', false);\r\n    dispatch(defaultLoginRegister());\r\n  }\r\n\r\n  const onForgetPassword = () => {\r\n    loginFormik.setFieldValue('forgetPassword', true);\r\n  };\r\n\r\n  const addToDBCartAfterLogin = () => {\r\n    const cartData = JSON.parse(localStorage.getItem(\"basicKart-loggedOutCart\") || '[]');\r\n    cartData.forEach((cart: CustomerCart) => {\r\n      dispatch(addUpdateCart({\r\n        productDetailId: cart.productDetailId,\r\n        productQuantity: cart.productQuantity,\r\n        currencyType: cart.currencyType,\r\n        cartId: '0',\r\n        productImage: cart.productImage,\r\n        productImagePath: cart.productImagePath,\r\n        productName: cart.productName,\r\n        subcategory: cart.subcategory,\r\n        productPrice: '0',\r\n        productId: cart.productId,\r\n      },true))\r\n    });\r\n    localStorage.setItem('basicKart-loggedOutCart','[]');\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (loginFormik.values.isRegistration) {\r\n      loginFormik.setFieldValue('isRegistration', false);\r\n      loginFormik.setFieldValue('email', '');\r\n      loginFormik.setFieldValue('password', '');\r\n      loginFormik.touched.password = false;\r\n      loginFormik.touched.email = false;\r\n    } else {\r\n      if (_isSuccess) {\r\n        if(!loginFormik.values.forgetPassword){\r\n          setLoginRedirect(true);\r\n          dispatch(getUser());\r\n          dispatch(getCart());\r\n          addToDBCartAfterLogin();\r\n        }\r\n      }\r\n    }\r\n  }, [_isSuccess])\r\n\r\n  if (loginRedirect) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={loginFormik.handleSubmit} className=\"uk-form-stacked\">\r\n      <main>\r\n        <section className=\"uk-section uk-section-small\">\r\n          <div className=\"uk-container\">\r\n            <div className=\"uk-grid-medium justify-content-center \" uk-grid=\"true\">\r\n              <div className=\"uk-width-1-1 uk-width-1-3@m tm-aside-column user-nave-sticky\">\r\n                <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\" uk-sticky=\"offset: 80; bottom: true;\">\r\n                  <div className=\"uk-card-header\">\r\n                    <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                      <div>\r\n                        <div className=\"uk-grid-small uk-flex-center\" uk-grid=\"true\">\r\n                          <div>\r\n                            <a className={'uk-button uk-button-default uk-button-small ' + (!loginFormik.values.isRegistration ? 'login-register-active-button uk-active' : '')} onClick={(): void => toggleLoginRegister(false)}>\r\n                              <span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: sign-in; ratio: .75;\"></span>\r\n                              <span>Login</span>\r\n                            </a>\r\n                          </div>\r\n                          <div>\r\n                            <a className={'uk-button uk-button-default uk-button-small ' + (loginFormik.values.isRegistration ? 'login-register-active-button uk-active' : '')} onClick={(): void => toggleLoginRegister(true)}>\r\n                              <span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: pencil; ratio: .75;\"></span>\r\n                              <span>Register</span>\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    {\r\n                      isError &&\r\n                      <div className=\"login-error-message\">\r\n                        <span className=\"uk-notification-message-danger\"> {responseMessage} </span>\r\n                      </div>\r\n                    }\r\n                    {\r\n                      _isSuccess &&\r\n                      <div className=\"forget-password-message\">\r\n                        <span className=\"uk-notification-message-success\"> {responseMessage} </span>\r\n                      </div>\r\n                    }\r\n                    <nav>\r\n                      <ul className=\"uk-nav uk-nav-default tm-nav\">\r\n                        <li>\r\n                          <div className=\"uk-card-body\">\r\n                            <div className=\"uk-form-stacked\">\r\n                              <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n                                <fieldset className=\"uk-fieldset\">\r\n                                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                                    <div>\r\n                                      <label>\r\n                                        <div className=\"uk-form-label\">Email</div>\r\n                                        <input className=\"uk-input\" id=\"email\" type=\"text\"\r\n                                          {...loginFormik.getFieldProps('email')} />\r\n                                        {\r\n                                          loginFormik.touched.email && loginFormik.errors.email ? (\r\n                                            <span className=\"uk-text-danger\">{loginFormik.errors.email}</span>\r\n                                          ) : ''\r\n                                        }\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                </fieldset>\r\n                                {loginFormik.values.isRegistration &&\r\n                                  <fieldset className=\"uk-fieldset\">\r\n                                    <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                                      <div className=\"uk-width-1-3 uk-width-1-3@s\">\r\n                                        <label>\r\n                                          <div className=\"uk-form-label\">Country</div>\r\n                                          <select className=\"uk-select\" id=\"countryCode\"\r\n                                            onChange={onCountryChange}>\r\n                                            {\r\n                                              CountryCodes.map((country, index) => {\r\n                                                return <option key={index} value={country.Iso} selected={country.default}>{country.name}</option>\r\n                                              })\r\n                                            }\r\n                                          </select>\r\n                                        </label>\r\n                                      </div>\r\n                                      <div className=\"uk-width-expand\">\r\n                                        <label>\r\n                                          <div className=\"uk-form-label\">Mobile Number</div>\r\n                                          <input className=\"uk-input\" type=\"text\" id=\"mobile\"\r\n                                            {...loginFormik.getFieldProps('mobile')} />\r\n                                          {\r\n                                            loginFormik.touched.mobile && loginFormik.errors.mobile ? (\r\n                                              <span className=\"uk-text-danger\">{loginFormik.errors.mobile}</span>\r\n                                            ) : ''\r\n                                          }\r\n                                        </label>\r\n                                      </div>\r\n                                    </div>\r\n                                  </fieldset>\r\n                                }\r\n                                {\r\n                                  !loginFormik.values.forgetPassword &&\r\n                                  <fieldset className=\"uk-fieldset\">\r\n                                    <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                                      <div>\r\n                                        <label>\r\n                                          <div className=\"uk-form-label\">Password</div>\r\n                                          <input className=\"uk-input\" type=\"password\" id=\"password\"\r\n                                            {...loginFormik.getFieldProps('password')} />\r\n                                          {\r\n                                            loginFormik.touched.password && loginFormik.errors.password ? (\r\n                                              <span className=\"uk-text-danger\">{loginFormik.errors.password}</span>\r\n                                            ) : ''\r\n                                          }\r\n                                        </label>\r\n                                      </div>\r\n                                    </div>\r\n                                  </fieldset>\r\n                                }\r\n\r\n                              </div>\r\n                              {\r\n                                !loginFormik.values.isRegistration &&\r\n                                <div className=\"uk-text-right uk-margin-xsmall-top\">\r\n                                  <a className=\"uk-text-danger\" onClick={() => onForgetPassword()}> Forget Password ?</a>\r\n                                </div>\r\n                              }\r\n\r\n                              <div className=\"uk-card-footer uk-text-center top-border-none\">\r\n                                <button id=\"loginbtn\" disabled={isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                                  {\r\n                                    isLoading &&\r\n                                    <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                                  }\r\n                                  <span>Submit</span>\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </nav>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserLogin\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst MainFooter: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <footer>\r\n      <section className=\"uk-section uk-section-secondary uk-section-small uk-light\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1 uk-child-width-1-4@m\" uk-grid=\"true\">\r\n            <div>\r\n              <a className=\"uk-logo\" href=\"index.html\"><img src=\"/logo.png\" alt=\"Logo\" width=\"150\" /></a>\r\n              <p className=\"uk-text-small\"></p>\r\n              {/* <ul className=\"uk-iconnav\">\r\n                <li><a href=\"#\" title=\"Facebook\" uk-icon=\"facebook\"></a></li>\r\n                <li><a href=\"#\" title=\"Twitter\" uk-icon=\"twitter\"></a></li>\r\n                <li><a href=\"#\" title=\"YouTube\" uk-icon=\"youtube\"></a></li>\r\n                <li><a href=\"#\" title=\"Instagram\" uk-icon=\"instagram\"></a></li>\r\n              </ul> */}\r\n            </div>\r\n            <div>\r\n              <nav className=\"uk-grid-small uk-child-width-1-2\" uk-grid=\"true\">\r\n                <div>\r\n                  <ul className=\"uk-nav uk-nav-default\">\r\n                    <li><a onClick={() => history.push('/product/lingerie')}>Lingerie</a></li>\r\n                    <li><a onClick={() => history.push('/product/footwear')}>Footwear</a></li>\r\n                    <li><a onClick={() => history.push('/product/bindi')}>Bindi</a></li>\r\n                    <li><a href=\"#\">Home Essential</a></li>\r\n                  </ul>\r\n                </div>\r\n                <div>\r\n                  <ul className=\"uk-nav uk-nav-default\">\r\n                    <li><a href=\"#\">About</a></li>\r\n                    <li><a onClick={() => history.push('/contactus')}>Contacts</a></li>\r\n                  </ul>\r\n                </div>\r\n              </nav>\r\n            </div>\r\n            <div>\r\n              <ul className=\"uk-list uk-text-small\">\r\n                {/* <li>\r\n                  <a className=\"uk-link-muted\" href=\"#\"><span className=\"uk-margin-small-right\" uk-icon=\"receiver\"></span><span className=\"tm-pseudo\">8 800 799 99 99</span></a>\r\n                </li> */}\r\n                <li>\r\n                  <a className=\"uk-link-muted\" href=\"mailto:support@basickart.com\"><span className=\"uk-margin-small-right\" uk-icon=\"mail\"></span><span className=\"tm-pseudo\">support@basickart.com</span></a>\r\n                </li>\r\n                {/* <li>\r\n                  <div className=\"uk-text-muted\"><span className=\"uk-margin-small-right\" uk-icon=\"location\"></span><span>Sadar Bazar, Old Delhi</span></div>\r\n                </li>\r\n                <li>\r\n                  <div className=\"uk-text-muted\"><span className=\"uk-margin-small-right\" uk-icon=\"clock\"></span><span>Daily 10:00–21:00</span></div>\r\n                </li> */}\r\n              </ul>\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-margin uk-text-small uk-text-muted\">Technical partner KPWorks</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport {\r\n  MainFooter\r\n};","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { getSubCategory, AppState, SubCategory, getActiveProductCount, Cart, getCart, getUser, getUserLocation, getCustomerProducts, UserLocation, setLoggedCart, defaultUser } from 'reducers';\r\nimport { SubCategories, pageSize } from 'appConstants';\r\nimport { filterSubcategories } from 'services';\r\nimport { ProductSubCategory, Search } from 'types';\r\nimport { MobileNavigation, SideCart } from '.';\r\nimport { setSearch } from 'reducers/Search';\r\n\r\n\r\n\r\nconst Navigation: React.FunctionComponent = () => {\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [cartCount, setCartCount] = useState(0);\r\n  const [enteredSearchText, setEnteredSearchText] = useState('');\r\n  const [cartCountCssFlag, setCartCountCssFlag] = useState(false);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n  const search = useSelector<AppState, Search>(state => state.search.data || {} as Search);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const sideCartRef = useRef<HTMLAnchorElement>(null);\r\n  const mobileNavigationRef = useRef<HTMLButtonElement>(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(getSubCategory());\r\n    dispatch(getActiveProductCount());\r\n    if(localStorage.getItem(\"biktoken\")){\r\n      dispatch(getCart());\r\n      dispatch(getUser());\r\n    }\r\n    dispatch(getUserLocation());\r\n    if(localStorage.getItem(\"basicKart-loggedOutCart\")){\r\n      dispatch(setLoggedCart(JSON.parse(localStorage.getItem(\"basicKart-loggedOutCart\") || '[]')))\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setCartCount(cart.data?.length || 0);\r\n    setCartCountCssFlag(true);\r\n    setTimeout(()=>{\r\n      setCartCountCssFlag(false);\r\n    },400)\r\n  },[cart.data])\r\n\r\n  const searchProduct = (searchText: string) => {\r\n    \r\n      if(searchText === ''){\r\n        setEnteredSearchText('');\r\n      }\r\n      if(\r\n        (search.categoryId && search.categoryId.length >0) ||\r\n        (search.colourId && search.colourId.length >0) ||\r\n        (search.sizeId && search.sizeId.length >0) ||\r\n        (search.subCategoryId && search.subCategoryId.length >0) ||\r\n         search.endPrice || search.startPrice || searchText\r\n      ){\r\n      dispatch(setSearch({\r\n        categoryId: search.categoryId || 0,\r\n        colourId: search.colourId || [],\r\n        currency: userLocation.data || 'IN',\r\n        endPrice: search.endPrice||'',\r\n        sizeId: search.sizeId || [],\r\n        startPrice: search.startPrice || '',\r\n        subCategoryId: search.subCategoryId || [],\r\n        searchText: searchText\r\n      }));\r\n      dispatch(getCustomerProducts(0, pageSize, search.categoryId || 0, search.subCategoryId || [], search.colourId || [], search.sizeId || [], search.startPrice || '', search.endPrice||'', userLocation.data || 'IN', searchText || '' , true));\r\n      history.push('/product/search')\r\n    }\r\n    \r\n  }\r\n  const navigateTo = (event: React.SyntheticEvent ,categoryPath: string, subcategoryPath?: string) => {\r\n    event.preventDefault();\r\n    history.push('/product/'+ categoryPath.toLowerCase() + (subcategoryPath ? '/'+ subcategoryPath.toLowerCase() : ''));\r\n  };\r\n  const getCategoryAndSubCategory = () => {\r\n    return Object.keys(SubCategories).map((key: string, index: number) => {\r\n      return (\r\n        <li key={index}>\r\n          <a onClick={(e) => navigateTo(e,key)}>{key}<span className=\"uk-margin-xsmall-left\" uk-icon=\"icon: chevron-down; ratio: .75;\"></span></a>\r\n          <div\r\n            className=\"uk-navbar-dropdown uk-margin-remove uk-padding-remove-vertical\"\r\n            uk-drop=\"pos: bottom-justify;delay-show: 125;delay-hide: 50;duration: 75;boundary: .tm-navbar-container;boundary-align: true;pos: bottom-justify;flip: x\"\r\n          >\r\n            <div className=\"uk-container uk-container-small uk-margin-top uk-margin-bottom\">\r\n              <ul className=\"uk-nav uk-nav-default uk-column-1-3\">\r\n                {\r\n                  filterSubcategories(subCategories, Number(SubCategories[key])).map((subcategory: ProductSubCategory, index: number) => {\r\n                    return <li key={index}><a onClick={(e) => navigateTo(e,key,subcategory.code)}>{subcategory.code}</a></li>\r\n                  })\r\n                }\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      )\r\n    });\r\n  };\r\n\r\n  const logout = () => {\r\n    dispatch(defaultUser());\r\n    window.localStorage.removeItem('biktoken');\r\n    history.push('/');\r\n  };\r\n  return (\r\n    <header>\r\n      <MobileNavigation mobileNavigationRef={mobileNavigationRef}/>\r\n      <div className=\"uk-navbar-container tm-navbar-container\" uk-sticky=\"cls-active: tm-navbar-container-fixed\">\r\n        <div className=\"uk-container\" uk-navbar=\"true\">\r\n          <div className=\"uk-navbar-left\">\r\n            <button ref={mobileNavigationRef} className=\"uk-navbar-toggle uk-hidden@m\" uk-toggle=\"target: #nav-offcanvas\" uk-navbar-toggle-icon=\"true\"></button>\r\n            <a className=\"uk-navbar-item uk-logo\" onClick={() => history.push('/')}><img src=\"/logo.png\" width=\"67\" alt=\"Logo\" /></a>\r\n            <nav className=\"uk-visible@m\">\r\n              <ul className=\"uk-navbar-nav\">\r\n                {\r\n                  getCategoryAndSubCategory()\r\n                }\r\n                <li><a href=\"#\">About</a></li>\r\n                <li><a onClick={()=> history.push('/contactus')}>Contact</a></li>\r\n                {\r\n                  userData.data?.isAdmin && \r\n                  <li><a onClick={()=>history.push('/admin')}>Admin</a></li>\r\n                }\r\n               \r\n              </ul>\r\n            </nav>\r\n          </div>\r\n          <div className=\"uk-navbar-right\">\r\n            <a className={`${enteredSearchText !== '' ? 'search-color uk-navbar-toggle tm-navbar-button' : 'uk-navbar-toggle tm-navbar-button'}`} href=\"#\" uk-search-icon=\"true\">\r\n            </a>\r\n            <div className=\"uk-navbar-dropdown uk-padding-small uk-margin-remove\" uk-drop=\"mode: click;cls-drop: uk-navbar-dropdown;boundary: .tm-navbar-container;boundary-align: true;pos: bottom-justify;flip: x\">\r\n              <div className=\"uk-container\">\r\n                <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-expand\">\r\n                    <div className=\"uk-search uk-search-navbar uk-width-1-1\">\r\n                      <input className=\"uk-search-input\" type=\"search\" placeholder=\"Search…\"\r\n                        value={enteredSearchText}\r\n                        onChange={(e) => setEnteredSearchText(e.currentTarget.value)}\r\n                        onKeyPress={(e)=> {e.key === 'Enter' &&  searchProduct(e.currentTarget.value)}} />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-width-auto\" onClick={()=>searchProduct('')}><a className=\"uk-navbar-dropdown-close\" uk-close=\"true\"></a></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <a className=\"uk-navbar-item uk-link-muted tm-navbar-button\"  uk-icon=\"user\"></a>\r\n            <div className=\"uk-padding-small uk-margin-remove\" uk-dropdown=\"pos: bottom-right; offset: -10; delay-hide: 200;\" style={{ minWidth: '150px' }}>\r\n              <ul className=\"uk-nav uk-dropdown-nav\">\r\n                <li>\r\n                  <a onClick={() => userData.data?.userId ?  history.push('/userinformation/orders') : history.push('/login')}>Orders</a>\r\n                </li>\r\n                <li><a onClick={()=> userData.data?.userId ? history.push('/userinformation/default') : history.push('/login')}>Personal</a></li>\r\n                <li><a onClick={()=> userData.data?.userId ? history.push('/userinformation/settings'): history.push('/login')}>Settings</a></li>\r\n                <li className=\"uk-nav-divider\"></li>\r\n                {\r\n                   userData.data?.userId ? \r\n                   <li><a onClick={()=> logout()}>Log out</a></li> :\r\n                   <li><a onClick={()=>history.push('/login')}>Login</a></li>\r\n                }\r\n                \r\n              </ul>\r\n            </div>\r\n            <a ref={sideCartRef} className=\"uk-navbar-item uk-link-muted tm-navbar-button\" href=\"#\" uk-toggle=\"target: #cart-offcanvas\">\r\n              <span uk-icon=\"cart\"></span>\r\n              {\r\n                cartCount > 0 &&\r\n                <span className={cartCountCssFlag ? \"uk-badge  cart-popup\" : \"uk-badge \"}>{cartCount}</span>\r\n              }\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <SideCart\r\n      sideCartRef={sideCartRef}\r\n      cartData={cart.data || []}/>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport { Navigation };","import React, { RefObject, useEffect, useState } from 'react';\r\nimport { CustomerCart, ProductCoupon } from 'types';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteCartItem, AppState, UserLocation } from 'reducers';\r\nimport { getCurrencyIcon, calculateUserDiscount, calculateUserDiscountPrice } from 'services';\r\n\r\ninterface Props {\r\n  cartData: CustomerCart[];\r\n  sideCartRef: RefObject<HTMLAnchorElement>\r\n}\r\n\r\nconst SideCart: React.FunctionComponent<Props> = (props: Props) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [mainTotal, setMainTotal] = useState(0);\r\n  const [userDiscountTotal, setUserDiscountTotal] = useState('0');\r\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState('0');\r\n  const [discountedTotal, setDiscountedTotal] = useState('0');\r\n  const [userCouponTotal, setUserCouponTotal] = useState('0');\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const couponData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const {\r\n    cartData,\r\n    sideCartRef\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    let cartPrice = 0;\r\n    cartData.forEach(({ totalPrice }) => {\r\n      cartPrice += Number(totalPrice)\r\n    });\r\n    setMainTotal(cartPrice);\r\n    if (couponData.length === 1) {\r\n      let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString());\r\n      let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString());\r\n      let couponPrice = calculateUserDiscountPrice(couponData[0].value, priceAfterDiscount.toString());\r\n      let priceAfterCoupon = calculateUserDiscount(couponData[0].value || '0', priceAfterDiscount.toString());\r\n      setDiscountedTotal(priceAfterDiscount);\r\n      setUserDiscountTotal(discountPrice);\r\n      setUserCouponTotal(couponPrice);\r\n      setTotalAfterDiscount(priceAfterCoupon);\r\n    } else {\r\n      let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString());\r\n      let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString());\r\n      setUserDiscountTotal(discountPrice);\r\n      setTotalAfterDiscount(priceAfterDiscount);\r\n    }\r\n    // setUserDiscountTotal(calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString()));\r\n    // setTotalAfterDiscount(calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString()))\r\n  }, [cartData, userData.data,couponData])\r\n\r\n  const deleteCart = (cartItem: CustomerCart) => {\r\n    dispatch(deleteCartItem(cartItem, false));\r\n  };\r\n\r\n  return (\r\n    <div id=\"cart-offcanvas\" uk-offcanvas=\"overlay: true; flip: true\">\r\n      <aside className=\"uk-offcanvas-bar uk-padding-remove\">\r\n        <div className=\"uk-card uk-card-default uk-card-small uk-height-1-1 uk-flex uk-flex-column tm-shadow-remove\">\r\n          <header className=\"uk-card-header uk-flex uk-flex-middle\">\r\n            <div className=\"uk-grid-small uk-flex-1\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand\"><div className=\"uk-h3\">Cart</div></div>\r\n              <button className=\"uk-offcanvas-close\" type=\"button\" uk-close=\"true\"></button>\r\n            </div>\r\n          </header>\r\n          <div className=\"uk-card-body cart-scroll-for-non-mobile\">\r\n            <ul className=\"uk-list uk-list-divider\">\r\n              {\r\n                cartData.map((cart: CustomerCart, index: number) => {\r\n                  return (\r\n                    <li key={index} className=\"uk-visible-toggle\">\r\n                      <article>\r\n                        <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                          <div className=\"uk-width-1-4\">\r\n                            <div className=\"tm-ratio tm-ratio-4-3\">\r\n                              <a className=\"tm-media-box\" onClick={() => {history.push('/productDetails/' + cart.productId); sideCartRef.current?.click()}}>\r\n                                <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + cart.productImagePath} alt={cart.productImage} /></figure>\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"uk-width-expand\">\r\n                            <div className=\"uk-text-meta uk-text-xsmall\">{cart.subcategory}</div>\r\n                            <a className=\"uk-link-heading uk-text-small\" onClick={() => {history.push('/productDetails/' + cart.productId); sideCartRef.current?.click()}}>{cart.productName}</a>\r\n                            <div className=\"uk-margin-xsmall uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                              <div className=\"uk-text-bolder uk-text-small\">{getCurrencyIcon(userLocation.data || 'IN')} {cart.totalPrice}</div>\r\n                              {/* <del className=\"uk-text-bolder uk-text-small uk-text-meta\">123</del> */}\r\n                              <div className=\"uk-text-meta uk-text-xsmall\">{cart.productQuantity} × {getCurrencyIcon(userLocation.data || 'IN')} {cart.productPrice}</div>\r\n                            </div>\r\n                          </div>\r\n                          {\r\n                            !userData.data?.userId && \r\n                            <div>\r\n                              <a className=\"uk-icon-link uk-text-danger uk-invisible-hover\"\r\n                              uk-icon=\"icon: close; ratio: .75\"\r\n                              uk-tooltip=\"Remove\"\r\n                              onClick={() => { deleteCart(cart)}}></a>\r\n                            </div>\r\n                          }\r\n                          \r\n                        </div>\r\n                      </article>\r\n                    </li>\r\n                  )\r\n                })\r\n              }\r\n              {\r\n                cartData.length === 0 &&\r\n                <li className=\"uk-visible-toggle\">\r\n                  <article>\r\n                    <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                      <div className=\"uk-width-1-4\">\r\n                        <div className=\"tm-ratio tm-ratio-4-3\">\r\n                          {/* <a className=\"tm-media-box\">\r\n                            <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + cart.productImagePath} alt={cart.productImage} /></figure>\r\n                          </a> */}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"uk-width-expand\">\r\n                        {/* <div className=\"uk-text-meta uk-text-xsmall\">{cart.subcategory}</div> */}\r\n                        <span className=\"uk-link-heading uk-text-small\" >Cart is empty.</span>\r\n                        <div className=\"uk-margin-xsmall uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                          <div className=\"uk-text-bolder uk-text-small\">Add in some good stuff !!</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </article>\r\n                </li>\r\n              }\r\n            </ul>\r\n          </div>\r\n          <footer className=\"uk-card-footer\">\r\n            {\r\n              (userData.data?.discount && userData.data?.discount !== '0' || couponData.length === 1) &&\r\n              <>\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-expand uk-text-muted uk-text-small\">Subtotal</div>\r\n                  <div className=\"uk-text-muted\">{getCurrencyIcon(userLocation.data || 'IN')} {mainTotal}</div>\r\n                </div>\r\n                {\r\n                  userData.data?.discount && userData.data?.discount !== '0' &&\r\n                  <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                    <div className=\"uk-width-expand uk-text-muted uk-text-small\">Discount ({userData.data?.discount}%)</div>\r\n                    <div className=\"uk-text-danger\">- {getCurrencyIcon(userLocation.data || 'IN')} {userDiscountTotal}</div>\r\n                  </div>\r\n                }\r\n              </>\r\n            }\r\n            {\r\n              couponData.length === 1 &&\r\n              <>\r\n                {\r\n                  userData.data?.discount && userData.data?.discount !== '0' &&\r\n                  <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                    <div className=\"uk-width-expand uk-text-muted\">Discounted Total</div>\r\n                    <div>{getCurrencyIcon(userLocation.data || 'IN')} {discountedTotal}</div>\r\n                  </div>\r\n                }\r\n\r\n                <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-expand uk-text-muted\">Coupon ({couponData[0] && couponData[0].value}%)</div>\r\n                  <div className=\"uk-text-danger\">− {getCurrencyIcon(userLocation.data || 'IN')} {userCouponTotal}</div>\r\n                </div>\r\n              </>\r\n            }\r\n\r\n            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand uk-text-muted uk-h4\">Total</div>\r\n              <div className=\"uk-h4 uk-text-bolder\">{getCurrencyIcon(userLocation.data || 'IN')} {totalAfterDiscount}</div>\r\n            </div>\r\n            <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@m uk-margin-small\" uk-grid=\"true\">\r\n             <div></div>\r\n              <div >\r\n                <button className=\"uk-button  uk-button-primary uk-button-default uk-margin-small uk-width-1-1\"\r\n                  onClick={() => { \r\n                    userData.data?.userId ? history.push('/cart') :  history.push('/login'); sideCartRef.current?.click();}}\r\n                  disabled={mainTotal === 0}\r\n                >\r\n                  Continue\r\n                </button>\r\n              </div>\r\n              {/* <div>\r\n                <button className=\"uk-button uk-button-primary uk-margin-small uk-width-1-1\"\r\n                  onClick={() => { history.push('/checkout') }}\r\n                  disabled={mainTotal === 0}>\r\n                  checkout\r\n                </button>\r\n              </div> */}\r\n            </div>\r\n          </footer>\r\n        </div>\r\n      </aside>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  SideCart\r\n}","import { SubCategories } from 'appConstants';\r\nimport React, { RefObject } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AppState, SubCategory } from 'reducers';\r\nimport { filterSubcategories } from 'services';\r\nimport { ProductSubCategory } from 'types';\r\n\r\ninterface Props{\r\n  mobileNavigationRef: RefObject<HTMLButtonElement>\r\n}\r\n\r\nconst MobileNavigation: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const history = useHistory();\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const navigateTo = (event: React.SyntheticEvent, categoryPath: string, subcategoryPath?: string) => {\r\n    event.preventDefault();\r\n    history.push('/product/' + categoryPath.toLowerCase() + (subcategoryPath ? '/' + subcategoryPath.toLowerCase() : ''));\r\n    props.mobileNavigationRef.current?.click();\r\n  }\r\n\r\n  const getCategoryAndSubCategory = () => {\r\n    return Object.keys(SubCategories).map((key: string, index: number) => {\r\n      return (\r\n        <li className=\"uk-parent\" key={index}>\r\n          <a onClick={(e) => e.preventDefault()}>{key}</a>\r\n          <ul className=\"uk-nav-sub uk-list-divider\">\r\n            {\r\n              filterSubcategories(subCategories, Number(SubCategories[key])).map((subcategory: ProductSubCategory, index: number) => {\r\n                return <li key={index}><a onClick={(e) => navigateTo(e, key, subcategory.code)}>{subcategory.code}</a></li>\r\n              })\r\n            }\r\n            <li className=\"uk-text-center\">\r\n                    <a onClick={(e) => navigateTo(e, key)} className=\"uk-link-muted uk-text-uppercase tm-link-to-all\"><span>entire ranage</span><span uk-icon=\"icon: chevron-right; ratio: .75;\"></span></a>\r\n                  </li>\r\n          </ul>\r\n        </li>\r\n      )\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div id=\"nav-offcanvas\" uk-offcanvas=\"overlay: true\">\r\n      <aside className=\"uk-offcanvas-bar uk-padding-remove\">\r\n        <div className=\"uk-card uk-card-default uk-card-small tm-shadow-remove\">\r\n          <header className=\"uk-card-header uk-flex uk-flex-middle\">\r\n            <div>\r\n              <a className=\"uk-link-muted uk-text-bold\" onClick={(e) => e.preventDefault()}>Basic Kart</a>\r\n              {/* <div className=\"uk-text-xsmall uk-text-muted\" style={{ marginTop: \"-2px\" }}>\r\n                <div>Basic Kart</div>\r\n              </div> */}\r\n            </div>\r\n          </header>\r\n          <nav className=\"uk-card-small uk-card-body\">\r\n            <ul className=\"uk-nav-default uk-nav-parent-icon uk-list-divider\" uk-nav=\"true\">\r\n              {/* <li className=\"uk-parent\">\r\n                <a href=\"#\">Bindi</a>\r\n                <ul className=\"uk-nav-sub uk-list-divider\">\r\n                  <li><a href=\"bindi-category.html\">Fancy</a></li>\r\n                  <li><a href=\"bindi-category.html\">Bridal</a></li>\r\n                  <li><a href=\"bindi-category.html\">Stone</a></li>\r\n                  <li><a href=\"bindi-category.html\">Round</a></li>\r\n                  <li><a href=\"bindi-category.html\">Square</a></li>\r\n                  <li className=\"uk-text-center\">\r\n                    <a className=\"uk-link-muted uk-text-uppercase tm-link-to-all\" href=\"bindi-category.html\"><span>entire ranage</span><span uk-icon=\"icon: chevron-right; ratio: .75;\"></span></a>\r\n                  </li>\r\n                </ul>\r\n              </li> */}\r\n              {getCategoryAndSubCategory()}\r\n              <li><a href=\"#\">About</a></li>\r\n              <li><a onClick={()=> {history.push('/contactus'); props.mobileNavigationRef.current?.click()}}>Contact</a></li>\r\n            </ul>\r\n          </nav>\r\n          {/* <nav className=\"uk-card-body\">\r\n            <ul className=\"uk-iconnav uk-flex-center\">\r\n              <li><a href=\"#\" title=\"Facebook\" uk-icon=\"facebook\"></a></li>\r\n              <li><a href=\"#\" title=\"Twitter\" uk-icon=\"twitter\"></a></li>\r\n              <li><a href=\"#\" title=\"YouTube\" uk-icon=\"youtube\"></a></li>\r\n              <li><a href=\"#\" title=\"Instagram\" uk-icon=\"instagram\"></a></li>\r\n            </ul>\r\n          </nav> */}\r\n        </div>\r\n      </aside>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  MobileNavigation\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { SubProducts } from 'appConstants';\r\n\r\ninterface Props{\r\n  subProductToggle: Function;\r\n  addEditToggle: Function;\r\n}\r\n\r\nconst AdminNav: React.FunctionComponent<Props> = (props: Props) => {\r\n  const { subProductToggle, addEditToggle } = props;\r\n  const history = useHistory();\r\n  const [selectedTab, setSelectedTab] = useState(1);\r\n  const [isOnList, setIsOnList] = useState(true);\r\n\r\n  const {product, productId} = useParams();\r\n\r\n  useEffect(() => {\r\n    if(product == 'product' && productId){\r\n      setSelectedTab(SubProducts.PRODUCT)\r\n    }\r\n  },[product, productId])\r\n\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-1-4@m tm-aside-column\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\" uk-sticky=\"offset: 90; bottom: true; media: @m;\">\r\n        <div className=\"uk-card-header\">\r\n          <div className=\"uk-grid-small uk-flex-center\" uk-grid=\"true\">\r\n            <div>\r\n              <a className={`${isOnList? 'uk-button uk-button-default uk-button-small uk-active' : 'uk-button uk-button-default uk-button-small'}`}\r\n              onClick={() => {addEditToggle(false);setIsOnList(true); history.push('/admin')}}>\r\n                <span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: cog; ratio: .75;\"></span>\r\n                <span>List</span>\r\n              </a>\r\n            </div>\r\n            <div>\r\n              <button className={`${!isOnList? 'uk-button uk-button-default uk-button-small uk-active' : 'uk-button uk-button-default uk-button-small'}`}\r\n               title=\"Add\"\r\n                onClick={() => {addEditToggle(true); ;setIsOnList(false)}}\r\n                disabled={selectedTab === SubProducts.USERS || selectedTab === SubProducts.ORDERS}\r\n                >\r\n                <span uk-icon=\"icon: sign-out; ratio: .75;\"></span>\r\n                <span>Add</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <nav>\r\n            <ul className=\"uk-nav uk-nav-default tm-nav\">\r\n              <li className={`${selectedTab === SubProducts.USERS ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.USERS);setIsOnList(true);addEditToggle(false);setSelectedTab(SubProducts.USERS)}}>Users</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.ORDERS ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.ORDERS);setIsOnList(true);addEditToggle(false);setSelectedTab(SubProducts.ORDERS)}}>Orders</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.PRODUCT ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.PRODUCT);setSelectedTab(SubProducts.PRODUCT)}}>Products</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.SUB_PRODUCT ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.SUB_PRODUCT);setSelectedTab(SubProducts.SUB_PRODUCT)}}>Sub-Category</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.SIZE ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.SIZE);setSelectedTab(SubProducts.SIZE)}}>Size</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.COLOUR ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.COLOUR);setSelectedTab(SubProducts.COLOUR)}}>Colour</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.COUPONS ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.COUPONS);setSelectedTab(SubProducts.COUPONS)}}>Coupons</a>\r\n              </li>\r\n              <li className={`${selectedTab === SubProducts.SHIPPER ? 'uk-active': ''}`}>\r\n                <a onClick={() => {subProductToggle(SubProducts.SHIPPER);setSelectedTab(SubProducts.SHIPPER)}}>Shipper</a>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  AdminNav\r\n}","import React, { useEffect, useState } from 'react';\r\nimport DataTable, { IDataTableColumn } from 'react-data-table-component';\r\nimport { getColour, getSize, getSubCategory, getCoupon, getProducts, getShippers, getAllUser, AppState } from 'reducers';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ProductColor, ProductSize, ProductCoupon, ProductSubCategory, Order, OrderShipper, User, ProductItem } from 'types';\r\nimport { SubProducts } from 'appConstants';\r\nimport { getAdminOrders } from 'reducers/Order';\r\nimport { countHighlightProducts } from 'services';\r\n\r\ninterface Props {\r\n  productType: number;\r\n  productColumns: IDataTableColumn[];\r\n  ExpandableComponent?: React.FunctionComponent<any>;\r\n  stateData: ProductColor[] | ProductSize[] | ProductCoupon[] | ProductSubCategory[] | Order[] | OrderShipper[] | User[];\r\n  searchPlaceholder: string;\r\n  expandableRows: boolean;\r\n  sortByColumn?: string;\r\n  defaultSortAsc?: boolean;\r\n}\r\n\r\nconst AdminProductList: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [tabName, setTabName] = useState('');\r\n  const productList = useSelector<AppState, ProductItem[]>(state => state.product.data || []);\r\n  const [tableData, setTableData] = useState<\r\n    ProductColor[] | ProductSize[] | ProductCoupon[] | ProductSubCategory[] | Order[] | OrderShipper[] | User[]\r\n  >([]);\r\n\r\n  let stateData: ProductColor[] | ProductSize[] | ProductCoupon[] | ProductSubCategory[] | Order[] | OrderShipper[] | User[] = [];\r\n  const columns = props.productColumns;\r\n\r\n  if (props.productType === SubProducts.COLOUR ||\r\n    props.productType === SubProducts.SIZE ||\r\n    props.productType === SubProducts.SUB_PRODUCT ||\r\n    props.productType === SubProducts.COUPONS ||\r\n    props.productType === SubProducts.PRODUCT ||\r\n    props.productType === SubProducts.ORDERS ||\r\n    props.productType === SubProducts.SHIPPER ||\r\n    props.productType === SubProducts.USERS) {\r\n    stateData = props.stateData\r\n  } else {\r\n    stateData = []\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.productType === SubProducts.COLOUR) {\r\n      dispatch(getColour());\r\n      setTabName('Colour');\r\n    } else if (props.productType === SubProducts.SIZE) {\r\n      dispatch(getSize());\r\n      setTabName('Size');\r\n    } else if (props.productType === SubProducts.SUB_PRODUCT) {\r\n      dispatch(getSubCategory());\r\n      setTabName('SubCategories');\r\n    } else if (props.productType === SubProducts.COUPONS) {\r\n      dispatch(getCoupon());\r\n      setTabName('Coupons');\r\n    } else if (props.productType === SubProducts.PRODUCT) {\r\n      dispatch(getProducts());\r\n      setTabName('Products');\r\n    } else if (props.productType === SubProducts.ORDERS) {\r\n      dispatch(getAdminOrders());\r\n      setTabName('Orders');\r\n    } else if (props.productType === SubProducts.SHIPPER) {\r\n      dispatch(getShippers());\r\n      setTabName('Shippers');\r\n    } else if (props.productType === SubProducts.USERS) {\r\n      dispatch(getAllUser());\r\n      setTabName('Users');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTableData(stateData || [])\r\n  }, [stateData]);\r\n\r\n  useEffect(() => {\r\n    if (stateData && stateData.length > 0) {\r\n      const data = (stateData as any[]).filter(({\r\n        value, code,\r\n        name, productCategoryName,\r\n        orderNumber, shipperName,\r\n        emailAddress, mobile, paymentMode }) => {\r\n        return (value && value.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (code && code.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (name && name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (productCategoryName && productCategoryName.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (orderNumber && orderNumber.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (shipperName && shipperName.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (emailAddress && emailAddress.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (mobile && mobile.toLowerCase().includes(searchTerm.toLowerCase()))\r\n          || (paymentMode && paymentMode.toLowerCase().includes(searchTerm.toLowerCase()));\r\n      })\r\n      setTableData(data)\r\n    }\r\n  }, [searchTerm]);\r\n\r\n\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n\r\n            <div className=\"asd\">\r\n              <DataTable\r\n                title={tabName}\r\n                columns={columns}\r\n                data={tableData}\r\n                defaultSortField={props.sortByColumn || \"code\"}\r\n                defaultSortAsc={props.defaultSortAsc !== undefined ? props.defaultSortAsc : true}\r\n                selectableRows={false}\r\n                selectableRowsNoSelectAll={false}\r\n                selectableRowsHighlight={true}\r\n                selectableRowsVisibleOnly={false}\r\n                expandableRows={props.expandableRows}\r\n                expandOnRowClicked={false}\r\n                expandableRowsComponent={props.ExpandableComponent && <props.ExpandableComponent />}\r\n                pagination={true}\r\n                highlightOnHover={true}\r\n                striped={true}\r\n                pointerOnHover={false}\r\n                dense={false}\r\n                noTableHead={false}\r\n                persistTableHead={true}\r\n                progressPending={false}\r\n                noHeader={false}\r\n                subHeader={true}\r\n                subHeaderComponent={\r\n                  (\r\n                    <div className=\"uk-grid-medium uk-child-width-1-1 uk-width-1-1\" uk-grid=\"true\">\r\n                      <div className={`${props.productType === SubProducts.ORDERS ? 'uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s' : 'uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s'}`} uk-grid=\"true\">\r\n                        {\r\n                          props.productType === SubProducts.ORDERS &&\r\n                          <>\r\n                            <div>\r\n                              <label>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: cart;\" /> : Shipped</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: check;\" /> : Delivered</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: plus-circle;\" /> : Return Accepted</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: lifesaver;\" /> : Payment Returned</span>\r\n\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"orange\" }} uk-icon=\"icon: history;\" /> : Return In Progress</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"red\" }} uk-icon=\"icon: minus-circle;\" /> : Return Declined</span>\r\n                                <span className=\"uk-form-label\"><span style={{ color: \"red\" }} uk-icon=\"icon: warning;\" /> : Payment Declined</span>\r\n                              </label>\r\n                            </div>\r\n                          </>\r\n                        }\r\n\r\n                        {\r\n                          props.expandableRows &&\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\"><span><span uk-icon=\"chevron-right\"></span>: Click in table for quick actions</span></div>\r\n                              {\r\n                                props.productType === SubProducts.PRODUCT &&\r\n                                <>\r\n                                  <span className=\"uk-form-label\"><span style={{ color: \"green\" }} uk-icon=\"icon: bolt;\" /> : Trending ({countHighlightProducts(productList,true)})</span>\r\n                                  <span className=\"uk-form-label\"><span style={{ color: \"orange\" }} uk-icon=\"icon: star;\" /> : Latest ({countHighlightProducts(productList,false)})</span>\r\n                                </>\r\n                              }\r\n                            </label>\r\n                          </div>\r\n                        }\r\n                        {\r\n                          (!props.expandableRows && props.productType !== SubProducts.ORDERS) &&\r\n                          <div></div>\r\n                        }\r\n                        <div>\r\n                          <input className=\"uk-input uk-form-width-medium uk-form-small uk-float-right\" value={searchTerm} onChange={event => setSearchTerm(event.target.value)} type=\"text\" placeholder={props.searchPlaceholder} />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    // <div className=\"admin-search-header\">\r\n                    //   {\r\n                    //     props.expandableRows &&\r\n                    //     <div className=\"\">\r\n                    //       <div className=\"\">\r\n                    //         <span>Click <span uk-icon=\"chevron-right\"></span> in table for quick actions</span>\r\n                    //       </div>\r\n                    //     </div>\r\n                    //   }\r\n                    //   <div className=\"uk-float-right\">\r\n                    //     <input className=\"uk-input uk-form-width-medium uk-form-small\" value={searchTerm} onChange={event => setSearchTerm(event.target.value)} type=\"text\" placeholder={props.searchPlaceholder} />\r\n                    //   </div>\r\n                    //   <div>\r\n                    //     <div className=\"\"><span style={{ color: \"green\" }} uk-icon=\"icon: bolt;\" /> : Trending</div>\r\n\r\n\r\n                    //   </div>\r\n\r\n                    //   <div className=\"\">\r\n\r\n                    //     <span style={{ color: \"orange\" }} uk-icon=\"icon: star;\" /> : Latest\r\n                    //           </div>\r\n                    // </div>\r\n                  )\r\n                }\r\n                fixedHeader={true}\r\n                fixedHeaderScrollHeight=\"800px\"\r\n                direction={\"ltr\"}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport {\r\n  AdminProductList\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductColor } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateColour, Colour } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { code, value, colourId }: ProductColor = data;\r\n  const colourActionStatus = useSelector<AppState, Colour>(state => state.colour);\r\n\r\n  const colourQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      code,\r\n      value,\r\n      colourId\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (value: ProductColor) => {\r\n      dispatch(updateColour(value))\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={colourQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Colour Code</div>\r\n              <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                {...colourQuickViewFormik.getFieldProps('code')} />\r\n              {\r\n                colourQuickViewFormik.touched.code && colourQuickViewFormik.errors.code ? (\r\n                  <span className=\"uk-text-danger\">{colourQuickViewFormik.errors.code}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Colour Name</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...colourQuickViewFormik.getFieldProps('value')} />\r\n              {\r\n                colourQuickViewFormik.touched.value && colourQuickViewFormik.errors.value ? (\r\n                  <span className=\"uk-text-danger\">{colourQuickViewFormik.errors.value}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Colour Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  colourActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n        {colourQuickViewFormik.isSubmitting && <NotificationContainer {...colourActionStatus}/>}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst ColourList: React.FunctionComponent = () => {\r\n\r\n  const stateData = useSelector<AppState, ProductColor[]>(state => state.colour.data || []);  \r\n  const productColumns = [\r\n    {\r\n      name: 'ColourId',\r\n      selector: 'colourId',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Colour Code',\r\n      selector: 'code',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Colour Value',\r\n      selector: 'value',\r\n      sortable: true,\r\n    },\r\n  ]\r\n\r\n  return(\r\n    <AdminProductList \r\n      productColumns={productColumns} \r\n      productType={SubProducts.COLOUR} \r\n      ExpandableComponent= {ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Colour Value\"\r\n      expandableRows = {true}/>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport {\r\n  ColourList,\r\n  ExpandableComponent\r\n}","import React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, Colour, saveColour } from 'reducers';\r\nimport { ProductColor } from 'types';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst ProductColour: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const colourFormik = useFormik({\r\n    initialValues: {\r\n      code: '',\r\n      value: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (values: ProductColor) => {\r\n      dispatch(saveColour(values));\r\n    }\r\n  });\r\n  const colourActionStatus = useSelector<AppState, Colour>(state => state.colour);\r\n  useEffect(() => {\r\n    if (colourActionStatus._isSuccess) {\r\n      colourFormik.resetForm();\r\n    }\r\n  }, [colourActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={colourFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Colour</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Colour Code</div>\r\n                      <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                        {...colourFormik.getFieldProps('code')} />\r\n                      {\r\n                        colourFormik.touched.code && colourFormik.errors.code ? (\r\n                          <span className=\"uk-text-danger\">{colourFormik.errors.code}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Colour Name</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...colourFormik.getFieldProps('value')} />\r\n                      {\r\n                        colourFormik.touched.value && colourFormik.errors.value ? (\r\n                          <span className=\"uk-text-danger\">{colourFormik.errors.value}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...colourActionStatus}/>\r\n          <button disabled={colourActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              colourActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductColour\r\n}","import React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, addUpdateSize , Size } from 'reducers';\r\nimport { ProductSize as ProductSizeType } from 'types';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\n\r\nconst ProductSize: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const sizeFormik = useFormik({\r\n    initialValues: {\r\n      code: '',\r\n      value: '',\r\n      productCategory: 1,\r\n      sizeId: '0'\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required'),\r\n      productCategory: Yup.number().required('Required')\r\n    }),\r\n    onSubmit: (values: ProductSizeType) => {\r\n      dispatch(addUpdateSize (values));\r\n    }\r\n  });\r\n  const sizeActionStatus = useSelector<AppState, Size>(state => state.size);\r\n  useEffect(() => {\r\n    if (sizeActionStatus._isSuccess) {\r\n      sizeFormik.resetForm();\r\n    }\r\n  }, [sizeActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={sizeFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Size</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n                <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Product Category</div>\r\n                      <select className=\"uk-select\" id=\"productCategory\"\r\n                        {...sizeFormik.getFieldProps('productCategory')}>\r\n                          <option key='1' value={1}>Lingerie</option>\r\n                          <option key='2' value={2}>Footwear</option>\r\n                          <option key='3' value={3}>Bindi</option>\r\n                          <option key='4' value={4}>Handicraft</option>\r\n                        </select>\r\n                      {\r\n                        sizeFormik.touched.productCategory && sizeFormik.errors.productCategory ? (\r\n                          <span className=\"uk-text-danger\">{sizeFormik.errors.productCategory}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Size Code</div>\r\n                      <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                        {...sizeFormik.getFieldProps('code')} />\r\n                      {\r\n                        sizeFormik.touched.code && sizeFormik.errors.code ? (\r\n                          <span className=\"uk-text-danger\">{sizeFormik.errors.code}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Size Value</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...sizeFormik.getFieldProps('value')} />\r\n                      {\r\n                        sizeFormik.touched.value && sizeFormik.errors.value ? (\r\n                          <span className=\"uk-text-danger\">{sizeFormik.errors.value}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...sizeActionStatus}/>\r\n          <button disabled={sizeActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              sizeActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductSize\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductSize } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateColour, Colour, addUpdateSize, Size } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst SizeList: React.FunctionComponent = () => {\r\n\r\n  const stateData = useSelector<AppState, ProductSize[]>(state => state.size.data || []);\r\n  const productColumns = [\r\n    {\r\n      name: 'SizeId',\r\n      selector: 'sizeId',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Product Category',\r\n      selector: 'productCategoryName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Size Code',\r\n      selector: 'code',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Size Value',\r\n      selector: 'value',\r\n      sortable: true,\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.SIZE}\r\n      ExpandableComponent={ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Size Value\"\r\n      expandableRows={true} />\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { code, value, sizeId, productCategory }: ProductSize = data;\r\n  const sizeActionStatus = useSelector<AppState, Size>(state => state.size);\r\n\r\n  const sizeQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      code,\r\n      value,\r\n      sizeId,\r\n      productCategory,\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required'),\r\n      productCategory: Yup.number().required('Required')\r\n    }),\r\n    onSubmit: (value: ProductSize) => {\r\n      dispatch(addUpdateSize(value))\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={sizeQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Product Category</div>\r\n              <select className=\"uk-select\" id=\"productCategory\"\r\n                {...sizeQuickViewFormik.getFieldProps('productCategory')}>\r\n                <option key='1' value={1}>Lingerie</option>\r\n                <option key='2' value={2}>Footwear</option>\r\n                <option key='3' value={3}>Bindi</option>\r\n                <option key='4' value={4}>Handicraft</option>\r\n              </select>\r\n              {\r\n                sizeQuickViewFormik.touched.productCategory && sizeQuickViewFormik.errors.productCategory ? (\r\n                  <span className=\"uk-text-danger\">{sizeQuickViewFormik.errors.productCategory}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Size Code</div>\r\n              <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                {...sizeQuickViewFormik.getFieldProps('code')} />\r\n              {\r\n                sizeQuickViewFormik.touched.code && sizeQuickViewFormik.errors.code ? (\r\n                  <span className=\"uk-text-danger\">{sizeQuickViewFormik.errors.code}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Size Value</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...sizeQuickViewFormik.getFieldProps('value')} />\r\n              {\r\n                sizeQuickViewFormik.touched.value && sizeQuickViewFormik.errors.value ? (\r\n                  <span className=\"uk-text-danger\">{sizeQuickViewFormik.errors.value}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Size Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  sizeActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n          {sizeQuickViewFormik.isSubmitting && <NotificationContainer {...sizeActionStatus} />}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  SizeList,\r\n  ExpandableComponent\r\n}","import React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, addUpdateSize, Size, addUpdateSubCategory, SubCategory } from 'reducers';\r\nimport { ProductSubCategory as ProductSubCategoryType } from 'types';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\n\r\nconst ProductSubCategory: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const subCategoryFormik = useFormik({\r\n    initialValues: {\r\n      code: '',\r\n      value: '',\r\n      productCategoryId: 0,\r\n      subCategoryId: '0'\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required'),\r\n      productCategoryId: Yup.number().required('Required').moreThan(0, 'Required')\r\n    }),\r\n    onSubmit: (values: ProductSubCategoryType) => {\r\n      dispatch(addUpdateSubCategory(values));\r\n    }\r\n  });\r\n  const subCategoryActionStatus = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  useEffect(() => {\r\n    if (subCategoryActionStatus._isSuccess) {\r\n      subCategoryFormik.resetForm();\r\n    }\r\n  }, [subCategoryActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={subCategoryFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">SubCategory</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Product Category</div>\r\n                      <select className=\"uk-select\" id=\"productCategoryId\"\r\n                        {...subCategoryFormik.getFieldProps('productCategoryId')}>\r\n                        <option key='0' value={0}>Select</option>\r\n                        <option key='1' value={1}>Lingerie</option>\r\n                        <option key='2' value={2}>Footwear</option>\r\n                        <option key='3' value={3}>Bindi</option>\r\n                        <option key='4' value={4}>Handicraft</option>\r\n                      </select>\r\n                      {\r\n                        subCategoryFormik.touched.productCategoryId && subCategoryFormik.errors.productCategoryId ? (\r\n                          <span className=\"uk-text-danger\">{subCategoryFormik.errors.productCategoryId}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">SubCategory Name</div>\r\n                      <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                        {...subCategoryFormik.getFieldProps('code')} />\r\n                      {\r\n                        subCategoryFormik.touched.code && subCategoryFormik.errors.code ? (\r\n                          <span className=\"uk-text-danger\">{subCategoryFormik.errors.code}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">SubCategory Description</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...subCategoryFormik.getFieldProps('value')} />\r\n                      {\r\n                        subCategoryFormik.touched.value && subCategoryFormik.errors.value ? (\r\n                          <span className=\"uk-text-danger\">{subCategoryFormik.errors.value}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...subCategoryActionStatus} />\r\n          <button disabled={subCategoryActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              subCategoryActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductSubCategory\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductSubCategory } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateColour, Colour, addUpdateSize, Size, SubCategory, addUpdateSubCategory } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst SubCategoryList: React.FunctionComponent = () => {\r\n\r\n  const stateData = useSelector<AppState, ProductSubCategory[]>(state => state.subCategory.data || []);\r\n  const productColumns = [\r\n    {\r\n      name: 'SubCategoryId',\r\n      selector: 'subCategoryId',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Product Category',\r\n      selector: 'productCategoryName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Product CategoryID',\r\n      selector: 'productCategoryId',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Subcategory',\r\n      selector: 'code',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Subcategory Description',\r\n      selector: 'value',\r\n      sortable: true,\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.SUB_PRODUCT}\r\n      ExpandableComponent={ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Subcategory Value\"\r\n      expandableRows={true} />\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { code, value, subCategoryId, productCategoryId }: ProductSubCategory = data;\r\n  const subCategoryActionStatus = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n\r\n  const subCategoryQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      code,\r\n      value,\r\n      subCategoryId,\r\n      productCategoryId\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required'),\r\n      productCategoryId: Yup.number().required('Required')\r\n    }),\r\n    onSubmit: (value: ProductSubCategory) => {\r\n      dispatch(addUpdateSubCategory(value))\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={subCategoryQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Product Category</div>\r\n              <select className=\"uk-select\" id=\"productCategoryId\"\r\n                {...subCategoryQuickViewFormik.getFieldProps('productCategoryId')}>\r\n                <option key='1' value={1}>Lingerie</option>\r\n                <option key='2' value={2}>Footwear</option>\r\n                <option key='3' value={3}>Bindi</option>\r\n                <option key='4' value={4}>Handicraft</option>\r\n              </select>\r\n              {\r\n                subCategoryQuickViewFormik.touched.productCategoryId && subCategoryQuickViewFormik.errors.productCategoryId ? (\r\n                  <span className=\"uk-text-danger\">{subCategoryQuickViewFormik.errors.productCategoryId}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">SubCategory Name</div>\r\n              <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                {...subCategoryQuickViewFormik.getFieldProps('code')} />\r\n              {\r\n                subCategoryQuickViewFormik.touched.code && subCategoryQuickViewFormik.errors.code ? (\r\n                  <span className=\"uk-text-danger\">{subCategoryQuickViewFormik.errors.code}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">SubCategory Description</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...subCategoryQuickViewFormik.getFieldProps('value')} />\r\n              {\r\n                subCategoryQuickViewFormik.touched.value && subCategoryQuickViewFormik.errors.value ? (\r\n                  <span className=\"uk-text-danger\">{subCategoryQuickViewFormik.errors.value}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">SubCategory Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  subCategoryActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n          {subCategoryQuickViewFormik.isSubmitting && <NotificationContainer {...subCategoryActionStatus} />}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  SubCategoryList,\r\n  ExpandableComponent\r\n}","import React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, Coupon, saveCoupon } from 'reducers';\r\nimport { ProductCoupon as ProductCouponType } from 'types';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst ProductCoupon: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const couponFormik = useFormik({\r\n    initialValues: {\r\n      code: '',\r\n      value: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (values: ProductCouponType) => {\r\n      dispatch(saveCoupon(values));\r\n    }\r\n  });\r\n  const couponActionStatus = useSelector<AppState, Coupon>(state => state.coupon);\r\n  useEffect(() => {\r\n    if (couponActionStatus._isSuccess) {\r\n      couponFormik.resetForm();\r\n    }\r\n  }, [couponActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={couponFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Coupon</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Coupon Code</div>\r\n                      <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                        {...couponFormik.getFieldProps('code')} />\r\n                      {\r\n                        couponFormik.touched.code && couponFormik.errors.code ? (\r\n                          <span className=\"uk-text-danger\">{couponFormik.errors.code}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Discount Percentage</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...couponFormik.getFieldProps('value')} />\r\n                      {\r\n                        couponFormik.touched.value && couponFormik.errors.value ? (\r\n                          <span className=\"uk-text-danger\">{couponFormik.errors.value}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...couponActionStatus}/>\r\n          <button disabled={couponActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              couponActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductCoupon\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductCoupon } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateCoupon, Coupon } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst CouponList: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const deleteCoupon = (couponId:  number, code:string, value:string) => {\r\n    const input = window.confirm('Sure want to delete?');\r\n    if(input)dispatch(updateCoupon({couponId,value,code},true));\r\n  } \r\n  const stateData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);  \r\n  const productColumns = [\r\n    {\r\n      name: 'CouponId',\r\n      selector: 'couponId',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Coupon Code',\r\n      selector: 'code',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Coupon Value',\r\n      selector: 'value',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Delete',\r\n      sortable: false,\r\n      cell: (row: { couponId: number, code: string, value: string }) => {\r\n        return  <button type=\"submit\" className=\"uk-button-small uk-button-danger\" onClick={() => deleteCoupon(row.couponId, row.value, row.code)}>\r\n                   <span>Delete</span>\r\n                </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return(\r\n    <AdminProductList \r\n      productColumns={productColumns} \r\n      productType={SubProducts.COUPONS} \r\n      ExpandableComponent= {ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Coupon Code\"\r\n      expandableRows = {true}/>\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { code, value, couponId }: ProductCoupon = data;\r\n  const couponActionStatus = useSelector<AppState, Coupon>(state => state.coupon);\r\n\r\n  const couponQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      code,\r\n      value,\r\n      couponId\r\n    },\r\n    validationSchema: Yup.object({\r\n      code: Yup.string().required('Required'),\r\n      value: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (value: ProductCoupon) => {\r\n      dispatch(updateCoupon(value));\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={couponQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Coupon Code</div>\r\n              <input className=\"uk-input \" id=\"code\" type=\"input\"\r\n                {...couponQuickViewFormik.getFieldProps('code')} />\r\n              {\r\n                couponQuickViewFormik.touched.code && couponQuickViewFormik.errors.code ? (\r\n                  <span className=\"uk-text-danger\">{couponQuickViewFormik.errors.code}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Discount Percentage</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...couponQuickViewFormik.getFieldProps('value')} />\r\n              {\r\n                couponQuickViewFormik.touched.value && couponQuickViewFormik.errors.value ? (\r\n                  <span className=\"uk-text-danger\">{couponQuickViewFormik.errors.value}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Coupon Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  couponActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n        {couponQuickViewFormik.isSubmitting && <NotificationContainer {...couponActionStatus}/>}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  CouponList,\r\n  ExpandableComponent\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport {\r\n  AppState, SubCategory, getSubCategory, getSize, getColour, Size,\r\n  Colour, Product, addUpdateProduct, setDefaulState, getProduct\r\n} from 'reducers';\r\nimport { ProductSubCategory, ProductSize, ProductItem as ProductItemType, sizeColourQuantityComboObject } from 'types';\r\nimport { serverImagePath, SubCategories } from 'appConstants';\r\nimport { filterSubcategories } from 'services';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst ProductItem: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [sizeColourQuantity, setSizeColourQuantity] = useState<sizeColourQuantityComboObject[]>([]);\r\n  const [selectedSizes, setSelectedSizes] = useState<Array<string>>([]);\r\n  const [sizeColourQuantityErrorMessage, setSizeColourQuantityErrorMessage] = useState('')\r\n\r\n  const {\r\n    name, description, productCategoryId,\r\n    subCategory, quantity, productDetailId,\r\n    priceINR, priceUSD, productId, productCategoryName,\r\n    sizeId, colourId, imageNames, imagePaths, size, colour, sizeColourQuantityCombo\r\n  } = useSelector<AppState, ProductItemType>(state => state.product.singleData || {} as ProductItemType)\r\n\r\n  const checkForProductCategory = (subCategory: string) => {\r\n    const filteredKey = Object.keys(SubCategories).filter((key) => key === subCategory);\r\n    if (filteredKey[0]) {\r\n      return Number(SubCategories[filteredKey[0]])\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  const productItemFormik = useFormik({\r\n    initialValues: {\r\n      name: name || '',\r\n      description: description || '',\r\n      productCategoryId: productCategoryId || productCategoryName ? checkForProductCategory(productCategoryName || '') : 0,\r\n      subCategory: subCategory || 0,\r\n      size: sizeId ? sizeId.toString() : '0',\r\n      colour: colourId ? colourId.toString() : '',\r\n      quantity: quantity || '',\r\n      priceINR: priceINR ? priceINR.split(',')[0] : '',\r\n      priceUSD: priceUSD ? priceUSD.split(',')[0] : '',\r\n      productImageBlob: null,\r\n      productId: productId || '0',\r\n      deletedImagePath: [],\r\n      updatedImageName: [],\r\n      code: '',\r\n      value: '',\r\n      imagePaths: imagePaths || '',\r\n      imageNames: imageNames || '',\r\n      adminProductCombo: sizeId ? sizeId.split(',').length : 1,\r\n      deletedProductDetailIds: [],\r\n      productDetailIdArray: productDetailId ? productDetailId.split(',') : [],\r\n    },\r\n    validationSchema: Yup.object({\r\n      name: Yup.string().required('Required'),\r\n      description: Yup.string().required('Required'),\r\n      productCategoryId: Yup.number().required('Required').moreThan(0, 'Required'),\r\n      subCategory: Yup.number().required('Required').moreThan(0, 'Required'),\r\n      //size: Yup.string().required('Required').matches(/[^0]/, 'Required'),\r\n      //colour: Yup.string().required('Required'),\r\n      // quantity: Yup.string().required('Required'),\r\n      priceINR: Yup.string().required('Required'),\r\n      priceUSD: Yup.string().required('Required'),\r\n      // productImageBlob: Yup.mixed().required('Required'),\r\n    }),\r\n    onSubmit: (values: ProductItemType) => {\r\n      if(sizeColourQuantity.length === 0  || sizeColourQuantity.some((item) => Object.keys(item).length < 3)){\r\n        setSizeColourQuantityErrorMessage('Please enter data for all the row(s)');\r\n        setTimeout(()=>{\r\n          setSizeColourQuantityErrorMessage('');\r\n        },3000);\r\n      }else {\r\n        dispatch(addUpdateProduct(values, 0, sizeColourQuantity));\r\n      }\r\n    },\r\n    enableReinitialize: true\r\n  });\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const productSize = useSelector<AppState, Size>(state => state.size);\r\n  const productColour = useSelector<AppState, Colour>(state => state.colour);\r\n  const productActionStatus = useSelector<AppState, Product>(state => state.product);\r\n  useEffect(() => {\r\n    dispatch(getSubCategory());\r\n    dispatch(getSize());\r\n    dispatch(getColour());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (productActionStatus._isSuccess) {\r\n      setTimeout(()=>{\r\n        dispatch(setDefaulState());\r\n      productItemFormik.resetForm();\r\n      setSizeColourQuantity([]);\r\n      history.push(\"/admin\");\r\n      },2000)\r\n    }\r\n  }, [productActionStatus._isSuccess]);\r\n\r\n  useEffect(() => {\r\n    if(sizeId && colourId && quantity && sizeId.length > 0){\r\n      const sizeArray = sizeId.split(',');\r\n      const colourArray = colourId.split(',');\r\n      const quantityArray = quantity.split(',');\r\n\r\n      const editSizeColourQuantityCombo : sizeColourQuantityComboObject[] = sizeArray.map((sizeItem, index) => {\r\n        return {\r\n          size: sizeItem,\r\n          colour: colourArray[index],\r\n          quantity: quantityArray[index]\r\n        }\r\n      });\r\n\r\n      setSizeColourQuantity(editSizeColourQuantityCombo);\r\n      setSelectedSizes(sizeArray);\r\n    }\r\n  },[sizeId, colourId, quantity])\r\n\r\n  const filteredSubcategories: ProductSubCategory[] = filterSubcategories(subCategories, productItemFormik.values.productCategoryId);\r\n\r\n  const filteredProductSize: ProductSize[] = (productSize.data &&\r\n    productSize.data.filter((size) => {\r\n      return size.productCategory === Number(productItemFormik.values.productCategoryId)\r\n    })) || [];\r\n\r\n  const checkForMaxFileUpload = (files: FileList | null) => {\r\n    let currentNumberOfFile = 0;\r\n    if (productItemFormik.values.productId !== '0' && productItemFormik.values.imagePaths) {\r\n      currentNumberOfFile += productItemFormik.values.imagePaths.split(', ').length;\r\n    }\r\n    if (files && Array.from(productItemFormik.values.productImageBlob || []).length + currentNumberOfFile !== 5) {\r\n      const currentFiles = Array.from(productItemFormik.values.productImageBlob || []);\r\n      let filesArray = Array.from(files);\r\n      filesArray.splice(5 - (currentFiles.length + currentNumberOfFile), filesArray.length - 1);\r\n      productItemFormik.setFieldValue(\"productImageBlob\", [...currentFiles, ...filesArray]);\r\n    }\r\n  };\r\n\r\n  const removeImage = (name: string) => {\r\n    const productImageBlob = Array.from(productItemFormik.values.productImageBlob || []);\r\n    productItemFormik.setFieldValue(\"productImageBlob\",\r\n      productImageBlob.filter((img: File) => {\r\n        return img.name != name\r\n      })\r\n    )\r\n  };\r\n\r\n  const removeCurrentImage = (name: string, path: string) => {\r\n    if (productItemFormik.values.deletedImagePath && productItemFormik.values.imagePaths && productItemFormik.values.imageNames) {\r\n      productItemFormik.setFieldValue(\"deletedImagePath\", [...productItemFormik.values.deletedImagePath, path]);\r\n      productItemFormik.setFieldValue(\"imagePaths\",\r\n        productItemFormik.values.imagePaths.split(',').filter((imagePath) => imagePath != path).join(',')\r\n      );\r\n      productItemFormik.setFieldValue(\"imageNames\",\r\n        productItemFormik.values.imageNames.split(',').filter((imageName) => imageName != name).join(',')\r\n      )\r\n    }\r\n  };\r\n\r\n  const getFileNameAndPath = (fileName?: string, filePath?: string) => {\r\n    if (fileName && filePath && fileName.length > 0 && filePath.length > 0) {\r\n      const fileNames = fileName.split(',');\r\n      const filePaths = filePath.split(',');\r\n\r\n      return filePaths.map((path: string, index: number) => {\r\n        return <div key={index} className=\"uk-inline product-uploader-container\">\r\n          <img key={index} src={serverImagePath + path} alt={fileNames[index]} />\r\n          <div className=\"uk-overlay-primary uk-position-cover\">\r\n            <div className=\"uk-position-center\">\r\n              <span uk-icon=\"icon: close\" onClick={() => removeCurrentImage(fileNames[index], path)} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      })\r\n    }\r\n  }\r\n\r\n  const addProductComboLength = () => {\r\n    const availableSizes = filteredProductSize.filter(({sizeId}) => selectedSizes.indexOf(sizeId?.toString() || '') === -1);\r\n    if(availableSizes.length > 0 && productItemFormik.values.adminProductCombo){\r\n      productItemFormik.setFieldValue('adminProductCombo', \r\n      productItemFormik.values.adminProductCombo + 1)\r\n    } else if(availableSizes.length === 0){\r\n      setSizeColourQuantityErrorMessage('No more sizes available');\r\n      setTimeout(()=>{\r\n        setSizeColourQuantityErrorMessage('');\r\n      },3000);\r\n    }\r\n  }\r\n\r\n  const reduceProductComboLength = (index: number) => {\r\n    if(productItemFormik.values.deletedProductDetailIds && productItemFormik.values.productDetailIdArray){\r\n      productItemFormik.setFieldValue('deletedProductDetailIds', \r\n      [...productItemFormik.values.deletedProductDetailIds,productItemFormik.values.productDetailIdArray[index]])\r\n    }\r\n    selectedSizes.splice(index,1);\r\n    sizeColourQuantity.splice(index,1);\r\n    const newPDArray = [...productItemFormik.values.productDetailIdArray];\r\n    newPDArray.splice(index,1)\r\n    productItemFormik.setFieldValue('productDetailIdArray', [...newPDArray]);\r\n    setSelectedSizes([...selectedSizes]);\r\n    setSizeColourQuantity([...sizeColourQuantity]);\r\n    if(productItemFormik.values.adminProductCombo && productItemFormik.values.adminProductCombo > 1) {\r\n      productItemFormik.setFieldValue('adminProductCombo', \r\n      productItemFormik.values.adminProductCombo - 1)\r\n    }\r\n  }\r\n\r\n  const updatedSizeColourQuantityArray = (index: number, field: string, value: string) => {\r\n    // let currentItem = productItemFormik.values.sizeColourQuantityCombo || [];\r\n    let currentItem  = [...sizeColourQuantity] as sizeColourQuantityComboObject[];\r\n    if(!currentItem[index]){\r\n      currentItem[index] = {} as sizeColourQuantityComboObject\r\n    }\r\n        if(field === 'size') {\r\n          if(currentItem[index].size){\r\n            selectedSizes.splice(selectedSizes.indexOf(value), 1);\r\n          }\r\n            currentItem[index].size = value;\r\n            setSelectedSizes([...selectedSizes, value]);\r\n        } else if (field === 'colour') {\r\n          currentItem[index].colour = value;\r\n          // currentItem.forEach((item) => item.colour = value);\r\n        } else if (field === 'quantity') {\r\n          currentItem[index].quantity = value;\r\n        }\r\n\r\n        if(currentItem.length> 1){\r\n          if(field === 'colour'){\r\n            currentItem.forEach((item) => item.colour = value);\r\n          } else {\r\n            currentItem.forEach((item) => item.colour = currentItem[0].colour);\r\n          }\r\n        }\r\n\r\n        if(productItemFormik.values.productDetailIdArray[index]){\r\n          currentItem[index].productDetailId  = productItemFormik.values.productDetailIdArray[index];\r\n        } else {\r\n          currentItem[index].productDetailId = '0'\r\n        }\r\n      setSizeColourQuantity(currentItem);\r\n  }\r\n\r\n// console.log(sizeColourQuantity)\r\n  // if(Object.keys(sizeColourQuantity).length > 0){console.log(sizeColourQuantity)}\r\n  return (\r\n    <form onSubmit={productItemFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Product</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Name</div>\r\n                      <input className=\"uk-input \" id=\"name\" type=\"input\"\r\n                        {...productItemFormik.getFieldProps('name')} />\r\n                      {\r\n                        productItemFormik.touched.name && productItemFormik.errors.name ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.name}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Description</div>\r\n                      <textarea className=\"uk-textarea\" id=\"description\" cols={30}\r\n                        {...productItemFormik.getFieldProps('description')} />\r\n                      {\r\n                        productItemFormik.touched.description && productItemFormik.errors.description ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.description}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Product Category</div>\r\n                      <select className=\"uk-select\" id=\"productCategoryId\"\r\n                        onChange={(e) => { productItemFormik.handleChange(e); productItemFormik.setFieldValue('subCategory', 0); setSizeColourQuantity([]); setSelectedSizes([]); productItemFormik.setFieldValue('adminProductCombo',1)}}\r\n                        onBlur={productItemFormik.handleBlur}\r\n                        value={productItemFormik.values.productCategoryId}\r\n                      >\r\n                        {/* {...productItemFormik.getFieldProps('productCategoryId')} */}\r\n                        <option key='0' value={0}>Select</option>\r\n                        <option key='1' value={1}>Lingerie</option>\r\n                        <option key='2' value={2}>Footwear</option>\r\n                        <option key='3' value={3}>Bindi</option>\r\n                        <option key='4' value={4}>Handicraft</option>\r\n                      </select>\r\n                      {\r\n                        productItemFormik.touched.productCategoryId && productItemFormik.errors.productCategoryId ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.productCategoryId}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">SubCategory</div>\r\n                      <select className=\"uk-select\" id=\"subCategory\"\r\n                        onChange={(e) => { productItemFormik.handleChange(e)}} // productItemFormik.setFieldValue('size', 0) \r\n                        onBlur={productItemFormik.handleBlur}\r\n                        value={productItemFormik.values.subCategory}>\r\n                        <option key='0' value={0}>Select</option>\r\n                        {\r\n                          filteredSubcategories.map((subCategory, index) => {\r\n                            return <option key={index} value={subCategory.subCategoryId}>{subCategory.code}</option>\r\n                          })\r\n                        }\r\n                      </select>\r\n                      {\r\n                        productItemFormik.touched.subCategory && productItemFormik.errors.subCategory ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.subCategory}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-placeholder uk-text-center\">\r\n                  {\r\n                    Array(productItemFormik.values.adminProductCombo).fill(1).map((value, index) => {\r\n                      return (\r\n                        <div key={index} className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\">Size</div>\r\n                              <select className=\"uk-select\" id=\"size\"  \r\n                              value = {sizeColourQuantity[index] ? sizeColourQuantity[index].size : 0}\r\n                              onChange={(e) => {updatedSizeColourQuantityArray(index, 'size', e.currentTarget.value)}}>\r\n                                {/* {...productItemFormik.getFieldProps('size')}> */}\r\n                                <option key='0' value={0}>Select</option>\r\n                                {\r\n                                  filteredProductSize.filter((size) => {\r\n                                    return size.sizeId && index === selectedSizes.indexOf(size.sizeId.toString()) ? true : size.sizeId && selectedSizes.indexOf(size.sizeId.toString()) === -1\r\n                                           \r\n                                  })\r\n                                    .map((size, index) => {\r\n                                    return <option key={index} value={size.sizeId} >{size.value}</option>\r\n                                  })\r\n                                }\r\n                              </select>\r\n                              {/* {\r\n                                productItemFormik.touched.size && productItemFormik.errors.size ? (\r\n                                  <span className=\"uk-text-danger\">{productItemFormik.errors.size}</span>\r\n                                ) : ''\r\n                              } */}\r\n                            </label>\r\n                          </div>\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\">Colour</div>\r\n                              <select className=\"uk-select\" id=\"colour\" \r\n                              value={sizeColourQuantity && sizeColourQuantity[0] && sizeColourQuantity[0].colour || '0'}\r\n                              onChange={(e) => {updatedSizeColourQuantityArray(index, 'colour', e.currentTarget.value)}}>\r\n                                {/* {...productItemFormik.getFieldProps('colour')}> */}\r\n                                <option key='0' value={0}>Select</option>\r\n                                {\r\n                                  Array.isArray(productColour.data) &&\r\n                                  productColour.data.map((colour, index) => {\r\n                                    return <option key={index} value={colour.colourId}>{colour.value}</option>\r\n                                  })\r\n                                }\r\n                              </select>\r\n                            </label>\r\n                          </div>\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\">Quantity</div>\r\n                              <input className=\"uk-input \" id=\"quantity\" type=\"number\"\r\n                              value ={sizeColourQuantity[index] ? sizeColourQuantity[index].quantity : ''}\r\n                              onChange={(e) => {updatedSizeColourQuantityArray(index, 'quantity', e.currentTarget.value)}}/>\r\n                                {/* {...productItemFormik.getFieldProps('quantity')} /> */}\r\n                              {/* {\r\n                                productItemFormik.touched.quantity && productItemFormik.errors.quantity ? (\r\n                                  <span className=\"uk-text-danger\">{productItemFormik.errors.quantity}</span>\r\n                                ) : ''\r\n                              } */}\r\n                            </label>\r\n                          </div>\r\n                          <div>\r\n                            <label>\r\n                              <div className=\"uk-form-label\"></div>\r\n                              <button disabled={productItemFormik.values.adminProductCombo === 1} className=\"uk-button uk-button-danger admin-add-more-combo\" onClick={() => reduceProductComboLength(index)}>Delete</button>\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    })\r\n                  }\r\n                  <div className=\"uk-nav-center admin-add-more-combo\">\r\n                  <span className=\"uk-text-danger \">{sizeColourQuantityErrorMessage}</span>\r\n                  </div>\r\n                  \r\n                  <button className=\"uk-button uk-button-primary\" disabled={sizeColourQuantity.length === 0 || sizeColourQuantity.length !== productItemFormik.values.adminProductCombo  } onClick={(e) => {e.preventDefault(); addProductComboLength()}}>Add More</button>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Price INR</div>\r\n                      <input className=\"uk-input \" id=\"priceINR\" type=\"input\"\r\n                        {...productItemFormik.getFieldProps('priceINR')} />\r\n                      {\r\n                        productItemFormik.touched.priceINR && productItemFormik.errors.priceINR ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.priceINR}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Price USD</div>\r\n                      <input className=\"uk-input \" id=\"priceUSD\" type=\"input\"\r\n                        {...productItemFormik.getFieldProps('priceUSD')} />\r\n                      {\r\n                        productItemFormik.touched.priceUSD && productItemFormik.errors.priceUSD ? (\r\n                          <span className=\"uk-text-danger\">{productItemFormik.errors.priceUSD}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                  <label id=\"product-upload\" htmlFor=\"productImageBlob\" className=\"uk-placeholder uk-text-center\">\r\n                    <span className=\"upload-icon-margin\" uk-icon=\"icon: cloud-upload; ratio: 1.25;\" />\r\n                     Click this banner to upload the images <input id=\"productImageBlob\" type=\"file\" multiple={true}\r\n                      onChange={(event) => { checkForMaxFileUpload(event.currentTarget.files) }} />\r\n                    {\r\n                      productItemFormik.touched.productImageBlob && productItemFormik.errors.productImageBlob ? (\r\n                        <span className=\"uk-text-danger\">{productItemFormik.errors.productImageBlob}</span>\r\n                      ) : ''\r\n                    }\r\n                  </label>\r\n                </div>\r\n              </fieldset>\r\n              {\r\n                 productItemFormik.values.productId !== '0' &&\r\n                 <fieldset className=\"uk-fieldset\">\r\n                <div className=\"uk-form-label\">Current Images</div>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-5@s\" uk-grid=\"true\">\r\n\r\n                  {\r\n                    getFileNameAndPath(productItemFormik.values.imageNames, productItemFormik.values.imagePaths)\r\n                  }\r\n                  {/* {\r\n                      productItemFormik.values.imagePaths &&\r\n                      productItemFormik.values.imagePaths.split(',').map((path, i) => {\r\n                      return <div className=\"uk-inline product-uploader-container\">\r\n                      <img key={i} src={apiServerHost+path} alt={file.name} />\r\n                      <div className=\"uk-overlay-primary uk-position-cover\">\r\n                        <div className=\"uk-position-center\">\r\n                          <span uk-icon=\"icon: close\" onClick={() => removeImage(file.name)}/>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                     })\r\n                    [].map.call(productItemFormik.values.imagePaths, (file: any, i) => {\r\n                      return <div className=\"uk-inline product-uploader-container\">\r\n                        <img key={i} src={URL.createObjectURL(file)} alt={file.name} />\r\n                        <div className=\"uk-overlay-primary uk-position-cover\">\r\n                          <div className=\"uk-position-center\">\r\n                            <span uk-icon=\"icon: close\" onClick={() => removeImage(file.name)}/>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    }) */}\r\n\r\n                  {/* <img src={'http://127.0.0.1:5000/images/1c508610-eee5-4360-8f76-f0e70fa5ca92.png'} alt={\"a\"} /> */}\r\n                </div>\r\n              </fieldset>\r\n              }\r\n              \r\n              {\r\n                <fieldset className=\"uk-fieldset\">\r\n                  <div className=\"uk-form-label\">New Images</div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-5@s\" uk-grid=\"true\">\r\n                    {/* <div> */}\r\n                    {/* <label> */}\r\n                    {productItemFormik.values.productImageBlob &&\r\n                      [].map.call(productItemFormik.values.productImageBlob, (file: any, i) => {\r\n                        return <div className=\"uk-inline product-uploader-container\">\r\n                          <img key={i} src={URL.createObjectURL(file)} alt={file.name} />\r\n                          <div className=\"uk-overlay-primary uk-position-cover\">\r\n                            <div className=\"uk-position-center\">\r\n                              <span uk-icon=\"icon: close\" onClick={() => removeImage(file.name)} />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      })\r\n                    }\r\n                    {/* <img src={'http://127.0.0.1:5000/images/1c508610-eee5-4360-8f76-f0e70fa5ca92.png'} alt={\"a\"} /> */}\r\n                    {/* </label> */}\r\n                    {/* </div> */}\r\n                  </div>\r\n                </fieldset>\r\n              }\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...productActionStatus} />\r\n          <button disabled={productActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              productActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"/tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductItem\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductItem } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AppState, addUpdateProduct, Coupon, updateProductHighLight, Product, errorProduct, setDefaulState } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport { countHighlightProducts } from 'services';\r\n\r\ninterface Props {\r\n  addEditToggle: Function;\r\n}\r\n\r\nconst ProductList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const deleteProduct = (productId: string) => {\r\n    const input = window.confirm('Sure want to delete?');\r\n    const name = '', code = '', priceINR = '0', priceUSD = '0', value = '', subCategory = 1, deletedImagePath = [''], productDetailIdArray = [''], deletedProductDetailIds = ['']\r\n    if (input) dispatch(addUpdateProduct({ productId, name, code, priceUSD, priceINR, value, deletedImagePath, subCategory, productDetailIdArray, deletedProductDetailIds }, 1, []));\r\n  }\r\n  const stateData = useSelector<AppState, ProductItem[]>(state => state.product.data || []);\r\n  const productColumns = [\r\n    // {\r\n    //   name: 'ProductId',\r\n    //   selector: 'productId',\r\n    //   sortable: false,\r\n    // },<span className=\"uk-label uk-label-warning uk-margin-xsmall-right\">top selling</span>\r\n    {\r\n      name: 'Category',\r\n      selector: 'productCategoryName',\r\n      sortable: true,\r\n      cell: (row: { trending: boolean, latest: boolean, productCategoryName: string}) => {\r\n        return (\r\n          row.trending ? <>\r\n            <span style={{color:\"green\"}} uk-icon=\"icon: bolt;\"/>\r\n            <span style={{marginLeft:\"5px\"}}>\r\n              {row.productCategoryName}\r\n            </span>\r\n          </> :\r\n          row.latest ? <>\r\n            <span style={{color:\"orange\"}} uk-icon=\"icon: star;\"/>\r\n            <span style={{marginLeft:\"5px\"}}>\r\n              {row.productCategoryName}\r\n            </span>\r\n          </> :\r\n          <span  style={{marginLeft:\"25px\"}}>\r\n          {row.productCategoryName}\r\n        </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      name: 'Product Name',\r\n      selector: 'name',\r\n      sortable: true,\r\n    },\r\n    // {\r\n    //   name: 'Price INR',\r\n    //   selector: 'priceInr',\r\n    //   sortable: true,\r\n    // },\r\n    // {\r\n    //   name: 'Price USD',\r\n    //   selector: 'priceUsd',\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      name: 'Quantity',\r\n      selector: 'quantity',\r\n      sortable: true,\r\n    },\r\n    // {\r\n    //   name: 'Colour',\r\n    //   selector: 'colour',\r\n    //   sortable: true,\r\n    // },\r\n    // {\r\n    //   name: 'Size',\r\n    //   selector: 'size',\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      name: 'Delete',\r\n      sortable: false,\r\n      cell: (row: { productId: number, name: string, code: string, priceUSD: string, priceINR: string, value: string }) => {\r\n        return <button type=\"submit\" className=\"uk-button-small uk-button-danger\" onClick={() => deleteProduct(row.productId.toString())}>\r\n          <span>Delete</span>\r\n        </button>\r\n      }\r\n    },\r\n    {\r\n      name: 'Edit',\r\n      sortable: false,\r\n      cell: (row: { productId: number, code: string, value: string }) => {\r\n        return <button type=\"submit\" className=\"uk-button-small uk-button-danger\" onClick={() => { props.addEditToggle(true); history.push(\"/admin/product/\" + row.productId) }}>\r\n          <span>Edit</span>\r\n        </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.PRODUCT}\r\n      ExpandableComponent={ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Product Name\"\r\n      expandableRows={true} />\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { trending, latest, productId }: ProductItem = data;\r\n  const productActionStatus = useSelector<AppState, Product>(state => state.product);\r\n\r\n  const productQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      productId,\r\n      highlight: trending ? '1' : latest ? '2' : ''\r\n    } as ProductItem,\r\n    onSubmit: (value: ProductItem) => {\r\n      if(value.highlight === '1' && countHighlightProducts(productActionStatus.data||[],true) === 12){\r\n        dispatch(errorProduct('Max trending product count of 12 reached.'));\r\n        setTimeout(() => {\r\n          productQuickViewFormik.setSubmitting(false)\r\n        },2000);\r\n      } else if(value.highlight === '2' && countHighlightProducts(productActionStatus.data||[],false) === 12){\r\n        dispatch(errorProduct('Max latest product count of 12 reached.'));\r\n        setTimeout(() => {\r\n          productQuickViewFormik.setSubmitting(false)\r\n        },2000);\r\n      } else {\r\n        dispatch(updateProductHighLight(value.highlight || '',value.productId))\r\n      }\r\n      // dispatch(updateCoupon(value));\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={productQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Product Highlight</div>\r\n              <select className=\"uk-select\" id=\"highlight\"\r\n                {...productQuickViewFormik.getFieldProps('highlight')}>\r\n                <option key='1' value=\"\">None</option>\r\n                <option key='2' value=\"1\">Trending</option>\r\n                <option key='3' value=\"2\">Latest</option>\r\n              </select>\r\n              {\r\n                productQuickViewFormik.touched.highlight && productQuickViewFormik.errors.highlight ? (\r\n                  <span className=\"uk-text-danger\">{productQuickViewFormik.errors.highlight}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Product Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  productActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }<span> {console.log(productQuickViewFormik.isSubmitting)}</span>\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n          {productQuickViewFormik.isSubmitting && <NotificationContainer {...productActionStatus} />}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ProductList\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppState, Coupon, updateCoupon } from 'reducers';\r\nimport { CustomerOrders, singleOrder } from 'reducers/Order';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductCoupon, Order, OrderItems } from 'types';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport { getIconForAdminOrder } from 'services';\r\n\r\ninterface Props{\r\n  addEditToggle: Function;\r\n}\r\n\r\nconst OrderList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  // const deleteCoupon = (couponId: number, code: string, value: string) => {\r\n  //   const input = window.confirm('Sure want to delete?');\r\n  //   if (input) dispatch(updateCoupon({ couponId, value, code }, true));\r\n  // }\r\n  const stateData = useSelector<AppState, Order[]>(state => state.customerOrders.data || []);\r\n  const productColumns = [\r\n    {\r\n      name: 'Order Number',\r\n      sortable: true,\r\n      wrap: true,\r\n      cell: (row: { orderItems: OrderItems[], orderNumber: string}) => {\r\n        const icon = getIconForAdminOrder(row.orderItems);\r\n        return (\r\n          icon !== '' ?\r\n          <>\r\n            {icon === 'lifesaver' ?  <span style={{ color: \"green\" }} uk-icon=\"icon: lifesaver;\" /> \r\n            : icon === 'plus-circle' ? <span style={{ color: \"green\" }} uk-icon=\"icon: plus-circle;\" /> \r\n            : icon === 'check' ? <span style={{ color: \"green\" }} uk-icon=\"icon: check;\" />\r\n            : icon === 'cart' ? <span style={{ color: \"green\" }} uk-icon=\"icon: cart;\" /> \r\n            : icon === 'history' ? <span style={{ color: \"orange\" }} uk-icon=\"icon: history;\" />\r\n            : icon === 'minus-circle' ? <span style={{ color: \"red\" }} uk-icon=\"icon: minus-circle;\" />\r\n            : icon === 'warning' ? <span style={{ color: \"red\" }} uk-icon=\"icon: warning;\" />\r\n            : ''\r\n          }\r\n            <span style={{marginLeft:\"5px\", whiteSpace:\"nowrap\"}}>\r\n              {row.orderNumber}\r\n            </span>\r\n          </> :\r\n          <span  style={{marginLeft:\"25px\"}}>\r\n          {row.orderNumber}\r\n        </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      name: 'Order Date',\r\n      selector: 'paymentDate',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Total Price-Mode',\r\n      sortable: false,\r\n      cell: (row: { totalPrice: string, paymentMode: string}) => {\r\n      return  <span>{row.paymentMode === 'PAYPAL'? '$' : '₹'} {row.totalPrice} ({row.paymentMode})</span>\r\n      }\r\n    },\r\n    {\r\n      name: 'View Details',\r\n      sortable: false,\r\n      cell: (row: Order) => {\r\n        return <button type=\"submit\" className=\"uk-button-small uk-button-primary\" onClick={() => {dispatch(singleOrder(row)) ;props.addEditToggle(true)}}>\r\n          <span>View</span>\r\n        </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.ORDERS}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Order Number\"\r\n      expandableRows={false}\r\n      sortByColumn=\"paymentDate\" \r\n      defaultSortAsc={false}/>\r\n  )\r\n}\r\nexport {\r\n  OrderList\r\n}","import React, { useEffect, useState, Fragment } from 'react';\r\nimport { Order, OrderUpdateAdmin } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, getShippers, Shipper, Shipment, updateOrderAdmin } from 'reducers';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport { getPaypalTransactionId } from 'services';\r\n\r\n\r\nconst OrderDetails: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  // const [productItemCount, setProductItemCount] = useState(0);\r\n  const [adminShipmentData, setAdminShipmentData] = useState<OrderUpdateAdmin[]>([]);\r\n  const [orginalTrackingLink, setOrginalTrackingLink] = useState<string[]>([]);\r\n  const stateData = useSelector<AppState, Order>(state => state.customerOrders.singleData || {} as Order);\r\n  const shippers = useSelector<AppState, Shipper>(state => state.shipper || {} as Shipper);\r\n  const shipmentStatus = useSelector<AppState, Shipment>(state => state.shipment);\r\n  useEffect(() => {\r\n    if (stateData && stateData.orderItems) {\r\n      let tempShipmentData: OrderUpdateAdmin[] = [];\r\n      let tempTrackingLink: string[] = [];\r\n      stateData.orderItems.forEach(orderItems => {\r\n        tempShipmentData.push(\r\n          {\r\n            orderDetailId: orderItems.orderDetailId,\r\n            deliveryDate: orderItems.shipmentDetails?.deliveryDate,\r\n            paymentReturned: orderItems.shipmentDetails?.paymentReturned,\r\n            returnStatus: orderItems.shipmentDetails?.returnStatus,\r\n            shipmentId: orderItems.shipmentDetails?.shipmentId || '0',\r\n            shipper: orderItems.shipmentDetails?.shipper,\r\n            shippingDate: orderItems.shipmentDetails?.shippingDate,\r\n            trackingNumber: orderItems.shipmentDetails?.trackingNumber\r\n          } as OrderUpdateAdmin);\r\n        tempTrackingLink.push(orderItems.shipmentDetails?.trackingNumber || '')\r\n      });\r\n      setAdminShipmentData(tempShipmentData);\r\n      setOrginalTrackingLink(tempTrackingLink);\r\n    }\r\n  }, [stateData]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getShippers());\r\n  }, [])\r\n\r\n  const updateShipmentData = (index: number, key: string, value: string) => {\r\n    let shipmentDataCopy = [...adminShipmentData];\r\n    const shipmentDataToUpdate = shipmentDataCopy.splice(index, 1);\r\n    const updatedShipmentData = { ...shipmentDataToUpdate[0], [key]: value };\r\n    shipmentDataCopy.splice(index, 0, updatedShipmentData)\r\n    setAdminShipmentData(shipmentDataCopy);\r\n  };\r\n\r\n  const updateOrderStatus = (index: number) => {\r\n    const isTrackingChanged = adminShipmentData[index].trackingNumber !== orginalTrackingLink[index];\r\n    if(isTrackingChanged){\r\n      let orginalTrackingLinkCopy = [...orginalTrackingLink];\r\n      orginalTrackingLinkCopy[index] = adminShipmentData[index].trackingNumber || '';\r\n      setOrginalTrackingLink(orginalTrackingLinkCopy);\r\n    }\r\n    dispatch(updateOrderAdmin(\r\n      {...adminShipmentData[index], \r\n        orderNumber: stateData.orderNumber,\r\n        customerEmail: stateData.userDetails?.emailAddress,\r\n        customerName: stateData.userDetails?.firstName\r\n      }, isTrackingChanged))\r\n  }\r\n  return (\r\n    <form className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <header className=\"uk-card-header\"><h1 className=\"uk-h2\">Order Summay</h1></header>\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">#Order Details</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Order Number</div>\r\n                      <span className=\"uk-text-small\">{stateData.orderNumber}</span>\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Order Date</div>\r\n                      <span className=\"uk-text-small\">{stateData.paymentDate}</span>\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Order Cost</div>\r\n                      <span className=\"uk-text-small\">{stateData.paymentMode && stateData.paymentMode.toLowerCase() === 'paypal' ? '$' : '₹'}{stateData.totalPrice}</span>\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Payment Mode</div>\r\n                      <span className=\"uk-text-small\">{stateData.paymentMode}</span>\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Payment Transaction Id</div>\r\n                      <span className=\"uk-text-small\">{stateData.paymentMode && stateData.paymentMode.toLowerCase() === 'paypal' ? getPaypalTransactionId(stateData.paypalResponse) : stateData.razorpayPaymentId}</span>\r\n                    </label>\r\n                  </div>\r\n                  {\r\n                    stateData.paymentMode && stateData.paymentMode.toLowerCase() === 'paypal' &&\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Shippment Type</div>\r\n                        <span className=\"uk-text-small\">{stateData.standardShipping === false ? 'Express' : 'Standard'}</span>\r\n                      </label>\r\n                    </div>\r\n                  }\r\n\r\n                </div>\r\n                <div className=\"uk-divider-icon\"></div>\r\n              </fieldset>\r\n              {\r\n                stateData.userDetails &&\r\n                <fieldset className=\"uk-fieldset\">\r\n                  <legend className=\"uk-h4\">#User Details</legend>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Name</div>\r\n                        <span className=\"uk-text-small\">\r\n                          {stateData.userDetails.firstName + ' ' + stateData.userDetails.lastName}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Mobile</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.mobile}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Email</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.emailAddress}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Discount</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.discount || 0}%</span>\r\n                      </label>\r\n                    </div>\r\n                    {/* <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Gender</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.gender}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Date of birth</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.dob}</span>\r\n                      </label>\r\n                    </div> */}\r\n                  </div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Country</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.country}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">State</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.state}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">City</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.city}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Pincode</div>\r\n                        <span className=\"uk-text-small\">{stateData.userDetails.pincode}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Address</div>\r\n                        <span className=\"uk-text-small\">\r\n                          {\r\n                            stateData.userDetails.addressLineOne\r\n                            + ' ' +\r\n                            stateData.userDetails.addressLineTwo\r\n                            + ' ' +\r\n                            stateData.userDetails.addressLineThree\r\n                          }\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-divider-icon\"></div>\r\n                </fieldset>\r\n              }\r\n              {\r\n                stateData.orderItems && stateData.orderItems.length > 0 &&\r\n                <fieldset className=\"uk-fieldset\">\r\n                  <legend className=\"uk-h4\">#Order Items</legend>\r\n                  {\r\n                    stateData.orderItems.map((product, index) => {\r\n                      return (\r\n                        <Fragment key={index}>\r\n                          <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Product Image</div>\r\n                                <div className=\"tm-ratio tm-ratio-16-9\">\r\n                                  <a className=\"tm-media-box\" onClick={() => history.push('/productDetails/' + product.productId)}>\r\n                                    <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + product.productImage} alt={product.productImage} /></figure>\r\n                                  </a>\r\n                                </div>\r\n                                {/* <img src={serverImagePath + product.productImage} alt={product.productImage} /> */}\r\n                              </label>\r\n                            </div>\r\n\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Name</div>\r\n                                <span className=\"uk-text-small\">{product.productName}</span>\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Quantity</div>\r\n                                <span className=\"uk-text-small\">{product.quantity}</span>\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Price</div>\r\n                                <span className=\"uk-text-small\">{product.currency.toString() !== '1' ? '$' : '₹'}{product.productPrice}</span>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div uk-grid=\"true\" className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" >\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Shipper</div>\r\n                                <select className=\"uk-select shipper-max-width\" name=\"shipper\" id=\"shipper\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].shipper || '0'}\r\n                                  onChange={(e) => updateShipmentData(index, 'shipper', e.currentTarget.value)}\r\n                                >\r\n                                  <option key='0' value={0}>Select</option>\r\n                                  {\r\n                                    shippers.data?.map((shipper, index) => {\r\n                                      return <option key={index} value={shipper.shipperId}>{shipper.shipperName}</option>\r\n                                    })\r\n                                  }\r\n                                </select>\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Tracking Number</div>\r\n                                <input className=\"uk-input shipper-max-width\" id=\"trackingNumber\" type=\"text\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].trackingNumber || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'trackingNumber', e.currentTarget.value)}\r\n                                />\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Shipping Date</div>\r\n                                <input className=\"uk-input shipper-max-width\" id=\"shippingDate\" type=\"date\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].shippingDate || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'shippingDate', e.currentTarget.value)} />\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Delivery Date</div>\r\n                                <input className=\"uk-input shipper-max-width\" id=\"deliveryDate\" type=\"date\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].deliveryDate || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'deliveryDate', e.currentTarget.value)}\r\n                                />\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div uk-grid=\"true\" className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" >\r\n                            <div className=\"uk-divider-vertical\">\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Return Status</div>\r\n                                <select className=\"uk-select shipper-max-width\" name=\"returnStatus\" id=\"returnStatus\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].returnStatus || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'returnStatus', e.currentTarget.value)}\r\n                                >\r\n                                  <option key='0' value={0}>Select</option>\r\n                                  <option key='1' value='In Progress'>In Progress</option>\r\n                                  <option key='2' value='Accepted'>Accepted</option>\r\n                                  <option key='3' value='Declined'>Declined</option>\r\n                                </select>\r\n                              </label>\r\n                            </div>\r\n                            <div>\r\n                              <label>\r\n                                <div className=\"uk-form-label\">Payment Returned</div>\r\n                                <select className=\"uk-select shipper-max-width\" name=\"paymentReturned\" id=\"paymentReturned\"\r\n                                  value={adminShipmentData[index] && adminShipmentData[index].paymentReturned || ''}\r\n                                  onChange={(e) => updateShipmentData(index, 'paymentReturned', e.currentTarget.value)}\r\n                                >\r\n                                  <option key='0' value={0}>Select</option>\r\n                                  <option key='1' value='No'>No</option>\r\n                                  <option key='2' value='Yes'>Yes</option>\r\n                                </select>\r\n                              </label>\r\n                            </div>\r\n                            {/* <div>\r\n                            </div> */}\r\n\r\n                          </div>\r\n                          <div uk-grid=\"true\" className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" >\r\n                            <div className=\"uk-nav-center\">\r\n                              {\r\n                                shipmentStatus.data?.orderDetailId?.toString() === product.orderDetailId.toString() &&\r\n                                <NotificationContainer {...shipmentStatus} />\r\n                              }\r\n                              <label>\r\n                                {/* <div className=\"uk-form-label\">Save Details</div> */}\r\n                                <button className=\"uk-button uk-button-primary \"\r\n                                  disabled={shipmentStatus.data?.orderDetailId?.toString() === product.orderDetailId.toString() && shipmentStatus._isLoading}\r\n                                  onClick={(e) => { updateOrderStatus(index); e.preventDefault() }}>\r\n                                  {\r\n                                    shipmentStatus.data?.orderDetailId?.toString() === product.orderDetailId.toString() &&\r\n                                    shipmentStatus._isLoading &&\r\n                                    <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                                  }\r\n                                    Submit\r\n                                </button>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"uk-divider-order-items\"></div>\r\n                        </Fragment>\r\n                      )\r\n                    })\r\n                  }\r\n                </fieldset>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          {/* <NotificationContainer {...sizeActionStatus} />\r\n          <button disabled={sizeActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              sizeActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button> */}\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  OrderDetails\r\n}","import React, { useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { NotificationContainer } from 'components/shared';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, Shipper, saveShipper } from 'reducers';\r\nimport { OrderShipper } from 'types';\r\n\r\nconst ShipperDetails: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const shipperActionStatus = useSelector<AppState, Shipper>(state => state.shipper);\r\n  const shipperFormik = useFormik({\r\n    initialValues: {\r\n      shipperName: '',\r\n      trackingLink: '',\r\n      shipperId: '0'\r\n    },\r\n    validationSchema: Yup.object({\r\n      shipperName: Yup.string().required('Required'),\r\n      trackingLink: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (values: OrderShipper) => {\r\n      dispatch(saveShipper(values));\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (shipperActionStatus._isSuccess) {\r\n      shipperFormik.resetForm();\r\n    }\r\n  }, [shipperActionStatus._isSuccess])\r\n  return (\r\n    <form onSubmit={shipperFormik.handleSubmit} className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-h4\">Shipper</legend>\r\n                <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@s\" uk-grid=\"true\">\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Shipper Name</div>\r\n                      <input className=\"uk-input \" id=\"shipperName\" type=\"input\"\r\n                        {...shipperFormik.getFieldProps('shipperName')} />\r\n                      {\r\n                        shipperFormik.touched.shipperName && shipperFormik.errors.shipperName ? (\r\n                          <span className=\"uk-text-danger\">{shipperFormik.errors.shipperName}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <div className=\"uk-form-label\">Tracking Link</div>\r\n                      <input className=\"uk-input \" type=\"input\"\r\n                        {...shipperFormik.getFieldProps('trackingLink')} />\r\n                      {\r\n                        shipperFormik.touched.trackingLink && shipperFormik.errors.trackingLink ? (\r\n                          <span className=\"uk-text-danger\">{shipperFormik.errors.trackingLink}</span>\r\n                        ) : ''\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"uk-card-footer uk-text-center\">\r\n          <NotificationContainer {...shipperActionStatus} />\r\n          <button disabled={shipperActionStatus._isLoading} type=\"submit\" className=\"uk-button uk-button-primary \">\r\n            {\r\n              shipperActionStatus._isLoading &&\r\n              <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n            }\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ShipperDetails\r\n}","import React from 'react';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ProductCoupon, OrderShipper } from 'types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, updateCoupon, Coupon, Shipper, updateShipper } from 'reducers';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\nconst ShipperList: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const deleteShipper = (shipperId: string, shipperName:string, trackingLink:string) => {\r\n    const input = window.confirm('Sure want to delete?');\r\n    if(input)dispatch(updateShipper({shipperId,shipperName,trackingLink},true));\r\n  } \r\n  const stateData = useSelector<AppState, OrderShipper[]>(state => state.shipper.data || []);  \r\n  const productColumns = [\r\n    {\r\n      name: 'Shipper Name',\r\n      selector: 'shipperName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Tracking Link',\r\n      selector: 'trackingLink',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Delete',\r\n      sortable: false,\r\n      cell: (row: { shipperName: string, trackingLink: string, shipperId: string }) => {\r\n        return  <button type=\"submit\" className=\"uk-button-small uk-button-danger\" onClick={() => deleteShipper(row.shipperId, row.shipperName, row.trackingLink)}>\r\n                   <span>Delete</span>\r\n                </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return(\r\n    <AdminProductList \r\n      productColumns={productColumns} \r\n      productType={SubProducts.SHIPPER} \r\n      ExpandableComponent= {ExpandableComponent}\r\n      stateData={stateData}\r\n      searchPlaceholder=\"Search Shipper Name\"\r\n      expandableRows = {true}\r\n      sortByColumn=\"shipperName\"/>\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const {shipperId,shipperName,trackingLink }: OrderShipper = data;\r\n  const shipperActionStatus = useSelector<AppState, Shipper>(state => state.shipper);\r\n\r\n  const shipperQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      shipperId,\r\n      shipperName,\r\n      trackingLink\r\n    },\r\n    validationSchema: Yup.object({\r\n      shipperName: Yup.string().required('Required'),\r\n      trackingLink: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (value: OrderShipper) => {\r\n      dispatch(updateShipper(value));\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={shipperQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Shipper Name</div>\r\n              <input className=\"uk-input \" id=\"shipperName\" type=\"input\"\r\n                {...shipperQuickViewFormik.getFieldProps('shipperName')} />\r\n              {\r\n                shipperQuickViewFormik.touched.shipperName && shipperQuickViewFormik.errors.shipperName ? (\r\n                  <span className=\"uk-text-danger\">{shipperQuickViewFormik.errors.shipperName}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Tracking Link</div>\r\n              <input className=\"uk-input \" type=\"input\"\r\n                {...shipperQuickViewFormik.getFieldProps('trackingLink')} />\r\n              {\r\n                shipperQuickViewFormik.touched.trackingLink && shipperQuickViewFormik.errors.trackingLink ? (\r\n                  <span className=\"uk-text-danger\">{shipperQuickViewFormik.errors.trackingLink}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Shipper Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  shipperActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Update</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n        {shipperQuickViewFormik.isSubmitting && <NotificationContainer {...shipperActionStatus}/>}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  ShipperList,\r\n  ExpandableComponent\r\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, setUser, UserInformation, updateUserDiscount } from 'reducers';\r\nimport { User } from 'types';\r\nimport { AdminProductList } from 'components/admin/AdminProductList';\r\nimport { SubProducts } from 'appConstants';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationContainer } from 'components/shared';\r\n\r\ninterface Props{\r\n  addEditToggle: Function;\r\n}\r\n\r\nconst UserList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const stateData = useSelector<AppState, User[]>(state => state.user.allUsers || []);\r\n  console.log(stateData)\r\n  const productColumns = [\r\n    {\r\n      name: 'Email',\r\n      selector: 'emailAddress',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Mobile',\r\n      selector: 'mobile',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'First Name',\r\n      selector: 'firstName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Last Name',\r\n      selector: 'lastName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'View Details',\r\n      sortable: false,\r\n      cell: (row:  User) => {\r\n        return <button type=\"submit\" className=\"uk-button-small uk-button-primary\" onClick={() => {debugger;dispatch(setUser(row));props.addEditToggle(true)}}>\r\n          <span>View</span>\r\n        </button>\r\n      }\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <AdminProductList\r\n      productColumns={productColumns}\r\n      productType={SubProducts.USERS}\r\n      stateData={stateData}\r\n      ExpandableComponent={ExpandableComponent}\r\n      searchPlaceholder=\"Search Email / Mobile\"\r\n      expandableRows={true} />\r\n  )\r\n}\r\n\r\nconst ExpandableComponent: React.FunctionComponent<any> = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { emailAddress, discount }: User = data;\r\n  const userActionStatus = useSelector<AppState, UserInformation>(state => state.user);\r\n\r\n  const userDiscountQuickViewFormik = useFormik({\r\n    initialValues: {\r\n      emailAddress: emailAddress || '',\r\n      discount: discount || ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      emailAddress: Yup.string().required('Required'),\r\n      discount: Yup.string().required('Required')\r\n    }),\r\n    onSubmit: (value) => {\r\n      dispatch(updateUserDiscount(value.discount || '0', value.emailAddress.toString()));\r\n    }\r\n  });\r\n  return (\r\n    <form onSubmit={userDiscountQuickViewFormik.handleSubmit} className=\"quick-edit-admin uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n      <fieldset className=\"uk-fieldset\">\r\n        <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-3@s\" uk-grid=\"true\">\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Discount Percentage</div>\r\n              <input className=\"uk-input \" id=\"discount\" type=\"input\"\r\n                {...userDiscountQuickViewFormik.getFieldProps('discount')} />\r\n              {\r\n                userDiscountQuickViewFormik.touched.discount && userDiscountQuickViewFormik.errors.discount ? (\r\n                  <span className=\"uk-text-danger\">{userDiscountQuickViewFormik.errors.discount}</span>\r\n                ) : ''\r\n              }\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <div className=\"uk-form-label\">Update</div>\r\n              <button type=\"submit\" className=\"uk-button uk-button-primary \">\r\n                {\r\n                  userActionStatus._isLoading &&\r\n                  <img className=\"login-button-padding\" src=\"tail-spin.svg\" />\r\n                }\r\n                <span>Save</span>\r\n              </button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extended-component-notification\">\r\n        {userDiscountQuickViewFormik.isSubmitting && <NotificationContainer {...userActionStatus}/>}\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserList\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState } from 'reducers';\r\nimport { User } from 'types';\r\n\r\nconst UserDetails: React.FunctionComponent = () => {\r\n  const userData = useSelector<AppState, User>(state => state.user.data || {} as User);\r\n  console.log(userData)\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <header className=\"uk-card-header\"><h1 className=\"uk-h2\">Order Summay</h1></header>\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-form-stacked\">\r\n            <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <fieldset className=\"uk-fieldset\">\r\n                  <legend className=\"uk-h4\">#User Details</legend>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Name</div>\r\n                        <span className=\"uk-text-small\">\r\n                          {userData.firstName + ' ' + userData.lastName}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Mobile</div>\r\n                        <span className=\"uk-text-small\">{userData.mobile}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Email</div>\r\n                        <span className=\"uk-text-small\">{userData.emailAddress}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Discount</div>\r\n                        <span className=\"uk-text-small\">{userData.discount || 0}%</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-4@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Country</div>\r\n                        <span className=\"uk-text-small\">{userData.country}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">State</div>\r\n                        <span className=\"uk-text-small\">{userData.state}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">City</div>\r\n                        <span className=\"uk-text-small\">{userData.city}</span>\r\n                      </label>\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Pincode</div>\r\n                        <span className=\"uk-text-small\">{userData.pincode}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-1@s\" uk-grid=\"true\">\r\n                    <div>\r\n                      <label>\r\n                        <div className=\"uk-form-label\">Address</div>\r\n                        <span className=\"uk-text-small\">\r\n                          {\r\n                            userData.addressLineOne\r\n                            + ' ' +\r\n                            userData.addressLineTwo\r\n                            + ' ' +\r\n                            userData.addressLineThree\r\n                          }\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"uk-divider-icon\"></div>\r\n                </fieldset>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  UserDetails\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from \"react-router\";\r\nimport { AdminNav } from '.';\r\nimport { SubProducts } from 'appConstants';\r\nimport { ColourList, ProductColour } from './subComponents/colour';\r\nimport { ProductSize, SizeList } from './subComponents/size';\r\nimport { ProductSubCategory, SubCategoryList } from './subComponents/subCategory';\r\nimport { ProductCoupon, CouponList } from './subComponents/coupon';\r\nimport { ProductItem, ProductList } from './subComponents/product';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getProduct, setDefaulState } from 'reducers';\r\nimport { OrderList, OrderDetails } from './subComponents/orders';\r\nimport { ShipperDetails, ShipperList } from './subComponents/shippers';\r\nimport { UserList, UserDetails } from './subComponents/users';\r\n\r\n\r\n\r\nconst MainContainer: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const {product, productId} = useParams();\r\n\r\n  useEffect(() => {\r\n    if(product == 'product' && productId){\r\n      dispatch(getProduct(Number(productId)));\r\n      setIsOnAdd(true);\r\n      setSubProductId(SubProducts.PRODUCT)\r\n    } else {\r\n      dispatch(setDefaulState());\r\n    }\r\n  },[product, productId])\r\n\r\n  const [isOnAdd, setIsOnAdd] = useState(false);\r\n  const [subProductId, setSubProductId] = useState(SubProducts.ORDERS);\r\n\r\n  const subProductToggle = (subProductId: number) => {\r\n    setSubProductId(subProductId);\r\n  }\r\n  const addEditToggle = (isOnAdd: boolean) => {\r\n    setIsOnAdd(isOnAdd);\r\n  }\r\n\r\n  const showSubProductComponent = () => {\r\n    switch (subProductId) {\r\n      case SubProducts.COLOUR:\r\n        return isOnAdd ? <ProductColour /> : <ColourList/>\r\n      case SubProducts.SIZE:\r\n        return isOnAdd ? <ProductSize/> : <SizeList/>\r\n      case SubProducts.SUB_PRODUCT:\r\n        return isOnAdd ? <ProductSubCategory/> : <SubCategoryList/>\r\n      case SubProducts.COUPONS:\r\n        return isOnAdd ? <ProductCoupon/> : <CouponList/>\r\n      case SubProducts.PRODUCT:\r\n        return isOnAdd ? <ProductItem/> : <ProductList addEditToggle={addEditToggle}/>\r\n      case SubProducts.ORDERS:\r\n        return isOnAdd ? <OrderDetails/> : <OrderList addEditToggle={addEditToggle}/>\r\n      case SubProducts.SHIPPER:\r\n        return isOnAdd ? <ShipperDetails/> : <ShipperList/>\r\n      case SubProducts.USERS:\r\n        return isOnAdd ? <UserDetails/> : <UserList addEditToggle={addEditToggle}/>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n            <AdminNav subProductToggle={subProductToggle} addEditToggle={addEditToggle} />\r\n            { showSubProductComponent() }\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  MainContainer\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nimport { getCustomerProducts, Product, setDefaulState } from 'reducers/Product';\r\nimport { AppState, SubCategory, Size, Colour, addUpdateCart, Cart, UserLocation } from 'reducers';\r\nimport { serverImagePath, pageSize } from 'appConstants';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { ProductItem, CustomerCart, Search } from 'types';\r\nimport { calculateUserDiscount, getCurrencyIcon, showINRUSD } from 'services';\r\nimport { LoadingProductArticle } from 'components/shared';\r\nimport { setSearch } from 'reducers/Search';\r\n\r\n\r\ninterface Props {\r\n  categoryId: number[];\r\n  colourId?: number[];\r\n  sizeId?: number[];\r\n  subCategoryId?: number[];\r\n  startPrice?: string;\r\n  endPrice?: string;\r\n}\r\n\r\nconst CustomerProductList: React.FunctionComponent<Props> = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [hasMoreProducts, setHasMoreProducts] = useState(false);\r\n\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const productSize = useSelector<AppState, Size>(state => state.size);\r\n  const productColour = useSelector<AppState, Colour>(state => state.colour);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const search = useSelector<AppState, Search>(state => state.search.data || {} as Search);\r\n\r\n  // useEffect(() => {\r\n  //   if (props.categoryId !== 0) {\r\n  //     console.log('effect list')\r\n  //     dispatch(getCustomerProducts(0, pageSize, props.categoryId, props.subCategoryId || [], [], []));\r\n  //     setHasMoreProducts(true);\r\n  //   }\r\n  // }, [props.categoryId]);\r\n\r\n  useEffect(() => {\r\n    if(!products._isLoading && props.categoryId.length >0  && !subCategories._isLoading && !productSize._isLoading && !productColour._isLoading){\r\n      dispatch(setDefaulState());\r\n      dispatch(getCustomerProducts(0, pageSize, props.categoryId, props.subCategoryId || [], props.colourId || [], props.sizeId || [], props.startPrice || '', props.endPrice||'', userLocation.data || 'IN',search.searchText || '' , true));\r\n      dispatch(setSearch({\r\n        categoryId: props.categoryId,\r\n        colourId: props.colourId || [],\r\n        currency: userLocation.data || 'IN',\r\n        endPrice: props.endPrice||'',\r\n        sizeId: props.sizeId || [],\r\n        startPrice: props.startPrice || '',\r\n        subCategoryId: props.subCategoryId || [],\r\n        searchText: search.searchText || ''\r\n      }));\r\n    }\r\n  },[props.sizeId,props.categoryId,props.colourId,props.subCategoryId,props.startPrice,props.endPrice, subCategories._isLoading, productSize._isLoading, productColour._isLoading])\r\n\r\n  useEffect(()=> {\r\n    return () => {\r\n      dispatch(setSearch({\r\n        categoryId: [],\r\n        colourId: [],\r\n        currency: userLocation.data || 'IN',\r\n        endPrice: '',\r\n        sizeId:  [],\r\n        startPrice: '',\r\n        subCategoryId:  [],\r\n        searchText: search.searchText || ''\r\n      }));\r\n    }\r\n  },[]);\r\n\r\n  const fetchNextProducts = () => {\r\n    if (!products._isLoading && stateData && props.categoryId.length >0 ) {\r\n      dispatch(getCustomerProducts(stateData.length, pageSize, props.categoryId, props.subCategoryId || [], props.colourId || [], props.sizeId || [], props.startPrice || '', props.endPrice||'', userLocation.data || 'IN',search.searchText || ''));\r\n      dispatch(setSearch({\r\n        categoryId: props.categoryId,\r\n        colourId: props.colourId || [],\r\n        currency: userLocation.data || 'IN',\r\n        endPrice: props.endPrice||'',\r\n        sizeId: props.sizeId || [],\r\n        startPrice: props.startPrice || '',\r\n        subCategoryId: props.subCategoryId || [],\r\n        searchText: search.searchText || ''\r\n      }));\r\n    }\r\n  }\r\n\r\n  const products = useSelector<AppState, Product>(state => state.product || []);\r\n  useEffect(() => {\r\n    setHasMoreProducts(products._hasMoreProducts || false);\r\n  }, [products._hasMoreProducts]);\r\n\r\n\r\n  const stateData = products.data;\r\n\r\n  const addToCart = (product: ProductItem)=> {\r\n    if(!userData.data?.userId){\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: product.productDetailId,\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: showINRUSD(userLocation.data || 'IN', product),\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, false))\r\n    }else {\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: '0',\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: '0',\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, true))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"uk-width-expand\">\r\n      <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n        <div>\r\n          <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n            <div className=\"uk-grid-collapse uk-child-width-1-1\" id=\"products\" uk-grid=\"true\">\r\n              <div className=\"uk-card-header uk-hidden@m\">\r\n                <div className=\"uk-grid-small uk-flex-middle uk-flex-center\" uk-grid=\"true\">\r\n                  <div className=\"uk-width-1-1 uk-width-auto@s uk-flex uk-flex-center uk-flex-middle\">\r\n                    <button className=\"uk-button uk-button-default uk-button-small uk-hidden@m\" uk-toggle=\"target: #filters\">\r\n                      <span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: settings; ratio: .75;\"></span>Filters\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div>\r\n\r\n                <InfiniteScroll\r\n                  dataLength={stateData && stateData.length || 0}\r\n                  next={fetchNextProducts}\r\n                  hasMore={hasMoreProducts}\r\n                  loader={\r\n                    <div style={{ textAlign: \"center\", marginTop: \"10px\" }}>\r\n                      <h4>Loading...</h4>\r\n                    </div>\r\n                  }\r\n                  endMessage={\r\n                    <p style={{ textAlign: \"center\" }}>\r\n                      <b>That's all for now. Do check back after some time for more products.</b>\r\n                    </p>\r\n                  }\r\n                >\r\n                  <div className=\"uk-grid-collapse uk-child-width-custom tm-products-grid js-products-grid\" uk-grid=\"true\">\r\n                    {\r\n                       stateData && stateData.length > 0 ? stateData.map((product, index) => {\r\n                        return (\r\n                          <article className=\"tm-product-card\" key={index}>\r\n                            <div className=\"tm-product-card-media\">\r\n                              <div className=\"tm-ratio tm-ratio-4-3\">\r\n                                <a className=\"tm-media-box\" onClick={()=> history.push('/productDetails/'+ product.productId)}>\r\n                                  \r\n                                  <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + product.imagePaths} alt={product.imageNames}/></figure>\r\n                                </a>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"tm-product-card-body\">\r\n                              <div className=\"tm-product-card-info\">\r\n                                <div className=\"uk-text-meta uk-margin-xsmall-bottom\">{product.productCategoryName}</div>\r\n                                <h3 className=\"tm-product-card-title\"><a className=\"uk-link-heading\" onClick={()=> history.push('/productDetails/'+ product.productId)}>{product.name}</a></h3>\r\n                              </div>\r\n                              <div className=\"tm-product-card-shop\">\r\n                                <div className=\"tm-product-card-prices\">\r\n                                  {\r\n                                    userData.data?.discount && userData.data?.discount !== '0' &&\r\n                                    <del className=\"uk-text-meta\">{getCurrencyIcon(userLocation.data || 'IN')} {showINRUSD(userLocation.data || 'IN', product)}</del>\r\n                                  }\r\n                                  <div className=\"tm-product-card-price\">\r\n                                    {getCurrencyIcon(userLocation.data || 'IN')} {calculateUserDiscount(userData.data?.discount ||'0', showINRUSD(userLocation.data || 'IN', product))}\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"tm-product-card-add\">\r\n                                  <button className=\"uk-button uk-button-primary tm-product-card-add-button tm-shine js-add-to-cart\">\r\n                                    {\r\n                                      cart._isLoading && <span uk-spinner=\"true\"></span>\r\n                                    }\r\n                                    {\r\n                                      !cart._isLoading && (\r\n                                        <>\r\n                                        <span className=\"tm-product-card-add-button-icon\" uk-icon=\"cart\" onClick={() => addToCart(product)}></span>\r\n                                        <span className=\"tm-product-card-add-button-text\">add to cart</span>\r\n                                        </>\r\n                                      )\r\n                                    }\r\n                                    \r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </article>\r\n                        )\r\n                      }) : products._hasMoreProducts  && Array(pageSize).fill(1).map((value, index) => <LoadingProductArticle key={index} keyIndex={index}/>)\r\n                    }\r\n                  </div>\r\n                </InfiniteScroll>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerProductList\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { CustomerProductFilter } from '.';\r\nimport { AppState, ProductCount, getActiveProductCount } from 'reducers';\r\nimport { SubCategory, getSubCategory } from 'reducers/SubCategory';\r\nimport { ProductSubCategory, ProductSize, ProductColor, Search } from 'types';\r\nimport { filterSubcategories } from 'services';\r\nimport { SubCategories } from 'appConstants';\r\nimport { CustomerProductList } from './CustomerProductList';\r\nimport { setDefaulState } from 'reducers/Product';\r\nimport { getSize, Size } from 'reducers/Size';\r\nimport { getColour, Colour } from 'reducers/Colour';\r\n\r\n\r\n\r\n\r\nconst CustomerContainer: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { product, filterOn } = useParams();\r\n  const [colourId, setColourId] = useState<number[]>([]);\r\n  const [sizeId, setSizeId] = useState<number[]>([]);\r\n  const [subCategoryId, setSubCategoryId] = useState<number[]>([]);\r\n  const [startPrice, setStartPrice] = useState('');\r\n  const [endPrice, setEndPrice] = useState('');\r\n  const [categoryId, setcategoryId] = useState<number[]>([]);\r\n  const [subCategoryQueryParam, setSubCategoryQueryParam] = useState<ProductSubCategory[]>([]);\r\n  const productSize = useSelector<AppState, ProductSize[]>(state => state.size.data || []);\r\n  const productColour = useSelector<AppState, ProductColor[]>(state => state.colour.data || []);\r\n  const search = useSelector<AppState, Search>(state => state.search.data || {} as Search);\r\n\r\n  useEffect(() => {\r\n    dispatch(getSubCategory());\r\n    dispatch(getSize());\r\n    dispatch(getColour());\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(setDefaulState());\r\n    const filteredKey = Object.keys(SubCategories).filter((key) => key.toLowerCase() === product.toLowerCase());\r\n    if (filteredKey[0]) {\r\n      setcategoryId([SubCategories[filteredKey[0]]]);\r\n    } else {\r\n      const subCateId: number[] = [];\r\n      for (let key in SubCategories) {\r\n        subCateId.push(SubCategories[key])\r\n      }\r\n      setcategoryId(subCateId)\r\n    }\r\n    if (!filterOn) {\r\n      setSubCategoryId([]);\r\n    }\r\n\r\n  }, [product]);\r\n\r\n  const subCategories = useSelector<AppState, SubCategory>(state => state.subCategory);\r\n  const activeProductCount = useSelector<AppState, ProductCount>(state => state.productCount);\r\n  const productKey = Object.keys(SubCategories).find((subcategory) => subcategory.toLowerCase() === product.toLowerCase()) || '';\r\n  let filteredSubcategories = filterSubcategories(subCategories, SubCategories[productKey]);;\r\n  if (product.toLowerCase() === 'search') {\r\n    filteredSubcategories = subCategories.data || []\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (filterOn && !subCategories._isLoading && subCategories.data && subCategories.data.length > 0) {\r\n      setSubCategoryId([Number(subCategories.data?.filter(({ code }) => code.toLowerCase() === filterOn.toLowerCase())[0].subCategoryId)]);\r\n      setSubCategoryQueryParam(subCategories.data?.filter(({ code }) => code.toLowerCase() === filterOn.toLowerCase()) || [])\r\n    }\r\n  }, [filterOn, subCategories._isLoading])\r\n\r\n  const getTotalProductCount = () => {\r\n    let count = 0;\r\n    const activeProducts = activeProductCount.data\r\n    if (activeProducts) {\r\n      const selectedSubCat = subCategoryId.length > 0 ? subCategoryId : filteredSubcategories.map(({ subCategoryId }) => Number(subCategoryId));\r\n      const selectedColour = colourId.length > 0 ? colourId : productColour.length > 0 ? productColour.map(({ colourId }) => Number(colourId)) : [];\r\n      const selectedSize = sizeId.length > 0 ? sizeId : [];\r\n      // const selectedColour = colourId.length > 0 ? colourId : productColour.length> 0 ?  productColour.map(({colourId}) => Number(colourId)) : [];\r\n      // const selectedSize = sizeId.length > 0 ? sizeId : productSize.length > 0 ? productSize.map(({sizeId}) => Number(sizeId)) : [];\r\n      if (selectedSize.length === 0) {\r\n        selectedSubCat.forEach((subCategory) => {\r\n          if(activeProducts[subCategory]){\r\n            selectedColour.forEach((colour) => {\r\n              if(activeProducts[subCategory][colour] && activeProducts[subCategory][colour].count){\r\n                count += activeProducts[subCategory][colour].count\r\n              }\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        selectedSubCat.forEach((subCategory) => {\r\n          if(activeProducts[subCategory]){\r\n            selectedColour.forEach((colour) => {\r\n              if(activeProducts[subCategory][colour]){\r\n                let localCount = 0;\r\n                for(var i =0; i< selectedSize.length; i++){\r\n                  if(activeProducts[subCategory][colour].size[selectedSize[i]]){\r\n                    if(activeProducts[subCategory][colour].size[selectedSize[i]] === activeProducts[subCategory][colour].count){\r\n                      localCount = activeProducts[subCategory][colour].count;\r\n                      break;\r\n                    }else{\r\n                      localCount +=activeProducts[subCategory][colour].size[selectedSize[i]];\r\n                    }\r\n                  }\r\n                }\r\n                count+=localCount;\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    }\r\n    return count;\r\n  };\r\n\r\n  // const getIdsForfilter = () => {\r\n  //   const filteredKey = Object.keys(SubCategories).filter((key) => key.toLowerCase() === product.toLowerCase());\r\n  //   if(filteredKey[0]){\r\n  //     setcategoryId(Number(SubCategories[filteredKey[0]]));\r\n  //   }\r\n  // }\r\n\r\n  // getIdsForfilter()\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a onClick={() => history.push('/')}>Home</a></li>\r\n                <li><span>Product</span></li>\r\n              </ul>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom customer-product\">{product}</h1>\r\n              {\r\n                search.searchText === '' && <div className=\"uk-text-meta uk-margin-xsmall-top\">{getTotalProductCount()} items</div>\r\n              }\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n                {\r\n                  <CustomerProductFilter\r\n                    subCategories={filteredSubcategories}\r\n                    activeProductCount={activeProductCount}\r\n                    filterSelected={subCategoryQueryParam}\r\n                    categoryId={categoryId}\r\n                    setColourId={setColourId}\r\n                    setSizeId={setSizeId}\r\n                    setSubCategoryId={setSubCategoryId}\r\n                    setStartPrice={setStartPrice}\r\n                    setEndPrice={setEndPrice}\r\n                  />\r\n                }\r\n                {\r\n                  <CustomerProductList\r\n                    categoryId={categoryId}\r\n                    colourId={colourId}\r\n                    sizeId={sizeId}\r\n                    subCategoryId={subCategoryId}\r\n                    startPrice={startPrice}\r\n                    endPrice={endPrice}\r\n                  />\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerContainer\r\n}","import React, { Dispatch, SetStateAction, useState, useEffect } from 'react';\r\nimport { ProductSubCategory, ActiveProductCount, ProductColor, ProductSize } from 'types';\r\nimport { ProductCount, AppState, Size, Colour, getCustomerProducts } from 'reducers';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// import { Size } from 'reducers/Size';\r\n// import { Colour } from 'reducers/Colour';\r\nimport { filterSize } from 'services';\r\nimport { pageSize } from 'appConstants';\r\nimport { setDefaulState } from 'reducers/Product';\r\nimport { useParams } from 'react-router-dom';\r\n// import { getCustomerProducts } from 'reducers/Product';\r\n\r\n\r\ninterface Props {\r\n  filterSelected: ProductSubCategory[];\r\n  subCategories: ProductSubCategory[];\r\n  activeProductCount: ProductCount;\r\n  categoryId: number[];\r\n  setColourId: Dispatch<SetStateAction<number[]>>;\r\n  setSizeId: Dispatch<SetStateAction<number[]>>;\r\n  setSubCategoryId: Dispatch<SetStateAction<number[]>>;\r\n  setStartPrice: Dispatch<SetStateAction<string>>;\r\n  setEndPrice: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\n\r\nconst CustomerProductFilter: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const {product} = useParams();\r\n  const [filterColourId, setFilterColourId] = useState<number[]>([]);\r\n  const [filterSizeId, setFilterSizeId] = useState<number[]>([]);\r\n  const [filterSubCategory, setFilterSubCategory] = useState<number[]>([]);\r\n  const [filterStartPrice, setFilterStartPrice] = useState('');\r\n  const [filterEndPrice, setFilterEndPrice] = useState('');\r\n  const [startPriceTimer, setStartPriceTimer] = useState(0);\r\n  const [endPriceTimer, setEndPriceTimer] = useState(0);\r\n  const productSize = useSelector<AppState, Size>(state => state.size);\r\n  const productColour = useSelector<AppState, Colour>(state => state.colour);\r\n\r\n  const getProductCount = (id=0) => {\r\n    let count = 0;\r\n    const activeProducts = props.activeProductCount.data\r\n    if(activeProducts){\r\n      const selectedColour = filterColourId.length > 0 ? filterColourId : productColour.data && productColour.data.length> 0 ?  productColour.data.map(({colourId}) => Number(colourId)) : [];\r\n      const selectedSize = filterSizeId.length > 0 ? filterSizeId  : [];\r\n      const selectedSubCat = activeProducts[id];\r\n      if(selectedSubCat){\r\n        if (selectedSize.length === 0) {\r\n            selectedColour.forEach((colour) => {\r\n              if(selectedSubCat[colour]){\r\n                count += selectedSubCat[colour].count\r\n              }\r\n            })\r\n        } else {\r\n            selectedColour.forEach((colour) => {\r\n              let localCount = 0;\r\n              for(var i =0; i< selectedSize.length; i++){\r\n                if(selectedSubCat[colour] && selectedSubCat[colour].size && selectedSubCat[colour].size[selectedSize[i]]){\r\n                  if(selectedSubCat[colour].size[selectedSize[i]] === selectedSubCat[colour].count){\r\n                    localCount = selectedSubCat[colour].count;\r\n                    break;\r\n                  }else{\r\n                    localCount +=selectedSubCat[colour].size[selectedSize[i]];\r\n                  }\r\n                }\r\n              }\r\n              count+=localCount;\r\n            })\r\n        }\r\n      }\r\n    }\r\n    return count\r\n  }\r\n\r\n  const toggleAddingRemovingId = (ids: number[], newId: number) => {\r\n    const index = ids.indexOf(newId);\r\n    if (index > -1){\r\n      ids.splice(index,1);\r\n    } else {\r\n      ids.push(newId);\r\n    }\r\n    return ids;\r\n  }\r\n  const getFilteredProduct = (colour: number, size: number, subCategory?: number, startPrice?: string, endPrice?: string) => {\r\n    if(colour != 0){\r\n      const updatedColourFilter = toggleAddingRemovingId(filterColourId, colour);\r\n      setFilterColourId([...updatedColourFilter]);\r\n      props.setColourId([...updatedColourFilter]);\r\n    } else if (size != 0){\r\n      const updatedSizeFilter = toggleAddingRemovingId(filterSizeId, size);\r\n      setFilterSizeId([...updatedSizeFilter]);\r\n      props.setSizeId([...updatedSizeFilter]);\r\n    } else if (subCategory && subCategory != 0){\r\n      const updatedSubCategory = toggleAddingRemovingId(filterSubCategory, subCategory);\r\n      setFilterSubCategory([...updatedSubCategory]);\r\n      props.setSubCategoryId([...updatedSubCategory]);\r\n    } else if(startPrice!=='0' && !endPrice){\r\n      setFilterStartPrice(startPrice || '');\r\n      window.clearTimeout(startPriceTimer);\r\n      setStartPriceTimer(window.setTimeout(() => {\r\n        props.setStartPrice(startPrice || '')\r\n      },1000));\r\n    } else if(endPrice || (!endPrice && filterEndPrice)){\r\n      setFilterEndPrice(endPrice || '');\r\n      window.clearTimeout(endPriceTimer);\r\n      setEndPriceTimer(window.setTimeout(() => {\r\n        props.setEndPrice(endPrice || '')\r\n      },1000));\r\n    }\r\n  }\r\n\r\n  const restFilter = () => {\r\n    setFilterColourId([]);\r\n    props.setColourId([]);\r\n    setFilterSizeId([]);\r\n    props.setSizeId([]);\r\n    setFilterSubCategory([]);\r\n    props.setSubCategoryId([]);\r\n    setFilterStartPrice('');\r\n    props.setStartPrice('');\r\n    setFilterEndPrice('');\r\n    props.setEndPrice('')\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   console.log('filter on effect')\r\n  //   if(props.filterSelected && props.filterSelected.length > 0){\r\n  //     if(filterSubCategory.length> 0){\r\n  //       setFilterSubCategory([]);\r\n  //     }\r\n  //     const updatedSubCategory = toggleAddingRemovingId(filterSubCategory, Number(props.filterSelected[0].subCategoryId));\r\n  //     setFilterSubCategory([...updatedSubCategory]);\r\n  //   }\r\n  // },[props.filterSelected]);\r\n\r\n  useEffect(() => {\r\n    if(props.filterSelected.length>0){\r\n      // const updatedSubCategory = toggleAddingRemovingId(filterSubCategory, Number(props.filterSelected[0].subCategoryId));\r\n      setFilterSubCategory([Number(props.filterSelected[0].subCategoryId)]);\r\n      // props.setSubCategoryId([Number(props.filterSelected[0].subCategoryId)]);\r\n    }\r\n  }, [props.filterSelected]);\r\n\r\n  // useEffect(() => {\r\n  //   // dispatch(setDefaulState());\r\n  //   if(props.categoryId != 0){\r\n  //     console.log(filterColourId,filterSizeId, filterSubCategory)\r\n  //     console.log('effect filter')\r\n  //     dispatch(getCustomerProducts(0, pageSize, props.categoryId,filterSubCategory, filterColourId , filterSizeId, true));\r\n  //   }\r\n  // }, [filterColourId,filterSizeId, filterSubCategory,props.categoryId]);\r\n\r\n  return (\r\n    <aside className=\"uk-width-1-4 tm-aside-column tm-filters\" id=\"filters\" uk-offcanvas=\"overlay: true; container: false;\">\r\n      <div className=\"uk-offcanvas-bar uk-padding-remove\">\r\n        <div className=\"uk-card uk-card-default uk-card-small uk-flex uk-flex-column uk-height-1-1\">\r\n          <header className=\"uk-card-header uk-flex uk-flex-middle\">\r\n            <div className=\"uk-grid-small uk-flex-1\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand\"><h3>Filters</h3></div>\r\n              <button className=\"uk-offcanvas-close\" type=\"button\" uk-close=\"true\"></button>\r\n            </div>\r\n          </header>\r\n          <div className=\"uk-margin-remove uk-flex-1\" uk-accordion=\"multiple: true; targets: &gt; .js-accordion-section\" style={{ flexBasis: \"auto\" }}>\r\n            <section className=\"uk-card-body uk-open js-accordion-section\">\r\n              <h4 className=\"uk-accordion-title uk-margin-remove\">Prices</h4>\r\n              <div className=\"uk-accordion-content\">\r\n                <div className=\"uk-grid-small uk-child-width-1-2 uk-text-small\" uk-grid=\"true\">\r\n                  <div>\r\n                    <div className=\"uk-inline\">\r\n                      <span className=\"uk-form-icon uk-text-xsmall\">from</span>\r\n                      <input className=\"uk-input\" type=\"number\" placeholder=\"₹₹₹\"\r\n                      value={filterStartPrice} \r\n                      onChange={(e) => getFilteredProduct(0,0,0,e.currentTarget.value)}/>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"uk-inline\">\r\n                      <span className=\"uk-form-icon uk-text-xsmall\">to</span>\r\n                      <input className=\"uk-input\" type=\"text\" placeholder=\"₹₹₹\" \r\n                      value={filterEndPrice}\r\n                      onChange={(e) => getFilteredProduct(0,0,0,'0',e.currentTarget.value)}/>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n            {\r\n              props.subCategories.length > 0 &&\r\n              <section className=\"uk-card-body js-accordion-section uk-open\">\r\n              <h4 className=\"uk-accordion-title uk-margin-remove\">Categories</h4>\r\n              <div className=\"uk-accordion-content\">\r\n                <ul className=\"uk-list tm-scrollbox\">\r\n                  {\r\n                    props.subCategories.map((subcategory: ProductSubCategory) => {\r\n                      return (\r\n                        <li key={subcategory.code}>\r\n                          <input \r\n                            className=\"tm-checkbox\"\r\n                            id={\"subproduct\" + subcategory.code}\r\n                            name=\"subproduct\"\r\n                            value={subcategory.code}\r\n                            checked={filterSubCategory.indexOf(Number(subcategory.subCategoryId)) > -1}\r\n                            type=\"checkbox\"\r\n                            onChange={() => getFilteredProduct(0, 0, Number(subcategory.subCategoryId))}\r\n                            />\r\n                          <label htmlFor={\"subproduct\" + subcategory.code}>\r\n                            <span>{subcategory.code} <span className=\"uk-text-meta uk-text-small\">{getProductCount(Number(subcategory.subCategoryId))}</span></span>\r\n                          </label>\r\n                        </li>\r\n                      )\r\n                    })\r\n                  }\r\n                </ul>\r\n              </div>\r\n            </section>\r\n            }\r\n            \r\n            {\r\n              productColour.data && productColour.data.length > 0 &&\r\n              <section className=\"uk-card-body js-accordion-section uk-open\">\r\n                <h4 className=\"uk-accordion-title uk-margin-remove\">Colour</h4>\r\n                <div className=\"uk-accordion-content\">\r\n                  <ul className=\"uk-list tm-scrollbox\">\r\n                    {\r\n                      productColour.data.map((colour: ProductColor) => {\r\n                        return (\r\n                          <li key={colour.colourId}>\r\n                            <input \r\n                              className=\"tm-checkbox\" \r\n                              id={\"colour\" + colour.colourId} \r\n                              name=\"colour\" \r\n                              value={colour.colourId} \r\n                              type=\"checkbox\"\r\n                              checked={filterColourId.indexOf(Number(colour.colourId)) > -1}\r\n                              onChange={() => getFilteredProduct(Number(colour.colourId), 0, 0)} \r\n                            />\r\n                            <label htmlFor={\"colour\" + colour.colourId}>\r\n                              <span>{colour.value} </span>\r\n                            </label>\r\n                          </li>\r\n                        )\r\n                      })\r\n                    }\r\n                  </ul>\r\n                </div>\r\n              </section>\r\n            }\r\n            {\r\n              productSize.data && productSize.data.length > 0 &&\r\n              !(filterSize(productSize,props.categoryId).length === 1 && \r\n              filterSize(productSize,props.categoryId)[0].value.toLowerCase() === 'default') &&\r\n              <section className=\"uk-card-body js-accordion-section uk-open\">\r\n                <h4 className=\"uk-accordion-title uk-margin-remove\">Size</h4>\r\n                <div className=\"uk-accordion-content\">\r\n                  <ul className=\"uk-list tm-scrollbox\">\r\n                    {\r\n                      filterSize(productSize,props.categoryId).map((size: ProductSize) => {\r\n                        return (\r\n                          size.value.toLowerCase() !== 'default' &&\r\n                          <li key={size.sizeId}>\r\n                            <input \r\n                              className=\"tm-checkbox\"\r\n                              id={\"size\" + size.sizeId}\r\n                              name=\"size\"\r\n                              value={size.sizeId}\r\n                              type=\"checkbox\"\r\n                              checked={filterSizeId.indexOf(Number(size.sizeId)) > -1}\r\n                              onChange={() => getFilteredProduct(0,Number(size.sizeId), 0)} \r\n                              />\r\n                            <label htmlFor={\"size\" + size.sizeId}>\r\n                              <span>{size.value} </span>\r\n                            </label>\r\n                          </li>\r\n                        )\r\n                      })\r\n                    }\r\n                  </ul>\r\n                </div>\r\n              </section>\r\n            }\r\n            <div className=\"uk-card-body\">\r\n              <button className=\"uk-button uk-button-default uk-width-1-1\" onClick={() => restFilter()}><span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: close; ratio: .75;\"></span>Reset all filters</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerProductFilter\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProduct, setDefaulState } from 'reducers/Product';\r\nimport { AppState, addUpdateCart, Cart, UserLocation } from 'reducers';\r\nimport { ProductItem, CustomerCart } from 'types';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { CustomerProductDetailsLoading } from '.';\r\nimport { calculateUserDiscount, getCurrencyIcon, showINRUSD } from 'services';\r\nimport { QuickProductList } from 'components/shared';\r\n\r\ninterface cartQuantity {\r\n  [key: string]: string;\r\n};\r\n\r\n\r\ninterface Props {\r\n  mainSlider: JSX.Element[] | undefined;\r\n  smallSlider: JSX.Element[] | undefined;\r\n  productCategoryName: string;\r\n  name: string;\r\n  priceINR: string;\r\n  priceUSD: string;\r\n  description: string;\r\n  size: string;\r\n  sizeId: string;\r\n  quantity: string;\r\n  productId: string;\r\n  productDetailId: string;\r\n  imageName: string;\r\n  imagePath: string;\r\n  cartProductQuantity: cartQuantity;\r\n};\r\n\r\nconst CustomerProductDetails: React.FunctionComponent<Props> = (props: Props) => {\r\n  const {\r\n    priceINR,\r\n    priceUSD,\r\n    quantity,\r\n    size,\r\n    sizeId,\r\n    productId,\r\n    productDetailId,\r\n    imageName,\r\n    imagePath,\r\n    productCategoryName,\r\n    name,\r\n    cartProductQuantity\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const relatedProducts = useSelector<AppState, ProductItem[]>(state => state.relatedProduct.data || []);\r\n\r\n  const [pINR, setPINR] = useState('0');\r\n  const [pUSD, setPUSD] = useState('0');\r\n  const [pQuantity, setPQuantity] = useState(['']);\r\n  const [pSize, setPSize] = useState(['']);\r\n  const [pSizeId, setPSizeId] = useState(['']);\r\n  const [pDetailId, setPDetailId] = useState(['']);\r\n  const [selectedSize, setSelectedSize] = useState('0');\r\n  const [selectedQuantity, setSelectedQuantity] = useState('1');\r\n  const [selectedProductDetailId, setSelectedProductDetailId] = useState('0');\r\n  const [maxQuantity, setMaxQuantity] = useState('0');\r\n\r\n  useEffect(() => {\r\n    setPINR(priceINR.split(',')[0]);\r\n    setPUSD(priceUSD.split(',')[0]);\r\n  }, [priceINR, priceUSD]);\r\n\r\n\r\n  useEffect(() => {\r\n    setPQuantity(quantity.split(','));\r\n    setPSize(size.split(','));\r\n    setPSizeId(sizeId.split(','));\r\n    setSelectedSize(sizeId.split(',')[0].toString());\r\n    const defaultProductDetail = productDetailId.split(',')[0];\r\n    setMaxQuantity((Number(quantity.split(',')[0]) - Number(cartProductQuantity[defaultProductDetail.toString()] || 0)).toString());\r\n    setPDetailId(productDetailId.split(','));\r\n    setSelectedProductDetailId(defaultProductDetail);\r\n  }, [quantity, size, sizeId, productDetailId]);\r\n\r\n  useEffect(() => {\r\n    if (maxQuantity !== '0') {\r\n      const productIndex = pDetailId.indexOf(selectedProductDetailId);\r\n      setMaxQuantity((Number(pQuantity[productIndex]) - Number(cartProductQuantity[selectedProductDetailId] || '0')).toString());\r\n      onChangeQuantity(cartProductQuantity[selectedProductDetailId] || '0', Number(pQuantity[productIndex]) - Number(cartProductQuantity[selectedProductDetailId]));\r\n    }\r\n  }, [cartProductQuantity]);\r\n\r\n  const toggleQuantity = (isIncrement: boolean) => {\r\n    if (isIncrement) {\r\n      if (Number(selectedQuantity) <= Number(maxQuantity)) {\r\n        setSelectedQuantity((Number(selectedQuantity) + 1).toString());\r\n      }\r\n    } else {\r\n      if (selectedQuantity !== '1') {\r\n        setSelectedQuantity((Number(selectedQuantity) - 1).toString());\r\n      }\r\n    }\r\n  }\r\n\r\n  const setSize = (sizeId: string) => {\r\n    setSelectedSize(sizeId);\r\n    const selectedIndex = pSizeId.indexOf(sizeId);\r\n    const maxQ = pQuantity[selectedIndex];\r\n    const pdId = pDetailId[selectedIndex];\r\n    setSelectedProductDetailId(pdId);\r\n    setMaxQuantity((Number(maxQ) - Number(cartProductQuantity[pdId] || 0)).toString());\r\n    if (Number(selectedQuantity) > Number(maxQ)) {\r\n      setSelectedQuantity(maxQ);\r\n    }\r\n  }\r\n\r\n  const onChangeQuantity = (quantity: string, maxQaun = -1) => {\r\n    if (Number(quantity) > Number(maxQaun !== -1 ? maxQaun : maxQuantity)) {\r\n      setSelectedQuantity(Number(maxQaun !== -1 ? maxQaun : maxQuantity).toString())\r\n    } else {\r\n      setSelectedQuantity(Number(quantity).toString())\r\n    }\r\n  };\r\n\r\n  const onBlurQuantity = (quantity: string) => {\r\n    if (quantity === '' || Number(quantity) === 0) {\r\n      setSelectedQuantity('1')\r\n    }\r\n  };\r\n\r\n  const addToCart = () => {\r\n    if (!userData.data?.userId) {\r\n      const cartData = {\r\n        productDetailId: selectedProductDetailId,\r\n        productQuantity: selectedQuantity,\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: selectedProductDetailId.toString(),\r\n        productImage: imageName,\r\n        productImagePath: imagePath,\r\n        productName: name,\r\n        subcategory: productCategoryName,\r\n        productPrice: showINRUSD(userLocation.data || 'IN', { priceINR: pINR, priceUSD: pUSD }),\r\n        productId: productId,\r\n      } as CustomerCart;\r\n\r\n      dispatch(addUpdateCart(cartData, false))\r\n    } else {\r\n      const cartData = {\r\n        productDetailId: selectedProductDetailId,\r\n        productQuantity: selectedQuantity,\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: '0',\r\n        productImage: imageName,\r\n        productImagePath: imagePath,\r\n        productName: name,\r\n        subcategory: productCategoryName,\r\n        productPrice: '0',\r\n        productId: productId,\r\n      } as CustomerCart;\r\n\r\n      dispatch(addUpdateCart(cartData, true))\r\n    }\r\n  }\r\n\r\n  const checkForDefaultSize = (sizeList: string[]) => {\r\n    return sizeList.length === 1 && sizeList[0].toLowerCase() === 'default';\r\n  }\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a onClick={() => history.push('/')}>Home</a></li>\r\n                <li><span>Product</span></li>\r\n                <li><a onClick={() => history.push('/product/' + props.productCategoryName)}>{props.productCategoryName}</a></li>\r\n              </ul>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom\">{props.name}</h1>\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n                <div>\r\n                  <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n                    <div className=\"uk-grid-small uk-grid-collapse uk-grid-match\" uk-grid=\"true\">\r\n                      <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n                        <div className=\"uk-grid-collapse uk-child-width-1-1\" uk-slideshow=\"finite: true; ratio: 4:3;\" uk-grid=\"true\">\r\n                          <div>\r\n                            <ul className=\"uk-slideshow-items\" uk-lightbox=\"true\">\r\n                              {\r\n                                props.mainSlider\r\n                              }\r\n                            </ul>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"uk-card-body uk-flex uk-flex-center\">\r\n                              <div className=\"uk-width-1-2 uk-visible@s\">\r\n                                <div uk-slider=\"finite: true\">\r\n                                  <div className=\"uk-position-relative\">\r\n                                    <div className=\"uk-slider-container\">\r\n                                      <ul className=\"tm-slider-items uk-slider-items uk-child-width-1-4 uk-grid uk-grid-small\">\r\n                                        {\r\n                                          props.smallSlider\r\n                                        }\r\n                                      </ul>\r\n                                      <div>\r\n                                        <a className=\"uk-position-center-left-out uk-position-small\" href=\"#\" uk-slider-item=\"previous\" uk-slidenav-previous=\"true\"></a>\r\n                                        <a className=\"uk-position-center-right-out uk-position-small\" href=\"#\" uk-slider-item=\"next\" uk-slidenav-next=\"true\"></a>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <ul className=\"uk-slideshow-nav uk-dotnav uk-hidden@s\"></ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"uk-width-1-1 uk-width-1-3@m tm-product-info\">\r\n                        <div className=\"uk-card-body\">\r\n                          <div className=\"uk-margin\">\r\n                            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"uk-margin\">\r\n                            <div className=\"uk-padding-small uk-background-primary-lighten uk-border-rounded\">\r\n                              <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                                <div>\r\n                                  {\r\n                                    userData.data?.discount && userData.data?.discount !== '0' &&\r\n                                    <del className=\"uk-text-meta\">{getCurrencyIcon(userLocation.data || 'IN')} {showINRUSD(userLocation.data || 'IN', { priceINR: pINR, priceUSD: pUSD })}</del>\r\n                                  }\r\n                                  <div className=\"tm-product-price\">{getCurrencyIcon(userLocation.data || 'IN')} {calculateUserDiscount(userData.data?.discount || '0', showINRUSD(userLocation.data || 'IN', { priceINR: pINR, priceUSD: pUSD }))}</div>\r\n                                </div>\r\n                                <div>\r\n                                  <div className=\"uk-grid-small uk-child-width-1-2\" uk-grid=\"true\">\r\n                                    <div className={`${checkForDefaultSize(pSize) ? 'default-product-size' : ''}`}>\r\n                                      <label>\r\n                                        <div className=\"uk-form-label\">Size</div>\r\n                                        <select className=\"uk-select\"\r\n                                          value={selectedSize}\r\n                                          id=\"selectedSize\"\r\n                                          onChange={(e) => { setSize(e.currentTarget.value) }}>\r\n                                          {\r\n                                            pSize.map((size, index) => {\r\n                                              return <option key={index} value={pSizeId[index]}>{size}</option>\r\n                                            })\r\n                                          }\r\n\r\n                                        </select>\r\n                                      </label>\r\n                                    </div>\r\n                                    <div>\r\n                                      <label>\r\n                                        <div className=\"uk-form-label\">Quantity {selectedSize !== '0' && <span className=\"uk-notification-message-danger uk-text-meta\">(Max {maxQuantity})</span>}</div>\r\n                                        <div>\r\n                                          <div className=\"uk-inline\">\r\n                                            {Number(selectedQuantity) === 1 && <a className=\"uk-form-icon\"></a>}\r\n                                            {Number(selectedQuantity) > 1 && <a className=\"uk-form-icon\" onClick={() => toggleQuantity(false)} uk-icon=\"icon: minus\"></a>}\r\n                                            {Number(selectedQuantity) < Number(maxQuantity) && <a className=\"uk-form-icon uk-form-icon-flip\" onClick={() => toggleQuantity(true)} uk-icon=\"icon: plus\"></a>}\r\n                                            {Number(selectedQuantity) === Number(maxQuantity) && <a className=\"uk-form-icon uk-form-icon-flip\"></a>}\r\n                                            <input className=\"uk-input uk-text-center\"\r\n                                              onChange={(e) => onChangeQuantity(e.currentTarget.value)}\r\n                                              onBlur={(e) => onBlurQuantity(e.currentTarget.value)}\r\n                                              type=\"number\"\r\n                                              value={selectedQuantity} />\r\n                                          </div>\r\n                                        </div>\r\n                                      </label>\r\n                                    </div>\r\n                                    <div className={`${checkForDefaultSize(pSize) ? 'single-size-cart-button' : ''}`}>\r\n                                      <button\r\n                                        disabled={Number(maxQuantity) === 0}\r\n                                        className=\"uk-button uk-button-primary tm-product-add-button tm-shine js-add-to-cart\"\r\n                                        onClick={() => addToCart()}>\r\n                                        add to cart\r\n                                        </button>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div>\r\n                                  {\r\n                                    props.productCategoryName.toLowerCase() === 'footwear' && \r\n                                    <a uk-toggle=\"target: #product-size-model\" className=\"uk-margin-xsmall-right uk-notification-message-danger\"><span uk-icon=\"file-text\"></span> Size Chart </a>\r\n                                  }\r\n                                  \r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"uk-margin\">\r\n                            <div className=\"uk-padding-small uk-background-muted uk-border-rounded\">\r\n                              <div className=\"uk-grid-small uk-child-width-1-1 uk-text-small\" uk-grid=\"true\">\r\n                                <div>\r\n                                  <div className=\"uk-grid-collapse\" uk-grid=\"true\">\r\n                                    {/* <span className=\"uk-margin-xsmall-right\" uk-icon=\"chevron-right\"></span> */}\r\n                                    <div>\r\n                                      <div className=\"uk-text-bolder\">Product Details</div>\r\n                                      <div className=\"uk-text-small uk-text-muted\">\r\n                                        {props.description}\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      {/* <div className=\"uk-width-1-1 tm-product-description\" id=\"description\">\r\n                        <header>\r\n                          <nav className=\"tm-product-nav\" uk-sticky=\"offset: 60; bottom: #description; cls-active: tm-product-nav-fixed;\">\r\n                            <ul className=\"uk-subnav uk-subnav-pill js-product-switcher\" uk-switcher=\"connect: .js-tabs\">\r\n                              <li><a className=\"js-scroll-to-description\" href=\"#description\">Overview</a></li>\r\n                            </ul>\r\n                          </nav>\r\n                        </header>\r\n                        <div className=\"uk-card-body\">\r\n                          <div className=\"uk-switcher js-product-switcher js-tabs\">\r\n                            <section>\r\n                              <article className=\"uk-article\">\r\n                                <div className=\"uk-article-body\">\r\n                                  <p>\r\n                                    {props.description}\r\n                                  </p>\r\n\r\n                                </div>\r\n                              </article>\r\n                            </section>\r\n                          </div>\r\n                        </div>\r\n                      </div> */}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {\r\n                  relatedProducts.length > 0 &&\r\n                  <QuickProductList productList={relatedProducts} />\r\n                }\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <div id=\"product-size-model\" uk-modal=\"true\">\r\n        <div className=\"uk-modal-dialog uk-modal-body uk-margin-auto-vertical size-chart-width\">\r\n          <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n          {\r\n            props.productCategoryName.toLowerCase() === 'footwear' &&\r\n            <>\r\n              <img className=\"uk-visible@s\" src=\"/footwear_size_chart.jpg\" alt=\"footwear-size-chart\" />\r\n              <img className=\"uk-hidden@s\" src=\"/footwear_size_chart_mobile_1.jpg\" alt=\"footwear-size-chart\" />\r\n              <img className=\"uk-hidden@s\" src=\"/footwear_size_chart_mobile_2.jpg\" alt=\"footwear-size-chart\" />\r\n            </>\r\n          }\r\n\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerProductDetails\r\n}","import React from 'react';\r\n\r\nconst CustomerProductDetailsLoading: React.FunctionComponent = () => {\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a href=\"#\">Home</a></li>\r\n                <li><span>Product</span></li>\r\n              </ul>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom\"></h1>\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n                <div>\r\n                  <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n                    <div className=\"uk-grid-small uk-grid-collapse uk-grid-match\" uk-grid=\"true\">\r\n                      <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n                        <div className=\"uk-grid-collapse uk-child-width-1-1\" uk-slideshow=\"finite: true; ratio: 4:3;\" uk-grid=\"true\">\r\n                          <div>\r\n                            {/* <div className=\"ph-item\">\r\n                            <div className=\"ph-col-12\">\r\n                              <div className=\"ph-picture-big\"></div>\r\n                            </div>\r\n                          </div> */}\r\n                            <ul className=\"uk-slideshow-items\" uk-lightbox=\"true\">\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                              <li>\r\n                                <div className=\"ph-item\">\r\n                                  <div className=\"ph-col-12\">\r\n                                    <div className=\"ph-picture-big\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"uk-card-body uk-flex uk-flex-center\">\r\n                              <div className=\"uk-width-1-2 uk-visible@s\">\r\n                                <div uk-slider=\"finite: true\">\r\n                                  <div className=\"uk-position-relative\">\r\n                                    <div className=\"uk-slider-container\">\r\n                                      <ul className=\"tm-slider-items uk-slider-items uk-child-width-1-4 uk-grid uk-grid-small loading-small-slider\">\r\n                                        <li uk-slideshow-item=\"0\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                        <li uk-slideshow-item=\"1\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                        <li uk-slideshow-item=\"2\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                        <li uk-slideshow-item=\"3\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                        <li uk-slideshow-item=\"4\">\r\n                                          <div className=\"tm-ratio tm-ratio-1-1\">\r\n                                            <div className=\"ph-item\">\r\n                                              <div className=\"ph-col-12\">\r\n                                                <div className=\"ph-picture\"></div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </li>\r\n                                      </ul>\r\n                                      {/* {\r\n                                        <div className=\"ph-item\">\r\n                                          <div className=\"ph-col-12\">\r\n                                            <div className=\"ph-picture\"></div>\r\n                                          </div>\r\n                                        </div>\r\n                                        // getFileNameAndPathSmall(imageNames, imagePaths)\r\n                                      } */}\r\n                                      <div>\r\n                                        <a className=\"uk-position-center-left-out uk-position-small\" href=\"#\" uk-slider-item=\"previous\" uk-slidenav-previous=\"true\"></a>\r\n                                        <a className=\"uk-position-center-right-out uk-position-small\" href=\"#\" uk-slider-item=\"next\" uk-slidenav-next=\"true\"></a>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <ul className=\"uk-slideshow-nav uk-dotnav uk-hidden@s\"></ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"uk-width-1-1 uk-width-1-3@m tm-product-info\">\r\n                        <div className=\"uk-card-body\">\r\n                          {/* <div className=\"uk-margin\">\r\n                            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                              <div><span className=\"uk-label uk-label-warning uk-margin-xsmall-right\">top selling</span><span className=\"uk-label uk-label-danger uk-margin-xsmall-right\">trade-in</span></div>\r\n                            </div>\r\n                          </div> */}\r\n                          <div className=\"uk-margin\">\r\n                            <div className=\"uk-padding-small uk-background-primary-lighten uk-border-rounded\">\r\n                              <div className=\"uk-grid-small uk-child-width-1-1\" uk-grid=\"true\">\r\n                                <div>\r\n                                  {/* <del className=\"uk-text-meta\">$1899.00</del> */}\r\n                                  <div className=\"tm-product-price\"></div>\r\n                                </div>\r\n                                <div>\r\n                                  <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                                    <div>\r\n                                      <a uk-icon=\"icon: minus; ratio: .75\"></a>\r\n                                      <input className=\"uk-input tm-quantity-input\" id=\"product-1\" type=\"text\" onChange={()=>{}} value=\"1\" />\r\n                                      <a uk-icon=\"icon: plus; ratio: .75\"></a>\r\n                                    </div>\r\n                                    <div><button className=\"uk-button uk-button-primary tm-product-add-button tm-shine js-add-to-cart\" disabled={true}>add to cart</button></div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"uk-margin\">\r\n                            <div className=\"uk-padding-small uk-background-muted uk-border-rounded\">\r\n                              <div className=\"uk-grid-small uk-child-width-1-1 uk-text-small\" uk-grid=\"true\">\r\n                                <div>\r\n                                  <div className=\"uk-grid-collapse\" uk-grid=\"true\">\r\n                                    <span className=\"uk-margin-xsmall-right\" uk-icon=\"cart\"></span>\r\n                                    <div>\r\n                                      <div className=\"uk-text-bolder\">Delivery</div>\r\n                                      <div className=\"uk-text-xsmall uk-text-muted\">In stock, free, tomorrow</div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div>\r\n                                  <div className=\"uk-grid-collapse\" uk-grid=\"true\">\r\n                                    <span className=\"uk-margin-xsmall-right\" uk-icon=\"location\"></span>\r\n                                    <div>\r\n                                      <div className=\"uk-text-bolder\">Pick up from store</div>\r\n                                      <div className=\"uk-text-xsmall uk-text-muted\">In stock, free, tomorrow</div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"uk-width-1-1 tm-product-description\" id=\"description\">\r\n                        <header>\r\n                          <nav className=\"tm-product-nav\" uk-sticky=\"offset: 60; bottom: #description; cls-active: tm-product-nav-fixed;\">\r\n                            <ul className=\"uk-subnav uk-subnav-pill js-product-switcher\" uk-switcher=\"connect: .js-tabs\">\r\n                              <li><a className=\"js-scroll-to-description\" href=\"#description\">Overview</a></li>\r\n                            </ul>\r\n                          </nav>\r\n                        </header>\r\n                        <div className=\"uk-card-body\">\r\n                          <div className=\"uk-switcher js-product-switcher js-tabs\">\r\n                            <section>\r\n                              <article className=\"uk-article\">\r\n                                <div className=\"uk-article-body\">\r\n                                  <p>\r\n\r\n                                  </p>\r\n\r\n                                </div>\r\n                              </article>\r\n                            </section>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  CustomerProductDetailsLoading\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProduct } from 'reducers/Product';\r\nimport { AppState, Cart, getRelatedProduct } from 'reducers';\r\nimport { ProductItem } from 'types';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { CustomerProductDetails } from './CustomerProductDetails';\r\nimport { CustomerProductDetailsLoading } from './CustomerProductDetailsLoading';\r\n\r\ninterface cartQuantity {\r\n  [key: string]: string;\r\n};\r\n\r\nconst CustomerProductDetailsConstainer: React.FunctionComponent = () => {\r\n\r\n  const { product, queryProductId } = useParams();\r\n  const [ mainSlider, setMainSlider] = useState<JSX.Element[] | undefined>(undefined);\r\n  const [ smallSlider, setSmallSlider] = useState<JSX.Element[] | undefined>(undefined);\r\n  const [cartProductQuantity, setCartProductQuantity] = useState<cartQuantity>({});\r\n  const [cartProductFlag, setCartProductFlag] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getProduct(Number(queryProductId)));\r\n  }, [queryProductId]);\r\n\r\n  const {\r\n    name, description, productCategoryId,\r\n    subCategory, quantity,\r\n    priceINR, priceUSD, productId, productCategoryName,\r\n    sizeId, size, colourId, imageNames, imagePaths, productDetailId,\r\n  } = useSelector<AppState, ProductItem>(state => state.product.singleData || {} as ProductItem);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n\r\n  useEffect(()=>{\r\n      if (imageNames && imagePaths && imageNames.length > 0 && imagePaths.length > 0) {\r\n        const imageName = imageNames.split(',');\r\n        const imagePath = imagePaths.split(',');\r\n  \r\n        setMainSlider(imagePath.map((path: string, index: number) => {\r\n          return <li key={index}>\r\n            <a className=\"uk-card-body tm-media-box tm-media-box-zoom\" href={serverImagePath + path}>\r\n              <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + path} alt={imageName[index]} /></figure>\r\n            </a>\r\n          </li>\r\n        }))\r\n\r\n        setSmallSlider(imagePath.map((path: string, index: number) => {\r\n          return <li uk-slideshow-item={index} tabIndex={-1} key={index}>\r\n            <div className=\"tm-ratio tm-ratio-1-1\">\r\n              <a className=\"tm-media-box tm-media-box-frame\" href=\"#\">\r\n                <figure className=\"tm-media-box-wrap\">\r\n                  <img src={serverImagePath + path} alt={imageName[index]} />\r\n                </figure>\r\n              </a>\r\n            </div>\r\n          </li>\r\n        }))\r\n      }\r\n  },[imageNames,imagePaths])\r\n\r\n  useEffect(()=>{\r\n    if(cart.data){\r\n      const cartProductCount = {} as cartQuantity;\r\n      cart.data.forEach(({productDetailId,productQuantity}) => {\r\n        cartProductCount[productDetailId] = productQuantity;\r\n      });\r\n      setCartProductQuantity(cartProductCount);\r\n      setCartProductFlag(true);\r\n    }\r\n  },[cart.data]);\r\n\r\n  useEffect(() => {\r\n    if(subCategory && queryProductId){\r\n      dispatch(getRelatedProduct(subCategory, Number(queryProductId)));\r\n    }\r\n  },[subCategory, queryProductId]);\r\n\r\n  return (\r\n    smallSlider && cartProductFlag  ? \r\n    <CustomerProductDetails \r\n      smallSlider={smallSlider}\r\n      mainSlider={mainSlider}\r\n      description={description || ''}\r\n      name={name || ''}\r\n      priceINR={priceINR || ''}\r\n      priceUSD={priceUSD || ''}\r\n      productCategoryName={productCategoryName || ''}\r\n      quantity={quantity || ''}\r\n      sizeId={sizeId || ''}\r\n      size={size || ''}\r\n      productId={productId || ''}\r\n      productDetailId={productDetailId || ''}\r\n      imageName={imageNames && imageNames.split(',')[0] || ''}\r\n      imagePath={imagePaths && imagePaths.split(',')[0] || ''}\r\n      cartProductQuantity={cartProductQuantity}\r\n      /> \r\n    : <CustomerProductDetailsLoading/>\r\n  )\r\n};\r\n\r\nexport {\r\n  CustomerProductDetailsConstainer\r\n}","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { getCart, AppState, Cart, deleteCartItem, addUpdateCart, UserLocation, validateCoupon, Coupon, updateCartQuantity } from 'reducers';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { CustomerCart } from 'types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getCurrencyIcon } from 'services';\r\n\r\n\r\ninterface Quantity {\r\n  [key: string]: string\r\n}\r\nconst CartDetails: React.FunctionComponent = () => {\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [quantity, setQuantity] = useState<Quantity>();\r\n  const [enteredCoupon, setEnteredCoupon] = useState('');\r\n  const [quantityCheckMessage, setQuantityCheckMessage] = useState('Getting your data.');\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const couponStatus = useSelector<AppState, Coupon>(state => state.coupon);\r\n  const [deboucedId, setDeboucedId] = useState('');\r\n  const [quantityChanged, setQuantityChanged] = useState(false);\r\n  const [quantityChangedProductId, setQuantityChangedProductId] = useState('');\r\n  const orderQuantityCheckButtonRef = useRef<HTMLButtonElement>(null);\r\n  const orderQuantityCheckModalRef = useRef<HTMLDivElement>(null);\r\n  \r\n\r\n  useEffect(() => {\r\n    dispatch(getCart());\r\n    if (couponStatus.data?.length === 1) {\r\n      setEnteredCoupon(couponStatus.data[0].code);\r\n    }\r\n  }, []);\r\n\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n\r\n  useEffect(() => {\r\n    let qt: Quantity = {};\r\n    if (cart.data && cart.data.length > 0) {\r\n      cart.data.forEach((product: CustomerCart) => {\r\n        qt[product.productDetailId] = product.productQuantity || '0';\r\n      });\r\n      setQuantity(qt);\r\n      checkForAvailableQuantity(cart.data)\r\n    }\r\n  }, [cart.data]);\r\n  const deleteCart = (cartItem: CustomerCart) => {\r\n    dispatch(deleteCartItem(cartItem,true));\r\n  };\r\n\r\n  const checkForAvailableQuantity = (cartData: CustomerCart[]) => {\r\n    const orderDetailId = cartData.map((cartItem) => {\r\n      if (Number(cartItem.availableQuantity) < Number(cartItem.productQuantity)) {\r\n        setQuantityChanged(true);\r\n        return cartItem.cartId\r\n      } else {\r\n        return 0\r\n      }\r\n    })\r\n    setQuantityChangedProductId(orderDetailId.toString());\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(quantityChanged){\r\n      orderQuantityCheckButtonRef.current?.click();\r\n      dispatch(updateCartQuantity(quantityChangedProductId));\r\n    }\r\n  },[quantityChanged])\r\n\r\n  useEffect(() => {\r\n    if(cart._quantityUpdate && orderQuantityCheckModalRef.current?.getBoundingClientRect().top !== 0) {\r\n      dispatch(getCart());\r\n      setQuantityCheckMessage('We updated your cart based on the product availability.');\r\n      setTimeout(() => {\r\n        orderQuantityCheckButtonRef.current?.click();\r\n      },5000)\r\n      \r\n    }\r\n  },[cart._quantityUpdate])\r\n\r\n  const updateCart = (cartId: string, quantity: string, productDetailId: string) => {\r\n    dispatch(addUpdateCart({\r\n      productDetailId,\r\n      productQuantity: quantity,\r\n      currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n      cartId,\r\n      productPrice: '',\r\n      productId: ''\r\n    }, true));\r\n  };\r\n\r\n  const updateQantity = (cartId: string, productDetailId: string, availableQuantity: string, isIncrement: boolean, changedQuantity?: string) => {\r\n    if (quantity) {\r\n      if (changedQuantity) {\r\n        let chqty = changedQuantity\r\n        if (Number(chqty) > Number(availableQuantity)) {\r\n          chqty = availableQuantity\r\n        }\r\n        const newQuantity = { ...quantity, ...{ [productDetailId]: chqty.toString() } };\r\n        setDeboucedId(cartId + '-' + window.setTimeout(() => {\r\n          updateCart(cartId, chqty.toString(), productDetailId)\r\n        }, 500).toString());\r\n        setQuantity(newQuantity);\r\n      } else if (isIncrement) {\r\n        let updatedQuantity = Number(quantity[productDetailId]) + 1;\r\n        if (updatedQuantity > Number(availableQuantity)) {\r\n          updatedQuantity = Number(availableQuantity)\r\n        }\r\n        const newQuantity = { ...quantity, ...{ [productDetailId]: updatedQuantity.toString() } };\r\n        setDeboucedId(cartId + '-' + window.setTimeout(() => {\r\n          updateCart(cartId, updatedQuantity.toString(), productDetailId)\r\n        }, 500).toString());\r\n        setQuantity(newQuantity);\r\n      } else {\r\n        let updatedQuantity = Number(quantity[productDetailId]) - 1;\r\n        if (updatedQuantity < 0) {\r\n          updatedQuantity = 0\r\n        }\r\n        const newQuantity = { ...quantity, ...{ [productDetailId]: updatedQuantity.toString() } };\r\n        setDeboucedId(cartId + '-' + window.setTimeout(() => {\r\n          updateCart(cartId, updatedQuantity.toString(), productDetailId)\r\n        }, 500).toString());\r\n        setQuantity(newQuantity);\r\n      }\r\n\r\n      if (deboucedId !== '' && deboucedId.split('-')[0] === cartId.toString()) {\r\n        window.clearTimeout(Number(deboucedId.split('-')[1]));\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkCouponValidity = () => {\r\n    dispatch(validateCoupon(enteredCoupon));\r\n  }\r\n  return (\r\n    <div className=\"uk-width-1-1 uk-width-expand@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n        <header className=\"uk-card-header uk-text-uppercase uk-text-muted uk-text-center uk-text-small uk-visible@m\">\r\n          <div className=\"uk-grid-small uk-child-width-1-2\" uk-grid=\"true\">\r\n            <div>product</div>\r\n            <div>\r\n              <div className=\"uk-grid-small uk-child-width-expand\" uk-grid=\"true\">\r\n                <div>price</div>\r\n                <div className=\"tm-quantity-column\">quantity</div>\r\n                <div>sum</div>\r\n                <div className=\"uk-width-auto\"><div style={{ width: \"20px\" }}></div></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        {\r\n          cart.data && cart.data.map((cartItem: CustomerCart, index: number) => {\r\n            return <div className=\"uk-card-body\" key={index}>\r\n              <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-1-2@m uk-flex-middle\" uk-grid=\"true\">\r\n                <div>\r\n                  <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                    <div className=\"uk-width-1-3\">\r\n                      <div className=\"tm-ratio tm-ratio-4-3\">\r\n                        <a className=\"tm-media-box\" onClick={() => history.push('/productDetails/' + cartItem.productId)}>\r\n                          <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + cartItem.productImagePath} alt='Apple MacBook Pro 15\" Touch Bar MPTU2LL/A 256GB (Silver)' /></figure>\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"uk-width-expand\">\r\n                      <div className=\"uk-text-meta\">{cartItem.subcategory}</div>\r\n                      <a className=\"uk-link-heading\" onClick={() => history.push('/productDetails/' + cartItem.productId)}>{cartItem.productName}</a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"uk-grid-small uk-child-width-1-1 uk-child-width-expand@s uk-text-center\" uk-grid=\"true\">\r\n                    <div>\r\n                      <div className=\"uk-text-muted uk-hidden@m\">Price</div>\r\n                      <div>{getCurrencyIcon(userLocation.data || 'IN')} {cartItem.productPrice}</div>\r\n                    </div>\r\n                    <div>\r\n                      <label className=\"uk-text-center\">\r\n                        <div className=\"cart-quantity cart-margin-auto\">\r\n                          <div className=\"uk-inline\">\r\n                            <a className=\"uk-form-icon\" uk-icon=\"icon: minus\"\r\n                              onClick={() => {\r\n                                updateQantity(cartItem.cartId, cartItem.productDetailId, cartItem.availableQuantity || '0', false)\r\n                              }}>\r\n                            </a>\r\n                            <a className=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: plus\"\r\n                              onClick={() => {\r\n                                updateQantity(cartItem.cartId, cartItem.productDetailId, cartItem.availableQuantity || '0', true)\r\n                              }}>\r\n                            </a>\r\n                            <input className=\"uk-input uk-text-center\"\r\n                              type=\"number\"\r\n                              value={quantity && quantity[cartItem.productDetailId] || 0}\r\n                              onChange={(e) => {\r\n                                updateQantity(cartItem.cartId, cartItem.productDetailId, cartItem.availableQuantity || '0', false, e.currentTarget.value)\r\n                              }} />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"uk-form-label\"><span className=\"uk-text-meta uk-text-primary colour-default\">(Max {cartItem.availableQuantity})</span></div>\r\n                      </label>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <div className=\"uk-text-muted uk-hidden@m\">Sum</div>\r\n                      <div>{getCurrencyIcon(userLocation.data || 'IN')} {cartItem.totalPrice}</div>\r\n                    </div>\r\n                    <div className=\"uk-width-auto@s\">\r\n                      {cart._isLoading && <span uk-spinner=\"true\"></span>}\r\n                      {!cart._isLoading && <a className=\"uk-text-danger\" onClick={() => deleteCart(cartItem)} uk-tooltip=\"Remove\"><span uk-icon=\"trash\"></span></a>}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          })\r\n        }\r\n        <div className=\"uk-card-footer\">\r\n          <label>\r\n            <span className=\"uk-form-label uk-margin-small-right\">Promo Code</span>\r\n            <div className=\"uk-inline\">\r\n              <a className=\"uk-form-icon uk-form-icon-flip\" onClick={() => checkCouponValidity()} uk-icon=\"arrow-right\"></a>\r\n              <input className=\"uk-input uk-form-width-small\" type=\"text\"\r\n                value={enteredCoupon}\r\n                onChange={(e) => setEnteredCoupon(e.currentTarget.value)}\r\n              />\r\n            </div>\r\n            {couponStatus._isSuccess && <span className=\"login-error-message coupon-message uk-label uk-label-success\"><span uk-icon=\"check\"></span> Coupon is valid !</span>}\r\n            {couponStatus._isError && <span className=\"login-error-message coupon-message uk-label uk-label-danger\"><span uk-icon=\"ban\"></span> Coupon is Invalid.</span>}\r\n          </label>\r\n        </div>\r\n        <button ref={orderQuantityCheckButtonRef} id=\"payment-loading\" uk-toggle=\"target: #my-id\" type=\"button\"></button>\r\n        <div id=\"my-id\" uk-modal=\"true; esc-close: false; bg-close: false\">\r\n          <div className=\"uk-modal-dialog uk-modal-body uk-margin-auto-vertical\">\r\n            {\r\n              !cart._isLoading && <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n            }\r\n            <div ref={orderQuantityCheckModalRef}  className=\"uk-modal-body uk-nav-center\">\r\n              <p>{quantityCheckMessage}</p>\r\n              {\r\n                cart._isLoading && <div uk-spinner=\"true\"></div>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport {\r\n  CartDetails\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState, Cart, UserLocation } from 'reducers';\r\nimport { CustomerCart, ProductCoupon } from 'types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getCurrencyIcon, calculateUserDiscountPrice, calculateUserDiscount } from 'services';\r\n\r\nconst CartPrice: React.FunctionComponent = () => {\r\n\r\n  const [cartTotal, setCartTotal] = useState(0);\r\n  const [userDiscountTotal, setUserDiscountTotal] = useState('0');\r\n  const [userCouponTotal, setUserCouponTotal] = useState('0');\r\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState('0');\r\n  const [discountedTotal, setDiscountedTotal] = useState('0');\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const couponData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (cart.data && cart.data.length > 0) {\r\n      let total = 0;\r\n      cart.data.forEach((cart: CustomerCart) => {\r\n        if (cart.totalPrice) {\r\n          total += Number(cart.totalPrice);\r\n        }\r\n      });\r\n      setCartTotal(total);\r\n      if (couponData.length === 1) {\r\n        let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', total.toString());\r\n        let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', total.toString());\r\n        let couponPrice = calculateUserDiscountPrice(couponData[0].value, priceAfterDiscount.toString());\r\n        let priceAfterCoupon = calculateUserDiscount(couponData[0].value || '0', priceAfterDiscount.toString());\r\n        setDiscountedTotal(priceAfterDiscount);\r\n        setUserDiscountTotal(discountPrice);\r\n        setUserCouponTotal(couponPrice);\r\n        setTotalAfterDiscount(priceAfterCoupon);\r\n      } else {\r\n        let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', total.toString());\r\n        let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', total.toString());\r\n        setUserDiscountTotal(discountPrice);\r\n        setTotalAfterDiscount(priceAfterDiscount);\r\n      }\r\n    } else {\r\n      setCartTotal(0);\r\n      setUserDiscountTotal('0');\r\n      setTotalAfterDiscount('0');\r\n      setDiscountedTotal('0');\r\n      setUserCouponTotal('0');\r\n    }\r\n  }, [cart.data,couponData]);\r\n\r\n  return (\r\n    <div className=\"uk-width-1-1 tm-aside-column uk-width-1-4@m\">\r\n      <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\" uk-sticky=\"offset: 30; bottom: true; media: @m;\">\r\n        {\r\n          (userData.data?.discount && userData.data?.discount !== '0' || couponData.length === 1 ) &&\r\n          <div className=\"uk-card-body\">\r\n            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand uk-text-muted\">Subtotal</div>\r\n              <div>{getCurrencyIcon(userLocation.data || 'IN')} {cartTotal}</div>\r\n            </div>\r\n            {\r\n              userData.data?.discount && userData.data?.discount !== '0' &&\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand uk-text-muted\">Discount ({userData.data?.discount}%)</div>\r\n              <div className=\"uk-text-danger\">− {getCurrencyIcon(userLocation.data || 'IN')} {userDiscountTotal}</div>\r\n            </div>\r\n            }\r\n            \r\n          </div>\r\n        }\r\n        {\r\n          couponData.length === 1 &&\r\n          <div className=\"uk-card-body\">\r\n            {\r\n              userData.data?.discount && userData.data?.discount !== '0' &&\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand uk-text-muted\">Discounted Total</div>\r\n                <div>{getCurrencyIcon(userLocation.data || 'IN')} {discountedTotal}</div>\r\n              </div>\r\n            }\r\n\r\n            <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n              <div className=\"uk-width-expand uk-text-muted\">Coupon ({couponData[0] && couponData[0].value}%)</div>\r\n              <div className=\"uk-text-danger\">− {getCurrencyIcon(userLocation.data || 'IN')} {userCouponTotal}</div>\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        <div className=\"uk-card-body\">\r\n          <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n            <div className=\"uk-width-expand uk-text-muted\">Total</div>\r\n            <div className=\"uk-text-lead uk-text-bolder\">{getCurrencyIcon(userLocation.data || 'IN')} {totalAfterDiscount}</div>\r\n          </div>\r\n          <button className=\"uk-button uk-button-primary uk-margin-small uk-width-1-1\"\r\n            disabled={cartTotal === 0}\r\n            onClick={() => { history.push('/checkout') }}\r\n          >\r\n            checkout\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  CartPrice\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CartDetails } from './CartDetails';\r\nimport { CartPrice } from './CartPrice';\r\n\r\nconst CustomerCartContainer: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <div className=\"uk-text-center\">\r\n              <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\r\n                <li><a onClick={()=>history.push('/')}>Home</a></li>\r\n                <li><span>Cart</span></li>\r\n              </ul>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom\">Cart</h1>\r\n            </div>\r\n            <div>\r\n              <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n                <CartDetails/>\r\n                <CartPrice/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport {\r\n  CustomerCartContainer\r\n}","import React, { useState, useEffect, useRef, Dispatch, SetStateAction } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, Cart, getRazorPayOrder, saveRazorPayOrder, getCart, errorCheckout, getCodOrder, saveCodOrder, UserLocation, defaultCheckout, setShippingPrice } from 'reducers';\r\nimport { CustomerCart, ProductCoupon, CustomerShippment } from 'types';\r\nimport { PayPalButton, PayPalPayment, CashOnDeliveryPayment } from 'components/shared';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getCurrencyIcon, calculateUserDiscountPrice, calculateUserDiscount } from 'services';\r\n\r\ninterface Props {\r\n  paymentMode: string;\r\n  shippingType: string;\r\n  setCartTotal: Dispatch<SetStateAction<number>>;\r\n};\r\ndeclare global {\r\n  interface Window { Razorpay: any; }\r\n}\r\nwindow.Razorpay = window.Razorpay || {};\r\n\r\nconst CheckoutPrice: React.FunctionComponent<Props> = (props: Props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [cartTotalPrice, setCartTotalPrice] = useState(0);\r\n  const [userDiscountTotal, setUserDiscountTotal] = useState('0');\r\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState('0');\r\n  const [userCouponTotal, setUserCouponTotal] = useState('0');\r\n  const [discountedTotal, setDiscountedTotal] = useState('0');\r\n  const [priceAfterShipping, setPriceAfterShipping] = useState('0');\r\n  const [quantityCount, setQuantityCount] = useState(0);\r\n  const [cartOrderId, setCartOrderId] = useState(0);\r\n  const [paymentMessage, setPaymentMessage] = useState(\"Please don't close this window while we process your payment.\")\r\n  const [paymentError, setPaymentError] = useState(false);\r\n  const [paymentSuccess, setPaymentSuccess] = useState(false);\r\n  const [errorHappendAt, setErrorHappendAt] = useState('close');\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n  const checkout = useSelector((state: AppState) => state.checkout);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const couponData = useSelector<AppState, ProductCoupon[]>(state => state.coupon.data || []);\r\n  const shippingCost = useSelector<AppState, CustomerShippment>(state => state.customerShippment.data || {} as CustomerShippment);\r\n  const paymentLoadingRef = useRef<HTMLButtonElement>(null);\r\n  const [containerIsCard, setContainerIsCard] = useState(false);\r\n  const [ukSticky, setUkSicky] = useState({});\r\n  const [showCodContainer, setShowCodContainer] = useState(false);\r\n  const [noAddressError, setNoAddressError] = useState(false);\r\n  const [enteredOTP, setEnteredOTP] = useState('');\r\n  const [didPriceChanged, setDidPriceChanged] = useState(false);\r\n  const [timeForShowPriceChange, setTimeForShowPriceChange] = useState(5);\r\n  let timer: NodeJS.Timer;\r\n\r\n  useEffect(() => {\r\n    let cartPrice = 0;\r\n    if (cart.data && cart.data.length > 0) {\r\n      cart.data.forEach(({ totalPrice }) => {\r\n        cartPrice += Number(totalPrice)\r\n      });\r\n      setCartTotalPrice(cartPrice);\r\n      props.setCartTotal(cartPrice);\r\n      if (couponData.length === 1) {\r\n        let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString());\r\n        let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString());\r\n        let couponPrice = calculateUserDiscountPrice(couponData[0].value, priceAfterDiscount.toString());\r\n        let priceAfterCoupon = calculateUserDiscount(couponData[0].value || '0', priceAfterDiscount.toString());\r\n        setDiscountedTotal(priceAfterDiscount);\r\n        setUserDiscountTotal(discountPrice);\r\n        setUserCouponTotal(couponPrice);\r\n        setTotalAfterDiscount(priceAfterCoupon);\r\n        calculateShippingCost(cart.data, priceAfterCoupon);\r\n\r\n      } else {\r\n        let discountPrice = calculateUserDiscountPrice(userData.data?.discount || '0', cartPrice.toString());\r\n        let priceAfterDiscount = calculateUserDiscount(userData.data?.discount || '0', cartPrice.toString());\r\n        setUserDiscountTotal(discountPrice);\r\n        setTotalAfterDiscount(priceAfterDiscount);\r\n        calculateShippingCost(cart.data, priceAfterDiscount);\r\n      }\r\n      setCartOrderId(Number(cart.data[0].orderId));\r\n    } else {\r\n      setCartTotalPrice(0);\r\n      setUserDiscountTotal('0');\r\n      setTotalAfterDiscount('0');\r\n      setPriceAfterShipping('0')\r\n      props.setCartTotal(0);\r\n    }\r\n    if (didPriceChanged) {\r\n      setDidPriceChanged(false);\r\n      if (timeForShowPriceChange === 0) {\r\n        paymentLoadingRef.current?.click();\r\n      } else {\r\n        clearTimeout(timer);\r\n        timer = setTimeout(() => {\r\n          paymentLoadingRef.current?.click();\r\n          clearTimeout(timer);\r\n        }, 5000)\r\n      }\r\n    }\r\n  }, [cart.data, userData.data, props.shippingType]);\r\n\r\n  useEffect(() => {\r\n    if (userLocation.data === 'IN') {\r\n      if (checkout.data && checkout.data.orderId && props.paymentMode === 'online') {\r\n        const {\r\n          key,\r\n          currency,\r\n          orderId,\r\n          name\r\n        } = checkout.data\r\n        var options = {\r\n          \"key\": key,\r\n          \"currency\": currency,\r\n          \"name\": name,\r\n          \"description\": \"\",\r\n          \"order_id\": orderId,\r\n          \"handler\": function (response: any) {\r\n            paymentLoadingRef.current?.click();\r\n            successRazorPay(response.razorpay_payment_id, response.razorpay_order_id, response.razorpay_signature)\r\n          },\r\n          \"modal\": {\r\n            \"ondismiss\": function () {\r\n              setPaymentError(true);\r\n              dispatch(errorCheckout(''));\r\n            }\r\n          },\r\n          \"prefill\": {\r\n            \"name\": userData.data?.firstName || '' + userData.data?.lastName,\r\n            \"email\": userData.data?.emailAddress,\r\n            \"contact\": userData.data?.mobile\r\n          },\r\n          \"notes\": {\r\n            \"address\": \"Razorpay Corporate Office\"\r\n          },\r\n          \"theme\": {\r\n            \"color\": \"#F37254\"\r\n          }\r\n        };\r\n        var rzp1 = new window.Razorpay(options);\r\n        rzp1.on('payment.failed', function (response: any) {\r\n          setErrorHappendAt('failed');\r\n          console.log('code', response.error.code);\r\n          console.log('desc', response.error.description);\r\n          console.log('source', response.error.source);\r\n          console.log('step', response.error.step);\r\n          console.log('reason', response.error.reason);\r\n          console.log('metadata', response.error.metadata);\r\n        });\r\n        rzp1.open();\r\n      } else if (checkout.data && checkout.data.otp && props.paymentMode === 'cod') {\r\n        setShowCodContainer(true);\r\n      }\r\n    }\r\n  }, [checkout.data]);\r\n\r\n  useEffect(() => {\r\n    if (checkout._priceChanged && (props.paymentMode === 'online' || props.paymentMode === 'cod')) {\r\n      setPaymentMessage(checkout.message || '');\r\n      dispatch(getCart());\r\n      paymentLoadingRef.current?.click();\r\n      setDidPriceChanged(true);\r\n      timer = setInterval(() => {\r\n        if (timeForShowPriceChange > 0) {\r\n          setTimeForShowPriceChange(timeForShowPriceChange - 1);\r\n        }\r\n      }, 1000);\r\n    }\r\n  }, [checkout._priceChanged]);\r\n\r\n  useEffect(() => {\r\n    if (paymentError && props.paymentMode === 'online') {\r\n      if (errorHappendAt === 'failed') {\r\n        setPaymentMessage('Payment failure from Razorpay, please try again.');\r\n        paymentLoadingRef.current?.click();\r\n      } else if (errorHappendAt === 'close') {\r\n        setPaymentMessage('Payment incomplete, please try again.');\r\n        paymentLoadingRef.current?.click();\r\n      }\r\n    }\r\n  }, [paymentError]);\r\n\r\n  useEffect(() => {\r\n    if (checkout._isPaymentSucceess &&\r\n      (props.paymentMode === 'online' || props.paymentMode === 'cod')) {\r\n      setPaymentMessage('Payment is successful !!');\r\n      setPaymentSuccess(true);\r\n      setPaymentError(false);\r\n      dispatch(getCart());\r\n      setShowCodContainer(false);\r\n      setTimeout(() => {\r\n        dispatch(defaultCheckout());\r\n        paymentLoadingRef.current?.click();\r\n        history.push('userinformation/orders');\r\n      }, 5000);\r\n    }\r\n  }, [checkout._isPaymentSucceess]);\r\n\r\n  useEffect(() => {\r\n    if (!paymentError) {\r\n      if (checkout._isError && props.paymentMode === 'online') {\r\n        setPaymentMessage(checkout.message || '');\r\n        setPaymentSuccess(false);\r\n        setPaymentError(true);\r\n        setErrorHappendAt('DB');\r\n      } else if (checkout._isError && props.paymentMode === 'cod') {\r\n        setPaymentMessage(checkout.message || '');\r\n        setPaymentSuccess(false);\r\n        setPaymentError(true);\r\n        setShowCodContainer(true);\r\n      }\r\n    }\r\n  }, [checkout._isError])\r\n\r\n  useEffect(()=>{\r\n    if(props.paymentMode !== 'cod'){\r\n      setShowCodContainer(false)\r\n    }\r\n  },[props.paymentMode])\r\n  const successRazorPay = (razorpayPaymentId: string, razorpayOrderId: string, razorpaySignature: string) => {\r\n    dispatch(saveRazorPayOrder({\r\n      razorpayPaymentId,\r\n      razorpayOrderId,\r\n      razorpaySignature,\r\n      orderId: cartOrderId,\r\n      orderNumber: checkout.data && checkout.data.receipt || '',\r\n      addressId: userData.data && userData.data.addressId || '',\r\n      couponId: couponData && couponData[0] && couponData[0].couponId\r\n    }));\r\n  }\r\n  const proceedWithPayment = () => {\r\n    if(userData.data?.addressId){\r\n      if (props.paymentMode === 'online') {\r\n        setPaymentError(false);\r\n        dispatch(getRazorPayOrder(totalAfterDiscount.toString(), cartOrderId, couponData && couponData[0] && couponData[0].couponId))\r\n      } else if (props.paymentMode === 'cod') {\r\n        setPaymentError(false);\r\n        dispatch(getCodOrder(totalAfterDiscount.toString(), cartOrderId, couponData && couponData[0] && couponData[0].couponId));\r\n      }\r\n    } else{\r\n      setNoAddressError(true);\r\n      setTimeout(() => {\r\n        setNoAddressError(false);\r\n      },3000) \r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (containerIsCard) {\r\n      setUkSicky({});\r\n    } else {\r\n      setUkSicky({\r\n        'uk-sticky': \"offset: 60; bottom: true; media: @m;\"\r\n      })\r\n    }\r\n  }, [containerIsCard])\r\n\r\n  const successCod = () => {\r\n    dispatch(saveCodOrder({\r\n      otp: enteredOTP,\r\n      orderId: cartOrderId,\r\n      addressId: userData.data && userData.data.addressId || '',\r\n      couponId: couponData && couponData[0] && couponData[0].couponId\r\n    }));\r\n    setPaymentMessage(\"Please don't close this window while we process your payment.\");\r\n    setPaymentSuccess(false);\r\n    setPaymentError(false);\r\n    paymentLoadingRef.current?.click();\r\n  }\r\n\r\n  const calculateShippingCost = (cartData: CustomerCart[], totalAfterDiscount: string) => {\r\n    let itemCount = cartData.reduce((accumulator, cart) => ({ 'productQuantity': (Number(accumulator.productQuantity) + Number(cart.productQuantity)).toString() } as CustomerCart));\r\n    setQuantityCount(Number(itemCount.productQuantity));\r\n    if (props.shippingType === 'standard') {\r\n      if (Number(itemCount.productQuantity) > 1) {\r\n        const cost = (10 + ((Number(itemCount.productQuantity) - 1) * 6));\r\n        dispatch(setShippingPrice({ 'shippmentPrice': cost.toString() } as CustomerShippment));\r\n        setPriceAfterShipping((Number(totalAfterDiscount) + cost).toString());\r\n      } else {\r\n        dispatch(setShippingPrice({ 'shippmentPrice': '10' } as CustomerShippment));\r\n        setPriceAfterShipping((Number(totalAfterDiscount) + 10).toString());\r\n      }\r\n    } else {\r\n      if (Number(itemCount.productQuantity) > 1) {\r\n        const cost = (18 + ((Number(itemCount.productQuantity) - 1) * 10));\r\n        dispatch(setShippingPrice({ 'shippmentPrice': cost.toString() } as CustomerShippment));\r\n        setPriceAfterShipping((Number(totalAfterDiscount) + cost).toString());\r\n      } else {\r\n        dispatch(setShippingPrice({ 'shippmentPrice': '18' } as CustomerShippment));\r\n        setPriceAfterShipping((Number(totalAfterDiscount) + 18).toString());\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"uk-width-1-1 uk-width-1-4@m tm-aside-column\">\r\n\r\n        <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\"\r\n          {\r\n          ...(\r\n            ukSticky\r\n          )\r\n          }\r\n        >\r\n          <section className=\"uk-card-body\">\r\n            <h4>Items in order</h4>\r\n            {\r\n              cart.data && cart.data.map((cartItem: CustomerCart, index: number) => {\r\n                return (\r\n                  <div key={index} className=\"uk-grid-small\" uk-grid=\"true\">\r\n                    <div className=\"uk-width-expand\">\r\n                      <div className=\"uk-text-small\">{cartItem.productName}</div>\r\n                      <div className=\"uk-text-meta\">{cartItem.productQuantity} × {getCurrencyIcon(userLocation.data || 'IN')} {cartItem.productPrice}</div>\r\n                    </div>\r\n                    <div className=\"uk-text-right\"><div>{getCurrencyIcon(userLocation.data || 'IN')} {cartItem.totalPrice}</div></div>\r\n                  </div>\r\n                )\r\n              })\r\n            }\r\n          </section>\r\n          {\r\n            userData.data?.discount && userData.data?.discount !== '0' &&\r\n            <section className=\"uk-card-body\">\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Subtotal</div></div>\r\n                <div className=\"uk-text-right\"><div>{getCurrencyIcon(userLocation.data || 'IN')} {cartTotalPrice || 0}</div></div>\r\n              </div>\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Discount ({userData.data?.discount}%)</div></div>\r\n                <div className=\"uk-text-right\"><div className=\"uk-text-danger\">- {getCurrencyIcon(userLocation.data || 'IN')} {userDiscountTotal}</div></div>\r\n              </div>\r\n            </section>\r\n\r\n          }\r\n          {\r\n            couponData.length === 1 &&\r\n            <section className=\"uk-card-body\">\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Discounted Total</div></div>\r\n                <div className=\"uk-text-right\"><div>{getCurrencyIcon(userLocation.data || 'IN')} {discountedTotal}</div></div>\r\n              </div>\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Coupon ({couponData[0] && couponData[0].value}%)</div></div>\r\n                <div className=\"uk-text-right\"><div className=\"uk-text-danger\">- {getCurrencyIcon(userLocation.data || 'IN')} {userCouponTotal}</div></div>\r\n              </div>\r\n            </section>\r\n          }\r\n          {\r\n            userLocation.data !== 'IN' &&\r\n            <section className=\"uk-card-body\">\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Subtotal</div></div>\r\n                <div className=\"uk-text-right\"><div>{getCurrencyIcon(userLocation.data || 'IN')} {totalAfterDiscount}</div></div>\r\n              </div>\r\n              <div className=\"uk-grid-small\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Shipping</div></div>\r\n                <div className=\"uk-text-right\"><div className=\"uk-text-success\">+ {getCurrencyIcon(userLocation.data || 'IN')} {shippingCost.shippmentPrice}</div></div>\r\n              </div>\r\n            </section>\r\n          }\r\n\r\n          {\r\n            showCodContainer && props.paymentMode==='cod' &&\r\n            <CashOnDeliveryPayment showOtpContainer={showCodContainer} setEnteredOTP={setEnteredOTP} />\r\n          }\r\n          <section className=\"uk-card-body\">\r\n            {\r\n              <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\r\n                <div className=\"uk-width-expand\"><div className=\"uk-text-muted\">Total</div></div>\r\n                {\r\n                  userLocation.data === 'IN' ?\r\n                    <div className=\"uk-text-right\"><div className=\"uk-text-lead uk-text-bolder\">{getCurrencyIcon(userLocation.data || 'IN')} {totalAfterDiscount}</div></div>\r\n                    : <div className=\"uk-text-right\"><div className=\"uk-text-lead uk-text-bolder\">{getCurrencyIcon(userLocation.data || 'IN')} {priceAfterShipping}</div></div>\r\n                }\r\n\r\n              </div>\r\n            }\r\n\r\n            {\r\n              props.paymentMode === 'paypal' &&\r\n              cartTotalPrice !== 0 &&\r\n              <PayPalPayment\r\n                cartTotalPrice={totalAfterDiscount}\r\n                cartTotalWithShipping={priceAfterShipping}\r\n                quantityCount={quantityCount}\r\n                isStandard={props.shippingType === 'standard'}\r\n                paymentMode={props.paymentMode}\r\n                setContainerIsCard={setContainerIsCard}\r\n                cartOrderId={cartOrderId} />\r\n            }\r\n            {\r\n              noAddressError && \r\n              <div className=\"login-error-message\">\r\n                    <span className=\"uk-notification-message-danger\"> Please add contact and shipping information </span>\r\n              </div>\r\n            }\r\n            {\r\n              props.paymentMode !== 'paypal' && !showCodContainer &&\r\n              <>\r\n              {\r\n                  !checkout._isFetchCodCodeSuccess && checkout._isError &&\r\n                  <div className=\"login-error-message\">\r\n                    <span className=\"uk-notification-message-danger\"> {checkout.message} </span>\r\n                  </div>\r\n                }\r\n                <button\r\n                  disabled={checkout._isLoading || cartTotalPrice === 0}\r\n                  className=\"uk-button uk-button-primary uk-margin-small uk-width-1-1\"\r\n                  onClick={() => proceedWithPayment()}\r\n                >{checkout._isLoading && <div uk-spinner=\"true\"></div>}\r\n              checkout</button>\r\n                \r\n              </>\r\n            } {\r\n              showCodContainer &&\r\n              <button className=\"uk-button uk-button-primary uk-margin-small uk-width-1-1\"\r\n                disabled={checkout._isLoading || cartTotalPrice === 0}\r\n                onClick={() => { checkout._isFetchCodCodeSuccess ? successCod() : proceedWithPayment() }}>\r\n                {checkout._isFetchCodCodeSuccess ? 'Place Order' : 'Checkout'}\r\n              </button>\r\n            }\r\n          </section>\r\n        </div>\r\n      </div>\r\n      {\r\n        props.paymentMode !== 'paypal' && \r\n        <>\r\n        <button ref={paymentLoadingRef} id=\"payment-loading\" uk-toggle=\"target: #my-id\" type=\"button\"></button>\r\n      <div id=\"my-id\" uk-modal=\"true; esc-close: false; bg-close: false\">\r\n        <div className=\"uk-modal-dialog uk-modal-body uk-margin-auto-vertical\">\r\n          {\r\n            (paymentSuccess || paymentError) && <button className=\"uk-modal-close-default\" type=\"button\" uk-close=\"true\"></button>\r\n          }\r\n          <div className=\"uk-modal-body uk-nav-center\">\r\n            <p>{paymentMessage}</p>\r\n            {\r\n              !paymentSuccess && !paymentError && <div uk-spinner=\"true\"></div>\r\n            }\r\n            {\r\n              paymentSuccess && !paymentError &&\r\n              <>\r\n                <span className=\"uk-label uk-label-success\">Redirecting to Orders <div uk-spinner=\"true\"></div></span>\r\n              </>\r\n            }\r\n            {\r\n              paymentError && <span className=\"uk-label uk-label-danger\">Payment Failed</span>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n        </>\r\n      }\r\n      \r\n    </>\r\n  )\r\n};\r\n\r\nexport {\r\n  CheckoutPrice\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { UserInformation } from 'components/user';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, UserLocation, getUser } from 'reducers';\r\nimport { CheckoutPrice } from './CheckoutPrice';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst CheckoutContainer: React.FunctionComponent = () => {\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [paymentMode, setPaymentMode] = useState('online');\r\n  const [cartTotal, setCartTotal] = useState(0);\r\n  const [internationalShipping,setInternationalShipping] = useState('standard');\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n\r\n  useEffect(() => {\r\n    if (userLocation.data === 'USD') {\r\n      setPaymentMode('paypal');\r\n    }\r\n  }, [userLocation.data]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getUser());\r\n  },[])\r\n  return (\r\n    <main>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n            <section className=\"uk-text-center\">\r\n              <a className=\"uk-link-muted uk-text-small\" onClick={()=> history.push('/cart')}><span className=\"uk-margin-xsmall-right\" uk-icon=\"icon: arrow-left; ratio: .75;\"></span>Return to cart</a>\r\n              <h1 className=\"uk-margin-small-top uk-margin-remove-bottom\">Checkout</h1>\r\n            </section>\r\n            <section>\r\n              <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n                <div className=\"uk-form-stacked uk-width-1-1 tm-checkout uk-width-expand@m\">\r\n                  <div className=\"uk-grid-medium uk-child-width-1-1\" uk-grid=\"true\">\r\n                    <section>\r\n                      <h2 className=\"tm-checkout-title\">Contact And Shipping Information</h2>\r\n                      <div className=\"uk-grid-medium\" uk-grid=\"true\">\r\n                        <UserInformation user={userData} fromCart={true} />\r\n                      </div>\r\n                    </section>\r\n                    {\r\n                      userLocation.data === 'IN' &&\r\n                      <section>\r\n                        <h2 className=\"tm-checkout-title\">Payment</h2>\r\n                        <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n                          <div className=\"uk-card-body\">\r\n                            <div className=\"uk-grid-small uk-grid-match uk-child-width-1-1 uk-child-width-1-2@s uk-flex-center\" uk-switcher=\"toggle: &gt; * &gt; .tm-choose\" uk-grid=\"true\">\r\n                              <div onClick={() => setPaymentMode('online')}>\r\n                                <a className={paymentMode === \"online\" ? \"tm-choose uk-active\" : \"tm-choose\"} href=\"#\">\r\n                                  <div className=\"tm-choose-title\">Online (via Razorpay)</div>\r\n                                  <div className=\"tm-choose-description\">Visa, MasterCard, all Other Cards</div>\r\n                                </a>\r\n                              </div>\r\n                              <div onClick={() => setPaymentMode('cod')}>\r\n                                <a className={paymentMode === \"cod\" ? \"tm-choose uk-active\" : \"tm-choose\"} href=\"#\">\r\n                                  <div className=\"tm-choose-title\">Cash On Delivery</div>\r\n                                  <div className=\"tm-choose-description\">Order now pay later</div>\r\n                                </a>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      </section>\r\n                    }\r\n                    {\r\n                      userLocation.data !== 'IN' &&\r\n                      <section>\r\n                        <h2 className=\"tm-checkout-title\">Shippment</h2>\r\n                        <div className=\"uk-card uk-card-default uk-card-small tm-ignore-container\">\r\n                          <div className=\"uk-card-body\">\r\n                            <div className=\"uk-grid-small uk-grid-match uk-child-width-1-1 uk-child-width-1-2@s uk-flex-center\" uk-switcher=\"toggle: &gt; * &gt; .tm-choose\" uk-grid=\"true\">\r\n                              <div onClick={()=>setInternationalShipping('standard')}>\r\n                                <a className={internationalShipping === \"standard\" ? \"tm-choose uk-active\" : \"tm-choose\"} href=\"#\">\r\n                                  <div className=\"tm-choose-title\">Standard</div>\r\n                                  <div className=\"tm-choose-description\">India Post</div>\r\n                                  <div className=\"tm-choose-description\">Shipping cost $10 first item then $6 on every additional item.</div>\r\n                                </a>\r\n                              </div>\r\n                              <div onClick={()=>setInternationalShipping('express')}>\r\n                                <a className={internationalShipping === \"express\" ? \"tm-choose uk-active\" : \"tm-choose\"} href=\"#\">\r\n                                  <div className=\"tm-choose-title\">Express</div>\r\n                                  <div className=\"tm-choose-description\">Blue Dart/Fedex/DHL/Others</div>\r\n                                  <div className=\"tm-choose-description\">Shipping cost $18 first item then $10 on every additional item.</div>\r\n                                </a>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      </section>\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <CheckoutPrice paymentMode={paymentMode} shippingType={internationalShipping} setCartTotal={setCartTotal} />\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  CheckoutContainer\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst SubBanner: React.FunctionComponent = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <section className=\"uk-section uk-section-default uk-section-small\">\r\n      <div className=\"uk-container\">\r\n        <div className=\"uk-grid-small uk-child-width-1-2 uk-child-width-1-3@s uk-child-width-1-5@m\" uk-grid=\"true\">\r\n          <div>\r\n            <a onClick={()=>history.push('/product/bindi')} className=\"uk-link-muted uk-text-center uk-display-block uk-padding-small uk-box-shadow-hover-large\">\r\n              <div className=\"tm-ratio tm-ratio-4-3\">\r\n                <div className=\"tm-media-box\">\r\n                  <figure className=\"tm-media-box-wrap\"><img className=\"item-brand\" src=\"/sb_2.png\" alt=\"footwear\" /></figure>\r\n                </div>\r\n              </div>\r\n              <div className=\"uk-margin-small-top\">\r\n                <div className=\"uk-text-truncate\">Bindi</div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <a onClick={()=>history.push('/product/footwear')}  className=\"uk-link-muted uk-text-center uk-display-block uk-padding-small uk-box-shadow-hover-large\" >\r\n              <div className=\"tm-ratio tm-ratio-4-3\">\r\n                <div className=\"tm-media-box\">\r\n                  <figure className=\"tm-media-box-wrap\"><img className=\"item-brand\" src=\"/sb_1.png\" alt=\"Bindi\" /></figure>\r\n                </div>\r\n              </div>\r\n              <div className=\"uk-margin-small-top\">\r\n                <div className=\"uk-text-truncate\">Footwear</div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <a className=\"uk-link-muted uk-text-center uk-display-block uk-padding-small uk-box-shadow-hover-large\" href=\"#\">\r\n              <div className=\"tm-ratio tm-ratio-4-3\">\r\n                <div className=\"tm-media-box\">\r\n                  <figure className=\"tm-media-box-wrap\"><img className=\"item-brand\" src=\"/sb_3.png\" alt=\"Accessories\" /></figure>\r\n                </div>\r\n              </div>\r\n              <div className=\"uk-margin-small-top\">\r\n                <div className=\"uk-text-truncate\">Homedecore</div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <a onClick={()=>history.push('/product/lingerie')}  className=\"uk-link-muted uk-text-center uk-display-block uk-padding-small uk-box-shadow-hover-large\">\r\n              <div className=\"tm-ratio tm-ratio-4-3\">\r\n                <div className=\"tm-media-box\">\r\n                  <figure className=\"tm-media-box-wrap\"><img className=\"item-brand\" src=\"/sb_4.png\" alt=\"Home Decor\" /></figure>\r\n                </div>\r\n              </div>\r\n              <div className=\"uk-margin-small-top\">\r\n                <div className=\"uk-text-truncate\">Lingerie</div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <a className=\"uk-link-muted uk-text-center uk-display-block uk-padding-small uk-box-shadow-hover-large\" href=\"#\">\r\n              <div className=\"tm-ratio tm-ratio-4-3\">\r\n                <div className=\"tm-media-box\">\r\n                  <figure className=\"tm-media-box-wrap\"><img className=\"item-brand\" src=\"/test.jpg\" alt=\"Home Decor\" /></figure>\r\n                </div>\r\n              </div>\r\n              <div className=\"uk-margin-small-top\">\r\n                <div className=\"uk-text-truncate\">Cosmetics</div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport {\r\n  SubBanner\r\n}","import React from 'react';\r\n\r\nconst Banner: React.FunctionComponent = () => {\r\n  return (\r\n    <section className=\"uk-position-relative uk-visible-toggle uk-light\" uk-slideshow=\"ratio: 8.2:3; min-height:175\">\r\n      <ul className=\"uk-slideshow-items\">\r\n        <li style={{ backgroundColor: \"#0b0a12\" }}>\r\n          <a>\r\n            <figure className=\"uk-container uk-height-1-1\"><img src=\"/banner_first.jpg\" alt=\"New Macbook\"  uk-cover=\"true\" /></figure>\r\n          </a>\r\n        </li>\r\n        <li style={{ backgroundColor: \"#0b0a12\" }}>\r\n          <a>\r\n            <figure className=\"uk-container uk-height-1-1\"><img src=\"/banner_two.jpg\" alt=\"New Macbook\"  uk-cover=\"true\" /></figure>\r\n          </a>\r\n        </li>\r\n        <li style={{ backgroundColor: \"#ce071e;\" }}>\r\n          <a>\r\n            <figure className=\"uk-container uk-height-1-1\"><img src=\"/banner_three.jpg\" alt=\"iPhone\"  uk-cover=\"true\" /></figure>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <a className=\"uk-position-center-left uk-position-small uk-hidden-hover\" uk-slideshow-item=\"previous\" uk-slidenav-previous=\"true\"></a>\r\n      <a className=\"uk-position-center-right uk-position-small uk-hidden-hover\" uk-slideshow-item=\"next\" uk-slidenav-next=\"true\"></a>\r\n      <div className=\"uk-position-bottom-center uk-position-small\"><ul className=\"uk-slideshow-nav uk-dotnav\"></ul></div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport {\r\n  Banner\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppState, UserLocation, Cart, addUpdateCart } from 'reducers';\r\nimport { ProductItem, CustomerCart } from 'types';\r\nimport { serverImagePath } from 'appConstants';\r\nimport { getCurrencyIcon, calculateUserDiscount, showINRUSD } from 'services';\r\nimport { LoadingProductArticle } from 'components/shared';\r\n\r\n\r\ninterface Props {\r\n  productList: ProductItem[]\r\n}\r\n\r\nconst TrendingLatestProducts: React.FunctionComponent<Props> = (props: Props) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const userLocation = useSelector<AppState, UserLocation>(state => state.userLocation);\r\n  const userData = useSelector((state: AppState) => state.user);\r\n  const cart = useSelector<AppState, Cart>(state => state.cart);\r\n\r\n  const addToCart = (product: ProductItem) => {\r\n    if(!userData.data?.userId){\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: product.productDetailId,\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: showINRUSD(userLocation.data || 'IN', product),\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, false))\r\n    } else {\r\n      const cartData = {\r\n        productDetailId: product.productDetailId,\r\n        productQuantity: '1',\r\n        currencyType: userLocation.data === 'IN' ? 1 : 2,\r\n        cartId: '0',\r\n        productImage: product.imageNames,\r\n        productImagePath: product.imagePaths,\r\n        productName: product.name,\r\n        subcategory: product.productCategoryName,\r\n        productPrice: '0',\r\n        productId: product.productId,\r\n      } as CustomerCart;\r\n  \r\n      dispatch(addUpdateCart(cartData, true));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"uk-grid-collapse uk-child-width-custom tm-products-grid\" uk-grid=\"true\">\r\n      {\r\n        props.productList.length > 0 ?\r\n        props.productList.map((product) => {\r\n          return (\r\n            <article key={product.productId} className=\"tm-product-card\">\r\n              <div className=\"tm-product-card-media\">\r\n                <div className=\"tm-ratio tm-ratio-4-3\">\r\n                  <a className=\"tm-media-box\" onClick={() => {history.push('/productDetails/' + product.productId) }}>\r\n                    <figure className=\"tm-media-box-wrap\"><img src={serverImagePath + product.imagePaths} alt={product.imageNames} /></figure>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              <div className=\"tm-product-card-body\">\r\n                <div className=\"tm-product-card-info\">\r\n                  <div className=\"uk-text-meta uk-margin-xsmall-bottom\">{product.productCategoryName}</div>\r\n                  <h3 className=\"tm-product-card-title\"><a className=\"uk-link-heading\" onClick={() => history.push('/productDetails/' + product.productId)}>{product.name}</a></h3>\r\n                </div>\r\n                <div className=\"tm-product-card-shop\">\r\n                  <div className=\"tm-product-card-prices\">\r\n                    {\r\n                      userData.data?.discount && userData.data?.discount !== '0' &&\r\n                      <del className=\"uk-text-meta\">{getCurrencyIcon(userLocation.data || 'IN')} {showINRUSD(userLocation.data || 'IN', product)}</del>\r\n                    }\r\n                    <div className=\"tm-product-card-price\">\r\n                      {getCurrencyIcon(userLocation.data || 'IN')} {calculateUserDiscount(userData.data?.discount || '0', showINRUSD(userLocation.data || 'IN', product))}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"tm-product-card-add\">\r\n                    <button className=\"uk-button uk-button-primary tm-product-card-add-button tm-shine js-add-to-cart\">\r\n                      {\r\n                        cart._isLoading && <span uk-spinner=\"true\"></span>\r\n                      }\r\n                      {\r\n                        !cart._isLoading && (\r\n                          <>\r\n                            <span className=\"tm-product-card-add-button-icon\" uk-icon=\"cart\" onClick={() => addToCart(product)}></span>\r\n                            <span className=\"tm-product-card-add-button-text\">add to cart</span>\r\n                          </>\r\n                        )\r\n                      }\r\n\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </article>\r\n          )\r\n        }) : Array(4).fill(1).map((value, index) => <LoadingProductArticle keyIndex={index}/>)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {\r\n  TrendingLatestProducts\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState } from 'reducers';\r\nimport { ProductItem } from 'types';\r\nimport { TrendingLatestProducts } from '.';\r\n\r\nconst TrendingLatestContainer: React.FunctionComponent = () => {\r\n\r\n  const latestProducts = useSelector<AppState, ProductItem[]>(state => state.latestProduct.data || []);\r\n  const trendingProducts = useSelector<AppState, ProductItem[]>(state => state.trendingProduct.data || []);\r\n\r\n  return (\r\n    <>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <h2 className=\"uk-text-center\">Trending Items</h2>\r\n          <div className=\"uk-card uk-card-default tm-ignore-container\">\r\n           <TrendingLatestProducts productList={trendingProducts} />\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"uk-section uk-section-small\">\r\n        <div className=\"uk-container\">\r\n          <h2 className=\"uk-text-center\">Latest Items</h2>\r\n          <div className=\"uk-card uk-card-default tm-ignore-container\">\r\n           <TrendingLatestProducts productList={latestProducts} />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nexport {\r\n  TrendingLatestContainer\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getTrendingProduct, getLatestProduct, AppState } from 'reducers';\r\nimport { SubBanner } from './SubBanner';\r\nimport { Banner } from './Banner';\r\nimport { TrendingLatestContainer } from './trendingLatest';\r\nimport { PromoBanner } from './PromoBanner';\r\n\r\n\r\nconst HomePageContainer: React.FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getTrendingProduct());\r\n    dispatch(getLatestProduct());\r\n  },[])\r\n  return (\r\n    <main>\r\n      <Banner/>\r\n      <SubBanner/>\r\n      <TrendingLatestContainer/>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport {\r\n  HomePageContainer\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { Router, Switch, Route } from \"react-router-dom\";\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport './index.css';\r\nimport { UserContainer } from 'components/user';\r\nimport { UserLogin } from 'components/login'\r\nimport { MainFooter } from 'components/footer';\r\nimport { Navigation } from 'components/pilot';\r\nimport { MainContainer } from 'components/admin/MainContainer';\r\nimport { CustomerContainer } from 'components/customer';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { store } from 'reducers';\r\nimport { CustomerProductDetails } from 'components/customer/ProductDetails';\r\nimport { CustomerProductDetailsConstainer } from 'components/customer/ProductDetails/CustomerProductDetailsContainer';\r\nimport { CustomerCartContainer } from 'components/customer/Cart';\r\nimport { CheckoutContainer } from 'components/customer/Checkout';\r\nimport { HomePageContainer } from 'components/customer/Home';\r\nimport {ContactUs, ScrollToTop} from 'components/shared';\r\n\r\n\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <Router history={createBrowserHistory()}>\r\n      <ScrollToTop />\r\n        <Navigation />\r\n          <Switch>\r\n          <Route path=\"/\" exact>\r\n              <HomePageContainer />\r\n            </Route>\r\n            <Route path=\"/userinformation/:userTab?\" exact>\r\n              <UserContainer />\r\n            </Route>\r\n            <Route path=\"/login\" exact>\r\n              <UserLogin />\r\n            </Route>\r\n            <Route path=\"/admin/:product?/:productId?\" exact>\r\n              <MainContainer />\r\n            </Route>\r\n            <Route path=\"/product/:product/:filterOn?\" exact>\r\n              <CustomerContainer />\r\n            </Route>\r\n            <Route path=\"/productDetails/:queryProductId\" exact>\r\n              <CustomerProductDetailsConstainer />\r\n            </Route>\r\n            <Route path=\"/cart\" exact>\r\n              <CustomerCartContainer/>\r\n            </Route>\r\n            <Route path=\"/checkout\" exact>\r\n              <CheckoutContainer/>\r\n            </Route>\r\n            <Route path=\"/contactus\" exact>\r\n              <ContactUs/>\r\n            </Route>\r\n          </Switch>\r\n        <MainFooter />\r\n      </Router>\r\n    </React.StrictMode>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(\r\n  app,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}